{
  "swagger": "2.0",
  "info": {
    "title": "Azure appplatform",
    "version": "2023-12-01",
    "description": "Azure appplatform service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get a Service and its properties.",
        "operationId": "Services_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the corresponding Service.",
            "schema": {
              "description": "Service resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "location": {
                  "description": "The GEO location of the resource.",
                  "type": "string"
                },
                "tags": {
                  "description": "Tags of the service which is a list of key value pairs that describe the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Service resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Service",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Starting",
                        "Stopping",
                        "Deleting",
                        "Deleted",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Moved",
                        "MoveFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "networkProfile": {
                      "description": "Network profile of the Service",
                      "type": "object",
                      "properties": {
                        "serviceRuntimeSubnetId": {
                          "description": "Fully qualified resource Id of the subnet to host Azure Spring Apps Service Runtime",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "appSubnetId": {
                          "description": "Fully qualified resource Id of the subnet to host customer apps in Azure Spring Apps",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "serviceCidr": {
                          "description": "Azure Spring Apps service reserved CIDR",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "serviceRuntimeNetworkResourceGroup": {
                          "description": "Name of the resource group containing network resources of Azure Spring Apps Service Runtime",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "appNetworkResourceGroup": {
                          "description": "Name of the resource group containing network resources for customer apps in Azure Spring Apps",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "outboundIPs": {
                          "description": "Desired outbound IP resources for Azure Spring Apps resource.",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "publicIPs": {
                              "type": "array",
                              "readOnly": true,
                              "items": {
                                "type": "string"
                              },
                              "description": "A list of public IP addresses."
                            }
                          }
                        },
                        "requiredTraffics": {
                          "description": "Required inbound or outbound traffics for Azure Spring Apps resource.",
                          "type": "array",
                          "readOnly": true,
                          "items": {
                            "description": "Required inbound or outbound traffic for Azure Spring Apps resource.",
                            "type": "object",
                            "properties": {
                              "protocol": {
                                "description": "The protocol of required traffic",
                                "type": "string",
                                "readOnly": true
                              },
                              "port": {
                                "description": "The port of required traffic",
                                "type": "integer",
                                "format": "int32",
                                "readOnly": true
                              },
                              "ips": {
                                "description": "The ip list of required traffic",
                                "type": "array",
                                "readOnly": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "fqdns": {
                                "description": "The FQDN list of required traffic",
                                "type": "array",
                                "readOnly": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "direction": {
                                "description": "The direction of required traffic",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Inbound",
                                  "Outbound"
                                ],
                                "x-ms-enum": {
                                  "name": "trafficDirection",
                                  "modelAsString": true
                                }
                              }
                            }
                          }
                        },
                        "ingressConfig": {
                          "description": "Ingress configuration payload for Azure Spring Apps resource.",
                          "type": "object",
                          "properties": {
                            "readTimeoutInSeconds": {
                              "format": "int32",
                              "description": "Ingress read time out in seconds.",
                              "type": "integer"
                            }
                          }
                        },
                        "outboundType": {
                          "description": "The egress traffic type of Azure Spring Apps VNet instances.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "vnetAddons": {
                      "description": "Additional Service settings in vnet injection instance",
                      "type": "object",
                      "properties": {
                        "logStreamPublicEndpoint": {
                          "description": "Indicates whether the log stream in vnet injection instance could be accessed from internet.",
                          "type": "boolean",
                          "default": false
                        },
                        "dataPlanePublicEndpoint": {
                          "description": "Indicates whether the data plane components(log stream, app connect, remote debugging) in vnet injection instance could be accessed from internet.",
                          "type": "boolean",
                          "default": false
                        }
                      }
                    },
                    "version": {
                      "format": "int32",
                      "description": "Version of the Service",
                      "type": "integer",
                      "readOnly": true
                    },
                    "serviceId": {
                      "description": "ServiceInstanceEntity Id which uniquely identifies a created resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "powerState": {
                      "description": "Power state of the Service",
                      "enum": [
                        "Running",
                        "Stopped"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "PowerState",
                        "modelAsString": true
                      }
                    },
                    "zoneRedundant": {
                      "type": "boolean",
                      "default": false,
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "fqdn": {
                      "description": "Fully qualified dns name of the service instance",
                      "type": "string",
                      "readOnly": true
                    },
                    "marketplaceResource": {
                      "description": "Purchasing 3rd party product of the Service resource.",
                      "type": "object",
                      "properties": {
                        "plan": {
                          "description": "The plan id of the 3rd Party Artifact that is being procured.",
                          "type": "string"
                        },
                        "publisher": {
                          "description": "The publisher id of the 3rd Party Artifact that is being bought.",
                          "type": "string"
                        },
                        "product": {
                          "description": "The 3rd Party artifact that is being procured.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the Service resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Create a new Service or update an exiting Service.",
        "operationId": "Services_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "description": "Service resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "location": {
                  "description": "The GEO location of the resource.",
                  "type": "string"
                },
                "tags": {
                  "description": "Tags of the service which is a list of key value pairs that describe the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Service resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Service",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Starting",
                        "Stopping",
                        "Deleting",
                        "Deleted",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Moved",
                        "MoveFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "networkProfile": {
                      "description": "Network profile of the Service",
                      "type": "object",
                      "properties": {
                        "serviceRuntimeSubnetId": {
                          "description": "Fully qualified resource Id of the subnet to host Azure Spring Apps Service Runtime",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "appSubnetId": {
                          "description": "Fully qualified resource Id of the subnet to host customer apps in Azure Spring Apps",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "serviceCidr": {
                          "description": "Azure Spring Apps service reserved CIDR",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "serviceRuntimeNetworkResourceGroup": {
                          "description": "Name of the resource group containing network resources of Azure Spring Apps Service Runtime",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "appNetworkResourceGroup": {
                          "description": "Name of the resource group containing network resources for customer apps in Azure Spring Apps",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "outboundIPs": {
                          "description": "Desired outbound IP resources for Azure Spring Apps resource.",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "publicIPs": {
                              "type": "array",
                              "readOnly": true,
                              "items": {
                                "type": "string"
                              },
                              "description": "A list of public IP addresses."
                            }
                          }
                        },
                        "requiredTraffics": {
                          "description": "Required inbound or outbound traffics for Azure Spring Apps resource.",
                          "type": "array",
                          "readOnly": true,
                          "items": {
                            "description": "Required inbound or outbound traffic for Azure Spring Apps resource.",
                            "type": "object",
                            "properties": {
                              "protocol": {
                                "description": "The protocol of required traffic",
                                "type": "string",
                                "readOnly": true
                              },
                              "port": {
                                "description": "The port of required traffic",
                                "type": "integer",
                                "format": "int32",
                                "readOnly": true
                              },
                              "ips": {
                                "description": "The ip list of required traffic",
                                "type": "array",
                                "readOnly": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "fqdns": {
                                "description": "The FQDN list of required traffic",
                                "type": "array",
                                "readOnly": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "direction": {
                                "description": "The direction of required traffic",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Inbound",
                                  "Outbound"
                                ],
                                "x-ms-enum": {
                                  "name": "trafficDirection",
                                  "modelAsString": true
                                }
                              }
                            }
                          }
                        },
                        "ingressConfig": {
                          "description": "Ingress configuration payload for Azure Spring Apps resource.",
                          "type": "object",
                          "properties": {
                            "readTimeoutInSeconds": {
                              "format": "int32",
                              "description": "Ingress read time out in seconds.",
                              "type": "integer"
                            }
                          }
                        },
                        "outboundType": {
                          "description": "The egress traffic type of Azure Spring Apps VNet instances.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "vnetAddons": {
                      "description": "Additional Service settings in vnet injection instance",
                      "type": "object",
                      "properties": {
                        "logStreamPublicEndpoint": {
                          "description": "Indicates whether the log stream in vnet injection instance could be accessed from internet.",
                          "type": "boolean",
                          "default": false
                        },
                        "dataPlanePublicEndpoint": {
                          "description": "Indicates whether the data plane components(log stream, app connect, remote debugging) in vnet injection instance could be accessed from internet.",
                          "type": "boolean",
                          "default": false
                        }
                      }
                    },
                    "version": {
                      "format": "int32",
                      "description": "Version of the Service",
                      "type": "integer",
                      "readOnly": true
                    },
                    "serviceId": {
                      "description": "ServiceInstanceEntity Id which uniquely identifies a created resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "powerState": {
                      "description": "Power state of the Service",
                      "enum": [
                        "Running",
                        "Stopped"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "PowerState",
                        "modelAsString": true
                      }
                    },
                    "zoneRedundant": {
                      "type": "boolean",
                      "default": false,
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "fqdn": {
                      "description": "Fully qualified dns name of the service instance",
                      "type": "string",
                      "readOnly": true
                    },
                    "marketplaceResource": {
                      "description": "Purchasing 3rd party product of the Service resource.",
                      "type": "object",
                      "properties": {
                        "plan": {
                          "description": "The plan id of the 3rd Party Artifact that is being procured.",
                          "type": "string"
                        },
                        "publisher": {
                          "description": "The publisher id of the 3rd Party Artifact that is being bought.",
                          "type": "string"
                        },
                        "product": {
                          "description": "The 3rd Party artifact that is being procured.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the Service resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated Service.",
            "schema": {
              "description": "Service resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "location": {
                  "description": "The GEO location of the resource.",
                  "type": "string"
                },
                "tags": {
                  "description": "Tags of the service which is a list of key value pairs that describe the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Service resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Service",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Starting",
                        "Stopping",
                        "Deleting",
                        "Deleted",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Moved",
                        "MoveFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "networkProfile": {
                      "description": "Network profile of the Service",
                      "type": "object",
                      "properties": {
                        "serviceRuntimeSubnetId": {
                          "description": "Fully qualified resource Id of the subnet to host Azure Spring Apps Service Runtime",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "appSubnetId": {
                          "description": "Fully qualified resource Id of the subnet to host customer apps in Azure Spring Apps",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "serviceCidr": {
                          "description": "Azure Spring Apps service reserved CIDR",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "serviceRuntimeNetworkResourceGroup": {
                          "description": "Name of the resource group containing network resources of Azure Spring Apps Service Runtime",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "appNetworkResourceGroup": {
                          "description": "Name of the resource group containing network resources for customer apps in Azure Spring Apps",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "outboundIPs": {
                          "description": "Desired outbound IP resources for Azure Spring Apps resource.",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "publicIPs": {
                              "type": "array",
                              "readOnly": true,
                              "items": {
                                "type": "string"
                              },
                              "description": "A list of public IP addresses."
                            }
                          }
                        },
                        "requiredTraffics": {
                          "description": "Required inbound or outbound traffics for Azure Spring Apps resource.",
                          "type": "array",
                          "readOnly": true,
                          "items": {
                            "description": "Required inbound or outbound traffic for Azure Spring Apps resource.",
                            "type": "object",
                            "properties": {
                              "protocol": {
                                "description": "The protocol of required traffic",
                                "type": "string",
                                "readOnly": true
                              },
                              "port": {
                                "description": "The port of required traffic",
                                "type": "integer",
                                "format": "int32",
                                "readOnly": true
                              },
                              "ips": {
                                "description": "The ip list of required traffic",
                                "type": "array",
                                "readOnly": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "fqdns": {
                                "description": "The FQDN list of required traffic",
                                "type": "array",
                                "readOnly": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "direction": {
                                "description": "The direction of required traffic",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Inbound",
                                  "Outbound"
                                ],
                                "x-ms-enum": {
                                  "name": "trafficDirection",
                                  "modelAsString": true
                                }
                              }
                            }
                          }
                        },
                        "ingressConfig": {
                          "description": "Ingress configuration payload for Azure Spring Apps resource.",
                          "type": "object",
                          "properties": {
                            "readTimeoutInSeconds": {
                              "format": "int32",
                              "description": "Ingress read time out in seconds.",
                              "type": "integer"
                            }
                          }
                        },
                        "outboundType": {
                          "description": "The egress traffic type of Azure Spring Apps VNet instances.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "vnetAddons": {
                      "description": "Additional Service settings in vnet injection instance",
                      "type": "object",
                      "properties": {
                        "logStreamPublicEndpoint": {
                          "description": "Indicates whether the log stream in vnet injection instance could be accessed from internet.",
                          "type": "boolean",
                          "default": false
                        },
                        "dataPlanePublicEndpoint": {
                          "description": "Indicates whether the data plane components(log stream, app connect, remote debugging) in vnet injection instance could be accessed from internet.",
                          "type": "boolean",
                          "default": false
                        }
                      }
                    },
                    "version": {
                      "format": "int32",
                      "description": "Version of the Service",
                      "type": "integer",
                      "readOnly": true
                    },
                    "serviceId": {
                      "description": "ServiceInstanceEntity Id which uniquely identifies a created resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "powerState": {
                      "description": "Power state of the Service",
                      "enum": [
                        "Running",
                        "Stopped"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "PowerState",
                        "modelAsString": true
                      }
                    },
                    "zoneRedundant": {
                      "type": "boolean",
                      "default": false,
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "fqdn": {
                      "description": "Fully qualified dns name of the service instance",
                      "type": "string",
                      "readOnly": true
                    },
                    "marketplaceResource": {
                      "description": "Purchasing 3rd party product of the Service resource.",
                      "type": "object",
                      "properties": {
                        "plan": {
                          "description": "The plan id of the 3rd Party Artifact that is being procured.",
                          "type": "string"
                        },
                        "publisher": {
                          "description": "The publisher id of the 3rd Party Artifact that is being bought.",
                          "type": "string"
                        },
                        "product": {
                          "description": "The 3rd Party artifact that is being procured.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the Service resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created. The response describes the new Service and contains an Azure-AsyncOperation header to query the operation result.",
            "schema": {
              "description": "Service resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "location": {
                  "description": "The GEO location of the resource.",
                  "type": "string"
                },
                "tags": {
                  "description": "Tags of the service which is a list of key value pairs that describe the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Service resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Service",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Starting",
                        "Stopping",
                        "Deleting",
                        "Deleted",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Moved",
                        "MoveFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "networkProfile": {
                      "description": "Network profile of the Service",
                      "type": "object",
                      "properties": {
                        "serviceRuntimeSubnetId": {
                          "description": "Fully qualified resource Id of the subnet to host Azure Spring Apps Service Runtime",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "appSubnetId": {
                          "description": "Fully qualified resource Id of the subnet to host customer apps in Azure Spring Apps",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "serviceCidr": {
                          "description": "Azure Spring Apps service reserved CIDR",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "serviceRuntimeNetworkResourceGroup": {
                          "description": "Name of the resource group containing network resources of Azure Spring Apps Service Runtime",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "appNetworkResourceGroup": {
                          "description": "Name of the resource group containing network resources for customer apps in Azure Spring Apps",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "outboundIPs": {
                          "description": "Desired outbound IP resources for Azure Spring Apps resource.",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "publicIPs": {
                              "type": "array",
                              "readOnly": true,
                              "items": {
                                "type": "string"
                              },
                              "description": "A list of public IP addresses."
                            }
                          }
                        },
                        "requiredTraffics": {
                          "description": "Required inbound or outbound traffics for Azure Spring Apps resource.",
                          "type": "array",
                          "readOnly": true,
                          "items": {
                            "description": "Required inbound or outbound traffic for Azure Spring Apps resource.",
                            "type": "object",
                            "properties": {
                              "protocol": {
                                "description": "The protocol of required traffic",
                                "type": "string",
                                "readOnly": true
                              },
                              "port": {
                                "description": "The port of required traffic",
                                "type": "integer",
                                "format": "int32",
                                "readOnly": true
                              },
                              "ips": {
                                "description": "The ip list of required traffic",
                                "type": "array",
                                "readOnly": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "fqdns": {
                                "description": "The FQDN list of required traffic",
                                "type": "array",
                                "readOnly": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "direction": {
                                "description": "The direction of required traffic",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Inbound",
                                  "Outbound"
                                ],
                                "x-ms-enum": {
                                  "name": "trafficDirection",
                                  "modelAsString": true
                                }
                              }
                            }
                          }
                        },
                        "ingressConfig": {
                          "description": "Ingress configuration payload for Azure Spring Apps resource.",
                          "type": "object",
                          "properties": {
                            "readTimeoutInSeconds": {
                              "format": "int32",
                              "description": "Ingress read time out in seconds.",
                              "type": "integer"
                            }
                          }
                        },
                        "outboundType": {
                          "description": "The egress traffic type of Azure Spring Apps VNet instances.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "vnetAddons": {
                      "description": "Additional Service settings in vnet injection instance",
                      "type": "object",
                      "properties": {
                        "logStreamPublicEndpoint": {
                          "description": "Indicates whether the log stream in vnet injection instance could be accessed from internet.",
                          "type": "boolean",
                          "default": false
                        },
                        "dataPlanePublicEndpoint": {
                          "description": "Indicates whether the data plane components(log stream, app connect, remote debugging) in vnet injection instance could be accessed from internet.",
                          "type": "boolean",
                          "default": false
                        }
                      }
                    },
                    "version": {
                      "format": "int32",
                      "description": "Version of the Service",
                      "type": "integer",
                      "readOnly": true
                    },
                    "serviceId": {
                      "description": "ServiceInstanceEntity Id which uniquely identifies a created resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "powerState": {
                      "description": "Power state of the Service",
                      "enum": [
                        "Running",
                        "Stopped"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "PowerState",
                        "modelAsString": true
                      }
                    },
                    "zoneRedundant": {
                      "type": "boolean",
                      "default": false,
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "fqdn": {
                      "description": "Fully qualified dns name of the service instance",
                      "type": "string",
                      "readOnly": true
                    },
                    "marketplaceResource": {
                      "description": "Purchasing 3rd party product of the Service resource.",
                      "type": "object",
                      "properties": {
                        "plan": {
                          "description": "The plan id of the 3rd Party Artifact that is being procured.",
                          "type": "string"
                        },
                        "publisher": {
                          "description": "The publisher id of the 3rd Party Artifact that is being bought.",
                          "type": "string"
                        },
                        "product": {
                          "description": "The 3rd Party artifact that is being procured.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the Service resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The response indicates the exiting Service is now updating and contains a Location\r\nheader to query the operation result.",
            "schema": {
              "description": "Service resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "location": {
                  "description": "The GEO location of the resource.",
                  "type": "string"
                },
                "tags": {
                  "description": "Tags of the service which is a list of key value pairs that describe the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Service resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Service",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Starting",
                        "Stopping",
                        "Deleting",
                        "Deleted",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Moved",
                        "MoveFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "networkProfile": {
                      "description": "Network profile of the Service",
                      "type": "object",
                      "properties": {
                        "serviceRuntimeSubnetId": {
                          "description": "Fully qualified resource Id of the subnet to host Azure Spring Apps Service Runtime",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "appSubnetId": {
                          "description": "Fully qualified resource Id of the subnet to host customer apps in Azure Spring Apps",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "serviceCidr": {
                          "description": "Azure Spring Apps service reserved CIDR",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "serviceRuntimeNetworkResourceGroup": {
                          "description": "Name of the resource group containing network resources of Azure Spring Apps Service Runtime",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "appNetworkResourceGroup": {
                          "description": "Name of the resource group containing network resources for customer apps in Azure Spring Apps",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "outboundIPs": {
                          "description": "Desired outbound IP resources for Azure Spring Apps resource.",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "publicIPs": {
                              "type": "array",
                              "readOnly": true,
                              "items": {
                                "type": "string"
                              },
                              "description": "A list of public IP addresses."
                            }
                          }
                        },
                        "requiredTraffics": {
                          "description": "Required inbound or outbound traffics for Azure Spring Apps resource.",
                          "type": "array",
                          "readOnly": true,
                          "items": {
                            "description": "Required inbound or outbound traffic for Azure Spring Apps resource.",
                            "type": "object",
                            "properties": {
                              "protocol": {
                                "description": "The protocol of required traffic",
                                "type": "string",
                                "readOnly": true
                              },
                              "port": {
                                "description": "The port of required traffic",
                                "type": "integer",
                                "format": "int32",
                                "readOnly": true
                              },
                              "ips": {
                                "description": "The ip list of required traffic",
                                "type": "array",
                                "readOnly": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "fqdns": {
                                "description": "The FQDN list of required traffic",
                                "type": "array",
                                "readOnly": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "direction": {
                                "description": "The direction of required traffic",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Inbound",
                                  "Outbound"
                                ],
                                "x-ms-enum": {
                                  "name": "trafficDirection",
                                  "modelAsString": true
                                }
                              }
                            }
                          }
                        },
                        "ingressConfig": {
                          "description": "Ingress configuration payload for Azure Spring Apps resource.",
                          "type": "object",
                          "properties": {
                            "readTimeoutInSeconds": {
                              "format": "int32",
                              "description": "Ingress read time out in seconds.",
                              "type": "integer"
                            }
                          }
                        },
                        "outboundType": {
                          "description": "The egress traffic type of Azure Spring Apps VNet instances.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "vnetAddons": {
                      "description": "Additional Service settings in vnet injection instance",
                      "type": "object",
                      "properties": {
                        "logStreamPublicEndpoint": {
                          "description": "Indicates whether the log stream in vnet injection instance could be accessed from internet.",
                          "type": "boolean",
                          "default": false
                        },
                        "dataPlanePublicEndpoint": {
                          "description": "Indicates whether the data plane components(log stream, app connect, remote debugging) in vnet injection instance could be accessed from internet.",
                          "type": "boolean",
                          "default": false
                        }
                      }
                    },
                    "version": {
                      "format": "int32",
                      "description": "Version of the Service",
                      "type": "integer",
                      "readOnly": true
                    },
                    "serviceId": {
                      "description": "ServiceInstanceEntity Id which uniquely identifies a created resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "powerState": {
                      "description": "Power state of the Service",
                      "enum": [
                        "Running",
                        "Stopped"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "PowerState",
                        "modelAsString": true
                      }
                    },
                    "zoneRedundant": {
                      "type": "boolean",
                      "default": false,
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "fqdn": {
                      "description": "Fully qualified dns name of the service instance",
                      "type": "string",
                      "readOnly": true
                    },
                    "marketplaceResource": {
                      "description": "Purchasing 3rd party product of the Service resource.",
                      "type": "object",
                      "properties": {
                        "plan": {
                          "description": "The plan id of the 3rd Party Artifact that is being procured.",
                          "type": "string"
                        },
                        "publisher": {
                          "description": "The publisher id of the 3rd Party Artifact that is being bought.",
                          "type": "string"
                        },
                        "product": {
                          "description": "The 3rd Party artifact that is being procured.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the Service resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Operation to delete a Service.",
        "operationId": "Services_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response indicates the resource is deleted successfully."
          },
          "202": {
            "description": "Accepted. The response indicates the delete operation is performed in the background."
          },
          "204": {
            "description": "Success. The response indicates the resource is already deleted."
          }
        }
      },
      "patch": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Operation to update an exiting Service.",
        "operationId": "Services_Update",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Parameters for the update operation",
            "required": true,
            "schema": {
              "description": "Service resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "location": {
                  "description": "The GEO location of the resource.",
                  "type": "string"
                },
                "tags": {
                  "description": "Tags of the service which is a list of key value pairs that describe the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Service resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Service",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Starting",
                        "Stopping",
                        "Deleting",
                        "Deleted",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Moved",
                        "MoveFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "networkProfile": {
                      "description": "Network profile of the Service",
                      "type": "object",
                      "properties": {
                        "serviceRuntimeSubnetId": {
                          "description": "Fully qualified resource Id of the subnet to host Azure Spring Apps Service Runtime",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "appSubnetId": {
                          "description": "Fully qualified resource Id of the subnet to host customer apps in Azure Spring Apps",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "serviceCidr": {
                          "description": "Azure Spring Apps service reserved CIDR",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "serviceRuntimeNetworkResourceGroup": {
                          "description": "Name of the resource group containing network resources of Azure Spring Apps Service Runtime",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "appNetworkResourceGroup": {
                          "description": "Name of the resource group containing network resources for customer apps in Azure Spring Apps",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "outboundIPs": {
                          "description": "Desired outbound IP resources for Azure Spring Apps resource.",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "publicIPs": {
                              "type": "array",
                              "readOnly": true,
                              "items": {
                                "type": "string"
                              },
                              "description": "A list of public IP addresses."
                            }
                          }
                        },
                        "requiredTraffics": {
                          "description": "Required inbound or outbound traffics for Azure Spring Apps resource.",
                          "type": "array",
                          "readOnly": true,
                          "items": {
                            "description": "Required inbound or outbound traffic for Azure Spring Apps resource.",
                            "type": "object",
                            "properties": {
                              "protocol": {
                                "description": "The protocol of required traffic",
                                "type": "string",
                                "readOnly": true
                              },
                              "port": {
                                "description": "The port of required traffic",
                                "type": "integer",
                                "format": "int32",
                                "readOnly": true
                              },
                              "ips": {
                                "description": "The ip list of required traffic",
                                "type": "array",
                                "readOnly": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "fqdns": {
                                "description": "The FQDN list of required traffic",
                                "type": "array",
                                "readOnly": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "direction": {
                                "description": "The direction of required traffic",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Inbound",
                                  "Outbound"
                                ],
                                "x-ms-enum": {
                                  "name": "trafficDirection",
                                  "modelAsString": true
                                }
                              }
                            }
                          }
                        },
                        "ingressConfig": {
                          "description": "Ingress configuration payload for Azure Spring Apps resource.",
                          "type": "object",
                          "properties": {
                            "readTimeoutInSeconds": {
                              "format": "int32",
                              "description": "Ingress read time out in seconds.",
                              "type": "integer"
                            }
                          }
                        },
                        "outboundType": {
                          "description": "The egress traffic type of Azure Spring Apps VNet instances.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "vnetAddons": {
                      "description": "Additional Service settings in vnet injection instance",
                      "type": "object",
                      "properties": {
                        "logStreamPublicEndpoint": {
                          "description": "Indicates whether the log stream in vnet injection instance could be accessed from internet.",
                          "type": "boolean",
                          "default": false
                        },
                        "dataPlanePublicEndpoint": {
                          "description": "Indicates whether the data plane components(log stream, app connect, remote debugging) in vnet injection instance could be accessed from internet.",
                          "type": "boolean",
                          "default": false
                        }
                      }
                    },
                    "version": {
                      "format": "int32",
                      "description": "Version of the Service",
                      "type": "integer",
                      "readOnly": true
                    },
                    "serviceId": {
                      "description": "ServiceInstanceEntity Id which uniquely identifies a created resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "powerState": {
                      "description": "Power state of the Service",
                      "enum": [
                        "Running",
                        "Stopped"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "PowerState",
                        "modelAsString": true
                      }
                    },
                    "zoneRedundant": {
                      "type": "boolean",
                      "default": false,
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "fqdn": {
                      "description": "Fully qualified dns name of the service instance",
                      "type": "string",
                      "readOnly": true
                    },
                    "marketplaceResource": {
                      "description": "Purchasing 3rd party product of the Service resource.",
                      "type": "object",
                      "properties": {
                        "plan": {
                          "description": "The plan id of the 3rd Party Artifact that is being procured.",
                          "type": "string"
                        },
                        "publisher": {
                          "description": "The publisher id of the 3rd Party Artifact that is being bought.",
                          "type": "string"
                        },
                        "product": {
                          "description": "The 3rd Party artifact that is being procured.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the Service resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated Service.",
            "schema": {
              "description": "Service resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "location": {
                  "description": "The GEO location of the resource.",
                  "type": "string"
                },
                "tags": {
                  "description": "Tags of the service which is a list of key value pairs that describe the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Service resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Service",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Starting",
                        "Stopping",
                        "Deleting",
                        "Deleted",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Moved",
                        "MoveFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "networkProfile": {
                      "description": "Network profile of the Service",
                      "type": "object",
                      "properties": {
                        "serviceRuntimeSubnetId": {
                          "description": "Fully qualified resource Id of the subnet to host Azure Spring Apps Service Runtime",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "appSubnetId": {
                          "description": "Fully qualified resource Id of the subnet to host customer apps in Azure Spring Apps",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "serviceCidr": {
                          "description": "Azure Spring Apps service reserved CIDR",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "serviceRuntimeNetworkResourceGroup": {
                          "description": "Name of the resource group containing network resources of Azure Spring Apps Service Runtime",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "appNetworkResourceGroup": {
                          "description": "Name of the resource group containing network resources for customer apps in Azure Spring Apps",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "outboundIPs": {
                          "description": "Desired outbound IP resources for Azure Spring Apps resource.",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "publicIPs": {
                              "type": "array",
                              "readOnly": true,
                              "items": {
                                "type": "string"
                              },
                              "description": "A list of public IP addresses."
                            }
                          }
                        },
                        "requiredTraffics": {
                          "description": "Required inbound or outbound traffics for Azure Spring Apps resource.",
                          "type": "array",
                          "readOnly": true,
                          "items": {
                            "description": "Required inbound or outbound traffic for Azure Spring Apps resource.",
                            "type": "object",
                            "properties": {
                              "protocol": {
                                "description": "The protocol of required traffic",
                                "type": "string",
                                "readOnly": true
                              },
                              "port": {
                                "description": "The port of required traffic",
                                "type": "integer",
                                "format": "int32",
                                "readOnly": true
                              },
                              "ips": {
                                "description": "The ip list of required traffic",
                                "type": "array",
                                "readOnly": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "fqdns": {
                                "description": "The FQDN list of required traffic",
                                "type": "array",
                                "readOnly": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "direction": {
                                "description": "The direction of required traffic",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Inbound",
                                  "Outbound"
                                ],
                                "x-ms-enum": {
                                  "name": "trafficDirection",
                                  "modelAsString": true
                                }
                              }
                            }
                          }
                        },
                        "ingressConfig": {
                          "description": "Ingress configuration payload for Azure Spring Apps resource.",
                          "type": "object",
                          "properties": {
                            "readTimeoutInSeconds": {
                              "format": "int32",
                              "description": "Ingress read time out in seconds.",
                              "type": "integer"
                            }
                          }
                        },
                        "outboundType": {
                          "description": "The egress traffic type of Azure Spring Apps VNet instances.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "vnetAddons": {
                      "description": "Additional Service settings in vnet injection instance",
                      "type": "object",
                      "properties": {
                        "logStreamPublicEndpoint": {
                          "description": "Indicates whether the log stream in vnet injection instance could be accessed from internet.",
                          "type": "boolean",
                          "default": false
                        },
                        "dataPlanePublicEndpoint": {
                          "description": "Indicates whether the data plane components(log stream, app connect, remote debugging) in vnet injection instance could be accessed from internet.",
                          "type": "boolean",
                          "default": false
                        }
                      }
                    },
                    "version": {
                      "format": "int32",
                      "description": "Version of the Service",
                      "type": "integer",
                      "readOnly": true
                    },
                    "serviceId": {
                      "description": "ServiceInstanceEntity Id which uniquely identifies a created resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "powerState": {
                      "description": "Power state of the Service",
                      "enum": [
                        "Running",
                        "Stopped"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "PowerState",
                        "modelAsString": true
                      }
                    },
                    "zoneRedundant": {
                      "type": "boolean",
                      "default": false,
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "fqdn": {
                      "description": "Fully qualified dns name of the service instance",
                      "type": "string",
                      "readOnly": true
                    },
                    "marketplaceResource": {
                      "description": "Purchasing 3rd party product of the Service resource.",
                      "type": "object",
                      "properties": {
                        "plan": {
                          "description": "The plan id of the 3rd Party Artifact that is being procured.",
                          "type": "string"
                        },
                        "publisher": {
                          "description": "The publisher id of the 3rd Party Artifact that is being bought.",
                          "type": "string"
                        },
                        "product": {
                          "description": "The 3rd Party artifact that is being procured.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the Service resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The response indicates the exiting Service is now updating and contains a Location\r\nheader to query the operation result.",
            "schema": {
              "description": "Service resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "location": {
                  "description": "The GEO location of the resource.",
                  "type": "string"
                },
                "tags": {
                  "description": "Tags of the service which is a list of key value pairs that describe the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Properties of the Service resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Service",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Starting",
                        "Stopping",
                        "Deleting",
                        "Deleted",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Moved",
                        "MoveFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "networkProfile": {
                      "description": "Network profile of the Service",
                      "type": "object",
                      "properties": {
                        "serviceRuntimeSubnetId": {
                          "description": "Fully qualified resource Id of the subnet to host Azure Spring Apps Service Runtime",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "appSubnetId": {
                          "description": "Fully qualified resource Id of the subnet to host customer apps in Azure Spring Apps",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "serviceCidr": {
                          "description": "Azure Spring Apps service reserved CIDR",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "serviceRuntimeNetworkResourceGroup": {
                          "description": "Name of the resource group containing network resources of Azure Spring Apps Service Runtime",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "appNetworkResourceGroup": {
                          "description": "Name of the resource group containing network resources for customer apps in Azure Spring Apps",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "outboundIPs": {
                          "description": "Desired outbound IP resources for Azure Spring Apps resource.",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "publicIPs": {
                              "type": "array",
                              "readOnly": true,
                              "items": {
                                "type": "string"
                              },
                              "description": "A list of public IP addresses."
                            }
                          }
                        },
                        "requiredTraffics": {
                          "description": "Required inbound or outbound traffics for Azure Spring Apps resource.",
                          "type": "array",
                          "readOnly": true,
                          "items": {
                            "description": "Required inbound or outbound traffic for Azure Spring Apps resource.",
                            "type": "object",
                            "properties": {
                              "protocol": {
                                "description": "The protocol of required traffic",
                                "type": "string",
                                "readOnly": true
                              },
                              "port": {
                                "description": "The port of required traffic",
                                "type": "integer",
                                "format": "int32",
                                "readOnly": true
                              },
                              "ips": {
                                "description": "The ip list of required traffic",
                                "type": "array",
                                "readOnly": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "fqdns": {
                                "description": "The FQDN list of required traffic",
                                "type": "array",
                                "readOnly": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "direction": {
                                "description": "The direction of required traffic",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Inbound",
                                  "Outbound"
                                ],
                                "x-ms-enum": {
                                  "name": "trafficDirection",
                                  "modelAsString": true
                                }
                              }
                            }
                          }
                        },
                        "ingressConfig": {
                          "description": "Ingress configuration payload for Azure Spring Apps resource.",
                          "type": "object",
                          "properties": {
                            "readTimeoutInSeconds": {
                              "format": "int32",
                              "description": "Ingress read time out in seconds.",
                              "type": "integer"
                            }
                          }
                        },
                        "outboundType": {
                          "description": "The egress traffic type of Azure Spring Apps VNet instances.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "vnetAddons": {
                      "description": "Additional Service settings in vnet injection instance",
                      "type": "object",
                      "properties": {
                        "logStreamPublicEndpoint": {
                          "description": "Indicates whether the log stream in vnet injection instance could be accessed from internet.",
                          "type": "boolean",
                          "default": false
                        },
                        "dataPlanePublicEndpoint": {
                          "description": "Indicates whether the data plane components(log stream, app connect, remote debugging) in vnet injection instance could be accessed from internet.",
                          "type": "boolean",
                          "default": false
                        }
                      }
                    },
                    "version": {
                      "format": "int32",
                      "description": "Version of the Service",
                      "type": "integer",
                      "readOnly": true
                    },
                    "serviceId": {
                      "description": "ServiceInstanceEntity Id which uniquely identifies a created resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "powerState": {
                      "description": "Power state of the Service",
                      "enum": [
                        "Running",
                        "Stopped"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "PowerState",
                        "modelAsString": true
                      }
                    },
                    "zoneRedundant": {
                      "type": "boolean",
                      "default": false,
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "fqdn": {
                      "description": "Fully qualified dns name of the service instance",
                      "type": "string",
                      "readOnly": true
                    },
                    "marketplaceResource": {
                      "description": "Purchasing 3rd party product of the Service resource.",
                      "type": "object",
                      "properties": {
                        "plan": {
                          "description": "The plan id of the 3rd Party Artifact that is being procured.",
                          "type": "string"
                        },
                        "publisher": {
                          "description": "The publisher id of the 3rd Party Artifact that is being bought.",
                          "type": "string"
                        },
                        "product": {
                          "description": "The 3rd Party artifact that is being procured.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the Service resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/listTestKeys": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "List test keys for a Service.",
        "operationId": "Services_ListTestKeys",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the test keys.",
            "schema": {
              "description": "Test keys payload",
              "type": "object",
              "properties": {
                "primaryKey": {
                  "description": "Primary key",
                  "type": "string"
                },
                "secondaryKey": {
                  "description": "Secondary key",
                  "type": "string"
                },
                "primaryTestEndpoint": {
                  "description": "Primary test endpoint",
                  "type": "string"
                },
                "secondaryTestEndpoint": {
                  "description": "Secondary test endpoint",
                  "type": "string"
                },
                "enabled": {
                  "description": "Indicates whether the test endpoint feature enabled or not",
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/regenerateTestKey": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Regenerate a test key for a Service.",
        "operationId": "Services_RegenerateTestKey",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "regenerateTestKeyRequest",
            "in": "body",
            "description": "Parameters for the operation",
            "required": true,
            "schema": {
              "description": "Regenerate test key request payload",
              "required": [
                "keyType"
              ],
              "type": "object",
              "properties": {
                "keyType": {
                  "description": "Type of the test key",
                  "enum": [
                    "Primary",
                    "Secondary"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "TestKeyType",
                    "modelAsString": true
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "description": "Test keys payload",
              "type": "object",
              "properties": {
                "primaryKey": {
                  "description": "Primary key",
                  "type": "string"
                },
                "secondaryKey": {
                  "description": "Secondary key",
                  "type": "string"
                },
                "primaryTestEndpoint": {
                  "description": "Primary test endpoint",
                  "type": "string"
                },
                "secondaryTestEndpoint": {
                  "description": "Secondary test endpoint",
                  "type": "string"
                },
                "enabled": {
                  "description": "Indicates whether the test endpoint feature enabled or not",
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/disableTestEndpoint": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Disable test endpoint functionality for a Service.",
        "operationId": "Services_DisableTestEndpoint",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/enableTestEndpoint": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Enable test endpoint functionality for a Service.",
        "operationId": "Services_EnableTestEndpoint",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "Test keys payload",
              "type": "object",
              "properties": {
                "primaryKey": {
                  "description": "Primary key",
                  "type": "string"
                },
                "secondaryKey": {
                  "description": "Secondary key",
                  "type": "string"
                },
                "primaryTestEndpoint": {
                  "description": "Primary test endpoint",
                  "type": "string"
                },
                "secondaryTestEndpoint": {
                  "description": "Secondary test endpoint",
                  "type": "string"
                },
                "enabled": {
                  "description": "Indicates whether the test endpoint feature enabled or not",
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/stop": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Stop a Service.",
        "operationId": "Services_Stop",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. The response indicates the stop operation is performed in the background."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/start": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Start a Service.",
        "operationId": "Services_Start",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. The response indicates the stop operation is performed in the background."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/flushVirtualNetworkDnsSettings": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Flush Virtual Network DNS settings for a VNET injected Service.",
        "operationId": "Services_FlushVnetDnsSetting",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. The response indicates the Flush VNET DNS setting operation is performed in the background.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/supportedApmTypes": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "List supported APM types for a Service.",
        "operationId": "Services_ListSupportedApmTypes",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the supported APM types.",
            "schema": {
              "description": "Supported APM types payload",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of the supported APM type",
                  "uniqueItems": false,
                  "type": "array",
                  "x-ms-identifiers": [
                    "name"
                  ],
                  "items": {
                    "description": "Supported APM type",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the supported APM type",
                        "type": "string"
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/listGloballyEnabledApms": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "List globally enabled APMs for a Service.",
        "operationId": "Services_ListGloballyEnabledApms",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the globally enabled APMs.",
            "schema": {
              "description": "Globally enabled APMs payload",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of the globally enabled APMs",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/enableApmGlobally": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Enable an APM globally.",
        "operationId": "Services_EnableApmGlobally",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "apm",
            "in": "body",
            "description": "The target APM for the enable operation",
            "required": true,
            "schema": {
              "description": "A reference to the APM",
              "required": [
                "resourceId"
              ],
              "type": "object",
              "properties": {
                "resourceId": {
                  "description": "Resource Id of the APM",
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.AppPlatform/Spring/apms"
                      }
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "202": {
            "description": "Accepted. The response indicates the APM is now enabling globally and contains a Location header to query the operation result.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/disableApmGlobally": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Disable an APM globally.",
        "operationId": "Services_DisableApmGlobally",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "apm",
            "in": "body",
            "description": "The target APM for the disable operation",
            "required": true,
            "schema": {
              "description": "A reference to the APM",
              "required": [
                "resourceId"
              ],
              "type": "object",
              "properties": {
                "resourceId": {
                  "description": "Resource Id of the APM",
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.AppPlatform/Spring/apms"
                      }
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "202": {
            "description": "Accepted. The response indicates the APM is now disabling globally and contains a Location header to query the operation result.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apms": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get collection of APMs.",
        "operationId": "Apms_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of APMs.",
            "schema": {
              "description": "Object that includes an array of APM resources and a possible link for next set",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of APM resources",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "APM Resource object",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of an APM",
                        "x-ms-client-flatten": false,
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "description": "APM Type",
                            "type": "string"
                          },
                          "provisioningState": {
                            "description": "State of the APM.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Succeeded",
                              "Failed",
                              "Deleting",
                              "Canceled"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "ApmProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "properties": {
                            "description": "Non-sensitive properties for the APM",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "secrets": {
                            "description": "Sensitive properties for the APM",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "x-ms-secret": true,
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apms/{apmName}": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get the APM by name.",
        "operationId": "Apms_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "apmName",
            "in": "path",
            "description": "The name of the APM",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the APM.",
            "schema": {
              "description": "APM Resource object",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of an APM",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "description": "APM Type",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "State of the APM.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting",
                        "Canceled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ApmProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "properties": {
                      "description": "Non-sensitive properties for the APM",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "secrets": {
                      "description": "Sensitive properties for the APM",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-ms-secret": true,
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Create or update an APM.",
        "operationId": "Apms_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "apmName",
            "in": "path",
            "description": "The name of the APM",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "apmResource",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "description": "APM Resource object",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of an APM",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "description": "APM Type",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "State of the APM.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting",
                        "Canceled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ApmProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "properties": {
                      "description": "Non-sensitive properties for the APM",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "secrets": {
                      "description": "Sensitive properties for the APM",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-ms-secret": true,
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the APM updated.",
            "schema": {
              "description": "APM Resource object",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of an APM",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "description": "APM Type",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "State of the APM.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting",
                        "Canceled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ApmProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "properties": {
                      "description": "Non-sensitive properties for the APM",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "secrets": {
                      "description": "Sensitive properties for the APM",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-ms-secret": true,
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created. The response describes the new APM created and contains an Azure-AsyncOperation header to query the operation result.",
            "schema": {
              "description": "APM Resource object",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of an APM",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "description": "APM Type",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "State of the APM.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting",
                        "Canceled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ApmProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "properties": {
                      "description": "Non-sensitive properties for the APM",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "secrets": {
                      "description": "Sensitive properties for the APM",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-ms-secret": true,
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Operation to delete an APM",
        "operationId": "Apms_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "apmName",
            "in": "path",
            "description": "The name of the APM",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. The response indicates the delete operation is performed in the background.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Success. The response indicates the resource doesn't exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apms/{apmName}/listSecretKeys": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "List keys of APM sensitive properties.",
        "operationId": "Apms_ListSecretKeys",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "apmName",
            "in": "path",
            "description": "The name of the APM",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the keys of APM sensitive properties.",
            "schema": {
              "description": "Keys of APM sensitive properties",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of the keys for the APM sensitive properties",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/configServers/default": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get the config server and its properties.",
        "operationId": "ConfigServers_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the corresponding Config Server.",
            "schema": {
              "description": "Config Server resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Config Server resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the config server.",
                      "enum": [
                        "NotAvailable",
                        "Deleted",
                        "Failed",
                        "Succeeded",
                        "Updating"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ConfigServerState",
                        "modelAsString": true
                      }
                    },
                    "error": {
                      "description": "Error when apply config server settings.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The code of error.",
                          "type": "string"
                        },
                        "message": {
                          "description": "The message of error.",
                          "type": "string"
                        }
                      }
                    },
                    "configServer": {
                      "description": "Settings of config server.",
                      "type": "object",
                      "properties": {
                        "gitProperty": {
                          "description": "Property of git environment.",
                          "required": [
                            "uri"
                          ],
                          "type": "object",
                          "properties": {
                            "repositories": {
                              "description": "Repositories of git.",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "description": "Git repository property payload for config server",
                                "required": [
                                  "name",
                                  "uri"
                                ],
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Name of the repository",
                                    "type": "string"
                                  },
                                  "pattern": {
                                    "description": "Collection of pattern of the repository",
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "uri": {
                                    "description": "URI of the repository",
                                    "type": "string"
                                  },
                                  "label": {
                                    "description": "Label of the repository",
                                    "type": "string"
                                  },
                                  "searchPaths": {
                                    "description": "Searching path of the repository",
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "username": {
                                    "description": "Username of git repository basic auth.",
                                    "type": "string"
                                  },
                                  "password": {
                                    "description": "Password of git repository basic auth.",
                                    "type": "string"
                                  },
                                  "hostKey": {
                                    "description": "Public sshKey of git repository.",
                                    "type": "string"
                                  },
                                  "hostKeyAlgorithm": {
                                    "description": "SshKey algorithm of git repository.",
                                    "type": "string"
                                  },
                                  "privateKey": {
                                    "description": "Private sshKey algorithm of git repository.",
                                    "type": "string"
                                  },
                                  "strictHostKeyChecking": {
                                    "description": "Strict host key checking or not.",
                                    "type": "boolean"
                                  }
                                }
                              }
                            },
                            "uri": {
                              "description": "URI of the repository",
                              "type": "string"
                            },
                            "label": {
                              "description": "Label of the repository",
                              "type": "string"
                            },
                            "searchPaths": {
                              "description": "Searching path of the repository",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "username": {
                              "description": "Username of git repository basic auth.",
                              "type": "string"
                            },
                            "password": {
                              "description": "Password of git repository basic auth.",
                              "type": "string"
                            },
                            "hostKey": {
                              "description": "Public sshKey of git repository.",
                              "type": "string"
                            },
                            "hostKeyAlgorithm": {
                              "description": "SshKey algorithm of git repository.",
                              "type": "string"
                            },
                            "privateKey": {
                              "description": "Private sshKey algorithm of git repository.",
                              "type": "string"
                            },
                            "strictHostKeyChecking": {
                              "description": "Strict host key checking or not.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Update the config server.",
        "operationId": "ConfigServers_UpdatePut",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "configServerResource",
            "in": "body",
            "description": "Parameters for the update operation",
            "required": true,
            "schema": {
              "description": "Config Server resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Config Server resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the config server.",
                      "enum": [
                        "NotAvailable",
                        "Deleted",
                        "Failed",
                        "Succeeded",
                        "Updating"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ConfigServerState",
                        "modelAsString": true
                      }
                    },
                    "error": {
                      "description": "Error when apply config server settings.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The code of error.",
                          "type": "string"
                        },
                        "message": {
                          "description": "The message of error.",
                          "type": "string"
                        }
                      }
                    },
                    "configServer": {
                      "description": "Settings of config server.",
                      "type": "object",
                      "properties": {
                        "gitProperty": {
                          "description": "Property of git environment.",
                          "required": [
                            "uri"
                          ],
                          "type": "object",
                          "properties": {
                            "repositories": {
                              "description": "Repositories of git.",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "description": "Git repository property payload for config server",
                                "required": [
                                  "name",
                                  "uri"
                                ],
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Name of the repository",
                                    "type": "string"
                                  },
                                  "pattern": {
                                    "description": "Collection of pattern of the repository",
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "uri": {
                                    "description": "URI of the repository",
                                    "type": "string"
                                  },
                                  "label": {
                                    "description": "Label of the repository",
                                    "type": "string"
                                  },
                                  "searchPaths": {
                                    "description": "Searching path of the repository",
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "username": {
                                    "description": "Username of git repository basic auth.",
                                    "type": "string"
                                  },
                                  "password": {
                                    "description": "Password of git repository basic auth.",
                                    "type": "string"
                                  },
                                  "hostKey": {
                                    "description": "Public sshKey of git repository.",
                                    "type": "string"
                                  },
                                  "hostKeyAlgorithm": {
                                    "description": "SshKey algorithm of git repository.",
                                    "type": "string"
                                  },
                                  "privateKey": {
                                    "description": "Private sshKey algorithm of git repository.",
                                    "type": "string"
                                  },
                                  "strictHostKeyChecking": {
                                    "description": "Strict host key checking or not.",
                                    "type": "boolean"
                                  }
                                }
                              }
                            },
                            "uri": {
                              "description": "URI of the repository",
                              "type": "string"
                            },
                            "label": {
                              "description": "Label of the repository",
                              "type": "string"
                            },
                            "searchPaths": {
                              "description": "Searching path of the repository",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "username": {
                              "description": "Username of git repository basic auth.",
                              "type": "string"
                            },
                            "password": {
                              "description": "Password of git repository basic auth.",
                              "type": "string"
                            },
                            "hostKey": {
                              "description": "Public sshKey of git repository.",
                              "type": "string"
                            },
                            "hostKeyAlgorithm": {
                              "description": "SshKey algorithm of git repository.",
                              "type": "string"
                            },
                            "privateKey": {
                              "description": "Private sshKey algorithm of git repository.",
                              "type": "string"
                            },
                            "strictHostKeyChecking": {
                              "description": "Strict host key checking or not.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated Config Server.",
            "schema": {
              "description": "Config Server resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Config Server resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the config server.",
                      "enum": [
                        "NotAvailable",
                        "Deleted",
                        "Failed",
                        "Succeeded",
                        "Updating"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ConfigServerState",
                        "modelAsString": true
                      }
                    },
                    "error": {
                      "description": "Error when apply config server settings.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The code of error.",
                          "type": "string"
                        },
                        "message": {
                          "description": "The message of error.",
                          "type": "string"
                        }
                      }
                    },
                    "configServer": {
                      "description": "Settings of config server.",
                      "type": "object",
                      "properties": {
                        "gitProperty": {
                          "description": "Property of git environment.",
                          "required": [
                            "uri"
                          ],
                          "type": "object",
                          "properties": {
                            "repositories": {
                              "description": "Repositories of git.",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "description": "Git repository property payload for config server",
                                "required": [
                                  "name",
                                  "uri"
                                ],
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Name of the repository",
                                    "type": "string"
                                  },
                                  "pattern": {
                                    "description": "Collection of pattern of the repository",
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "uri": {
                                    "description": "URI of the repository",
                                    "type": "string"
                                  },
                                  "label": {
                                    "description": "Label of the repository",
                                    "type": "string"
                                  },
                                  "searchPaths": {
                                    "description": "Searching path of the repository",
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "username": {
                                    "description": "Username of git repository basic auth.",
                                    "type": "string"
                                  },
                                  "password": {
                                    "description": "Password of git repository basic auth.",
                                    "type": "string"
                                  },
                                  "hostKey": {
                                    "description": "Public sshKey of git repository.",
                                    "type": "string"
                                  },
                                  "hostKeyAlgorithm": {
                                    "description": "SshKey algorithm of git repository.",
                                    "type": "string"
                                  },
                                  "privateKey": {
                                    "description": "Private sshKey algorithm of git repository.",
                                    "type": "string"
                                  },
                                  "strictHostKeyChecking": {
                                    "description": "Strict host key checking or not.",
                                    "type": "boolean"
                                  }
                                }
                              }
                            },
                            "uri": {
                              "description": "URI of the repository",
                              "type": "string"
                            },
                            "label": {
                              "description": "Label of the repository",
                              "type": "string"
                            },
                            "searchPaths": {
                              "description": "Searching path of the repository",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "username": {
                              "description": "Username of git repository basic auth.",
                              "type": "string"
                            },
                            "password": {
                              "description": "Password of git repository basic auth.",
                              "type": "string"
                            },
                            "hostKey": {
                              "description": "Public sshKey of git repository.",
                              "type": "string"
                            },
                            "hostKeyAlgorithm": {
                              "description": "SshKey algorithm of git repository.",
                              "type": "string"
                            },
                            "privateKey": {
                              "description": "Private sshKey algorithm of git repository.",
                              "type": "string"
                            },
                            "strictHostKeyChecking": {
                              "description": "Strict host key checking or not.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The response indicates the exiting Config Server is now updating and contains a Location\r\nheader to query the operation result.",
            "schema": {
              "description": "Config Server resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Config Server resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the config server.",
                      "enum": [
                        "NotAvailable",
                        "Deleted",
                        "Failed",
                        "Succeeded",
                        "Updating"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ConfigServerState",
                        "modelAsString": true
                      }
                    },
                    "error": {
                      "description": "Error when apply config server settings.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The code of error.",
                          "type": "string"
                        },
                        "message": {
                          "description": "The message of error.",
                          "type": "string"
                        }
                      }
                    },
                    "configServer": {
                      "description": "Settings of config server.",
                      "type": "object",
                      "properties": {
                        "gitProperty": {
                          "description": "Property of git environment.",
                          "required": [
                            "uri"
                          ],
                          "type": "object",
                          "properties": {
                            "repositories": {
                              "description": "Repositories of git.",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "description": "Git repository property payload for config server",
                                "required": [
                                  "name",
                                  "uri"
                                ],
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Name of the repository",
                                    "type": "string"
                                  },
                                  "pattern": {
                                    "description": "Collection of pattern of the repository",
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "uri": {
                                    "description": "URI of the repository",
                                    "type": "string"
                                  },
                                  "label": {
                                    "description": "Label of the repository",
                                    "type": "string"
                                  },
                                  "searchPaths": {
                                    "description": "Searching path of the repository",
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "username": {
                                    "description": "Username of git repository basic auth.",
                                    "type": "string"
                                  },
                                  "password": {
                                    "description": "Password of git repository basic auth.",
                                    "type": "string"
                                  },
                                  "hostKey": {
                                    "description": "Public sshKey of git repository.",
                                    "type": "string"
                                  },
                                  "hostKeyAlgorithm": {
                                    "description": "SshKey algorithm of git repository.",
                                    "type": "string"
                                  },
                                  "privateKey": {
                                    "description": "Private sshKey algorithm of git repository.",
                                    "type": "string"
                                  },
                                  "strictHostKeyChecking": {
                                    "description": "Strict host key checking or not.",
                                    "type": "boolean"
                                  }
                                }
                              }
                            },
                            "uri": {
                              "description": "URI of the repository",
                              "type": "string"
                            },
                            "label": {
                              "description": "Label of the repository",
                              "type": "string"
                            },
                            "searchPaths": {
                              "description": "Searching path of the repository",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "username": {
                              "description": "Username of git repository basic auth.",
                              "type": "string"
                            },
                            "password": {
                              "description": "Password of git repository basic auth.",
                              "type": "string"
                            },
                            "hostKey": {
                              "description": "Public sshKey of git repository.",
                              "type": "string"
                            },
                            "hostKeyAlgorithm": {
                              "description": "SshKey algorithm of git repository.",
                              "type": "string"
                            },
                            "privateKey": {
                              "description": "Private sshKey algorithm of git repository.",
                              "type": "string"
                            },
                            "strictHostKeyChecking": {
                              "description": "Strict host key checking or not.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Update the config server.",
        "operationId": "ConfigServers_UpdatePatch",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "configServerResource",
            "in": "body",
            "description": "Parameters for the update operation",
            "required": true,
            "schema": {
              "description": "Config Server resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Config Server resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the config server.",
                      "enum": [
                        "NotAvailable",
                        "Deleted",
                        "Failed",
                        "Succeeded",
                        "Updating"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ConfigServerState",
                        "modelAsString": true
                      }
                    },
                    "error": {
                      "description": "Error when apply config server settings.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The code of error.",
                          "type": "string"
                        },
                        "message": {
                          "description": "The message of error.",
                          "type": "string"
                        }
                      }
                    },
                    "configServer": {
                      "description": "Settings of config server.",
                      "type": "object",
                      "properties": {
                        "gitProperty": {
                          "description": "Property of git environment.",
                          "required": [
                            "uri"
                          ],
                          "type": "object",
                          "properties": {
                            "repositories": {
                              "description": "Repositories of git.",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "description": "Git repository property payload for config server",
                                "required": [
                                  "name",
                                  "uri"
                                ],
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Name of the repository",
                                    "type": "string"
                                  },
                                  "pattern": {
                                    "description": "Collection of pattern of the repository",
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "uri": {
                                    "description": "URI of the repository",
                                    "type": "string"
                                  },
                                  "label": {
                                    "description": "Label of the repository",
                                    "type": "string"
                                  },
                                  "searchPaths": {
                                    "description": "Searching path of the repository",
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "username": {
                                    "description": "Username of git repository basic auth.",
                                    "type": "string"
                                  },
                                  "password": {
                                    "description": "Password of git repository basic auth.",
                                    "type": "string"
                                  },
                                  "hostKey": {
                                    "description": "Public sshKey of git repository.",
                                    "type": "string"
                                  },
                                  "hostKeyAlgorithm": {
                                    "description": "SshKey algorithm of git repository.",
                                    "type": "string"
                                  },
                                  "privateKey": {
                                    "description": "Private sshKey algorithm of git repository.",
                                    "type": "string"
                                  },
                                  "strictHostKeyChecking": {
                                    "description": "Strict host key checking or not.",
                                    "type": "boolean"
                                  }
                                }
                              }
                            },
                            "uri": {
                              "description": "URI of the repository",
                              "type": "string"
                            },
                            "label": {
                              "description": "Label of the repository",
                              "type": "string"
                            },
                            "searchPaths": {
                              "description": "Searching path of the repository",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "username": {
                              "description": "Username of git repository basic auth.",
                              "type": "string"
                            },
                            "password": {
                              "description": "Password of git repository basic auth.",
                              "type": "string"
                            },
                            "hostKey": {
                              "description": "Public sshKey of git repository.",
                              "type": "string"
                            },
                            "hostKeyAlgorithm": {
                              "description": "SshKey algorithm of git repository.",
                              "type": "string"
                            },
                            "privateKey": {
                              "description": "Private sshKey algorithm of git repository.",
                              "type": "string"
                            },
                            "strictHostKeyChecking": {
                              "description": "Strict host key checking or not.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated Config Server.",
            "schema": {
              "description": "Config Server resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Config Server resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the config server.",
                      "enum": [
                        "NotAvailable",
                        "Deleted",
                        "Failed",
                        "Succeeded",
                        "Updating"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ConfigServerState",
                        "modelAsString": true
                      }
                    },
                    "error": {
                      "description": "Error when apply config server settings.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The code of error.",
                          "type": "string"
                        },
                        "message": {
                          "description": "The message of error.",
                          "type": "string"
                        }
                      }
                    },
                    "configServer": {
                      "description": "Settings of config server.",
                      "type": "object",
                      "properties": {
                        "gitProperty": {
                          "description": "Property of git environment.",
                          "required": [
                            "uri"
                          ],
                          "type": "object",
                          "properties": {
                            "repositories": {
                              "description": "Repositories of git.",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "description": "Git repository property payload for config server",
                                "required": [
                                  "name",
                                  "uri"
                                ],
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Name of the repository",
                                    "type": "string"
                                  },
                                  "pattern": {
                                    "description": "Collection of pattern of the repository",
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "uri": {
                                    "description": "URI of the repository",
                                    "type": "string"
                                  },
                                  "label": {
                                    "description": "Label of the repository",
                                    "type": "string"
                                  },
                                  "searchPaths": {
                                    "description": "Searching path of the repository",
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "username": {
                                    "description": "Username of git repository basic auth.",
                                    "type": "string"
                                  },
                                  "password": {
                                    "description": "Password of git repository basic auth.",
                                    "type": "string"
                                  },
                                  "hostKey": {
                                    "description": "Public sshKey of git repository.",
                                    "type": "string"
                                  },
                                  "hostKeyAlgorithm": {
                                    "description": "SshKey algorithm of git repository.",
                                    "type": "string"
                                  },
                                  "privateKey": {
                                    "description": "Private sshKey algorithm of git repository.",
                                    "type": "string"
                                  },
                                  "strictHostKeyChecking": {
                                    "description": "Strict host key checking or not.",
                                    "type": "boolean"
                                  }
                                }
                              }
                            },
                            "uri": {
                              "description": "URI of the repository",
                              "type": "string"
                            },
                            "label": {
                              "description": "Label of the repository",
                              "type": "string"
                            },
                            "searchPaths": {
                              "description": "Searching path of the repository",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "username": {
                              "description": "Username of git repository basic auth.",
                              "type": "string"
                            },
                            "password": {
                              "description": "Password of git repository basic auth.",
                              "type": "string"
                            },
                            "hostKey": {
                              "description": "Public sshKey of git repository.",
                              "type": "string"
                            },
                            "hostKeyAlgorithm": {
                              "description": "SshKey algorithm of git repository.",
                              "type": "string"
                            },
                            "privateKey": {
                              "description": "Private sshKey algorithm of git repository.",
                              "type": "string"
                            },
                            "strictHostKeyChecking": {
                              "description": "Strict host key checking or not.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The response indicates the exiting Config Server is now updating and contains a Location\r\nheader to query the operation result.",
            "schema": {
              "description": "Config Server resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Config Server resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the config server.",
                      "enum": [
                        "NotAvailable",
                        "Deleted",
                        "Failed",
                        "Succeeded",
                        "Updating"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ConfigServerState",
                        "modelAsString": true
                      }
                    },
                    "error": {
                      "description": "Error when apply config server settings.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The code of error.",
                          "type": "string"
                        },
                        "message": {
                          "description": "The message of error.",
                          "type": "string"
                        }
                      }
                    },
                    "configServer": {
                      "description": "Settings of config server.",
                      "type": "object",
                      "properties": {
                        "gitProperty": {
                          "description": "Property of git environment.",
                          "required": [
                            "uri"
                          ],
                          "type": "object",
                          "properties": {
                            "repositories": {
                              "description": "Repositories of git.",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "description": "Git repository property payload for config server",
                                "required": [
                                  "name",
                                  "uri"
                                ],
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Name of the repository",
                                    "type": "string"
                                  },
                                  "pattern": {
                                    "description": "Collection of pattern of the repository",
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "uri": {
                                    "description": "URI of the repository",
                                    "type": "string"
                                  },
                                  "label": {
                                    "description": "Label of the repository",
                                    "type": "string"
                                  },
                                  "searchPaths": {
                                    "description": "Searching path of the repository",
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "username": {
                                    "description": "Username of git repository basic auth.",
                                    "type": "string"
                                  },
                                  "password": {
                                    "description": "Password of git repository basic auth.",
                                    "type": "string"
                                  },
                                  "hostKey": {
                                    "description": "Public sshKey of git repository.",
                                    "type": "string"
                                  },
                                  "hostKeyAlgorithm": {
                                    "description": "SshKey algorithm of git repository.",
                                    "type": "string"
                                  },
                                  "privateKey": {
                                    "description": "Private sshKey algorithm of git repository.",
                                    "type": "string"
                                  },
                                  "strictHostKeyChecking": {
                                    "description": "Strict host key checking or not.",
                                    "type": "boolean"
                                  }
                                }
                              }
                            },
                            "uri": {
                              "description": "URI of the repository",
                              "type": "string"
                            },
                            "label": {
                              "description": "Label of the repository",
                              "type": "string"
                            },
                            "searchPaths": {
                              "description": "Searching path of the repository",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "username": {
                              "description": "Username of git repository basic auth.",
                              "type": "string"
                            },
                            "password": {
                              "description": "Password of git repository basic auth.",
                              "type": "string"
                            },
                            "hostKey": {
                              "description": "Public sshKey of git repository.",
                              "type": "string"
                            },
                            "hostKeyAlgorithm": {
                              "description": "SshKey algorithm of git repository.",
                              "type": "string"
                            },
                            "privateKey": {
                              "description": "Private sshKey algorithm of git repository.",
                              "type": "string"
                            },
                            "strictHostKeyChecking": {
                              "description": "Strict host key checking or not.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/configServers/validate": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Check if the config server settings are valid.",
        "operationId": "ConfigServers_Validate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "configServerSettings",
            "in": "body",
            "description": "Config server settings to be validated",
            "required": true,
            "schema": {
              "description": "The settings of config server.",
              "type": "object",
              "properties": {
                "gitProperty": {
                  "description": "Property of git environment.",
                  "required": [
                    "uri"
                  ],
                  "type": "object",
                  "properties": {
                    "repositories": {
                      "description": "Repositories of git.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "Git repository property payload for config server",
                        "required": [
                          "name",
                          "uri"
                        ],
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the repository",
                            "type": "string"
                          },
                          "pattern": {
                            "description": "Collection of pattern of the repository",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "uri": {
                            "description": "URI of the repository",
                            "type": "string"
                          },
                          "label": {
                            "description": "Label of the repository",
                            "type": "string"
                          },
                          "searchPaths": {
                            "description": "Searching path of the repository",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "username": {
                            "description": "Username of git repository basic auth.",
                            "type": "string"
                          },
                          "password": {
                            "description": "Password of git repository basic auth.",
                            "type": "string"
                          },
                          "hostKey": {
                            "description": "Public sshKey of git repository.",
                            "type": "string"
                          },
                          "hostKeyAlgorithm": {
                            "description": "SshKey algorithm of git repository.",
                            "type": "string"
                          },
                          "privateKey": {
                            "description": "Private sshKey algorithm of git repository.",
                            "type": "string"
                          },
                          "strictHostKeyChecking": {
                            "description": "Strict host key checking or not.",
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "uri": {
                      "description": "URI of the repository",
                      "type": "string"
                    },
                    "label": {
                      "description": "Label of the repository",
                      "type": "string"
                    },
                    "searchPaths": {
                      "description": "Searching path of the repository",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "username": {
                      "description": "Username of git repository basic auth.",
                      "type": "string"
                    },
                    "password": {
                      "description": "Password of git repository basic auth.",
                      "type": "string"
                    },
                    "hostKey": {
                      "description": "Public sshKey of git repository.",
                      "type": "string"
                    },
                    "hostKeyAlgorithm": {
                      "description": "SshKey algorithm of git repository.",
                      "type": "string"
                    },
                    "privateKey": {
                      "description": "Private sshKey algorithm of git repository.",
                      "type": "string"
                    },
                    "strictHostKeyChecking": {
                      "description": "Strict host key checking or not.",
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the validation result of Config Server.",
            "schema": {
              "description": "Validation result for config server settings",
              "type": "object",
              "properties": {
                "isValid": {
                  "description": "Indicate if the config server settings are valid",
                  "type": "boolean"
                },
                "details": {
                  "description": "The detail validation results",
                  "type": "array",
                  "items": {
                    "description": "Error record of the config server settings",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the config server settings error record",
                        "type": "string"
                      },
                      "uri": {
                        "description": "The uri of the config server settings error record",
                        "type": "string"
                      },
                      "messages": {
                        "description": "The detail error messages of the record",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The response indicates the ConfigServerSetting is validating.",
            "schema": {
              "description": "Validation result for config server settings",
              "type": "object",
              "properties": {
                "isValid": {
                  "description": "Indicate if the config server settings are valid",
                  "type": "boolean"
                },
                "details": {
                  "description": "The detail validation results",
                  "type": "array",
                  "items": {
                    "description": "Error record of the config server settings",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the config server settings error record",
                        "type": "string"
                      },
                      "uri": {
                        "description": "The uri of the config server settings error record",
                        "type": "string"
                      },
                      "messages": {
                        "description": "The detail error messages of the record",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/configurationServices/{configurationServiceName}": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get the Application Configuration Service and its properties.",
        "operationId": "ConfigurationServices_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "configurationServiceName",
            "in": "path",
            "description": "The name of Application Configuration Service.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the corresponding Application Configuration Service.",
            "schema": {
              "description": "Application Configuration Service resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Application Configuration Service properties payload",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Application Configuration Service.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ConfigurationServiceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "generation": {
                      "description": "The generation of the Application Configuration Service.",
                      "enum": [
                        "Gen1",
                        "Gen2"
                      ],
                      "type": "string",
                      "default": "Gen1",
                      "x-ms-enum": {
                        "name": "ConfigurationServiceGeneration",
                        "modelAsString": true
                      }
                    },
                    "resourceRequests": {
                      "description": "The requested resource quantity for required CPU and Memory.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "cpu": {
                          "description": "Cpu allocated to each Application Configuration Service instance",
                          "type": "string",
                          "readOnly": true
                        },
                        "memory": {
                          "description": "Memory allocated to each Application Configuration Service instance",
                          "type": "string",
                          "readOnly": true
                        },
                        "instanceCount": {
                          "format": "int32",
                          "description": "Instance count of the Application Configuration Service",
                          "type": "integer",
                          "readOnly": true
                        }
                      }
                    },
                    "instances": {
                      "description": "Collection of instances belong to Application Configuration Service.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "Collection of instances belong to the Application Configuration Service",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the Application Configuration Service instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the Application Configuration Service instance",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "settings": {
                      "description": "The settings of Application Configuration Service.",
                      "type": "object",
                      "properties": {
                        "gitProperty": {
                          "description": "Property of git environment.",
                          "type": "object",
                          "properties": {
                            "repositories": {
                              "description": "Repositories of Application Configuration Service git property.",
                              "type": "array",
                              "items": {
                                "description": "Git repository property payload for Application Configuration Service",
                                "required": [
                                  "name",
                                  "patterns",
                                  "uri",
                                  "label"
                                ],
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Name of the repository",
                                    "type": "string"
                                  },
                                  "patterns": {
                                    "description": "Collection of patterns of the repository",
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "uri": {
                                    "description": "URI of the repository",
                                    "type": "string"
                                  },
                                  "label": {
                                    "description": "Label of the repository",
                                    "type": "string"
                                  },
                                  "searchPaths": {
                                    "description": "Searching path of the repository",
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "username": {
                                    "description": "Username of git repository basic auth.",
                                    "type": "string"
                                  },
                                  "password": {
                                    "description": "Password of git repository basic auth.",
                                    "type": "string"
                                  },
                                  "hostKey": {
                                    "description": "Public sshKey of git repository.",
                                    "type": "string"
                                  },
                                  "hostKeyAlgorithm": {
                                    "description": "SshKey algorithm of git repository.",
                                    "type": "string"
                                  },
                                  "privateKey": {
                                    "description": "Private sshKey algorithm of git repository.",
                                    "type": "string"
                                  },
                                  "strictHostKeyChecking": {
                                    "description": "Strict host key checking or not.",
                                    "type": "boolean"
                                  },
                                  "gitImplementation": {
                                    "description": "Git libraries used to support various repository providers",
                                    "enum": [
                                      "go-git",
                                      "libgit2"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "GitImplementation",
                                      "modelAsString": true
                                    }
                                  },
                                  "caCertResourceId": {
                                    "description": "Resource Id of CA certificate for https URL of Git repository.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Create the default Application Configuration Service or update the existing Application Configuration Service.",
        "operationId": "ConfigurationServices_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "configurationServiceName",
            "in": "path",
            "description": "The name of Application Configuration Service.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "configurationServiceResource",
            "in": "body",
            "description": "Parameters for the update operation",
            "required": true,
            "schema": {
              "description": "Application Configuration Service resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Application Configuration Service properties payload",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Application Configuration Service.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ConfigurationServiceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "generation": {
                      "description": "The generation of the Application Configuration Service.",
                      "enum": [
                        "Gen1",
                        "Gen2"
                      ],
                      "type": "string",
                      "default": "Gen1",
                      "x-ms-enum": {
                        "name": "ConfigurationServiceGeneration",
                        "modelAsString": true
                      }
                    },
                    "resourceRequests": {
                      "description": "The requested resource quantity for required CPU and Memory.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "cpu": {
                          "description": "Cpu allocated to each Application Configuration Service instance",
                          "type": "string",
                          "readOnly": true
                        },
                        "memory": {
                          "description": "Memory allocated to each Application Configuration Service instance",
                          "type": "string",
                          "readOnly": true
                        },
                        "instanceCount": {
                          "format": "int32",
                          "description": "Instance count of the Application Configuration Service",
                          "type": "integer",
                          "readOnly": true
                        }
                      }
                    },
                    "instances": {
                      "description": "Collection of instances belong to Application Configuration Service.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "Collection of instances belong to the Application Configuration Service",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the Application Configuration Service instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the Application Configuration Service instance",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "settings": {
                      "description": "The settings of Application Configuration Service.",
                      "type": "object",
                      "properties": {
                        "gitProperty": {
                          "description": "Property of git environment.",
                          "type": "object",
                          "properties": {
                            "repositories": {
                              "description": "Repositories of Application Configuration Service git property.",
                              "type": "array",
                              "items": {
                                "description": "Git repository property payload for Application Configuration Service",
                                "required": [
                                  "name",
                                  "patterns",
                                  "uri",
                                  "label"
                                ],
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Name of the repository",
                                    "type": "string"
                                  },
                                  "patterns": {
                                    "description": "Collection of patterns of the repository",
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "uri": {
                                    "description": "URI of the repository",
                                    "type": "string"
                                  },
                                  "label": {
                                    "description": "Label of the repository",
                                    "type": "string"
                                  },
                                  "searchPaths": {
                                    "description": "Searching path of the repository",
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "username": {
                                    "description": "Username of git repository basic auth.",
                                    "type": "string"
                                  },
                                  "password": {
                                    "description": "Password of git repository basic auth.",
                                    "type": "string"
                                  },
                                  "hostKey": {
                                    "description": "Public sshKey of git repository.",
                                    "type": "string"
                                  },
                                  "hostKeyAlgorithm": {
                                    "description": "SshKey algorithm of git repository.",
                                    "type": "string"
                                  },
                                  "privateKey": {
                                    "description": "Private sshKey algorithm of git repository.",
                                    "type": "string"
                                  },
                                  "strictHostKeyChecking": {
                                    "description": "Strict host key checking or not.",
                                    "type": "boolean"
                                  },
                                  "gitImplementation": {
                                    "description": "Git libraries used to support various repository providers",
                                    "enum": [
                                      "go-git",
                                      "libgit2"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "GitImplementation",
                                      "modelAsString": true
                                    }
                                  },
                                  "caCertResourceId": {
                                    "description": "Resource Id of CA certificate for https URL of Git repository.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated Application Configuration Service.",
            "schema": {
              "description": "Application Configuration Service resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Application Configuration Service properties payload",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Application Configuration Service.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ConfigurationServiceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "generation": {
                      "description": "The generation of the Application Configuration Service.",
                      "enum": [
                        "Gen1",
                        "Gen2"
                      ],
                      "type": "string",
                      "default": "Gen1",
                      "x-ms-enum": {
                        "name": "ConfigurationServiceGeneration",
                        "modelAsString": true
                      }
                    },
                    "resourceRequests": {
                      "description": "The requested resource quantity for required CPU and Memory.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "cpu": {
                          "description": "Cpu allocated to each Application Configuration Service instance",
                          "type": "string",
                          "readOnly": true
                        },
                        "memory": {
                          "description": "Memory allocated to each Application Configuration Service instance",
                          "type": "string",
                          "readOnly": true
                        },
                        "instanceCount": {
                          "format": "int32",
                          "description": "Instance count of the Application Configuration Service",
                          "type": "integer",
                          "readOnly": true
                        }
                      }
                    },
                    "instances": {
                      "description": "Collection of instances belong to Application Configuration Service.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "Collection of instances belong to the Application Configuration Service",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the Application Configuration Service instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the Application Configuration Service instance",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "settings": {
                      "description": "The settings of Application Configuration Service.",
                      "type": "object",
                      "properties": {
                        "gitProperty": {
                          "description": "Property of git environment.",
                          "type": "object",
                          "properties": {
                            "repositories": {
                              "description": "Repositories of Application Configuration Service git property.",
                              "type": "array",
                              "items": {
                                "description": "Git repository property payload for Application Configuration Service",
                                "required": [
                                  "name",
                                  "patterns",
                                  "uri",
                                  "label"
                                ],
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Name of the repository",
                                    "type": "string"
                                  },
                                  "patterns": {
                                    "description": "Collection of patterns of the repository",
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "uri": {
                                    "description": "URI of the repository",
                                    "type": "string"
                                  },
                                  "label": {
                                    "description": "Label of the repository",
                                    "type": "string"
                                  },
                                  "searchPaths": {
                                    "description": "Searching path of the repository",
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "username": {
                                    "description": "Username of git repository basic auth.",
                                    "type": "string"
                                  },
                                  "password": {
                                    "description": "Password of git repository basic auth.",
                                    "type": "string"
                                  },
                                  "hostKey": {
                                    "description": "Public sshKey of git repository.",
                                    "type": "string"
                                  },
                                  "hostKeyAlgorithm": {
                                    "description": "SshKey algorithm of git repository.",
                                    "type": "string"
                                  },
                                  "privateKey": {
                                    "description": "Private sshKey algorithm of git repository.",
                                    "type": "string"
                                  },
                                  "strictHostKeyChecking": {
                                    "description": "Strict host key checking or not.",
                                    "type": "boolean"
                                  },
                                  "gitImplementation": {
                                    "description": "Git libraries used to support various repository providers",
                                    "enum": [
                                      "go-git",
                                      "libgit2"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "GitImplementation",
                                      "modelAsString": true
                                    }
                                  },
                                  "caCertResourceId": {
                                    "description": "Resource Id of CA certificate for https URL of Git repository.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created. The response describes the new Service and contains an Azure-AsyncOperation header to query the operation result.",
            "schema": {
              "description": "Application Configuration Service resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Application Configuration Service properties payload",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Application Configuration Service.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ConfigurationServiceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "generation": {
                      "description": "The generation of the Application Configuration Service.",
                      "enum": [
                        "Gen1",
                        "Gen2"
                      ],
                      "type": "string",
                      "default": "Gen1",
                      "x-ms-enum": {
                        "name": "ConfigurationServiceGeneration",
                        "modelAsString": true
                      }
                    },
                    "resourceRequests": {
                      "description": "The requested resource quantity for required CPU and Memory.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "cpu": {
                          "description": "Cpu allocated to each Application Configuration Service instance",
                          "type": "string",
                          "readOnly": true
                        },
                        "memory": {
                          "description": "Memory allocated to each Application Configuration Service instance",
                          "type": "string",
                          "readOnly": true
                        },
                        "instanceCount": {
                          "format": "int32",
                          "description": "Instance count of the Application Configuration Service",
                          "type": "integer",
                          "readOnly": true
                        }
                      }
                    },
                    "instances": {
                      "description": "Collection of instances belong to Application Configuration Service.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "Collection of instances belong to the Application Configuration Service",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the Application Configuration Service instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the Application Configuration Service instance",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "settings": {
                      "description": "The settings of Application Configuration Service.",
                      "type": "object",
                      "properties": {
                        "gitProperty": {
                          "description": "Property of git environment.",
                          "type": "object",
                          "properties": {
                            "repositories": {
                              "description": "Repositories of Application Configuration Service git property.",
                              "type": "array",
                              "items": {
                                "description": "Git repository property payload for Application Configuration Service",
                                "required": [
                                  "name",
                                  "patterns",
                                  "uri",
                                  "label"
                                ],
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Name of the repository",
                                    "type": "string"
                                  },
                                  "patterns": {
                                    "description": "Collection of patterns of the repository",
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "uri": {
                                    "description": "URI of the repository",
                                    "type": "string"
                                  },
                                  "label": {
                                    "description": "Label of the repository",
                                    "type": "string"
                                  },
                                  "searchPaths": {
                                    "description": "Searching path of the repository",
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "username": {
                                    "description": "Username of git repository basic auth.",
                                    "type": "string"
                                  },
                                  "password": {
                                    "description": "Password of git repository basic auth.",
                                    "type": "string"
                                  },
                                  "hostKey": {
                                    "description": "Public sshKey of git repository.",
                                    "type": "string"
                                  },
                                  "hostKeyAlgorithm": {
                                    "description": "SshKey algorithm of git repository.",
                                    "type": "string"
                                  },
                                  "privateKey": {
                                    "description": "Private sshKey algorithm of git repository.",
                                    "type": "string"
                                  },
                                  "strictHostKeyChecking": {
                                    "description": "Strict host key checking or not.",
                                    "type": "boolean"
                                  },
                                  "gitImplementation": {
                                    "description": "Git libraries used to support various repository providers",
                                    "enum": [
                                      "go-git",
                                      "libgit2"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "GitImplementation",
                                      "modelAsString": true
                                    }
                                  },
                                  "caCertResourceId": {
                                    "description": "Resource Id of CA certificate for https URL of Git repository.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Disable the default Application Configuration Service.",
        "operationId": "ConfigurationServices_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "configurationServiceName",
            "in": "path",
            "description": "The name of Application Configuration Service.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response indicates the default Application Configuration Service has deleted."
          },
          "202": {
            "description": "Accepted. The response indicates the default Application Configuration Service is now deleting."
          },
          "204": {
            "description": "Success. The response indicates the default Application Configuration Service doesn't exist or has deleted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/configurationServices": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Handles requests to list all resources in a Service.",
        "operationId": "ConfigurationServices_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of configuration service in the Service.",
            "schema": {
              "description": "Object that includes an array of configuration service resources and a possible link for next set",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of configuration service resources",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Application Configuration Service resource",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Application Configuration Service properties payload",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "State of the Application Configuration Service.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Succeeded",
                              "Failed",
                              "Deleting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "ConfigurationServiceProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "generation": {
                            "description": "The generation of the Application Configuration Service.",
                            "enum": [
                              "Gen1",
                              "Gen2"
                            ],
                            "type": "string",
                            "default": "Gen1",
                            "x-ms-enum": {
                              "name": "ConfigurationServiceGeneration",
                              "modelAsString": true
                            }
                          },
                          "resourceRequests": {
                            "description": "The requested resource quantity for required CPU and Memory.",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "cpu": {
                                "description": "Cpu allocated to each Application Configuration Service instance",
                                "type": "string",
                                "readOnly": true
                              },
                              "memory": {
                                "description": "Memory allocated to each Application Configuration Service instance",
                                "type": "string",
                                "readOnly": true
                              },
                              "instanceCount": {
                                "format": "int32",
                                "description": "Instance count of the Application Configuration Service",
                                "type": "integer",
                                "readOnly": true
                              }
                            }
                          },
                          "instances": {
                            "description": "Collection of instances belong to Application Configuration Service.",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "description": "Collection of instances belong to the Application Configuration Service",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the Application Configuration Service instance",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the Application Configuration Service instance",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          },
                          "settings": {
                            "description": "The settings of Application Configuration Service.",
                            "type": "object",
                            "properties": {
                              "gitProperty": {
                                "description": "Property of git environment.",
                                "type": "object",
                                "properties": {
                                  "repositories": {
                                    "description": "Repositories of Application Configuration Service git property.",
                                    "type": "array",
                                    "items": {
                                      "description": "Git repository property payload for Application Configuration Service",
                                      "required": [
                                        "name",
                                        "patterns",
                                        "uri",
                                        "label"
                                      ],
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Name of the repository",
                                          "type": "string"
                                        },
                                        "patterns": {
                                          "description": "Collection of patterns of the repository",
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "uri": {
                                          "description": "URI of the repository",
                                          "type": "string"
                                        },
                                        "label": {
                                          "description": "Label of the repository",
                                          "type": "string"
                                        },
                                        "searchPaths": {
                                          "description": "Searching path of the repository",
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "username": {
                                          "description": "Username of git repository basic auth.",
                                          "type": "string"
                                        },
                                        "password": {
                                          "description": "Password of git repository basic auth.",
                                          "type": "string"
                                        },
                                        "hostKey": {
                                          "description": "Public sshKey of git repository.",
                                          "type": "string"
                                        },
                                        "hostKeyAlgorithm": {
                                          "description": "SshKey algorithm of git repository.",
                                          "type": "string"
                                        },
                                        "privateKey": {
                                          "description": "Private sshKey algorithm of git repository.",
                                          "type": "string"
                                        },
                                        "strictHostKeyChecking": {
                                          "description": "Strict host key checking or not.",
                                          "type": "boolean"
                                        },
                                        "gitImplementation": {
                                          "description": "Git libraries used to support various repository providers",
                                          "enum": [
                                            "go-git",
                                            "libgit2"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "GitImplementation",
                                            "modelAsString": true
                                          }
                                        },
                                        "caCertResourceId": {
                                          "description": "Resource Id of CA certificate for https URL of Git repository.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/configurationServices/{configurationServiceName}/validate": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Check if the Application Configuration Service settings are valid.",
        "operationId": "ConfigurationServices_Validate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "configurationServiceName",
            "in": "path",
            "description": "The name of Application Configuration Service.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "settings",
            "in": "body",
            "description": "Application Configuration Service settings to be validated",
            "required": true,
            "schema": {
              "description": "The settings of Application Configuration Service.",
              "type": "object",
              "properties": {
                "gitProperty": {
                  "description": "Property of git environment.",
                  "type": "object",
                  "properties": {
                    "repositories": {
                      "description": "Repositories of Application Configuration Service git property.",
                      "type": "array",
                      "items": {
                        "description": "Git repository property payload for Application Configuration Service",
                        "required": [
                          "name",
                          "patterns",
                          "uri",
                          "label"
                        ],
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the repository",
                            "type": "string"
                          },
                          "patterns": {
                            "description": "Collection of patterns of the repository",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "uri": {
                            "description": "URI of the repository",
                            "type": "string"
                          },
                          "label": {
                            "description": "Label of the repository",
                            "type": "string"
                          },
                          "searchPaths": {
                            "description": "Searching path of the repository",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "username": {
                            "description": "Username of git repository basic auth.",
                            "type": "string"
                          },
                          "password": {
                            "description": "Password of git repository basic auth.",
                            "type": "string"
                          },
                          "hostKey": {
                            "description": "Public sshKey of git repository.",
                            "type": "string"
                          },
                          "hostKeyAlgorithm": {
                            "description": "SshKey algorithm of git repository.",
                            "type": "string"
                          },
                          "privateKey": {
                            "description": "Private sshKey algorithm of git repository.",
                            "type": "string"
                          },
                          "strictHostKeyChecking": {
                            "description": "Strict host key checking or not.",
                            "type": "boolean"
                          },
                          "gitImplementation": {
                            "description": "Git libraries used to support various repository providers",
                            "enum": [
                              "go-git",
                              "libgit2"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "GitImplementation",
                              "modelAsString": true
                            }
                          },
                          "caCertResourceId": {
                            "description": "Resource Id of CA certificate for https URL of Git repository.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the validation result of Application Configuration Service.",
            "schema": {
              "description": "Validation result for configuration service settings",
              "type": "object",
              "properties": {
                "gitPropertyValidationResult": {
                  "description": "Validation result for configuration service settings",
                  "type": "object",
                  "properties": {
                    "isValid": {
                      "description": "Indicate if the configuration service settings are valid",
                      "type": "boolean"
                    },
                    "gitReposValidationResult": {
                      "description": "The detail validation results",
                      "type": "array",
                      "items": {
                        "description": "Validate messages of the configuration service git repositories",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the configuration service git repository.",
                            "type": "string"
                          },
                          "messages": {
                            "description": "Detailed validation messages.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The response indicates the ConfigurationServiceSettings is validating.",
            "schema": {
              "description": "Validation result for configuration service settings",
              "type": "object",
              "properties": {
                "gitPropertyValidationResult": {
                  "description": "Validation result for configuration service settings",
                  "type": "object",
                  "properties": {
                    "isValid": {
                      "description": "Indicate if the configuration service settings are valid",
                      "type": "boolean"
                    },
                    "gitReposValidationResult": {
                      "description": "The detail validation results",
                      "type": "array",
                      "items": {
                        "description": "Validate messages of the configuration service git repositories",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the configuration service git repository.",
                            "type": "string"
                          },
                          "messages": {
                            "description": "Detailed validation messages.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/configurationServices/{configurationServiceName}/validateResource": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Check if the Application Configuration Service resource is valid.",
        "operationId": "ConfigurationServices_ValidateResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "configurationServiceName",
            "in": "path",
            "description": "The name of Application Configuration Service.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "configurationServiceResource",
            "in": "body",
            "description": "Application Configuration Service resource to be validated",
            "required": true,
            "schema": {
              "description": "Application Configuration Service resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Application Configuration Service properties payload",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Application Configuration Service.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ConfigurationServiceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "generation": {
                      "description": "The generation of the Application Configuration Service.",
                      "enum": [
                        "Gen1",
                        "Gen2"
                      ],
                      "type": "string",
                      "default": "Gen1",
                      "x-ms-enum": {
                        "name": "ConfigurationServiceGeneration",
                        "modelAsString": true
                      }
                    },
                    "resourceRequests": {
                      "description": "The requested resource quantity for required CPU and Memory.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "cpu": {
                          "description": "Cpu allocated to each Application Configuration Service instance",
                          "type": "string",
                          "readOnly": true
                        },
                        "memory": {
                          "description": "Memory allocated to each Application Configuration Service instance",
                          "type": "string",
                          "readOnly": true
                        },
                        "instanceCount": {
                          "format": "int32",
                          "description": "Instance count of the Application Configuration Service",
                          "type": "integer",
                          "readOnly": true
                        }
                      }
                    },
                    "instances": {
                      "description": "Collection of instances belong to Application Configuration Service.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "Collection of instances belong to the Application Configuration Service",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the Application Configuration Service instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the Application Configuration Service instance",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "settings": {
                      "description": "The settings of Application Configuration Service.",
                      "type": "object",
                      "properties": {
                        "gitProperty": {
                          "description": "Property of git environment.",
                          "type": "object",
                          "properties": {
                            "repositories": {
                              "description": "Repositories of Application Configuration Service git property.",
                              "type": "array",
                              "items": {
                                "description": "Git repository property payload for Application Configuration Service",
                                "required": [
                                  "name",
                                  "patterns",
                                  "uri",
                                  "label"
                                ],
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Name of the repository",
                                    "type": "string"
                                  },
                                  "patterns": {
                                    "description": "Collection of patterns of the repository",
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "uri": {
                                    "description": "URI of the repository",
                                    "type": "string"
                                  },
                                  "label": {
                                    "description": "Label of the repository",
                                    "type": "string"
                                  },
                                  "searchPaths": {
                                    "description": "Searching path of the repository",
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "username": {
                                    "description": "Username of git repository basic auth.",
                                    "type": "string"
                                  },
                                  "password": {
                                    "description": "Password of git repository basic auth.",
                                    "type": "string"
                                  },
                                  "hostKey": {
                                    "description": "Public sshKey of git repository.",
                                    "type": "string"
                                  },
                                  "hostKeyAlgorithm": {
                                    "description": "SshKey algorithm of git repository.",
                                    "type": "string"
                                  },
                                  "privateKey": {
                                    "description": "Private sshKey algorithm of git repository.",
                                    "type": "string"
                                  },
                                  "strictHostKeyChecking": {
                                    "description": "Strict host key checking or not.",
                                    "type": "boolean"
                                  },
                                  "gitImplementation": {
                                    "description": "Git libraries used to support various repository providers",
                                    "enum": [
                                      "go-git",
                                      "libgit2"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "GitImplementation",
                                      "modelAsString": true
                                    }
                                  },
                                  "caCertResourceId": {
                                    "description": "Resource Id of CA certificate for https URL of Git repository.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the validation result of Application Configuration Service.",
            "schema": {
              "description": "Validation result for configuration service settings",
              "type": "object",
              "properties": {
                "gitPropertyValidationResult": {
                  "description": "Validation result for configuration service settings",
                  "type": "object",
                  "properties": {
                    "isValid": {
                      "description": "Indicate if the configuration service settings are valid",
                      "type": "boolean"
                    },
                    "gitReposValidationResult": {
                      "description": "The detail validation results",
                      "type": "array",
                      "items": {
                        "description": "Validate messages of the configuration service git repositories",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the configuration service git repository.",
                            "type": "string"
                          },
                          "messages": {
                            "description": "Detailed validation messages.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The response indicates the ConfigurationServiceSettings is validating.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/serviceRegistries/{serviceRegistryName}": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get the Service Registry and its properties.",
        "operationId": "ServiceRegistries_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceRegistryName",
            "in": "path",
            "description": "The name of Service Registry.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the corresponding Service Registry.",
            "schema": {
              "description": "Service Registry resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Service Registry properties payload",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Service Registry.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ServiceRegistryProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "resourceRequests": {
                      "description": "The requested resource quantity for required CPU and Memory.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "cpu": {
                          "description": "Cpu allocated to each Service Registry instance",
                          "type": "string",
                          "readOnly": true
                        },
                        "memory": {
                          "description": "Memory allocated to each Service Registry instance",
                          "type": "string",
                          "readOnly": true
                        },
                        "instanceCount": {
                          "format": "int32",
                          "description": "Instance count of the Service Registry",
                          "type": "integer",
                          "readOnly": true
                        }
                      }
                    },
                    "instances": {
                      "description": "Collection of instances belong to Service Registry.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "Collection of instances belong to the Service Registry",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the Service Registry instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the Service Registry instance",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Create the default Service Registry or update the existing Service Registry.",
        "operationId": "ServiceRegistries_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceRegistryName",
            "in": "path",
            "description": "The name of Service Registry.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated Service Registry.",
            "schema": {
              "description": "Service Registry resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Service Registry properties payload",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Service Registry.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ServiceRegistryProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "resourceRequests": {
                      "description": "The requested resource quantity for required CPU and Memory.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "cpu": {
                          "description": "Cpu allocated to each Service Registry instance",
                          "type": "string",
                          "readOnly": true
                        },
                        "memory": {
                          "description": "Memory allocated to each Service Registry instance",
                          "type": "string",
                          "readOnly": true
                        },
                        "instanceCount": {
                          "format": "int32",
                          "description": "Instance count of the Service Registry",
                          "type": "integer",
                          "readOnly": true
                        }
                      }
                    },
                    "instances": {
                      "description": "Collection of instances belong to Service Registry.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "Collection of instances belong to the Service Registry",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the Service Registry instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the Service Registry instance",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created. The response describes the new created Service Registry and contains an Azure-AsyncOperation header to query the operation result.",
            "schema": {
              "description": "Service Registry resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Service Registry properties payload",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Service Registry.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ServiceRegistryProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "resourceRequests": {
                      "description": "The requested resource quantity for required CPU and Memory.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "cpu": {
                          "description": "Cpu allocated to each Service Registry instance",
                          "type": "string",
                          "readOnly": true
                        },
                        "memory": {
                          "description": "Memory allocated to each Service Registry instance",
                          "type": "string",
                          "readOnly": true
                        },
                        "instanceCount": {
                          "format": "int32",
                          "description": "Instance count of the Service Registry",
                          "type": "integer",
                          "readOnly": true
                        }
                      }
                    },
                    "instances": {
                      "description": "Collection of instances belong to Service Registry.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "Collection of instances belong to the Service Registry",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the Service Registry instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the Service Registry instance",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Disable the default Service Registry.",
        "operationId": "ServiceRegistries_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceRegistryName",
            "in": "path",
            "description": "The name of Service Registry.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response indicates the default Service Registries has deleted."
          },
          "202": {
            "description": "Accepted. The response indicates the default Service Registries is now deleting."
          },
          "204": {
            "description": "Success. The response indicates the default Service Registries doesn't exist or has deleted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/serviceRegistries": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Handles requests to list all resources in a Service.",
        "operationId": "ServiceRegistries_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of Service Registry resources in the Service.",
            "schema": {
              "description": "Object that includes an array of Service Registry resources and a possible link for next set",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of Service Registry resources",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Service Registry resource",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Service Registry properties payload",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "State of the Service Registry.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Succeeded",
                              "Failed",
                              "Deleting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "ServiceRegistryProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "resourceRequests": {
                            "description": "The requested resource quantity for required CPU and Memory.",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "cpu": {
                                "description": "Cpu allocated to each Service Registry instance",
                                "type": "string",
                                "readOnly": true
                              },
                              "memory": {
                                "description": "Memory allocated to each Service Registry instance",
                                "type": "string",
                                "readOnly": true
                              },
                              "instanceCount": {
                                "format": "int32",
                                "description": "Instance count of the Service Registry",
                                "type": "integer",
                                "readOnly": true
                              }
                            }
                          },
                          "instances": {
                            "description": "Collection of instances belong to Service Registry.",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "description": "Collection of instances belong to the Service Registry",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the Service Registry instance",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the Service Registry instance",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/applicationLiveViews": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Handles requests to list all resources in a Service.",
        "operationId": "ApplicationLiveViews_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of Application Live View resources in the Service.",
            "schema": {
              "description": "Object that includes an array of Application Live View resources and a possible link for next set",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of Application Live View resources",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Application Live View resource",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Application Live View properties payload",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "State of the Application Live View.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Succeeded",
                              "Failed",
                              "Deleting",
                              "Canceled"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "ApplicationLiveViewProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "components": {
                            "uniqueItems": false,
                            "type": "array",
                            "x-ms-identifiers": [],
                            "items": {
                              "description": "Application Live View properties payload",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the component.",
                                  "readOnly": true
                                },
                                "resourceRequests": {
                                  "description": "The requested resource quantity for required CPU and Memory.",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "cpu": {
                                      "description": "Cpu quantity allocated to each Application Live View component instance. 1 core can be represented by 1 or 1000m.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "memory": {
                                      "description": "Memory quantity allocated to each Application Live View component instance. 1 GB can be represented by 1Gi or 1024Mi.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "instanceCount": {
                                      "description": "Desired instance count of Application Live View component instance.",
                                      "type": "integer",
                                      "format": "int32",
                                      "readOnly": true
                                    }
                                  }
                                },
                                "instances": {
                                  "description": "Collection of instances belong to Application Live View.",
                                  "uniqueItems": false,
                                  "type": "array",
                                  "x-ms-identifiers": [],
                                  "items": {
                                    "description": "Collection of instances belong to the Application Live View",
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "description": "Name of the Application Live View instance.",
                                        "type": "string",
                                        "readOnly": true
                                      },
                                      "status": {
                                        "description": "Status of the Application Live View instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
                                        "type": "string",
                                        "readOnly": true
                                      }
                                    }
                                  },
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true,
                            "description": "Component details of Application Live View"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/applicationLiveViews/{applicationLiveViewName}": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get the Application Live  and its properties.",
        "operationId": "ApplicationLiveViews_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationLiveViewName",
            "in": "path",
            "description": "The name of Application Live View.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the corresponding Application Live View.",
            "schema": {
              "description": "Application Live View resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Application Live View properties payload",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Application Live View.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting",
                        "Canceled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ApplicationLiveViewProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "components": {
                      "uniqueItems": false,
                      "type": "array",
                      "x-ms-identifiers": [],
                      "items": {
                        "description": "Application Live View properties payload",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the component.",
                            "readOnly": true
                          },
                          "resourceRequests": {
                            "description": "The requested resource quantity for required CPU and Memory.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "cpu": {
                                "description": "Cpu quantity allocated to each Application Live View component instance. 1 core can be represented by 1 or 1000m.",
                                "type": "string",
                                "readOnly": true
                              },
                              "memory": {
                                "description": "Memory quantity allocated to each Application Live View component instance. 1 GB can be represented by 1Gi or 1024Mi.",
                                "type": "string",
                                "readOnly": true
                              },
                              "instanceCount": {
                                "description": "Desired instance count of Application Live View component instance.",
                                "type": "integer",
                                "format": "int32",
                                "readOnly": true
                              }
                            }
                          },
                          "instances": {
                            "description": "Collection of instances belong to Application Live View.",
                            "uniqueItems": false,
                            "type": "array",
                            "x-ms-identifiers": [],
                            "items": {
                              "description": "Collection of instances belong to the Application Live View",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the Application Live View instance.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the Application Live View instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true,
                      "description": "Component details of Application Live View"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Create the default Application Live View or update the existing Application Live View.",
        "operationId": "ApplicationLiveViews_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationLiveViewName",
            "in": "path",
            "description": "The name of Application Live View.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationLiveViewResource",
            "in": "body",
            "description": "Parameters for the update operation",
            "required": true,
            "schema": {
              "description": "Application Live View resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Application Live View properties payload",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Application Live View.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting",
                        "Canceled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ApplicationLiveViewProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "components": {
                      "uniqueItems": false,
                      "type": "array",
                      "x-ms-identifiers": [],
                      "items": {
                        "description": "Application Live View properties payload",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the component.",
                            "readOnly": true
                          },
                          "resourceRequests": {
                            "description": "The requested resource quantity for required CPU and Memory.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "cpu": {
                                "description": "Cpu quantity allocated to each Application Live View component instance. 1 core can be represented by 1 or 1000m.",
                                "type": "string",
                                "readOnly": true
                              },
                              "memory": {
                                "description": "Memory quantity allocated to each Application Live View component instance. 1 GB can be represented by 1Gi or 1024Mi.",
                                "type": "string",
                                "readOnly": true
                              },
                              "instanceCount": {
                                "description": "Desired instance count of Application Live View component instance.",
                                "type": "integer",
                                "format": "int32",
                                "readOnly": true
                              }
                            }
                          },
                          "instances": {
                            "description": "Collection of instances belong to Application Live View.",
                            "uniqueItems": false,
                            "type": "array",
                            "x-ms-identifiers": [],
                            "items": {
                              "description": "Collection of instances belong to the Application Live View",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the Application Live View instance.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the Application Live View instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true,
                      "description": "Component details of Application Live View"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated Application Live View.",
            "schema": {
              "description": "Application Live View resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Application Live View properties payload",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Application Live View.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting",
                        "Canceled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ApplicationLiveViewProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "components": {
                      "uniqueItems": false,
                      "type": "array",
                      "x-ms-identifiers": [],
                      "items": {
                        "description": "Application Live View properties payload",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the component.",
                            "readOnly": true
                          },
                          "resourceRequests": {
                            "description": "The requested resource quantity for required CPU and Memory.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "cpu": {
                                "description": "Cpu quantity allocated to each Application Live View component instance. 1 core can be represented by 1 or 1000m.",
                                "type": "string",
                                "readOnly": true
                              },
                              "memory": {
                                "description": "Memory quantity allocated to each Application Live View component instance. 1 GB can be represented by 1Gi or 1024Mi.",
                                "type": "string",
                                "readOnly": true
                              },
                              "instanceCount": {
                                "description": "Desired instance count of Application Live View component instance.",
                                "type": "integer",
                                "format": "int32",
                                "readOnly": true
                              }
                            }
                          },
                          "instances": {
                            "description": "Collection of instances belong to Application Live View.",
                            "uniqueItems": false,
                            "type": "array",
                            "x-ms-identifiers": [],
                            "items": {
                              "description": "Collection of instances belong to the Application Live View",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the Application Live View instance.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the Application Live View instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true,
                      "description": "Component details of Application Live View"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created. The response describes the new created Application Live View and contains an Azure-AsyncOperation header to query the operation result.",
            "schema": {
              "description": "Application Live View resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Application Live View properties payload",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Application Live View.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting",
                        "Canceled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ApplicationLiveViewProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "components": {
                      "uniqueItems": false,
                      "type": "array",
                      "x-ms-identifiers": [],
                      "items": {
                        "description": "Application Live View properties payload",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the component.",
                            "readOnly": true
                          },
                          "resourceRequests": {
                            "description": "The requested resource quantity for required CPU and Memory.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "cpu": {
                                "description": "Cpu quantity allocated to each Application Live View component instance. 1 core can be represented by 1 or 1000m.",
                                "type": "string",
                                "readOnly": true
                              },
                              "memory": {
                                "description": "Memory quantity allocated to each Application Live View component instance. 1 GB can be represented by 1Gi or 1024Mi.",
                                "type": "string",
                                "readOnly": true
                              },
                              "instanceCount": {
                                "description": "Desired instance count of Application Live View component instance.",
                                "type": "integer",
                                "format": "int32",
                                "readOnly": true
                              }
                            }
                          },
                          "instances": {
                            "description": "Collection of instances belong to Application Live View.",
                            "uniqueItems": false,
                            "type": "array",
                            "x-ms-identifiers": [],
                            "items": {
                              "description": "Collection of instances belong to the Application Live View",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the Application Live View instance.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the Application Live View instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true,
                      "description": "Component details of Application Live View"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Disable the default Application Live View.",
        "operationId": "ApplicationLiveViews_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationLiveViewName",
            "in": "path",
            "description": "The name of Application Live View.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. The response indicates the default Application Live View is now deleting.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Success. The response indicates the defaultApplication Live View doesn't exist or has deleted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/devToolPortals": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Handles requests to list all resources in a Service.",
        "operationId": "DevToolPortals_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of Dev Tool Portal resources in the Service.",
            "schema": {
              "description": "Object that includes an array of Dev Tool Portal resources and a possible link for next set",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of Dev Tool Portal resources",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Dev Tool Portal resource",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Dev Tool Portal properties payload",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "State of the Dev Tool Portal.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Succeeded",
                              "Failed",
                              "Deleting",
                              "Canceled"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "DevToolPortalProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "components": {
                            "description": "Collection of components belong to Dev Tool Portal.",
                            "uniqueItems": false,
                            "type": "array",
                            "x-ms-identifiers": [
                              "name"
                            ],
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "readOnly": true
                                },
                                "resourceRequests": {
                                  "description": "The requested resource quantity for required CPU and Memory.",
                                  "type": "object",
                                  "readOnly": true,
                                  "properties": {
                                    "cpu": {
                                      "description": "Cpu quantity allocated to each Dev Tool Portal instance. 1 core can be represented by 1 or 1000m",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "memory": {
                                      "description": "Memory quantity allocated to each Dev Tool Portal instance. 1 GB can be represented by 1Gi or 1024Mi.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "instanceCount": {
                                      "description": "Desired instance count of Dev Tool Portal.",
                                      "type": "integer",
                                      "format": "int32",
                                      "readOnly": true
                                    }
                                  }
                                },
                                "instances": {
                                  "description": "Collection of instances belong to Dev Tool Portal.",
                                  "uniqueItems": false,
                                  "type": "array",
                                  "x-ms-identifiers": [],
                                  "items": {
                                    "description": "Collection of instances belong to the Dev Tool Portal.",
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "description": "Name of the Dev Tool Portal instance.",
                                        "type": "string",
                                        "readOnly": true
                                      },
                                      "status": {
                                        "description": "Status of the Dev Tool Portal instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
                                        "type": "string",
                                        "readOnly": true
                                      }
                                    }
                                  },
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          },
                          "public": {
                            "description": "Indicates whether the resource exposes public endpoint",
                            "type": "boolean",
                            "default": false
                          },
                          "url": {
                            "description": "URL of the resource, exposed when 'public' is true.",
                            "type": "string",
                            "readOnly": true
                          },
                          "ssoProperties": {
                            "description": "Single sign-on related configuration",
                            "type": "object",
                            "properties": {
                              "scopes": {
                                "description": "It defines the specific actions applications can be allowed to do on a user's behalf",
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "clientId": {
                                "description": "The public identifier for the application",
                                "type": "string"
                              },
                              "clientSecret": {
                                "description": "The secret known only to the application and the authorization server",
                                "x-ms-secret": true,
                                "type": "string"
                              },
                              "metadataUrl": {
                                "description": "The URI of a JSON file with generic OIDC provider configuration.",
                                "type": "string"
                              }
                            }
                          },
                          "features": {
                            "description": "Settings for Dev Tool Portal",
                            "type": "object",
                            "properties": {
                              "applicationAccelerator": {
                                "description": "Detail of Accelerator plugin",
                                "type": "object",
                                "properties": {
                                  "state": {
                                    "type": "string",
                                    "description": "State of the plugin",
                                    "default": "Enabled",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "DevToolPortalFeatureState",
                                      "values": [
                                        {
                                          "description": "Enable the plugin in Dev Tool Portal.",
                                          "value": "Enabled"
                                        },
                                        {
                                          "description": "Disable the plugin in Dev Tool Portal.",
                                          "value": "Disabled"
                                        }
                                      ]
                                    }
                                  },
                                  "route": {
                                    "type": "string",
                                    "description": "Route path to visit the plugin",
                                    "readOnly": true
                                  }
                                }
                              },
                              "applicationLiveView": {
                                "description": "Detail of App Live View plugin",
                                "type": "object",
                                "properties": {
                                  "state": {
                                    "type": "string",
                                    "description": "State of the plugin",
                                    "default": "Enabled",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "DevToolPortalFeatureState",
                                      "values": [
                                        {
                                          "description": "Enable the plugin in Dev Tool Portal.",
                                          "value": "Enabled"
                                        },
                                        {
                                          "description": "Disable the plugin in Dev Tool Portal.",
                                          "value": "Disabled"
                                        }
                                      ]
                                    }
                                  },
                                  "route": {
                                    "type": "string",
                                    "description": "Route path to visit the plugin",
                                    "readOnly": true
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/DevToolPortals/{devToolPortalName}": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get the Application Live  and its properties.",
        "operationId": "DevToolPortals_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "devToolPortalName",
            "in": "path",
            "description": "The name of Dev Tool Portal.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the corresponding Dev Tool Portal.",
            "schema": {
              "description": "Dev Tool Portal resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Dev Tool Portal properties payload",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Dev Tool Portal.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting",
                        "Canceled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DevToolPortalProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "components": {
                      "description": "Collection of components belong to Dev Tool Portal.",
                      "uniqueItems": false,
                      "type": "array",
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "readOnly": true
                          },
                          "resourceRequests": {
                            "description": "The requested resource quantity for required CPU and Memory.",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "cpu": {
                                "description": "Cpu quantity allocated to each Dev Tool Portal instance. 1 core can be represented by 1 or 1000m",
                                "type": "string",
                                "readOnly": true
                              },
                              "memory": {
                                "description": "Memory quantity allocated to each Dev Tool Portal instance. 1 GB can be represented by 1Gi or 1024Mi.",
                                "type": "string",
                                "readOnly": true
                              },
                              "instanceCount": {
                                "description": "Desired instance count of Dev Tool Portal.",
                                "type": "integer",
                                "format": "int32",
                                "readOnly": true
                              }
                            }
                          },
                          "instances": {
                            "description": "Collection of instances belong to Dev Tool Portal.",
                            "uniqueItems": false,
                            "type": "array",
                            "x-ms-identifiers": [],
                            "items": {
                              "description": "Collection of instances belong to the Dev Tool Portal.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the Dev Tool Portal instance.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the Dev Tool Portal instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "public": {
                      "description": "Indicates whether the resource exposes public endpoint",
                      "type": "boolean",
                      "default": false
                    },
                    "url": {
                      "description": "URL of the resource, exposed when 'public' is true.",
                      "type": "string",
                      "readOnly": true
                    },
                    "ssoProperties": {
                      "description": "Single sign-on related configuration",
                      "type": "object",
                      "properties": {
                        "scopes": {
                          "description": "It defines the specific actions applications can be allowed to do on a user's behalf",
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The public identifier for the application",
                          "type": "string"
                        },
                        "clientSecret": {
                          "description": "The secret known only to the application and the authorization server",
                          "x-ms-secret": true,
                          "type": "string"
                        },
                        "metadataUrl": {
                          "description": "The URI of a JSON file with generic OIDC provider configuration.",
                          "type": "string"
                        }
                      }
                    },
                    "features": {
                      "description": "Settings for Dev Tool Portal",
                      "type": "object",
                      "properties": {
                        "applicationAccelerator": {
                          "description": "Detail of Accelerator plugin",
                          "type": "object",
                          "properties": {
                            "state": {
                              "type": "string",
                              "description": "State of the plugin",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "DevToolPortalFeatureState",
                                "values": [
                                  {
                                    "description": "Enable the plugin in Dev Tool Portal.",
                                    "value": "Enabled"
                                  },
                                  {
                                    "description": "Disable the plugin in Dev Tool Portal.",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "route": {
                              "type": "string",
                              "description": "Route path to visit the plugin",
                              "readOnly": true
                            }
                          }
                        },
                        "applicationLiveView": {
                          "description": "Detail of App Live View plugin",
                          "type": "object",
                          "properties": {
                            "state": {
                              "type": "string",
                              "description": "State of the plugin",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "DevToolPortalFeatureState",
                                "values": [
                                  {
                                    "description": "Enable the plugin in Dev Tool Portal.",
                                    "value": "Enabled"
                                  },
                                  {
                                    "description": "Disable the plugin in Dev Tool Portal.",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "route": {
                              "type": "string",
                              "description": "Route path to visit the plugin",
                              "readOnly": true
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Create the default Dev Tool Portal or update the existing Dev Tool Portal.",
        "operationId": "DevToolPortals_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "devToolPortalName",
            "in": "path",
            "description": "The name of Dev Tool Portal.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "DevToolPortalResource",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "description": "Dev Tool Portal resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Dev Tool Portal properties payload",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Dev Tool Portal.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting",
                        "Canceled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DevToolPortalProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "components": {
                      "description": "Collection of components belong to Dev Tool Portal.",
                      "uniqueItems": false,
                      "type": "array",
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "readOnly": true
                          },
                          "resourceRequests": {
                            "description": "The requested resource quantity for required CPU and Memory.",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "cpu": {
                                "description": "Cpu quantity allocated to each Dev Tool Portal instance. 1 core can be represented by 1 or 1000m",
                                "type": "string",
                                "readOnly": true
                              },
                              "memory": {
                                "description": "Memory quantity allocated to each Dev Tool Portal instance. 1 GB can be represented by 1Gi or 1024Mi.",
                                "type": "string",
                                "readOnly": true
                              },
                              "instanceCount": {
                                "description": "Desired instance count of Dev Tool Portal.",
                                "type": "integer",
                                "format": "int32",
                                "readOnly": true
                              }
                            }
                          },
                          "instances": {
                            "description": "Collection of instances belong to Dev Tool Portal.",
                            "uniqueItems": false,
                            "type": "array",
                            "x-ms-identifiers": [],
                            "items": {
                              "description": "Collection of instances belong to the Dev Tool Portal.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the Dev Tool Portal instance.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the Dev Tool Portal instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "public": {
                      "description": "Indicates whether the resource exposes public endpoint",
                      "type": "boolean",
                      "default": false
                    },
                    "url": {
                      "description": "URL of the resource, exposed when 'public' is true.",
                      "type": "string",
                      "readOnly": true
                    },
                    "ssoProperties": {
                      "description": "Single sign-on related configuration",
                      "type": "object",
                      "properties": {
                        "scopes": {
                          "description": "It defines the specific actions applications can be allowed to do on a user's behalf",
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The public identifier for the application",
                          "type": "string"
                        },
                        "clientSecret": {
                          "description": "The secret known only to the application and the authorization server",
                          "x-ms-secret": true,
                          "type": "string"
                        },
                        "metadataUrl": {
                          "description": "The URI of a JSON file with generic OIDC provider configuration.",
                          "type": "string"
                        }
                      }
                    },
                    "features": {
                      "description": "Settings for Dev Tool Portal",
                      "type": "object",
                      "properties": {
                        "applicationAccelerator": {
                          "description": "Detail of Accelerator plugin",
                          "type": "object",
                          "properties": {
                            "state": {
                              "type": "string",
                              "description": "State of the plugin",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "DevToolPortalFeatureState",
                                "values": [
                                  {
                                    "description": "Enable the plugin in Dev Tool Portal.",
                                    "value": "Enabled"
                                  },
                                  {
                                    "description": "Disable the plugin in Dev Tool Portal.",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "route": {
                              "type": "string",
                              "description": "Route path to visit the plugin",
                              "readOnly": true
                            }
                          }
                        },
                        "applicationLiveView": {
                          "description": "Detail of App Live View plugin",
                          "type": "object",
                          "properties": {
                            "state": {
                              "type": "string",
                              "description": "State of the plugin",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "DevToolPortalFeatureState",
                                "values": [
                                  {
                                    "description": "Enable the plugin in Dev Tool Portal.",
                                    "value": "Enabled"
                                  },
                                  {
                                    "description": "Disable the plugin in Dev Tool Portal.",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "route": {
                              "type": "string",
                              "description": "Route path to visit the plugin",
                              "readOnly": true
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated Dev Tool Portal.",
            "schema": {
              "description": "Dev Tool Portal resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Dev Tool Portal properties payload",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Dev Tool Portal.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting",
                        "Canceled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DevToolPortalProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "components": {
                      "description": "Collection of components belong to Dev Tool Portal.",
                      "uniqueItems": false,
                      "type": "array",
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "readOnly": true
                          },
                          "resourceRequests": {
                            "description": "The requested resource quantity for required CPU and Memory.",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "cpu": {
                                "description": "Cpu quantity allocated to each Dev Tool Portal instance. 1 core can be represented by 1 or 1000m",
                                "type": "string",
                                "readOnly": true
                              },
                              "memory": {
                                "description": "Memory quantity allocated to each Dev Tool Portal instance. 1 GB can be represented by 1Gi or 1024Mi.",
                                "type": "string",
                                "readOnly": true
                              },
                              "instanceCount": {
                                "description": "Desired instance count of Dev Tool Portal.",
                                "type": "integer",
                                "format": "int32",
                                "readOnly": true
                              }
                            }
                          },
                          "instances": {
                            "description": "Collection of instances belong to Dev Tool Portal.",
                            "uniqueItems": false,
                            "type": "array",
                            "x-ms-identifiers": [],
                            "items": {
                              "description": "Collection of instances belong to the Dev Tool Portal.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the Dev Tool Portal instance.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the Dev Tool Portal instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "public": {
                      "description": "Indicates whether the resource exposes public endpoint",
                      "type": "boolean",
                      "default": false
                    },
                    "url": {
                      "description": "URL of the resource, exposed when 'public' is true.",
                      "type": "string",
                      "readOnly": true
                    },
                    "ssoProperties": {
                      "description": "Single sign-on related configuration",
                      "type": "object",
                      "properties": {
                        "scopes": {
                          "description": "It defines the specific actions applications can be allowed to do on a user's behalf",
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The public identifier for the application",
                          "type": "string"
                        },
                        "clientSecret": {
                          "description": "The secret known only to the application and the authorization server",
                          "x-ms-secret": true,
                          "type": "string"
                        },
                        "metadataUrl": {
                          "description": "The URI of a JSON file with generic OIDC provider configuration.",
                          "type": "string"
                        }
                      }
                    },
                    "features": {
                      "description": "Settings for Dev Tool Portal",
                      "type": "object",
                      "properties": {
                        "applicationAccelerator": {
                          "description": "Detail of Accelerator plugin",
                          "type": "object",
                          "properties": {
                            "state": {
                              "type": "string",
                              "description": "State of the plugin",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "DevToolPortalFeatureState",
                                "values": [
                                  {
                                    "description": "Enable the plugin in Dev Tool Portal.",
                                    "value": "Enabled"
                                  },
                                  {
                                    "description": "Disable the plugin in Dev Tool Portal.",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "route": {
                              "type": "string",
                              "description": "Route path to visit the plugin",
                              "readOnly": true
                            }
                          }
                        },
                        "applicationLiveView": {
                          "description": "Detail of App Live View plugin",
                          "type": "object",
                          "properties": {
                            "state": {
                              "type": "string",
                              "description": "State of the plugin",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "DevToolPortalFeatureState",
                                "values": [
                                  {
                                    "description": "Enable the plugin in Dev Tool Portal.",
                                    "value": "Enabled"
                                  },
                                  {
                                    "description": "Disable the plugin in Dev Tool Portal.",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "route": {
                              "type": "string",
                              "description": "Route path to visit the plugin",
                              "readOnly": true
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created. The response describes the new created Dev Tool Portal and contains an Azure-AsyncOperation header to query the operation result.",
            "schema": {
              "description": "Dev Tool Portal resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Dev Tool Portal properties payload",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Dev Tool Portal.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting",
                        "Canceled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DevToolPortalProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "components": {
                      "description": "Collection of components belong to Dev Tool Portal.",
                      "uniqueItems": false,
                      "type": "array",
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "readOnly": true
                          },
                          "resourceRequests": {
                            "description": "The requested resource quantity for required CPU and Memory.",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "cpu": {
                                "description": "Cpu quantity allocated to each Dev Tool Portal instance. 1 core can be represented by 1 or 1000m",
                                "type": "string",
                                "readOnly": true
                              },
                              "memory": {
                                "description": "Memory quantity allocated to each Dev Tool Portal instance. 1 GB can be represented by 1Gi or 1024Mi.",
                                "type": "string",
                                "readOnly": true
                              },
                              "instanceCount": {
                                "description": "Desired instance count of Dev Tool Portal.",
                                "type": "integer",
                                "format": "int32",
                                "readOnly": true
                              }
                            }
                          },
                          "instances": {
                            "description": "Collection of instances belong to Dev Tool Portal.",
                            "uniqueItems": false,
                            "type": "array",
                            "x-ms-identifiers": [],
                            "items": {
                              "description": "Collection of instances belong to the Dev Tool Portal.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the Dev Tool Portal instance.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the Dev Tool Portal instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "public": {
                      "description": "Indicates whether the resource exposes public endpoint",
                      "type": "boolean",
                      "default": false
                    },
                    "url": {
                      "description": "URL of the resource, exposed when 'public' is true.",
                      "type": "string",
                      "readOnly": true
                    },
                    "ssoProperties": {
                      "description": "Single sign-on related configuration",
                      "type": "object",
                      "properties": {
                        "scopes": {
                          "description": "It defines the specific actions applications can be allowed to do on a user's behalf",
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The public identifier for the application",
                          "type": "string"
                        },
                        "clientSecret": {
                          "description": "The secret known only to the application and the authorization server",
                          "x-ms-secret": true,
                          "type": "string"
                        },
                        "metadataUrl": {
                          "description": "The URI of a JSON file with generic OIDC provider configuration.",
                          "type": "string"
                        }
                      }
                    },
                    "features": {
                      "description": "Settings for Dev Tool Portal",
                      "type": "object",
                      "properties": {
                        "applicationAccelerator": {
                          "description": "Detail of Accelerator plugin",
                          "type": "object",
                          "properties": {
                            "state": {
                              "type": "string",
                              "description": "State of the plugin",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "DevToolPortalFeatureState",
                                "values": [
                                  {
                                    "description": "Enable the plugin in Dev Tool Portal.",
                                    "value": "Enabled"
                                  },
                                  {
                                    "description": "Disable the plugin in Dev Tool Portal.",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "route": {
                              "type": "string",
                              "description": "Route path to visit the plugin",
                              "readOnly": true
                            }
                          }
                        },
                        "applicationLiveView": {
                          "description": "Detail of App Live View plugin",
                          "type": "object",
                          "properties": {
                            "state": {
                              "type": "string",
                              "description": "State of the plugin",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "DevToolPortalFeatureState",
                                "values": [
                                  {
                                    "description": "Enable the plugin in Dev Tool Portal.",
                                    "value": "Enabled"
                                  },
                                  {
                                    "description": "Disable the plugin in Dev Tool Portal.",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "route": {
                              "type": "string",
                              "description": "Route path to visit the plugin",
                              "readOnly": true
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Disable the default Dev Tool Portal.",
        "operationId": "DevToolPortals_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "devToolPortalName",
            "in": "path",
            "description": "The name of Dev Tool Portal.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. The response indicates the default Dev Tool Portal is now deleting.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Success. The response indicates the defaultDev Tool Portal doesn't exist or has deleted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/containerRegistries": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "List container registries resource.",
        "operationId": "ContainerRegistries_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the Container Registries to one Azure Spring Apps resource.",
            "schema": {
              "description": "Collection compose of container registry resources list and a possible link for next page.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The container registry resources list.",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Container registry resource payload.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the container registry resource payload.",
                        "x-ms-client-flatten": false,
                        "type": "object",
                        "required": [
                          "credentials"
                        ],
                        "properties": {
                          "credentials": {
                            "description": "The credentials of the container registry resource.",
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "type": {
                                "description": "The credential type of the container registry credentials.",
                                "type": "string"
                              }
                            },
                            "discriminator": "type"
                          },
                          "provisioningState": {
                            "description": "State of the Container Registry.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Succeeded",
                              "Failed",
                              "Deleting",
                              "Canceled"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "ContainerRegistryProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "The link to next page of storage list.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/containerRegistries/{containerRegistryName}": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get the container registries resource.",
        "operationId": "ContainerRegistries_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerRegistryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describe the container registry.",
            "schema": {
              "description": "Container registry resource payload.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the container registry resource payload.",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "required": [
                    "credentials"
                  ],
                  "properties": {
                    "credentials": {
                      "description": "The credentials of the container registry resource.",
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "description": "The credential type of the container registry credentials.",
                          "type": "string"
                        }
                      },
                      "discriminator": "type"
                    },
                    "provisioningState": {
                      "description": "State of the Container Registry.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting",
                        "Canceled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ContainerRegistryProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Create or update container registry resource.",
        "operationId": "ContainerRegistries_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerRegistryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerRegistryResource",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "description": "Container registry resource payload.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the container registry resource payload.",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "required": [
                    "credentials"
                  ],
                  "properties": {
                    "credentials": {
                      "description": "The credentials of the container registry resource.",
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "description": "The credential type of the container registry credentials.",
                          "type": "string"
                        }
                      },
                      "discriminator": "type"
                    },
                    "provisioningState": {
                      "description": "State of the Container Registry.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting",
                        "Canceled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ContainerRegistryProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describe the existed container registry updated.",
            "schema": {
              "description": "Container registry resource payload.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the container registry resource payload.",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "required": [
                    "credentials"
                  ],
                  "properties": {
                    "credentials": {
                      "description": "The credentials of the container registry resource.",
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "description": "The credential type of the container registry credentials.",
                          "type": "string"
                        }
                      },
                      "discriminator": "type"
                    },
                    "provisioningState": {
                      "description": "State of the Container Registry.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting",
                        "Canceled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ContainerRegistryProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created. The response describes the new container registry resource created and contains an Azure-AsyncOperation header to query the operation result.",
            "schema": {
              "description": "Container registry resource payload.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the container registry resource payload.",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "required": [
                    "credentials"
                  ],
                  "properties": {
                    "credentials": {
                      "description": "The credentials of the container registry resource.",
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "description": "The credential type of the container registry credentials.",
                          "type": "string"
                        }
                      },
                      "discriminator": "type"
                    },
                    "provisioningState": {
                      "description": "State of the Container Registry.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting",
                        "Canceled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ContainerRegistryProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Delete a container registry resource.",
        "operationId": "ContainerRegistries_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerRegistryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. The response indicates the delete operation is performed in the background.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Success. The response indicates the resource doesn't exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/containerRegistries/{containerRegistryName}/validate": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Check if the container registry properties are valid.",
        "operationId": "ContainerRegistries_Validate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerRegistryName",
            "in": "path",
            "description": "The name of the container registry.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "ContainerRegistryProperties",
            "in": "body",
            "description": "Parameters for the validate operation",
            "required": true,
            "schema": {
              "description": "Container registry resource payload.",
              "type": "object",
              "required": [
                "credentials"
              ],
              "properties": {
                "credentials": {
                  "description": "The credentials of the container registry resource.",
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "description": "The credential type of the container registry credentials.",
                      "type": "string"
                    }
                  },
                  "discriminator": "type"
                },
                "provisioningState": {
                  "description": "State of the Container Registry.",
                  "enum": [
                    "Creating",
                    "Updating",
                    "Succeeded",
                    "Failed",
                    "Deleting",
                    "Canceled"
                  ],
                  "type": "string",
                  "readOnly": true,
                  "x-ms-enum": {
                    "name": "ContainerRegistryProvisioningState",
                    "modelAsString": true
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describe the validation result of container registry.",
            "schema": {
              "description": "Validation result for container registry properties",
              "type": "object",
              "properties": {
                "isValid": {
                  "description": "Indicate if the container registry properties are valid",
                  "type": "boolean"
                },
                "message": {
                  "description": "Detailed validation messages.",
                  "type": "string"
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The response indicates the container registry properties is validating.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "List build services resource.",
        "operationId": "BuildService_ListBuildServices",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the Build Services.",
            "schema": {
              "description": "Object that includes an array of Build service resources and a possible link for next set",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of Build service resources",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Build service resource payload",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the build resource",
                        "x-ms-client-flatten": false,
                        "type": "object",
                        "properties": {
                          "containerRegistry": {
                            "description": "The resource id of the container registry used in this build service.",
                            "type": "string"
                          },
                          "kPackVersion": {
                            "description": "The installed KPack version in this build service.",
                            "type": "string",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the KPack build service",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Succeeded",
                              "Failed",
                              "Deleting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "BuildServiceProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "resourceRequests": {
                            "description": "The runtime resource configuration of this build service.",
                            "type": "object",
                            "properties": {
                              "cpu": {
                                "description": "vCPU allocated to the entire build service node pool.",
                                "type": "string",
                                "readOnly": true
                              },
                              "memory": {
                                "description": "Memory allocated to the entire build service node pool.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get a build service resource.",
        "operationId": "BuildService_GetBuildService",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the Build Service.",
            "schema": {
              "description": "Build service resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the build resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "containerRegistry": {
                      "description": "The resource id of the container registry used in this build service.",
                      "type": "string"
                    },
                    "kPackVersion": {
                      "description": "The installed KPack version in this build service.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the KPack build service",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "BuildServiceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "resourceRequests": {
                      "description": "The runtime resource configuration of this build service.",
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "description": "vCPU allocated to the entire build service node pool.",
                          "type": "string",
                          "readOnly": true
                        },
                        "memory": {
                          "description": "Memory allocated to the entire build service node pool.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Create a build service resource.",
        "operationId": "BuildService_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildService",
            "in": "body",
            "description": "Parameters for the create operation",
            "required": true,
            "schema": {
              "description": "Build service resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the build resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "containerRegistry": {
                      "description": "The resource id of the container registry used in this build service.",
                      "type": "string"
                    },
                    "kPackVersion": {
                      "description": "The installed KPack version in this build service.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the KPack build service",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "BuildServiceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "resourceRequests": {
                      "description": "The runtime resource configuration of this build service.",
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "description": "vCPU allocated to the entire build service node pool.",
                          "type": "string",
                          "readOnly": true
                        },
                        "memory": {
                          "description": "Memory allocated to the entire build service node pool.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the Build Service.",
            "schema": {
              "description": "Build service resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the build resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "containerRegistry": {
                      "description": "The resource id of the container registry used in this build service.",
                      "type": "string"
                    },
                    "kPackVersion": {
                      "description": "The installed KPack version in this build service.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the KPack build service",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "BuildServiceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "resourceRequests": {
                      "description": "The runtime resource configuration of this build service.",
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "description": "vCPU allocated to the entire build service node pool.",
                          "type": "string",
                          "readOnly": true
                        },
                        "memory": {
                          "description": "Memory allocated to the entire build service node pool.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created. The response describes the Build Service and contains an Azure-AsyncOperation header to query the operation result.",
            "schema": {
              "description": "Build service resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the build resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "containerRegistry": {
                      "description": "The resource id of the container registry used in this build service.",
                      "type": "string"
                    },
                    "kPackVersion": {
                      "description": "The installed KPack version in this build service.",
                      "type": "string",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the KPack build service",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "BuildServiceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "resourceRequests": {
                      "description": "The runtime resource configuration of this build service.",
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "description": "vCPU allocated to the entire build service node pool.",
                          "type": "string",
                          "readOnly": true
                        },
                        "memory": {
                          "description": "Memory allocated to the entire build service node pool.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builds": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "List KPack builds.",
        "operationId": "BuildService_ListBuilds",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the builds.",
            "schema": {
              "description": "Object that includes an array of Build resources and a possible link for next set",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of Build resources",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Build resource payload",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the build resource",
                        "x-ms-client-flatten": false,
                        "type": "object",
                        "properties": {
                          "relativePath": {
                            "description": "The relative path of source code",
                            "type": "string"
                          },
                          "builder": {
                            "description": "The resource id of builder to build the source code",
                            "type": "string"
                          },
                          "agentPool": {
                            "description": "The resource id of agent pool",
                            "type": "string"
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the KPack build result",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Succeeded",
                              "Failed",
                              "Deleting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "BuildProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "env": {
                            "description": "The environment variables for this build",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "apms": {
                            "description": "The APMs for this build",
                            "type": "array",
                            "x-ms-identifiers": [
                              "resourceId"
                            ],
                            "items": {
                              "description": "A reference to the APM",
                              "required": [
                                "resourceId"
                              ],
                              "type": "object",
                              "properties": {
                                "resourceId": {
                                  "description": "Resource Id of the APM",
                                  "type": "string",
                                  "format": "arm-id",
                                  "x-ms-arm-id-details": {
                                    "allowedResources": [
                                      {
                                        "type": "Microsoft.AppPlatform/Spring/apms"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "certificates": {
                            "description": "The CA Certificates for this build",
                            "type": "array",
                            "x-ms-identifiers": [
                              "resourceId"
                            ],
                            "items": {
                              "description": "A reference to the certificate",
                              "required": [
                                "resourceId"
                              ],
                              "type": "object",
                              "properties": {
                                "resourceId": {
                                  "description": "Resource Id of the certificate",
                                  "type": "string",
                                  "format": "arm-id",
                                  "x-ms-arm-id-details": {
                                    "allowedResources": [
                                      {
                                        "type": "Microsoft.AppPlatform/Spring/certificates"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "triggeredBuildResult": {
                            "description": " The build result triggered by this build",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "id": {
                                "description": "The unique build id of this build result",
                                "type": "string"
                              },
                              "provisioningState": {
                                "description": "The provisioning state of this build result",
                                "enum": [
                                  "Queuing",
                                  "Building",
                                  "Succeeded",
                                  "Failed",
                                  "Deleting",
                                  "Canceled"
                                ],
                                "type": "string",
                                "readOnly": true,
                                "x-ms-enum": {
                                  "name": "TriggeredBuildResultProvisioningState",
                                  "modelAsString": true
                                }
                              },
                              "image": {
                                "description": "The container image of this build result",
                                "type": "string"
                              },
                              "lastTransitionTime": {
                                "format": "date-time",
                                "description": "The last transition time of this build result",
                                "type": "string"
                              },
                              "lastTransitionReason": {
                                "description": "The last transition reason of this build result",
                                "type": "string"
                              },
                              "lastTransitionStatus": {
                                "description": "The last transition status of this build result",
                                "type": "string"
                              }
                            }
                          },
                          "resourceRequests": {
                            "description": "The customized build resource for this build",
                            "type": "object",
                            "properties": {
                              "cpu": {
                                "description": "Optional Cpu allocated to the build resource. 1 core can be represented by 1 or 1000m. \r\nThe default value is 1, this should not exceed build service agent pool cpu size.",
                                "type": "string",
                                "default": "1"
                              },
                              "memory": {
                                "description": "Optional Memory allocated to the build resource. 1 GB can be represented by 1Gi or 1024Mi. \r\nThe default value is 2Gi, this should not exceed build service agent pool memory size.",
                                "type": "string",
                                "default": "2Gi"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builds/{buildName}": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get a KPack build.",
        "operationId": "BuildService_GetBuild",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildName",
            "in": "path",
            "description": "The name of the build resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the Build.",
            "schema": {
              "description": "Build resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the build resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "relativePath": {
                      "description": "The relative path of source code",
                      "type": "string"
                    },
                    "builder": {
                      "description": "The resource id of builder to build the source code",
                      "type": "string"
                    },
                    "agentPool": {
                      "description": "The resource id of agent pool",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the KPack build result",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "BuildProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "env": {
                      "description": "The environment variables for this build",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "apms": {
                      "description": "The APMs for this build",
                      "type": "array",
                      "x-ms-identifiers": [
                        "resourceId"
                      ],
                      "items": {
                        "description": "A reference to the APM",
                        "required": [
                          "resourceId"
                        ],
                        "type": "object",
                        "properties": {
                          "resourceId": {
                            "description": "Resource Id of the APM",
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.AppPlatform/Spring/apms"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "certificates": {
                      "description": "The CA Certificates for this build",
                      "type": "array",
                      "x-ms-identifiers": [
                        "resourceId"
                      ],
                      "items": {
                        "description": "A reference to the certificate",
                        "required": [
                          "resourceId"
                        ],
                        "type": "object",
                        "properties": {
                          "resourceId": {
                            "description": "Resource Id of the certificate",
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.AppPlatform/Spring/certificates"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "triggeredBuildResult": {
                      "description": " The build result triggered by this build",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "id": {
                          "description": "The unique build id of this build result",
                          "type": "string"
                        },
                        "provisioningState": {
                          "description": "The provisioning state of this build result",
                          "enum": [
                            "Queuing",
                            "Building",
                            "Succeeded",
                            "Failed",
                            "Deleting",
                            "Canceled"
                          ],
                          "type": "string",
                          "readOnly": true,
                          "x-ms-enum": {
                            "name": "TriggeredBuildResultProvisioningState",
                            "modelAsString": true
                          }
                        },
                        "image": {
                          "description": "The container image of this build result",
                          "type": "string"
                        },
                        "lastTransitionTime": {
                          "format": "date-time",
                          "description": "The last transition time of this build result",
                          "type": "string"
                        },
                        "lastTransitionReason": {
                          "description": "The last transition reason of this build result",
                          "type": "string"
                        },
                        "lastTransitionStatus": {
                          "description": "The last transition status of this build result",
                          "type": "string"
                        }
                      }
                    },
                    "resourceRequests": {
                      "description": "The customized build resource for this build",
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "description": "Optional Cpu allocated to the build resource. 1 core can be represented by 1 or 1000m. \r\nThe default value is 1, this should not exceed build service agent pool cpu size.",
                          "type": "string",
                          "default": "1"
                        },
                        "memory": {
                          "description": "Optional Memory allocated to the build resource. 1 GB can be represented by 1Gi or 1024Mi. \r\nThe default value is 2Gi, this should not exceed build service agent pool memory size.",
                          "type": "string",
                          "default": "2Gi"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Create or update a KPack build.",
        "operationId": "BuildService_CreateOrUpdateBuild",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildName",
            "in": "path",
            "description": "The name of the build resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "build",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "description": "Build resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the build resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "relativePath": {
                      "description": "The relative path of source code",
                      "type": "string"
                    },
                    "builder": {
                      "description": "The resource id of builder to build the source code",
                      "type": "string"
                    },
                    "agentPool": {
                      "description": "The resource id of agent pool",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the KPack build result",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "BuildProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "env": {
                      "description": "The environment variables for this build",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "apms": {
                      "description": "The APMs for this build",
                      "type": "array",
                      "x-ms-identifiers": [
                        "resourceId"
                      ],
                      "items": {
                        "description": "A reference to the APM",
                        "required": [
                          "resourceId"
                        ],
                        "type": "object",
                        "properties": {
                          "resourceId": {
                            "description": "Resource Id of the APM",
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.AppPlatform/Spring/apms"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "certificates": {
                      "description": "The CA Certificates for this build",
                      "type": "array",
                      "x-ms-identifiers": [
                        "resourceId"
                      ],
                      "items": {
                        "description": "A reference to the certificate",
                        "required": [
                          "resourceId"
                        ],
                        "type": "object",
                        "properties": {
                          "resourceId": {
                            "description": "Resource Id of the certificate",
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.AppPlatform/Spring/certificates"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "triggeredBuildResult": {
                      "description": " The build result triggered by this build",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "id": {
                          "description": "The unique build id of this build result",
                          "type": "string"
                        },
                        "provisioningState": {
                          "description": "The provisioning state of this build result",
                          "enum": [
                            "Queuing",
                            "Building",
                            "Succeeded",
                            "Failed",
                            "Deleting",
                            "Canceled"
                          ],
                          "type": "string",
                          "readOnly": true,
                          "x-ms-enum": {
                            "name": "TriggeredBuildResultProvisioningState",
                            "modelAsString": true
                          }
                        },
                        "image": {
                          "description": "The container image of this build result",
                          "type": "string"
                        },
                        "lastTransitionTime": {
                          "format": "date-time",
                          "description": "The last transition time of this build result",
                          "type": "string"
                        },
                        "lastTransitionReason": {
                          "description": "The last transition reason of this build result",
                          "type": "string"
                        },
                        "lastTransitionStatus": {
                          "description": "The last transition status of this build result",
                          "type": "string"
                        }
                      }
                    },
                    "resourceRequests": {
                      "description": "The customized build resource for this build",
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "description": "Optional Cpu allocated to the build resource. 1 core can be represented by 1 or 1000m. \r\nThe default value is 1, this should not exceed build service agent pool cpu size.",
                          "type": "string",
                          "default": "1"
                        },
                        "memory": {
                          "description": "Optional Memory allocated to the build resource. 1 GB can be represented by 1Gi or 1024Mi. \r\nThe default value is 2Gi, this should not exceed build service agent pool memory size.",
                          "type": "string",
                          "default": "2Gi"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated Build.",
            "schema": {
              "description": "Build resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the build resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "relativePath": {
                      "description": "The relative path of source code",
                      "type": "string"
                    },
                    "builder": {
                      "description": "The resource id of builder to build the source code",
                      "type": "string"
                    },
                    "agentPool": {
                      "description": "The resource id of agent pool",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the KPack build result",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "BuildProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "env": {
                      "description": "The environment variables for this build",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "apms": {
                      "description": "The APMs for this build",
                      "type": "array",
                      "x-ms-identifiers": [
                        "resourceId"
                      ],
                      "items": {
                        "description": "A reference to the APM",
                        "required": [
                          "resourceId"
                        ],
                        "type": "object",
                        "properties": {
                          "resourceId": {
                            "description": "Resource Id of the APM",
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.AppPlatform/Spring/apms"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "certificates": {
                      "description": "The CA Certificates for this build",
                      "type": "array",
                      "x-ms-identifiers": [
                        "resourceId"
                      ],
                      "items": {
                        "description": "A reference to the certificate",
                        "required": [
                          "resourceId"
                        ],
                        "type": "object",
                        "properties": {
                          "resourceId": {
                            "description": "Resource Id of the certificate",
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.AppPlatform/Spring/certificates"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "triggeredBuildResult": {
                      "description": " The build result triggered by this build",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "id": {
                          "description": "The unique build id of this build result",
                          "type": "string"
                        },
                        "provisioningState": {
                          "description": "The provisioning state of this build result",
                          "enum": [
                            "Queuing",
                            "Building",
                            "Succeeded",
                            "Failed",
                            "Deleting",
                            "Canceled"
                          ],
                          "type": "string",
                          "readOnly": true,
                          "x-ms-enum": {
                            "name": "TriggeredBuildResultProvisioningState",
                            "modelAsString": true
                          }
                        },
                        "image": {
                          "description": "The container image of this build result",
                          "type": "string"
                        },
                        "lastTransitionTime": {
                          "format": "date-time",
                          "description": "The last transition time of this build result",
                          "type": "string"
                        },
                        "lastTransitionReason": {
                          "description": "The last transition reason of this build result",
                          "type": "string"
                        },
                        "lastTransitionStatus": {
                          "description": "The last transition status of this build result",
                          "type": "string"
                        }
                      }
                    },
                    "resourceRequests": {
                      "description": "The customized build resource for this build",
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "description": "Optional Cpu allocated to the build resource. 1 core can be represented by 1 or 1000m. \r\nThe default value is 1, this should not exceed build service agent pool cpu size.",
                          "type": "string",
                          "default": "1"
                        },
                        "memory": {
                          "description": "Optional Memory allocated to the build resource. 1 GB can be represented by 1Gi or 1024Mi. \r\nThe default value is 2Gi, this should not exceed build service agent pool memory size.",
                          "type": "string",
                          "default": "2Gi"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created. The response describes the new Build and contains an Azure-AsyncOperation header to query the operation result.",
            "schema": {
              "description": "Build resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the build resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "relativePath": {
                      "description": "The relative path of source code",
                      "type": "string"
                    },
                    "builder": {
                      "description": "The resource id of builder to build the source code",
                      "type": "string"
                    },
                    "agentPool": {
                      "description": "The resource id of agent pool",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the KPack build result",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "BuildProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "env": {
                      "description": "The environment variables for this build",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "apms": {
                      "description": "The APMs for this build",
                      "type": "array",
                      "x-ms-identifiers": [
                        "resourceId"
                      ],
                      "items": {
                        "description": "A reference to the APM",
                        "required": [
                          "resourceId"
                        ],
                        "type": "object",
                        "properties": {
                          "resourceId": {
                            "description": "Resource Id of the APM",
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.AppPlatform/Spring/apms"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "certificates": {
                      "description": "The CA Certificates for this build",
                      "type": "array",
                      "x-ms-identifiers": [
                        "resourceId"
                      ],
                      "items": {
                        "description": "A reference to the certificate",
                        "required": [
                          "resourceId"
                        ],
                        "type": "object",
                        "properties": {
                          "resourceId": {
                            "description": "Resource Id of the certificate",
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.AppPlatform/Spring/certificates"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "triggeredBuildResult": {
                      "description": " The build result triggered by this build",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "id": {
                          "description": "The unique build id of this build result",
                          "type": "string"
                        },
                        "provisioningState": {
                          "description": "The provisioning state of this build result",
                          "enum": [
                            "Queuing",
                            "Building",
                            "Succeeded",
                            "Failed",
                            "Deleting",
                            "Canceled"
                          ],
                          "type": "string",
                          "readOnly": true,
                          "x-ms-enum": {
                            "name": "TriggeredBuildResultProvisioningState",
                            "modelAsString": true
                          }
                        },
                        "image": {
                          "description": "The container image of this build result",
                          "type": "string"
                        },
                        "lastTransitionTime": {
                          "format": "date-time",
                          "description": "The last transition time of this build result",
                          "type": "string"
                        },
                        "lastTransitionReason": {
                          "description": "The last transition reason of this build result",
                          "type": "string"
                        },
                        "lastTransitionStatus": {
                          "description": "The last transition status of this build result",
                          "type": "string"
                        }
                      }
                    },
                    "resourceRequests": {
                      "description": "The customized build resource for this build",
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "description": "Optional Cpu allocated to the build resource. 1 core can be represented by 1 or 1000m. \r\nThe default value is 1, this should not exceed build service agent pool cpu size.",
                          "type": "string",
                          "default": "1"
                        },
                        "memory": {
                          "description": "Optional Memory allocated to the build resource. 1 GB can be represented by 1Gi or 1024Mi. \r\nThe default value is 2Gi, this should not exceed build service agent pool memory size.",
                          "type": "string",
                          "default": "2Gi"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppPlatform"
        ],
        "description": "delete a KPack build.",
        "operationId": "BuildService_DeleteBuild",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildName",
            "in": "path",
            "description": "The name of the build resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. The response indicates the delete operation is performed in the background.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Success. The response indicates the build resource doesn't exist or has deleted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildpackBindings": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get collection of buildpack bindings under all builders.",
        "operationId": "BuildpackBinding_ListForCluster",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of buildpack bindings under all builders in the cluster.",
            "schema": {
              "description": "Object that includes an array of BuildpackBinding resources and a possible link for next set",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of BuildpackBinding resources",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Buildpack Binding Resource object",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of a buildpack binding",
                        "type": "object",
                        "properties": {
                          "bindingType": {
                            "description": "Buildpack Binding Type",
                            "enum": [
                              "ApplicationInsights",
                              "ApacheSkyWalking",
                              "AppDynamics",
                              "Dynatrace",
                              "NewRelic",
                              "ElasticAPM"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "bindingType",
                              "modelAsString": true
                            }
                          },
                          "provisioningState": {
                            "description": "State of the Buildpack Binding.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Succeeded",
                              "Failed",
                              "Deleting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "BuildpackBindingProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "launchProperties": {
                            "description": "The object describes the buildpack binding launch properties",
                            "type": "object",
                            "properties": {
                              "properties": {
                                "description": "Non-sensitive properties for launchProperties",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "secrets": {
                                "description": "Sensitive properties for launchProperties",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builders/{builderName}/buildpackBindings/{buildpackBindingName}": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get a buildpack binding by name.",
        "operationId": "BuildpackBinding_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "builderName",
            "in": "path",
            "description": "The name of the builder resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildpackBindingName",
            "in": "path",
            "description": "The name of the Buildpack Binding Name",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes a Buildpack Binding.",
            "schema": {
              "description": "Buildpack Binding Resource object",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of a buildpack binding",
                  "type": "object",
                  "properties": {
                    "bindingType": {
                      "description": "Buildpack Binding Type",
                      "enum": [
                        "ApplicationInsights",
                        "ApacheSkyWalking",
                        "AppDynamics",
                        "Dynatrace",
                        "NewRelic",
                        "ElasticAPM"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "bindingType",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "description": "State of the Buildpack Binding.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "BuildpackBindingProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "launchProperties": {
                      "description": "The object describes the buildpack binding launch properties",
                      "type": "object",
                      "properties": {
                        "properties": {
                          "description": "Non-sensitive properties for launchProperties",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "secrets": {
                          "description": "Sensitive properties for launchProperties",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Create or update a buildpack binding.",
        "operationId": "BuildpackBinding_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "builderName",
            "in": "path",
            "description": "The name of the builder resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildpackBindingName",
            "in": "path",
            "description": "The name of the Buildpack Binding Name",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildpackBinding",
            "in": "body",
            "description": "The target buildpack binding for the create or update operation",
            "required": true,
            "schema": {
              "description": "Buildpack Binding Resource object",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of a buildpack binding",
                  "type": "object",
                  "properties": {
                    "bindingType": {
                      "description": "Buildpack Binding Type",
                      "enum": [
                        "ApplicationInsights",
                        "ApacheSkyWalking",
                        "AppDynamics",
                        "Dynatrace",
                        "NewRelic",
                        "ElasticAPM"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "bindingType",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "description": "State of the Buildpack Binding.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "BuildpackBindingProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "launchProperties": {
                      "description": "The object describes the buildpack binding launch properties",
                      "type": "object",
                      "properties": {
                        "properties": {
                          "description": "Non-sensitive properties for launchProperties",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "secrets": {
                          "description": "Sensitive properties for launchProperties",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes a Buildpack Binding for the create or update operation.",
            "schema": {
              "description": "Buildpack Binding Resource object",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of a buildpack binding",
                  "type": "object",
                  "properties": {
                    "bindingType": {
                      "description": "Buildpack Binding Type",
                      "enum": [
                        "ApplicationInsights",
                        "ApacheSkyWalking",
                        "AppDynamics",
                        "Dynatrace",
                        "NewRelic",
                        "ElasticAPM"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "bindingType",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "description": "State of the Buildpack Binding.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "BuildpackBindingProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "launchProperties": {
                      "description": "The object describes the buildpack binding launch properties",
                      "type": "object",
                      "properties": {
                        "properties": {
                          "description": "Non-sensitive properties for launchProperties",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "secrets": {
                          "description": "Sensitive properties for launchProperties",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created. The response describes the new Buildpack Binding and contains an Azure-AsyncOperation header to query the operation result.",
            "schema": {
              "description": "Buildpack Binding Resource object",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of a buildpack binding",
                  "type": "object",
                  "properties": {
                    "bindingType": {
                      "description": "Buildpack Binding Type",
                      "enum": [
                        "ApplicationInsights",
                        "ApacheSkyWalking",
                        "AppDynamics",
                        "Dynatrace",
                        "NewRelic",
                        "ElasticAPM"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "bindingType",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "description": "State of the Buildpack Binding.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "BuildpackBindingProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "launchProperties": {
                      "description": "The object describes the buildpack binding launch properties",
                      "type": "object",
                      "properties": {
                        "properties": {
                          "description": "Non-sensitive properties for launchProperties",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "secrets": {
                          "description": "Sensitive properties for launchProperties",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Operation to delete a Buildpack Binding",
        "operationId": "BuildpackBinding_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "builderName",
            "in": "path",
            "description": "The name of the builder resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildpackBindingName",
            "in": "path",
            "description": "The name of the Buildpack Binding Name",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response indicates the resource is deleted."
          },
          "202": {
            "description": "Accepted. The response indicates the delete operation is performed in the background."
          },
          "204": {
            "description": "Success. The response indicates the resource doesn't exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builders/{builderName}/buildpackBindings": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Handles requests to list all buildpack bindings in a builder.",
        "operationId": "BuildpackBinding_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "builderName",
            "in": "path",
            "description": "The name of the builder resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of Buildpack Binding in the builder.",
            "schema": {
              "description": "Object that includes an array of BuildpackBinding resources and a possible link for next set",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of BuildpackBinding resources",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Buildpack Binding Resource object",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of a buildpack binding",
                        "type": "object",
                        "properties": {
                          "bindingType": {
                            "description": "Buildpack Binding Type",
                            "enum": [
                              "ApplicationInsights",
                              "ApacheSkyWalking",
                              "AppDynamics",
                              "Dynatrace",
                              "NewRelic",
                              "ElasticAPM"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "bindingType",
                              "modelAsString": true
                            }
                          },
                          "provisioningState": {
                            "description": "State of the Buildpack Binding.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Succeeded",
                              "Failed",
                              "Deleting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "BuildpackBindingProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "launchProperties": {
                            "description": "The object describes the buildpack binding launch properties",
                            "type": "object",
                            "properties": {
                              "properties": {
                                "description": "Non-sensitive properties for launchProperties",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "secrets": {
                                "description": "Sensitive properties for launchProperties",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builds/{buildName}/results": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "List KPack build results.",
        "operationId": "BuildService_ListBuildResults",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildName",
            "in": "path",
            "description": "The name of the build resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the build results.",
            "schema": {
              "description": "Object that includes an array of Build result resources and a possible link for next set",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of Build result resources",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Build result resource payload",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the build result resource",
                        "x-ms-client-flatten": false,
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of this build result",
                            "type": "string"
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the KPack build result",
                            "enum": [
                              "Queuing",
                              "Building",
                              "Succeeded",
                              "Failed",
                              "Deleting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "BuildResultProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "error": {
                            "description": "Error when build is failed.",
                            "type": "object",
                            "properties": {
                              "code": {
                                "description": "The code of error.",
                                "type": "string"
                              },
                              "message": {
                                "description": "The message of error.",
                                "type": "string"
                              }
                            }
                          },
                          "buildPodName": {
                            "description": "The build pod name which can be used to get the build log streaming.",
                            "type": "string"
                          },
                          "buildStages": {
                            "description": "All of the build stage (init-container and container) resources in build pod.",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "description": "The build stage (init-container and container) resources in build pod.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "The name of this build stage resource.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "The provisioning state of this build stage resource.",
                                  "enum": [
                                    "NotStarted",
                                    "Running",
                                    "Succeeded",
                                    "Failed"
                                  ],
                                  "type": "string",
                                  "readOnly": true,
                                  "x-ms-enum": {
                                    "name": "KPackBuildStageProvisioningState",
                                    "modelAsString": true
                                  }
                                },
                                "exitCode": {
                                  "description": "The exit code of this build init container.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "reason": {
                                  "description": "The reason of this build init container.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          },
                          "image": {
                            "description": "The container registry image of this build result.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builds/{buildName}/results/{buildResultName}": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get a KPack build result.",
        "operationId": "BuildService_GetBuildResult",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildName",
            "in": "path",
            "description": "The name of the build resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildResultName",
            "in": "path",
            "description": "The name of the build result resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the build result.",
            "schema": {
              "description": "Build result resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the build result resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of this build result",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the KPack build result",
                      "enum": [
                        "Queuing",
                        "Building",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "BuildResultProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "error": {
                      "description": "Error when build is failed.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The code of error.",
                          "type": "string"
                        },
                        "message": {
                          "description": "The message of error.",
                          "type": "string"
                        }
                      }
                    },
                    "buildPodName": {
                      "description": "The build pod name which can be used to get the build log streaming.",
                      "type": "string"
                    },
                    "buildStages": {
                      "description": "All of the build stage (init-container and container) resources in build pod.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "The build stage (init-container and container) resources in build pod.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of this build stage resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "The provisioning state of this build stage resource.",
                            "enum": [
                              "NotStarted",
                              "Running",
                              "Succeeded",
                              "Failed"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "KPackBuildStageProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "exitCode": {
                            "description": "The exit code of this build init container.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason of this build init container.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "image": {
                      "description": "The container registry image of this build result.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builds/{buildName}/results/{buildResultName}/getLogFileUrl": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get a KPack build result log download URL.",
        "operationId": "BuildService_GetBuildResultLog",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildName",
            "in": "path",
            "description": "The name of the build resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildResultName",
            "in": "path",
            "description": "The name of the build result resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Build result log exists and can be downloaded.",
            "schema": {
              "description": "Build result log resource properties payload",
              "type": "object",
              "properties": {
                "blobUrl": {
                  "description": "The public download URL of this build result log",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builders/{builderName}": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get a KPack builder.",
        "operationId": "BuildServiceBuilder_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "builderName",
            "in": "path",
            "description": "The name of the builder resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the Builder",
            "schema": {
              "description": "KPack Builder resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Property of the Builder resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Builder provision status.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "BuilderProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "stack": {
                      "description": "Builder cluster stack property.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Id of the ClusterStack.",
                          "type": "string"
                        },
                        "version": {
                          "description": "Version of the ClusterStack",
                          "type": "string"
                        }
                      }
                    },
                    "buildpackGroups": {
                      "description": "Builder buildpack groups.",
                      "type": "array",
                      "items": {
                        "description": "Buildpack group properties of the Builder",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Buildpack group name",
                            "type": "string"
                          },
                          "buildpacks": {
                            "description": "Buildpacks in the buildpack group",
                            "type": "array",
                            "uniqueItems": false,
                            "items": {
                              "description": "Buildpack properties payload",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "Id of the buildpack",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Create or update a KPack builder.",
        "operationId": "BuildServiceBuilder_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "builderName",
            "in": "path",
            "description": "The name of the builder resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "builderResource",
            "in": "body",
            "description": "The target builder for the create or update operation",
            "required": true,
            "schema": {
              "description": "KPack Builder resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Property of the Builder resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Builder provision status.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "BuilderProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "stack": {
                      "description": "Builder cluster stack property.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Id of the ClusterStack.",
                          "type": "string"
                        },
                        "version": {
                          "description": "Version of the ClusterStack",
                          "type": "string"
                        }
                      }
                    },
                    "buildpackGroups": {
                      "description": "Builder buildpack groups.",
                      "type": "array",
                      "items": {
                        "description": "Buildpack group properties of the Builder",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Buildpack group name",
                            "type": "string"
                          },
                          "buildpacks": {
                            "description": "Buildpacks in the buildpack group",
                            "type": "array",
                            "uniqueItems": false,
                            "items": {
                              "description": "Buildpack properties payload",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "Id of the buildpack",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the Builder",
            "schema": {
              "description": "KPack Builder resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Property of the Builder resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Builder provision status.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "BuilderProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "stack": {
                      "description": "Builder cluster stack property.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Id of the ClusterStack.",
                          "type": "string"
                        },
                        "version": {
                          "description": "Version of the ClusterStack",
                          "type": "string"
                        }
                      }
                    },
                    "buildpackGroups": {
                      "description": "Builder buildpack groups.",
                      "type": "array",
                      "items": {
                        "description": "Buildpack group properties of the Builder",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Buildpack group name",
                            "type": "string"
                          },
                          "buildpacks": {
                            "description": "Buildpacks in the buildpack group",
                            "type": "array",
                            "uniqueItems": false,
                            "items": {
                              "description": "Buildpack properties payload",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "Id of the buildpack",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created. The response describes the new Builder and contains an Azure-AsyncOperation header to query the operation result.",
            "schema": {
              "description": "KPack Builder resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Property of the Builder resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Builder provision status.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "BuilderProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "stack": {
                      "description": "Builder cluster stack property.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Id of the ClusterStack.",
                          "type": "string"
                        },
                        "version": {
                          "description": "Version of the ClusterStack",
                          "type": "string"
                        }
                      }
                    },
                    "buildpackGroups": {
                      "description": "Builder buildpack groups.",
                      "type": "array",
                      "items": {
                        "description": "Buildpack group properties of the Builder",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Buildpack group name",
                            "type": "string"
                          },
                          "buildpacks": {
                            "description": "Buildpacks in the buildpack group",
                            "type": "array",
                            "uniqueItems": false,
                            "items": {
                              "description": "Buildpack properties payload",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "Id of the buildpack",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Delete a KPack builder.",
        "operationId": "BuildServiceBuilder_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "builderName",
            "in": "path",
            "description": "The name of the builder resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response indicates the builder resource has deleted."
          },
          "202": {
            "description": "Accepted. The response indicates the builder resource is deleting."
          },
          "204": {
            "description": "Success. The response indicates the builder resource doesn't exist or has deleted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builders": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "List KPack builders result.",
        "operationId": "BuildServiceBuilder_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the Builder List",
            "schema": {
              "description": "Object that includes an array of Builder resources and a possible link for next set",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of Builder resources",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "KPack Builder resource",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Property of the Builder resource.",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Builder provision status.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Succeeded",
                              "Failed",
                              "Deleting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "BuilderProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "stack": {
                            "description": "Builder cluster stack property.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Id of the ClusterStack.",
                                "type": "string"
                              },
                              "version": {
                                "description": "Version of the ClusterStack",
                                "type": "string"
                              }
                            }
                          },
                          "buildpackGroups": {
                            "description": "Builder buildpack groups.",
                            "type": "array",
                            "items": {
                              "description": "Buildpack group properties of the Builder",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Buildpack group name",
                                  "type": "string"
                                },
                                "buildpacks": {
                                  "description": "Buildpacks in the buildpack group",
                                  "type": "array",
                                  "uniqueItems": false,
                                  "items": {
                                    "description": "Buildpack properties payload",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "description": "Id of the buildpack",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/getResourceUploadUrl": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get an resource upload URL for build service, which may be artifacts or source archive.",
        "operationId": "BuildService_GetResourceUploadUrl",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the resource upload URL.",
            "schema": {
              "description": "Resource upload definition payload",
              "type": "object",
              "properties": {
                "relativePath": {
                  "description": "Source relative path",
                  "type": "string"
                },
                "uploadUrl": {
                  "description": "Upload URL",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/supportedBuildpacks": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get all supported buildpacks.",
        "operationId": "BuildService_ListSupportedBuildpacks",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes all supported buildpacks.",
            "schema": {
              "description": "Object that includes an array of supported buildpacks resources and a possible link for next set",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of supported buildpacks resources",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Supported buildpack resource payload",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Supported buildpack resource properties",
                        "type": "object",
                        "properties": {
                          "buildpackId": {
                            "description": "The id of supported buildpack",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/supportedBuildpacks/{buildpackName}": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get the supported buildpack resource.",
        "operationId": "BuildService_GetSupportedBuildpack",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildpackName",
            "in": "path",
            "description": "The name of the buildpack resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the supported buildpack.",
            "schema": {
              "description": "Supported buildpack resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Supported buildpack resource properties",
                  "type": "object",
                  "properties": {
                    "buildpackId": {
                      "description": "The id of supported buildpack",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/supportedStacks": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get all supported stacks.",
        "operationId": "BuildService_ListSupportedStacks",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes all supported stacks.",
            "schema": {
              "description": "Object that includes an array of supported stacks resources and a possible link for next set",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of supported stacks resources",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Supported stack resource payload",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Supported stack resource properties",
                        "type": "object",
                        "properties": {
                          "stackId": {
                            "description": "The id of supported stack",
                            "type": "string"
                          },
                          "version": {
                            "description": "The version of supported stack",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/supportedStacks/{stackName}": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get the supported stack resource.",
        "operationId": "BuildService_GetSupportedStack",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "The name of the stack resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the supported stack.",
            "schema": {
              "description": "Supported stack resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Supported stack resource properties",
                  "type": "object",
                  "properties": {
                    "stackId": {
                      "description": "The id of supported stack",
                      "type": "string"
                    },
                    "version": {
                      "description": "The version of supported stack",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/agentPools": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "List build service agent pool.",
        "operationId": "BuildServiceAgentPool_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes build service agent pool.",
            "schema": {
              "description": "Object that includes an array of build service agent pool resources and a possible link for next set",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of build service agent pool resource",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "The build service agent pool resource",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "build service agent pool properties",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the build service agent pool",
                            "type": "string",
                            "readOnly": true
                          },
                          "poolSize": {
                            "description": "build service agent pool size properties",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "The name of build service agent pool size",
                                "type": "string"
                              },
                              "cpu": {
                                "description": "The cpu property of build service agent pool size",
                                "type": "string",
                                "readOnly": true
                              },
                              "memory": {
                                "description": "The memory property of build service agent pool size",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/agentPools/{agentPoolName}": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get build service agent pool.",
        "operationId": "BuildServiceAgentPool_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "agentPoolName",
            "in": "path",
            "description": "The name of the build service agent pool resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes build service agent pool.",
            "schema": {
              "description": "The build service agent pool resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "build service agent pool properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the build service agent pool",
                      "type": "string",
                      "readOnly": true
                    },
                    "poolSize": {
                      "description": "build service agent pool size properties",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of build service agent pool size",
                          "type": "string"
                        },
                        "cpu": {
                          "description": "The cpu property of build service agent pool size",
                          "type": "string",
                          "readOnly": true
                        },
                        "memory": {
                          "description": "The memory property of build service agent pool size",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Create or update build service agent pool.",
        "operationId": "BuildServiceAgentPool_UpdatePut",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "agentPoolName",
            "in": "path",
            "description": "The name of the build service agent pool resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "agentPoolResource",
            "in": "body",
            "description": "Parameters for the update operation",
            "required": true,
            "schema": {
              "description": "The build service agent pool resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "build service agent pool properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the build service agent pool",
                      "type": "string",
                      "readOnly": true
                    },
                    "poolSize": {
                      "description": "build service agent pool size properties",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of build service agent pool size",
                          "type": "string"
                        },
                        "cpu": {
                          "description": "The cpu property of build service agent pool size",
                          "type": "string",
                          "readOnly": true
                        },
                        "memory": {
                          "description": "The memory property of build service agent pool size",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes build service agent pool.",
            "schema": {
              "description": "The build service agent pool resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "build service agent pool properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the build service agent pool",
                      "type": "string",
                      "readOnly": true
                    },
                    "poolSize": {
                      "description": "build service agent pool size properties",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of build service agent pool size",
                          "type": "string"
                        },
                        "cpu": {
                          "description": "The cpu property of build service agent pool size",
                          "type": "string",
                          "readOnly": true
                        },
                        "memory": {
                          "description": "The memory property of build service agent pool size",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created. The response describes the new build service agent pool and contains an Azure-AsyncOperation header to query the operation result.",
            "schema": {
              "description": "The build service agent pool resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "build service agent pool properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the build service agent pool",
                      "type": "string",
                      "readOnly": true
                    },
                    "poolSize": {
                      "description": "build service agent pool size properties",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of build service agent pool size",
                          "type": "string"
                        },
                        "cpu": {
                          "description": "The cpu property of build service agent pool size",
                          "type": "string",
                          "readOnly": true
                        },
                        "memory": {
                          "description": "The memory property of build service agent pool size",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/monitoringSettings/default": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get the Monitoring Setting and its properties.",
        "operationId": "MonitoringSettings_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the corresponding Monitoring Setting.",
            "schema": {
              "description": "Monitoring Setting resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Monitoring Setting resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Monitoring Setting.",
                      "enum": [
                        "NotAvailable",
                        "Failed",
                        "Succeeded",
                        "Updating"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "MonitoringSettingState",
                        "modelAsString": true
                      }
                    },
                    "error": {
                      "description": "Error when apply Monitoring Setting changes.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The code of error.",
                          "type": "string"
                        },
                        "message": {
                          "description": "The message of error.",
                          "type": "string"
                        }
                      }
                    },
                    "traceEnabled": {
                      "description": "Indicates whether enable the trace functionality, which will be deprecated since api version 2020-11-01-preview. Please leverage appInsightsInstrumentationKey to indicate if monitoringSettings enabled or not",
                      "type": "boolean"
                    },
                    "appInsightsInstrumentationKey": {
                      "description": "Target application insight instrumentation key, null or whitespace include empty will disable monitoringSettings",
                      "type": "string"
                    },
                    "appInsightsSamplingRate": {
                      "description": "Indicates the sampling rate of application insight agent, should be in range [0.0, 100.0]",
                      "format": "double",
                      "maximum": 100,
                      "minimum": 0,
                      "type": "number"
                    },
                    "appInsightsAgentVersions": {
                      "description": "Indicates the versions of application insight agent",
                      "type": "object",
                      "properties": {
                        "java": {
                          "description": "Indicates the version of application insight java agent",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Update the Monitoring Setting.",
        "operationId": "MonitoringSettings_UpdatePut",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "monitoringSettingResource",
            "in": "body",
            "description": "Parameters for the update operation",
            "required": true,
            "schema": {
              "description": "Monitoring Setting resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Monitoring Setting resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Monitoring Setting.",
                      "enum": [
                        "NotAvailable",
                        "Failed",
                        "Succeeded",
                        "Updating"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "MonitoringSettingState",
                        "modelAsString": true
                      }
                    },
                    "error": {
                      "description": "Error when apply Monitoring Setting changes.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The code of error.",
                          "type": "string"
                        },
                        "message": {
                          "description": "The message of error.",
                          "type": "string"
                        }
                      }
                    },
                    "traceEnabled": {
                      "description": "Indicates whether enable the trace functionality, which will be deprecated since api version 2020-11-01-preview. Please leverage appInsightsInstrumentationKey to indicate if monitoringSettings enabled or not",
                      "type": "boolean"
                    },
                    "appInsightsInstrumentationKey": {
                      "description": "Target application insight instrumentation key, null or whitespace include empty will disable monitoringSettings",
                      "type": "string"
                    },
                    "appInsightsSamplingRate": {
                      "description": "Indicates the sampling rate of application insight agent, should be in range [0.0, 100.0]",
                      "format": "double",
                      "maximum": 100,
                      "minimum": 0,
                      "type": "number"
                    },
                    "appInsightsAgentVersions": {
                      "description": "Indicates the versions of application insight agent",
                      "type": "object",
                      "properties": {
                        "java": {
                          "description": "Indicates the version of application insight java agent",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated Monitoring Setting.",
            "schema": {
              "description": "Monitoring Setting resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Monitoring Setting resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Monitoring Setting.",
                      "enum": [
                        "NotAvailable",
                        "Failed",
                        "Succeeded",
                        "Updating"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "MonitoringSettingState",
                        "modelAsString": true
                      }
                    },
                    "error": {
                      "description": "Error when apply Monitoring Setting changes.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The code of error.",
                          "type": "string"
                        },
                        "message": {
                          "description": "The message of error.",
                          "type": "string"
                        }
                      }
                    },
                    "traceEnabled": {
                      "description": "Indicates whether enable the trace functionality, which will be deprecated since api version 2020-11-01-preview. Please leverage appInsightsInstrumentationKey to indicate if monitoringSettings enabled or not",
                      "type": "boolean"
                    },
                    "appInsightsInstrumentationKey": {
                      "description": "Target application insight instrumentation key, null or whitespace include empty will disable monitoringSettings",
                      "type": "string"
                    },
                    "appInsightsSamplingRate": {
                      "description": "Indicates the sampling rate of application insight agent, should be in range [0.0, 100.0]",
                      "format": "double",
                      "maximum": 100,
                      "minimum": 0,
                      "type": "number"
                    },
                    "appInsightsAgentVersions": {
                      "description": "Indicates the versions of application insight agent",
                      "type": "object",
                      "properties": {
                        "java": {
                          "description": "Indicates the version of application insight java agent",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The response indicates the exiting Monitoring Setting is now updating and contains a Location\r\nheader to query the operation result.",
            "schema": {
              "description": "Monitoring Setting resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Monitoring Setting resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Monitoring Setting.",
                      "enum": [
                        "NotAvailable",
                        "Failed",
                        "Succeeded",
                        "Updating"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "MonitoringSettingState",
                        "modelAsString": true
                      }
                    },
                    "error": {
                      "description": "Error when apply Monitoring Setting changes.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The code of error.",
                          "type": "string"
                        },
                        "message": {
                          "description": "The message of error.",
                          "type": "string"
                        }
                      }
                    },
                    "traceEnabled": {
                      "description": "Indicates whether enable the trace functionality, which will be deprecated since api version 2020-11-01-preview. Please leverage appInsightsInstrumentationKey to indicate if monitoringSettings enabled or not",
                      "type": "boolean"
                    },
                    "appInsightsInstrumentationKey": {
                      "description": "Target application insight instrumentation key, null or whitespace include empty will disable monitoringSettings",
                      "type": "string"
                    },
                    "appInsightsSamplingRate": {
                      "description": "Indicates the sampling rate of application insight agent, should be in range [0.0, 100.0]",
                      "format": "double",
                      "maximum": 100,
                      "minimum": 0,
                      "type": "number"
                    },
                    "appInsightsAgentVersions": {
                      "description": "Indicates the versions of application insight agent",
                      "type": "object",
                      "properties": {
                        "java": {
                          "description": "Indicates the version of application insight java agent",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Update the Monitoring Setting.",
        "operationId": "MonitoringSettings_UpdatePatch",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "monitoringSettingResource",
            "in": "body",
            "description": "Parameters for the update operation",
            "required": true,
            "schema": {
              "description": "Monitoring Setting resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Monitoring Setting resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Monitoring Setting.",
                      "enum": [
                        "NotAvailable",
                        "Failed",
                        "Succeeded",
                        "Updating"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "MonitoringSettingState",
                        "modelAsString": true
                      }
                    },
                    "error": {
                      "description": "Error when apply Monitoring Setting changes.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The code of error.",
                          "type": "string"
                        },
                        "message": {
                          "description": "The message of error.",
                          "type": "string"
                        }
                      }
                    },
                    "traceEnabled": {
                      "description": "Indicates whether enable the trace functionality, which will be deprecated since api version 2020-11-01-preview. Please leverage appInsightsInstrumentationKey to indicate if monitoringSettings enabled or not",
                      "type": "boolean"
                    },
                    "appInsightsInstrumentationKey": {
                      "description": "Target application insight instrumentation key, null or whitespace include empty will disable monitoringSettings",
                      "type": "string"
                    },
                    "appInsightsSamplingRate": {
                      "description": "Indicates the sampling rate of application insight agent, should be in range [0.0, 100.0]",
                      "format": "double",
                      "maximum": 100,
                      "minimum": 0,
                      "type": "number"
                    },
                    "appInsightsAgentVersions": {
                      "description": "Indicates the versions of application insight agent",
                      "type": "object",
                      "properties": {
                        "java": {
                          "description": "Indicates the version of application insight java agent",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated Monitoring Setting.",
            "schema": {
              "description": "Monitoring Setting resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Monitoring Setting resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Monitoring Setting.",
                      "enum": [
                        "NotAvailable",
                        "Failed",
                        "Succeeded",
                        "Updating"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "MonitoringSettingState",
                        "modelAsString": true
                      }
                    },
                    "error": {
                      "description": "Error when apply Monitoring Setting changes.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The code of error.",
                          "type": "string"
                        },
                        "message": {
                          "description": "The message of error.",
                          "type": "string"
                        }
                      }
                    },
                    "traceEnabled": {
                      "description": "Indicates whether enable the trace functionality, which will be deprecated since api version 2020-11-01-preview. Please leverage appInsightsInstrumentationKey to indicate if monitoringSettings enabled or not",
                      "type": "boolean"
                    },
                    "appInsightsInstrumentationKey": {
                      "description": "Target application insight instrumentation key, null or whitespace include empty will disable monitoringSettings",
                      "type": "string"
                    },
                    "appInsightsSamplingRate": {
                      "description": "Indicates the sampling rate of application insight agent, should be in range [0.0, 100.0]",
                      "format": "double",
                      "maximum": 100,
                      "minimum": 0,
                      "type": "number"
                    },
                    "appInsightsAgentVersions": {
                      "description": "Indicates the versions of application insight agent",
                      "type": "object",
                      "properties": {
                        "java": {
                          "description": "Indicates the version of application insight java agent",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The response indicates the exiting Monitoring Setting is now updating and contains a Location\r\nheader to query the operation result.",
            "schema": {
              "description": "Monitoring Setting resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Monitoring Setting resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Monitoring Setting.",
                      "enum": [
                        "NotAvailable",
                        "Failed",
                        "Succeeded",
                        "Updating"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "MonitoringSettingState",
                        "modelAsString": true
                      }
                    },
                    "error": {
                      "description": "Error when apply Monitoring Setting changes.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The code of error.",
                          "type": "string"
                        },
                        "message": {
                          "description": "The message of error.",
                          "type": "string"
                        }
                      }
                    },
                    "traceEnabled": {
                      "description": "Indicates whether enable the trace functionality, which will be deprecated since api version 2020-11-01-preview. Please leverage appInsightsInstrumentationKey to indicate if monitoringSettings enabled or not",
                      "type": "boolean"
                    },
                    "appInsightsInstrumentationKey": {
                      "description": "Target application insight instrumentation key, null or whitespace include empty will disable monitoringSettings",
                      "type": "string"
                    },
                    "appInsightsSamplingRate": {
                      "description": "Indicates the sampling rate of application insight agent, should be in range [0.0, 100.0]",
                      "format": "double",
                      "maximum": 100,
                      "minimum": 0,
                      "type": "number"
                    },
                    "appInsightsAgentVersions": {
                      "description": "Indicates the versions of application insight agent",
                      "type": "object",
                      "properties": {
                        "java": {
                          "description": "Indicates the version of application insight java agent",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get an App and its properties.",
        "operationId": "Apps_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "syncStatus",
            "in": "query",
            "description": "Indicates whether sync status",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the corresponding App.",
            "schema": {
              "description": "App resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the App resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "public": {
                      "description": "Indicates whether the App exposes public endpoint",
                      "type": "boolean"
                    },
                    "url": {
                      "description": "URL of the App",
                      "type": "string",
                      "readOnly": true
                    },
                    "addonConfigs": {
                      "description": "Collection of addons",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the App",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "AppResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "fqdn": {
                      "description": "Fully qualified dns Name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "httpsOnly": {
                      "description": "Indicate if only https is allowed.",
                      "type": "boolean",
                      "default": false
                    },
                    "temporaryDisk": {
                      "description": "Temporary disk settings",
                      "type": "object",
                      "properties": {
                        "sizeInGB": {
                          "format": "int32",
                          "description": "Size of the temporary disk in GB",
                          "maximum": 5,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "mountPath": {
                          "description": "Mount path of the temporary disk",
                          "type": "string",
                          "default": "/tmp"
                        }
                      }
                    },
                    "persistentDisk": {
                      "description": "Persistent disk settings",
                      "type": "object",
                      "properties": {
                        "sizeInGB": {
                          "format": "int32",
                          "description": "Size of the persistent disk in GB",
                          "maximum": 50,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "usedInGB": {
                          "format": "int32",
                          "description": "Size of the used persistent disk in GB",
                          "maximum": 50,
                          "minimum": 0,
                          "type": "integer",
                          "readOnly": true
                        },
                        "mountPath": {
                          "description": "Mount path of the persistent disk",
                          "type": "string"
                        }
                      }
                    },
                    "customPersistentDisks": {
                      "description": "List of custom persistent disks",
                      "type": "array",
                      "items": {
                        "description": "Custom persistent disk resource payload.",
                        "type": "object",
                        "required": [
                          "storageId"
                        ],
                        "properties": {
                          "customPersistentDiskProperties": {
                            "description": "Properties of the custom persistent disk resource payload.",
                            "x-ms-client-flatten": false,
                            "required": [
                              "type",
                              "mountPath"
                            ],
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "The type of the underlying resource to mount as a persistent disk.",
                                "enum": [
                                  "AzureFileVolume"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "Type",
                                  "modelAsString": true
                                }
                              },
                              "mountPath": {
                                "description": "The mount path of the persistent disk.",
                                "type": "string"
                              },
                              "readOnly": {
                                "description": "Indicates whether the persistent disk is a readOnly one.",
                                "type": "boolean"
                              },
                              "enableSubPath": {
                                "description": "If set to true, it will create and mount a dedicated directory for every individual app instance.",
                                "type": "boolean",
                                "default": false
                              },
                              "mountOptions": {
                                "description": "These are the mount options for a persistent disk.",
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "discriminator": "type"
                          },
                          "storageId": {
                            "description": "The resource id of Azure Spring Apps Storage resource.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "enableEndToEndTLS": {
                      "description": "Indicate if end to end TLS is enabled.",
                      "type": "boolean",
                      "default": false
                    },
                    "loadedCertificates": {
                      "description": "Collection of loaded certificates",
                      "type": "array",
                      "items": {
                        "description": "Loaded certificate payload",
                        "required": [
                          "resourceId"
                        ],
                        "type": "object",
                        "properties": {
                          "resourceId": {
                            "description": "Resource Id of loaded certificate",
                            "type": "string"
                          },
                          "loadTrustStore": {
                            "description": "Indicate whether the certificate will be loaded into default trust store, only work for Java runtime.",
                            "type": "boolean",
                            "default": false
                          }
                        }
                      }
                    },
                    "vnetAddons": {
                      "description": "Additional App settings in vnet injection instance",
                      "type": "object",
                      "properties": {
                        "publicEndpoint": {
                          "description": "Indicates whether the App in vnet injection instance exposes endpoint which could be accessed from internet.",
                          "type": "boolean",
                          "default": false
                        },
                        "publicEndpointUrl": {
                          "description": "URL of the App in vnet injection instance which could be accessed from internet",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "ingressSettings": {
                      "description": "App ingress settings payload.",
                      "type": "object",
                      "properties": {
                        "readTimeoutInSeconds": {
                          "format": "int32",
                          "description": "Ingress read time out in seconds.",
                          "type": "integer"
                        },
                        "sendTimeoutInSeconds": {
                          "format": "int32",
                          "description": "Ingress send time out in seconds.",
                          "type": "integer"
                        },
                        "sessionAffinity": {
                          "description": "Type of the affinity, set this to Cookie to enable session affinity.",
                          "enum": [
                            "Cookie",
                            "None"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "SessionAffinity",
                            "modelAsString": true
                          }
                        },
                        "sessionCookieMaxAge": {
                          "description": "Time in seconds until the cookie expires.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "backendProtocol": {
                          "description": "How ingress should communicate with this app backend service.",
                          "enum": [
                            "GRPC",
                            "Default"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "BackendProtocol",
                            "modelAsString": true
                          }
                        },
                        "clientAuth": {
                          "description": "Client-Certification Authentication.",
                          "type": "object",
                          "properties": {
                            "certificates": {
                              "description": "Collection of certificate resource id.",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "identity": {
                  "description": "The Managed Identity type of the app resource",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Type of the managed identity",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "Principal Id of system-assigned managed identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "Tenant Id of system-assigned managed identity.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "Properties of user-assigned managed identities",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The details of the user-assigned managed identity assigned to an App.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "Principal Id of user-assigned managed identity.",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "Client Id of user-assigned managed identity.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "location": {
                  "description": "The GEO location of the application, always the same with its parent resource",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Create a new App or update an exiting App.",
        "operationId": "Apps_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appResource",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "description": "App resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the App resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "public": {
                      "description": "Indicates whether the App exposes public endpoint",
                      "type": "boolean"
                    },
                    "url": {
                      "description": "URL of the App",
                      "type": "string",
                      "readOnly": true
                    },
                    "addonConfigs": {
                      "description": "Collection of addons",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the App",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "AppResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "fqdn": {
                      "description": "Fully qualified dns Name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "httpsOnly": {
                      "description": "Indicate if only https is allowed.",
                      "type": "boolean",
                      "default": false
                    },
                    "temporaryDisk": {
                      "description": "Temporary disk settings",
                      "type": "object",
                      "properties": {
                        "sizeInGB": {
                          "format": "int32",
                          "description": "Size of the temporary disk in GB",
                          "maximum": 5,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "mountPath": {
                          "description": "Mount path of the temporary disk",
                          "type": "string",
                          "default": "/tmp"
                        }
                      }
                    },
                    "persistentDisk": {
                      "description": "Persistent disk settings",
                      "type": "object",
                      "properties": {
                        "sizeInGB": {
                          "format": "int32",
                          "description": "Size of the persistent disk in GB",
                          "maximum": 50,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "usedInGB": {
                          "format": "int32",
                          "description": "Size of the used persistent disk in GB",
                          "maximum": 50,
                          "minimum": 0,
                          "type": "integer",
                          "readOnly": true
                        },
                        "mountPath": {
                          "description": "Mount path of the persistent disk",
                          "type": "string"
                        }
                      }
                    },
                    "customPersistentDisks": {
                      "description": "List of custom persistent disks",
                      "type": "array",
                      "items": {
                        "description": "Custom persistent disk resource payload.",
                        "type": "object",
                        "required": [
                          "storageId"
                        ],
                        "properties": {
                          "customPersistentDiskProperties": {
                            "description": "Properties of the custom persistent disk resource payload.",
                            "x-ms-client-flatten": false,
                            "required": [
                              "type",
                              "mountPath"
                            ],
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "The type of the underlying resource to mount as a persistent disk.",
                                "enum": [
                                  "AzureFileVolume"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "Type",
                                  "modelAsString": true
                                }
                              },
                              "mountPath": {
                                "description": "The mount path of the persistent disk.",
                                "type": "string"
                              },
                              "readOnly": {
                                "description": "Indicates whether the persistent disk is a readOnly one.",
                                "type": "boolean"
                              },
                              "enableSubPath": {
                                "description": "If set to true, it will create and mount a dedicated directory for every individual app instance.",
                                "type": "boolean",
                                "default": false
                              },
                              "mountOptions": {
                                "description": "These are the mount options for a persistent disk.",
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "discriminator": "type"
                          },
                          "storageId": {
                            "description": "The resource id of Azure Spring Apps Storage resource.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "enableEndToEndTLS": {
                      "description": "Indicate if end to end TLS is enabled.",
                      "type": "boolean",
                      "default": false
                    },
                    "loadedCertificates": {
                      "description": "Collection of loaded certificates",
                      "type": "array",
                      "items": {
                        "description": "Loaded certificate payload",
                        "required": [
                          "resourceId"
                        ],
                        "type": "object",
                        "properties": {
                          "resourceId": {
                            "description": "Resource Id of loaded certificate",
                            "type": "string"
                          },
                          "loadTrustStore": {
                            "description": "Indicate whether the certificate will be loaded into default trust store, only work for Java runtime.",
                            "type": "boolean",
                            "default": false
                          }
                        }
                      }
                    },
                    "vnetAddons": {
                      "description": "Additional App settings in vnet injection instance",
                      "type": "object",
                      "properties": {
                        "publicEndpoint": {
                          "description": "Indicates whether the App in vnet injection instance exposes endpoint which could be accessed from internet.",
                          "type": "boolean",
                          "default": false
                        },
                        "publicEndpointUrl": {
                          "description": "URL of the App in vnet injection instance which could be accessed from internet",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "ingressSettings": {
                      "description": "App ingress settings payload.",
                      "type": "object",
                      "properties": {
                        "readTimeoutInSeconds": {
                          "format": "int32",
                          "description": "Ingress read time out in seconds.",
                          "type": "integer"
                        },
                        "sendTimeoutInSeconds": {
                          "format": "int32",
                          "description": "Ingress send time out in seconds.",
                          "type": "integer"
                        },
                        "sessionAffinity": {
                          "description": "Type of the affinity, set this to Cookie to enable session affinity.",
                          "enum": [
                            "Cookie",
                            "None"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "SessionAffinity",
                            "modelAsString": true
                          }
                        },
                        "sessionCookieMaxAge": {
                          "description": "Time in seconds until the cookie expires.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "backendProtocol": {
                          "description": "How ingress should communicate with this app backend service.",
                          "enum": [
                            "GRPC",
                            "Default"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "BackendProtocol",
                            "modelAsString": true
                          }
                        },
                        "clientAuth": {
                          "description": "Client-Certification Authentication.",
                          "type": "object",
                          "properties": {
                            "certificates": {
                              "description": "Collection of certificate resource id.",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "identity": {
                  "description": "The Managed Identity type of the app resource",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Type of the managed identity",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "Principal Id of system-assigned managed identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "Tenant Id of system-assigned managed identity.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "Properties of user-assigned managed identities",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The details of the user-assigned managed identity assigned to an App.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "Principal Id of user-assigned managed identity.",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "Client Id of user-assigned managed identity.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "location": {
                  "description": "The GEO location of the application, always the same with its parent resource",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated App.",
            "schema": {
              "description": "App resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the App resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "public": {
                      "description": "Indicates whether the App exposes public endpoint",
                      "type": "boolean"
                    },
                    "url": {
                      "description": "URL of the App",
                      "type": "string",
                      "readOnly": true
                    },
                    "addonConfigs": {
                      "description": "Collection of addons",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the App",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "AppResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "fqdn": {
                      "description": "Fully qualified dns Name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "httpsOnly": {
                      "description": "Indicate if only https is allowed.",
                      "type": "boolean",
                      "default": false
                    },
                    "temporaryDisk": {
                      "description": "Temporary disk settings",
                      "type": "object",
                      "properties": {
                        "sizeInGB": {
                          "format": "int32",
                          "description": "Size of the temporary disk in GB",
                          "maximum": 5,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "mountPath": {
                          "description": "Mount path of the temporary disk",
                          "type": "string",
                          "default": "/tmp"
                        }
                      }
                    },
                    "persistentDisk": {
                      "description": "Persistent disk settings",
                      "type": "object",
                      "properties": {
                        "sizeInGB": {
                          "format": "int32",
                          "description": "Size of the persistent disk in GB",
                          "maximum": 50,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "usedInGB": {
                          "format": "int32",
                          "description": "Size of the used persistent disk in GB",
                          "maximum": 50,
                          "minimum": 0,
                          "type": "integer",
                          "readOnly": true
                        },
                        "mountPath": {
                          "description": "Mount path of the persistent disk",
                          "type": "string"
                        }
                      }
                    },
                    "customPersistentDisks": {
                      "description": "List of custom persistent disks",
                      "type": "array",
                      "items": {
                        "description": "Custom persistent disk resource payload.",
                        "type": "object",
                        "required": [
                          "storageId"
                        ],
                        "properties": {
                          "customPersistentDiskProperties": {
                            "description": "Properties of the custom persistent disk resource payload.",
                            "x-ms-client-flatten": false,
                            "required": [
                              "type",
                              "mountPath"
                            ],
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "The type of the underlying resource to mount as a persistent disk.",
                                "enum": [
                                  "AzureFileVolume"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "Type",
                                  "modelAsString": true
                                }
                              },
                              "mountPath": {
                                "description": "The mount path of the persistent disk.",
                                "type": "string"
                              },
                              "readOnly": {
                                "description": "Indicates whether the persistent disk is a readOnly one.",
                                "type": "boolean"
                              },
                              "enableSubPath": {
                                "description": "If set to true, it will create and mount a dedicated directory for every individual app instance.",
                                "type": "boolean",
                                "default": false
                              },
                              "mountOptions": {
                                "description": "These are the mount options for a persistent disk.",
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "discriminator": "type"
                          },
                          "storageId": {
                            "description": "The resource id of Azure Spring Apps Storage resource.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "enableEndToEndTLS": {
                      "description": "Indicate if end to end TLS is enabled.",
                      "type": "boolean",
                      "default": false
                    },
                    "loadedCertificates": {
                      "description": "Collection of loaded certificates",
                      "type": "array",
                      "items": {
                        "description": "Loaded certificate payload",
                        "required": [
                          "resourceId"
                        ],
                        "type": "object",
                        "properties": {
                          "resourceId": {
                            "description": "Resource Id of loaded certificate",
                            "type": "string"
                          },
                          "loadTrustStore": {
                            "description": "Indicate whether the certificate will be loaded into default trust store, only work for Java runtime.",
                            "type": "boolean",
                            "default": false
                          }
                        }
                      }
                    },
                    "vnetAddons": {
                      "description": "Additional App settings in vnet injection instance",
                      "type": "object",
                      "properties": {
                        "publicEndpoint": {
                          "description": "Indicates whether the App in vnet injection instance exposes endpoint which could be accessed from internet.",
                          "type": "boolean",
                          "default": false
                        },
                        "publicEndpointUrl": {
                          "description": "URL of the App in vnet injection instance which could be accessed from internet",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "ingressSettings": {
                      "description": "App ingress settings payload.",
                      "type": "object",
                      "properties": {
                        "readTimeoutInSeconds": {
                          "format": "int32",
                          "description": "Ingress read time out in seconds.",
                          "type": "integer"
                        },
                        "sendTimeoutInSeconds": {
                          "format": "int32",
                          "description": "Ingress send time out in seconds.",
                          "type": "integer"
                        },
                        "sessionAffinity": {
                          "description": "Type of the affinity, set this to Cookie to enable session affinity.",
                          "enum": [
                            "Cookie",
                            "None"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "SessionAffinity",
                            "modelAsString": true
                          }
                        },
                        "sessionCookieMaxAge": {
                          "description": "Time in seconds until the cookie expires.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "backendProtocol": {
                          "description": "How ingress should communicate with this app backend service.",
                          "enum": [
                            "GRPC",
                            "Default"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "BackendProtocol",
                            "modelAsString": true
                          }
                        },
                        "clientAuth": {
                          "description": "Client-Certification Authentication.",
                          "type": "object",
                          "properties": {
                            "certificates": {
                              "description": "Collection of certificate resource id.",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "identity": {
                  "description": "The Managed Identity type of the app resource",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Type of the managed identity",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "Principal Id of system-assigned managed identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "Tenant Id of system-assigned managed identity.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "Properties of user-assigned managed identities",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The details of the user-assigned managed identity assigned to an App.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "Principal Id of user-assigned managed identity.",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "Client Id of user-assigned managed identity.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "location": {
                  "description": "The GEO location of the application, always the same with its parent resource",
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Created. The response describes the new App and contains an Azure-AsyncOperation header to query the operation result.",
            "schema": {
              "description": "App resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the App resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "public": {
                      "description": "Indicates whether the App exposes public endpoint",
                      "type": "boolean"
                    },
                    "url": {
                      "description": "URL of the App",
                      "type": "string",
                      "readOnly": true
                    },
                    "addonConfigs": {
                      "description": "Collection of addons",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the App",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "AppResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "fqdn": {
                      "description": "Fully qualified dns Name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "httpsOnly": {
                      "description": "Indicate if only https is allowed.",
                      "type": "boolean",
                      "default": false
                    },
                    "temporaryDisk": {
                      "description": "Temporary disk settings",
                      "type": "object",
                      "properties": {
                        "sizeInGB": {
                          "format": "int32",
                          "description": "Size of the temporary disk in GB",
                          "maximum": 5,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "mountPath": {
                          "description": "Mount path of the temporary disk",
                          "type": "string",
                          "default": "/tmp"
                        }
                      }
                    },
                    "persistentDisk": {
                      "description": "Persistent disk settings",
                      "type": "object",
                      "properties": {
                        "sizeInGB": {
                          "format": "int32",
                          "description": "Size of the persistent disk in GB",
                          "maximum": 50,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "usedInGB": {
                          "format": "int32",
                          "description": "Size of the used persistent disk in GB",
                          "maximum": 50,
                          "minimum": 0,
                          "type": "integer",
                          "readOnly": true
                        },
                        "mountPath": {
                          "description": "Mount path of the persistent disk",
                          "type": "string"
                        }
                      }
                    },
                    "customPersistentDisks": {
                      "description": "List of custom persistent disks",
                      "type": "array",
                      "items": {
                        "description": "Custom persistent disk resource payload.",
                        "type": "object",
                        "required": [
                          "storageId"
                        ],
                        "properties": {
                          "customPersistentDiskProperties": {
                            "description": "Properties of the custom persistent disk resource payload.",
                            "x-ms-client-flatten": false,
                            "required": [
                              "type",
                              "mountPath"
                            ],
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "The type of the underlying resource to mount as a persistent disk.",
                                "enum": [
                                  "AzureFileVolume"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "Type",
                                  "modelAsString": true
                                }
                              },
                              "mountPath": {
                                "description": "The mount path of the persistent disk.",
                                "type": "string"
                              },
                              "readOnly": {
                                "description": "Indicates whether the persistent disk is a readOnly one.",
                                "type": "boolean"
                              },
                              "enableSubPath": {
                                "description": "If set to true, it will create and mount a dedicated directory for every individual app instance.",
                                "type": "boolean",
                                "default": false
                              },
                              "mountOptions": {
                                "description": "These are the mount options for a persistent disk.",
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "discriminator": "type"
                          },
                          "storageId": {
                            "description": "The resource id of Azure Spring Apps Storage resource.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "enableEndToEndTLS": {
                      "description": "Indicate if end to end TLS is enabled.",
                      "type": "boolean",
                      "default": false
                    },
                    "loadedCertificates": {
                      "description": "Collection of loaded certificates",
                      "type": "array",
                      "items": {
                        "description": "Loaded certificate payload",
                        "required": [
                          "resourceId"
                        ],
                        "type": "object",
                        "properties": {
                          "resourceId": {
                            "description": "Resource Id of loaded certificate",
                            "type": "string"
                          },
                          "loadTrustStore": {
                            "description": "Indicate whether the certificate will be loaded into default trust store, only work for Java runtime.",
                            "type": "boolean",
                            "default": false
                          }
                        }
                      }
                    },
                    "vnetAddons": {
                      "description": "Additional App settings in vnet injection instance",
                      "type": "object",
                      "properties": {
                        "publicEndpoint": {
                          "description": "Indicates whether the App in vnet injection instance exposes endpoint which could be accessed from internet.",
                          "type": "boolean",
                          "default": false
                        },
                        "publicEndpointUrl": {
                          "description": "URL of the App in vnet injection instance which could be accessed from internet",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "ingressSettings": {
                      "description": "App ingress settings payload.",
                      "type": "object",
                      "properties": {
                        "readTimeoutInSeconds": {
                          "format": "int32",
                          "description": "Ingress read time out in seconds.",
                          "type": "integer"
                        },
                        "sendTimeoutInSeconds": {
                          "format": "int32",
                          "description": "Ingress send time out in seconds.",
                          "type": "integer"
                        },
                        "sessionAffinity": {
                          "description": "Type of the affinity, set this to Cookie to enable session affinity.",
                          "enum": [
                            "Cookie",
                            "None"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "SessionAffinity",
                            "modelAsString": true
                          }
                        },
                        "sessionCookieMaxAge": {
                          "description": "Time in seconds until the cookie expires.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "backendProtocol": {
                          "description": "How ingress should communicate with this app backend service.",
                          "enum": [
                            "GRPC",
                            "Default"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "BackendProtocol",
                            "modelAsString": true
                          }
                        },
                        "clientAuth": {
                          "description": "Client-Certification Authentication.",
                          "type": "object",
                          "properties": {
                            "certificates": {
                              "description": "Collection of certificate resource id.",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "identity": {
                  "description": "The Managed Identity type of the app resource",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Type of the managed identity",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "Principal Id of system-assigned managed identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "Tenant Id of system-assigned managed identity.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "Properties of user-assigned managed identities",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The details of the user-assigned managed identity assigned to an App.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "Principal Id of user-assigned managed identity.",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "Client Id of user-assigned managed identity.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "location": {
                  "description": "The GEO location of the application, always the same with its parent resource",
                  "type": "string"
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The response indicates the exiting App is now updating and contains a Location\r\nheader to query the operation result.",
            "schema": {
              "description": "App resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the App resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "public": {
                      "description": "Indicates whether the App exposes public endpoint",
                      "type": "boolean"
                    },
                    "url": {
                      "description": "URL of the App",
                      "type": "string",
                      "readOnly": true
                    },
                    "addonConfigs": {
                      "description": "Collection of addons",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the App",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "AppResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "fqdn": {
                      "description": "Fully qualified dns Name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "httpsOnly": {
                      "description": "Indicate if only https is allowed.",
                      "type": "boolean",
                      "default": false
                    },
                    "temporaryDisk": {
                      "description": "Temporary disk settings",
                      "type": "object",
                      "properties": {
                        "sizeInGB": {
                          "format": "int32",
                          "description": "Size of the temporary disk in GB",
                          "maximum": 5,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "mountPath": {
                          "description": "Mount path of the temporary disk",
                          "type": "string",
                          "default": "/tmp"
                        }
                      }
                    },
                    "persistentDisk": {
                      "description": "Persistent disk settings",
                      "type": "object",
                      "properties": {
                        "sizeInGB": {
                          "format": "int32",
                          "description": "Size of the persistent disk in GB",
                          "maximum": 50,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "usedInGB": {
                          "format": "int32",
                          "description": "Size of the used persistent disk in GB",
                          "maximum": 50,
                          "minimum": 0,
                          "type": "integer",
                          "readOnly": true
                        },
                        "mountPath": {
                          "description": "Mount path of the persistent disk",
                          "type": "string"
                        }
                      }
                    },
                    "customPersistentDisks": {
                      "description": "List of custom persistent disks",
                      "type": "array",
                      "items": {
                        "description": "Custom persistent disk resource payload.",
                        "type": "object",
                        "required": [
                          "storageId"
                        ],
                        "properties": {
                          "customPersistentDiskProperties": {
                            "description": "Properties of the custom persistent disk resource payload.",
                            "x-ms-client-flatten": false,
                            "required": [
                              "type",
                              "mountPath"
                            ],
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "The type of the underlying resource to mount as a persistent disk.",
                                "enum": [
                                  "AzureFileVolume"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "Type",
                                  "modelAsString": true
                                }
                              },
                              "mountPath": {
                                "description": "The mount path of the persistent disk.",
                                "type": "string"
                              },
                              "readOnly": {
                                "description": "Indicates whether the persistent disk is a readOnly one.",
                                "type": "boolean"
                              },
                              "enableSubPath": {
                                "description": "If set to true, it will create and mount a dedicated directory for every individual app instance.",
                                "type": "boolean",
                                "default": false
                              },
                              "mountOptions": {
                                "description": "These are the mount options for a persistent disk.",
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "discriminator": "type"
                          },
                          "storageId": {
                            "description": "The resource id of Azure Spring Apps Storage resource.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "enableEndToEndTLS": {
                      "description": "Indicate if end to end TLS is enabled.",
                      "type": "boolean",
                      "default": false
                    },
                    "loadedCertificates": {
                      "description": "Collection of loaded certificates",
                      "type": "array",
                      "items": {
                        "description": "Loaded certificate payload",
                        "required": [
                          "resourceId"
                        ],
                        "type": "object",
                        "properties": {
                          "resourceId": {
                            "description": "Resource Id of loaded certificate",
                            "type": "string"
                          },
                          "loadTrustStore": {
                            "description": "Indicate whether the certificate will be loaded into default trust store, only work for Java runtime.",
                            "type": "boolean",
                            "default": false
                          }
                        }
                      }
                    },
                    "vnetAddons": {
                      "description": "Additional App settings in vnet injection instance",
                      "type": "object",
                      "properties": {
                        "publicEndpoint": {
                          "description": "Indicates whether the App in vnet injection instance exposes endpoint which could be accessed from internet.",
                          "type": "boolean",
                          "default": false
                        },
                        "publicEndpointUrl": {
                          "description": "URL of the App in vnet injection instance which could be accessed from internet",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "ingressSettings": {
                      "description": "App ingress settings payload.",
                      "type": "object",
                      "properties": {
                        "readTimeoutInSeconds": {
                          "format": "int32",
                          "description": "Ingress read time out in seconds.",
                          "type": "integer"
                        },
                        "sendTimeoutInSeconds": {
                          "format": "int32",
                          "description": "Ingress send time out in seconds.",
                          "type": "integer"
                        },
                        "sessionAffinity": {
                          "description": "Type of the affinity, set this to Cookie to enable session affinity.",
                          "enum": [
                            "Cookie",
                            "None"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "SessionAffinity",
                            "modelAsString": true
                          }
                        },
                        "sessionCookieMaxAge": {
                          "description": "Time in seconds until the cookie expires.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "backendProtocol": {
                          "description": "How ingress should communicate with this app backend service.",
                          "enum": [
                            "GRPC",
                            "Default"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "BackendProtocol",
                            "modelAsString": true
                          }
                        },
                        "clientAuth": {
                          "description": "Client-Certification Authentication.",
                          "type": "object",
                          "properties": {
                            "certificates": {
                              "description": "Collection of certificate resource id.",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "identity": {
                  "description": "The Managed Identity type of the app resource",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Type of the managed identity",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "Principal Id of system-assigned managed identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "Tenant Id of system-assigned managed identity.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "Properties of user-assigned managed identities",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The details of the user-assigned managed identity assigned to an App.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "Principal Id of user-assigned managed identity.",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "Client Id of user-assigned managed identity.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "location": {
                  "description": "The GEO location of the application, always the same with its parent resource",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Operation to delete an App.",
        "operationId": "Apps_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response indicates the resource is deleted."
          },
          "202": {
            "description": "Accepted. The response indicates the delete operation is performed in the background."
          },
          "204": {
            "description": "Success. The response indicates the resource doesn't exist."
          }
        }
      },
      "patch": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Operation to update an exiting App.",
        "operationId": "Apps_Update",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appResource",
            "in": "body",
            "description": "Parameters for the update operation",
            "required": true,
            "schema": {
              "description": "App resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the App resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "public": {
                      "description": "Indicates whether the App exposes public endpoint",
                      "type": "boolean"
                    },
                    "url": {
                      "description": "URL of the App",
                      "type": "string",
                      "readOnly": true
                    },
                    "addonConfigs": {
                      "description": "Collection of addons",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the App",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "AppResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "fqdn": {
                      "description": "Fully qualified dns Name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "httpsOnly": {
                      "description": "Indicate if only https is allowed.",
                      "type": "boolean",
                      "default": false
                    },
                    "temporaryDisk": {
                      "description": "Temporary disk settings",
                      "type": "object",
                      "properties": {
                        "sizeInGB": {
                          "format": "int32",
                          "description": "Size of the temporary disk in GB",
                          "maximum": 5,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "mountPath": {
                          "description": "Mount path of the temporary disk",
                          "type": "string",
                          "default": "/tmp"
                        }
                      }
                    },
                    "persistentDisk": {
                      "description": "Persistent disk settings",
                      "type": "object",
                      "properties": {
                        "sizeInGB": {
                          "format": "int32",
                          "description": "Size of the persistent disk in GB",
                          "maximum": 50,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "usedInGB": {
                          "format": "int32",
                          "description": "Size of the used persistent disk in GB",
                          "maximum": 50,
                          "minimum": 0,
                          "type": "integer",
                          "readOnly": true
                        },
                        "mountPath": {
                          "description": "Mount path of the persistent disk",
                          "type": "string"
                        }
                      }
                    },
                    "customPersistentDisks": {
                      "description": "List of custom persistent disks",
                      "type": "array",
                      "items": {
                        "description": "Custom persistent disk resource payload.",
                        "type": "object",
                        "required": [
                          "storageId"
                        ],
                        "properties": {
                          "customPersistentDiskProperties": {
                            "description": "Properties of the custom persistent disk resource payload.",
                            "x-ms-client-flatten": false,
                            "required": [
                              "type",
                              "mountPath"
                            ],
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "The type of the underlying resource to mount as a persistent disk.",
                                "enum": [
                                  "AzureFileVolume"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "Type",
                                  "modelAsString": true
                                }
                              },
                              "mountPath": {
                                "description": "The mount path of the persistent disk.",
                                "type": "string"
                              },
                              "readOnly": {
                                "description": "Indicates whether the persistent disk is a readOnly one.",
                                "type": "boolean"
                              },
                              "enableSubPath": {
                                "description": "If set to true, it will create and mount a dedicated directory for every individual app instance.",
                                "type": "boolean",
                                "default": false
                              },
                              "mountOptions": {
                                "description": "These are the mount options for a persistent disk.",
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "discriminator": "type"
                          },
                          "storageId": {
                            "description": "The resource id of Azure Spring Apps Storage resource.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "enableEndToEndTLS": {
                      "description": "Indicate if end to end TLS is enabled.",
                      "type": "boolean",
                      "default": false
                    },
                    "loadedCertificates": {
                      "description": "Collection of loaded certificates",
                      "type": "array",
                      "items": {
                        "description": "Loaded certificate payload",
                        "required": [
                          "resourceId"
                        ],
                        "type": "object",
                        "properties": {
                          "resourceId": {
                            "description": "Resource Id of loaded certificate",
                            "type": "string"
                          },
                          "loadTrustStore": {
                            "description": "Indicate whether the certificate will be loaded into default trust store, only work for Java runtime.",
                            "type": "boolean",
                            "default": false
                          }
                        }
                      }
                    },
                    "vnetAddons": {
                      "description": "Additional App settings in vnet injection instance",
                      "type": "object",
                      "properties": {
                        "publicEndpoint": {
                          "description": "Indicates whether the App in vnet injection instance exposes endpoint which could be accessed from internet.",
                          "type": "boolean",
                          "default": false
                        },
                        "publicEndpointUrl": {
                          "description": "URL of the App in vnet injection instance which could be accessed from internet",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "ingressSettings": {
                      "description": "App ingress settings payload.",
                      "type": "object",
                      "properties": {
                        "readTimeoutInSeconds": {
                          "format": "int32",
                          "description": "Ingress read time out in seconds.",
                          "type": "integer"
                        },
                        "sendTimeoutInSeconds": {
                          "format": "int32",
                          "description": "Ingress send time out in seconds.",
                          "type": "integer"
                        },
                        "sessionAffinity": {
                          "description": "Type of the affinity, set this to Cookie to enable session affinity.",
                          "enum": [
                            "Cookie",
                            "None"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "SessionAffinity",
                            "modelAsString": true
                          }
                        },
                        "sessionCookieMaxAge": {
                          "description": "Time in seconds until the cookie expires.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "backendProtocol": {
                          "description": "How ingress should communicate with this app backend service.",
                          "enum": [
                            "GRPC",
                            "Default"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "BackendProtocol",
                            "modelAsString": true
                          }
                        },
                        "clientAuth": {
                          "description": "Client-Certification Authentication.",
                          "type": "object",
                          "properties": {
                            "certificates": {
                              "description": "Collection of certificate resource id.",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "identity": {
                  "description": "The Managed Identity type of the app resource",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Type of the managed identity",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "Principal Id of system-assigned managed identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "Tenant Id of system-assigned managed identity.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "Properties of user-assigned managed identities",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The details of the user-assigned managed identity assigned to an App.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "Principal Id of user-assigned managed identity.",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "Client Id of user-assigned managed identity.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "location": {
                  "description": "The GEO location of the application, always the same with its parent resource",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated App.",
            "schema": {
              "description": "App resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the App resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "public": {
                      "description": "Indicates whether the App exposes public endpoint",
                      "type": "boolean"
                    },
                    "url": {
                      "description": "URL of the App",
                      "type": "string",
                      "readOnly": true
                    },
                    "addonConfigs": {
                      "description": "Collection of addons",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the App",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "AppResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "fqdn": {
                      "description": "Fully qualified dns Name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "httpsOnly": {
                      "description": "Indicate if only https is allowed.",
                      "type": "boolean",
                      "default": false
                    },
                    "temporaryDisk": {
                      "description": "Temporary disk settings",
                      "type": "object",
                      "properties": {
                        "sizeInGB": {
                          "format": "int32",
                          "description": "Size of the temporary disk in GB",
                          "maximum": 5,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "mountPath": {
                          "description": "Mount path of the temporary disk",
                          "type": "string",
                          "default": "/tmp"
                        }
                      }
                    },
                    "persistentDisk": {
                      "description": "Persistent disk settings",
                      "type": "object",
                      "properties": {
                        "sizeInGB": {
                          "format": "int32",
                          "description": "Size of the persistent disk in GB",
                          "maximum": 50,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "usedInGB": {
                          "format": "int32",
                          "description": "Size of the used persistent disk in GB",
                          "maximum": 50,
                          "minimum": 0,
                          "type": "integer",
                          "readOnly": true
                        },
                        "mountPath": {
                          "description": "Mount path of the persistent disk",
                          "type": "string"
                        }
                      }
                    },
                    "customPersistentDisks": {
                      "description": "List of custom persistent disks",
                      "type": "array",
                      "items": {
                        "description": "Custom persistent disk resource payload.",
                        "type": "object",
                        "required": [
                          "storageId"
                        ],
                        "properties": {
                          "customPersistentDiskProperties": {
                            "description": "Properties of the custom persistent disk resource payload.",
                            "x-ms-client-flatten": false,
                            "required": [
                              "type",
                              "mountPath"
                            ],
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "The type of the underlying resource to mount as a persistent disk.",
                                "enum": [
                                  "AzureFileVolume"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "Type",
                                  "modelAsString": true
                                }
                              },
                              "mountPath": {
                                "description": "The mount path of the persistent disk.",
                                "type": "string"
                              },
                              "readOnly": {
                                "description": "Indicates whether the persistent disk is a readOnly one.",
                                "type": "boolean"
                              },
                              "enableSubPath": {
                                "description": "If set to true, it will create and mount a dedicated directory for every individual app instance.",
                                "type": "boolean",
                                "default": false
                              },
                              "mountOptions": {
                                "description": "These are the mount options for a persistent disk.",
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "discriminator": "type"
                          },
                          "storageId": {
                            "description": "The resource id of Azure Spring Apps Storage resource.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "enableEndToEndTLS": {
                      "description": "Indicate if end to end TLS is enabled.",
                      "type": "boolean",
                      "default": false
                    },
                    "loadedCertificates": {
                      "description": "Collection of loaded certificates",
                      "type": "array",
                      "items": {
                        "description": "Loaded certificate payload",
                        "required": [
                          "resourceId"
                        ],
                        "type": "object",
                        "properties": {
                          "resourceId": {
                            "description": "Resource Id of loaded certificate",
                            "type": "string"
                          },
                          "loadTrustStore": {
                            "description": "Indicate whether the certificate will be loaded into default trust store, only work for Java runtime.",
                            "type": "boolean",
                            "default": false
                          }
                        }
                      }
                    },
                    "vnetAddons": {
                      "description": "Additional App settings in vnet injection instance",
                      "type": "object",
                      "properties": {
                        "publicEndpoint": {
                          "description": "Indicates whether the App in vnet injection instance exposes endpoint which could be accessed from internet.",
                          "type": "boolean",
                          "default": false
                        },
                        "publicEndpointUrl": {
                          "description": "URL of the App in vnet injection instance which could be accessed from internet",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "ingressSettings": {
                      "description": "App ingress settings payload.",
                      "type": "object",
                      "properties": {
                        "readTimeoutInSeconds": {
                          "format": "int32",
                          "description": "Ingress read time out in seconds.",
                          "type": "integer"
                        },
                        "sendTimeoutInSeconds": {
                          "format": "int32",
                          "description": "Ingress send time out in seconds.",
                          "type": "integer"
                        },
                        "sessionAffinity": {
                          "description": "Type of the affinity, set this to Cookie to enable session affinity.",
                          "enum": [
                            "Cookie",
                            "None"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "SessionAffinity",
                            "modelAsString": true
                          }
                        },
                        "sessionCookieMaxAge": {
                          "description": "Time in seconds until the cookie expires.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "backendProtocol": {
                          "description": "How ingress should communicate with this app backend service.",
                          "enum": [
                            "GRPC",
                            "Default"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "BackendProtocol",
                            "modelAsString": true
                          }
                        },
                        "clientAuth": {
                          "description": "Client-Certification Authentication.",
                          "type": "object",
                          "properties": {
                            "certificates": {
                              "description": "Collection of certificate resource id.",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "identity": {
                  "description": "The Managed Identity type of the app resource",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Type of the managed identity",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "Principal Id of system-assigned managed identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "Tenant Id of system-assigned managed identity.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "Properties of user-assigned managed identities",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The details of the user-assigned managed identity assigned to an App.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "Principal Id of user-assigned managed identity.",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "Client Id of user-assigned managed identity.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "location": {
                  "description": "The GEO location of the application, always the same with its parent resource",
                  "type": "string"
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The response indicates the exiting App is now updating and contains a Location header to query the operation result.",
            "schema": {
              "description": "App resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the App resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "public": {
                      "description": "Indicates whether the App exposes public endpoint",
                      "type": "boolean"
                    },
                    "url": {
                      "description": "URL of the App",
                      "type": "string",
                      "readOnly": true
                    },
                    "addonConfigs": {
                      "description": "Collection of addons",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the App",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "AppResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "fqdn": {
                      "description": "Fully qualified dns Name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "httpsOnly": {
                      "description": "Indicate if only https is allowed.",
                      "type": "boolean",
                      "default": false
                    },
                    "temporaryDisk": {
                      "description": "Temporary disk settings",
                      "type": "object",
                      "properties": {
                        "sizeInGB": {
                          "format": "int32",
                          "description": "Size of the temporary disk in GB",
                          "maximum": 5,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "mountPath": {
                          "description": "Mount path of the temporary disk",
                          "type": "string",
                          "default": "/tmp"
                        }
                      }
                    },
                    "persistentDisk": {
                      "description": "Persistent disk settings",
                      "type": "object",
                      "properties": {
                        "sizeInGB": {
                          "format": "int32",
                          "description": "Size of the persistent disk in GB",
                          "maximum": 50,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "usedInGB": {
                          "format": "int32",
                          "description": "Size of the used persistent disk in GB",
                          "maximum": 50,
                          "minimum": 0,
                          "type": "integer",
                          "readOnly": true
                        },
                        "mountPath": {
                          "description": "Mount path of the persistent disk",
                          "type": "string"
                        }
                      }
                    },
                    "customPersistentDisks": {
                      "description": "List of custom persistent disks",
                      "type": "array",
                      "items": {
                        "description": "Custom persistent disk resource payload.",
                        "type": "object",
                        "required": [
                          "storageId"
                        ],
                        "properties": {
                          "customPersistentDiskProperties": {
                            "description": "Properties of the custom persistent disk resource payload.",
                            "x-ms-client-flatten": false,
                            "required": [
                              "type",
                              "mountPath"
                            ],
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "The type of the underlying resource to mount as a persistent disk.",
                                "enum": [
                                  "AzureFileVolume"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "Type",
                                  "modelAsString": true
                                }
                              },
                              "mountPath": {
                                "description": "The mount path of the persistent disk.",
                                "type": "string"
                              },
                              "readOnly": {
                                "description": "Indicates whether the persistent disk is a readOnly one.",
                                "type": "boolean"
                              },
                              "enableSubPath": {
                                "description": "If set to true, it will create and mount a dedicated directory for every individual app instance.",
                                "type": "boolean",
                                "default": false
                              },
                              "mountOptions": {
                                "description": "These are the mount options for a persistent disk.",
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "discriminator": "type"
                          },
                          "storageId": {
                            "description": "The resource id of Azure Spring Apps Storage resource.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "enableEndToEndTLS": {
                      "description": "Indicate if end to end TLS is enabled.",
                      "type": "boolean",
                      "default": false
                    },
                    "loadedCertificates": {
                      "description": "Collection of loaded certificates",
                      "type": "array",
                      "items": {
                        "description": "Loaded certificate payload",
                        "required": [
                          "resourceId"
                        ],
                        "type": "object",
                        "properties": {
                          "resourceId": {
                            "description": "Resource Id of loaded certificate",
                            "type": "string"
                          },
                          "loadTrustStore": {
                            "description": "Indicate whether the certificate will be loaded into default trust store, only work for Java runtime.",
                            "type": "boolean",
                            "default": false
                          }
                        }
                      }
                    },
                    "vnetAddons": {
                      "description": "Additional App settings in vnet injection instance",
                      "type": "object",
                      "properties": {
                        "publicEndpoint": {
                          "description": "Indicates whether the App in vnet injection instance exposes endpoint which could be accessed from internet.",
                          "type": "boolean",
                          "default": false
                        },
                        "publicEndpointUrl": {
                          "description": "URL of the App in vnet injection instance which could be accessed from internet",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "ingressSettings": {
                      "description": "App ingress settings payload.",
                      "type": "object",
                      "properties": {
                        "readTimeoutInSeconds": {
                          "format": "int32",
                          "description": "Ingress read time out in seconds.",
                          "type": "integer"
                        },
                        "sendTimeoutInSeconds": {
                          "format": "int32",
                          "description": "Ingress send time out in seconds.",
                          "type": "integer"
                        },
                        "sessionAffinity": {
                          "description": "Type of the affinity, set this to Cookie to enable session affinity.",
                          "enum": [
                            "Cookie",
                            "None"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "SessionAffinity",
                            "modelAsString": true
                          }
                        },
                        "sessionCookieMaxAge": {
                          "description": "Time in seconds until the cookie expires.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "backendProtocol": {
                          "description": "How ingress should communicate with this app backend service.",
                          "enum": [
                            "GRPC",
                            "Default"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "BackendProtocol",
                            "modelAsString": true
                          }
                        },
                        "clientAuth": {
                          "description": "Client-Certification Authentication.",
                          "type": "object",
                          "properties": {
                            "certificates": {
                              "description": "Collection of certificate resource id.",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "identity": {
                  "description": "The Managed Identity type of the app resource",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Type of the managed identity",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "Principal Id of system-assigned managed identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "Tenant Id of system-assigned managed identity.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "Properties of user-assigned managed identities",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The details of the user-assigned managed identity assigned to an App.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "Principal Id of user-assigned managed identity.",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "Client Id of user-assigned managed identity.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "location": {
                  "description": "The GEO location of the application, always the same with its parent resource",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Handles requests to list all resources in a Service.",
        "operationId": "Apps_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of Apps in the Service.",
            "schema": {
              "description": "Object that includes an array of App resources and a possible link for next set",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of App resources",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "App resource payload",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the App resource",
                        "x-ms-client-flatten": false,
                        "type": "object",
                        "properties": {
                          "public": {
                            "description": "Indicates whether the App exposes public endpoint",
                            "type": "boolean"
                          },
                          "url": {
                            "description": "URL of the App",
                            "type": "string",
                            "readOnly": true
                          },
                          "addonConfigs": {
                            "description": "Collection of addons",
                            "type": "object",
                            "additionalProperties": {
                              "type": "object"
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the App",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Creating",
                              "Updating",
                              "Deleting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "AppResourceProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "fqdn": {
                            "description": "Fully qualified dns Name.",
                            "type": "string",
                            "readOnly": true
                          },
                          "httpsOnly": {
                            "description": "Indicate if only https is allowed.",
                            "type": "boolean",
                            "default": false
                          },
                          "temporaryDisk": {
                            "description": "Temporary disk settings",
                            "type": "object",
                            "properties": {
                              "sizeInGB": {
                                "format": "int32",
                                "description": "Size of the temporary disk in GB",
                                "maximum": 5,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "mountPath": {
                                "description": "Mount path of the temporary disk",
                                "type": "string",
                                "default": "/tmp"
                              }
                            }
                          },
                          "persistentDisk": {
                            "description": "Persistent disk settings",
                            "type": "object",
                            "properties": {
                              "sizeInGB": {
                                "format": "int32",
                                "description": "Size of the persistent disk in GB",
                                "maximum": 50,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "usedInGB": {
                                "format": "int32",
                                "description": "Size of the used persistent disk in GB",
                                "maximum": 50,
                                "minimum": 0,
                                "type": "integer",
                                "readOnly": true
                              },
                              "mountPath": {
                                "description": "Mount path of the persistent disk",
                                "type": "string"
                              }
                            }
                          },
                          "customPersistentDisks": {
                            "description": "List of custom persistent disks",
                            "type": "array",
                            "items": {
                              "description": "Custom persistent disk resource payload.",
                              "type": "object",
                              "required": [
                                "storageId"
                              ],
                              "properties": {
                                "customPersistentDiskProperties": {
                                  "description": "Properties of the custom persistent disk resource payload.",
                                  "x-ms-client-flatten": false,
                                  "required": [
                                    "type",
                                    "mountPath"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "The type of the underlying resource to mount as a persistent disk.",
                                      "enum": [
                                        "AzureFileVolume"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "Type",
                                        "modelAsString": true
                                      }
                                    },
                                    "mountPath": {
                                      "description": "The mount path of the persistent disk.",
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "description": "Indicates whether the persistent disk is a readOnly one.",
                                      "type": "boolean"
                                    },
                                    "enableSubPath": {
                                      "description": "If set to true, it will create and mount a dedicated directory for every individual app instance.",
                                      "type": "boolean",
                                      "default": false
                                    },
                                    "mountOptions": {
                                      "description": "These are the mount options for a persistent disk.",
                                      "uniqueItems": false,
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "discriminator": "type"
                                },
                                "storageId": {
                                  "description": "The resource id of Azure Spring Apps Storage resource.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "enableEndToEndTLS": {
                            "description": "Indicate if end to end TLS is enabled.",
                            "type": "boolean",
                            "default": false
                          },
                          "loadedCertificates": {
                            "description": "Collection of loaded certificates",
                            "type": "array",
                            "items": {
                              "description": "Loaded certificate payload",
                              "required": [
                                "resourceId"
                              ],
                              "type": "object",
                              "properties": {
                                "resourceId": {
                                  "description": "Resource Id of loaded certificate",
                                  "type": "string"
                                },
                                "loadTrustStore": {
                                  "description": "Indicate whether the certificate will be loaded into default trust store, only work for Java runtime.",
                                  "type": "boolean",
                                  "default": false
                                }
                              }
                            }
                          },
                          "vnetAddons": {
                            "description": "Additional App settings in vnet injection instance",
                            "type": "object",
                            "properties": {
                              "publicEndpoint": {
                                "description": "Indicates whether the App in vnet injection instance exposes endpoint which could be accessed from internet.",
                                "type": "boolean",
                                "default": false
                              },
                              "publicEndpointUrl": {
                                "description": "URL of the App in vnet injection instance which could be accessed from internet",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "ingressSettings": {
                            "description": "App ingress settings payload.",
                            "type": "object",
                            "properties": {
                              "readTimeoutInSeconds": {
                                "format": "int32",
                                "description": "Ingress read time out in seconds.",
                                "type": "integer"
                              },
                              "sendTimeoutInSeconds": {
                                "format": "int32",
                                "description": "Ingress send time out in seconds.",
                                "type": "integer"
                              },
                              "sessionAffinity": {
                                "description": "Type of the affinity, set this to Cookie to enable session affinity.",
                                "enum": [
                                  "Cookie",
                                  "None"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "SessionAffinity",
                                  "modelAsString": true
                                }
                              },
                              "sessionCookieMaxAge": {
                                "description": "Time in seconds until the cookie expires.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "backendProtocol": {
                                "description": "How ingress should communicate with this app backend service.",
                                "enum": [
                                  "GRPC",
                                  "Default"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "BackendProtocol",
                                  "modelAsString": true
                                }
                              },
                              "clientAuth": {
                                "description": "Client-Certification Authentication.",
                                "type": "object",
                                "properties": {
                                  "certificates": {
                                    "description": "Collection of certificate resource id.",
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "identity": {
                        "description": "The Managed Identity type of the app resource",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Type of the managed identity",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "ManagedIdentityType",
                              "modelAsString": true
                            }
                          },
                          "principalId": {
                            "description": "Principal Id of system-assigned managed identity.",
                            "type": "string"
                          },
                          "tenantId": {
                            "description": "Tenant Id of system-assigned managed identity.",
                            "type": "string"
                          },
                          "userAssignedIdentities": {
                            "description": "Properties of user-assigned managed identities",
                            "type": "object",
                            "additionalProperties": {
                              "description": "The details of the user-assigned managed identity assigned to an App.",
                              "type": "object",
                              "properties": {
                                "principalId": {
                                  "description": "Principal Id of user-assigned managed identity.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "description": "Client Id of user-assigned managed identity.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "The GEO location of the application, always the same with its parent resource",
                        "type": "string"
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/getResourceUploadUrl": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get an resource upload URL for an App, which may be artifacts or source archive.",
        "operationId": "Apps_GetResourceUploadUrl",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the resource upload URL.",
            "schema": {
              "description": "Resource upload definition payload",
              "type": "object",
              "properties": {
                "relativePath": {
                  "description": "Source relative path",
                  "type": "string"
                },
                "uploadUrl": {
                  "description": "Upload URL",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/setActiveDeployments": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Set existing Deployment under the app as active",
        "operationId": "Apps_SetActiveDeployments",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "activeDeploymentCollection",
            "in": "body",
            "description": "A list of Deployment name to be active.",
            "required": true,
            "schema": {
              "description": "Object that includes an array of Deployment resource name and set them as active.",
              "type": "object",
              "properties": {
                "activeDeploymentNames": {
                  "description": "Collection of Deployment name.",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the active deployment.",
            "schema": {
              "description": "App resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the App resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "public": {
                      "description": "Indicates whether the App exposes public endpoint",
                      "type": "boolean"
                    },
                    "url": {
                      "description": "URL of the App",
                      "type": "string",
                      "readOnly": true
                    },
                    "addonConfigs": {
                      "description": "Collection of addons",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the App",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "AppResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "fqdn": {
                      "description": "Fully qualified dns Name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "httpsOnly": {
                      "description": "Indicate if only https is allowed.",
                      "type": "boolean",
                      "default": false
                    },
                    "temporaryDisk": {
                      "description": "Temporary disk settings",
                      "type": "object",
                      "properties": {
                        "sizeInGB": {
                          "format": "int32",
                          "description": "Size of the temporary disk in GB",
                          "maximum": 5,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "mountPath": {
                          "description": "Mount path of the temporary disk",
                          "type": "string",
                          "default": "/tmp"
                        }
                      }
                    },
                    "persistentDisk": {
                      "description": "Persistent disk settings",
                      "type": "object",
                      "properties": {
                        "sizeInGB": {
                          "format": "int32",
                          "description": "Size of the persistent disk in GB",
                          "maximum": 50,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "usedInGB": {
                          "format": "int32",
                          "description": "Size of the used persistent disk in GB",
                          "maximum": 50,
                          "minimum": 0,
                          "type": "integer",
                          "readOnly": true
                        },
                        "mountPath": {
                          "description": "Mount path of the persistent disk",
                          "type": "string"
                        }
                      }
                    },
                    "customPersistentDisks": {
                      "description": "List of custom persistent disks",
                      "type": "array",
                      "items": {
                        "description": "Custom persistent disk resource payload.",
                        "type": "object",
                        "required": [
                          "storageId"
                        ],
                        "properties": {
                          "customPersistentDiskProperties": {
                            "description": "Properties of the custom persistent disk resource payload.",
                            "x-ms-client-flatten": false,
                            "required": [
                              "type",
                              "mountPath"
                            ],
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "The type of the underlying resource to mount as a persistent disk.",
                                "enum": [
                                  "AzureFileVolume"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "Type",
                                  "modelAsString": true
                                }
                              },
                              "mountPath": {
                                "description": "The mount path of the persistent disk.",
                                "type": "string"
                              },
                              "readOnly": {
                                "description": "Indicates whether the persistent disk is a readOnly one.",
                                "type": "boolean"
                              },
                              "enableSubPath": {
                                "description": "If set to true, it will create and mount a dedicated directory for every individual app instance.",
                                "type": "boolean",
                                "default": false
                              },
                              "mountOptions": {
                                "description": "These are the mount options for a persistent disk.",
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "discriminator": "type"
                          },
                          "storageId": {
                            "description": "The resource id of Azure Spring Apps Storage resource.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "enableEndToEndTLS": {
                      "description": "Indicate if end to end TLS is enabled.",
                      "type": "boolean",
                      "default": false
                    },
                    "loadedCertificates": {
                      "description": "Collection of loaded certificates",
                      "type": "array",
                      "items": {
                        "description": "Loaded certificate payload",
                        "required": [
                          "resourceId"
                        ],
                        "type": "object",
                        "properties": {
                          "resourceId": {
                            "description": "Resource Id of loaded certificate",
                            "type": "string"
                          },
                          "loadTrustStore": {
                            "description": "Indicate whether the certificate will be loaded into default trust store, only work for Java runtime.",
                            "type": "boolean",
                            "default": false
                          }
                        }
                      }
                    },
                    "vnetAddons": {
                      "description": "Additional App settings in vnet injection instance",
                      "type": "object",
                      "properties": {
                        "publicEndpoint": {
                          "description": "Indicates whether the App in vnet injection instance exposes endpoint which could be accessed from internet.",
                          "type": "boolean",
                          "default": false
                        },
                        "publicEndpointUrl": {
                          "description": "URL of the App in vnet injection instance which could be accessed from internet",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "ingressSettings": {
                      "description": "App ingress settings payload.",
                      "type": "object",
                      "properties": {
                        "readTimeoutInSeconds": {
                          "format": "int32",
                          "description": "Ingress read time out in seconds.",
                          "type": "integer"
                        },
                        "sendTimeoutInSeconds": {
                          "format": "int32",
                          "description": "Ingress send time out in seconds.",
                          "type": "integer"
                        },
                        "sessionAffinity": {
                          "description": "Type of the affinity, set this to Cookie to enable session affinity.",
                          "enum": [
                            "Cookie",
                            "None"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "SessionAffinity",
                            "modelAsString": true
                          }
                        },
                        "sessionCookieMaxAge": {
                          "description": "Time in seconds until the cookie expires.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "backendProtocol": {
                          "description": "How ingress should communicate with this app backend service.",
                          "enum": [
                            "GRPC",
                            "Default"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "BackendProtocol",
                            "modelAsString": true
                          }
                        },
                        "clientAuth": {
                          "description": "Client-Certification Authentication.",
                          "type": "object",
                          "properties": {
                            "certificates": {
                              "description": "Collection of certificate resource id.",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "identity": {
                  "description": "The Managed Identity type of the app resource",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Type of the managed identity",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "Principal Id of system-assigned managed identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "Tenant Id of system-assigned managed identity.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "Properties of user-assigned managed identities",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The details of the user-assigned managed identity assigned to an App.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "Principal Id of user-assigned managed identity.",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "Client Id of user-assigned managed identity.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "location": {
                  "description": "The GEO location of the application, always the same with its parent resource",
                  "type": "string"
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The response indicates the exiting Binding is now updating and contains a Location header to query the operation result.",
            "schema": {
              "description": "App resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the App resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "public": {
                      "description": "Indicates whether the App exposes public endpoint",
                      "type": "boolean"
                    },
                    "url": {
                      "description": "URL of the App",
                      "type": "string",
                      "readOnly": true
                    },
                    "addonConfigs": {
                      "description": "Collection of addons",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the App",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "AppResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "fqdn": {
                      "description": "Fully qualified dns Name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "httpsOnly": {
                      "description": "Indicate if only https is allowed.",
                      "type": "boolean",
                      "default": false
                    },
                    "temporaryDisk": {
                      "description": "Temporary disk settings",
                      "type": "object",
                      "properties": {
                        "sizeInGB": {
                          "format": "int32",
                          "description": "Size of the temporary disk in GB",
                          "maximum": 5,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "mountPath": {
                          "description": "Mount path of the temporary disk",
                          "type": "string",
                          "default": "/tmp"
                        }
                      }
                    },
                    "persistentDisk": {
                      "description": "Persistent disk settings",
                      "type": "object",
                      "properties": {
                        "sizeInGB": {
                          "format": "int32",
                          "description": "Size of the persistent disk in GB",
                          "maximum": 50,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "usedInGB": {
                          "format": "int32",
                          "description": "Size of the used persistent disk in GB",
                          "maximum": 50,
                          "minimum": 0,
                          "type": "integer",
                          "readOnly": true
                        },
                        "mountPath": {
                          "description": "Mount path of the persistent disk",
                          "type": "string"
                        }
                      }
                    },
                    "customPersistentDisks": {
                      "description": "List of custom persistent disks",
                      "type": "array",
                      "items": {
                        "description": "Custom persistent disk resource payload.",
                        "type": "object",
                        "required": [
                          "storageId"
                        ],
                        "properties": {
                          "customPersistentDiskProperties": {
                            "description": "Properties of the custom persistent disk resource payload.",
                            "x-ms-client-flatten": false,
                            "required": [
                              "type",
                              "mountPath"
                            ],
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "The type of the underlying resource to mount as a persistent disk.",
                                "enum": [
                                  "AzureFileVolume"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "Type",
                                  "modelAsString": true
                                }
                              },
                              "mountPath": {
                                "description": "The mount path of the persistent disk.",
                                "type": "string"
                              },
                              "readOnly": {
                                "description": "Indicates whether the persistent disk is a readOnly one.",
                                "type": "boolean"
                              },
                              "enableSubPath": {
                                "description": "If set to true, it will create and mount a dedicated directory for every individual app instance.",
                                "type": "boolean",
                                "default": false
                              },
                              "mountOptions": {
                                "description": "These are the mount options for a persistent disk.",
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "discriminator": "type"
                          },
                          "storageId": {
                            "description": "The resource id of Azure Spring Apps Storage resource.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "enableEndToEndTLS": {
                      "description": "Indicate if end to end TLS is enabled.",
                      "type": "boolean",
                      "default": false
                    },
                    "loadedCertificates": {
                      "description": "Collection of loaded certificates",
                      "type": "array",
                      "items": {
                        "description": "Loaded certificate payload",
                        "required": [
                          "resourceId"
                        ],
                        "type": "object",
                        "properties": {
                          "resourceId": {
                            "description": "Resource Id of loaded certificate",
                            "type": "string"
                          },
                          "loadTrustStore": {
                            "description": "Indicate whether the certificate will be loaded into default trust store, only work for Java runtime.",
                            "type": "boolean",
                            "default": false
                          }
                        }
                      }
                    },
                    "vnetAddons": {
                      "description": "Additional App settings in vnet injection instance",
                      "type": "object",
                      "properties": {
                        "publicEndpoint": {
                          "description": "Indicates whether the App in vnet injection instance exposes endpoint which could be accessed from internet.",
                          "type": "boolean",
                          "default": false
                        },
                        "publicEndpointUrl": {
                          "description": "URL of the App in vnet injection instance which could be accessed from internet",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "ingressSettings": {
                      "description": "App ingress settings payload.",
                      "type": "object",
                      "properties": {
                        "readTimeoutInSeconds": {
                          "format": "int32",
                          "description": "Ingress read time out in seconds.",
                          "type": "integer"
                        },
                        "sendTimeoutInSeconds": {
                          "format": "int32",
                          "description": "Ingress send time out in seconds.",
                          "type": "integer"
                        },
                        "sessionAffinity": {
                          "description": "Type of the affinity, set this to Cookie to enable session affinity.",
                          "enum": [
                            "Cookie",
                            "None"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "SessionAffinity",
                            "modelAsString": true
                          }
                        },
                        "sessionCookieMaxAge": {
                          "description": "Time in seconds until the cookie expires.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "backendProtocol": {
                          "description": "How ingress should communicate with this app backend service.",
                          "enum": [
                            "GRPC",
                            "Default"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "BackendProtocol",
                            "modelAsString": true
                          }
                        },
                        "clientAuth": {
                          "description": "Client-Certification Authentication.",
                          "type": "object",
                          "properties": {
                            "certificates": {
                              "description": "Collection of certificate resource id.",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "identity": {
                  "description": "The Managed Identity type of the app resource",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Type of the managed identity",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ManagedIdentityType",
                        "modelAsString": true
                      }
                    },
                    "principalId": {
                      "description": "Principal Id of system-assigned managed identity.",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "Tenant Id of system-assigned managed identity.",
                      "type": "string"
                    },
                    "userAssignedIdentities": {
                      "description": "Properties of user-assigned managed identities",
                      "type": "object",
                      "additionalProperties": {
                        "description": "The details of the user-assigned managed identity assigned to an App.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "description": "Principal Id of user-assigned managed identity.",
                            "type": "string",
                            "readOnly": true
                          },
                          "clientId": {
                            "description": "Client Id of user-assigned managed identity.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "location": {
                  "description": "The GEO location of the application, always the same with its parent resource",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/bindings/{bindingName}": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get a Binding and its properties.",
        "operationId": "Bindings_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "bindingName",
            "in": "path",
            "description": "The name of the Binding resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the corresponding Binding.",
            "schema": {
              "description": "Binding resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Binding resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "resourceName": {
                      "description": "The name of the bound resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "resourceType": {
                      "description": "The standard Azure resource type of the bound resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "resourceId": {
                      "description": "The Azure resource id of the bound resource",
                      "type": "string"
                    },
                    "key": {
                      "description": "The key of the bound resource",
                      "type": "string"
                    },
                    "bindingParameters": {
                      "description": "Binding parameters of the Binding resource",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "generatedProperties": {
                      "description": "The generated Spring Boot property file for this binding. The secret will be deducted.",
                      "type": "string",
                      "readOnly": true
                    },
                    "createdAt": {
                      "description": "Creation time of the Binding resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "updatedAt": {
                      "description": "Update time of the Binding resource",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Create a new Binding or update an exiting Binding.",
        "operationId": "Bindings_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "bindingName",
            "in": "path",
            "description": "The name of the Binding resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "bindingResource",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "description": "Binding resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Binding resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "resourceName": {
                      "description": "The name of the bound resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "resourceType": {
                      "description": "The standard Azure resource type of the bound resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "resourceId": {
                      "description": "The Azure resource id of the bound resource",
                      "type": "string"
                    },
                    "key": {
                      "description": "The key of the bound resource",
                      "type": "string"
                    },
                    "bindingParameters": {
                      "description": "Binding parameters of the Binding resource",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "generatedProperties": {
                      "description": "The generated Spring Boot property file for this binding. The secret will be deducted.",
                      "type": "string",
                      "readOnly": true
                    },
                    "createdAt": {
                      "description": "Creation time of the Binding resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "updatedAt": {
                      "description": "Update time of the Binding resource",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the created or updated Binding.",
            "schema": {
              "description": "Binding resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Binding resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "resourceName": {
                      "description": "The name of the bound resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "resourceType": {
                      "description": "The standard Azure resource type of the bound resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "resourceId": {
                      "description": "The Azure resource id of the bound resource",
                      "type": "string"
                    },
                    "key": {
                      "description": "The key of the bound resource",
                      "type": "string"
                    },
                    "bindingParameters": {
                      "description": "Binding parameters of the Binding resource",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "generatedProperties": {
                      "description": "The generated Spring Boot property file for this binding. The secret will be deducted.",
                      "type": "string",
                      "readOnly": true
                    },
                    "createdAt": {
                      "description": "Creation time of the Binding resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "updatedAt": {
                      "description": "Update time of the Binding resource",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created. The response describes the new Binding and contains an Azure-AsyncOperation header to query the operation result.",
            "schema": {
              "description": "Binding resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Binding resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "resourceName": {
                      "description": "The name of the bound resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "resourceType": {
                      "description": "The standard Azure resource type of the bound resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "resourceId": {
                      "description": "The Azure resource id of the bound resource",
                      "type": "string"
                    },
                    "key": {
                      "description": "The key of the bound resource",
                      "type": "string"
                    },
                    "bindingParameters": {
                      "description": "Binding parameters of the Binding resource",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "generatedProperties": {
                      "description": "The generated Spring Boot property file for this binding. The secret will be deducted.",
                      "type": "string",
                      "readOnly": true
                    },
                    "createdAt": {
                      "description": "Creation time of the Binding resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "updatedAt": {
                      "description": "Update time of the Binding resource",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The response indicates the exiting Binding is now updating and contains a Location\r\nheader to query the operation result.",
            "schema": {
              "description": "Binding resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Binding resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "resourceName": {
                      "description": "The name of the bound resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "resourceType": {
                      "description": "The standard Azure resource type of the bound resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "resourceId": {
                      "description": "The Azure resource id of the bound resource",
                      "type": "string"
                    },
                    "key": {
                      "description": "The key of the bound resource",
                      "type": "string"
                    },
                    "bindingParameters": {
                      "description": "Binding parameters of the Binding resource",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "generatedProperties": {
                      "description": "The generated Spring Boot property file for this binding. The secret will be deducted.",
                      "type": "string",
                      "readOnly": true
                    },
                    "createdAt": {
                      "description": "Creation time of the Binding resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "updatedAt": {
                      "description": "Update time of the Binding resource",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Operation to delete a Binding.",
        "operationId": "Bindings_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "bindingName",
            "in": "path",
            "description": "The name of the Binding resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response indicates the resource is deleted."
          },
          "202": {
            "description": "Accepted. The response indicates the delete operation is performed in the background."
          },
          "204": {
            "description": "Success. The response indicates the resource doesn't exist."
          }
        }
      },
      "patch": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Operation to update an exiting Binding.",
        "operationId": "Bindings_Update",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "bindingName",
            "in": "path",
            "description": "The name of the Binding resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "bindingResource",
            "in": "body",
            "description": "Parameters for the update operation",
            "required": true,
            "schema": {
              "description": "Binding resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Binding resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "resourceName": {
                      "description": "The name of the bound resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "resourceType": {
                      "description": "The standard Azure resource type of the bound resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "resourceId": {
                      "description": "The Azure resource id of the bound resource",
                      "type": "string"
                    },
                    "key": {
                      "description": "The key of the bound resource",
                      "type": "string"
                    },
                    "bindingParameters": {
                      "description": "Binding parameters of the Binding resource",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "generatedProperties": {
                      "description": "The generated Spring Boot property file for this binding. The secret will be deducted.",
                      "type": "string",
                      "readOnly": true
                    },
                    "createdAt": {
                      "description": "Creation time of the Binding resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "updatedAt": {
                      "description": "Update time of the Binding resource",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated Binding.",
            "schema": {
              "description": "Binding resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Binding resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "resourceName": {
                      "description": "The name of the bound resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "resourceType": {
                      "description": "The standard Azure resource type of the bound resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "resourceId": {
                      "description": "The Azure resource id of the bound resource",
                      "type": "string"
                    },
                    "key": {
                      "description": "The key of the bound resource",
                      "type": "string"
                    },
                    "bindingParameters": {
                      "description": "Binding parameters of the Binding resource",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "generatedProperties": {
                      "description": "The generated Spring Boot property file for this binding. The secret will be deducted.",
                      "type": "string",
                      "readOnly": true
                    },
                    "createdAt": {
                      "description": "Creation time of the Binding resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "updatedAt": {
                      "description": "Update time of the Binding resource",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The response indicates the exiting Binding is now updating and contains a Location\r\nheader to query the operation result.",
            "schema": {
              "description": "Binding resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Binding resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "resourceName": {
                      "description": "The name of the bound resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "resourceType": {
                      "description": "The standard Azure resource type of the bound resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "resourceId": {
                      "description": "The Azure resource id of the bound resource",
                      "type": "string"
                    },
                    "key": {
                      "description": "The key of the bound resource",
                      "type": "string"
                    },
                    "bindingParameters": {
                      "description": "Binding parameters of the Binding resource",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "generatedProperties": {
                      "description": "The generated Spring Boot property file for this binding. The secret will be deducted.",
                      "type": "string",
                      "readOnly": true
                    },
                    "createdAt": {
                      "description": "Creation time of the Binding resource",
                      "type": "string",
                      "readOnly": true
                    },
                    "updatedAt": {
                      "description": "Update time of the Binding resource",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/bindings": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Handles requests to list all resources in an App.",
        "operationId": "Bindings_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of Bindings in the App.",
            "schema": {
              "description": "Object that includes an array of Binding resources and a possible link for next set",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of Binding resources",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Binding resource payload",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the Binding resource",
                        "x-ms-client-flatten": false,
                        "type": "object",
                        "properties": {
                          "resourceName": {
                            "description": "The name of the bound resource",
                            "type": "string",
                            "readOnly": true
                          },
                          "resourceType": {
                            "description": "The standard Azure resource type of the bound resource",
                            "type": "string",
                            "readOnly": true
                          },
                          "resourceId": {
                            "description": "The Azure resource id of the bound resource",
                            "type": "string"
                          },
                          "key": {
                            "description": "The key of the bound resource",
                            "type": "string"
                          },
                          "bindingParameters": {
                            "description": "Binding parameters of the Binding resource",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "generatedProperties": {
                            "description": "The generated Spring Boot property file for this binding. The secret will be deducted.",
                            "type": "string",
                            "readOnly": true
                          },
                          "createdAt": {
                            "description": "Creation time of the Binding resource",
                            "type": "string",
                            "readOnly": true
                          },
                          "updatedAt": {
                            "description": "Update time of the Binding resource",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/storages/{storageName}": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get the storage resource.",
        "operationId": "Storages_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageName",
            "in": "path",
            "description": "The name of the storage resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describe the storage.",
            "schema": {
              "description": "Storage resource payload.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the storage resource payload.",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "required": [
                    "storageType"
                  ],
                  "properties": {
                    "storageType": {
                      "description": "The type of the storage.",
                      "enum": [
                        "StorageAccount"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "storageType"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Create or update storage resource.",
        "operationId": "Storages_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageName",
            "in": "path",
            "description": "The name of the storage resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageResource",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "description": "Storage resource payload.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the storage resource payload.",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "required": [
                    "storageType"
                  ],
                  "properties": {
                    "storageType": {
                      "description": "The type of the storage.",
                      "enum": [
                        "StorageAccount"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "storageType"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describe the existed storage updated.",
            "schema": {
              "description": "Storage resource payload.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the storage resource payload.",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "required": [
                    "storageType"
                  ],
                  "properties": {
                    "storageType": {
                      "description": "The type of the storage.",
                      "enum": [
                        "StorageAccount"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "storageType"
                }
              }
            }
          },
          "201": {
            "description": "Created. The response describes the new storage resource created and contains an Azure-AsyncOperation header to query the operation result.",
            "schema": {
              "description": "Storage resource payload.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the storage resource payload.",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "required": [
                    "storageType"
                  ],
                  "properties": {
                    "storageType": {
                      "description": "The type of the storage.",
                      "enum": [
                        "StorageAccount"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "storageType"
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The response indicates the exiting storage is now updating and contains a Location\r\nheader to query the operation result.",
            "schema": {
              "description": "Storage resource payload.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the storage resource payload.",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "required": [
                    "storageType"
                  ],
                  "properties": {
                    "storageType": {
                      "description": "The type of the storage.",
                      "enum": [
                        "StorageAccount"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "storageType"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Delete the storage resource.",
        "operationId": "Storages_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "storageName",
            "in": "path",
            "description": "The name of the storage resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response indicates the storage deleted."
          },
          "202": {
            "description": "Accepted. The response indicates the delete operation is performed in the background."
          },
          "204": {
            "description": "No content. The response indicates the storage doesn't exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/storages": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "List all the storages of one Azure Spring Apps resource.",
        "operationId": "Storages_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describe all the storages attached to one Azure Spring Apps resource.",
            "schema": {
              "description": "Collection compose of storage resources list and a possible link for next page.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The storage resources list.",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Storage resource payload.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the storage resource payload.",
                        "x-ms-client-flatten": false,
                        "type": "object",
                        "required": [
                          "storageType"
                        ],
                        "properties": {
                          "storageType": {
                            "description": "The type of the storage.",
                            "enum": [
                              "StorageAccount"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "StorageType",
                              "modelAsString": true
                            }
                          }
                        },
                        "discriminator": "storageType"
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "The link to next page of storage list.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/certificates/{certificateName}": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get the certificate resource.",
        "operationId": "Certificates_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "The name of the certificate resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describe the certificate.",
            "schema": {
              "description": "Certificate resource payload.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the certificate resource payload.",
                  "x-ms-client-flatten": false,
                  "required": [
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of the certificate source.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "thumbprint": {
                      "description": "The thumbprint of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "issuer": {
                      "description": "The issuer of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "issuedDate": {
                      "description": "The issue date of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expirationDate": {
                      "description": "The expiration date of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "activateDate": {
                      "description": "The activate date of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "subjectName": {
                      "description": "The subject name of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "dnsNames": {
                      "description": "The domain list of certificate.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Certificate",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CertificateResourceProvisioningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "type"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Create or update certificate resource.",
        "operationId": "Certificates_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "The name of the certificate resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "certificateResource",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "description": "Certificate resource payload.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the certificate resource payload.",
                  "x-ms-client-flatten": false,
                  "required": [
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of the certificate source.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "thumbprint": {
                      "description": "The thumbprint of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "issuer": {
                      "description": "The issuer of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "issuedDate": {
                      "description": "The issue date of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expirationDate": {
                      "description": "The expiration date of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "activateDate": {
                      "description": "The activate date of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "subjectName": {
                      "description": "The subject name of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "dnsNames": {
                      "description": "The domain list of certificate.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Certificate",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CertificateResourceProvisioningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "type"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describe the existed certificate updated.",
            "schema": {
              "description": "Certificate resource payload.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the certificate resource payload.",
                  "x-ms-client-flatten": false,
                  "required": [
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of the certificate source.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "thumbprint": {
                      "description": "The thumbprint of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "issuer": {
                      "description": "The issuer of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "issuedDate": {
                      "description": "The issue date of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expirationDate": {
                      "description": "The expiration date of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "activateDate": {
                      "description": "The activate date of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "subjectName": {
                      "description": "The subject name of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "dnsNames": {
                      "description": "The domain list of certificate.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Certificate",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CertificateResourceProvisioningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "type"
                }
              }
            }
          },
          "201": {
            "description": "Created. The response describes the new certificate and contains an Azure-AsyncOperation header to query the operation result.",
            "schema": {
              "description": "Certificate resource payload.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the certificate resource payload.",
                  "x-ms-client-flatten": false,
                  "required": [
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of the certificate source.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "thumbprint": {
                      "description": "The thumbprint of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "issuer": {
                      "description": "The issuer of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "issuedDate": {
                      "description": "The issue date of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expirationDate": {
                      "description": "The expiration date of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "activateDate": {
                      "description": "The activate date of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "subjectName": {
                      "description": "The subject name of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "dnsNames": {
                      "description": "The domain list of certificate.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Certificate",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CertificateResourceProvisioningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "type"
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The response indicates the exiting certificate is now updating and contains a Location\r\nheader to query the operation result.",
            "schema": {
              "description": "Certificate resource payload.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the certificate resource payload.",
                  "x-ms-client-flatten": false,
                  "required": [
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of the certificate source.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "thumbprint": {
                      "description": "The thumbprint of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "issuer": {
                      "description": "The issuer of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "issuedDate": {
                      "description": "The issue date of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expirationDate": {
                      "description": "The expiration date of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "activateDate": {
                      "description": "The activate date of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "subjectName": {
                      "description": "The subject name of certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "dnsNames": {
                      "description": "The domain list of certificate.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Certificate",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CertificateResourceProvisioningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "type"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Delete the certificate resource.",
        "operationId": "Certificates_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "The name of the certificate resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response indicates the certificate deleted."
          },
          "202": {
            "description": "Accepted. The response indicates the delete operation is performed in the background."
          },
          "204": {
            "description": "No content. The response indicates the certificate doesn't exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/certificates": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "List all the certificates of one user.",
        "operationId": "Certificates_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describe the list of certificates in the Service.",
            "schema": {
              "description": "Collection compose of certificate resources list and a possible link for next page.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The certificate resources list.",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Certificate resource payload.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the certificate resource payload.",
                        "x-ms-client-flatten": false,
                        "required": [
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the certificate source.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "thumbprint": {
                            "description": "The thumbprint of certificate.",
                            "type": "string",
                            "readOnly": true
                          },
                          "issuer": {
                            "description": "The issuer of certificate.",
                            "type": "string",
                            "readOnly": true
                          },
                          "issuedDate": {
                            "description": "The issue date of certificate.",
                            "type": "string",
                            "readOnly": true
                          },
                          "expirationDate": {
                            "description": "The expiration date of certificate.",
                            "type": "string",
                            "readOnly": true
                          },
                          "activateDate": {
                            "description": "The activate date of certificate.",
                            "type": "string",
                            "readOnly": true
                          },
                          "subjectName": {
                            "description": "The subject name of certificate.",
                            "type": "string",
                            "readOnly": true
                          },
                          "dnsNames": {
                            "description": "The domain list of certificate.",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the Certificate",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Succeeded",
                              "Failed",
                              "Deleting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "CertificateResourceProvisioningState",
                              "modelAsString": true
                            }
                          }
                        },
                        "discriminator": "type"
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "The link to next page of certificate list.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AppPlatform/locations/{location}/checkNameAvailability": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Checks that the resource name is valid and is not already in use.",
        "operationId": "Services_CheckNameAvailability",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "location",
            "in": "path",
            "description": "the region",
            "required": true,
            "type": "string"
          },
          {
            "name": "availabilityParameters",
            "in": "body",
            "description": "Parameters supplied to the operation.",
            "required": true,
            "schema": {
              "description": "Name availability parameters payload",
              "required": [
                "type",
                "name"
              ],
              "type": "object",
              "properties": {
                "type": {
                  "description": "Type of the resource to check name availability",
                  "type": "string"
                },
                "name": {
                  "description": "Name to be checked",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the name availability.",
            "schema": {
              "description": "Name availability result payload",
              "type": "object",
              "properties": {
                "nameAvailable": {
                  "description": "Indicates whether the name is available",
                  "type": "boolean"
                },
                "reason": {
                  "description": "Reason why the name is not available",
                  "type": "string"
                },
                "message": {
                  "description": "Message why the name is not available",
                  "type": "string"
                }
              },
              "readOnly": true
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/domains/{domainName}": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get the custom domain of one lifecycle application.",
        "operationId": "CustomDomains_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "The name of the custom domain resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describe the custom domain.",
            "schema": {
              "description": "Custom domain resource payload.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the custom domain resource.",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "thumbprint": {
                      "description": "The thumbprint of bound certificate.",
                      "type": "string"
                    },
                    "appName": {
                      "description": "The app name of domain.",
                      "type": "string",
                      "readOnly": true
                    },
                    "certName": {
                      "description": "The bound certificate name of domain.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Domain",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CustomDomainResourceProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Create or update custom domain of one lifecycle application.",
        "operationId": "CustomDomains_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "The name of the custom domain resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "domainResource",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "description": "Custom domain resource payload.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the custom domain resource.",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "thumbprint": {
                      "description": "The thumbprint of bound certificate.",
                      "type": "string"
                    },
                    "appName": {
                      "description": "The app name of domain.",
                      "type": "string",
                      "readOnly": true
                    },
                    "certName": {
                      "description": "The bound certificate name of domain.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Domain",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CustomDomainResourceProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describe the existed custom domain updated.",
            "schema": {
              "description": "Custom domain resource payload.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the custom domain resource.",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "thumbprint": {
                      "description": "The thumbprint of bound certificate.",
                      "type": "string"
                    },
                    "appName": {
                      "description": "The app name of domain.",
                      "type": "string",
                      "readOnly": true
                    },
                    "certName": {
                      "description": "The bound certificate name of domain.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Domain",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CustomDomainResourceProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created. The response describes the new custom domain and contains an Azure-AsyncOperation header to query the operation result.",
            "schema": {
              "description": "Custom domain resource payload.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the custom domain resource.",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "thumbprint": {
                      "description": "The thumbprint of bound certificate.",
                      "type": "string"
                    },
                    "appName": {
                      "description": "The app name of domain.",
                      "type": "string",
                      "readOnly": true
                    },
                    "certName": {
                      "description": "The bound certificate name of domain.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Domain",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CustomDomainResourceProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The response indicates the exiting custom domain is now updating and contains a Location\r\nheader to query the operation result.",
            "schema": {
              "description": "Custom domain resource payload.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the custom domain resource.",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "thumbprint": {
                      "description": "The thumbprint of bound certificate.",
                      "type": "string"
                    },
                    "appName": {
                      "description": "The app name of domain.",
                      "type": "string",
                      "readOnly": true
                    },
                    "certName": {
                      "description": "The bound certificate name of domain.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Domain",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CustomDomainResourceProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Delete the custom domain of one lifecycle application.",
        "operationId": "CustomDomains_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "The name of the custom domain resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response indicates the custom domain deleted."
          },
          "202": {
            "description": "Accepted. The response indicates the delete operation is performed in the background."
          },
          "204": {
            "description": "No content. The response indicates the custom domain doesn't exist."
          }
        }
      },
      "patch": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Update custom domain of one lifecycle application.",
        "operationId": "CustomDomains_Update",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "The name of the custom domain resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "domainResource",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "description": "Custom domain resource payload.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the custom domain resource.",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "thumbprint": {
                      "description": "The thumbprint of bound certificate.",
                      "type": "string"
                    },
                    "appName": {
                      "description": "The app name of domain.",
                      "type": "string",
                      "readOnly": true
                    },
                    "certName": {
                      "description": "The bound certificate name of domain.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Domain",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CustomDomainResourceProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describe the existed custom domain updated.",
            "schema": {
              "description": "Custom domain resource payload.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the custom domain resource.",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "thumbprint": {
                      "description": "The thumbprint of bound certificate.",
                      "type": "string"
                    },
                    "appName": {
                      "description": "The app name of domain.",
                      "type": "string",
                      "readOnly": true
                    },
                    "certName": {
                      "description": "The bound certificate name of domain.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Domain",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CustomDomainResourceProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The response indicates the exiting custom domain is now updating and contains a Location\r\nheader to query the operation result.",
            "schema": {
              "description": "Custom domain resource payload.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the custom domain resource.",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "thumbprint": {
                      "description": "The thumbprint of bound certificate.",
                      "type": "string"
                    },
                    "appName": {
                      "description": "The app name of domain.",
                      "type": "string",
                      "readOnly": true
                    },
                    "certName": {
                      "description": "The bound certificate name of domain.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Domain",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CustomDomainResourceProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/domains": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "List the custom domains of one lifecycle application.",
        "operationId": "CustomDomains_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describe the custom domain resource list of one application.",
            "schema": {
              "description": "Collection compose of a custom domain resources list and a possible link for next page.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The custom domain resources list.",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Custom domain resource payload.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the custom domain resource.",
                        "x-ms-client-flatten": false,
                        "type": "object",
                        "properties": {
                          "thumbprint": {
                            "description": "The thumbprint of bound certificate.",
                            "type": "string"
                          },
                          "appName": {
                            "description": "The app name of domain.",
                            "type": "string",
                            "readOnly": true
                          },
                          "certName": {
                            "description": "The bound certificate name of domain.",
                            "type": "string"
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the Domain",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Succeeded",
                              "Failed",
                              "Deleting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "CustomDomainResourceProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "The link to next page of custom domain list.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/validateDomain": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Check the resource name is valid as well as not in use.",
        "operationId": "Apps_ValidateDomain",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "validatePayload",
            "in": "body",
            "description": "Custom domain payload to be validated",
            "required": true,
            "schema": {
              "description": "Custom domain validate payload.",
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "description": "Name to be validated",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describe the name is available.",
            "schema": {
              "description": "Validation result for custom domain.",
              "type": "object",
              "properties": {
                "isValid": {
                  "description": "Indicates if domain name is valid.",
                  "type": "boolean"
                },
                "message": {
                  "description": "Message of why domain name is invalid.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get a Deployment and its properties.",
        "operationId": "Deployments_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the Deployment resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the corresponding Deployment.",
            "schema": {
              "description": "Deployment resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Deployment resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "source": {
                      "description": "Uploaded source information of the deployment.",
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "description": "Type of the source uploaded",
                          "type": "string"
                        },
                        "version": {
                          "description": "Version of the source",
                          "type": "string"
                        }
                      },
                      "discriminator": "type"
                    },
                    "deploymentSettings": {
                      "description": "Deployment settings of the Deployment",
                      "type": "object",
                      "properties": {
                        "resourceRequests": {
                          "description": "The requested resource quantity for required CPU and Memory. It is recommended that using this field to represent the required CPU and Memory, the old field cpu and memoryInGB will be deprecated later.",
                          "type": "object",
                          "properties": {
                            "cpu": {
                              "description": "Required CPU. 1 core can be represented by 1 or 1000m. This should be 500m or 1 for Basic tier, and {500m, 1, 2, 3, 4} for Standard tier.",
                              "type": "string"
                            },
                            "memory": {
                              "description": "Required memory. 1 GB can be represented by 1Gi or 1024Mi. This should be {512Mi, 1Gi, 2Gi} for Basic tier, and {512Mi, 1Gi, 2Gi, ..., 8Gi} for Standard tier.",
                              "type": "string"
                            }
                          }
                        },
                        "environmentVariables": {
                          "description": "Collection of environment variables",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "apms": {
                          "description": "Collection of ApmReferences",
                          "type": "array",
                          "x-ms-identifiers": [
                            "resourceId"
                          ],
                          "items": {
                            "description": "A reference to the APM",
                            "required": [
                              "resourceId"
                            ],
                            "type": "object",
                            "properties": {
                              "resourceId": {
                                "description": "Resource Id of the APM",
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.AppPlatform/Spring/apms"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "addonConfigs": {
                          "description": "Collection of addons",
                          "type": "object",
                          "additionalProperties": {
                            "type": "object"
                          }
                        },
                        "livenessProbe": {
                          "description": "Periodic probe of App Instance liveness. App Instance will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "object",
                          "required": [
                            "disableProbe"
                          ],
                          "properties": {
                            "probeAction": {
                              "description": "The action of the probe.",
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the action to take to perform the health check.",
                                  "enum": [
                                    "HTTPGetAction",
                                    "TCPSocketAction",
                                    "ExecAction"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "ProbeActionType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "type"
                            },
                            "disableProbe": {
                              "description": "Indicate whether the probe is disabled.",
                              "type": "boolean",
                              "default": false
                            },
                            "initialDelaySeconds": {
                              "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                              "format": "int32",
                              "type": "integer"
                            },
                            "periodSeconds": {
                              "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "timeoutSeconds": {
                              "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "failureThreshold": {
                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "successThreshold": {
                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "readinessProbe": {
                          "description": "Periodic probe of App Instance service readiness. App Instance will be removed from service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "object",
                          "required": [
                            "disableProbe"
                          ],
                          "properties": {
                            "probeAction": {
                              "description": "The action of the probe.",
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the action to take to perform the health check.",
                                  "enum": [
                                    "HTTPGetAction",
                                    "TCPSocketAction",
                                    "ExecAction"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "ProbeActionType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "type"
                            },
                            "disableProbe": {
                              "description": "Indicate whether the probe is disabled.",
                              "type": "boolean",
                              "default": false
                            },
                            "initialDelaySeconds": {
                              "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                              "format": "int32",
                              "type": "integer"
                            },
                            "periodSeconds": {
                              "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "timeoutSeconds": {
                              "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "failureThreshold": {
                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "successThreshold": {
                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "startupProbe": {
                          "description": "StartupProbe indicates that the App Instance has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a App Instance's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "object",
                          "required": [
                            "disableProbe"
                          ],
                          "properties": {
                            "probeAction": {
                              "description": "The action of the probe.",
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the action to take to perform the health check.",
                                  "enum": [
                                    "HTTPGetAction",
                                    "TCPSocketAction",
                                    "ExecAction"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "ProbeActionType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "type"
                            },
                            "disableProbe": {
                              "description": "Indicate whether the probe is disabled.",
                              "type": "boolean",
                              "default": false
                            },
                            "initialDelaySeconds": {
                              "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                              "format": "int32",
                              "type": "integer"
                            },
                            "periodSeconds": {
                              "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "timeoutSeconds": {
                              "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "failureThreshold": {
                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "successThreshold": {
                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the App Instance needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the App Instance are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 90 seconds.",
                          "format": "int32",
                          "type": "integer",
                          "default": 90
                        },
                        "containerProbeSettings": {
                          "description": "Container liveness and readiness probe settings",
                          "type": "object",
                          "properties": {
                            "disableProbe": {
                              "description": "Indicates whether disable the liveness and readiness probe",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Deployment",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DeploymentResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "status": {
                      "description": "Status of the Deployment",
                      "enum": [
                        "Stopped",
                        "Running"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DeploymentResourceStatus",
                        "modelAsString": true
                      }
                    },
                    "active": {
                      "description": "Indicates whether the Deployment is active",
                      "type": "boolean"
                    },
                    "instances": {
                      "description": "Collection of instances belong to the Deployment",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "Deployment instance payload",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "Failed reason of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "discoveryStatus": {
                            "description": "Discovery status of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "startTime": {
                            "description": "Start time of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "zone": {
                            "description": "Availability zone information of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the Deployment resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Create a new Deployment or update an exiting Deployment.",
        "operationId": "Deployments_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the Deployment resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "deploymentResource",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "description": "Deployment resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Deployment resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "source": {
                      "description": "Uploaded source information of the deployment.",
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "description": "Type of the source uploaded",
                          "type": "string"
                        },
                        "version": {
                          "description": "Version of the source",
                          "type": "string"
                        }
                      },
                      "discriminator": "type"
                    },
                    "deploymentSettings": {
                      "description": "Deployment settings of the Deployment",
                      "type": "object",
                      "properties": {
                        "resourceRequests": {
                          "description": "The requested resource quantity for required CPU and Memory. It is recommended that using this field to represent the required CPU and Memory, the old field cpu and memoryInGB will be deprecated later.",
                          "type": "object",
                          "properties": {
                            "cpu": {
                              "description": "Required CPU. 1 core can be represented by 1 or 1000m. This should be 500m or 1 for Basic tier, and {500m, 1, 2, 3, 4} for Standard tier.",
                              "type": "string"
                            },
                            "memory": {
                              "description": "Required memory. 1 GB can be represented by 1Gi or 1024Mi. This should be {512Mi, 1Gi, 2Gi} for Basic tier, and {512Mi, 1Gi, 2Gi, ..., 8Gi} for Standard tier.",
                              "type": "string"
                            }
                          }
                        },
                        "environmentVariables": {
                          "description": "Collection of environment variables",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "apms": {
                          "description": "Collection of ApmReferences",
                          "type": "array",
                          "x-ms-identifiers": [
                            "resourceId"
                          ],
                          "items": {
                            "description": "A reference to the APM",
                            "required": [
                              "resourceId"
                            ],
                            "type": "object",
                            "properties": {
                              "resourceId": {
                                "description": "Resource Id of the APM",
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.AppPlatform/Spring/apms"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "addonConfigs": {
                          "description": "Collection of addons",
                          "type": "object",
                          "additionalProperties": {
                            "type": "object"
                          }
                        },
                        "livenessProbe": {
                          "description": "Periodic probe of App Instance liveness. App Instance will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "object",
                          "required": [
                            "disableProbe"
                          ],
                          "properties": {
                            "probeAction": {
                              "description": "The action of the probe.",
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the action to take to perform the health check.",
                                  "enum": [
                                    "HTTPGetAction",
                                    "TCPSocketAction",
                                    "ExecAction"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "ProbeActionType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "type"
                            },
                            "disableProbe": {
                              "description": "Indicate whether the probe is disabled.",
                              "type": "boolean",
                              "default": false
                            },
                            "initialDelaySeconds": {
                              "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                              "format": "int32",
                              "type": "integer"
                            },
                            "periodSeconds": {
                              "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "timeoutSeconds": {
                              "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "failureThreshold": {
                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "successThreshold": {
                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "readinessProbe": {
                          "description": "Periodic probe of App Instance service readiness. App Instance will be removed from service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "object",
                          "required": [
                            "disableProbe"
                          ],
                          "properties": {
                            "probeAction": {
                              "description": "The action of the probe.",
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the action to take to perform the health check.",
                                  "enum": [
                                    "HTTPGetAction",
                                    "TCPSocketAction",
                                    "ExecAction"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "ProbeActionType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "type"
                            },
                            "disableProbe": {
                              "description": "Indicate whether the probe is disabled.",
                              "type": "boolean",
                              "default": false
                            },
                            "initialDelaySeconds": {
                              "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                              "format": "int32",
                              "type": "integer"
                            },
                            "periodSeconds": {
                              "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "timeoutSeconds": {
                              "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "failureThreshold": {
                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "successThreshold": {
                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "startupProbe": {
                          "description": "StartupProbe indicates that the App Instance has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a App Instance's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "object",
                          "required": [
                            "disableProbe"
                          ],
                          "properties": {
                            "probeAction": {
                              "description": "The action of the probe.",
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the action to take to perform the health check.",
                                  "enum": [
                                    "HTTPGetAction",
                                    "TCPSocketAction",
                                    "ExecAction"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "ProbeActionType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "type"
                            },
                            "disableProbe": {
                              "description": "Indicate whether the probe is disabled.",
                              "type": "boolean",
                              "default": false
                            },
                            "initialDelaySeconds": {
                              "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                              "format": "int32",
                              "type": "integer"
                            },
                            "periodSeconds": {
                              "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "timeoutSeconds": {
                              "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "failureThreshold": {
                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "successThreshold": {
                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the App Instance needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the App Instance are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 90 seconds.",
                          "format": "int32",
                          "type": "integer",
                          "default": 90
                        },
                        "containerProbeSettings": {
                          "description": "Container liveness and readiness probe settings",
                          "type": "object",
                          "properties": {
                            "disableProbe": {
                              "description": "Indicates whether disable the liveness and readiness probe",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Deployment",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DeploymentResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "status": {
                      "description": "Status of the Deployment",
                      "enum": [
                        "Stopped",
                        "Running"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DeploymentResourceStatus",
                        "modelAsString": true
                      }
                    },
                    "active": {
                      "description": "Indicates whether the Deployment is active",
                      "type": "boolean"
                    },
                    "instances": {
                      "description": "Collection of instances belong to the Deployment",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "Deployment instance payload",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "Failed reason of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "discoveryStatus": {
                            "description": "Discovery status of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "startTime": {
                            "description": "Start time of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "zone": {
                            "description": "Availability zone information of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the Deployment resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated Deployment.",
            "schema": {
              "description": "Deployment resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Deployment resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "source": {
                      "description": "Uploaded source information of the deployment.",
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "description": "Type of the source uploaded",
                          "type": "string"
                        },
                        "version": {
                          "description": "Version of the source",
                          "type": "string"
                        }
                      },
                      "discriminator": "type"
                    },
                    "deploymentSettings": {
                      "description": "Deployment settings of the Deployment",
                      "type": "object",
                      "properties": {
                        "resourceRequests": {
                          "description": "The requested resource quantity for required CPU and Memory. It is recommended that using this field to represent the required CPU and Memory, the old field cpu and memoryInGB will be deprecated later.",
                          "type": "object",
                          "properties": {
                            "cpu": {
                              "description": "Required CPU. 1 core can be represented by 1 or 1000m. This should be 500m or 1 for Basic tier, and {500m, 1, 2, 3, 4} for Standard tier.",
                              "type": "string"
                            },
                            "memory": {
                              "description": "Required memory. 1 GB can be represented by 1Gi or 1024Mi. This should be {512Mi, 1Gi, 2Gi} for Basic tier, and {512Mi, 1Gi, 2Gi, ..., 8Gi} for Standard tier.",
                              "type": "string"
                            }
                          }
                        },
                        "environmentVariables": {
                          "description": "Collection of environment variables",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "apms": {
                          "description": "Collection of ApmReferences",
                          "type": "array",
                          "x-ms-identifiers": [
                            "resourceId"
                          ],
                          "items": {
                            "description": "A reference to the APM",
                            "required": [
                              "resourceId"
                            ],
                            "type": "object",
                            "properties": {
                              "resourceId": {
                                "description": "Resource Id of the APM",
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.AppPlatform/Spring/apms"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "addonConfigs": {
                          "description": "Collection of addons",
                          "type": "object",
                          "additionalProperties": {
                            "type": "object"
                          }
                        },
                        "livenessProbe": {
                          "description": "Periodic probe of App Instance liveness. App Instance will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "object",
                          "required": [
                            "disableProbe"
                          ],
                          "properties": {
                            "probeAction": {
                              "description": "The action of the probe.",
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the action to take to perform the health check.",
                                  "enum": [
                                    "HTTPGetAction",
                                    "TCPSocketAction",
                                    "ExecAction"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "ProbeActionType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "type"
                            },
                            "disableProbe": {
                              "description": "Indicate whether the probe is disabled.",
                              "type": "boolean",
                              "default": false
                            },
                            "initialDelaySeconds": {
                              "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                              "format": "int32",
                              "type": "integer"
                            },
                            "periodSeconds": {
                              "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "timeoutSeconds": {
                              "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "failureThreshold": {
                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "successThreshold": {
                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "readinessProbe": {
                          "description": "Periodic probe of App Instance service readiness. App Instance will be removed from service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "object",
                          "required": [
                            "disableProbe"
                          ],
                          "properties": {
                            "probeAction": {
                              "description": "The action of the probe.",
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the action to take to perform the health check.",
                                  "enum": [
                                    "HTTPGetAction",
                                    "TCPSocketAction",
                                    "ExecAction"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "ProbeActionType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "type"
                            },
                            "disableProbe": {
                              "description": "Indicate whether the probe is disabled.",
                              "type": "boolean",
                              "default": false
                            },
                            "initialDelaySeconds": {
                              "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                              "format": "int32",
                              "type": "integer"
                            },
                            "periodSeconds": {
                              "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "timeoutSeconds": {
                              "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "failureThreshold": {
                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "successThreshold": {
                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "startupProbe": {
                          "description": "StartupProbe indicates that the App Instance has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a App Instance's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "object",
                          "required": [
                            "disableProbe"
                          ],
                          "properties": {
                            "probeAction": {
                              "description": "The action of the probe.",
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the action to take to perform the health check.",
                                  "enum": [
                                    "HTTPGetAction",
                                    "TCPSocketAction",
                                    "ExecAction"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "ProbeActionType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "type"
                            },
                            "disableProbe": {
                              "description": "Indicate whether the probe is disabled.",
                              "type": "boolean",
                              "default": false
                            },
                            "initialDelaySeconds": {
                              "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                              "format": "int32",
                              "type": "integer"
                            },
                            "periodSeconds": {
                              "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "timeoutSeconds": {
                              "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "failureThreshold": {
                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "successThreshold": {
                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the App Instance needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the App Instance are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 90 seconds.",
                          "format": "int32",
                          "type": "integer",
                          "default": 90
                        },
                        "containerProbeSettings": {
                          "description": "Container liveness and readiness probe settings",
                          "type": "object",
                          "properties": {
                            "disableProbe": {
                              "description": "Indicates whether disable the liveness and readiness probe",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Deployment",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DeploymentResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "status": {
                      "description": "Status of the Deployment",
                      "enum": [
                        "Stopped",
                        "Running"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DeploymentResourceStatus",
                        "modelAsString": true
                      }
                    },
                    "active": {
                      "description": "Indicates whether the Deployment is active",
                      "type": "boolean"
                    },
                    "instances": {
                      "description": "Collection of instances belong to the Deployment",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "Deployment instance payload",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "Failed reason of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "discoveryStatus": {
                            "description": "Discovery status of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "startTime": {
                            "description": "Start time of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "zone": {
                            "description": "Availability zone information of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the Deployment resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created. The response describes the new Deployment and contains an Azure-AsyncOperation header to query the operation result.",
            "schema": {
              "description": "Deployment resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Deployment resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "source": {
                      "description": "Uploaded source information of the deployment.",
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "description": "Type of the source uploaded",
                          "type": "string"
                        },
                        "version": {
                          "description": "Version of the source",
                          "type": "string"
                        }
                      },
                      "discriminator": "type"
                    },
                    "deploymentSettings": {
                      "description": "Deployment settings of the Deployment",
                      "type": "object",
                      "properties": {
                        "resourceRequests": {
                          "description": "The requested resource quantity for required CPU and Memory. It is recommended that using this field to represent the required CPU and Memory, the old field cpu and memoryInGB will be deprecated later.",
                          "type": "object",
                          "properties": {
                            "cpu": {
                              "description": "Required CPU. 1 core can be represented by 1 or 1000m. This should be 500m or 1 for Basic tier, and {500m, 1, 2, 3, 4} for Standard tier.",
                              "type": "string"
                            },
                            "memory": {
                              "description": "Required memory. 1 GB can be represented by 1Gi or 1024Mi. This should be {512Mi, 1Gi, 2Gi} for Basic tier, and {512Mi, 1Gi, 2Gi, ..., 8Gi} for Standard tier.",
                              "type": "string"
                            }
                          }
                        },
                        "environmentVariables": {
                          "description": "Collection of environment variables",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "apms": {
                          "description": "Collection of ApmReferences",
                          "type": "array",
                          "x-ms-identifiers": [
                            "resourceId"
                          ],
                          "items": {
                            "description": "A reference to the APM",
                            "required": [
                              "resourceId"
                            ],
                            "type": "object",
                            "properties": {
                              "resourceId": {
                                "description": "Resource Id of the APM",
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.AppPlatform/Spring/apms"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "addonConfigs": {
                          "description": "Collection of addons",
                          "type": "object",
                          "additionalProperties": {
                            "type": "object"
                          }
                        },
                        "livenessProbe": {
                          "description": "Periodic probe of App Instance liveness. App Instance will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "object",
                          "required": [
                            "disableProbe"
                          ],
                          "properties": {
                            "probeAction": {
                              "description": "The action of the probe.",
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the action to take to perform the health check.",
                                  "enum": [
                                    "HTTPGetAction",
                                    "TCPSocketAction",
                                    "ExecAction"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "ProbeActionType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "type"
                            },
                            "disableProbe": {
                              "description": "Indicate whether the probe is disabled.",
                              "type": "boolean",
                              "default": false
                            },
                            "initialDelaySeconds": {
                              "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                              "format": "int32",
                              "type": "integer"
                            },
                            "periodSeconds": {
                              "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "timeoutSeconds": {
                              "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "failureThreshold": {
                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "successThreshold": {
                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "readinessProbe": {
                          "description": "Periodic probe of App Instance service readiness. App Instance will be removed from service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "object",
                          "required": [
                            "disableProbe"
                          ],
                          "properties": {
                            "probeAction": {
                              "description": "The action of the probe.",
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the action to take to perform the health check.",
                                  "enum": [
                                    "HTTPGetAction",
                                    "TCPSocketAction",
                                    "ExecAction"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "ProbeActionType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "type"
                            },
                            "disableProbe": {
                              "description": "Indicate whether the probe is disabled.",
                              "type": "boolean",
                              "default": false
                            },
                            "initialDelaySeconds": {
                              "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                              "format": "int32",
                              "type": "integer"
                            },
                            "periodSeconds": {
                              "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "timeoutSeconds": {
                              "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "failureThreshold": {
                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "successThreshold": {
                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "startupProbe": {
                          "description": "StartupProbe indicates that the App Instance has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a App Instance's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "object",
                          "required": [
                            "disableProbe"
                          ],
                          "properties": {
                            "probeAction": {
                              "description": "The action of the probe.",
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the action to take to perform the health check.",
                                  "enum": [
                                    "HTTPGetAction",
                                    "TCPSocketAction",
                                    "ExecAction"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "ProbeActionType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "type"
                            },
                            "disableProbe": {
                              "description": "Indicate whether the probe is disabled.",
                              "type": "boolean",
                              "default": false
                            },
                            "initialDelaySeconds": {
                              "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                              "format": "int32",
                              "type": "integer"
                            },
                            "periodSeconds": {
                              "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "timeoutSeconds": {
                              "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "failureThreshold": {
                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "successThreshold": {
                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the App Instance needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the App Instance are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 90 seconds.",
                          "format": "int32",
                          "type": "integer",
                          "default": 90
                        },
                        "containerProbeSettings": {
                          "description": "Container liveness and readiness probe settings",
                          "type": "object",
                          "properties": {
                            "disableProbe": {
                              "description": "Indicates whether disable the liveness and readiness probe",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Deployment",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DeploymentResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "status": {
                      "description": "Status of the Deployment",
                      "enum": [
                        "Stopped",
                        "Running"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DeploymentResourceStatus",
                        "modelAsString": true
                      }
                    },
                    "active": {
                      "description": "Indicates whether the Deployment is active",
                      "type": "boolean"
                    },
                    "instances": {
                      "description": "Collection of instances belong to the Deployment",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "Deployment instance payload",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "Failed reason of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "discoveryStatus": {
                            "description": "Discovery status of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "startTime": {
                            "description": "Start time of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "zone": {
                            "description": "Availability zone information of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the Deployment resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The response indicates the exiting Deployment is now updating and contains a Location\r\nheader to query the operation result.",
            "schema": {
              "description": "Deployment resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Deployment resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "source": {
                      "description": "Uploaded source information of the deployment.",
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "description": "Type of the source uploaded",
                          "type": "string"
                        },
                        "version": {
                          "description": "Version of the source",
                          "type": "string"
                        }
                      },
                      "discriminator": "type"
                    },
                    "deploymentSettings": {
                      "description": "Deployment settings of the Deployment",
                      "type": "object",
                      "properties": {
                        "resourceRequests": {
                          "description": "The requested resource quantity for required CPU and Memory. It is recommended that using this field to represent the required CPU and Memory, the old field cpu and memoryInGB will be deprecated later.",
                          "type": "object",
                          "properties": {
                            "cpu": {
                              "description": "Required CPU. 1 core can be represented by 1 or 1000m. This should be 500m or 1 for Basic tier, and {500m, 1, 2, 3, 4} for Standard tier.",
                              "type": "string"
                            },
                            "memory": {
                              "description": "Required memory. 1 GB can be represented by 1Gi or 1024Mi. This should be {512Mi, 1Gi, 2Gi} for Basic tier, and {512Mi, 1Gi, 2Gi, ..., 8Gi} for Standard tier.",
                              "type": "string"
                            }
                          }
                        },
                        "environmentVariables": {
                          "description": "Collection of environment variables",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "apms": {
                          "description": "Collection of ApmReferences",
                          "type": "array",
                          "x-ms-identifiers": [
                            "resourceId"
                          ],
                          "items": {
                            "description": "A reference to the APM",
                            "required": [
                              "resourceId"
                            ],
                            "type": "object",
                            "properties": {
                              "resourceId": {
                                "description": "Resource Id of the APM",
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.AppPlatform/Spring/apms"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "addonConfigs": {
                          "description": "Collection of addons",
                          "type": "object",
                          "additionalProperties": {
                            "type": "object"
                          }
                        },
                        "livenessProbe": {
                          "description": "Periodic probe of App Instance liveness. App Instance will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "object",
                          "required": [
                            "disableProbe"
                          ],
                          "properties": {
                            "probeAction": {
                              "description": "The action of the probe.",
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the action to take to perform the health check.",
                                  "enum": [
                                    "HTTPGetAction",
                                    "TCPSocketAction",
                                    "ExecAction"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "ProbeActionType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "type"
                            },
                            "disableProbe": {
                              "description": "Indicate whether the probe is disabled.",
                              "type": "boolean",
                              "default": false
                            },
                            "initialDelaySeconds": {
                              "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                              "format": "int32",
                              "type": "integer"
                            },
                            "periodSeconds": {
                              "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "timeoutSeconds": {
                              "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "failureThreshold": {
                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "successThreshold": {
                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "readinessProbe": {
                          "description": "Periodic probe of App Instance service readiness. App Instance will be removed from service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "object",
                          "required": [
                            "disableProbe"
                          ],
                          "properties": {
                            "probeAction": {
                              "description": "The action of the probe.",
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the action to take to perform the health check.",
                                  "enum": [
                                    "HTTPGetAction",
                                    "TCPSocketAction",
                                    "ExecAction"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "ProbeActionType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "type"
                            },
                            "disableProbe": {
                              "description": "Indicate whether the probe is disabled.",
                              "type": "boolean",
                              "default": false
                            },
                            "initialDelaySeconds": {
                              "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                              "format": "int32",
                              "type": "integer"
                            },
                            "periodSeconds": {
                              "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "timeoutSeconds": {
                              "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "failureThreshold": {
                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "successThreshold": {
                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "startupProbe": {
                          "description": "StartupProbe indicates that the App Instance has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a App Instance's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "object",
                          "required": [
                            "disableProbe"
                          ],
                          "properties": {
                            "probeAction": {
                              "description": "The action of the probe.",
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the action to take to perform the health check.",
                                  "enum": [
                                    "HTTPGetAction",
                                    "TCPSocketAction",
                                    "ExecAction"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "ProbeActionType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "type"
                            },
                            "disableProbe": {
                              "description": "Indicate whether the probe is disabled.",
                              "type": "boolean",
                              "default": false
                            },
                            "initialDelaySeconds": {
                              "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                              "format": "int32",
                              "type": "integer"
                            },
                            "periodSeconds": {
                              "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "timeoutSeconds": {
                              "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "failureThreshold": {
                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "successThreshold": {
                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the App Instance needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the App Instance are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 90 seconds.",
                          "format": "int32",
                          "type": "integer",
                          "default": 90
                        },
                        "containerProbeSettings": {
                          "description": "Container liveness and readiness probe settings",
                          "type": "object",
                          "properties": {
                            "disableProbe": {
                              "description": "Indicates whether disable the liveness and readiness probe",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Deployment",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DeploymentResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "status": {
                      "description": "Status of the Deployment",
                      "enum": [
                        "Stopped",
                        "Running"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DeploymentResourceStatus",
                        "modelAsString": true
                      }
                    },
                    "active": {
                      "description": "Indicates whether the Deployment is active",
                      "type": "boolean"
                    },
                    "instances": {
                      "description": "Collection of instances belong to the Deployment",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "Deployment instance payload",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "Failed reason of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "discoveryStatus": {
                            "description": "Discovery status of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "startTime": {
                            "description": "Start time of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "zone": {
                            "description": "Availability zone information of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the Deployment resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Operation to delete a Deployment.",
        "operationId": "Deployments_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the Deployment resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response indicates the resource is deleted."
          },
          "202": {
            "description": "Accepted. The response indicates the delete operation is performed in the background."
          },
          "204": {
            "description": "Success. The response indicates the resource doesn't exist."
          }
        }
      },
      "patch": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Operation to update an exiting Deployment.",
        "operationId": "Deployments_Update",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the Deployment resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "deploymentResource",
            "in": "body",
            "description": "Parameters for the update operation",
            "required": true,
            "schema": {
              "description": "Deployment resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Deployment resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "source": {
                      "description": "Uploaded source information of the deployment.",
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "description": "Type of the source uploaded",
                          "type": "string"
                        },
                        "version": {
                          "description": "Version of the source",
                          "type": "string"
                        }
                      },
                      "discriminator": "type"
                    },
                    "deploymentSettings": {
                      "description": "Deployment settings of the Deployment",
                      "type": "object",
                      "properties": {
                        "resourceRequests": {
                          "description": "The requested resource quantity for required CPU and Memory. It is recommended that using this field to represent the required CPU and Memory, the old field cpu and memoryInGB will be deprecated later.",
                          "type": "object",
                          "properties": {
                            "cpu": {
                              "description": "Required CPU. 1 core can be represented by 1 or 1000m. This should be 500m or 1 for Basic tier, and {500m, 1, 2, 3, 4} for Standard tier.",
                              "type": "string"
                            },
                            "memory": {
                              "description": "Required memory. 1 GB can be represented by 1Gi or 1024Mi. This should be {512Mi, 1Gi, 2Gi} for Basic tier, and {512Mi, 1Gi, 2Gi, ..., 8Gi} for Standard tier.",
                              "type": "string"
                            }
                          }
                        },
                        "environmentVariables": {
                          "description": "Collection of environment variables",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "apms": {
                          "description": "Collection of ApmReferences",
                          "type": "array",
                          "x-ms-identifiers": [
                            "resourceId"
                          ],
                          "items": {
                            "description": "A reference to the APM",
                            "required": [
                              "resourceId"
                            ],
                            "type": "object",
                            "properties": {
                              "resourceId": {
                                "description": "Resource Id of the APM",
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.AppPlatform/Spring/apms"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "addonConfigs": {
                          "description": "Collection of addons",
                          "type": "object",
                          "additionalProperties": {
                            "type": "object"
                          }
                        },
                        "livenessProbe": {
                          "description": "Periodic probe of App Instance liveness. App Instance will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "object",
                          "required": [
                            "disableProbe"
                          ],
                          "properties": {
                            "probeAction": {
                              "description": "The action of the probe.",
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the action to take to perform the health check.",
                                  "enum": [
                                    "HTTPGetAction",
                                    "TCPSocketAction",
                                    "ExecAction"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "ProbeActionType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "type"
                            },
                            "disableProbe": {
                              "description": "Indicate whether the probe is disabled.",
                              "type": "boolean",
                              "default": false
                            },
                            "initialDelaySeconds": {
                              "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                              "format": "int32",
                              "type": "integer"
                            },
                            "periodSeconds": {
                              "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "timeoutSeconds": {
                              "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "failureThreshold": {
                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "successThreshold": {
                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "readinessProbe": {
                          "description": "Periodic probe of App Instance service readiness. App Instance will be removed from service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "object",
                          "required": [
                            "disableProbe"
                          ],
                          "properties": {
                            "probeAction": {
                              "description": "The action of the probe.",
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the action to take to perform the health check.",
                                  "enum": [
                                    "HTTPGetAction",
                                    "TCPSocketAction",
                                    "ExecAction"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "ProbeActionType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "type"
                            },
                            "disableProbe": {
                              "description": "Indicate whether the probe is disabled.",
                              "type": "boolean",
                              "default": false
                            },
                            "initialDelaySeconds": {
                              "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                              "format": "int32",
                              "type": "integer"
                            },
                            "periodSeconds": {
                              "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "timeoutSeconds": {
                              "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "failureThreshold": {
                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "successThreshold": {
                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "startupProbe": {
                          "description": "StartupProbe indicates that the App Instance has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a App Instance's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "object",
                          "required": [
                            "disableProbe"
                          ],
                          "properties": {
                            "probeAction": {
                              "description": "The action of the probe.",
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the action to take to perform the health check.",
                                  "enum": [
                                    "HTTPGetAction",
                                    "TCPSocketAction",
                                    "ExecAction"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "ProbeActionType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "type"
                            },
                            "disableProbe": {
                              "description": "Indicate whether the probe is disabled.",
                              "type": "boolean",
                              "default": false
                            },
                            "initialDelaySeconds": {
                              "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                              "format": "int32",
                              "type": "integer"
                            },
                            "periodSeconds": {
                              "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "timeoutSeconds": {
                              "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "failureThreshold": {
                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "successThreshold": {
                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the App Instance needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the App Instance are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 90 seconds.",
                          "format": "int32",
                          "type": "integer",
                          "default": 90
                        },
                        "containerProbeSettings": {
                          "description": "Container liveness and readiness probe settings",
                          "type": "object",
                          "properties": {
                            "disableProbe": {
                              "description": "Indicates whether disable the liveness and readiness probe",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Deployment",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DeploymentResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "status": {
                      "description": "Status of the Deployment",
                      "enum": [
                        "Stopped",
                        "Running"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DeploymentResourceStatus",
                        "modelAsString": true
                      }
                    },
                    "active": {
                      "description": "Indicates whether the Deployment is active",
                      "type": "boolean"
                    },
                    "instances": {
                      "description": "Collection of instances belong to the Deployment",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "Deployment instance payload",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "Failed reason of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "discoveryStatus": {
                            "description": "Discovery status of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "startTime": {
                            "description": "Start time of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "zone": {
                            "description": "Availability zone information of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the Deployment resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated Deployment.",
            "schema": {
              "description": "Deployment resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Deployment resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "source": {
                      "description": "Uploaded source information of the deployment.",
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "description": "Type of the source uploaded",
                          "type": "string"
                        },
                        "version": {
                          "description": "Version of the source",
                          "type": "string"
                        }
                      },
                      "discriminator": "type"
                    },
                    "deploymentSettings": {
                      "description": "Deployment settings of the Deployment",
                      "type": "object",
                      "properties": {
                        "resourceRequests": {
                          "description": "The requested resource quantity for required CPU and Memory. It is recommended that using this field to represent the required CPU and Memory, the old field cpu and memoryInGB will be deprecated later.",
                          "type": "object",
                          "properties": {
                            "cpu": {
                              "description": "Required CPU. 1 core can be represented by 1 or 1000m. This should be 500m or 1 for Basic tier, and {500m, 1, 2, 3, 4} for Standard tier.",
                              "type": "string"
                            },
                            "memory": {
                              "description": "Required memory. 1 GB can be represented by 1Gi or 1024Mi. This should be {512Mi, 1Gi, 2Gi} for Basic tier, and {512Mi, 1Gi, 2Gi, ..., 8Gi} for Standard tier.",
                              "type": "string"
                            }
                          }
                        },
                        "environmentVariables": {
                          "description": "Collection of environment variables",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "apms": {
                          "description": "Collection of ApmReferences",
                          "type": "array",
                          "x-ms-identifiers": [
                            "resourceId"
                          ],
                          "items": {
                            "description": "A reference to the APM",
                            "required": [
                              "resourceId"
                            ],
                            "type": "object",
                            "properties": {
                              "resourceId": {
                                "description": "Resource Id of the APM",
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.AppPlatform/Spring/apms"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "addonConfigs": {
                          "description": "Collection of addons",
                          "type": "object",
                          "additionalProperties": {
                            "type": "object"
                          }
                        },
                        "livenessProbe": {
                          "description": "Periodic probe of App Instance liveness. App Instance will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "object",
                          "required": [
                            "disableProbe"
                          ],
                          "properties": {
                            "probeAction": {
                              "description": "The action of the probe.",
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the action to take to perform the health check.",
                                  "enum": [
                                    "HTTPGetAction",
                                    "TCPSocketAction",
                                    "ExecAction"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "ProbeActionType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "type"
                            },
                            "disableProbe": {
                              "description": "Indicate whether the probe is disabled.",
                              "type": "boolean",
                              "default": false
                            },
                            "initialDelaySeconds": {
                              "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                              "format": "int32",
                              "type": "integer"
                            },
                            "periodSeconds": {
                              "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "timeoutSeconds": {
                              "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "failureThreshold": {
                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "successThreshold": {
                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "readinessProbe": {
                          "description": "Periodic probe of App Instance service readiness. App Instance will be removed from service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "object",
                          "required": [
                            "disableProbe"
                          ],
                          "properties": {
                            "probeAction": {
                              "description": "The action of the probe.",
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the action to take to perform the health check.",
                                  "enum": [
                                    "HTTPGetAction",
                                    "TCPSocketAction",
                                    "ExecAction"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "ProbeActionType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "type"
                            },
                            "disableProbe": {
                              "description": "Indicate whether the probe is disabled.",
                              "type": "boolean",
                              "default": false
                            },
                            "initialDelaySeconds": {
                              "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                              "format": "int32",
                              "type": "integer"
                            },
                            "periodSeconds": {
                              "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "timeoutSeconds": {
                              "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "failureThreshold": {
                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "successThreshold": {
                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "startupProbe": {
                          "description": "StartupProbe indicates that the App Instance has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a App Instance's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "object",
                          "required": [
                            "disableProbe"
                          ],
                          "properties": {
                            "probeAction": {
                              "description": "The action of the probe.",
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the action to take to perform the health check.",
                                  "enum": [
                                    "HTTPGetAction",
                                    "TCPSocketAction",
                                    "ExecAction"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "ProbeActionType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "type"
                            },
                            "disableProbe": {
                              "description": "Indicate whether the probe is disabled.",
                              "type": "boolean",
                              "default": false
                            },
                            "initialDelaySeconds": {
                              "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                              "format": "int32",
                              "type": "integer"
                            },
                            "periodSeconds": {
                              "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "timeoutSeconds": {
                              "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "failureThreshold": {
                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "successThreshold": {
                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the App Instance needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the App Instance are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 90 seconds.",
                          "format": "int32",
                          "type": "integer",
                          "default": 90
                        },
                        "containerProbeSettings": {
                          "description": "Container liveness and readiness probe settings",
                          "type": "object",
                          "properties": {
                            "disableProbe": {
                              "description": "Indicates whether disable the liveness and readiness probe",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Deployment",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DeploymentResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "status": {
                      "description": "Status of the Deployment",
                      "enum": [
                        "Stopped",
                        "Running"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DeploymentResourceStatus",
                        "modelAsString": true
                      }
                    },
                    "active": {
                      "description": "Indicates whether the Deployment is active",
                      "type": "boolean"
                    },
                    "instances": {
                      "description": "Collection of instances belong to the Deployment",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "Deployment instance payload",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "Failed reason of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "discoveryStatus": {
                            "description": "Discovery status of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "startTime": {
                            "description": "Start time of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "zone": {
                            "description": "Availability zone information of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the Deployment resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The response indicates the exiting Deployment is now updating and contains a Location\r\nheader to query the operation result.",
            "schema": {
              "description": "Deployment resource payload",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Properties of the Deployment resource",
                  "x-ms-client-flatten": false,
                  "type": "object",
                  "properties": {
                    "source": {
                      "description": "Uploaded source information of the deployment.",
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "description": "Type of the source uploaded",
                          "type": "string"
                        },
                        "version": {
                          "description": "Version of the source",
                          "type": "string"
                        }
                      },
                      "discriminator": "type"
                    },
                    "deploymentSettings": {
                      "description": "Deployment settings of the Deployment",
                      "type": "object",
                      "properties": {
                        "resourceRequests": {
                          "description": "The requested resource quantity for required CPU and Memory. It is recommended that using this field to represent the required CPU and Memory, the old field cpu and memoryInGB will be deprecated later.",
                          "type": "object",
                          "properties": {
                            "cpu": {
                              "description": "Required CPU. 1 core can be represented by 1 or 1000m. This should be 500m or 1 for Basic tier, and {500m, 1, 2, 3, 4} for Standard tier.",
                              "type": "string"
                            },
                            "memory": {
                              "description": "Required memory. 1 GB can be represented by 1Gi or 1024Mi. This should be {512Mi, 1Gi, 2Gi} for Basic tier, and {512Mi, 1Gi, 2Gi, ..., 8Gi} for Standard tier.",
                              "type": "string"
                            }
                          }
                        },
                        "environmentVariables": {
                          "description": "Collection of environment variables",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "apms": {
                          "description": "Collection of ApmReferences",
                          "type": "array",
                          "x-ms-identifiers": [
                            "resourceId"
                          ],
                          "items": {
                            "description": "A reference to the APM",
                            "required": [
                              "resourceId"
                            ],
                            "type": "object",
                            "properties": {
                              "resourceId": {
                                "description": "Resource Id of the APM",
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.AppPlatform/Spring/apms"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "addonConfigs": {
                          "description": "Collection of addons",
                          "type": "object",
                          "additionalProperties": {
                            "type": "object"
                          }
                        },
                        "livenessProbe": {
                          "description": "Periodic probe of App Instance liveness. App Instance will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "object",
                          "required": [
                            "disableProbe"
                          ],
                          "properties": {
                            "probeAction": {
                              "description": "The action of the probe.",
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the action to take to perform the health check.",
                                  "enum": [
                                    "HTTPGetAction",
                                    "TCPSocketAction",
                                    "ExecAction"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "ProbeActionType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "type"
                            },
                            "disableProbe": {
                              "description": "Indicate whether the probe is disabled.",
                              "type": "boolean",
                              "default": false
                            },
                            "initialDelaySeconds": {
                              "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                              "format": "int32",
                              "type": "integer"
                            },
                            "periodSeconds": {
                              "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "timeoutSeconds": {
                              "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "failureThreshold": {
                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "successThreshold": {
                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "readinessProbe": {
                          "description": "Periodic probe of App Instance service readiness. App Instance will be removed from service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "object",
                          "required": [
                            "disableProbe"
                          ],
                          "properties": {
                            "probeAction": {
                              "description": "The action of the probe.",
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the action to take to perform the health check.",
                                  "enum": [
                                    "HTTPGetAction",
                                    "TCPSocketAction",
                                    "ExecAction"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "ProbeActionType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "type"
                            },
                            "disableProbe": {
                              "description": "Indicate whether the probe is disabled.",
                              "type": "boolean",
                              "default": false
                            },
                            "initialDelaySeconds": {
                              "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                              "format": "int32",
                              "type": "integer"
                            },
                            "periodSeconds": {
                              "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "timeoutSeconds": {
                              "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "failureThreshold": {
                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "successThreshold": {
                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "startupProbe": {
                          "description": "StartupProbe indicates that the App Instance has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a App Instance's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "object",
                          "required": [
                            "disableProbe"
                          ],
                          "properties": {
                            "probeAction": {
                              "description": "The action of the probe.",
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the action to take to perform the health check.",
                                  "enum": [
                                    "HTTPGetAction",
                                    "TCPSocketAction",
                                    "ExecAction"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "ProbeActionType",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "discriminator": "type"
                            },
                            "disableProbe": {
                              "description": "Indicate whether the probe is disabled.",
                              "type": "boolean",
                              "default": false
                            },
                            "initialDelaySeconds": {
                              "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                              "format": "int32",
                              "type": "integer"
                            },
                            "periodSeconds": {
                              "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "timeoutSeconds": {
                              "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "failureThreshold": {
                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "successThreshold": {
                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the App Instance needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the App Instance are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 90 seconds.",
                          "format": "int32",
                          "type": "integer",
                          "default": 90
                        },
                        "containerProbeSettings": {
                          "description": "Container liveness and readiness probe settings",
                          "type": "object",
                          "properties": {
                            "disableProbe": {
                              "description": "Indicates whether disable the liveness and readiness probe",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Deployment",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DeploymentResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "status": {
                      "description": "Status of the Deployment",
                      "enum": [
                        "Stopped",
                        "Running"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DeploymentResourceStatus",
                        "modelAsString": true
                      }
                    },
                    "active": {
                      "description": "Indicates whether the Deployment is active",
                      "type": "boolean"
                    },
                    "instances": {
                      "description": "Collection of instances belong to the Deployment",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "Deployment instance payload",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "Failed reason of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "discoveryStatus": {
                            "description": "Discovery status of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "startTime": {
                            "description": "Start time of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "zone": {
                            "description": "Availability zone information of the deployment instance",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the Deployment resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Handles requests to list all resources in an App.",
        "operationId": "Deployments_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Version of the deployments to be listed",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "uniqueItems": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of Deployments in the App.",
            "schema": {
              "description": "Object that includes an array of App resources and a possible link for next set",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of Deployment resources",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Deployment resource payload",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the Deployment resource",
                        "x-ms-client-flatten": false,
                        "type": "object",
                        "properties": {
                          "source": {
                            "description": "Uploaded source information of the deployment.",
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "type": {
                                "description": "Type of the source uploaded",
                                "type": "string"
                              },
                              "version": {
                                "description": "Version of the source",
                                "type": "string"
                              }
                            },
                            "discriminator": "type"
                          },
                          "deploymentSettings": {
                            "description": "Deployment settings of the Deployment",
                            "type": "object",
                            "properties": {
                              "resourceRequests": {
                                "description": "The requested resource quantity for required CPU and Memory. It is recommended that using this field to represent the required CPU and Memory, the old field cpu and memoryInGB will be deprecated later.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "description": "Required CPU. 1 core can be represented by 1 or 1000m. This should be 500m or 1 for Basic tier, and {500m, 1, 2, 3, 4} for Standard tier.",
                                    "type": "string"
                                  },
                                  "memory": {
                                    "description": "Required memory. 1 GB can be represented by 1Gi or 1024Mi. This should be {512Mi, 1Gi, 2Gi} for Basic tier, and {512Mi, 1Gi, 2Gi, ..., 8Gi} for Standard tier.",
                                    "type": "string"
                                  }
                                }
                              },
                              "environmentVariables": {
                                "description": "Collection of environment variables",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "apms": {
                                "description": "Collection of ApmReferences",
                                "type": "array",
                                "x-ms-identifiers": [
                                  "resourceId"
                                ],
                                "items": {
                                  "description": "A reference to the APM",
                                  "required": [
                                    "resourceId"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "resourceId": {
                                      "description": "Resource Id of the APM",
                                      "type": "string",
                                      "format": "arm-id",
                                      "x-ms-arm-id-details": {
                                        "allowedResources": [
                                          {
                                            "type": "Microsoft.AppPlatform/Spring/apms"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "addonConfigs": {
                                "description": "Collection of addons",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object"
                                }
                              },
                              "livenessProbe": {
                                "description": "Periodic probe of App Instance liveness. App Instance will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                "type": "object",
                                "required": [
                                  "disableProbe"
                                ],
                                "properties": {
                                  "probeAction": {
                                    "description": "The action of the probe.",
                                    "required": [
                                      "type"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "description": "The type of the action to take to perform the health check.",
                                        "enum": [
                                          "HTTPGetAction",
                                          "TCPSocketAction",
                                          "ExecAction"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "name": "ProbeActionType",
                                          "modelAsString": true
                                        }
                                      }
                                    },
                                    "discriminator": "type"
                                  },
                                  "disableProbe": {
                                    "description": "Indicate whether the probe is disabled.",
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "initialDelaySeconds": {
                                    "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "failureThreshold": {
                                    "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                }
                              },
                              "readinessProbe": {
                                "description": "Periodic probe of App Instance service readiness. App Instance will be removed from service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                "type": "object",
                                "required": [
                                  "disableProbe"
                                ],
                                "properties": {
                                  "probeAction": {
                                    "description": "The action of the probe.",
                                    "required": [
                                      "type"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "description": "The type of the action to take to perform the health check.",
                                        "enum": [
                                          "HTTPGetAction",
                                          "TCPSocketAction",
                                          "ExecAction"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "name": "ProbeActionType",
                                          "modelAsString": true
                                        }
                                      }
                                    },
                                    "discriminator": "type"
                                  },
                                  "disableProbe": {
                                    "description": "Indicate whether the probe is disabled.",
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "initialDelaySeconds": {
                                    "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "failureThreshold": {
                                    "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                }
                              },
                              "startupProbe": {
                                "description": "StartupProbe indicates that the App Instance has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a App Instance's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                "type": "object",
                                "required": [
                                  "disableProbe"
                                ],
                                "properties": {
                                  "probeAction": {
                                    "description": "The action of the probe.",
                                    "required": [
                                      "type"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "description": "The type of the action to take to perform the health check.",
                                        "enum": [
                                          "HTTPGetAction",
                                          "TCPSocketAction",
                                          "ExecAction"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "name": "ProbeActionType",
                                          "modelAsString": true
                                        }
                                      }
                                    },
                                    "discriminator": "type"
                                  },
                                  "disableProbe": {
                                    "description": "Indicate whether the probe is disabled.",
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "initialDelaySeconds": {
                                    "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "failureThreshold": {
                                    "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                }
                              },
                              "terminationGracePeriodSeconds": {
                                "description": "Optional duration in seconds the App Instance needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the App Instance are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 90 seconds.",
                                "format": "int32",
                                "type": "integer",
                                "default": 90
                              },
                              "containerProbeSettings": {
                                "description": "Container liveness and readiness probe settings",
                                "type": "object",
                                "properties": {
                                  "disableProbe": {
                                    "description": "Indicates whether disable the liveness and readiness probe",
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the Deployment",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Succeeded",
                              "Failed"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "DeploymentResourceProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "status": {
                            "description": "Status of the Deployment",
                            "enum": [
                              "Stopped",
                              "Running"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "DeploymentResourceStatus",
                              "modelAsString": true
                            }
                          },
                          "active": {
                            "description": "Indicates whether the Deployment is active",
                            "type": "boolean"
                          },
                          "instances": {
                            "description": "Collection of instances belong to the Deployment",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "description": "Deployment instance payload",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the deployment instance",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the deployment instance",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "reason": {
                                  "description": "Failed reason of the deployment instance",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "discoveryStatus": {
                                  "description": "Discovery status of the deployment instance",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "startTime": {
                                  "description": "Start time of the deployment instance",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "zone": {
                                  "description": "Availability zone information of the deployment instance",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "sku": {
                        "description": "Sku of the Deployment resource",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the Sku",
                            "type": "string",
                            "default": "S0"
                          },
                          "tier": {
                            "description": "Tier of the Sku",
                            "type": "string",
                            "default": "Standard"
                          },
                          "capacity": {
                            "format": "int32",
                            "description": "Current capacity of the target resource",
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/deployments": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "List deployments for a certain service",
        "operationId": "Deployments_ListForCluster",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Version of the deployments to be listed",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "uniqueItems": false
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The expand expression to apply on the operation.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "Object that includes an array of App resources and a possible link for next set",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of Deployment resources",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Deployment resource payload",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the Deployment resource",
                        "x-ms-client-flatten": false,
                        "type": "object",
                        "properties": {
                          "source": {
                            "description": "Uploaded source information of the deployment.",
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "type": {
                                "description": "Type of the source uploaded",
                                "type": "string"
                              },
                              "version": {
                                "description": "Version of the source",
                                "type": "string"
                              }
                            },
                            "discriminator": "type"
                          },
                          "deploymentSettings": {
                            "description": "Deployment settings of the Deployment",
                            "type": "object",
                            "properties": {
                              "resourceRequests": {
                                "description": "The requested resource quantity for required CPU and Memory. It is recommended that using this field to represent the required CPU and Memory, the old field cpu and memoryInGB will be deprecated later.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "description": "Required CPU. 1 core can be represented by 1 or 1000m. This should be 500m or 1 for Basic tier, and {500m, 1, 2, 3, 4} for Standard tier.",
                                    "type": "string"
                                  },
                                  "memory": {
                                    "description": "Required memory. 1 GB can be represented by 1Gi or 1024Mi. This should be {512Mi, 1Gi, 2Gi} for Basic tier, and {512Mi, 1Gi, 2Gi, ..., 8Gi} for Standard tier.",
                                    "type": "string"
                                  }
                                }
                              },
                              "environmentVariables": {
                                "description": "Collection of environment variables",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "apms": {
                                "description": "Collection of ApmReferences",
                                "type": "array",
                                "x-ms-identifiers": [
                                  "resourceId"
                                ],
                                "items": {
                                  "description": "A reference to the APM",
                                  "required": [
                                    "resourceId"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "resourceId": {
                                      "description": "Resource Id of the APM",
                                      "type": "string",
                                      "format": "arm-id",
                                      "x-ms-arm-id-details": {
                                        "allowedResources": [
                                          {
                                            "type": "Microsoft.AppPlatform/Spring/apms"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "addonConfigs": {
                                "description": "Collection of addons",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object"
                                }
                              },
                              "livenessProbe": {
                                "description": "Periodic probe of App Instance liveness. App Instance will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                "type": "object",
                                "required": [
                                  "disableProbe"
                                ],
                                "properties": {
                                  "probeAction": {
                                    "description": "The action of the probe.",
                                    "required": [
                                      "type"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "description": "The type of the action to take to perform the health check.",
                                        "enum": [
                                          "HTTPGetAction",
                                          "TCPSocketAction",
                                          "ExecAction"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "name": "ProbeActionType",
                                          "modelAsString": true
                                        }
                                      }
                                    },
                                    "discriminator": "type"
                                  },
                                  "disableProbe": {
                                    "description": "Indicate whether the probe is disabled.",
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "initialDelaySeconds": {
                                    "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "failureThreshold": {
                                    "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                }
                              },
                              "readinessProbe": {
                                "description": "Periodic probe of App Instance service readiness. App Instance will be removed from service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                "type": "object",
                                "required": [
                                  "disableProbe"
                                ],
                                "properties": {
                                  "probeAction": {
                                    "description": "The action of the probe.",
                                    "required": [
                                      "type"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "description": "The type of the action to take to perform the health check.",
                                        "enum": [
                                          "HTTPGetAction",
                                          "TCPSocketAction",
                                          "ExecAction"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "name": "ProbeActionType",
                                          "modelAsString": true
                                        }
                                      }
                                    },
                                    "discriminator": "type"
                                  },
                                  "disableProbe": {
                                    "description": "Indicate whether the probe is disabled.",
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "initialDelaySeconds": {
                                    "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "failureThreshold": {
                                    "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                }
                              },
                              "startupProbe": {
                                "description": "StartupProbe indicates that the App Instance has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a App Instance's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                "type": "object",
                                "required": [
                                  "disableProbe"
                                ],
                                "properties": {
                                  "probeAction": {
                                    "description": "The action of the probe.",
                                    "required": [
                                      "type"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "description": "The type of the action to take to perform the health check.",
                                        "enum": [
                                          "HTTPGetAction",
                                          "TCPSocketAction",
                                          "ExecAction"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "name": "ProbeActionType",
                                          "modelAsString": true
                                        }
                                      }
                                    },
                                    "discriminator": "type"
                                  },
                                  "disableProbe": {
                                    "description": "Indicate whether the probe is disabled.",
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "initialDelaySeconds": {
                                    "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "periodSeconds": {
                                    "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "timeoutSeconds": {
                                    "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "failureThreshold": {
                                    "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "successThreshold": {
                                    "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                }
                              },
                              "terminationGracePeriodSeconds": {
                                "description": "Optional duration in seconds the App Instance needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the App Instance are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 90 seconds.",
                                "format": "int32",
                                "type": "integer",
                                "default": 90
                              },
                              "containerProbeSettings": {
                                "description": "Container liveness and readiness probe settings",
                                "type": "object",
                                "properties": {
                                  "disableProbe": {
                                    "description": "Indicates whether disable the liveness and readiness probe",
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the Deployment",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Succeeded",
                              "Failed"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "DeploymentResourceProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "status": {
                            "description": "Status of the Deployment",
                            "enum": [
                              "Stopped",
                              "Running"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "DeploymentResourceStatus",
                              "modelAsString": true
                            }
                          },
                          "active": {
                            "description": "Indicates whether the Deployment is active",
                            "type": "boolean"
                          },
                          "instances": {
                            "description": "Collection of instances belong to the Deployment",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "description": "Deployment instance payload",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the deployment instance",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the deployment instance",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "reason": {
                                  "description": "Failed reason of the deployment instance",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "discoveryStatus": {
                                  "description": "Discovery status of the deployment instance",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "startTime": {
                                  "description": "Start time of the deployment instance",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "zone": {
                                  "description": "Availability zone information of the deployment instance",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "sku": {
                        "description": "Sku of the Deployment resource",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the Sku",
                            "type": "string",
                            "default": "S0"
                          },
                          "tier": {
                            "description": "Tier of the Sku",
                            "type": "string",
                            "default": "Standard"
                          },
                          "capacity": {
                            "format": "int32",
                            "description": "Current capacity of the target resource",
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builders/{builderName}/listUsingDeployments": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "List deployments that are using the builder.",
        "operationId": "BuildServiceBuilder_ListDeployments",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "buildServiceName",
            "in": "path",
            "description": "The name of the build service resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "builderName",
            "in": "path",
            "description": "The name of the builder resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "A list of deployments resource ids.",
              "type": "object",
              "properties": {
                "deployments": {
                  "description": "A list of deployment resource ids.",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/start": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Start the deployment.",
        "operationId": "Deployments_Start",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the Deployment resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "202": {
            "description": "Accepted. The response indicates the Deployment is now starting and contains a Location header to\r\nquery the operation result."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/stop": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Stop the deployment.",
        "operationId": "Deployments_Stop",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the Deployment resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "202": {
            "description": "Accepted. The response indicates the Deployment is now stopping and contains a Location header to\r\nquery the operation result."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/restart": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Restart the deployment.",
        "operationId": "Deployments_Restart",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the Deployment resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "202": {
            "description": "Accepted. The response indicates the Deployment is now restarting and contains a Location header\r\nto query the operation result."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/enableRemoteDebugging": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Enable remote debugging.",
        "operationId": "Deployments_EnableRemoteDebugging",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the Deployment resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "remoteDebuggingPayload",
            "in": "body",
            "description": "Parameters for enable remote debugging",
            "required": false,
            "schema": {
              "description": "Remote debugging payload.",
              "type": "object",
              "properties": {
                "port": {
                  "description": "Application debugging port.",
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "description": "Remote debugging config.",
              "type": "object",
              "properties": {
                "port": {
                  "description": "Application debugging port",
                  "type": "integer",
                  "format": "int32"
                },
                "enabled": {
                  "description": "Indicate if remote debugging is enabled",
                  "type": "boolean"
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The response indicates the RemoteDebugging is now enabling and contains a Location header to query the operation result.",
            "schema": {
              "description": "Remote debugging config.",
              "type": "object",
              "properties": {
                "port": {
                  "description": "Application debugging port",
                  "type": "integer",
                  "format": "int32"
                },
                "enabled": {
                  "description": "Indicate if remote debugging is enabled",
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/disableRemoteDebugging": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Disable remote debugging.",
        "operationId": "Deployments_DisableRemoteDebugging",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the Deployment resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "description": "Remote debugging config.",
              "type": "object",
              "properties": {
                "port": {
                  "description": "Application debugging port",
                  "type": "integer",
                  "format": "int32"
                },
                "enabled": {
                  "description": "Indicate if remote debugging is enabled",
                  "type": "boolean"
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The response indicates the RemoteDebugging is now disabling and contains a Location header to query the operation result.",
            "schema": {
              "description": "Remote debugging config.",
              "type": "object",
              "properties": {
                "port": {
                  "description": "Application debugging port",
                  "type": "integer",
                  "format": "int32"
                },
                "enabled": {
                  "description": "Indicate if remote debugging is enabled",
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/getRemoteDebuggingConfig": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get remote debugging config.",
        "operationId": "Deployments_GetRemoteDebuggingConfig",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the Deployment resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "description": "Remote debugging config.",
              "type": "object",
              "properties": {
                "port": {
                  "description": "Application debugging port",
                  "type": "integer",
                  "format": "int32"
                },
                "enabled": {
                  "description": "Indicate if remote debugging is enabled",
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/getLogFileUrl": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get deployment log file URL",
        "operationId": "Deployments_GetLogFileUrl",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the Deployment resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response contains the log file URL.",
            "schema": {
              "description": "Log file URL payload",
              "required": [
                "url"
              ],
              "type": "object",
              "properties": {
                "url": {
                  "description": "URL of the log file",
                  "type": "string"
                }
              }
            }
          },
          "204": {
            "description": "Success. The deployment does not have log file."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/generateHeapDump": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Generate Heap Dump",
        "operationId": "Deployments_GenerateHeapDump",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the Deployment resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "diagnosticParameters",
            "in": "body",
            "description": "Parameters for the diagnostic operation",
            "required": true,
            "schema": {
              "description": "Diagnostic parameters of diagnostic operations",
              "type": "object",
              "properties": {
                "appInstance": {
                  "description": "App instance name",
                  "type": "string"
                },
                "filePath": {
                  "description": "Your target file path in your own BYOS",
                  "type": "string"
                },
                "duration": {
                  "description": "Duration of your JFR. 1 min can be represented by 1m or 60s.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. A heap dump was generated."
          },
          "202": {
            "description": "Accepted. The response indicates a heap dump is generating."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/generateThreadDump": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Generate Thread Dump",
        "operationId": "Deployments_GenerateThreadDump",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the Deployment resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "diagnosticParameters",
            "in": "body",
            "description": "Parameters for the diagnostic operation",
            "required": true,
            "schema": {
              "description": "Diagnostic parameters of diagnostic operations",
              "type": "object",
              "properties": {
                "appInstance": {
                  "description": "App instance name",
                  "type": "string"
                },
                "filePath": {
                  "description": "Your target file path in your own BYOS",
                  "type": "string"
                },
                "duration": {
                  "description": "Duration of your JFR. 1 min can be represented by 1m or 60s.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. A thread dump was generated."
          },
          "202": {
            "description": "Accepted. The response indicates a thread dump is generating."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/startJFR": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Start JFR",
        "operationId": "Deployments_StartJFR",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "appName",
            "in": "path",
            "description": "The name of the App resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "The name of the Deployment resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "diagnosticParameters",
            "in": "body",
            "description": "Parameters for the diagnostic operation",
            "required": true,
            "schema": {
              "description": "Diagnostic parameters of diagnostic operations",
              "type": "object",
              "properties": {
                "appInstance": {
                  "description": "App instance name",
                  "type": "string"
                },
                "filePath": {
                  "description": "Your target file path in your own BYOS",
                  "type": "string"
                },
                "duration": {
                  "description": "Duration of your JFR. 1 min can be represented by 1m or 60s.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. A JFR generated."
          },
          "202": {
            "description": "Accepted. The response indicates a JFR is starting."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AppPlatform/Spring": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Handles requests to list all resources in a subscription.",
        "operationId": "Services_ListBySubscription",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of Services in the subscription.",
            "schema": {
              "description": "Object that includes an array of Service resources and a possible link for next set",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of Service resources",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Service resource",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "location": {
                        "description": "The GEO location of the resource.",
                        "type": "string"
                      },
                      "tags": {
                        "description": "Tags of the service which is a list of key value pairs that describe the resource.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "Properties of the Service resource",
                        "x-ms-client-flatten": false,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the Service",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Starting",
                              "Stopping",
                              "Deleting",
                              "Deleted",
                              "Succeeded",
                              "Failed",
                              "Moving",
                              "Moved",
                              "MoveFailed"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "networkProfile": {
                            "description": "Network profile of the Service",
                            "type": "object",
                            "properties": {
                              "serviceRuntimeSubnetId": {
                                "description": "Fully qualified resource Id of the subnet to host Azure Spring Apps Service Runtime",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "appSubnetId": {
                                "description": "Fully qualified resource Id of the subnet to host customer apps in Azure Spring Apps",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "serviceCidr": {
                                "description": "Azure Spring Apps service reserved CIDR",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "serviceRuntimeNetworkResourceGroup": {
                                "description": "Name of the resource group containing network resources of Azure Spring Apps Service Runtime",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "appNetworkResourceGroup": {
                                "description": "Name of the resource group containing network resources for customer apps in Azure Spring Apps",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "outboundIPs": {
                                "description": "Desired outbound IP resources for Azure Spring Apps resource.",
                                "type": "object",
                                "readOnly": true,
                                "properties": {
                                  "publicIPs": {
                                    "type": "array",
                                    "readOnly": true,
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "A list of public IP addresses."
                                  }
                                }
                              },
                              "requiredTraffics": {
                                "description": "Required inbound or outbound traffics for Azure Spring Apps resource.",
                                "type": "array",
                                "readOnly": true,
                                "items": {
                                  "description": "Required inbound or outbound traffic for Azure Spring Apps resource.",
                                  "type": "object",
                                  "properties": {
                                    "protocol": {
                                      "description": "The protocol of required traffic",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "port": {
                                      "description": "The port of required traffic",
                                      "type": "integer",
                                      "format": "int32",
                                      "readOnly": true
                                    },
                                    "ips": {
                                      "description": "The ip list of required traffic",
                                      "type": "array",
                                      "readOnly": true,
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "fqdns": {
                                      "description": "The FQDN list of required traffic",
                                      "type": "array",
                                      "readOnly": true,
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "direction": {
                                      "description": "The direction of required traffic",
                                      "type": "string",
                                      "readOnly": true,
                                      "enum": [
                                        "Inbound",
                                        "Outbound"
                                      ],
                                      "x-ms-enum": {
                                        "name": "trafficDirection",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                }
                              },
                              "ingressConfig": {
                                "description": "Ingress configuration payload for Azure Spring Apps resource.",
                                "type": "object",
                                "properties": {
                                  "readTimeoutInSeconds": {
                                    "format": "int32",
                                    "description": "Ingress read time out in seconds.",
                                    "type": "integer"
                                  }
                                }
                              },
                              "outboundType": {
                                "description": "The egress traffic type of Azure Spring Apps VNet instances.",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              }
                            }
                          },
                          "vnetAddons": {
                            "description": "Additional Service settings in vnet injection instance",
                            "type": "object",
                            "properties": {
                              "logStreamPublicEndpoint": {
                                "description": "Indicates whether the log stream in vnet injection instance could be accessed from internet.",
                                "type": "boolean",
                                "default": false
                              },
                              "dataPlanePublicEndpoint": {
                                "description": "Indicates whether the data plane components(log stream, app connect, remote debugging) in vnet injection instance could be accessed from internet.",
                                "type": "boolean",
                                "default": false
                              }
                            }
                          },
                          "version": {
                            "format": "int32",
                            "description": "Version of the Service",
                            "type": "integer",
                            "readOnly": true
                          },
                          "serviceId": {
                            "description": "ServiceInstanceEntity Id which uniquely identifies a created resource",
                            "type": "string",
                            "readOnly": true
                          },
                          "powerState": {
                            "description": "Power state of the Service",
                            "enum": [
                              "Running",
                              "Stopped"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "PowerState",
                              "modelAsString": true
                            }
                          },
                          "zoneRedundant": {
                            "type": "boolean",
                            "default": false,
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "fqdn": {
                            "description": "Fully qualified dns name of the service instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "marketplaceResource": {
                            "description": "Purchasing 3rd party product of the Service resource.",
                            "type": "object",
                            "properties": {
                              "plan": {
                                "description": "The plan id of the 3rd Party Artifact that is being procured.",
                                "type": "string"
                              },
                              "publisher": {
                                "description": "The publisher id of the 3rd Party Artifact that is being bought.",
                                "type": "string"
                              },
                              "product": {
                                "description": "The 3rd Party artifact that is being procured.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "sku": {
                        "description": "Sku of the Service resource",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the Sku",
                            "type": "string",
                            "default": "S0"
                          },
                          "tier": {
                            "description": "Tier of the Sku",
                            "type": "string",
                            "default": "Standard"
                          },
                          "capacity": {
                            "format": "int32",
                            "description": "Current capacity of the target resource",
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Handles requests to list all resources in a resource group.",
        "operationId": "Services_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of Services in the resource group.",
            "schema": {
              "description": "Object that includes an array of Service resources and a possible link for next set",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of Service resources",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Service resource",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "location": {
                        "description": "The GEO location of the resource.",
                        "type": "string"
                      },
                      "tags": {
                        "description": "Tags of the service which is a list of key value pairs that describe the resource.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "Properties of the Service resource",
                        "x-ms-client-flatten": false,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the Service",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Starting",
                              "Stopping",
                              "Deleting",
                              "Deleted",
                              "Succeeded",
                              "Failed",
                              "Moving",
                              "Moved",
                              "MoveFailed"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "networkProfile": {
                            "description": "Network profile of the Service",
                            "type": "object",
                            "properties": {
                              "serviceRuntimeSubnetId": {
                                "description": "Fully qualified resource Id of the subnet to host Azure Spring Apps Service Runtime",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "appSubnetId": {
                                "description": "Fully qualified resource Id of the subnet to host customer apps in Azure Spring Apps",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "serviceCidr": {
                                "description": "Azure Spring Apps service reserved CIDR",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "serviceRuntimeNetworkResourceGroup": {
                                "description": "Name of the resource group containing network resources of Azure Spring Apps Service Runtime",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "appNetworkResourceGroup": {
                                "description": "Name of the resource group containing network resources for customer apps in Azure Spring Apps",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "outboundIPs": {
                                "description": "Desired outbound IP resources for Azure Spring Apps resource.",
                                "type": "object",
                                "readOnly": true,
                                "properties": {
                                  "publicIPs": {
                                    "type": "array",
                                    "readOnly": true,
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "A list of public IP addresses."
                                  }
                                }
                              },
                              "requiredTraffics": {
                                "description": "Required inbound or outbound traffics for Azure Spring Apps resource.",
                                "type": "array",
                                "readOnly": true,
                                "items": {
                                  "description": "Required inbound or outbound traffic for Azure Spring Apps resource.",
                                  "type": "object",
                                  "properties": {
                                    "protocol": {
                                      "description": "The protocol of required traffic",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "port": {
                                      "description": "The port of required traffic",
                                      "type": "integer",
                                      "format": "int32",
                                      "readOnly": true
                                    },
                                    "ips": {
                                      "description": "The ip list of required traffic",
                                      "type": "array",
                                      "readOnly": true,
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "fqdns": {
                                      "description": "The FQDN list of required traffic",
                                      "type": "array",
                                      "readOnly": true,
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "direction": {
                                      "description": "The direction of required traffic",
                                      "type": "string",
                                      "readOnly": true,
                                      "enum": [
                                        "Inbound",
                                        "Outbound"
                                      ],
                                      "x-ms-enum": {
                                        "name": "trafficDirection",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                }
                              },
                              "ingressConfig": {
                                "description": "Ingress configuration payload for Azure Spring Apps resource.",
                                "type": "object",
                                "properties": {
                                  "readTimeoutInSeconds": {
                                    "format": "int32",
                                    "description": "Ingress read time out in seconds.",
                                    "type": "integer"
                                  }
                                }
                              },
                              "outboundType": {
                                "description": "The egress traffic type of Azure Spring Apps VNet instances.",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              }
                            }
                          },
                          "vnetAddons": {
                            "description": "Additional Service settings in vnet injection instance",
                            "type": "object",
                            "properties": {
                              "logStreamPublicEndpoint": {
                                "description": "Indicates whether the log stream in vnet injection instance could be accessed from internet.",
                                "type": "boolean",
                                "default": false
                              },
                              "dataPlanePublicEndpoint": {
                                "description": "Indicates whether the data plane components(log stream, app connect, remote debugging) in vnet injection instance could be accessed from internet.",
                                "type": "boolean",
                                "default": false
                              }
                            }
                          },
                          "version": {
                            "format": "int32",
                            "description": "Version of the Service",
                            "type": "integer",
                            "readOnly": true
                          },
                          "serviceId": {
                            "description": "ServiceInstanceEntity Id which uniquely identifies a created resource",
                            "type": "string",
                            "readOnly": true
                          },
                          "powerState": {
                            "description": "Power state of the Service",
                            "enum": [
                              "Running",
                              "Stopped"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "PowerState",
                              "modelAsString": true
                            }
                          },
                          "zoneRedundant": {
                            "type": "boolean",
                            "default": false,
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "fqdn": {
                            "description": "Fully qualified dns name of the service instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "marketplaceResource": {
                            "description": "Purchasing 3rd party product of the Service resource.",
                            "type": "object",
                            "properties": {
                              "plan": {
                                "description": "The plan id of the 3rd Party Artifact that is being procured.",
                                "type": "string"
                              },
                              "publisher": {
                                "description": "The publisher id of the 3rd Party Artifact that is being bought.",
                                "type": "string"
                              },
                              "product": {
                                "description": "The 3rd Party artifact that is being procured.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "sku": {
                        "description": "Sku of the Service resource",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the Sku",
                            "type": "string",
                            "default": "S0"
                          },
                          "tier": {
                            "description": "Tier of the Sku",
                            "type": "string",
                            "default": "Standard"
                          },
                          "capacity": {
                            "format": "int32",
                            "description": "Current capacity of the target resource",
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.AppPlatform/operations": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Lists all of the available REST API operations of the Microsoft.AppPlatform provider.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of operations.",
            "schema": {
              "description": "Available operations of the service",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of available operation details",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Operation detail payload",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the operation",
                        "type": "string"
                      },
                      "isDataAction": {
                        "description": "Indicates whether the operation is a data action",
                        "type": "boolean"
                      },
                      "display": {
                        "description": "Display of the operation",
                        "type": "object",
                        "properties": {
                          "provider": {
                            "description": "Resource provider of the operation",
                            "type": "string"
                          },
                          "resource": {
                            "description": "Resource of the operation",
                            "type": "string"
                          },
                          "operation": {
                            "description": "Localized friendly name for the operation",
                            "type": "string"
                          },
                          "description": {
                            "description": "Localized friendly description for the operation",
                            "type": "string"
                          }
                        }
                      },
                      "actionType": {
                        "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Internal"
                        ],
                        "x-ms-enum": {
                          "name": "ActionType",
                          "modelAsString": true
                        }
                      },
                      "origin": {
                        "description": "Origin of the operation",
                        "type": "string"
                      },
                      "properties": {
                        "description": "Properties of the operation",
                        "type": "object",
                        "properties": {
                          "serviceSpecification": {
                            "description": "Service specifications of the operation",
                            "type": "object",
                            "properties": {
                              "logSpecifications": {
                                "description": "Specifications of the Log for Azure Monitoring",
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "description": "Specifications of the Log for Azure Monitoring",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the log",
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "description": "Localized friendly display name of the log",
                                      "type": "string"
                                    },
                                    "blobDuration": {
                                      "description": "Blob duration of the log",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "metricSpecifications": {
                                "description": "Specifications of the Metrics for Azure Monitoring",
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "description": "Specifications of the Metrics for Azure Monitoring",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the metric",
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "description": "Localized friendly display name of the metric",
                                      "type": "string"
                                    },
                                    "displayDescription": {
                                      "description": "Localized friendly description of the metric",
                                      "type": "string"
                                    },
                                    "unit": {
                                      "description": "Unit that makes sense for the metric",
                                      "type": "string"
                                    },
                                    "category": {
                                      "description": "Name of the metric category that the metric belongs to. A metric can only belong to a single category.",
                                      "type": "string"
                                    },
                                    "aggregationType": {
                                      "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.",
                                      "type": "string"
                                    },
                                    "supportedAggregationTypes": {
                                      "description": "Supported aggregation types",
                                      "uniqueItems": false,
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "supportedTimeGrainTypes": {
                                      "description": "Supported time grain types",
                                      "uniqueItems": false,
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "fillGapWithZero": {
                                      "description": "Optional. If set to true, then zero will be returned for time duration where no metric is emitted/published.",
                                      "type": "boolean"
                                    },
                                    "dimensions": {
                                      "description": "Dimensions of the metric",
                                      "uniqueItems": false,
                                      "type": "array",
                                      "items": {
                                        "description": "Specifications of the Dimension of metrics",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Name of the dimension",
                                            "type": "string"
                                          },
                                          "displayName": {
                                            "description": "Localized friendly display name of the dimension",
                                            "type": "string"
                                          },
                                          "toBeExportedForShoebox": {
                                            "description": "Whether this dimension should be included for the Shoebox export scenario",
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    },
                                    "sourceMdmNamespace": {
                                      "description": "Name of the MDM namespace. Optional.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.AppPlatform/runtimeVersions": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Lists all of the available runtime versions supported by Microsoft.AppPlatform provider.",
        "operationId": "RuntimeVersions_ListRuntimeVersions",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the details of all supported deployment runtime versions.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "description": "A list of all supported runtime versions.",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Supported deployment runtime version descriptor.",
                    "type": "object",
                    "properties": {
                      "value": {
                        "description": "The raw value which could be passed to deployment CRUD operations.",
                        "enum": [
                          "Java_8",
                          "Java_11",
                          "Java_17",
                          "NetCore_31"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "SupportedRuntimeValue",
                          "modelAsString": true
                        }
                      },
                      "platform": {
                        "description": "The platform of this runtime version (possible values: \"Java\" or \".NET\").",
                        "enum": [
                          "Java",
                          ".NET Core"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "SupportedRuntimePlatform",
                          "modelAsString": true
                        }
                      },
                      "version": {
                        "description": "The detailed version (major.minor) of the platform.",
                        "type": "string"
                      }
                    },
                    "readOnly": true
                  },
                  "readOnly": true
                }
              },
              "readOnly": true
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AppPlatform/skus": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Lists all of the available skus of the Microsoft.AppPlatform provider.",
        "operationId": "Skus_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "Object that includes an array of Azure Spring Apps SKU and a possible link for next set",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resource SKU",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Describes an available Azure Spring Apps SKU.",
                    "type": "object",
                    "properties": {
                      "resourceType": {
                        "description": "Gets the type of resource the SKU applies to.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Gets the name of SKU.",
                        "type": "string"
                      },
                      "tier": {
                        "description": "Gets the tier of SKU.",
                        "type": "string"
                      },
                      "capacity": {
                        "description": "Gets the capacity of SKU.",
                        "required": [
                          "minimum"
                        ],
                        "type": "object",
                        "properties": {
                          "minimum": {
                            "format": "int32",
                            "description": "Gets or sets the minimum.",
                            "type": "integer"
                          },
                          "maximum": {
                            "format": "int32",
                            "description": "Gets or sets the maximum.",
                            "type": "integer"
                          },
                          "default": {
                            "format": "int32",
                            "description": "Gets or sets the default.",
                            "type": "integer"
                          },
                          "scaleType": {
                            "description": "Gets or sets the type of the scale.",
                            "enum": [
                              "None",
                              "Manual",
                              "Automatic"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "SkuScaleType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "locations": {
                        "description": "Gets the set of locations that the SKU is available.",
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "locationInfo": {
                        "description": "Gets a list of locations and availability zones in those locations where the SKU is available.",
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "description": "Locations and availability zones where the SKU is available",
                          "type": "object",
                          "properties": {
                            "location": {
                              "description": "Gets location of the SKU",
                              "type": "string"
                            },
                            "zones": {
                              "description": "Gets list of availability zones where the SKU is supported.",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "zoneDetails": {
                              "description": "Gets details of capabilities available to a SKU in specific zones.",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "description": "Details of capabilities available to a SKU in specific zones",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Gets the set of zones that the SKU is available in with the\r\nspecified capabilities.",
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "capabilities": {
                                    "description": "Gets a list of capabilities that are available for the SKU in the\r\nspecified list of zones.",
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Gets an invariant to describe the feature.",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "Gets an invariant if the feature is measured by quantity.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "restrictions": {
                        "description": "Gets the restrictions because of which SKU cannot be used. This is\r\nempty if there are no restrictions.",
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "description": "Restrictions where the SKU cannot be used",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "Gets the type of restrictions. Possible values include: 'Location', 'Zone'",
                              "enum": [
                                "Location",
                                "Zone"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "ResourceSkuRestrictionsType",
                                "modelAsString": true
                              }
                            },
                            "values": {
                              "description": "Gets the value of restrictions. If the restriction type is set to\r\nlocation. This would be different locations where the SKU is restricted.",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "restrictionInfo": {
                              "description": "Gets the information about the restriction where the SKU cannot be used.",
                              "type": "object",
                              "properties": {
                                "locations": {
                                  "description": "Gets locations where the SKU is restricted",
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "zones": {
                                  "description": "Gets list of availability zones where the SKU is restricted.",
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "reasonCode": {
                              "description": "Gets the reason for restriction. Possible values include: 'QuotaId', 'NotAvailableForSubscription'",
                              "enum": [
                                "QuotaId",
                                "NotAvailableForSubscription"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "ResourceSkuRestrictionsReasonCode",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/supportedServerVersions": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Lists all of the available server versions supported by Microsoft.AppPlatform provider.",
        "operationId": "Services_ListSupportedServerVersions",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the supported server versions.",
            "schema": {
              "description": "Supported server versions.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of the supported server versions.",
                  "uniqueItems": false,
                  "type": "array",
                  "x-ms-identifiers": [
                    "value"
                  ],
                  "items": {
                    "description": "Supported server version.",
                    "type": "object",
                    "properties": {
                      "value": {
                        "description": "The raw server version value which could be passed to deployment CRUD operations.",
                        "type": "string"
                      },
                      "server": {
                        "description": "The server name.",
                        "type": "string"
                      },
                      "version": {
                        "description": "The Server version.",
                        "type": "string"
                      }
                    },
                    "readOnly": true
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways/{gatewayName}": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get the Spring Cloud Gateway and its properties.",
        "operationId": "Gateways_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of Spring Cloud Gateway.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the corresponding Spring Cloud Gateway.",
            "schema": {
              "description": "Spring Cloud Gateway resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Spring Cloud Gateway properties payload",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Spring Cloud Gateway.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "GatewayProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "public": {
                      "description": "Indicates whether the Spring Cloud Gateway exposes endpoint.",
                      "type": "boolean",
                      "default": false
                    },
                    "url": {
                      "description": "URL of the Spring Cloud Gateway, exposed when 'public' is true.",
                      "type": "string",
                      "readOnly": true
                    },
                    "httpsOnly": {
                      "description": "Indicate if only https is allowed.",
                      "type": "boolean",
                      "default": false
                    },
                    "ssoProperties": {
                      "description": "Single sign-on related configuration",
                      "type": "object",
                      "properties": {
                        "scope": {
                          "description": "It defines the specific actions applications can be allowed to do on a user's behalf",
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The public identifier for the application",
                          "type": "string"
                        },
                        "clientSecret": {
                          "description": "The secret known only to the application and the authorization server",
                          "type": "string"
                        },
                        "issuerUri": {
                          "description": "The URI of Issuer Identifier",
                          "type": "string"
                        }
                      }
                    },
                    "apiMetadataProperties": {
                      "description": "API metadata property for Spring Cloud Gateway",
                      "type": "object",
                      "properties": {
                        "title": {
                          "description": "Title describing the context of the APIs available on the Gateway instance (default: `Spring Cloud Gateway for K8S`)",
                          "type": "string"
                        },
                        "description": {
                          "description": "Detailed description of the APIs available on the Gateway instance (default: `Generated OpenAPI 3 document that describes the API routes configured.`)",
                          "type": "string"
                        },
                        "documentation": {
                          "description": "Location of additional documentation for the APIs available on the Gateway instance",
                          "type": "string"
                        },
                        "version": {
                          "description": "Version of APIs available on this Gateway instance (default: `unspecified`).",
                          "type": "string"
                        },
                        "serverUrl": {
                          "description": "Base URL that API consumers will use to access APIs on the Gateway instance.",
                          "type": "string"
                        }
                      }
                    },
                    "corsProperties": {
                      "description": "Cross-Origin Resource Sharing property",
                      "type": "object",
                      "properties": {
                        "allowedOrigins": {
                          "description": "Allowed origins to make cross-site requests. The special value `*` allows all domains.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedOriginPatterns": {
                          "description": "Allowed origin patterns to make cross-site requests.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedMethods": {
                          "description": "Allowed HTTP methods on cross-site requests. The special value `*` allows all methods. If not set, `GET` and `HEAD` are allowed by default.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedHeaders": {
                          "description": "Allowed headers in cross-site requests. The special value `*` allows actual requests to send any header.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "maxAge": {
                          "format": "int32",
                          "description": "How long, in seconds, the response from a pre-flight request can be cached by clients.",
                          "type": "integer"
                        },
                        "allowCredentials": {
                          "description": "Whether user credentials are supported on cross-site requests. Valid values: `true`, `false`.",
                          "type": "boolean"
                        },
                        "exposedHeaders": {
                          "description": "HTTP response headers to expose for cross-site requests.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "clientAuth": {
                      "description": "Client-Certification Authentication.",
                      "type": "object",
                      "properties": {
                        "certificates": {
                          "description": "Collection of certificate resource Ids in Azure Spring Apps.",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "certificateVerification": {
                          "description": "Whether to enable certificate verification or not",
                          "type": "string",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "GatewayCertificateVerification",
                            "values": [
                              {
                                "description": "Enable certificate verification in Spring Cloud Gateway.",
                                "value": "Enabled"
                              },
                              {
                                "description": "Disable certificate verification in Spring Cloud Gateway.",
                                "value": "Disabled"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "apms": {
                      "description": "Collection of ApmReferences in service level",
                      "type": "array",
                      "x-ms-identifiers": [
                        "resourceId"
                      ],
                      "items": {
                        "description": "A reference to the APM",
                        "required": [
                          "resourceId"
                        ],
                        "type": "object",
                        "properties": {
                          "resourceId": {
                            "description": "Resource Id of the APM",
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.AppPlatform/Spring/apms"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "environmentVariables": {
                      "description": "Environment variables of Spring Cloud Gateway",
                      "type": "object",
                      "properties": {
                        "properties": {
                          "description": "Non-sensitive properties",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "secrets": {
                          "description": "Sensitive properties",
                          "type": "object",
                          "x-ms-secret": true,
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "resourceRequests": {
                      "description": "The requested resource quantity for required CPU and Memory.",
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "description": "Cpu allocated to each Spring Cloud Gateway instance.",
                          "type": "string",
                          "default": "1"
                        },
                        "memory": {
                          "description": "Memory allocated to each Spring Cloud Gateway instance.",
                          "type": "string",
                          "default": "2Gi"
                        }
                      }
                    },
                    "instances": {
                      "description": "Collection of instances belong to Spring Cloud Gateway.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "Collection of instances belong to the Spring Cloud Gateway",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "name": {
                            "description": "Name of the Spring Cloud Gateway instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the Spring Cloud Gateway instance",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "operatorProperties": {
                      "readOnly": true,
                      "description": "Properties of the Spring Cloud Gateway Operator.",
                      "type": "object",
                      "properties": {
                        "resourceRequests": {
                          "description": "The requested resource quantity for required CPU and Memory.",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "cpu": {
                              "description": "Cpu allocated to each Spring Cloud Gateway Operator instance.",
                              "type": "string",
                              "readOnly": true
                            },
                            "memory": {
                              "description": "Memory allocated to each Spring Cloud Gateway Operator instance.",
                              "type": "string",
                              "readOnly": true
                            },
                            "instanceCount": {
                              "format": "int32",
                              "description": "Instance count of the Spring Cloud Gateway Operator.",
                              "type": "integer",
                              "readOnly": true
                            }
                          }
                        },
                        "instances": {
                          "description": "Collection of instances belong to Spring Cloud Gateway operator.",
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "description": "Collection of instances belong to the Spring Cloud Gateway",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "name": {
                                "description": "Name of the Spring Cloud Gateway instance",
                                "type": "string",
                                "readOnly": true
                              },
                              "status": {
                                "description": "Status of the Spring Cloud Gateway instance",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the Spring Cloud Gateway resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Create the default Spring Cloud Gateway or update the existing Spring Cloud Gateway.",
        "operationId": "Gateways_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of Spring Cloud Gateway.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "gatewayResource",
            "in": "body",
            "description": "The gateway for the create or update operation",
            "required": true,
            "schema": {
              "description": "Spring Cloud Gateway resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Spring Cloud Gateway properties payload",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Spring Cloud Gateway.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "GatewayProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "public": {
                      "description": "Indicates whether the Spring Cloud Gateway exposes endpoint.",
                      "type": "boolean",
                      "default": false
                    },
                    "url": {
                      "description": "URL of the Spring Cloud Gateway, exposed when 'public' is true.",
                      "type": "string",
                      "readOnly": true
                    },
                    "httpsOnly": {
                      "description": "Indicate if only https is allowed.",
                      "type": "boolean",
                      "default": false
                    },
                    "ssoProperties": {
                      "description": "Single sign-on related configuration",
                      "type": "object",
                      "properties": {
                        "scope": {
                          "description": "It defines the specific actions applications can be allowed to do on a user's behalf",
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The public identifier for the application",
                          "type": "string"
                        },
                        "clientSecret": {
                          "description": "The secret known only to the application and the authorization server",
                          "type": "string"
                        },
                        "issuerUri": {
                          "description": "The URI of Issuer Identifier",
                          "type": "string"
                        }
                      }
                    },
                    "apiMetadataProperties": {
                      "description": "API metadata property for Spring Cloud Gateway",
                      "type": "object",
                      "properties": {
                        "title": {
                          "description": "Title describing the context of the APIs available on the Gateway instance (default: `Spring Cloud Gateway for K8S`)",
                          "type": "string"
                        },
                        "description": {
                          "description": "Detailed description of the APIs available on the Gateway instance (default: `Generated OpenAPI 3 document that describes the API routes configured.`)",
                          "type": "string"
                        },
                        "documentation": {
                          "description": "Location of additional documentation for the APIs available on the Gateway instance",
                          "type": "string"
                        },
                        "version": {
                          "description": "Version of APIs available on this Gateway instance (default: `unspecified`).",
                          "type": "string"
                        },
                        "serverUrl": {
                          "description": "Base URL that API consumers will use to access APIs on the Gateway instance.",
                          "type": "string"
                        }
                      }
                    },
                    "corsProperties": {
                      "description": "Cross-Origin Resource Sharing property",
                      "type": "object",
                      "properties": {
                        "allowedOrigins": {
                          "description": "Allowed origins to make cross-site requests. The special value `*` allows all domains.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedOriginPatterns": {
                          "description": "Allowed origin patterns to make cross-site requests.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedMethods": {
                          "description": "Allowed HTTP methods on cross-site requests. The special value `*` allows all methods. If not set, `GET` and `HEAD` are allowed by default.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedHeaders": {
                          "description": "Allowed headers in cross-site requests. The special value `*` allows actual requests to send any header.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "maxAge": {
                          "format": "int32",
                          "description": "How long, in seconds, the response from a pre-flight request can be cached by clients.",
                          "type": "integer"
                        },
                        "allowCredentials": {
                          "description": "Whether user credentials are supported on cross-site requests. Valid values: `true`, `false`.",
                          "type": "boolean"
                        },
                        "exposedHeaders": {
                          "description": "HTTP response headers to expose for cross-site requests.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "clientAuth": {
                      "description": "Client-Certification Authentication.",
                      "type": "object",
                      "properties": {
                        "certificates": {
                          "description": "Collection of certificate resource Ids in Azure Spring Apps.",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "certificateVerification": {
                          "description": "Whether to enable certificate verification or not",
                          "type": "string",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "GatewayCertificateVerification",
                            "values": [
                              {
                                "description": "Enable certificate verification in Spring Cloud Gateway.",
                                "value": "Enabled"
                              },
                              {
                                "description": "Disable certificate verification in Spring Cloud Gateway.",
                                "value": "Disabled"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "apms": {
                      "description": "Collection of ApmReferences in service level",
                      "type": "array",
                      "x-ms-identifiers": [
                        "resourceId"
                      ],
                      "items": {
                        "description": "A reference to the APM",
                        "required": [
                          "resourceId"
                        ],
                        "type": "object",
                        "properties": {
                          "resourceId": {
                            "description": "Resource Id of the APM",
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.AppPlatform/Spring/apms"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "environmentVariables": {
                      "description": "Environment variables of Spring Cloud Gateway",
                      "type": "object",
                      "properties": {
                        "properties": {
                          "description": "Non-sensitive properties",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "secrets": {
                          "description": "Sensitive properties",
                          "type": "object",
                          "x-ms-secret": true,
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "resourceRequests": {
                      "description": "The requested resource quantity for required CPU and Memory.",
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "description": "Cpu allocated to each Spring Cloud Gateway instance.",
                          "type": "string",
                          "default": "1"
                        },
                        "memory": {
                          "description": "Memory allocated to each Spring Cloud Gateway instance.",
                          "type": "string",
                          "default": "2Gi"
                        }
                      }
                    },
                    "instances": {
                      "description": "Collection of instances belong to Spring Cloud Gateway.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "Collection of instances belong to the Spring Cloud Gateway",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "name": {
                            "description": "Name of the Spring Cloud Gateway instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the Spring Cloud Gateway instance",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "operatorProperties": {
                      "readOnly": true,
                      "description": "Properties of the Spring Cloud Gateway Operator.",
                      "type": "object",
                      "properties": {
                        "resourceRequests": {
                          "description": "The requested resource quantity for required CPU and Memory.",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "cpu": {
                              "description": "Cpu allocated to each Spring Cloud Gateway Operator instance.",
                              "type": "string",
                              "readOnly": true
                            },
                            "memory": {
                              "description": "Memory allocated to each Spring Cloud Gateway Operator instance.",
                              "type": "string",
                              "readOnly": true
                            },
                            "instanceCount": {
                              "format": "int32",
                              "description": "Instance count of the Spring Cloud Gateway Operator.",
                              "type": "integer",
                              "readOnly": true
                            }
                          }
                        },
                        "instances": {
                          "description": "Collection of instances belong to Spring Cloud Gateway operator.",
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "description": "Collection of instances belong to the Spring Cloud Gateway",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "name": {
                                "description": "Name of the Spring Cloud Gateway instance",
                                "type": "string",
                                "readOnly": true
                              },
                              "status": {
                                "description": "Status of the Spring Cloud Gateway instance",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the Spring Cloud Gateway resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated Spring Cloud Gateway.",
            "schema": {
              "description": "Spring Cloud Gateway resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Spring Cloud Gateway properties payload",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Spring Cloud Gateway.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "GatewayProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "public": {
                      "description": "Indicates whether the Spring Cloud Gateway exposes endpoint.",
                      "type": "boolean",
                      "default": false
                    },
                    "url": {
                      "description": "URL of the Spring Cloud Gateway, exposed when 'public' is true.",
                      "type": "string",
                      "readOnly": true
                    },
                    "httpsOnly": {
                      "description": "Indicate if only https is allowed.",
                      "type": "boolean",
                      "default": false
                    },
                    "ssoProperties": {
                      "description": "Single sign-on related configuration",
                      "type": "object",
                      "properties": {
                        "scope": {
                          "description": "It defines the specific actions applications can be allowed to do on a user's behalf",
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The public identifier for the application",
                          "type": "string"
                        },
                        "clientSecret": {
                          "description": "The secret known only to the application and the authorization server",
                          "type": "string"
                        },
                        "issuerUri": {
                          "description": "The URI of Issuer Identifier",
                          "type": "string"
                        }
                      }
                    },
                    "apiMetadataProperties": {
                      "description": "API metadata property for Spring Cloud Gateway",
                      "type": "object",
                      "properties": {
                        "title": {
                          "description": "Title describing the context of the APIs available on the Gateway instance (default: `Spring Cloud Gateway for K8S`)",
                          "type": "string"
                        },
                        "description": {
                          "description": "Detailed description of the APIs available on the Gateway instance (default: `Generated OpenAPI 3 document that describes the API routes configured.`)",
                          "type": "string"
                        },
                        "documentation": {
                          "description": "Location of additional documentation for the APIs available on the Gateway instance",
                          "type": "string"
                        },
                        "version": {
                          "description": "Version of APIs available on this Gateway instance (default: `unspecified`).",
                          "type": "string"
                        },
                        "serverUrl": {
                          "description": "Base URL that API consumers will use to access APIs on the Gateway instance.",
                          "type": "string"
                        }
                      }
                    },
                    "corsProperties": {
                      "description": "Cross-Origin Resource Sharing property",
                      "type": "object",
                      "properties": {
                        "allowedOrigins": {
                          "description": "Allowed origins to make cross-site requests. The special value `*` allows all domains.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedOriginPatterns": {
                          "description": "Allowed origin patterns to make cross-site requests.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedMethods": {
                          "description": "Allowed HTTP methods on cross-site requests. The special value `*` allows all methods. If not set, `GET` and `HEAD` are allowed by default.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedHeaders": {
                          "description": "Allowed headers in cross-site requests. The special value `*` allows actual requests to send any header.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "maxAge": {
                          "format": "int32",
                          "description": "How long, in seconds, the response from a pre-flight request can be cached by clients.",
                          "type": "integer"
                        },
                        "allowCredentials": {
                          "description": "Whether user credentials are supported on cross-site requests. Valid values: `true`, `false`.",
                          "type": "boolean"
                        },
                        "exposedHeaders": {
                          "description": "HTTP response headers to expose for cross-site requests.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "clientAuth": {
                      "description": "Client-Certification Authentication.",
                      "type": "object",
                      "properties": {
                        "certificates": {
                          "description": "Collection of certificate resource Ids in Azure Spring Apps.",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "certificateVerification": {
                          "description": "Whether to enable certificate verification or not",
                          "type": "string",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "GatewayCertificateVerification",
                            "values": [
                              {
                                "description": "Enable certificate verification in Spring Cloud Gateway.",
                                "value": "Enabled"
                              },
                              {
                                "description": "Disable certificate verification in Spring Cloud Gateway.",
                                "value": "Disabled"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "apms": {
                      "description": "Collection of ApmReferences in service level",
                      "type": "array",
                      "x-ms-identifiers": [
                        "resourceId"
                      ],
                      "items": {
                        "description": "A reference to the APM",
                        "required": [
                          "resourceId"
                        ],
                        "type": "object",
                        "properties": {
                          "resourceId": {
                            "description": "Resource Id of the APM",
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.AppPlatform/Spring/apms"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "environmentVariables": {
                      "description": "Environment variables of Spring Cloud Gateway",
                      "type": "object",
                      "properties": {
                        "properties": {
                          "description": "Non-sensitive properties",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "secrets": {
                          "description": "Sensitive properties",
                          "type": "object",
                          "x-ms-secret": true,
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "resourceRequests": {
                      "description": "The requested resource quantity for required CPU and Memory.",
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "description": "Cpu allocated to each Spring Cloud Gateway instance.",
                          "type": "string",
                          "default": "1"
                        },
                        "memory": {
                          "description": "Memory allocated to each Spring Cloud Gateway instance.",
                          "type": "string",
                          "default": "2Gi"
                        }
                      }
                    },
                    "instances": {
                      "description": "Collection of instances belong to Spring Cloud Gateway.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "Collection of instances belong to the Spring Cloud Gateway",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "name": {
                            "description": "Name of the Spring Cloud Gateway instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the Spring Cloud Gateway instance",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "operatorProperties": {
                      "readOnly": true,
                      "description": "Properties of the Spring Cloud Gateway Operator.",
                      "type": "object",
                      "properties": {
                        "resourceRequests": {
                          "description": "The requested resource quantity for required CPU and Memory.",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "cpu": {
                              "description": "Cpu allocated to each Spring Cloud Gateway Operator instance.",
                              "type": "string",
                              "readOnly": true
                            },
                            "memory": {
                              "description": "Memory allocated to each Spring Cloud Gateway Operator instance.",
                              "type": "string",
                              "readOnly": true
                            },
                            "instanceCount": {
                              "format": "int32",
                              "description": "Instance count of the Spring Cloud Gateway Operator.",
                              "type": "integer",
                              "readOnly": true
                            }
                          }
                        },
                        "instances": {
                          "description": "Collection of instances belong to Spring Cloud Gateway operator.",
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "description": "Collection of instances belong to the Spring Cloud Gateway",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "name": {
                                "description": "Name of the Spring Cloud Gateway instance",
                                "type": "string",
                                "readOnly": true
                              },
                              "status": {
                                "description": "Status of the Spring Cloud Gateway instance",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the Spring Cloud Gateway resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created. The response describes the new created Spring Cloud Gateway and contains an Azure-AsyncOperation header to query the operation result.",
            "schema": {
              "description": "Spring Cloud Gateway resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Spring Cloud Gateway properties payload",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Spring Cloud Gateway.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "GatewayProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "public": {
                      "description": "Indicates whether the Spring Cloud Gateway exposes endpoint.",
                      "type": "boolean",
                      "default": false
                    },
                    "url": {
                      "description": "URL of the Spring Cloud Gateway, exposed when 'public' is true.",
                      "type": "string",
                      "readOnly": true
                    },
                    "httpsOnly": {
                      "description": "Indicate if only https is allowed.",
                      "type": "boolean",
                      "default": false
                    },
                    "ssoProperties": {
                      "description": "Single sign-on related configuration",
                      "type": "object",
                      "properties": {
                        "scope": {
                          "description": "It defines the specific actions applications can be allowed to do on a user's behalf",
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The public identifier for the application",
                          "type": "string"
                        },
                        "clientSecret": {
                          "description": "The secret known only to the application and the authorization server",
                          "type": "string"
                        },
                        "issuerUri": {
                          "description": "The URI of Issuer Identifier",
                          "type": "string"
                        }
                      }
                    },
                    "apiMetadataProperties": {
                      "description": "API metadata property for Spring Cloud Gateway",
                      "type": "object",
                      "properties": {
                        "title": {
                          "description": "Title describing the context of the APIs available on the Gateway instance (default: `Spring Cloud Gateway for K8S`)",
                          "type": "string"
                        },
                        "description": {
                          "description": "Detailed description of the APIs available on the Gateway instance (default: `Generated OpenAPI 3 document that describes the API routes configured.`)",
                          "type": "string"
                        },
                        "documentation": {
                          "description": "Location of additional documentation for the APIs available on the Gateway instance",
                          "type": "string"
                        },
                        "version": {
                          "description": "Version of APIs available on this Gateway instance (default: `unspecified`).",
                          "type": "string"
                        },
                        "serverUrl": {
                          "description": "Base URL that API consumers will use to access APIs on the Gateway instance.",
                          "type": "string"
                        }
                      }
                    },
                    "corsProperties": {
                      "description": "Cross-Origin Resource Sharing property",
                      "type": "object",
                      "properties": {
                        "allowedOrigins": {
                          "description": "Allowed origins to make cross-site requests. The special value `*` allows all domains.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedOriginPatterns": {
                          "description": "Allowed origin patterns to make cross-site requests.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedMethods": {
                          "description": "Allowed HTTP methods on cross-site requests. The special value `*` allows all methods. If not set, `GET` and `HEAD` are allowed by default.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedHeaders": {
                          "description": "Allowed headers in cross-site requests. The special value `*` allows actual requests to send any header.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "maxAge": {
                          "format": "int32",
                          "description": "How long, in seconds, the response from a pre-flight request can be cached by clients.",
                          "type": "integer"
                        },
                        "allowCredentials": {
                          "description": "Whether user credentials are supported on cross-site requests. Valid values: `true`, `false`.",
                          "type": "boolean"
                        },
                        "exposedHeaders": {
                          "description": "HTTP response headers to expose for cross-site requests.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "clientAuth": {
                      "description": "Client-Certification Authentication.",
                      "type": "object",
                      "properties": {
                        "certificates": {
                          "description": "Collection of certificate resource Ids in Azure Spring Apps.",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "certificateVerification": {
                          "description": "Whether to enable certificate verification or not",
                          "type": "string",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "GatewayCertificateVerification",
                            "values": [
                              {
                                "description": "Enable certificate verification in Spring Cloud Gateway.",
                                "value": "Enabled"
                              },
                              {
                                "description": "Disable certificate verification in Spring Cloud Gateway.",
                                "value": "Disabled"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "apms": {
                      "description": "Collection of ApmReferences in service level",
                      "type": "array",
                      "x-ms-identifiers": [
                        "resourceId"
                      ],
                      "items": {
                        "description": "A reference to the APM",
                        "required": [
                          "resourceId"
                        ],
                        "type": "object",
                        "properties": {
                          "resourceId": {
                            "description": "Resource Id of the APM",
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.AppPlatform/Spring/apms"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "environmentVariables": {
                      "description": "Environment variables of Spring Cloud Gateway",
                      "type": "object",
                      "properties": {
                        "properties": {
                          "description": "Non-sensitive properties",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "secrets": {
                          "description": "Sensitive properties",
                          "type": "object",
                          "x-ms-secret": true,
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "resourceRequests": {
                      "description": "The requested resource quantity for required CPU and Memory.",
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "description": "Cpu allocated to each Spring Cloud Gateway instance.",
                          "type": "string",
                          "default": "1"
                        },
                        "memory": {
                          "description": "Memory allocated to each Spring Cloud Gateway instance.",
                          "type": "string",
                          "default": "2Gi"
                        }
                      }
                    },
                    "instances": {
                      "description": "Collection of instances belong to Spring Cloud Gateway.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "Collection of instances belong to the Spring Cloud Gateway",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "name": {
                            "description": "Name of the Spring Cloud Gateway instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the Spring Cloud Gateway instance",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "operatorProperties": {
                      "readOnly": true,
                      "description": "Properties of the Spring Cloud Gateway Operator.",
                      "type": "object",
                      "properties": {
                        "resourceRequests": {
                          "description": "The requested resource quantity for required CPU and Memory.",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "cpu": {
                              "description": "Cpu allocated to each Spring Cloud Gateway Operator instance.",
                              "type": "string",
                              "readOnly": true
                            },
                            "memory": {
                              "description": "Memory allocated to each Spring Cloud Gateway Operator instance.",
                              "type": "string",
                              "readOnly": true
                            },
                            "instanceCount": {
                              "format": "int32",
                              "description": "Instance count of the Spring Cloud Gateway Operator.",
                              "type": "integer",
                              "readOnly": true
                            }
                          }
                        },
                        "instances": {
                          "description": "Collection of instances belong to Spring Cloud Gateway operator.",
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "description": "Collection of instances belong to the Spring Cloud Gateway",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "name": {
                                "description": "Name of the Spring Cloud Gateway instance",
                                "type": "string",
                                "readOnly": true
                              },
                              "status": {
                                "description": "Status of the Spring Cloud Gateway instance",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the Spring Cloud Gateway resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Disable the default Spring Cloud Gateway.",
        "operationId": "Gateways_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of Spring Cloud Gateway.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response indicates the default Spring Cloud Gateway has deleted."
          },
          "202": {
            "description": "Accepted. The response indicates the default Spring Cloud Gateway is now deleting."
          },
          "204": {
            "description": "Success. The response indicates the default Spring Cloud Gateway doesn't exist or has deleted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways/{gatewayName}/listEnvSecrets": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "List sensitive environment variables of Spring Cloud Gateway.",
        "operationId": "Gateways_ListEnvSecrets",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of Spring Cloud Gateway.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the sensitive environment variables of Spring Cloud Gateway.",
            "schema": {
              "description": "Sensitive properties for Spring Cloud Gateway",
              "type": "object",
              "x-ms-secret": true,
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways/{gatewayName}/restart": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Restart the Spring Cloud Gateway.",
        "operationId": "Gateways_Restart",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of Spring Cloud Gateway.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "202": {
            "description": "Accepted. The response indicates gateway is now restarting and contains a Location header\r\nto query the operation result.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Handles requests to list all resources in a Service.",
        "operationId": "Gateways_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of gateways in the Service.",
            "schema": {
              "description": "Object that includes an array of gateway resources and a possible link for next set",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of gateway resources",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Spring Cloud Gateway resource",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Spring Cloud Gateway properties payload",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "State of the Spring Cloud Gateway.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Succeeded",
                              "Failed",
                              "Deleting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "GatewayProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "public": {
                            "description": "Indicates whether the Spring Cloud Gateway exposes endpoint.",
                            "type": "boolean",
                            "default": false
                          },
                          "url": {
                            "description": "URL of the Spring Cloud Gateway, exposed when 'public' is true.",
                            "type": "string",
                            "readOnly": true
                          },
                          "httpsOnly": {
                            "description": "Indicate if only https is allowed.",
                            "type": "boolean",
                            "default": false
                          },
                          "ssoProperties": {
                            "description": "Single sign-on related configuration",
                            "type": "object",
                            "properties": {
                              "scope": {
                                "description": "It defines the specific actions applications can be allowed to do on a user's behalf",
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "clientId": {
                                "description": "The public identifier for the application",
                                "type": "string"
                              },
                              "clientSecret": {
                                "description": "The secret known only to the application and the authorization server",
                                "type": "string"
                              },
                              "issuerUri": {
                                "description": "The URI of Issuer Identifier",
                                "type": "string"
                              }
                            }
                          },
                          "apiMetadataProperties": {
                            "description": "API metadata property for Spring Cloud Gateway",
                            "type": "object",
                            "properties": {
                              "title": {
                                "description": "Title describing the context of the APIs available on the Gateway instance (default: `Spring Cloud Gateway for K8S`)",
                                "type": "string"
                              },
                              "description": {
                                "description": "Detailed description of the APIs available on the Gateway instance (default: `Generated OpenAPI 3 document that describes the API routes configured.`)",
                                "type": "string"
                              },
                              "documentation": {
                                "description": "Location of additional documentation for the APIs available on the Gateway instance",
                                "type": "string"
                              },
                              "version": {
                                "description": "Version of APIs available on this Gateway instance (default: `unspecified`).",
                                "type": "string"
                              },
                              "serverUrl": {
                                "description": "Base URL that API consumers will use to access APIs on the Gateway instance.",
                                "type": "string"
                              }
                            }
                          },
                          "corsProperties": {
                            "description": "Cross-Origin Resource Sharing property",
                            "type": "object",
                            "properties": {
                              "allowedOrigins": {
                                "description": "Allowed origins to make cross-site requests. The special value `*` allows all domains.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "allowedOriginPatterns": {
                                "description": "Allowed origin patterns to make cross-site requests.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "allowedMethods": {
                                "description": "Allowed HTTP methods on cross-site requests. The special value `*` allows all methods. If not set, `GET` and `HEAD` are allowed by default.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "allowedHeaders": {
                                "description": "Allowed headers in cross-site requests. The special value `*` allows actual requests to send any header.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "maxAge": {
                                "format": "int32",
                                "description": "How long, in seconds, the response from a pre-flight request can be cached by clients.",
                                "type": "integer"
                              },
                              "allowCredentials": {
                                "description": "Whether user credentials are supported on cross-site requests. Valid values: `true`, `false`.",
                                "type": "boolean"
                              },
                              "exposedHeaders": {
                                "description": "HTTP response headers to expose for cross-site requests.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "clientAuth": {
                            "description": "Client-Certification Authentication.",
                            "type": "object",
                            "properties": {
                              "certificates": {
                                "description": "Collection of certificate resource Ids in Azure Spring Apps.",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "certificateVerification": {
                                "description": "Whether to enable certificate verification or not",
                                "type": "string",
                                "default": "Disabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "GatewayCertificateVerification",
                                  "values": [
                                    {
                                      "description": "Enable certificate verification in Spring Cloud Gateway.",
                                      "value": "Enabled"
                                    },
                                    {
                                      "description": "Disable certificate verification in Spring Cloud Gateway.",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "apms": {
                            "description": "Collection of ApmReferences in service level",
                            "type": "array",
                            "x-ms-identifiers": [
                              "resourceId"
                            ],
                            "items": {
                              "description": "A reference to the APM",
                              "required": [
                                "resourceId"
                              ],
                              "type": "object",
                              "properties": {
                                "resourceId": {
                                  "description": "Resource Id of the APM",
                                  "type": "string",
                                  "format": "arm-id",
                                  "x-ms-arm-id-details": {
                                    "allowedResources": [
                                      {
                                        "type": "Microsoft.AppPlatform/Spring/apms"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "environmentVariables": {
                            "description": "Environment variables of Spring Cloud Gateway",
                            "type": "object",
                            "properties": {
                              "properties": {
                                "description": "Non-sensitive properties",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "secrets": {
                                "description": "Sensitive properties",
                                "type": "object",
                                "x-ms-secret": true,
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "resourceRequests": {
                            "description": "The requested resource quantity for required CPU and Memory.",
                            "type": "object",
                            "properties": {
                              "cpu": {
                                "description": "Cpu allocated to each Spring Cloud Gateway instance.",
                                "type": "string",
                                "default": "1"
                              },
                              "memory": {
                                "description": "Memory allocated to each Spring Cloud Gateway instance.",
                                "type": "string",
                                "default": "2Gi"
                              }
                            }
                          },
                          "instances": {
                            "description": "Collection of instances belong to Spring Cloud Gateway.",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "description": "Collection of instances belong to the Spring Cloud Gateway",
                              "type": "object",
                              "readOnly": true,
                              "properties": {
                                "name": {
                                  "description": "Name of the Spring Cloud Gateway instance",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the Spring Cloud Gateway instance",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          },
                          "operatorProperties": {
                            "readOnly": true,
                            "description": "Properties of the Spring Cloud Gateway Operator.",
                            "type": "object",
                            "properties": {
                              "resourceRequests": {
                                "description": "The requested resource quantity for required CPU and Memory.",
                                "type": "object",
                                "readOnly": true,
                                "properties": {
                                  "cpu": {
                                    "description": "Cpu allocated to each Spring Cloud Gateway Operator instance.",
                                    "type": "string",
                                    "readOnly": true
                                  },
                                  "memory": {
                                    "description": "Memory allocated to each Spring Cloud Gateway Operator instance.",
                                    "type": "string",
                                    "readOnly": true
                                  },
                                  "instanceCount": {
                                    "format": "int32",
                                    "description": "Instance count of the Spring Cloud Gateway Operator.",
                                    "type": "integer",
                                    "readOnly": true
                                  }
                                }
                              },
                              "instances": {
                                "description": "Collection of instances belong to Spring Cloud Gateway operator.",
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "description": "Collection of instances belong to the Spring Cloud Gateway",
                                  "type": "object",
                                  "readOnly": true,
                                  "properties": {
                                    "name": {
                                      "description": "Name of the Spring Cloud Gateway instance",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "status": {
                                      "description": "Status of the Spring Cloud Gateway instance",
                                      "type": "string",
                                      "readOnly": true
                                    }
                                  }
                                },
                                "readOnly": true
                              }
                            }
                          }
                        }
                      },
                      "sku": {
                        "description": "Sku of the Spring Cloud Gateway resource",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the Sku",
                            "type": "string",
                            "default": "S0"
                          },
                          "tier": {
                            "description": "Tier of the Sku",
                            "type": "string",
                            "default": "Standard"
                          },
                          "capacity": {
                            "format": "int32",
                            "description": "Current capacity of the target resource",
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways/{gatewayName}/routeConfigs/{routeConfigName}": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get the Spring Cloud Gateway route configs.",
        "operationId": "GatewayRouteConfigs_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of Spring Cloud Gateway.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "routeConfigName",
            "in": "path",
            "description": "The name of the Spring Cloud Gateway route config.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the corresponding Spring Cloud Gateway route configs.",
            "schema": {
              "description": "Spring Cloud Gateway route config resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "API route config of the Spring Cloud Gateway",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Spring Cloud Gateway route config.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "GatewayProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "appResourceId": {
                      "description": "The resource Id of the Azure Spring Apps app, required unless route defines `uri`.",
                      "type": "string"
                    },
                    "openApi": {
                      "description": "OpenAPI properties of Spring Cloud Gateway route config.",
                      "type": "object",
                      "properties": {
                        "uri": {
                          "description": "The URI of OpenAPI specification.",
                          "type": "string"
                        }
                      }
                    },
                    "protocol": {
                      "description": "Protocol of routed Azure Spring Apps applications.",
                      "enum": [
                        "HTTP",
                        "HTTPS"
                      ],
                      "default": "HTTP",
                      "type": "string",
                      "x-ms-enum": {
                        "name": "GatewayRouteConfigProtocol",
                        "modelAsString": true
                      }
                    },
                    "routes": {
                      "description": "Array of API routes, each route contains properties such as `title`, `uri`, `ssoEnabled`, `predicates`, `filters`.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "API route config of the Spring Cloud Gateway",
                        "type": "object",
                        "properties": {
                          "title": {
                            "description": "A title, will be applied to methods in the generated OpenAPI documentation.",
                            "type": "string"
                          },
                          "description": {
                            "description": "A description, will be applied to methods in the generated OpenAPI documentation.",
                            "type": "string"
                          },
                          "uri": {
                            "description": "Full uri, will override `appName`.",
                            "type": "string"
                          },
                          "ssoEnabled": {
                            "description": "Enable sso validation.",
                            "type": "boolean"
                          },
                          "tokenRelay": {
                            "description": "Pass currently-authenticated user's identity token to application service, default is 'false'",
                            "type": "boolean"
                          },
                          "predicates": {
                            "description": "A number of conditions to evaluate a route for each request. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "filters": {
                            "description": "To modify the request before sending it to the target endpoint, or the received response.",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "order": {
                            "description": "Route processing order.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "tags": {
                            "description": "Classification tags, will be applied to methods in the generated OpenAPI documentation.",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "ssoEnabled": {
                      "description": "Enable Single Sign-On in app level.",
                      "type": "boolean"
                    },
                    "predicates": {
                      "description": "A number of conditions to evaluate a route for each request in app level. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "filters": {
                      "description": "To modify the request before sending it to the target endpoint, or the received response in app level.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Create the default Spring Cloud Gateway route configs or update the existing Spring Cloud Gateway route configs.",
        "operationId": "GatewayRouteConfigs_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of Spring Cloud Gateway.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "routeConfigName",
            "in": "path",
            "description": "The name of the Spring Cloud Gateway route config.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "gatewayRouteConfigResource",
            "in": "body",
            "description": "The Spring Cloud Gateway route config for the create or update operation",
            "required": true,
            "schema": {
              "description": "Spring Cloud Gateway route config resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "API route config of the Spring Cloud Gateway",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Spring Cloud Gateway route config.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "GatewayProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "appResourceId": {
                      "description": "The resource Id of the Azure Spring Apps app, required unless route defines `uri`.",
                      "type": "string"
                    },
                    "openApi": {
                      "description": "OpenAPI properties of Spring Cloud Gateway route config.",
                      "type": "object",
                      "properties": {
                        "uri": {
                          "description": "The URI of OpenAPI specification.",
                          "type": "string"
                        }
                      }
                    },
                    "protocol": {
                      "description": "Protocol of routed Azure Spring Apps applications.",
                      "enum": [
                        "HTTP",
                        "HTTPS"
                      ],
                      "default": "HTTP",
                      "type": "string",
                      "x-ms-enum": {
                        "name": "GatewayRouteConfigProtocol",
                        "modelAsString": true
                      }
                    },
                    "routes": {
                      "description": "Array of API routes, each route contains properties such as `title`, `uri`, `ssoEnabled`, `predicates`, `filters`.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "API route config of the Spring Cloud Gateway",
                        "type": "object",
                        "properties": {
                          "title": {
                            "description": "A title, will be applied to methods in the generated OpenAPI documentation.",
                            "type": "string"
                          },
                          "description": {
                            "description": "A description, will be applied to methods in the generated OpenAPI documentation.",
                            "type": "string"
                          },
                          "uri": {
                            "description": "Full uri, will override `appName`.",
                            "type": "string"
                          },
                          "ssoEnabled": {
                            "description": "Enable sso validation.",
                            "type": "boolean"
                          },
                          "tokenRelay": {
                            "description": "Pass currently-authenticated user's identity token to application service, default is 'false'",
                            "type": "boolean"
                          },
                          "predicates": {
                            "description": "A number of conditions to evaluate a route for each request. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "filters": {
                            "description": "To modify the request before sending it to the target endpoint, or the received response.",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "order": {
                            "description": "Route processing order.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "tags": {
                            "description": "Classification tags, will be applied to methods in the generated OpenAPI documentation.",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "ssoEnabled": {
                      "description": "Enable Single Sign-On in app level.",
                      "type": "boolean"
                    },
                    "predicates": {
                      "description": "A number of conditions to evaluate a route for each request in app level. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "filters": {
                      "description": "To modify the request before sending it to the target endpoint, or the received response in app level.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated Spring Cloud Gateway route configs.",
            "schema": {
              "description": "Spring Cloud Gateway route config resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "API route config of the Spring Cloud Gateway",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Spring Cloud Gateway route config.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "GatewayProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "appResourceId": {
                      "description": "The resource Id of the Azure Spring Apps app, required unless route defines `uri`.",
                      "type": "string"
                    },
                    "openApi": {
                      "description": "OpenAPI properties of Spring Cloud Gateway route config.",
                      "type": "object",
                      "properties": {
                        "uri": {
                          "description": "The URI of OpenAPI specification.",
                          "type": "string"
                        }
                      }
                    },
                    "protocol": {
                      "description": "Protocol of routed Azure Spring Apps applications.",
                      "enum": [
                        "HTTP",
                        "HTTPS"
                      ],
                      "default": "HTTP",
                      "type": "string",
                      "x-ms-enum": {
                        "name": "GatewayRouteConfigProtocol",
                        "modelAsString": true
                      }
                    },
                    "routes": {
                      "description": "Array of API routes, each route contains properties such as `title`, `uri`, `ssoEnabled`, `predicates`, `filters`.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "API route config of the Spring Cloud Gateway",
                        "type": "object",
                        "properties": {
                          "title": {
                            "description": "A title, will be applied to methods in the generated OpenAPI documentation.",
                            "type": "string"
                          },
                          "description": {
                            "description": "A description, will be applied to methods in the generated OpenAPI documentation.",
                            "type": "string"
                          },
                          "uri": {
                            "description": "Full uri, will override `appName`.",
                            "type": "string"
                          },
                          "ssoEnabled": {
                            "description": "Enable sso validation.",
                            "type": "boolean"
                          },
                          "tokenRelay": {
                            "description": "Pass currently-authenticated user's identity token to application service, default is 'false'",
                            "type": "boolean"
                          },
                          "predicates": {
                            "description": "A number of conditions to evaluate a route for each request. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "filters": {
                            "description": "To modify the request before sending it to the target endpoint, or the received response.",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "order": {
                            "description": "Route processing order.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "tags": {
                            "description": "Classification tags, will be applied to methods in the generated OpenAPI documentation.",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "ssoEnabled": {
                      "description": "Enable Single Sign-On in app level.",
                      "type": "boolean"
                    },
                    "predicates": {
                      "description": "A number of conditions to evaluate a route for each request in app level. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "filters": {
                      "description": "To modify the request before sending it to the target endpoint, or the received response in app level.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created. The response describes the new created Spring Cloud Gateway route configs and contains an Azure-AsyncOperation header to query the operation result.",
            "schema": {
              "description": "Spring Cloud Gateway route config resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "API route config of the Spring Cloud Gateway",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the Spring Cloud Gateway route config.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "GatewayProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "appResourceId": {
                      "description": "The resource Id of the Azure Spring Apps app, required unless route defines `uri`.",
                      "type": "string"
                    },
                    "openApi": {
                      "description": "OpenAPI properties of Spring Cloud Gateway route config.",
                      "type": "object",
                      "properties": {
                        "uri": {
                          "description": "The URI of OpenAPI specification.",
                          "type": "string"
                        }
                      }
                    },
                    "protocol": {
                      "description": "Protocol of routed Azure Spring Apps applications.",
                      "enum": [
                        "HTTP",
                        "HTTPS"
                      ],
                      "default": "HTTP",
                      "type": "string",
                      "x-ms-enum": {
                        "name": "GatewayRouteConfigProtocol",
                        "modelAsString": true
                      }
                    },
                    "routes": {
                      "description": "Array of API routes, each route contains properties such as `title`, `uri`, `ssoEnabled`, `predicates`, `filters`.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "API route config of the Spring Cloud Gateway",
                        "type": "object",
                        "properties": {
                          "title": {
                            "description": "A title, will be applied to methods in the generated OpenAPI documentation.",
                            "type": "string"
                          },
                          "description": {
                            "description": "A description, will be applied to methods in the generated OpenAPI documentation.",
                            "type": "string"
                          },
                          "uri": {
                            "description": "Full uri, will override `appName`.",
                            "type": "string"
                          },
                          "ssoEnabled": {
                            "description": "Enable sso validation.",
                            "type": "boolean"
                          },
                          "tokenRelay": {
                            "description": "Pass currently-authenticated user's identity token to application service, default is 'false'",
                            "type": "boolean"
                          },
                          "predicates": {
                            "description": "A number of conditions to evaluate a route for each request. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "filters": {
                            "description": "To modify the request before sending it to the target endpoint, or the received response.",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "order": {
                            "description": "Route processing order.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "tags": {
                            "description": "Classification tags, will be applied to methods in the generated OpenAPI documentation.",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "ssoEnabled": {
                      "description": "Enable Single Sign-On in app level.",
                      "type": "boolean"
                    },
                    "predicates": {
                      "description": "A number of conditions to evaluate a route for each request in app level. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "filters": {
                      "description": "To modify the request before sending it to the target endpoint, or the received response in app level.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Delete the Spring Cloud Gateway route config.",
        "operationId": "GatewayRouteConfigs_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of Spring Cloud Gateway.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "routeConfigName",
            "in": "path",
            "description": "The name of the Spring Cloud Gateway route config.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response indicates the Spring Cloud Gateway route config has deleted."
          },
          "202": {
            "description": "Accepted. The response indicates the Spring Cloud Gateway route config is now deleting."
          },
          "204": {
            "description": "Success. The response indicates the Spring Cloud Gateway route config doesn't exist or has deleted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways/{gatewayName}/routeConfigs": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Handle requests to list all Spring Cloud Gateway route configs.",
        "operationId": "GatewayRouteConfigs_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of Spring Cloud Gateway.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of Spring Cloud Gateway route configs.",
            "schema": {
              "description": "Object that includes an array of Spring Cloud Gateway route config resources and a possible link for next set",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of Spring Cloud Gateway route config resources",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Spring Cloud Gateway route config resource",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "API route config of the Spring Cloud Gateway",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "State of the Spring Cloud Gateway route config.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Succeeded",
                              "Failed",
                              "Deleting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "GatewayProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "appResourceId": {
                            "description": "The resource Id of the Azure Spring Apps app, required unless route defines `uri`.",
                            "type": "string"
                          },
                          "openApi": {
                            "description": "OpenAPI properties of Spring Cloud Gateway route config.",
                            "type": "object",
                            "properties": {
                              "uri": {
                                "description": "The URI of OpenAPI specification.",
                                "type": "string"
                              }
                            }
                          },
                          "protocol": {
                            "description": "Protocol of routed Azure Spring Apps applications.",
                            "enum": [
                              "HTTP",
                              "HTTPS"
                            ],
                            "default": "HTTP",
                            "type": "string",
                            "x-ms-enum": {
                              "name": "GatewayRouteConfigProtocol",
                              "modelAsString": true
                            }
                          },
                          "routes": {
                            "description": "Array of API routes, each route contains properties such as `title`, `uri`, `ssoEnabled`, `predicates`, `filters`.",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "description": "API route config of the Spring Cloud Gateway",
                              "type": "object",
                              "properties": {
                                "title": {
                                  "description": "A title, will be applied to methods in the generated OpenAPI documentation.",
                                  "type": "string"
                                },
                                "description": {
                                  "description": "A description, will be applied to methods in the generated OpenAPI documentation.",
                                  "type": "string"
                                },
                                "uri": {
                                  "description": "Full uri, will override `appName`.",
                                  "type": "string"
                                },
                                "ssoEnabled": {
                                  "description": "Enable sso validation.",
                                  "type": "boolean"
                                },
                                "tokenRelay": {
                                  "description": "Pass currently-authenticated user's identity token to application service, default is 'false'",
                                  "type": "boolean"
                                },
                                "predicates": {
                                  "description": "A number of conditions to evaluate a route for each request. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.",
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "filters": {
                                  "description": "To modify the request before sending it to the target endpoint, or the received response.",
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "order": {
                                  "description": "Route processing order.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "tags": {
                                  "description": "Classification tags, will be applied to methods in the generated OpenAPI documentation.",
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "ssoEnabled": {
                            "description": "Enable Single Sign-On in app level.",
                            "type": "boolean"
                          },
                          "predicates": {
                            "description": "A number of conditions to evaluate a route for each request in app level. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "filters": {
                            "description": "To modify the request before sending it to the target endpoint, or the received response in app level.",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways/{gatewayName}/domains/{domainName}": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get the Spring Cloud Gateway custom domain.",
        "operationId": "GatewayCustomDomains_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of Spring Cloud Gateway.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "The name of the Spring Cloud Gateway custom domain.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the corresponding Spring Cloud Gateway custom domain.",
            "schema": {
              "description": "Custom domain of the Spring Cloud Gateway",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "The properties of custom domain for Spring Cloud Gateway",
                  "type": "object",
                  "properties": {
                    "thumbprint": {
                      "description": "The thumbprint of bound certificate.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Create or update the Spring Cloud Gateway custom domain.",
        "operationId": "GatewayCustomDomains_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of Spring Cloud Gateway.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "The name of the Spring Cloud Gateway custom domain.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "gatewayCustomDomainResource",
            "in": "body",
            "description": "The gateway custom domain resource for the create or update operation",
            "required": true,
            "schema": {
              "description": "Custom domain of the Spring Cloud Gateway",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "The properties of custom domain for Spring Cloud Gateway",
                  "type": "object",
                  "properties": {
                    "thumbprint": {
                      "description": "The thumbprint of bound certificate.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated Spring Cloud Gateway custom domain.",
            "schema": {
              "description": "Custom domain of the Spring Cloud Gateway",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "The properties of custom domain for Spring Cloud Gateway",
                  "type": "object",
                  "properties": {
                    "thumbprint": {
                      "description": "The thumbprint of bound certificate.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created. The response describes the new created Spring Cloud Gateway custom domain and contains an Azure-AsyncOperation header to query the operation result.",
            "schema": {
              "description": "Custom domain of the Spring Cloud Gateway",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "The properties of custom domain for Spring Cloud Gateway",
                  "type": "object",
                  "properties": {
                    "thumbprint": {
                      "description": "The thumbprint of bound certificate.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Delete the Spring Cloud Gateway custom domain.",
        "operationId": "GatewayCustomDomains_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of Spring Cloud Gateway.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "The name of the Spring Cloud Gateway custom domain.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response indicates the Spring Cloud Gateway custom domain has deleted."
          },
          "202": {
            "description": "Accepted. The response indicates the Spring Cloud Gateway custom domain is now deleting."
          },
          "204": {
            "description": "Success. The response indicates the Spring Cloud Gateway custom domain doesn't exist or has deleted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways/{gatewayName}/domains": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Handle requests to list all Spring Cloud Gateway custom domains.",
        "operationId": "GatewayCustomDomains_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of Spring Cloud Gateway.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of Spring Cloud Gateway custom domains.",
            "schema": {
              "description": "Object that includes an array of Spring Cloud Gateway custom domain resources and a possible link for next set",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of Spring Cloud Gateway custom domain resources",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Custom domain of the Spring Cloud Gateway",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "The properties of custom domain for Spring Cloud Gateway",
                        "type": "object",
                        "properties": {
                          "thumbprint": {
                            "description": "The thumbprint of bound certificate.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways/{gatewayName}/validateDomain": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Check the domains are valid as well as not in use.",
        "operationId": "Gateways_ValidateDomain",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "gatewayName",
            "in": "path",
            "description": "The name of Spring Cloud Gateway.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "validatePayload",
            "in": "body",
            "description": "Custom domain payload to be validated",
            "required": true,
            "schema": {
              "description": "Custom domain validate payload.",
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "description": "Name to be validated",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describe the name is available.",
            "schema": {
              "description": "Validation result for custom domain.",
              "type": "object",
              "properties": {
                "isValid": {
                  "description": "Indicates if domain name is valid.",
                  "type": "boolean"
                },
                "message": {
                  "description": "Message of why domain name is invalid.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apiPortals/{apiPortalName}": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get the API portal and its properties.",
        "operationId": "ApiPortals_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "apiPortalName",
            "in": "path",
            "description": "The name of API portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the corresponding API portal.",
            "schema": {
              "description": "API portal resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "API portal properties payload",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the API portal.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ApiPortalProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "public": {
                      "description": "Indicates whether the API portal exposes endpoint.",
                      "type": "boolean",
                      "default": false
                    },
                    "url": {
                      "description": "URL of the API portal, exposed when 'public' is true.",
                      "type": "string",
                      "readOnly": true
                    },
                    "httpsOnly": {
                      "description": "Indicate if only https is allowed.",
                      "type": "boolean",
                      "default": false
                    },
                    "gatewayIds": {
                      "description": "The array of resource Ids of gateway to integrate with API portal.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "sourceUrls": {
                      "description": "Collection of OpenAPI source URL locations.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "ssoProperties": {
                      "description": "Single sign-on related configuration",
                      "type": "object",
                      "properties": {
                        "scope": {
                          "description": "It defines the specific actions applications can be allowed to do on a user's behalf",
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The public identifier for the application",
                          "type": "string"
                        },
                        "clientSecret": {
                          "description": "The secret known only to the application and the authorization server",
                          "type": "string"
                        },
                        "issuerUri": {
                          "description": "The URI of Issuer Identifier",
                          "type": "string"
                        }
                      }
                    },
                    "resourceRequests": {
                      "description": "The requested resource quantity for required CPU and Memory.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "description": "Cpu allocated to each API portal instance",
                          "type": "string",
                          "readOnly": true
                        },
                        "memory": {
                          "description": "Memory allocated to each API portal instance",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "instances": {
                      "description": "Collection of instances belong to API portal.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "Collection of instances belong to the API portal",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the API portal instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the API portal instance",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "apiTryOutEnabledState": {
                      "description": "Indicates whether the API try-out feature is enabled or disabled. When enabled, users can try out the API by sending requests and viewing responses in API portal. When disabled, users cannot try out the API.",
                      "type": "string",
                      "default": "Enabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "ApiPortalApiTryOutEnabledState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the API portal resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Create the default API portal or update the existing API portal.",
        "operationId": "ApiPortals_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "apiPortalName",
            "in": "path",
            "description": "The name of API portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "apiPortalResource",
            "in": "body",
            "description": "The API portal for the create or update operation",
            "required": true,
            "schema": {
              "description": "API portal resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "API portal properties payload",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the API portal.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ApiPortalProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "public": {
                      "description": "Indicates whether the API portal exposes endpoint.",
                      "type": "boolean",
                      "default": false
                    },
                    "url": {
                      "description": "URL of the API portal, exposed when 'public' is true.",
                      "type": "string",
                      "readOnly": true
                    },
                    "httpsOnly": {
                      "description": "Indicate if only https is allowed.",
                      "type": "boolean",
                      "default": false
                    },
                    "gatewayIds": {
                      "description": "The array of resource Ids of gateway to integrate with API portal.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "sourceUrls": {
                      "description": "Collection of OpenAPI source URL locations.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "ssoProperties": {
                      "description": "Single sign-on related configuration",
                      "type": "object",
                      "properties": {
                        "scope": {
                          "description": "It defines the specific actions applications can be allowed to do on a user's behalf",
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The public identifier for the application",
                          "type": "string"
                        },
                        "clientSecret": {
                          "description": "The secret known only to the application and the authorization server",
                          "type": "string"
                        },
                        "issuerUri": {
                          "description": "The URI of Issuer Identifier",
                          "type": "string"
                        }
                      }
                    },
                    "resourceRequests": {
                      "description": "The requested resource quantity for required CPU and Memory.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "description": "Cpu allocated to each API portal instance",
                          "type": "string",
                          "readOnly": true
                        },
                        "memory": {
                          "description": "Memory allocated to each API portal instance",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "instances": {
                      "description": "Collection of instances belong to API portal.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "Collection of instances belong to the API portal",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the API portal instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the API portal instance",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "apiTryOutEnabledState": {
                      "description": "Indicates whether the API try-out feature is enabled or disabled. When enabled, users can try out the API by sending requests and viewing responses in API portal. When disabled, users cannot try out the API.",
                      "type": "string",
                      "default": "Enabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "ApiPortalApiTryOutEnabledState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the API portal resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated API portal.",
            "schema": {
              "description": "API portal resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "API portal properties payload",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the API portal.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ApiPortalProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "public": {
                      "description": "Indicates whether the API portal exposes endpoint.",
                      "type": "boolean",
                      "default": false
                    },
                    "url": {
                      "description": "URL of the API portal, exposed when 'public' is true.",
                      "type": "string",
                      "readOnly": true
                    },
                    "httpsOnly": {
                      "description": "Indicate if only https is allowed.",
                      "type": "boolean",
                      "default": false
                    },
                    "gatewayIds": {
                      "description": "The array of resource Ids of gateway to integrate with API portal.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "sourceUrls": {
                      "description": "Collection of OpenAPI source URL locations.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "ssoProperties": {
                      "description": "Single sign-on related configuration",
                      "type": "object",
                      "properties": {
                        "scope": {
                          "description": "It defines the specific actions applications can be allowed to do on a user's behalf",
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The public identifier for the application",
                          "type": "string"
                        },
                        "clientSecret": {
                          "description": "The secret known only to the application and the authorization server",
                          "type": "string"
                        },
                        "issuerUri": {
                          "description": "The URI of Issuer Identifier",
                          "type": "string"
                        }
                      }
                    },
                    "resourceRequests": {
                      "description": "The requested resource quantity for required CPU and Memory.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "description": "Cpu allocated to each API portal instance",
                          "type": "string",
                          "readOnly": true
                        },
                        "memory": {
                          "description": "Memory allocated to each API portal instance",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "instances": {
                      "description": "Collection of instances belong to API portal.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "Collection of instances belong to the API portal",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the API portal instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the API portal instance",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "apiTryOutEnabledState": {
                      "description": "Indicates whether the API try-out feature is enabled or disabled. When enabled, users can try out the API by sending requests and viewing responses in API portal. When disabled, users cannot try out the API.",
                      "type": "string",
                      "default": "Enabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "ApiPortalApiTryOutEnabledState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the API portal resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created. The response describes the new created API portal and contains an Azure-AsyncOperation header to query the operation result.",
            "schema": {
              "description": "API portal resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "API portal properties payload",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the API portal.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ApiPortalProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "public": {
                      "description": "Indicates whether the API portal exposes endpoint.",
                      "type": "boolean",
                      "default": false
                    },
                    "url": {
                      "description": "URL of the API portal, exposed when 'public' is true.",
                      "type": "string",
                      "readOnly": true
                    },
                    "httpsOnly": {
                      "description": "Indicate if only https is allowed.",
                      "type": "boolean",
                      "default": false
                    },
                    "gatewayIds": {
                      "description": "The array of resource Ids of gateway to integrate with API portal.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "sourceUrls": {
                      "description": "Collection of OpenAPI source URL locations.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "ssoProperties": {
                      "description": "Single sign-on related configuration",
                      "type": "object",
                      "properties": {
                        "scope": {
                          "description": "It defines the specific actions applications can be allowed to do on a user's behalf",
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The public identifier for the application",
                          "type": "string"
                        },
                        "clientSecret": {
                          "description": "The secret known only to the application and the authorization server",
                          "type": "string"
                        },
                        "issuerUri": {
                          "description": "The URI of Issuer Identifier",
                          "type": "string"
                        }
                      }
                    },
                    "resourceRequests": {
                      "description": "The requested resource quantity for required CPU and Memory.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "description": "Cpu allocated to each API portal instance",
                          "type": "string",
                          "readOnly": true
                        },
                        "memory": {
                          "description": "Memory allocated to each API portal instance",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "instances": {
                      "description": "Collection of instances belong to API portal.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "Collection of instances belong to the API portal",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the API portal instance",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the API portal instance",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "apiTryOutEnabledState": {
                      "description": "Indicates whether the API try-out feature is enabled or disabled. When enabled, users can try out the API by sending requests and viewing responses in API portal. When disabled, users cannot try out the API.",
                      "type": "string",
                      "default": "Enabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "ApiPortalApiTryOutEnabledState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the API portal resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Delete the default API portal.",
        "operationId": "ApiPortals_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "apiPortalName",
            "in": "path",
            "description": "The name of API portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response indicates the default API portal has deleted."
          },
          "202": {
            "description": "Accepted. The response indicates the default API portal is now deleting."
          },
          "204": {
            "description": "Success. The response indicates the default API portal doesn't exist or has deleted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apiPortals": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Handles requests to list all resources in a Service.",
        "operationId": "ApiPortals_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of API portals in the Service.",
            "schema": {
              "description": "Object that includes an array of API portal resources and a possible link for next set",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of API portal resources",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "API portal resource",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "API portal properties payload",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "State of the API portal.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Succeeded",
                              "Failed",
                              "Deleting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "ApiPortalProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "public": {
                            "description": "Indicates whether the API portal exposes endpoint.",
                            "type": "boolean",
                            "default": false
                          },
                          "url": {
                            "description": "URL of the API portal, exposed when 'public' is true.",
                            "type": "string",
                            "readOnly": true
                          },
                          "httpsOnly": {
                            "description": "Indicate if only https is allowed.",
                            "type": "boolean",
                            "default": false
                          },
                          "gatewayIds": {
                            "description": "The array of resource Ids of gateway to integrate with API portal.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "sourceUrls": {
                            "description": "Collection of OpenAPI source URL locations.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "ssoProperties": {
                            "description": "Single sign-on related configuration",
                            "type": "object",
                            "properties": {
                              "scope": {
                                "description": "It defines the specific actions applications can be allowed to do on a user's behalf",
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "clientId": {
                                "description": "The public identifier for the application",
                                "type": "string"
                              },
                              "clientSecret": {
                                "description": "The secret known only to the application and the authorization server",
                                "type": "string"
                              },
                              "issuerUri": {
                                "description": "The URI of Issuer Identifier",
                                "type": "string"
                              }
                            }
                          },
                          "resourceRequests": {
                            "description": "The requested resource quantity for required CPU and Memory.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "cpu": {
                                "description": "Cpu allocated to each API portal instance",
                                "type": "string",
                                "readOnly": true
                              },
                              "memory": {
                                "description": "Memory allocated to each API portal instance",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "instances": {
                            "description": "Collection of instances belong to API portal.",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "description": "Collection of instances belong to the API portal",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the API portal instance",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the API portal instance",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          },
                          "apiTryOutEnabledState": {
                            "description": "Indicates whether the API try-out feature is enabled or disabled. When enabled, users can try out the API by sending requests and viewing responses in API portal. When disabled, users cannot try out the API.",
                            "type": "string",
                            "default": "Enabled",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "ApiPortalApiTryOutEnabledState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "sku": {
                        "description": "Sku of the API portal resource",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the Sku",
                            "type": "string",
                            "default": "S0"
                          },
                          "tier": {
                            "description": "Tier of the Sku",
                            "type": "string",
                            "default": "Standard"
                          },
                          "capacity": {
                            "format": "int32",
                            "description": "Current capacity of the target resource",
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apiPortals/{apiPortalName}/domains/{domainName}": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get the API portal custom domain.",
        "operationId": "ApiPortalCustomDomains_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "apiPortalName",
            "in": "path",
            "description": "The name of API portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "The name of the API portal custom domain.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the corresponding API portal custom domain.",
            "schema": {
              "description": "Custom domain of the API portal",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "The properties of custom domain for API portal",
                  "type": "object",
                  "properties": {
                    "thumbprint": {
                      "description": "The thumbprint of bound certificate.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Create or update the API portal custom domain.",
        "operationId": "ApiPortalCustomDomains_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "apiPortalName",
            "in": "path",
            "description": "The name of API portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "The name of the API portal custom domain.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "apiPortalCustomDomainResource",
            "in": "body",
            "description": "The API portal custom domain for the create or update operation",
            "required": true,
            "schema": {
              "description": "Custom domain of the API portal",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "The properties of custom domain for API portal",
                  "type": "object",
                  "properties": {
                    "thumbprint": {
                      "description": "The thumbprint of bound certificate.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated Spring Cloud Gateway route configs.",
            "schema": {
              "description": "Custom domain of the API portal",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "The properties of custom domain for API portal",
                  "type": "object",
                  "properties": {
                    "thumbprint": {
                      "description": "The thumbprint of bound certificate.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created. The response describes the new created Spring Cloud Gateway custom domain and contains an Azure-AsyncOperation header to query the operation result.",
            "schema": {
              "description": "Custom domain of the API portal",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "The properties of custom domain for API portal",
                  "type": "object",
                  "properties": {
                    "thumbprint": {
                      "description": "The thumbprint of bound certificate.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Delete the API portal custom domain.",
        "operationId": "ApiPortalCustomDomains_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "apiPortalName",
            "in": "path",
            "description": "The name of API portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "The name of the API portal custom domain.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response indicates the API portal custom domain has deleted."
          },
          "202": {
            "description": "Accepted. The response indicates the API portal custom domain is now deleting."
          },
          "204": {
            "description": "Success. The response indicates the API portal custom domain doesn't exist or has deleted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apiPortals/{apiPortalName}/domains": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Handle requests to list all API portal custom domains.",
        "operationId": "ApiPortalCustomDomains_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "apiPortalName",
            "in": "path",
            "description": "The name of API portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of API portal custom domains.",
            "schema": {
              "description": "Object that includes an array of API portal custom domain resources and a possible link for next set",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of API portal custom domain resources",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Custom domain of the API portal",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "The properties of custom domain for API portal",
                        "type": "object",
                        "properties": {
                          "thumbprint": {
                            "description": "The thumbprint of bound certificate.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apiPortals/{apiPortalName}/validateDomain": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Check the domains are valid as well as not in use.",
        "operationId": "ApiPortals_ValidateDomain",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "apiPortalName",
            "in": "path",
            "description": "The name of API portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "validatePayload",
            "in": "body",
            "description": "Custom domain payload to be validated",
            "required": true,
            "schema": {
              "description": "Custom domain validate payload.",
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "description": "Name to be validated",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describe the name is available.",
            "schema": {
              "description": "Validation result for custom domain.",
              "type": "object",
              "properties": {
                "isValid": {
                  "description": "Indicates if domain name is valid.",
                  "type": "boolean"
                },
                "message": {
                  "description": "Message of why domain name is invalid.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/applicationAccelerators": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Handle requests to list all application accelerator.",
        "operationId": "ApplicationAccelerators_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of application accelerator.",
            "schema": {
              "description": "Object that includes an array of application accelerator resources and a possible link for next set",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of application accelerator resources",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Application accelerator resource",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Application accelerator properties payload",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "State of the application accelerator.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Succeeded",
                              "Failed",
                              "Deleting",
                              "Canceled"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "ApplicationAcceleratorProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "components": {
                            "description": "Collection of components belong to application accelerator.",
                            "uniqueItems": false,
                            "type": "array",
                            "x-ms-identifiers": [
                              "name"
                            ],
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "readOnly": true
                                },
                                "resourceRequests": {
                                  "type": "object",
                                  "properties": {
                                    "cpu": {
                                      "description": "Cpu allocated to each application accelerator component. 1 core can be represented by 1 or 1000m",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "memory": {
                                      "description": "Memory allocated to each application accelerator component. 1 GB can be represented by 1Gi or 1024Mi.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "instanceCount": {
                                      "format": "int32",
                                      "description": "Instance count of the application accelerator component.",
                                      "type": "integer",
                                      "readOnly": true
                                    }
                                  }
                                },
                                "instances": {
                                  "type": "array",
                                  "x-ms-identifiers": [
                                    "name"
                                  ],
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "description": "Name of the Application Accelerator instance.",
                                        "type": "string",
                                        "readOnly": true
                                      },
                                      "status": {
                                        "description": "Status of the Application Accelerator instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
                                        "type": "string",
                                        "readOnly": true
                                      }
                                    }
                                  },
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "sku": {
                        "description": "Sku of the application accelerator resource",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the Sku",
                            "type": "string",
                            "default": "S0"
                          },
                          "tier": {
                            "description": "Tier of the Sku",
                            "type": "string",
                            "default": "Standard"
                          },
                          "capacity": {
                            "format": "int32",
                            "description": "Current capacity of the target resource",
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/applicationAccelerators/{applicationAcceleratorName}": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get the application accelerator.",
        "operationId": "ApplicationAccelerators_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationAcceleratorName",
            "in": "path",
            "description": "The name of the application accelerator.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the corresponding application accelerator.",
            "schema": {
              "description": "Application accelerator resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Application accelerator properties payload",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the application accelerator.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting",
                        "Canceled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ApplicationAcceleratorProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "components": {
                      "description": "Collection of components belong to application accelerator.",
                      "uniqueItems": false,
                      "type": "array",
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "readOnly": true
                          },
                          "resourceRequests": {
                            "type": "object",
                            "properties": {
                              "cpu": {
                                "description": "Cpu allocated to each application accelerator component. 1 core can be represented by 1 or 1000m",
                                "type": "string",
                                "readOnly": true
                              },
                              "memory": {
                                "description": "Memory allocated to each application accelerator component. 1 GB can be represented by 1Gi or 1024Mi.",
                                "type": "string",
                                "readOnly": true
                              },
                              "instanceCount": {
                                "format": "int32",
                                "description": "Instance count of the application accelerator component.",
                                "type": "integer",
                                "readOnly": true
                              }
                            }
                          },
                          "instances": {
                            "type": "array",
                            "x-ms-identifiers": [
                              "name"
                            ],
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the Application Accelerator instance.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the Application Accelerator instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the application accelerator resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Create or update the application accelerator.",
        "operationId": "ApplicationAccelerators_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationAcceleratorName",
            "in": "path",
            "description": "The name of the application accelerator.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationAcceleratorResource",
            "in": "body",
            "description": "The application accelerator for the create or update operation",
            "required": true,
            "schema": {
              "description": "Application accelerator resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Application accelerator properties payload",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the application accelerator.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting",
                        "Canceled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ApplicationAcceleratorProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "components": {
                      "description": "Collection of components belong to application accelerator.",
                      "uniqueItems": false,
                      "type": "array",
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "readOnly": true
                          },
                          "resourceRequests": {
                            "type": "object",
                            "properties": {
                              "cpu": {
                                "description": "Cpu allocated to each application accelerator component. 1 core can be represented by 1 or 1000m",
                                "type": "string",
                                "readOnly": true
                              },
                              "memory": {
                                "description": "Memory allocated to each application accelerator component. 1 GB can be represented by 1Gi or 1024Mi.",
                                "type": "string",
                                "readOnly": true
                              },
                              "instanceCount": {
                                "format": "int32",
                                "description": "Instance count of the application accelerator component.",
                                "type": "integer",
                                "readOnly": true
                              }
                            }
                          },
                          "instances": {
                            "type": "array",
                            "x-ms-identifiers": [
                              "name"
                            ],
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the Application Accelerator instance.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the Application Accelerator instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the application accelerator resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated application accelerator.",
            "schema": {
              "description": "Application accelerator resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Application accelerator properties payload",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the application accelerator.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting",
                        "Canceled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ApplicationAcceleratorProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "components": {
                      "description": "Collection of components belong to application accelerator.",
                      "uniqueItems": false,
                      "type": "array",
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "readOnly": true
                          },
                          "resourceRequests": {
                            "type": "object",
                            "properties": {
                              "cpu": {
                                "description": "Cpu allocated to each application accelerator component. 1 core can be represented by 1 or 1000m",
                                "type": "string",
                                "readOnly": true
                              },
                              "memory": {
                                "description": "Memory allocated to each application accelerator component. 1 GB can be represented by 1Gi or 1024Mi.",
                                "type": "string",
                                "readOnly": true
                              },
                              "instanceCount": {
                                "format": "int32",
                                "description": "Instance count of the application accelerator component.",
                                "type": "integer",
                                "readOnly": true
                              }
                            }
                          },
                          "instances": {
                            "type": "array",
                            "x-ms-identifiers": [
                              "name"
                            ],
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the Application Accelerator instance.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the Application Accelerator instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the application accelerator resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created. The response describes the new created application accelerator and contains an Azure-AsyncOperation header to query the operation result.",
            "schema": {
              "description": "Application accelerator resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Application accelerator properties payload",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the application accelerator.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting",
                        "Canceled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ApplicationAcceleratorProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "components": {
                      "description": "Collection of components belong to application accelerator.",
                      "uniqueItems": false,
                      "type": "array",
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "readOnly": true
                          },
                          "resourceRequests": {
                            "type": "object",
                            "properties": {
                              "cpu": {
                                "description": "Cpu allocated to each application accelerator component. 1 core can be represented by 1 or 1000m",
                                "type": "string",
                                "readOnly": true
                              },
                              "memory": {
                                "description": "Memory allocated to each application accelerator component. 1 GB can be represented by 1Gi or 1024Mi.",
                                "type": "string",
                                "readOnly": true
                              },
                              "instanceCount": {
                                "format": "int32",
                                "description": "Instance count of the application accelerator component.",
                                "type": "integer",
                                "readOnly": true
                              }
                            }
                          },
                          "instances": {
                            "type": "array",
                            "x-ms-identifiers": [
                              "name"
                            ],
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the Application Accelerator instance.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the Application Accelerator instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the application accelerator resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Delete the application accelerator.",
        "operationId": "ApplicationAccelerators_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationAcceleratorName",
            "in": "path",
            "description": "The name of the application accelerator.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. The response indicates the application accelerator is now deleting.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Success. The response indicates the application accelerator doesn't exist or has deleted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/applicationAccelerators/{applicationAcceleratorName}/customizedAccelerators": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Handle requests to list all customized accelerators.",
        "operationId": "CustomizedAccelerators_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationAcceleratorName",
            "in": "path",
            "description": "The name of the application accelerator.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of customized accelerators.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "Customized accelerator resource",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Customized accelerator properties payload",
                        "required": [
                          "gitRepository"
                        ],
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "State of the customized accelerator.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Succeeded",
                              "Failed",
                              "Deleting",
                              "Canceled"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "CustomizedAcceleratorProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "acceleratorType": {
                            "description": "Type of the customized accelerator.",
                            "enum": [
                              "Accelerator",
                              "Fragment"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "CustomizedAcceleratorType",
                              "modelAsString": true
                            }
                          },
                          "displayName": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "iconUrl": {
                            "type": "string"
                          },
                          "acceleratorTags": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "imports": {
                            "type": "array",
                            "readOnly": true,
                            "description": "Imports references all imports that this accelerator/fragment depends upon.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "gitRepository": {
                            "required": [
                              "url",
                              "authSetting"
                            ],
                            "type": "object",
                            "properties": {
                              "url": {
                                "description": "Git repository URL for the accelerator.",
                                "type": "string"
                              },
                              "intervalInSeconds": {
                                "description": "Interval for checking for updates to Git or image repository.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "branch": {
                                "description": "Git repository branch to be used.",
                                "type": "string"
                              },
                              "commit": {
                                "description": "Git repository commit to be used.",
                                "type": "string"
                              },
                              "gitTag": {
                                "description": "Git repository tag to be used.",
                                "type": "string"
                              },
                              "authSetting": {
                                "description": "Properties of the auth setting payload.",
                                "x-ms-client-flatten": false,
                                "required": [
                                  "authType"
                                ],
                                "type": "object",
                                "properties": {
                                  "authType": {
                                    "description": "The type of the auth setting.",
                                    "type": "string",
                                    "x-ms-mutability": [
                                      "create",
                                      "read"
                                    ]
                                  }
                                },
                                "discriminator": "authType"
                              },
                              "subPath": {
                                "description": "Folder path inside the git repository to consider as the root of the accelerator or fragment.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "sku": {
                        "description": "Sku of the customized accelerator resource",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the Sku",
                            "type": "string",
                            "default": "S0"
                          },
                          "tier": {
                            "description": "Tier of the Sku",
                            "type": "string",
                            "default": "Standard"
                          },
                          "capacity": {
                            "format": "int32",
                            "description": "Current capacity of the target resource",
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/applicationAccelerators/{applicationAcceleratorName}/customizedAccelerators/{customizedAcceleratorName}": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get the customized accelerator.",
        "operationId": "CustomizedAccelerators_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationAcceleratorName",
            "in": "path",
            "description": "The name of the application accelerator.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "customizedAcceleratorName",
            "in": "path",
            "description": "The name of the customized accelerator.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the corresponding customized accelerator.",
            "schema": {
              "description": "Customized accelerator resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Customized accelerator properties payload",
                  "required": [
                    "gitRepository"
                  ],
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the customized accelerator.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting",
                        "Canceled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CustomizedAcceleratorProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "acceleratorType": {
                      "description": "Type of the customized accelerator.",
                      "enum": [
                        "Accelerator",
                        "Fragment"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "CustomizedAcceleratorType",
                        "modelAsString": true
                      }
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "iconUrl": {
                      "type": "string"
                    },
                    "acceleratorTags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "imports": {
                      "type": "array",
                      "readOnly": true,
                      "description": "Imports references all imports that this accelerator/fragment depends upon.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "gitRepository": {
                      "required": [
                        "url",
                        "authSetting"
                      ],
                      "type": "object",
                      "properties": {
                        "url": {
                          "description": "Git repository URL for the accelerator.",
                          "type": "string"
                        },
                        "intervalInSeconds": {
                          "description": "Interval for checking for updates to Git or image repository.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "branch": {
                          "description": "Git repository branch to be used.",
                          "type": "string"
                        },
                        "commit": {
                          "description": "Git repository commit to be used.",
                          "type": "string"
                        },
                        "gitTag": {
                          "description": "Git repository tag to be used.",
                          "type": "string"
                        },
                        "authSetting": {
                          "description": "Properties of the auth setting payload.",
                          "x-ms-client-flatten": false,
                          "required": [
                            "authType"
                          ],
                          "type": "object",
                          "properties": {
                            "authType": {
                              "description": "The type of the auth setting.",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "read"
                              ]
                            }
                          },
                          "discriminator": "authType"
                        },
                        "subPath": {
                          "description": "Folder path inside the git repository to consider as the root of the accelerator or fragment.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the customized accelerator resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Create or update the customized accelerator.",
        "operationId": "CustomizedAccelerators_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationAcceleratorName",
            "in": "path",
            "description": "The name of the application accelerator.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "customizedAcceleratorName",
            "in": "path",
            "description": "The name of the customized accelerator.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "customizedAcceleratorResource",
            "in": "body",
            "description": "The customized accelerator for the create or update operation",
            "required": true,
            "schema": {
              "description": "Customized accelerator resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Customized accelerator properties payload",
                  "required": [
                    "gitRepository"
                  ],
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the customized accelerator.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting",
                        "Canceled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CustomizedAcceleratorProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "acceleratorType": {
                      "description": "Type of the customized accelerator.",
                      "enum": [
                        "Accelerator",
                        "Fragment"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "CustomizedAcceleratorType",
                        "modelAsString": true
                      }
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "iconUrl": {
                      "type": "string"
                    },
                    "acceleratorTags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "imports": {
                      "type": "array",
                      "readOnly": true,
                      "description": "Imports references all imports that this accelerator/fragment depends upon.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "gitRepository": {
                      "required": [
                        "url",
                        "authSetting"
                      ],
                      "type": "object",
                      "properties": {
                        "url": {
                          "description": "Git repository URL for the accelerator.",
                          "type": "string"
                        },
                        "intervalInSeconds": {
                          "description": "Interval for checking for updates to Git or image repository.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "branch": {
                          "description": "Git repository branch to be used.",
                          "type": "string"
                        },
                        "commit": {
                          "description": "Git repository commit to be used.",
                          "type": "string"
                        },
                        "gitTag": {
                          "description": "Git repository tag to be used.",
                          "type": "string"
                        },
                        "authSetting": {
                          "description": "Properties of the auth setting payload.",
                          "x-ms-client-flatten": false,
                          "required": [
                            "authType"
                          ],
                          "type": "object",
                          "properties": {
                            "authType": {
                              "description": "The type of the auth setting.",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "read"
                              ]
                            }
                          },
                          "discriminator": "authType"
                        },
                        "subPath": {
                          "description": "Folder path inside the git repository to consider as the root of the accelerator or fragment.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the customized accelerator resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the updated customized accelerator.",
            "schema": {
              "description": "Customized accelerator resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Customized accelerator properties payload",
                  "required": [
                    "gitRepository"
                  ],
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the customized accelerator.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting",
                        "Canceled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CustomizedAcceleratorProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "acceleratorType": {
                      "description": "Type of the customized accelerator.",
                      "enum": [
                        "Accelerator",
                        "Fragment"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "CustomizedAcceleratorType",
                        "modelAsString": true
                      }
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "iconUrl": {
                      "type": "string"
                    },
                    "acceleratorTags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "imports": {
                      "type": "array",
                      "readOnly": true,
                      "description": "Imports references all imports that this accelerator/fragment depends upon.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "gitRepository": {
                      "required": [
                        "url",
                        "authSetting"
                      ],
                      "type": "object",
                      "properties": {
                        "url": {
                          "description": "Git repository URL for the accelerator.",
                          "type": "string"
                        },
                        "intervalInSeconds": {
                          "description": "Interval for checking for updates to Git or image repository.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "branch": {
                          "description": "Git repository branch to be used.",
                          "type": "string"
                        },
                        "commit": {
                          "description": "Git repository commit to be used.",
                          "type": "string"
                        },
                        "gitTag": {
                          "description": "Git repository tag to be used.",
                          "type": "string"
                        },
                        "authSetting": {
                          "description": "Properties of the auth setting payload.",
                          "x-ms-client-flatten": false,
                          "required": [
                            "authType"
                          ],
                          "type": "object",
                          "properties": {
                            "authType": {
                              "description": "The type of the auth setting.",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "read"
                              ]
                            }
                          },
                          "discriminator": "authType"
                        },
                        "subPath": {
                          "description": "Folder path inside the git repository to consider as the root of the accelerator or fragment.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the customized accelerator resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created. The response describes the new created customized accelerator and contains an Azure-AsyncOperation header to query the operation result.",
            "schema": {
              "description": "Customized accelerator resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Customized accelerator properties payload",
                  "required": [
                    "gitRepository"
                  ],
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "State of the customized accelerator.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Deleting",
                        "Canceled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CustomizedAcceleratorProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "acceleratorType": {
                      "description": "Type of the customized accelerator.",
                      "enum": [
                        "Accelerator",
                        "Fragment"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "CustomizedAcceleratorType",
                        "modelAsString": true
                      }
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "iconUrl": {
                      "type": "string"
                    },
                    "acceleratorTags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "imports": {
                      "type": "array",
                      "readOnly": true,
                      "description": "Imports references all imports that this accelerator/fragment depends upon.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "gitRepository": {
                      "required": [
                        "url",
                        "authSetting"
                      ],
                      "type": "object",
                      "properties": {
                        "url": {
                          "description": "Git repository URL for the accelerator.",
                          "type": "string"
                        },
                        "intervalInSeconds": {
                          "description": "Interval for checking for updates to Git or image repository.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "branch": {
                          "description": "Git repository branch to be used.",
                          "type": "string"
                        },
                        "commit": {
                          "description": "Git repository commit to be used.",
                          "type": "string"
                        },
                        "gitTag": {
                          "description": "Git repository tag to be used.",
                          "type": "string"
                        },
                        "authSetting": {
                          "description": "Properties of the auth setting payload.",
                          "x-ms-client-flatten": false,
                          "required": [
                            "authType"
                          ],
                          "type": "object",
                          "properties": {
                            "authType": {
                              "description": "The type of the auth setting.",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "read"
                              ]
                            }
                          },
                          "discriminator": "authType"
                        },
                        "subPath": {
                          "description": "Folder path inside the git repository to consider as the root of the accelerator or fragment.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the customized accelerator resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Delete the customized accelerator.",
        "operationId": "CustomizedAccelerators_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationAcceleratorName",
            "in": "path",
            "description": "The name of the application accelerator.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "customizedAcceleratorName",
            "in": "path",
            "description": "The name of the customized accelerator.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. The response indicates the customized accelerator is now deleting.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Success. The response indicates the customized accelerator doesn't exist or has deleted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/applicationAccelerators/{applicationAcceleratorName}/customizedAccelerators/{customizedAcceleratorName}/validate": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Check the customized accelerator are valid.",
        "operationId": "CustomizedAccelerators_Validate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationAcceleratorName",
            "in": "path",
            "description": "The name of the application accelerator.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "customizedAcceleratorName",
            "in": "path",
            "description": "The name of the customized accelerator.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "Customized accelerator properties to be validated",
            "required": true,
            "schema": {
              "description": "Customized accelerator properties payload",
              "required": [
                "gitRepository"
              ],
              "type": "object",
              "properties": {
                "provisioningState": {
                  "description": "State of the customized accelerator.",
                  "enum": [
                    "Creating",
                    "Updating",
                    "Succeeded",
                    "Failed",
                    "Deleting",
                    "Canceled"
                  ],
                  "type": "string",
                  "readOnly": true,
                  "x-ms-enum": {
                    "name": "CustomizedAcceleratorProvisioningState",
                    "modelAsString": true
                  }
                },
                "acceleratorType": {
                  "description": "Type of the customized accelerator.",
                  "enum": [
                    "Accelerator",
                    "Fragment"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "CustomizedAcceleratorType",
                    "modelAsString": true
                  }
                },
                "displayName": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "iconUrl": {
                  "type": "string"
                },
                "acceleratorTags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "imports": {
                  "type": "array",
                  "readOnly": true,
                  "description": "Imports references all imports that this accelerator/fragment depends upon.",
                  "items": {
                    "type": "string"
                  }
                },
                "gitRepository": {
                  "required": [
                    "url",
                    "authSetting"
                  ],
                  "type": "object",
                  "properties": {
                    "url": {
                      "description": "Git repository URL for the accelerator.",
                      "type": "string"
                    },
                    "intervalInSeconds": {
                      "description": "Interval for checking for updates to Git or image repository.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "branch": {
                      "description": "Git repository branch to be used.",
                      "type": "string"
                    },
                    "commit": {
                      "description": "Git repository commit to be used.",
                      "type": "string"
                    },
                    "gitTag": {
                      "description": "Git repository tag to be used.",
                      "type": "string"
                    },
                    "authSetting": {
                      "description": "Properties of the auth setting payload.",
                      "x-ms-client-flatten": false,
                      "required": [
                        "authType"
                      ],
                      "type": "object",
                      "properties": {
                        "authType": {
                          "description": "The type of the auth setting.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      },
                      "discriminator": "authType"
                    },
                    "subPath": {
                      "description": "Folder path inside the git repository to consider as the root of the accelerator or fragment.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describe the customized accelerator is valid.",
            "schema": {
              "description": "Validation result for customized accelerator properties",
              "type": "object",
              "properties": {
                "state": {
                  "type": "string",
                  "description": "State of the customized accelerator validation result",
                  "default": "Valid",
                  "enum": [
                    "Valid",
                    "Invalid"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "CustomizedAcceleratorValidateResultState",
                    "values": [
                      {
                        "description": "Customized accelerator properties are valid.",
                        "value": "Valid"
                      },
                      {
                        "description": "Customized accelerator properties are invalid.",
                        "value": "Invalid"
                      }
                    ]
                  }
                },
                "errorMessage": {
                  "description": "The detail validation results",
                  "type": "string"
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The response indicates the CustomizedAccelerator is validating.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/applicationAccelerators/{applicationAcceleratorName}/predefinedAccelerators": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Handle requests to list all predefined accelerators.",
        "operationId": "PredefinedAccelerators_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationAcceleratorName",
            "in": "path",
            "description": "The name of the application accelerator.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of predefined accelerators.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "Predefined accelerator resource",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified resource Id for the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "description": "The identity that created the resource.",
                            "type": "string"
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC).",
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "description": "The identity that last modified the resource.",
                            "type": "string"
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "lastModifiedByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "format": "date-time",
                            "description": "The timestamp of resource modification (UTC).",
                            "type": "string"
                          }
                        },
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Predefined accelerator properties payload",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the predefined accelerator.",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Succeeded",
                              "Failed",
                              "Canceled"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "PredefinedAcceleratorProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "displayName": {
                            "type": "string",
                            "readOnly": true
                          },
                          "description": {
                            "type": "string",
                            "readOnly": true
                          },
                          "iconUrl": {
                            "type": "string",
                            "readOnly": true
                          },
                          "acceleratorTags": {
                            "type": "array",
                            "readOnly": true,
                            "items": {
                              "type": "string"
                            }
                          },
                          "state": {
                            "type": "string",
                            "description": "State of the predefined accelerator.",
                            "default": "Enabled",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "PredefinedAcceleratorState",
                              "values": [
                                {
                                  "description": "Enable the predefined accelerator.",
                                  "value": "Enabled"
                                },
                                {
                                  "description": "Disable the predefined accelerator.",
                                  "value": "Disabled"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "sku": {
                        "description": "Sku of the predefined accelerator resource",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the Sku",
                            "type": "string",
                            "default": "S0"
                          },
                          "tier": {
                            "description": "Tier of the Sku",
                            "type": "string",
                            "default": "Standard"
                          },
                          "capacity": {
                            "format": "int32",
                            "description": "Current capacity of the target resource",
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/applicationAccelerators/{applicationAcceleratorName}/predefinedAccelerators/{predefinedAcceleratorName}": {
      "get": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Get the predefined accelerator.",
        "operationId": "PredefinedAccelerators_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationAcceleratorName",
            "in": "path",
            "description": "The name of the application accelerator.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "predefinedAcceleratorName",
            "in": "path",
            "description": "The name of the predefined accelerator.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the corresponding predefined accelerator.",
            "schema": {
              "description": "Predefined accelerator resource",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified resource Id for the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "description": "The identity that created the resource.",
                      "type": "string"
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC).",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "The identity that last modified the resource.",
                      "type": "string"
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "lastModifiedByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "format": "date-time",
                      "description": "The timestamp of resource modification (UTC).",
                      "type": "string"
                    }
                  },
                  "readOnly": true
                },
                "properties": {
                  "description": "Predefined accelerator properties payload",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the predefined accelerator.",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "PredefinedAcceleratorProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "readOnly": true
                    },
                    "description": {
                      "type": "string",
                      "readOnly": true
                    },
                    "iconUrl": {
                      "type": "string",
                      "readOnly": true
                    },
                    "acceleratorTags": {
                      "type": "array",
                      "readOnly": true,
                      "items": {
                        "type": "string"
                      }
                    },
                    "state": {
                      "type": "string",
                      "description": "State of the predefined accelerator.",
                      "default": "Enabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "PredefinedAcceleratorState",
                        "values": [
                          {
                            "description": "Enable the predefined accelerator.",
                            "value": "Enabled"
                          },
                          {
                            "description": "Disable the predefined accelerator.",
                            "value": "Disabled"
                          }
                        ]
                      }
                    }
                  }
                },
                "sku": {
                  "description": "Sku of the predefined accelerator resource",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Sku",
                      "type": "string",
                      "default": "S0"
                    },
                    "tier": {
                      "description": "Tier of the Sku",
                      "type": "string",
                      "default": "Standard"
                    },
                    "capacity": {
                      "format": "int32",
                      "description": "Current capacity of the target resource",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/applicationAccelerators/{applicationAcceleratorName}/predefinedAccelerators/{predefinedAcceleratorName}/disable": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Disable predefined accelerator.",
        "operationId": "PredefinedAccelerators_Disable",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationAcceleratorName",
            "in": "path",
            "description": "The name of the application accelerator.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "predefinedAcceleratorName",
            "in": "path",
            "description": "The name of the predefined accelerator.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "202": {
            "description": "Accepted. The response indicates the PredefinedAccelerator is now disabling and contains a Location header to query the operation result.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/applicationAccelerators/{applicationAcceleratorName}/predefinedAccelerators/{predefinedAcceleratorName}/enable": {
      "post": {
        "tags": [
          "AppPlatform"
        ],
        "description": "Enable predefined accelerator.",
        "operationId": "PredefinedAccelerators_Enable",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the Service resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationAcceleratorName",
            "in": "path",
            "description": "The name of the application accelerator.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "predefinedAcceleratorName",
            "in": "path",
            "description": "The name of the predefined accelerator.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "202": {
            "description": "Accepted. The response indicates the PredefinedAccelerator is now enabling and contains a Location header to query the operation result.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ServiceResource": {
      "description": "Service resource",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "location": {
          "description": "The GEO location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "Tags of the service which is a list of key value pairs that describe the resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Properties of the Service resource",
          "x-ms-client-flatten": false,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the Service",
              "enum": [
                "Creating",
                "Updating",
                "Starting",
                "Stopping",
                "Deleting",
                "Deleted",
                "Succeeded",
                "Failed",
                "Moving",
                "Moved",
                "MoveFailed"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            },
            "networkProfile": {
              "description": "Network profile of the Service",
              "type": "object",
              "properties": {
                "serviceRuntimeSubnetId": {
                  "description": "Fully qualified resource Id of the subnet to host Azure Spring Apps Service Runtime",
                  "type": "string",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "appSubnetId": {
                  "description": "Fully qualified resource Id of the subnet to host customer apps in Azure Spring Apps",
                  "type": "string",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "serviceCidr": {
                  "description": "Azure Spring Apps service reserved CIDR",
                  "type": "string",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "serviceRuntimeNetworkResourceGroup": {
                  "description": "Name of the resource group containing network resources of Azure Spring Apps Service Runtime",
                  "type": "string",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "appNetworkResourceGroup": {
                  "description": "Name of the resource group containing network resources for customer apps in Azure Spring Apps",
                  "type": "string",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "outboundIPs": {
                  "description": "Desired outbound IP resources for Azure Spring Apps resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "publicIPs": {
                      "type": "array",
                      "readOnly": true,
                      "items": {
                        "type": "string"
                      },
                      "description": "A list of public IP addresses."
                    }
                  }
                },
                "requiredTraffics": {
                  "description": "Required inbound or outbound traffics for Azure Spring Apps resource.",
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "description": "Required inbound or outbound traffic for Azure Spring Apps resource.",
                    "type": "object",
                    "properties": {
                      "protocol": {
                        "description": "The protocol of required traffic",
                        "type": "string",
                        "readOnly": true
                      },
                      "port": {
                        "description": "The port of required traffic",
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                      },
                      "ips": {
                        "description": "The ip list of required traffic",
                        "type": "array",
                        "readOnly": true,
                        "items": {
                          "type": "string"
                        }
                      },
                      "fqdns": {
                        "description": "The FQDN list of required traffic",
                        "type": "array",
                        "readOnly": true,
                        "items": {
                          "type": "string"
                        }
                      },
                      "direction": {
                        "description": "The direction of required traffic",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Inbound",
                          "Outbound"
                        ],
                        "x-ms-enum": {
                          "name": "trafficDirection",
                          "modelAsString": true
                        }
                      }
                    }
                  }
                },
                "ingressConfig": {
                  "description": "Ingress configuration payload for Azure Spring Apps resource.",
                  "type": "object",
                  "properties": {
                    "readTimeoutInSeconds": {
                      "format": "int32",
                      "description": "Ingress read time out in seconds.",
                      "type": "integer"
                    }
                  }
                },
                "outboundType": {
                  "description": "The egress traffic type of Azure Spring Apps VNet instances.",
                  "type": "string",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                }
              }
            },
            "vnetAddons": {
              "description": "Additional Service settings in vnet injection instance",
              "type": "object",
              "properties": {
                "logStreamPublicEndpoint": {
                  "description": "Indicates whether the log stream in vnet injection instance could be accessed from internet.",
                  "type": "boolean",
                  "default": false
                },
                "dataPlanePublicEndpoint": {
                  "description": "Indicates whether the data plane components(log stream, app connect, remote debugging) in vnet injection instance could be accessed from internet.",
                  "type": "boolean",
                  "default": false
                }
              }
            },
            "version": {
              "format": "int32",
              "description": "Version of the Service",
              "type": "integer",
              "readOnly": true
            },
            "serviceId": {
              "description": "ServiceInstanceEntity Id which uniquely identifies a created resource",
              "type": "string",
              "readOnly": true
            },
            "powerState": {
              "description": "Power state of the Service",
              "enum": [
                "Running",
                "Stopped"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "PowerState",
                "modelAsString": true
              }
            },
            "zoneRedundant": {
              "type": "boolean",
              "default": false,
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "fqdn": {
              "description": "Fully qualified dns name of the service instance",
              "type": "string",
              "readOnly": true
            },
            "marketplaceResource": {
              "description": "Purchasing 3rd party product of the Service resource.",
              "type": "object",
              "properties": {
                "plan": {
                  "description": "The plan id of the 3rd Party Artifact that is being procured.",
                  "type": "string"
                },
                "publisher": {
                  "description": "The publisher id of the 3rd Party Artifact that is being bought.",
                  "type": "string"
                },
                "product": {
                  "description": "The 3rd Party artifact that is being procured.",
                  "type": "string"
                }
              }
            }
          }
        },
        "sku": {
          "description": "Sku of the Service resource",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the Sku",
              "type": "string",
              "default": "S0"
            },
            "tier": {
              "description": "Tier of the Sku",
              "type": "string",
              "default": "Standard"
            },
            "capacity": {
              "format": "int32",
              "description": "Current capacity of the target resource",
              "type": "integer"
            }
          }
        }
      }
    },
    "TrackedResource": {
      "description": "The resource model definition for a ARM tracked top level resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "location": {
          "description": "The GEO location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "Tags of the service which is a list of key value pairs that describe the resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Resource": {
      "description": "The core properties of ARM resources.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "SystemData": {
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "type": "object",
      "properties": {
        "createdBy": {
          "description": "The identity that created the resource.",
          "type": "string"
        },
        "createdByType": {
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC).",
          "type": "string"
        },
        "lastModifiedBy": {
          "description": "The identity that last modified the resource.",
          "type": "string"
        },
        "lastModifiedByType": {
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "lastModifiedByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "format": "date-time",
          "description": "The timestamp of resource modification (UTC).",
          "type": "string"
        }
      },
      "readOnly": true
    },
    "ClusterResourceProperties": {
      "description": "Service properties payload",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the Service",
          "enum": [
            "Creating",
            "Updating",
            "Starting",
            "Stopping",
            "Deleting",
            "Deleted",
            "Succeeded",
            "Failed",
            "Moving",
            "Moved",
            "MoveFailed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "networkProfile": {
          "description": "Network profile of the Service",
          "type": "object",
          "properties": {
            "serviceRuntimeSubnetId": {
              "description": "Fully qualified resource Id of the subnet to host Azure Spring Apps Service Runtime",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "appSubnetId": {
              "description": "Fully qualified resource Id of the subnet to host customer apps in Azure Spring Apps",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "serviceCidr": {
              "description": "Azure Spring Apps service reserved CIDR",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "serviceRuntimeNetworkResourceGroup": {
              "description": "Name of the resource group containing network resources of Azure Spring Apps Service Runtime",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "appNetworkResourceGroup": {
              "description": "Name of the resource group containing network resources for customer apps in Azure Spring Apps",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "outboundIPs": {
              "description": "Desired outbound IP resources for Azure Spring Apps resource.",
              "type": "object",
              "readOnly": true,
              "properties": {
                "publicIPs": {
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of public IP addresses."
                }
              }
            },
            "requiredTraffics": {
              "description": "Required inbound or outbound traffics for Azure Spring Apps resource.",
              "type": "array",
              "readOnly": true,
              "items": {
                "description": "Required inbound or outbound traffic for Azure Spring Apps resource.",
                "type": "object",
                "properties": {
                  "protocol": {
                    "description": "The protocol of required traffic",
                    "type": "string",
                    "readOnly": true
                  },
                  "port": {
                    "description": "The port of required traffic",
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                  },
                  "ips": {
                    "description": "The ip list of required traffic",
                    "type": "array",
                    "readOnly": true,
                    "items": {
                      "type": "string"
                    }
                  },
                  "fqdns": {
                    "description": "The FQDN list of required traffic",
                    "type": "array",
                    "readOnly": true,
                    "items": {
                      "type": "string"
                    }
                  },
                  "direction": {
                    "description": "The direction of required traffic",
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                      "Inbound",
                      "Outbound"
                    ],
                    "x-ms-enum": {
                      "name": "trafficDirection",
                      "modelAsString": true
                    }
                  }
                }
              }
            },
            "ingressConfig": {
              "description": "Ingress configuration payload for Azure Spring Apps resource.",
              "type": "object",
              "properties": {
                "readTimeoutInSeconds": {
                  "format": "int32",
                  "description": "Ingress read time out in seconds.",
                  "type": "integer"
                }
              }
            },
            "outboundType": {
              "description": "The egress traffic type of Azure Spring Apps VNet instances.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            }
          }
        },
        "vnetAddons": {
          "description": "Additional Service settings in vnet injection instance",
          "type": "object",
          "properties": {
            "logStreamPublicEndpoint": {
              "description": "Indicates whether the log stream in vnet injection instance could be accessed from internet.",
              "type": "boolean",
              "default": false
            },
            "dataPlanePublicEndpoint": {
              "description": "Indicates whether the data plane components(log stream, app connect, remote debugging) in vnet injection instance could be accessed from internet.",
              "type": "boolean",
              "default": false
            }
          }
        },
        "version": {
          "format": "int32",
          "description": "Version of the Service",
          "type": "integer",
          "readOnly": true
        },
        "serviceId": {
          "description": "ServiceInstanceEntity Id which uniquely identifies a created resource",
          "type": "string",
          "readOnly": true
        },
        "powerState": {
          "description": "Power state of the Service",
          "enum": [
            "Running",
            "Stopped"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "PowerState",
            "modelAsString": true
          }
        },
        "zoneRedundant": {
          "type": "boolean",
          "default": false,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "fqdn": {
          "description": "Fully qualified dns name of the service instance",
          "type": "string",
          "readOnly": true
        },
        "marketplaceResource": {
          "description": "Purchasing 3rd party product of the Service resource.",
          "type": "object",
          "properties": {
            "plan": {
              "description": "The plan id of the 3rd Party Artifact that is being procured.",
              "type": "string"
            },
            "publisher": {
              "description": "The publisher id of the 3rd Party Artifact that is being bought.",
              "type": "string"
            },
            "product": {
              "description": "The 3rd Party artifact that is being procured.",
              "type": "string"
            }
          }
        }
      }
    },
    "ManagedIdentityProperties": {
      "description": "Managed identity properties retrieved from ARM request headers.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of the managed identity",
          "enum": [
            "None",
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned,UserAssigned"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ManagedIdentityType",
            "modelAsString": true
          }
        },
        "principalId": {
          "description": "Principal Id of system-assigned managed identity.",
          "type": "string"
        },
        "tenantId": {
          "description": "Tenant Id of system-assigned managed identity.",
          "type": "string"
        },
        "userAssignedIdentities": {
          "description": "Properties of user-assigned managed identities",
          "type": "object",
          "additionalProperties": {
            "description": "The details of the user-assigned managed identity assigned to an App.",
            "type": "object",
            "properties": {
              "principalId": {
                "description": "Principal Id of user-assigned managed identity.",
                "type": "string",
                "readOnly": true
              },
              "clientId": {
                "description": "Client Id of user-assigned managed identity.",
                "type": "string",
                "readOnly": true
              }
            }
          }
        }
      }
    },
    "UserAssignedManagedIdentities": {
      "description": "User-assigned managed identities in key-value map. The key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
      "type": "object",
      "additionalProperties": {
        "description": "The details of the user-assigned managed identity assigned to an App.",
        "type": "object",
        "properties": {
          "principalId": {
            "description": "Principal Id of user-assigned managed identity.",
            "type": "string",
            "readOnly": true
          },
          "clientId": {
            "description": "Client Id of user-assigned managed identity.",
            "type": "string",
            "readOnly": true
          }
        }
      }
    },
    "UserAssignedManagedIdentity": {
      "description": "The details of the user-assigned managed identity assigned to an App.",
      "type": "object",
      "properties": {
        "principalId": {
          "description": "Principal Id of user-assigned managed identity.",
          "type": "string",
          "readOnly": true
        },
        "clientId": {
          "description": "Client Id of user-assigned managed identity.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "BuildServiceCollection": {
      "description": "Object that includes an array of Build service resources and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of Build service resources",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Build service resource payload",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified resource Id for the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "lastModifiedByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource modification (UTC).",
                    "type": "string"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "Properties of the build resource",
                "x-ms-client-flatten": false,
                "type": "object",
                "properties": {
                  "containerRegistry": {
                    "description": "The resource id of the container registry used in this build service.",
                    "type": "string"
                  },
                  "kPackVersion": {
                    "description": "The installed KPack version in this build service.",
                    "type": "string",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the KPack build service",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Succeeded",
                      "Failed",
                      "Deleting"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "BuildServiceProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "resourceRequests": {
                    "description": "The runtime resource configuration of this build service.",
                    "type": "object",
                    "properties": {
                      "cpu": {
                        "description": "vCPU allocated to the entire build service node pool.",
                        "type": "string",
                        "readOnly": true
                      },
                      "memory": {
                        "description": "Memory allocated to the entire build service node pool.",
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "ContainerRegistryResourceCollection": {
      "description": "Collection compose of container registry resources list and a possible link for next page.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The container registry resources list.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Container registry resource payload.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified resource Id for the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "lastModifiedByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource modification (UTC).",
                    "type": "string"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "Properties of the container registry resource payload.",
                "x-ms-client-flatten": false,
                "type": "object",
                "required": [
                  "credentials"
                ],
                "properties": {
                  "credentials": {
                    "description": "The credentials of the container registry resource.",
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "The credential type of the container registry credentials.",
                        "type": "string"
                      }
                    },
                    "discriminator": "type"
                  },
                  "provisioningState": {
                    "description": "State of the Container Registry.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Succeeded",
                      "Failed",
                      "Deleting",
                      "Canceled"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "ContainerRegistryProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "The link to next page of storage list.",
          "type": "string"
        }
      }
    },
    "ContainerRegistryResource": {
      "description": "Container registry resource payload.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the container registry resource payload.",
          "x-ms-client-flatten": false,
          "type": "object",
          "required": [
            "credentials"
          ],
          "properties": {
            "credentials": {
              "description": "The credentials of the container registry resource.",
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "description": "The credential type of the container registry credentials.",
                  "type": "string"
                }
              },
              "discriminator": "type"
            },
            "provisioningState": {
              "description": "State of the Container Registry.",
              "enum": [
                "Creating",
                "Updating",
                "Succeeded",
                "Failed",
                "Deleting",
                "Canceled"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ContainerRegistryProvisioningState",
                "modelAsString": true
              }
            }
          }
        }
      }
    },
    "ContainerRegistryProperties": {
      "description": "Container registry resource payload.",
      "type": "object",
      "required": [
        "credentials"
      ],
      "properties": {
        "credentials": {
          "description": "The credentials of the container registry resource.",
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "description": "The credential type of the container registry credentials.",
              "type": "string"
            }
          },
          "discriminator": "type"
        },
        "provisioningState": {
          "description": "State of the Container Registry.",
          "enum": [
            "Creating",
            "Updating",
            "Succeeded",
            "Failed",
            "Deleting",
            "Canceled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ContainerRegistryProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "ContainerRegistryCredentials": {
      "description": "The credential for the container registry resource.",
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "The credential type of the container registry credentials.",
          "type": "string"
        }
      },
      "discriminator": "type"
    },
    "ContainerRegistryBasicCredentials": {
      "description": "The basic authentication properties for the container registry resource.",
      "type": "object",
      "required": [
        "type",
        "server",
        "username",
        "password"
      ],
      "allOf": [
        {
          "description": "The credential for the container registry resource.",
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "description": "The credential type of the container registry credentials.",
              "type": "string"
            }
          },
          "discriminator": "type"
        }
      ],
      "properties": {
        "server": {
          "description": "The login server of the Container Registry.",
          "type": "string"
        },
        "username": {
          "description": "The username of the Container Registry.",
          "type": "string"
        },
        "password": {
          "description": "The password of the Container Registry.",
          "type": "string",
          "x-ms-secret": true,
          "x-ms-mutability": [
            "create",
            "update"
          ]
        }
      },
      "x-ms-discriminator-value": "BasicAuth"
    },
    "ContainerRegistryValidateResult": {
      "description": "Validation result for container registry properties",
      "type": "object",
      "properties": {
        "isValid": {
          "description": "Indicate if the container registry properties are valid",
          "type": "boolean"
        },
        "message": {
          "description": "Detailed validation messages.",
          "type": "string"
        }
      }
    },
    "BuildService": {
      "description": "Build service resource payload",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the build resource",
          "x-ms-client-flatten": false,
          "type": "object",
          "properties": {
            "containerRegistry": {
              "description": "The resource id of the container registry used in this build service.",
              "type": "string"
            },
            "kPackVersion": {
              "description": "The installed KPack version in this build service.",
              "type": "string",
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state of the KPack build service",
              "enum": [
                "Creating",
                "Updating",
                "Succeeded",
                "Failed",
                "Deleting"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "BuildServiceProvisioningState",
                "modelAsString": true
              }
            },
            "resourceRequests": {
              "description": "The runtime resource configuration of this build service.",
              "type": "object",
              "properties": {
                "cpu": {
                  "description": "vCPU allocated to the entire build service node pool.",
                  "type": "string",
                  "readOnly": true
                },
                "memory": {
                  "description": "Memory allocated to the entire build service node pool.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "BuildServiceProperties": {
      "description": "Build service resource properties payload",
      "type": "object",
      "properties": {
        "containerRegistry": {
          "description": "The resource id of the container registry used in this build service.",
          "type": "string"
        },
        "kPackVersion": {
          "description": "The installed KPack version in this build service.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of the KPack build service",
          "enum": [
            "Creating",
            "Updating",
            "Succeeded",
            "Failed",
            "Deleting"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "BuildServiceProvisioningState",
            "modelAsString": true
          }
        },
        "resourceRequests": {
          "description": "The runtime resource configuration of this build service.",
          "type": "object",
          "properties": {
            "cpu": {
              "description": "vCPU allocated to the entire build service node pool.",
              "type": "string",
              "readOnly": true
            },
            "memory": {
              "description": "Memory allocated to the entire build service node pool.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "BuildCollection": {
      "description": "Object that includes an array of Build resources and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of Build resources",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Build resource payload",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified resource Id for the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "lastModifiedByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource modification (UTC).",
                    "type": "string"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "Properties of the build resource",
                "x-ms-client-flatten": false,
                "type": "object",
                "properties": {
                  "relativePath": {
                    "description": "The relative path of source code",
                    "type": "string"
                  },
                  "builder": {
                    "description": "The resource id of builder to build the source code",
                    "type": "string"
                  },
                  "agentPool": {
                    "description": "The resource id of agent pool",
                    "type": "string"
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the KPack build result",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Succeeded",
                      "Failed",
                      "Deleting"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "BuildProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "env": {
                    "description": "The environment variables for this build",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "apms": {
                    "description": "The APMs for this build",
                    "type": "array",
                    "x-ms-identifiers": [
                      "resourceId"
                    ],
                    "items": {
                      "description": "A reference to the APM",
                      "required": [
                        "resourceId"
                      ],
                      "type": "object",
                      "properties": {
                        "resourceId": {
                          "description": "Resource Id of the APM",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.AppPlatform/Spring/apms"
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "certificates": {
                    "description": "The CA Certificates for this build",
                    "type": "array",
                    "x-ms-identifiers": [
                      "resourceId"
                    ],
                    "items": {
                      "description": "A reference to the certificate",
                      "required": [
                        "resourceId"
                      ],
                      "type": "object",
                      "properties": {
                        "resourceId": {
                          "description": "Resource Id of the certificate",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.AppPlatform/Spring/certificates"
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "triggeredBuildResult": {
                    "description": " The build result triggered by this build",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "id": {
                        "description": "The unique build id of this build result",
                        "type": "string"
                      },
                      "provisioningState": {
                        "description": "The provisioning state of this build result",
                        "enum": [
                          "Queuing",
                          "Building",
                          "Succeeded",
                          "Failed",
                          "Deleting",
                          "Canceled"
                        ],
                        "type": "string",
                        "readOnly": true,
                        "x-ms-enum": {
                          "name": "TriggeredBuildResultProvisioningState",
                          "modelAsString": true
                        }
                      },
                      "image": {
                        "description": "The container image of this build result",
                        "type": "string"
                      },
                      "lastTransitionTime": {
                        "format": "date-time",
                        "description": "The last transition time of this build result",
                        "type": "string"
                      },
                      "lastTransitionReason": {
                        "description": "The last transition reason of this build result",
                        "type": "string"
                      },
                      "lastTransitionStatus": {
                        "description": "The last transition status of this build result",
                        "type": "string"
                      }
                    }
                  },
                  "resourceRequests": {
                    "description": "The customized build resource for this build",
                    "type": "object",
                    "properties": {
                      "cpu": {
                        "description": "Optional Cpu allocated to the build resource. 1 core can be represented by 1 or 1000m. \r\nThe default value is 1, this should not exceed build service agent pool cpu size.",
                        "type": "string",
                        "default": "1"
                      },
                      "memory": {
                        "description": "Optional Memory allocated to the build resource. 1 GB can be represented by 1Gi or 1024Mi. \r\nThe default value is 2Gi, this should not exceed build service agent pool memory size.",
                        "type": "string",
                        "default": "2Gi"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "Build": {
      "description": "Build resource payload",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the build resource",
          "x-ms-client-flatten": false,
          "type": "object",
          "properties": {
            "relativePath": {
              "description": "The relative path of source code",
              "type": "string"
            },
            "builder": {
              "description": "The resource id of builder to build the source code",
              "type": "string"
            },
            "agentPool": {
              "description": "The resource id of agent pool",
              "type": "string"
            },
            "provisioningState": {
              "description": "Provisioning state of the KPack build result",
              "enum": [
                "Creating",
                "Updating",
                "Succeeded",
                "Failed",
                "Deleting"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "BuildProvisioningState",
                "modelAsString": true
              }
            },
            "env": {
              "description": "The environment variables for this build",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "apms": {
              "description": "The APMs for this build",
              "type": "array",
              "x-ms-identifiers": [
                "resourceId"
              ],
              "items": {
                "description": "A reference to the APM",
                "required": [
                  "resourceId"
                ],
                "type": "object",
                "properties": {
                  "resourceId": {
                    "description": "Resource Id of the APM",
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.AppPlatform/Spring/apms"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "certificates": {
              "description": "The CA Certificates for this build",
              "type": "array",
              "x-ms-identifiers": [
                "resourceId"
              ],
              "items": {
                "description": "A reference to the certificate",
                "required": [
                  "resourceId"
                ],
                "type": "object",
                "properties": {
                  "resourceId": {
                    "description": "Resource Id of the certificate",
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.AppPlatform/Spring/certificates"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "triggeredBuildResult": {
              "description": " The build result triggered by this build",
              "type": "object",
              "readOnly": true,
              "properties": {
                "id": {
                  "description": "The unique build id of this build result",
                  "type": "string"
                },
                "provisioningState": {
                  "description": "The provisioning state of this build result",
                  "enum": [
                    "Queuing",
                    "Building",
                    "Succeeded",
                    "Failed",
                    "Deleting",
                    "Canceled"
                  ],
                  "type": "string",
                  "readOnly": true,
                  "x-ms-enum": {
                    "name": "TriggeredBuildResultProvisioningState",
                    "modelAsString": true
                  }
                },
                "image": {
                  "description": "The container image of this build result",
                  "type": "string"
                },
                "lastTransitionTime": {
                  "format": "date-time",
                  "description": "The last transition time of this build result",
                  "type": "string"
                },
                "lastTransitionReason": {
                  "description": "The last transition reason of this build result",
                  "type": "string"
                },
                "lastTransitionStatus": {
                  "description": "The last transition status of this build result",
                  "type": "string"
                }
              }
            },
            "resourceRequests": {
              "description": "The customized build resource for this build",
              "type": "object",
              "properties": {
                "cpu": {
                  "description": "Optional Cpu allocated to the build resource. 1 core can be represented by 1 or 1000m. \r\nThe default value is 1, this should not exceed build service agent pool cpu size.",
                  "type": "string",
                  "default": "1"
                },
                "memory": {
                  "description": "Optional Memory allocated to the build resource. 1 GB can be represented by 1Gi or 1024Mi. \r\nThe default value is 2Gi, this should not exceed build service agent pool memory size.",
                  "type": "string",
                  "default": "2Gi"
                }
              }
            }
          }
        }
      }
    },
    "BuildProperties": {
      "description": "Build resource properties payload",
      "type": "object",
      "properties": {
        "relativePath": {
          "description": "The relative path of source code",
          "type": "string"
        },
        "builder": {
          "description": "The resource id of builder to build the source code",
          "type": "string"
        },
        "agentPool": {
          "description": "The resource id of agent pool",
          "type": "string"
        },
        "provisioningState": {
          "description": "Provisioning state of the KPack build result",
          "enum": [
            "Creating",
            "Updating",
            "Succeeded",
            "Failed",
            "Deleting"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "BuildProvisioningState",
            "modelAsString": true
          }
        },
        "env": {
          "description": "The environment variables for this build",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "apms": {
          "description": "The APMs for this build",
          "type": "array",
          "x-ms-identifiers": [
            "resourceId"
          ],
          "items": {
            "description": "A reference to the APM",
            "required": [
              "resourceId"
            ],
            "type": "object",
            "properties": {
              "resourceId": {
                "description": "Resource Id of the APM",
                "type": "string",
                "format": "arm-id",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.AppPlatform/Spring/apms"
                    }
                  ]
                }
              }
            }
          }
        },
        "certificates": {
          "description": "The CA Certificates for this build",
          "type": "array",
          "x-ms-identifiers": [
            "resourceId"
          ],
          "items": {
            "description": "A reference to the certificate",
            "required": [
              "resourceId"
            ],
            "type": "object",
            "properties": {
              "resourceId": {
                "description": "Resource Id of the certificate",
                "type": "string",
                "format": "arm-id",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.AppPlatform/Spring/certificates"
                    }
                  ]
                }
              }
            }
          }
        },
        "triggeredBuildResult": {
          "description": " The build result triggered by this build",
          "type": "object",
          "readOnly": true,
          "properties": {
            "id": {
              "description": "The unique build id of this build result",
              "type": "string"
            },
            "provisioningState": {
              "description": "The provisioning state of this build result",
              "enum": [
                "Queuing",
                "Building",
                "Succeeded",
                "Failed",
                "Deleting",
                "Canceled"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "TriggeredBuildResultProvisioningState",
                "modelAsString": true
              }
            },
            "image": {
              "description": "The container image of this build result",
              "type": "string"
            },
            "lastTransitionTime": {
              "format": "date-time",
              "description": "The last transition time of this build result",
              "type": "string"
            },
            "lastTransitionReason": {
              "description": "The last transition reason of this build result",
              "type": "string"
            },
            "lastTransitionStatus": {
              "description": "The last transition status of this build result",
              "type": "string"
            }
          }
        },
        "resourceRequests": {
          "description": "The customized build resource for this build",
          "type": "object",
          "properties": {
            "cpu": {
              "description": "Optional Cpu allocated to the build resource. 1 core can be represented by 1 or 1000m. \r\nThe default value is 1, this should not exceed build service agent pool cpu size.",
              "type": "string",
              "default": "1"
            },
            "memory": {
              "description": "Optional Memory allocated to the build resource. 1 GB can be represented by 1Gi or 1024Mi. \r\nThe default value is 2Gi, this should not exceed build service agent pool memory size.",
              "type": "string",
              "default": "2Gi"
            }
          }
        }
      }
    },
    "BuildResourceRequests": {
      "description": "Resource request payload of Build Resource.",
      "type": "object",
      "properties": {
        "cpu": {
          "description": "Optional Cpu allocated to the build resource. 1 core can be represented by 1 or 1000m. \r\nThe default value is 1, this should not exceed build service agent pool cpu size.",
          "type": "string",
          "default": "1"
        },
        "memory": {
          "description": "Optional Memory allocated to the build resource. 1 GB can be represented by 1Gi or 1024Mi. \r\nThe default value is 2Gi, this should not exceed build service agent pool memory size.",
          "type": "string",
          "default": "2Gi"
        }
      }
    },
    "TriggeredBuildResult": {
      "description": "The build result triggered by a build",
      "type": "object",
      "readOnly": true,
      "properties": {
        "id": {
          "description": "The unique build id of this build result",
          "type": "string"
        },
        "provisioningState": {
          "description": "The provisioning state of this build result",
          "enum": [
            "Queuing",
            "Building",
            "Succeeded",
            "Failed",
            "Deleting",
            "Canceled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "TriggeredBuildResultProvisioningState",
            "modelAsString": true
          }
        },
        "image": {
          "description": "The container image of this build result",
          "type": "string"
        },
        "lastTransitionTime": {
          "format": "date-time",
          "description": "The last transition time of this build result",
          "type": "string"
        },
        "lastTransitionReason": {
          "description": "The last transition reason of this build result",
          "type": "string"
        },
        "lastTransitionStatus": {
          "description": "The last transition status of this build result",
          "type": "string"
        }
      }
    },
    "BuildResultCollection": {
      "description": "Object that includes an array of Build result resources and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of Build result resources",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Build result resource payload",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified resource Id for the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "lastModifiedByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource modification (UTC).",
                    "type": "string"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "Properties of the build result resource",
                "x-ms-client-flatten": false,
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name of this build result",
                    "type": "string"
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the KPack build result",
                    "enum": [
                      "Queuing",
                      "Building",
                      "Succeeded",
                      "Failed",
                      "Deleting"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "BuildResultProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "error": {
                    "description": "Error when build is failed.",
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "The code of error.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The message of error.",
                        "type": "string"
                      }
                    }
                  },
                  "buildPodName": {
                    "description": "The build pod name which can be used to get the build log streaming.",
                    "type": "string"
                  },
                  "buildStages": {
                    "description": "All of the build stage (init-container and container) resources in build pod.",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "description": "The build stage (init-container and container) resources in build pod.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of this build stage resource.",
                          "type": "string",
                          "readOnly": true
                        },
                        "status": {
                          "description": "The provisioning state of this build stage resource.",
                          "enum": [
                            "NotStarted",
                            "Running",
                            "Succeeded",
                            "Failed"
                          ],
                          "type": "string",
                          "readOnly": true,
                          "x-ms-enum": {
                            "name": "KPackBuildStageProvisioningState",
                            "modelAsString": true
                          }
                        },
                        "exitCode": {
                          "description": "The exit code of this build init container.",
                          "type": "string",
                          "readOnly": true
                        },
                        "reason": {
                          "description": "The reason of this build init container.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true
                  },
                  "image": {
                    "description": "The container registry image of this build result.",
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "BuildResult": {
      "description": "Build result resource payload",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the build result resource",
          "x-ms-client-flatten": false,
          "type": "object",
          "properties": {
            "name": {
              "description": "The name of this build result",
              "type": "string"
            },
            "provisioningState": {
              "description": "Provisioning state of the KPack build result",
              "enum": [
                "Queuing",
                "Building",
                "Succeeded",
                "Failed",
                "Deleting"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "BuildResultProvisioningState",
                "modelAsString": true
              }
            },
            "error": {
              "description": "Error when build is failed.",
              "type": "object",
              "properties": {
                "code": {
                  "description": "The code of error.",
                  "type": "string"
                },
                "message": {
                  "description": "The message of error.",
                  "type": "string"
                }
              }
            },
            "buildPodName": {
              "description": "The build pod name which can be used to get the build log streaming.",
              "type": "string"
            },
            "buildStages": {
              "description": "All of the build stage (init-container and container) resources in build pod.",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "description": "The build stage (init-container and container) resources in build pod.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name of this build stage resource.",
                    "type": "string",
                    "readOnly": true
                  },
                  "status": {
                    "description": "The provisioning state of this build stage resource.",
                    "enum": [
                      "NotStarted",
                      "Running",
                      "Succeeded",
                      "Failed"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "KPackBuildStageProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "exitCode": {
                    "description": "The exit code of this build init container.",
                    "type": "string",
                    "readOnly": true
                  },
                  "reason": {
                    "description": "The reason of this build init container.",
                    "type": "string",
                    "readOnly": true
                  }
                }
              },
              "readOnly": true
            },
            "image": {
              "description": "The container registry image of this build result.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "BuildResultProperties": {
      "description": "Build result resource properties payload",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of this build result",
          "type": "string"
        },
        "provisioningState": {
          "description": "Provisioning state of the KPack build result",
          "enum": [
            "Queuing",
            "Building",
            "Succeeded",
            "Failed",
            "Deleting"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "BuildResultProvisioningState",
            "modelAsString": true
          }
        },
        "error": {
          "description": "Error when build is failed.",
          "type": "object",
          "properties": {
            "code": {
              "description": "The code of error.",
              "type": "string"
            },
            "message": {
              "description": "The message of error.",
              "type": "string"
            }
          }
        },
        "buildPodName": {
          "description": "The build pod name which can be used to get the build log streaming.",
          "type": "string"
        },
        "buildStages": {
          "description": "All of the build stage (init-container and container) resources in build pod.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "The build stage (init-container and container) resources in build pod.",
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of this build stage resource.",
                "type": "string",
                "readOnly": true
              },
              "status": {
                "description": "The provisioning state of this build stage resource.",
                "enum": [
                  "NotStarted",
                  "Running",
                  "Succeeded",
                  "Failed"
                ],
                "type": "string",
                "readOnly": true,
                "x-ms-enum": {
                  "name": "KPackBuildStageProvisioningState",
                  "modelAsString": true
                }
              },
              "exitCode": {
                "description": "The exit code of this build init container.",
                "type": "string",
                "readOnly": true
              },
              "reason": {
                "description": "The reason of this build init container.",
                "type": "string",
                "readOnly": true
              }
            }
          },
          "readOnly": true
        },
        "image": {
          "description": "The container registry image of this build result.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "BuildStageProperties": {
      "description": "The build stage (init-container and container) resources in build pod.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of this build stage resource.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "The provisioning state of this build stage resource.",
          "enum": [
            "NotStarted",
            "Running",
            "Succeeded",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "KPackBuildStageProvisioningState",
            "modelAsString": true
          }
        },
        "exitCode": {
          "description": "The exit code of this build init container.",
          "type": "string",
          "readOnly": true
        },
        "reason": {
          "description": "The reason of this build init container.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "BuildResultLog": {
      "description": "Build result log resource properties payload",
      "type": "object",
      "properties": {
        "blobUrl": {
          "description": "The public download URL of this build result log",
          "type": "string"
        }
      }
    },
    "BuilderResourceCollection": {
      "description": "Object that includes an array of Builder resources and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of Builder resources",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "KPack Builder resource",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified resource Id for the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "lastModifiedByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource modification (UTC).",
                    "type": "string"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "Property of the Builder resource.",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Builder provision status.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Succeeded",
                      "Failed",
                      "Deleting"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "BuilderProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "stack": {
                    "description": "Builder cluster stack property.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Id of the ClusterStack.",
                        "type": "string"
                      },
                      "version": {
                        "description": "Version of the ClusterStack",
                        "type": "string"
                      }
                    }
                  },
                  "buildpackGroups": {
                    "description": "Builder buildpack groups.",
                    "type": "array",
                    "items": {
                      "description": "Buildpack group properties of the Builder",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Buildpack group name",
                          "type": "string"
                        },
                        "buildpacks": {
                          "description": "Buildpacks in the buildpack group",
                          "type": "array",
                          "uniqueItems": false,
                          "items": {
                            "description": "Buildpack properties payload",
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Id of the buildpack",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "BuilderResource": {
      "description": "KPack Builder resource",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "Property of the Builder resource.",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Builder provision status.",
              "enum": [
                "Creating",
                "Updating",
                "Succeeded",
                "Failed",
                "Deleting"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "BuilderProvisioningState",
                "modelAsString": true
              }
            },
            "stack": {
              "description": "Builder cluster stack property.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Id of the ClusterStack.",
                  "type": "string"
                },
                "version": {
                  "description": "Version of the ClusterStack",
                  "type": "string"
                }
              }
            },
            "buildpackGroups": {
              "description": "Builder buildpack groups.",
              "type": "array",
              "items": {
                "description": "Buildpack group properties of the Builder",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Buildpack group name",
                    "type": "string"
                  },
                  "buildpacks": {
                    "description": "Buildpacks in the buildpack group",
                    "type": "array",
                    "uniqueItems": false,
                    "items": {
                      "description": "Buildpack properties payload",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Id of the buildpack",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "BuilderProperties": {
      "description": "KPack Builder properties payload",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Builder provision status.",
          "enum": [
            "Creating",
            "Updating",
            "Succeeded",
            "Failed",
            "Deleting"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "BuilderProvisioningState",
            "modelAsString": true
          }
        },
        "stack": {
          "description": "Builder cluster stack property.",
          "type": "object",
          "properties": {
            "id": {
              "description": "Id of the ClusterStack.",
              "type": "string"
            },
            "version": {
              "description": "Version of the ClusterStack",
              "type": "string"
            }
          }
        },
        "buildpackGroups": {
          "description": "Builder buildpack groups.",
          "type": "array",
          "items": {
            "description": "Buildpack group properties of the Builder",
            "type": "object",
            "properties": {
              "name": {
                "description": "Buildpack group name",
                "type": "string"
              },
              "buildpacks": {
                "description": "Buildpacks in the buildpack group",
                "type": "array",
                "uniqueItems": false,
                "items": {
                  "description": "Buildpack properties payload",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Id of the buildpack",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "StackProperties": {
      "description": "KPack ClusterStack properties payload",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the ClusterStack.",
          "type": "string"
        },
        "version": {
          "description": "Version of the ClusterStack",
          "type": "string"
        }
      }
    },
    "BuildpacksGroupProperties": {
      "description": "Buildpack group properties of the Builder",
      "type": "object",
      "properties": {
        "name": {
          "description": "Buildpack group name",
          "type": "string"
        },
        "buildpacks": {
          "description": "Buildpacks in the buildpack group",
          "type": "array",
          "uniqueItems": false,
          "items": {
            "description": "Buildpack properties payload",
            "type": "object",
            "properties": {
              "id": {
                "description": "Id of the buildpack",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "BuildpackProperties": {
      "description": "Buildpack properties payload",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the buildpack",
          "type": "string"
        }
      }
    },
    "SupportedBuildpacksCollection": {
      "description": "Object that includes an array of supported buildpacks resources and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of supported buildpacks resources",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Supported buildpack resource payload",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified resource Id for the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "lastModifiedByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource modification (UTC).",
                    "type": "string"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "Supported buildpack resource properties",
                "type": "object",
                "properties": {
                  "buildpackId": {
                    "description": "The id of supported buildpack",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "SupportedBuildpackResource": {
      "description": "Supported buildpack resource payload",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "Supported buildpack resource properties",
          "type": "object",
          "properties": {
            "buildpackId": {
              "description": "The id of supported buildpack",
              "type": "string"
            }
          }
        }
      }
    },
    "SupportedBuildpackResourceProperties": {
      "description": "Supported buildpack resource properties",
      "type": "object",
      "properties": {
        "buildpackId": {
          "description": "The id of supported buildpack",
          "type": "string"
        }
      }
    },
    "SupportedStacksCollection": {
      "description": "Object that includes an array of supported stacks resources and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of supported stacks resources",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Supported stack resource payload",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified resource Id for the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "lastModifiedByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource modification (UTC).",
                    "type": "string"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "Supported stack resource properties",
                "type": "object",
                "properties": {
                  "stackId": {
                    "description": "The id of supported stack",
                    "type": "string"
                  },
                  "version": {
                    "description": "The version of supported stack",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "SupportedStackResource": {
      "description": "Supported stack resource payload",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "Supported stack resource properties",
          "type": "object",
          "properties": {
            "stackId": {
              "description": "The id of supported stack",
              "type": "string"
            },
            "version": {
              "description": "The version of supported stack",
              "type": "string"
            }
          }
        }
      }
    },
    "SupportedStackResourceProperties": {
      "description": "Supported stack resource properties",
      "type": "object",
      "properties": {
        "stackId": {
          "description": "The id of supported stack",
          "type": "string"
        },
        "version": {
          "description": "The version of supported stack",
          "type": "string"
        }
      }
    },
    "BuildServiceAgentPoolResourceCollection": {
      "description": "Object that includes an array of build service agent pool resources and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of build service agent pool resource",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "The build service agent pool resource",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified resource Id for the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "lastModifiedByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource modification (UTC).",
                    "type": "string"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "build service agent pool properties",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Provisioning state of the build service agent pool",
                    "type": "string",
                    "readOnly": true
                  },
                  "poolSize": {
                    "description": "build service agent pool size properties",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of build service agent pool size",
                        "type": "string"
                      },
                      "cpu": {
                        "description": "The cpu property of build service agent pool size",
                        "type": "string",
                        "readOnly": true
                      },
                      "memory": {
                        "description": "The memory property of build service agent pool size",
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "BuildServiceAgentPoolResource": {
      "description": "The build service agent pool resource",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "build service agent pool properties",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the build service agent pool",
              "type": "string",
              "readOnly": true
            },
            "poolSize": {
              "description": "build service agent pool size properties",
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of build service agent pool size",
                  "type": "string"
                },
                "cpu": {
                  "description": "The cpu property of build service agent pool size",
                  "type": "string",
                  "readOnly": true
                },
                "memory": {
                  "description": "The memory property of build service agent pool size",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "BuildServiceAgentPoolProperties": {
      "description": "Build service agent pool properties",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the build service agent pool",
          "type": "string",
          "readOnly": true
        },
        "poolSize": {
          "description": "build service agent pool size properties",
          "type": "object",
          "properties": {
            "name": {
              "description": "The name of build service agent pool size",
              "type": "string"
            },
            "cpu": {
              "description": "The cpu property of build service agent pool size",
              "type": "string",
              "readOnly": true
            },
            "memory": {
              "description": "The memory property of build service agent pool size",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "BuildServiceAgentPoolSizeProperties": {
      "description": "Build service agent pool size properties",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of build service agent pool size",
          "type": "string"
        },
        "cpu": {
          "description": "The cpu property of build service agent pool size",
          "type": "string",
          "readOnly": true
        },
        "memory": {
          "description": "The memory property of build service agent pool size",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ConfigurationServiceResourceCollection": {
      "description": "Object that includes an array of configuration service resources and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of configuration service resources",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Application Configuration Service resource",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified resource Id for the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "lastModifiedByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource modification (UTC).",
                    "type": "string"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "Application Configuration Service properties payload",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "State of the Application Configuration Service.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Succeeded",
                      "Failed",
                      "Deleting"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "ConfigurationServiceProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "generation": {
                    "description": "The generation of the Application Configuration Service.",
                    "enum": [
                      "Gen1",
                      "Gen2"
                    ],
                    "type": "string",
                    "default": "Gen1",
                    "x-ms-enum": {
                      "name": "ConfigurationServiceGeneration",
                      "modelAsString": true
                    }
                  },
                  "resourceRequests": {
                    "description": "The requested resource quantity for required CPU and Memory.",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "cpu": {
                        "description": "Cpu allocated to each Application Configuration Service instance",
                        "type": "string",
                        "readOnly": true
                      },
                      "memory": {
                        "description": "Memory allocated to each Application Configuration Service instance",
                        "type": "string",
                        "readOnly": true
                      },
                      "instanceCount": {
                        "format": "int32",
                        "description": "Instance count of the Application Configuration Service",
                        "type": "integer",
                        "readOnly": true
                      }
                    }
                  },
                  "instances": {
                    "description": "Collection of instances belong to Application Configuration Service.",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "description": "Collection of instances belong to the Application Configuration Service",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the Application Configuration Service instance",
                          "type": "string",
                          "readOnly": true
                        },
                        "status": {
                          "description": "Status of the Application Configuration Service instance",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true
                  },
                  "settings": {
                    "description": "The settings of Application Configuration Service.",
                    "type": "object",
                    "properties": {
                      "gitProperty": {
                        "description": "Property of git environment.",
                        "type": "object",
                        "properties": {
                          "repositories": {
                            "description": "Repositories of Application Configuration Service git property.",
                            "type": "array",
                            "items": {
                              "description": "Git repository property payload for Application Configuration Service",
                              "required": [
                                "name",
                                "patterns",
                                "uri",
                                "label"
                              ],
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the repository",
                                  "type": "string"
                                },
                                "patterns": {
                                  "description": "Collection of patterns of the repository",
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "uri": {
                                  "description": "URI of the repository",
                                  "type": "string"
                                },
                                "label": {
                                  "description": "Label of the repository",
                                  "type": "string"
                                },
                                "searchPaths": {
                                  "description": "Searching path of the repository",
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "username": {
                                  "description": "Username of git repository basic auth.",
                                  "type": "string"
                                },
                                "password": {
                                  "description": "Password of git repository basic auth.",
                                  "type": "string"
                                },
                                "hostKey": {
                                  "description": "Public sshKey of git repository.",
                                  "type": "string"
                                },
                                "hostKeyAlgorithm": {
                                  "description": "SshKey algorithm of git repository.",
                                  "type": "string"
                                },
                                "privateKey": {
                                  "description": "Private sshKey algorithm of git repository.",
                                  "type": "string"
                                },
                                "strictHostKeyChecking": {
                                  "description": "Strict host key checking or not.",
                                  "type": "boolean"
                                },
                                "gitImplementation": {
                                  "description": "Git libraries used to support various repository providers",
                                  "enum": [
                                    "go-git",
                                    "libgit2"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "GitImplementation",
                                    "modelAsString": true
                                  }
                                },
                                "caCertResourceId": {
                                  "description": "Resource Id of CA certificate for https URL of Git repository.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "ConfigurationServiceResource": {
      "description": "Application Configuration Service resource",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "Application Configuration Service properties payload",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "State of the Application Configuration Service.",
              "enum": [
                "Creating",
                "Updating",
                "Succeeded",
                "Failed",
                "Deleting"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ConfigurationServiceProvisioningState",
                "modelAsString": true
              }
            },
            "generation": {
              "description": "The generation of the Application Configuration Service.",
              "enum": [
                "Gen1",
                "Gen2"
              ],
              "type": "string",
              "default": "Gen1",
              "x-ms-enum": {
                "name": "ConfigurationServiceGeneration",
                "modelAsString": true
              }
            },
            "resourceRequests": {
              "description": "The requested resource quantity for required CPU and Memory.",
              "type": "object",
              "readOnly": true,
              "properties": {
                "cpu": {
                  "description": "Cpu allocated to each Application Configuration Service instance",
                  "type": "string",
                  "readOnly": true
                },
                "memory": {
                  "description": "Memory allocated to each Application Configuration Service instance",
                  "type": "string",
                  "readOnly": true
                },
                "instanceCount": {
                  "format": "int32",
                  "description": "Instance count of the Application Configuration Service",
                  "type": "integer",
                  "readOnly": true
                }
              }
            },
            "instances": {
              "description": "Collection of instances belong to Application Configuration Service.",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "description": "Collection of instances belong to the Application Configuration Service",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the Application Configuration Service instance",
                    "type": "string",
                    "readOnly": true
                  },
                  "status": {
                    "description": "Status of the Application Configuration Service instance",
                    "type": "string",
                    "readOnly": true
                  }
                }
              },
              "readOnly": true
            },
            "settings": {
              "description": "The settings of Application Configuration Service.",
              "type": "object",
              "properties": {
                "gitProperty": {
                  "description": "Property of git environment.",
                  "type": "object",
                  "properties": {
                    "repositories": {
                      "description": "Repositories of Application Configuration Service git property.",
                      "type": "array",
                      "items": {
                        "description": "Git repository property payload for Application Configuration Service",
                        "required": [
                          "name",
                          "patterns",
                          "uri",
                          "label"
                        ],
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the repository",
                            "type": "string"
                          },
                          "patterns": {
                            "description": "Collection of patterns of the repository",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "uri": {
                            "description": "URI of the repository",
                            "type": "string"
                          },
                          "label": {
                            "description": "Label of the repository",
                            "type": "string"
                          },
                          "searchPaths": {
                            "description": "Searching path of the repository",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "username": {
                            "description": "Username of git repository basic auth.",
                            "type": "string"
                          },
                          "password": {
                            "description": "Password of git repository basic auth.",
                            "type": "string"
                          },
                          "hostKey": {
                            "description": "Public sshKey of git repository.",
                            "type": "string"
                          },
                          "hostKeyAlgorithm": {
                            "description": "SshKey algorithm of git repository.",
                            "type": "string"
                          },
                          "privateKey": {
                            "description": "Private sshKey algorithm of git repository.",
                            "type": "string"
                          },
                          "strictHostKeyChecking": {
                            "description": "Strict host key checking or not.",
                            "type": "boolean"
                          },
                          "gitImplementation": {
                            "description": "Git libraries used to support various repository providers",
                            "enum": [
                              "go-git",
                              "libgit2"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "GitImplementation",
                              "modelAsString": true
                            }
                          },
                          "caCertResourceId": {
                            "description": "Resource Id of CA certificate for https URL of Git repository.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ConfigurationServiceProperties": {
      "description": "Application Configuration Service properties payload",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "State of the Application Configuration Service.",
          "enum": [
            "Creating",
            "Updating",
            "Succeeded",
            "Failed",
            "Deleting"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ConfigurationServiceProvisioningState",
            "modelAsString": true
          }
        },
        "generation": {
          "description": "The generation of the Application Configuration Service.",
          "enum": [
            "Gen1",
            "Gen2"
          ],
          "type": "string",
          "default": "Gen1",
          "x-ms-enum": {
            "name": "ConfigurationServiceGeneration",
            "modelAsString": true
          }
        },
        "resourceRequests": {
          "description": "The requested resource quantity for required CPU and Memory.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "cpu": {
              "description": "Cpu allocated to each Application Configuration Service instance",
              "type": "string",
              "readOnly": true
            },
            "memory": {
              "description": "Memory allocated to each Application Configuration Service instance",
              "type": "string",
              "readOnly": true
            },
            "instanceCount": {
              "format": "int32",
              "description": "Instance count of the Application Configuration Service",
              "type": "integer",
              "readOnly": true
            }
          }
        },
        "instances": {
          "description": "Collection of instances belong to Application Configuration Service.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Collection of instances belong to the Application Configuration Service",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the Application Configuration Service instance",
                "type": "string",
                "readOnly": true
              },
              "status": {
                "description": "Status of the Application Configuration Service instance",
                "type": "string",
                "readOnly": true
              }
            }
          },
          "readOnly": true
        },
        "settings": {
          "description": "The settings of Application Configuration Service.",
          "type": "object",
          "properties": {
            "gitProperty": {
              "description": "Property of git environment.",
              "type": "object",
              "properties": {
                "repositories": {
                  "description": "Repositories of Application Configuration Service git property.",
                  "type": "array",
                  "items": {
                    "description": "Git repository property payload for Application Configuration Service",
                    "required": [
                      "name",
                      "patterns",
                      "uri",
                      "label"
                    ],
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the repository",
                        "type": "string"
                      },
                      "patterns": {
                        "description": "Collection of patterns of the repository",
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "uri": {
                        "description": "URI of the repository",
                        "type": "string"
                      },
                      "label": {
                        "description": "Label of the repository",
                        "type": "string"
                      },
                      "searchPaths": {
                        "description": "Searching path of the repository",
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "username": {
                        "description": "Username of git repository basic auth.",
                        "type": "string"
                      },
                      "password": {
                        "description": "Password of git repository basic auth.",
                        "type": "string"
                      },
                      "hostKey": {
                        "description": "Public sshKey of git repository.",
                        "type": "string"
                      },
                      "hostKeyAlgorithm": {
                        "description": "SshKey algorithm of git repository.",
                        "type": "string"
                      },
                      "privateKey": {
                        "description": "Private sshKey algorithm of git repository.",
                        "type": "string"
                      },
                      "strictHostKeyChecking": {
                        "description": "Strict host key checking or not.",
                        "type": "boolean"
                      },
                      "gitImplementation": {
                        "description": "Git libraries used to support various repository providers",
                        "enum": [
                          "go-git",
                          "libgit2"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "GitImplementation",
                          "modelAsString": true
                        }
                      },
                      "caCertResourceId": {
                        "description": "Resource Id of CA certificate for https URL of Git repository.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ConfigurationServiceResourceRequests": {
      "description": "Resource request payload of Application Configuration Service",
      "type": "object",
      "readOnly": true,
      "properties": {
        "cpu": {
          "description": "Cpu allocated to each Application Configuration Service instance",
          "type": "string",
          "readOnly": true
        },
        "memory": {
          "description": "Memory allocated to each Application Configuration Service instance",
          "type": "string",
          "readOnly": true
        },
        "instanceCount": {
          "format": "int32",
          "description": "Instance count of the Application Configuration Service",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "ConfigurationServiceSettings": {
      "description": "The settings of Application Configuration Service.",
      "type": "object",
      "properties": {
        "gitProperty": {
          "description": "Property of git environment.",
          "type": "object",
          "properties": {
            "repositories": {
              "description": "Repositories of Application Configuration Service git property.",
              "type": "array",
              "items": {
                "description": "Git repository property payload for Application Configuration Service",
                "required": [
                  "name",
                  "patterns",
                  "uri",
                  "label"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the repository",
                    "type": "string"
                  },
                  "patterns": {
                    "description": "Collection of patterns of the repository",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "uri": {
                    "description": "URI of the repository",
                    "type": "string"
                  },
                  "label": {
                    "description": "Label of the repository",
                    "type": "string"
                  },
                  "searchPaths": {
                    "description": "Searching path of the repository",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "username": {
                    "description": "Username of git repository basic auth.",
                    "type": "string"
                  },
                  "password": {
                    "description": "Password of git repository basic auth.",
                    "type": "string"
                  },
                  "hostKey": {
                    "description": "Public sshKey of git repository.",
                    "type": "string"
                  },
                  "hostKeyAlgorithm": {
                    "description": "SshKey algorithm of git repository.",
                    "type": "string"
                  },
                  "privateKey": {
                    "description": "Private sshKey algorithm of git repository.",
                    "type": "string"
                  },
                  "strictHostKeyChecking": {
                    "description": "Strict host key checking or not.",
                    "type": "boolean"
                  },
                  "gitImplementation": {
                    "description": "Git libraries used to support various repository providers",
                    "enum": [
                      "go-git",
                      "libgit2"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "GitImplementation",
                      "modelAsString": true
                    }
                  },
                  "caCertResourceId": {
                    "description": "Resource Id of CA certificate for https URL of Git repository.",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "ConfigurationServiceGitProperty": {
      "description": "Property of git environment.",
      "type": "object",
      "properties": {
        "repositories": {
          "description": "Repositories of Application Configuration Service git property.",
          "type": "array",
          "items": {
            "description": "Git repository property payload for Application Configuration Service",
            "required": [
              "name",
              "patterns",
              "uri",
              "label"
            ],
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the repository",
                "type": "string"
              },
              "patterns": {
                "description": "Collection of patterns of the repository",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "uri": {
                "description": "URI of the repository",
                "type": "string"
              },
              "label": {
                "description": "Label of the repository",
                "type": "string"
              },
              "searchPaths": {
                "description": "Searching path of the repository",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "username": {
                "description": "Username of git repository basic auth.",
                "type": "string"
              },
              "password": {
                "description": "Password of git repository basic auth.",
                "type": "string"
              },
              "hostKey": {
                "description": "Public sshKey of git repository.",
                "type": "string"
              },
              "hostKeyAlgorithm": {
                "description": "SshKey algorithm of git repository.",
                "type": "string"
              },
              "privateKey": {
                "description": "Private sshKey algorithm of git repository.",
                "type": "string"
              },
              "strictHostKeyChecking": {
                "description": "Strict host key checking or not.",
                "type": "boolean"
              },
              "gitImplementation": {
                "description": "Git libraries used to support various repository providers",
                "enum": [
                  "go-git",
                  "libgit2"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "GitImplementation",
                  "modelAsString": true
                }
              },
              "caCertResourceId": {
                "description": "Resource Id of CA certificate for https URL of Git repository.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ConfigurationServiceGitPropertyRepository": {
      "description": "Repositories of Application Configuration Service git property.",
      "type": "array",
      "items": {
        "description": "Git repository property payload for Application Configuration Service",
        "required": [
          "name",
          "patterns",
          "uri",
          "label"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the repository",
            "type": "string"
          },
          "patterns": {
            "description": "Collection of patterns of the repository",
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "uri": {
            "description": "URI of the repository",
            "type": "string"
          },
          "label": {
            "description": "Label of the repository",
            "type": "string"
          },
          "searchPaths": {
            "description": "Searching path of the repository",
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "username": {
            "description": "Username of git repository basic auth.",
            "type": "string"
          },
          "password": {
            "description": "Password of git repository basic auth.",
            "type": "string"
          },
          "hostKey": {
            "description": "Public sshKey of git repository.",
            "type": "string"
          },
          "hostKeyAlgorithm": {
            "description": "SshKey algorithm of git repository.",
            "type": "string"
          },
          "privateKey": {
            "description": "Private sshKey algorithm of git repository.",
            "type": "string"
          },
          "strictHostKeyChecking": {
            "description": "Strict host key checking or not.",
            "type": "boolean"
          },
          "gitImplementation": {
            "description": "Git libraries used to support various repository providers",
            "enum": [
              "go-git",
              "libgit2"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "GitImplementation",
              "modelAsString": true
            }
          },
          "caCertResourceId": {
            "description": "Resource Id of CA certificate for https URL of Git repository.",
            "type": "string"
          }
        }
      }
    },
    "ConfigurationServiceSettingsValidateResult": {
      "description": "Validation result for configuration service settings",
      "type": "object",
      "properties": {
        "gitPropertyValidationResult": {
          "description": "Validation result for configuration service settings",
          "type": "object",
          "properties": {
            "isValid": {
              "description": "Indicate if the configuration service settings are valid",
              "type": "boolean"
            },
            "gitReposValidationResult": {
              "description": "The detail validation results",
              "type": "array",
              "items": {
                "description": "Validate messages of the configuration service git repositories",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name of the configuration service git repository.",
                    "type": "string"
                  },
                  "messages": {
                    "description": "Detailed validation messages.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ConfigurationServiceGitPropertyValidateResult": {
      "description": "Validation result for configuration service settings",
      "type": "object",
      "properties": {
        "isValid": {
          "description": "Indicate if the configuration service settings are valid",
          "type": "boolean"
        },
        "gitReposValidationResult": {
          "description": "The detail validation results",
          "type": "array",
          "items": {
            "description": "Validate messages of the configuration service git repositories",
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the configuration service git repository.",
                "type": "string"
              },
              "messages": {
                "description": "Detailed validation messages.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "ValidationMessages": {
      "description": "Validate messages of the configuration service git repositories",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the configuration service git repository.",
          "type": "string"
        },
        "messages": {
          "description": "Detailed validation messages.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ConfigurationServiceInstance": {
      "description": "Collection of instances belong to the Application Configuration Service",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the Application Configuration Service instance",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "Status of the Application Configuration Service instance",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ConfigurationServiceGitRepository": {
      "description": "Git repository property payload for Application Configuration Service",
      "required": [
        "name",
        "patterns",
        "uri",
        "label"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the repository",
          "type": "string"
        },
        "patterns": {
          "description": "Collection of patterns of the repository",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uri": {
          "description": "URI of the repository",
          "type": "string"
        },
        "label": {
          "description": "Label of the repository",
          "type": "string"
        },
        "searchPaths": {
          "description": "Searching path of the repository",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "username": {
          "description": "Username of git repository basic auth.",
          "type": "string"
        },
        "password": {
          "description": "Password of git repository basic auth.",
          "type": "string"
        },
        "hostKey": {
          "description": "Public sshKey of git repository.",
          "type": "string"
        },
        "hostKeyAlgorithm": {
          "description": "SshKey algorithm of git repository.",
          "type": "string"
        },
        "privateKey": {
          "description": "Private sshKey algorithm of git repository.",
          "type": "string"
        },
        "strictHostKeyChecking": {
          "description": "Strict host key checking or not.",
          "type": "boolean"
        },
        "gitImplementation": {
          "description": "Git libraries used to support various repository providers",
          "enum": [
            "go-git",
            "libgit2"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "GitImplementation",
            "modelAsString": true
          }
        },
        "caCertResourceId": {
          "description": "Resource Id of CA certificate for https URL of Git repository.",
          "type": "string"
        }
      }
    },
    "GitImplementation": {
      "description": "Git libraries used to support various repository providers",
      "enum": [
        "go-git",
        "libgit2"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "GitImplementation",
        "modelAsString": true
      }
    },
    "ApplicationLiveViewResourceCollection": {
      "description": "Object that includes an array of Application Live View resources and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of Application Live View resources",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Application Live View resource",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified resource Id for the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "lastModifiedByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource modification (UTC).",
                    "type": "string"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "Application Live View properties payload",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "State of the Application Live View.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Succeeded",
                      "Failed",
                      "Deleting",
                      "Canceled"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "ApplicationLiveViewProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "components": {
                    "uniqueItems": false,
                    "type": "array",
                    "x-ms-identifiers": [],
                    "items": {
                      "description": "Application Live View properties payload",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the component.",
                          "readOnly": true
                        },
                        "resourceRequests": {
                          "description": "The requested resource quantity for required CPU and Memory.",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "cpu": {
                              "description": "Cpu quantity allocated to each Application Live View component instance. 1 core can be represented by 1 or 1000m.",
                              "type": "string",
                              "readOnly": true
                            },
                            "memory": {
                              "description": "Memory quantity allocated to each Application Live View component instance. 1 GB can be represented by 1Gi or 1024Mi.",
                              "type": "string",
                              "readOnly": true
                            },
                            "instanceCount": {
                              "description": "Desired instance count of Application Live View component instance.",
                              "type": "integer",
                              "format": "int32",
                              "readOnly": true
                            }
                          }
                        },
                        "instances": {
                          "description": "Collection of instances belong to Application Live View.",
                          "uniqueItems": false,
                          "type": "array",
                          "x-ms-identifiers": [],
                          "items": {
                            "description": "Collection of instances belong to the Application Live View",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the Application Live View instance.",
                                "type": "string",
                                "readOnly": true
                              },
                              "status": {
                                "description": "Status of the Application Live View instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true,
                    "description": "Component details of Application Live View"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "ApplicationLiveViewResource": {
      "description": "Application Live View resource",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "Application Live View properties payload",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "State of the Application Live View.",
              "enum": [
                "Creating",
                "Updating",
                "Succeeded",
                "Failed",
                "Deleting",
                "Canceled"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ApplicationLiveViewProvisioningState",
                "modelAsString": true
              }
            },
            "components": {
              "uniqueItems": false,
              "type": "array",
              "x-ms-identifiers": [],
              "items": {
                "description": "Application Live View properties payload",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the component.",
                    "readOnly": true
                  },
                  "resourceRequests": {
                    "description": "The requested resource quantity for required CPU and Memory.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "cpu": {
                        "description": "Cpu quantity allocated to each Application Live View component instance. 1 core can be represented by 1 or 1000m.",
                        "type": "string",
                        "readOnly": true
                      },
                      "memory": {
                        "description": "Memory quantity allocated to each Application Live View component instance. 1 GB can be represented by 1Gi or 1024Mi.",
                        "type": "string",
                        "readOnly": true
                      },
                      "instanceCount": {
                        "description": "Desired instance count of Application Live View component instance.",
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                      }
                    }
                  },
                  "instances": {
                    "description": "Collection of instances belong to Application Live View.",
                    "uniqueItems": false,
                    "type": "array",
                    "x-ms-identifiers": [],
                    "items": {
                      "description": "Collection of instances belong to the Application Live View",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the Application Live View instance.",
                          "type": "string",
                          "readOnly": true
                        },
                        "status": {
                          "description": "Status of the Application Live View instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true
                  }
                }
              },
              "readOnly": true,
              "description": "Component details of Application Live View"
            }
          }
        }
      }
    },
    "ApplicationLiveViewProperties": {
      "description": "Application Live View properties payload",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "State of the Application Live View.",
          "enum": [
            "Creating",
            "Updating",
            "Succeeded",
            "Failed",
            "Deleting",
            "Canceled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ApplicationLiveViewProvisioningState",
            "modelAsString": true
          }
        },
        "components": {
          "uniqueItems": false,
          "type": "array",
          "x-ms-identifiers": [],
          "items": {
            "description": "Application Live View properties payload",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the component.",
                "readOnly": true
              },
              "resourceRequests": {
                "description": "The requested resource quantity for required CPU and Memory.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "cpu": {
                    "description": "Cpu quantity allocated to each Application Live View component instance. 1 core can be represented by 1 or 1000m.",
                    "type": "string",
                    "readOnly": true
                  },
                  "memory": {
                    "description": "Memory quantity allocated to each Application Live View component instance. 1 GB can be represented by 1Gi or 1024Mi.",
                    "type": "string",
                    "readOnly": true
                  },
                  "instanceCount": {
                    "description": "Desired instance count of Application Live View component instance.",
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                  }
                }
              },
              "instances": {
                "description": "Collection of instances belong to Application Live View.",
                "uniqueItems": false,
                "type": "array",
                "x-ms-identifiers": [],
                "items": {
                  "description": "Collection of instances belong to the Application Live View",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Application Live View instance.",
                      "type": "string",
                      "readOnly": true
                    },
                    "status": {
                      "description": "Status of the Application Live View instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                "readOnly": true
              }
            }
          },
          "readOnly": true,
          "description": "Component details of Application Live View"
        }
      }
    },
    "ApplicationLiveViewComponent": {
      "description": "Application Live View properties payload",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the component.",
          "readOnly": true
        },
        "resourceRequests": {
          "description": "The requested resource quantity for required CPU and Memory.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "cpu": {
              "description": "Cpu quantity allocated to each Application Live View component instance. 1 core can be represented by 1 or 1000m.",
              "type": "string",
              "readOnly": true
            },
            "memory": {
              "description": "Memory quantity allocated to each Application Live View component instance. 1 GB can be represented by 1Gi or 1024Mi.",
              "type": "string",
              "readOnly": true
            },
            "instanceCount": {
              "description": "Desired instance count of Application Live View component instance.",
              "type": "integer",
              "format": "int32",
              "readOnly": true
            }
          }
        },
        "instances": {
          "description": "Collection of instances belong to Application Live View.",
          "uniqueItems": false,
          "type": "array",
          "x-ms-identifiers": [],
          "items": {
            "description": "Collection of instances belong to the Application Live View",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the Application Live View instance.",
                "type": "string",
                "readOnly": true
              },
              "status": {
                "description": "Status of the Application Live View instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
                "type": "string",
                "readOnly": true
              }
            }
          },
          "readOnly": true
        }
      }
    },
    "ApplicationLiveViewResourceRequests": {
      "description": "The resource quantity for required CPU and Memory of Application Live View component",
      "type": "object",
      "readOnly": true,
      "properties": {
        "cpu": {
          "description": "Cpu quantity allocated to each Application Live View component instance. 1 core can be represented by 1 or 1000m.",
          "type": "string",
          "readOnly": true
        },
        "memory": {
          "description": "Memory quantity allocated to each Application Live View component instance. 1 GB can be represented by 1Gi or 1024Mi.",
          "type": "string",
          "readOnly": true
        },
        "instanceCount": {
          "description": "Desired instance count of Application Live View component instance.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        }
      }
    },
    "ApplicationLiveViewInstance": {
      "description": "Collection of instances belong to the Application Live View",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the Application Live View instance.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "Status of the Application Live View instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DevToolPortalResourceCollection": {
      "description": "Object that includes an array of Dev Tool Portal resources and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of Dev Tool Portal resources",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Dev Tool Portal resource",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified resource Id for the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "lastModifiedByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource modification (UTC).",
                    "type": "string"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "Dev Tool Portal properties payload",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "State of the Dev Tool Portal.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Succeeded",
                      "Failed",
                      "Deleting",
                      "Canceled"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "DevToolPortalProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "components": {
                    "description": "Collection of components belong to Dev Tool Portal.",
                    "uniqueItems": false,
                    "type": "array",
                    "x-ms-identifiers": [
                      "name"
                    ],
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "readOnly": true
                        },
                        "resourceRequests": {
                          "description": "The requested resource quantity for required CPU and Memory.",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "cpu": {
                              "description": "Cpu quantity allocated to each Dev Tool Portal instance. 1 core can be represented by 1 or 1000m",
                              "type": "string",
                              "readOnly": true
                            },
                            "memory": {
                              "description": "Memory quantity allocated to each Dev Tool Portal instance. 1 GB can be represented by 1Gi or 1024Mi.",
                              "type": "string",
                              "readOnly": true
                            },
                            "instanceCount": {
                              "description": "Desired instance count of Dev Tool Portal.",
                              "type": "integer",
                              "format": "int32",
                              "readOnly": true
                            }
                          }
                        },
                        "instances": {
                          "description": "Collection of instances belong to Dev Tool Portal.",
                          "uniqueItems": false,
                          "type": "array",
                          "x-ms-identifiers": [],
                          "items": {
                            "description": "Collection of instances belong to the Dev Tool Portal.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the Dev Tool Portal instance.",
                                "type": "string",
                                "readOnly": true
                              },
                              "status": {
                                "description": "Status of the Dev Tool Portal instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true
                  },
                  "public": {
                    "description": "Indicates whether the resource exposes public endpoint",
                    "type": "boolean",
                    "default": false
                  },
                  "url": {
                    "description": "URL of the resource, exposed when 'public' is true.",
                    "type": "string",
                    "readOnly": true
                  },
                  "ssoProperties": {
                    "description": "Single sign-on related configuration",
                    "type": "object",
                    "properties": {
                      "scopes": {
                        "description": "It defines the specific actions applications can be allowed to do on a user's behalf",
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "clientId": {
                        "description": "The public identifier for the application",
                        "type": "string"
                      },
                      "clientSecret": {
                        "description": "The secret known only to the application and the authorization server",
                        "x-ms-secret": true,
                        "type": "string"
                      },
                      "metadataUrl": {
                        "description": "The URI of a JSON file with generic OIDC provider configuration.",
                        "type": "string"
                      }
                    }
                  },
                  "features": {
                    "description": "Settings for Dev Tool Portal",
                    "type": "object",
                    "properties": {
                      "applicationAccelerator": {
                        "description": "Detail of Accelerator plugin",
                        "type": "object",
                        "properties": {
                          "state": {
                            "type": "string",
                            "description": "State of the plugin",
                            "default": "Enabled",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "DevToolPortalFeatureState",
                              "values": [
                                {
                                  "description": "Enable the plugin in Dev Tool Portal.",
                                  "value": "Enabled"
                                },
                                {
                                  "description": "Disable the plugin in Dev Tool Portal.",
                                  "value": "Disabled"
                                }
                              ]
                            }
                          },
                          "route": {
                            "type": "string",
                            "description": "Route path to visit the plugin",
                            "readOnly": true
                          }
                        }
                      },
                      "applicationLiveView": {
                        "description": "Detail of App Live View plugin",
                        "type": "object",
                        "properties": {
                          "state": {
                            "type": "string",
                            "description": "State of the plugin",
                            "default": "Enabled",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "DevToolPortalFeatureState",
                              "values": [
                                {
                                  "description": "Enable the plugin in Dev Tool Portal.",
                                  "value": "Enabled"
                                },
                                {
                                  "description": "Disable the plugin in Dev Tool Portal.",
                                  "value": "Disabled"
                                }
                              ]
                            }
                          },
                          "route": {
                            "type": "string",
                            "description": "Route path to visit the plugin",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "DevToolPortalResource": {
      "description": "Dev Tool Portal resource",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "Dev Tool Portal properties payload",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "State of the Dev Tool Portal.",
              "enum": [
                "Creating",
                "Updating",
                "Succeeded",
                "Failed",
                "Deleting",
                "Canceled"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "DevToolPortalProvisioningState",
                "modelAsString": true
              }
            },
            "components": {
              "description": "Collection of components belong to Dev Tool Portal.",
              "uniqueItems": false,
              "type": "array",
              "x-ms-identifiers": [
                "name"
              ],
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "readOnly": true
                  },
                  "resourceRequests": {
                    "description": "The requested resource quantity for required CPU and Memory.",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "cpu": {
                        "description": "Cpu quantity allocated to each Dev Tool Portal instance. 1 core can be represented by 1 or 1000m",
                        "type": "string",
                        "readOnly": true
                      },
                      "memory": {
                        "description": "Memory quantity allocated to each Dev Tool Portal instance. 1 GB can be represented by 1Gi or 1024Mi.",
                        "type": "string",
                        "readOnly": true
                      },
                      "instanceCount": {
                        "description": "Desired instance count of Dev Tool Portal.",
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                      }
                    }
                  },
                  "instances": {
                    "description": "Collection of instances belong to Dev Tool Portal.",
                    "uniqueItems": false,
                    "type": "array",
                    "x-ms-identifiers": [],
                    "items": {
                      "description": "Collection of instances belong to the Dev Tool Portal.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the Dev Tool Portal instance.",
                          "type": "string",
                          "readOnly": true
                        },
                        "status": {
                          "description": "Status of the Dev Tool Portal instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true
                  }
                }
              },
              "readOnly": true
            },
            "public": {
              "description": "Indicates whether the resource exposes public endpoint",
              "type": "boolean",
              "default": false
            },
            "url": {
              "description": "URL of the resource, exposed when 'public' is true.",
              "type": "string",
              "readOnly": true
            },
            "ssoProperties": {
              "description": "Single sign-on related configuration",
              "type": "object",
              "properties": {
                "scopes": {
                  "description": "It defines the specific actions applications can be allowed to do on a user's behalf",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "clientId": {
                  "description": "The public identifier for the application",
                  "type": "string"
                },
                "clientSecret": {
                  "description": "The secret known only to the application and the authorization server",
                  "x-ms-secret": true,
                  "type": "string"
                },
                "metadataUrl": {
                  "description": "The URI of a JSON file with generic OIDC provider configuration.",
                  "type": "string"
                }
              }
            },
            "features": {
              "description": "Settings for Dev Tool Portal",
              "type": "object",
              "properties": {
                "applicationAccelerator": {
                  "description": "Detail of Accelerator plugin",
                  "type": "object",
                  "properties": {
                    "state": {
                      "type": "string",
                      "description": "State of the plugin",
                      "default": "Enabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "DevToolPortalFeatureState",
                        "values": [
                          {
                            "description": "Enable the plugin in Dev Tool Portal.",
                            "value": "Enabled"
                          },
                          {
                            "description": "Disable the plugin in Dev Tool Portal.",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "route": {
                      "type": "string",
                      "description": "Route path to visit the plugin",
                      "readOnly": true
                    }
                  }
                },
                "applicationLiveView": {
                  "description": "Detail of App Live View plugin",
                  "type": "object",
                  "properties": {
                    "state": {
                      "type": "string",
                      "description": "State of the plugin",
                      "default": "Enabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "DevToolPortalFeatureState",
                        "values": [
                          {
                            "description": "Enable the plugin in Dev Tool Portal.",
                            "value": "Enabled"
                          },
                          {
                            "description": "Disable the plugin in Dev Tool Portal.",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "route": {
                      "type": "string",
                      "description": "Route path to visit the plugin",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "DevToolPortalProperties": {
      "description": "Dev Tool Portal properties payload",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "State of the Dev Tool Portal.",
          "enum": [
            "Creating",
            "Updating",
            "Succeeded",
            "Failed",
            "Deleting",
            "Canceled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "DevToolPortalProvisioningState",
            "modelAsString": true
          }
        },
        "components": {
          "description": "Collection of components belong to Dev Tool Portal.",
          "uniqueItems": false,
          "type": "array",
          "x-ms-identifiers": [
            "name"
          ],
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "readOnly": true
              },
              "resourceRequests": {
                "description": "The requested resource quantity for required CPU and Memory.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "cpu": {
                    "description": "Cpu quantity allocated to each Dev Tool Portal instance. 1 core can be represented by 1 or 1000m",
                    "type": "string",
                    "readOnly": true
                  },
                  "memory": {
                    "description": "Memory quantity allocated to each Dev Tool Portal instance. 1 GB can be represented by 1Gi or 1024Mi.",
                    "type": "string",
                    "readOnly": true
                  },
                  "instanceCount": {
                    "description": "Desired instance count of Dev Tool Portal.",
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                  }
                }
              },
              "instances": {
                "description": "Collection of instances belong to Dev Tool Portal.",
                "uniqueItems": false,
                "type": "array",
                "x-ms-identifiers": [],
                "items": {
                  "description": "Collection of instances belong to the Dev Tool Portal.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Dev Tool Portal instance.",
                      "type": "string",
                      "readOnly": true
                    },
                    "status": {
                      "description": "Status of the Dev Tool Portal instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                "readOnly": true
              }
            }
          },
          "readOnly": true
        },
        "public": {
          "description": "Indicates whether the resource exposes public endpoint",
          "type": "boolean",
          "default": false
        },
        "url": {
          "description": "URL of the resource, exposed when 'public' is true.",
          "type": "string",
          "readOnly": true
        },
        "ssoProperties": {
          "description": "Single sign-on related configuration",
          "type": "object",
          "properties": {
            "scopes": {
              "description": "It defines the specific actions applications can be allowed to do on a user's behalf",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "clientId": {
              "description": "The public identifier for the application",
              "type": "string"
            },
            "clientSecret": {
              "description": "The secret known only to the application and the authorization server",
              "x-ms-secret": true,
              "type": "string"
            },
            "metadataUrl": {
              "description": "The URI of a JSON file with generic OIDC provider configuration.",
              "type": "string"
            }
          }
        },
        "features": {
          "description": "Settings for Dev Tool Portal",
          "type": "object",
          "properties": {
            "applicationAccelerator": {
              "description": "Detail of Accelerator plugin",
              "type": "object",
              "properties": {
                "state": {
                  "type": "string",
                  "description": "State of the plugin",
                  "default": "Enabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "DevToolPortalFeatureState",
                    "values": [
                      {
                        "description": "Enable the plugin in Dev Tool Portal.",
                        "value": "Enabled"
                      },
                      {
                        "description": "Disable the plugin in Dev Tool Portal.",
                        "value": "Disabled"
                      }
                    ]
                  }
                },
                "route": {
                  "type": "string",
                  "description": "Route path to visit the plugin",
                  "readOnly": true
                }
              }
            },
            "applicationLiveView": {
              "description": "Detail of App Live View plugin",
              "type": "object",
              "properties": {
                "state": {
                  "type": "string",
                  "description": "State of the plugin",
                  "default": "Enabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "DevToolPortalFeatureState",
                    "values": [
                      {
                        "description": "Enable the plugin in Dev Tool Portal.",
                        "value": "Enabled"
                      },
                      {
                        "description": "Disable the plugin in Dev Tool Portal.",
                        "value": "Disabled"
                      }
                    ]
                  }
                },
                "route": {
                  "type": "string",
                  "description": "Route path to visit the plugin",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "DevToolPortalComponent": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        },
        "resourceRequests": {
          "description": "The requested resource quantity for required CPU and Memory.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "cpu": {
              "description": "Cpu quantity allocated to each Dev Tool Portal instance. 1 core can be represented by 1 or 1000m",
              "type": "string",
              "readOnly": true
            },
            "memory": {
              "description": "Memory quantity allocated to each Dev Tool Portal instance. 1 GB can be represented by 1Gi or 1024Mi.",
              "type": "string",
              "readOnly": true
            },
            "instanceCount": {
              "description": "Desired instance count of Dev Tool Portal.",
              "type": "integer",
              "format": "int32",
              "readOnly": true
            }
          }
        },
        "instances": {
          "description": "Collection of instances belong to Dev Tool Portal.",
          "uniqueItems": false,
          "type": "array",
          "x-ms-identifiers": [],
          "items": {
            "description": "Collection of instances belong to the Dev Tool Portal.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the Dev Tool Portal instance.",
                "type": "string",
                "readOnly": true
              },
              "status": {
                "description": "Status of the Dev Tool Portal instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
                "type": "string",
                "readOnly": true
              }
            }
          },
          "readOnly": true
        }
      }
    },
    "DevToolPortalSsoProperties": {
      "description": "Single sign-on related configuration",
      "type": "object",
      "properties": {
        "scopes": {
          "description": "It defines the specific actions applications can be allowed to do on a user's behalf",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientId": {
          "description": "The public identifier for the application",
          "type": "string"
        },
        "clientSecret": {
          "description": "The secret known only to the application and the authorization server",
          "x-ms-secret": true,
          "type": "string"
        },
        "metadataUrl": {
          "description": "The URI of a JSON file with generic OIDC provider configuration.",
          "type": "string"
        }
      }
    },
    "DevToolPortalFeatureSettings": {
      "description": "Settings for Dev Tool Portal",
      "type": "object",
      "properties": {
        "applicationAccelerator": {
          "description": "Detail of Accelerator plugin",
          "type": "object",
          "properties": {
            "state": {
              "type": "string",
              "description": "State of the plugin",
              "default": "Enabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "DevToolPortalFeatureState",
                "values": [
                  {
                    "description": "Enable the plugin in Dev Tool Portal.",
                    "value": "Enabled"
                  },
                  {
                    "description": "Disable the plugin in Dev Tool Portal.",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "route": {
              "type": "string",
              "description": "Route path to visit the plugin",
              "readOnly": true
            }
          }
        },
        "applicationLiveView": {
          "description": "Detail of App Live View plugin",
          "type": "object",
          "properties": {
            "state": {
              "type": "string",
              "description": "State of the plugin",
              "default": "Enabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "DevToolPortalFeatureState",
                "values": [
                  {
                    "description": "Enable the plugin in Dev Tool Portal.",
                    "value": "Enabled"
                  },
                  {
                    "description": "Disable the plugin in Dev Tool Portal.",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "route": {
              "type": "string",
              "description": "Route path to visit the plugin",
              "readOnly": true
            }
          }
        }
      }
    },
    "DevToolPortalFeatureDetail": {
      "description": "Detail settings for Dev Tool Portal feature",
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "description": "State of the plugin",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "DevToolPortalFeatureState",
            "values": [
              {
                "description": "Enable the plugin in Dev Tool Portal.",
                "value": "Enabled"
              },
              {
                "description": "Disable the plugin in Dev Tool Portal.",
                "value": "Disabled"
              }
            ]
          }
        },
        "route": {
          "type": "string",
          "description": "Route path to visit the plugin",
          "readOnly": true
        }
      }
    },
    "DevToolPortalResourceRequests": {
      "description": "The resource quantity for required CPU and Memory of Dev Tool Portal",
      "type": "object",
      "readOnly": true,
      "properties": {
        "cpu": {
          "description": "Cpu quantity allocated to each Dev Tool Portal instance. 1 core can be represented by 1 or 1000m",
          "type": "string",
          "readOnly": true
        },
        "memory": {
          "description": "Memory quantity allocated to each Dev Tool Portal instance. 1 GB can be represented by 1Gi or 1024Mi.",
          "type": "string",
          "readOnly": true
        },
        "instanceCount": {
          "description": "Desired instance count of Dev Tool Portal.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        }
      }
    },
    "DevToolPortalInstance": {
      "description": "Collection of instances belong to the Dev Tool Portal.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the Dev Tool Portal instance.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "Status of the Dev Tool Portal instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ServiceRegistryResourceCollection": {
      "description": "Object that includes an array of Service Registry resources and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of Service Registry resources",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Service Registry resource",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified resource Id for the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "lastModifiedByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource modification (UTC).",
                    "type": "string"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "Service Registry properties payload",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "State of the Service Registry.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Succeeded",
                      "Failed",
                      "Deleting"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "ServiceRegistryProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "resourceRequests": {
                    "description": "The requested resource quantity for required CPU and Memory.",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "cpu": {
                        "description": "Cpu allocated to each Service Registry instance",
                        "type": "string",
                        "readOnly": true
                      },
                      "memory": {
                        "description": "Memory allocated to each Service Registry instance",
                        "type": "string",
                        "readOnly": true
                      },
                      "instanceCount": {
                        "format": "int32",
                        "description": "Instance count of the Service Registry",
                        "type": "integer",
                        "readOnly": true
                      }
                    }
                  },
                  "instances": {
                    "description": "Collection of instances belong to Service Registry.",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "description": "Collection of instances belong to the Service Registry",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the Service Registry instance",
                          "type": "string",
                          "readOnly": true
                        },
                        "status": {
                          "description": "Status of the Service Registry instance",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "ServiceRegistryResource": {
      "description": "Service Registry resource",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "Service Registry properties payload",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "State of the Service Registry.",
              "enum": [
                "Creating",
                "Updating",
                "Succeeded",
                "Failed",
                "Deleting"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ServiceRegistryProvisioningState",
                "modelAsString": true
              }
            },
            "resourceRequests": {
              "description": "The requested resource quantity for required CPU and Memory.",
              "type": "object",
              "readOnly": true,
              "properties": {
                "cpu": {
                  "description": "Cpu allocated to each Service Registry instance",
                  "type": "string",
                  "readOnly": true
                },
                "memory": {
                  "description": "Memory allocated to each Service Registry instance",
                  "type": "string",
                  "readOnly": true
                },
                "instanceCount": {
                  "format": "int32",
                  "description": "Instance count of the Service Registry",
                  "type": "integer",
                  "readOnly": true
                }
              }
            },
            "instances": {
              "description": "Collection of instances belong to Service Registry.",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "description": "Collection of instances belong to the Service Registry",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the Service Registry instance",
                    "type": "string",
                    "readOnly": true
                  },
                  "status": {
                    "description": "Status of the Service Registry instance",
                    "type": "string",
                    "readOnly": true
                  }
                }
              },
              "readOnly": true
            }
          }
        }
      }
    },
    "ServiceRegistryProperties": {
      "description": "Service Registry properties payload",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "State of the Service Registry.",
          "enum": [
            "Creating",
            "Updating",
            "Succeeded",
            "Failed",
            "Deleting"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ServiceRegistryProvisioningState",
            "modelAsString": true
          }
        },
        "resourceRequests": {
          "description": "The requested resource quantity for required CPU and Memory.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "cpu": {
              "description": "Cpu allocated to each Service Registry instance",
              "type": "string",
              "readOnly": true
            },
            "memory": {
              "description": "Memory allocated to each Service Registry instance",
              "type": "string",
              "readOnly": true
            },
            "instanceCount": {
              "format": "int32",
              "description": "Instance count of the Service Registry",
              "type": "integer",
              "readOnly": true
            }
          }
        },
        "instances": {
          "description": "Collection of instances belong to Service Registry.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Collection of instances belong to the Service Registry",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the Service Registry instance",
                "type": "string",
                "readOnly": true
              },
              "status": {
                "description": "Status of the Service Registry instance",
                "type": "string",
                "readOnly": true
              }
            }
          },
          "readOnly": true
        }
      }
    },
    "ServiceRegistryResourceRequests": {
      "description": "Resource request payload of Service Registry",
      "type": "object",
      "readOnly": true,
      "properties": {
        "cpu": {
          "description": "Cpu allocated to each Service Registry instance",
          "type": "string",
          "readOnly": true
        },
        "memory": {
          "description": "Memory allocated to each Service Registry instance",
          "type": "string",
          "readOnly": true
        },
        "instanceCount": {
          "format": "int32",
          "description": "Instance count of the Service Registry",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "ServiceRegistryInstance": {
      "description": "Collection of instances belong to the Service Registry",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the Service Registry instance",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "Status of the Service Registry instance",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Sku": {
      "description": "Sku of Azure Spring Apps",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the Sku",
          "type": "string",
          "default": "S0"
        },
        "tier": {
          "description": "Tier of the Sku",
          "type": "string",
          "default": "Standard"
        },
        "capacity": {
          "format": "int32",
          "description": "Current capacity of the target resource",
          "type": "integer"
        }
      }
    },
    "MarketplaceResource": {
      "description": "Purchasing 3rd Party product for one Azure Spring Apps instance",
      "type": "object",
      "properties": {
        "plan": {
          "description": "The plan id of the 3rd Party Artifact that is being procured.",
          "type": "string"
        },
        "publisher": {
          "description": "The publisher id of the 3rd Party Artifact that is being bought.",
          "type": "string"
        },
        "product": {
          "description": "The 3rd Party artifact that is being procured.",
          "type": "string"
        }
      }
    },
    "ConfigServerSettingsValidateResult": {
      "description": "Validation result for config server settings",
      "type": "object",
      "properties": {
        "isValid": {
          "description": "Indicate if the config server settings are valid",
          "type": "boolean"
        },
        "details": {
          "description": "The detail validation results",
          "type": "array",
          "items": {
            "description": "Error record of the config server settings",
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the config server settings error record",
                "type": "string"
              },
              "uri": {
                "description": "The uri of the config server settings error record",
                "type": "string"
              },
              "messages": {
                "description": "The detail error messages of the record",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "ConfigServerSettingsErrorRecord": {
      "description": "Error record of the config server settings",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the config server settings error record",
          "type": "string"
        },
        "uri": {
          "description": "The uri of the config server settings error record",
          "type": "string"
        },
        "messages": {
          "description": "The detail error messages of the record",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ConfigServerResource": {
      "description": "Config Server resource",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the Config Server resource",
          "x-ms-client-flatten": false,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "State of the config server.",
              "enum": [
                "NotAvailable",
                "Deleted",
                "Failed",
                "Succeeded",
                "Updating"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ConfigServerState",
                "modelAsString": true
              }
            },
            "error": {
              "description": "Error when apply config server settings.",
              "type": "object",
              "properties": {
                "code": {
                  "description": "The code of error.",
                  "type": "string"
                },
                "message": {
                  "description": "The message of error.",
                  "type": "string"
                }
              }
            },
            "configServer": {
              "description": "Settings of config server.",
              "type": "object",
              "properties": {
                "gitProperty": {
                  "description": "Property of git environment.",
                  "required": [
                    "uri"
                  ],
                  "type": "object",
                  "properties": {
                    "repositories": {
                      "description": "Repositories of git.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "Git repository property payload for config server",
                        "required": [
                          "name",
                          "uri"
                        ],
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the repository",
                            "type": "string"
                          },
                          "pattern": {
                            "description": "Collection of pattern of the repository",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "uri": {
                            "description": "URI of the repository",
                            "type": "string"
                          },
                          "label": {
                            "description": "Label of the repository",
                            "type": "string"
                          },
                          "searchPaths": {
                            "description": "Searching path of the repository",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "username": {
                            "description": "Username of git repository basic auth.",
                            "type": "string"
                          },
                          "password": {
                            "description": "Password of git repository basic auth.",
                            "type": "string"
                          },
                          "hostKey": {
                            "description": "Public sshKey of git repository.",
                            "type": "string"
                          },
                          "hostKeyAlgorithm": {
                            "description": "SshKey algorithm of git repository.",
                            "type": "string"
                          },
                          "privateKey": {
                            "description": "Private sshKey algorithm of git repository.",
                            "type": "string"
                          },
                          "strictHostKeyChecking": {
                            "description": "Strict host key checking or not.",
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "uri": {
                      "description": "URI of the repository",
                      "type": "string"
                    },
                    "label": {
                      "description": "Label of the repository",
                      "type": "string"
                    },
                    "searchPaths": {
                      "description": "Searching path of the repository",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "username": {
                      "description": "Username of git repository basic auth.",
                      "type": "string"
                    },
                    "password": {
                      "description": "Password of git repository basic auth.",
                      "type": "string"
                    },
                    "hostKey": {
                      "description": "Public sshKey of git repository.",
                      "type": "string"
                    },
                    "hostKeyAlgorithm": {
                      "description": "SshKey algorithm of git repository.",
                      "type": "string"
                    },
                    "privateKey": {
                      "description": "Private sshKey algorithm of git repository.",
                      "type": "string"
                    },
                    "strictHostKeyChecking": {
                      "description": "Strict host key checking or not.",
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ConfigServerProperties": {
      "description": "Config server git properties payload",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "State of the config server.",
          "enum": [
            "NotAvailable",
            "Deleted",
            "Failed",
            "Succeeded",
            "Updating"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ConfigServerState",
            "modelAsString": true
          }
        },
        "error": {
          "description": "Error when apply config server settings.",
          "type": "object",
          "properties": {
            "code": {
              "description": "The code of error.",
              "type": "string"
            },
            "message": {
              "description": "The message of error.",
              "type": "string"
            }
          }
        },
        "configServer": {
          "description": "Settings of config server.",
          "type": "object",
          "properties": {
            "gitProperty": {
              "description": "Property of git environment.",
              "required": [
                "uri"
              ],
              "type": "object",
              "properties": {
                "repositories": {
                  "description": "Repositories of git.",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Git repository property payload for config server",
                    "required": [
                      "name",
                      "uri"
                    ],
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the repository",
                        "type": "string"
                      },
                      "pattern": {
                        "description": "Collection of pattern of the repository",
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "uri": {
                        "description": "URI of the repository",
                        "type": "string"
                      },
                      "label": {
                        "description": "Label of the repository",
                        "type": "string"
                      },
                      "searchPaths": {
                        "description": "Searching path of the repository",
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "username": {
                        "description": "Username of git repository basic auth.",
                        "type": "string"
                      },
                      "password": {
                        "description": "Password of git repository basic auth.",
                        "type": "string"
                      },
                      "hostKey": {
                        "description": "Public sshKey of git repository.",
                        "type": "string"
                      },
                      "hostKeyAlgorithm": {
                        "description": "SshKey algorithm of git repository.",
                        "type": "string"
                      },
                      "privateKey": {
                        "description": "Private sshKey algorithm of git repository.",
                        "type": "string"
                      },
                      "strictHostKeyChecking": {
                        "description": "Strict host key checking or not.",
                        "type": "boolean"
                      }
                    }
                  }
                },
                "uri": {
                  "description": "URI of the repository",
                  "type": "string"
                },
                "label": {
                  "description": "Label of the repository",
                  "type": "string"
                },
                "searchPaths": {
                  "description": "Searching path of the repository",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "username": {
                  "description": "Username of git repository basic auth.",
                  "type": "string"
                },
                "password": {
                  "description": "Password of git repository basic auth.",
                  "type": "string"
                },
                "hostKey": {
                  "description": "Public sshKey of git repository.",
                  "type": "string"
                },
                "hostKeyAlgorithm": {
                  "description": "SshKey algorithm of git repository.",
                  "type": "string"
                },
                "privateKey": {
                  "description": "Private sshKey algorithm of git repository.",
                  "type": "string"
                },
                "strictHostKeyChecking": {
                  "description": "Strict host key checking or not.",
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "MonitoringSettingResource": {
      "description": "Monitoring Setting resource",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the Monitoring Setting resource",
          "x-ms-client-flatten": false,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "State of the Monitoring Setting.",
              "enum": [
                "NotAvailable",
                "Failed",
                "Succeeded",
                "Updating"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "MonitoringSettingState",
                "modelAsString": true
              }
            },
            "error": {
              "description": "Error when apply Monitoring Setting changes.",
              "type": "object",
              "properties": {
                "code": {
                  "description": "The code of error.",
                  "type": "string"
                },
                "message": {
                  "description": "The message of error.",
                  "type": "string"
                }
              }
            },
            "traceEnabled": {
              "description": "Indicates whether enable the trace functionality, which will be deprecated since api version 2020-11-01-preview. Please leverage appInsightsInstrumentationKey to indicate if monitoringSettings enabled or not",
              "type": "boolean"
            },
            "appInsightsInstrumentationKey": {
              "description": "Target application insight instrumentation key, null or whitespace include empty will disable monitoringSettings",
              "type": "string"
            },
            "appInsightsSamplingRate": {
              "description": "Indicates the sampling rate of application insight agent, should be in range [0.0, 100.0]",
              "format": "double",
              "maximum": 100,
              "minimum": 0,
              "type": "number"
            },
            "appInsightsAgentVersions": {
              "description": "Indicates the versions of application insight agent",
              "type": "object",
              "properties": {
                "java": {
                  "description": "Indicates the version of application insight java agent",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "MonitoringSettingProperties": {
      "description": "Monitoring Setting properties payload",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "State of the Monitoring Setting.",
          "enum": [
            "NotAvailable",
            "Failed",
            "Succeeded",
            "Updating"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "MonitoringSettingState",
            "modelAsString": true
          }
        },
        "error": {
          "description": "Error when apply Monitoring Setting changes.",
          "type": "object",
          "properties": {
            "code": {
              "description": "The code of error.",
              "type": "string"
            },
            "message": {
              "description": "The message of error.",
              "type": "string"
            }
          }
        },
        "traceEnabled": {
          "description": "Indicates whether enable the trace functionality, which will be deprecated since api version 2020-11-01-preview. Please leverage appInsightsInstrumentationKey to indicate if monitoringSettings enabled or not",
          "type": "boolean"
        },
        "appInsightsInstrumentationKey": {
          "description": "Target application insight instrumentation key, null or whitespace include empty will disable monitoringSettings",
          "type": "string"
        },
        "appInsightsSamplingRate": {
          "description": "Indicates the sampling rate of application insight agent, should be in range [0.0, 100.0]",
          "format": "double",
          "maximum": 100,
          "minimum": 0,
          "type": "number"
        },
        "appInsightsAgentVersions": {
          "description": "Indicates the versions of application insight agent",
          "type": "object",
          "properties": {
            "java": {
              "description": "Indicates the version of application insight java agent",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "applicationInsightsAgentVersions": {
      "description": "Application Insights agent versions properties payload",
      "type": "object",
      "properties": {
        "java": {
          "description": "Indicates the version of application insight java agent",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "NetworkProfile": {
      "description": "Service network profile payload",
      "type": "object",
      "properties": {
        "serviceRuntimeSubnetId": {
          "description": "Fully qualified resource Id of the subnet to host Azure Spring Apps Service Runtime",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "appSubnetId": {
          "description": "Fully qualified resource Id of the subnet to host customer apps in Azure Spring Apps",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "serviceCidr": {
          "description": "Azure Spring Apps service reserved CIDR",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "serviceRuntimeNetworkResourceGroup": {
          "description": "Name of the resource group containing network resources of Azure Spring Apps Service Runtime",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "appNetworkResourceGroup": {
          "description": "Name of the resource group containing network resources for customer apps in Azure Spring Apps",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "outboundIPs": {
          "description": "Desired outbound IP resources for Azure Spring Apps resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "publicIPs": {
              "type": "array",
              "readOnly": true,
              "items": {
                "type": "string"
              },
              "description": "A list of public IP addresses."
            }
          }
        },
        "requiredTraffics": {
          "description": "Required inbound or outbound traffics for Azure Spring Apps resource.",
          "type": "array",
          "readOnly": true,
          "items": {
            "description": "Required inbound or outbound traffic for Azure Spring Apps resource.",
            "type": "object",
            "properties": {
              "protocol": {
                "description": "The protocol of required traffic",
                "type": "string",
                "readOnly": true
              },
              "port": {
                "description": "The port of required traffic",
                "type": "integer",
                "format": "int32",
                "readOnly": true
              },
              "ips": {
                "description": "The ip list of required traffic",
                "type": "array",
                "readOnly": true,
                "items": {
                  "type": "string"
                }
              },
              "fqdns": {
                "description": "The FQDN list of required traffic",
                "type": "array",
                "readOnly": true,
                "items": {
                  "type": "string"
                }
              },
              "direction": {
                "description": "The direction of required traffic",
                "type": "string",
                "readOnly": true,
                "enum": [
                  "Inbound",
                  "Outbound"
                ],
                "x-ms-enum": {
                  "name": "trafficDirection",
                  "modelAsString": true
                }
              }
            }
          }
        },
        "ingressConfig": {
          "description": "Ingress configuration payload for Azure Spring Apps resource.",
          "type": "object",
          "properties": {
            "readTimeoutInSeconds": {
              "format": "int32",
              "description": "Ingress read time out in seconds.",
              "type": "integer"
            }
          }
        },
        "outboundType": {
          "description": "The egress traffic type of Azure Spring Apps VNet instances.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "RequiredTraffic": {
      "description": "Required inbound or outbound traffic for Azure Spring Apps resource.",
      "type": "object",
      "properties": {
        "protocol": {
          "description": "The protocol of required traffic",
          "type": "string",
          "readOnly": true
        },
        "port": {
          "description": "The port of required traffic",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "ips": {
          "description": "The ip list of required traffic",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        },
        "fqdns": {
          "description": "The FQDN list of required traffic",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        },
        "direction": {
          "description": "The direction of required traffic",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "x-ms-enum": {
            "name": "trafficDirection",
            "modelAsString": true
          }
        }
      }
    },
    "IngressConfig": {
      "description": "Ingress configuration payload for Azure Spring Apps resource.",
      "type": "object",
      "properties": {
        "readTimeoutInSeconds": {
          "format": "int32",
          "description": "Ingress read time out in seconds.",
          "type": "integer"
        }
      }
    },
    "Error": {
      "description": "The error code compose of code and message.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The code of error.",
          "type": "string"
        },
        "message": {
          "description": "The message of error.",
          "type": "string"
        }
      }
    },
    "ServiceVNetAddons": {
      "description": "Additional Service settings in vnet injection instance",
      "type": "object",
      "properties": {
        "logStreamPublicEndpoint": {
          "description": "Indicates whether the log stream in vnet injection instance could be accessed from internet.",
          "type": "boolean",
          "default": false
        },
        "dataPlanePublicEndpoint": {
          "description": "Indicates whether the data plane components(log stream, app connect, remote debugging) in vnet injection instance could be accessed from internet.",
          "type": "boolean",
          "default": false
        }
      }
    },
    "ConfigServerSettings": {
      "description": "The settings of config server.",
      "type": "object",
      "properties": {
        "gitProperty": {
          "description": "Property of git environment.",
          "required": [
            "uri"
          ],
          "type": "object",
          "properties": {
            "repositories": {
              "description": "Repositories of git.",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "description": "Git repository property payload for config server",
                "required": [
                  "name",
                  "uri"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the repository",
                    "type": "string"
                  },
                  "pattern": {
                    "description": "Collection of pattern of the repository",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "uri": {
                    "description": "URI of the repository",
                    "type": "string"
                  },
                  "label": {
                    "description": "Label of the repository",
                    "type": "string"
                  },
                  "searchPaths": {
                    "description": "Searching path of the repository",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "username": {
                    "description": "Username of git repository basic auth.",
                    "type": "string"
                  },
                  "password": {
                    "description": "Password of git repository basic auth.",
                    "type": "string"
                  },
                  "hostKey": {
                    "description": "Public sshKey of git repository.",
                    "type": "string"
                  },
                  "hostKeyAlgorithm": {
                    "description": "SshKey algorithm of git repository.",
                    "type": "string"
                  },
                  "privateKey": {
                    "description": "Private sshKey algorithm of git repository.",
                    "type": "string"
                  },
                  "strictHostKeyChecking": {
                    "description": "Strict host key checking or not.",
                    "type": "boolean"
                  }
                }
              }
            },
            "uri": {
              "description": "URI of the repository",
              "type": "string"
            },
            "label": {
              "description": "Label of the repository",
              "type": "string"
            },
            "searchPaths": {
              "description": "Searching path of the repository",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "username": {
              "description": "Username of git repository basic auth.",
              "type": "string"
            },
            "password": {
              "description": "Password of git repository basic auth.",
              "type": "string"
            },
            "hostKey": {
              "description": "Public sshKey of git repository.",
              "type": "string"
            },
            "hostKeyAlgorithm": {
              "description": "SshKey algorithm of git repository.",
              "type": "string"
            },
            "privateKey": {
              "description": "Private sshKey algorithm of git repository.",
              "type": "string"
            },
            "strictHostKeyChecking": {
              "description": "Strict host key checking or not.",
              "type": "boolean"
            }
          }
        }
      }
    },
    "ConfigServerGitProperty": {
      "description": "Property of git.",
      "required": [
        "uri"
      ],
      "type": "object",
      "properties": {
        "repositories": {
          "description": "Repositories of git.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Git repository property payload for config server",
            "required": [
              "name",
              "uri"
            ],
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the repository",
                "type": "string"
              },
              "pattern": {
                "description": "Collection of pattern of the repository",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "uri": {
                "description": "URI of the repository",
                "type": "string"
              },
              "label": {
                "description": "Label of the repository",
                "type": "string"
              },
              "searchPaths": {
                "description": "Searching path of the repository",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "username": {
                "description": "Username of git repository basic auth.",
                "type": "string"
              },
              "password": {
                "description": "Password of git repository basic auth.",
                "type": "string"
              },
              "hostKey": {
                "description": "Public sshKey of git repository.",
                "type": "string"
              },
              "hostKeyAlgorithm": {
                "description": "SshKey algorithm of git repository.",
                "type": "string"
              },
              "privateKey": {
                "description": "Private sshKey algorithm of git repository.",
                "type": "string"
              },
              "strictHostKeyChecking": {
                "description": "Strict host key checking or not.",
                "type": "boolean"
              }
            }
          }
        },
        "uri": {
          "description": "URI of the repository",
          "type": "string"
        },
        "label": {
          "description": "Label of the repository",
          "type": "string"
        },
        "searchPaths": {
          "description": "Searching path of the repository",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "username": {
          "description": "Username of git repository basic auth.",
          "type": "string"
        },
        "password": {
          "description": "Password of git repository basic auth.",
          "type": "string"
        },
        "hostKey": {
          "description": "Public sshKey of git repository.",
          "type": "string"
        },
        "hostKeyAlgorithm": {
          "description": "SshKey algorithm of git repository.",
          "type": "string"
        },
        "privateKey": {
          "description": "Private sshKey algorithm of git repository.",
          "type": "string"
        },
        "strictHostKeyChecking": {
          "description": "Strict host key checking or not.",
          "type": "boolean"
        }
      }
    },
    "GitPatternRepository": {
      "description": "Git repository property payload for config server",
      "required": [
        "name",
        "uri"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the repository",
          "type": "string"
        },
        "pattern": {
          "description": "Collection of pattern of the repository",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uri": {
          "description": "URI of the repository",
          "type": "string"
        },
        "label": {
          "description": "Label of the repository",
          "type": "string"
        },
        "searchPaths": {
          "description": "Searching path of the repository",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "username": {
          "description": "Username of git repository basic auth.",
          "type": "string"
        },
        "password": {
          "description": "Password of git repository basic auth.",
          "type": "string"
        },
        "hostKey": {
          "description": "Public sshKey of git repository.",
          "type": "string"
        },
        "hostKeyAlgorithm": {
          "description": "SshKey algorithm of git repository.",
          "type": "string"
        },
        "privateKey": {
          "description": "Private sshKey algorithm of git repository.",
          "type": "string"
        },
        "strictHostKeyChecking": {
          "description": "Strict host key checking or not.",
          "type": "boolean"
        }
      }
    },
    "TestKeys": {
      "description": "Test keys payload",
      "type": "object",
      "properties": {
        "primaryKey": {
          "description": "Primary key",
          "type": "string"
        },
        "secondaryKey": {
          "description": "Secondary key",
          "type": "string"
        },
        "primaryTestEndpoint": {
          "description": "Primary test endpoint",
          "type": "string"
        },
        "secondaryTestEndpoint": {
          "description": "Secondary test endpoint",
          "type": "string"
        },
        "enabled": {
          "description": "Indicates whether the test endpoint feature enabled or not",
          "type": "boolean"
        }
      }
    },
    "RegenerateTestKeyRequestPayload": {
      "description": "Regenerate test key request payload",
      "required": [
        "keyType"
      ],
      "type": "object",
      "properties": {
        "keyType": {
          "description": "Type of the test key",
          "enum": [
            "Primary",
            "Secondary"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TestKeyType",
            "modelAsString": true
          }
        }
      }
    },
    "AppResource": {
      "description": "App resource payload",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the App resource",
          "x-ms-client-flatten": false,
          "type": "object",
          "properties": {
            "public": {
              "description": "Indicates whether the App exposes public endpoint",
              "type": "boolean"
            },
            "url": {
              "description": "URL of the App",
              "type": "string",
              "readOnly": true
            },
            "addonConfigs": {
              "description": "Collection of addons",
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            },
            "provisioningState": {
              "description": "Provisioning state of the App",
              "enum": [
                "Succeeded",
                "Failed",
                "Creating",
                "Updating",
                "Deleting"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "AppResourceProvisioningState",
                "modelAsString": true
              }
            },
            "fqdn": {
              "description": "Fully qualified dns Name.",
              "type": "string",
              "readOnly": true
            },
            "httpsOnly": {
              "description": "Indicate if only https is allowed.",
              "type": "boolean",
              "default": false
            },
            "temporaryDisk": {
              "description": "Temporary disk settings",
              "type": "object",
              "properties": {
                "sizeInGB": {
                  "format": "int32",
                  "description": "Size of the temporary disk in GB",
                  "maximum": 5,
                  "minimum": 0,
                  "type": "integer"
                },
                "mountPath": {
                  "description": "Mount path of the temporary disk",
                  "type": "string",
                  "default": "/tmp"
                }
              }
            },
            "persistentDisk": {
              "description": "Persistent disk settings",
              "type": "object",
              "properties": {
                "sizeInGB": {
                  "format": "int32",
                  "description": "Size of the persistent disk in GB",
                  "maximum": 50,
                  "minimum": 0,
                  "type": "integer"
                },
                "usedInGB": {
                  "format": "int32",
                  "description": "Size of the used persistent disk in GB",
                  "maximum": 50,
                  "minimum": 0,
                  "type": "integer",
                  "readOnly": true
                },
                "mountPath": {
                  "description": "Mount path of the persistent disk",
                  "type": "string"
                }
              }
            },
            "customPersistentDisks": {
              "description": "List of custom persistent disks",
              "type": "array",
              "items": {
                "description": "Custom persistent disk resource payload.",
                "type": "object",
                "required": [
                  "storageId"
                ],
                "properties": {
                  "customPersistentDiskProperties": {
                    "description": "Properties of the custom persistent disk resource payload.",
                    "x-ms-client-flatten": false,
                    "required": [
                      "type",
                      "mountPath"
                    ],
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "The type of the underlying resource to mount as a persistent disk.",
                        "enum": [
                          "AzureFileVolume"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "Type",
                          "modelAsString": true
                        }
                      },
                      "mountPath": {
                        "description": "The mount path of the persistent disk.",
                        "type": "string"
                      },
                      "readOnly": {
                        "description": "Indicates whether the persistent disk is a readOnly one.",
                        "type": "boolean"
                      },
                      "enableSubPath": {
                        "description": "If set to true, it will create and mount a dedicated directory for every individual app instance.",
                        "type": "boolean",
                        "default": false
                      },
                      "mountOptions": {
                        "description": "These are the mount options for a persistent disk.",
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "discriminator": "type"
                  },
                  "storageId": {
                    "description": "The resource id of Azure Spring Apps Storage resource.",
                    "type": "string"
                  }
                }
              }
            },
            "enableEndToEndTLS": {
              "description": "Indicate if end to end TLS is enabled.",
              "type": "boolean",
              "default": false
            },
            "loadedCertificates": {
              "description": "Collection of loaded certificates",
              "type": "array",
              "items": {
                "description": "Loaded certificate payload",
                "required": [
                  "resourceId"
                ],
                "type": "object",
                "properties": {
                  "resourceId": {
                    "description": "Resource Id of loaded certificate",
                    "type": "string"
                  },
                  "loadTrustStore": {
                    "description": "Indicate whether the certificate will be loaded into default trust store, only work for Java runtime.",
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            },
            "vnetAddons": {
              "description": "Additional App settings in vnet injection instance",
              "type": "object",
              "properties": {
                "publicEndpoint": {
                  "description": "Indicates whether the App in vnet injection instance exposes endpoint which could be accessed from internet.",
                  "type": "boolean",
                  "default": false
                },
                "publicEndpointUrl": {
                  "description": "URL of the App in vnet injection instance which could be accessed from internet",
                  "type": "string",
                  "readOnly": true
                }
              }
            },
            "ingressSettings": {
              "description": "App ingress settings payload.",
              "type": "object",
              "properties": {
                "readTimeoutInSeconds": {
                  "format": "int32",
                  "description": "Ingress read time out in seconds.",
                  "type": "integer"
                },
                "sendTimeoutInSeconds": {
                  "format": "int32",
                  "description": "Ingress send time out in seconds.",
                  "type": "integer"
                },
                "sessionAffinity": {
                  "description": "Type of the affinity, set this to Cookie to enable session affinity.",
                  "enum": [
                    "Cookie",
                    "None"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "SessionAffinity",
                    "modelAsString": true
                  }
                },
                "sessionCookieMaxAge": {
                  "description": "Time in seconds until the cookie expires.",
                  "format": "int32",
                  "type": "integer"
                },
                "backendProtocol": {
                  "description": "How ingress should communicate with this app backend service.",
                  "enum": [
                    "GRPC",
                    "Default"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "BackendProtocol",
                    "modelAsString": true
                  }
                },
                "clientAuth": {
                  "description": "Client-Certification Authentication.",
                  "type": "object",
                  "properties": {
                    "certificates": {
                      "description": "Collection of certificate resource id.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "identity": {
          "description": "The Managed Identity type of the app resource",
          "type": "object",
          "properties": {
            "type": {
              "description": "Type of the managed identity",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ManagedIdentityType",
                "modelAsString": true
              }
            },
            "principalId": {
              "description": "Principal Id of system-assigned managed identity.",
              "type": "string"
            },
            "tenantId": {
              "description": "Tenant Id of system-assigned managed identity.",
              "type": "string"
            },
            "userAssignedIdentities": {
              "description": "Properties of user-assigned managed identities",
              "type": "object",
              "additionalProperties": {
                "description": "The details of the user-assigned managed identity assigned to an App.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "description": "Principal Id of user-assigned managed identity.",
                    "type": "string",
                    "readOnly": true
                  },
                  "clientId": {
                    "description": "Client Id of user-assigned managed identity.",
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            }
          }
        },
        "location": {
          "description": "The GEO location of the application, always the same with its parent resource",
          "type": "string"
        }
      }
    },
    "ProxyResource": {
      "description": "The resource model definition for a ARM proxy resource. It will have everything other than required location and tags.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        }
      }
    },
    "AppResourceProperties": {
      "description": "App resource properties payload",
      "type": "object",
      "properties": {
        "public": {
          "description": "Indicates whether the App exposes public endpoint",
          "type": "boolean"
        },
        "url": {
          "description": "URL of the App",
          "type": "string",
          "readOnly": true
        },
        "addonConfigs": {
          "description": "Collection of addons",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "provisioningState": {
          "description": "Provisioning state of the App",
          "enum": [
            "Succeeded",
            "Failed",
            "Creating",
            "Updating",
            "Deleting"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "AppResourceProvisioningState",
            "modelAsString": true
          }
        },
        "fqdn": {
          "description": "Fully qualified dns Name.",
          "type": "string",
          "readOnly": true
        },
        "httpsOnly": {
          "description": "Indicate if only https is allowed.",
          "type": "boolean",
          "default": false
        },
        "temporaryDisk": {
          "description": "Temporary disk settings",
          "type": "object",
          "properties": {
            "sizeInGB": {
              "format": "int32",
              "description": "Size of the temporary disk in GB",
              "maximum": 5,
              "minimum": 0,
              "type": "integer"
            },
            "mountPath": {
              "description": "Mount path of the temporary disk",
              "type": "string",
              "default": "/tmp"
            }
          }
        },
        "persistentDisk": {
          "description": "Persistent disk settings",
          "type": "object",
          "properties": {
            "sizeInGB": {
              "format": "int32",
              "description": "Size of the persistent disk in GB",
              "maximum": 50,
              "minimum": 0,
              "type": "integer"
            },
            "usedInGB": {
              "format": "int32",
              "description": "Size of the used persistent disk in GB",
              "maximum": 50,
              "minimum": 0,
              "type": "integer",
              "readOnly": true
            },
            "mountPath": {
              "description": "Mount path of the persistent disk",
              "type": "string"
            }
          }
        },
        "customPersistentDisks": {
          "description": "List of custom persistent disks",
          "type": "array",
          "items": {
            "description": "Custom persistent disk resource payload.",
            "type": "object",
            "required": [
              "storageId"
            ],
            "properties": {
              "customPersistentDiskProperties": {
                "description": "Properties of the custom persistent disk resource payload.",
                "x-ms-client-flatten": false,
                "required": [
                  "type",
                  "mountPath"
                ],
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type of the underlying resource to mount as a persistent disk.",
                    "enum": [
                      "AzureFileVolume"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "Type",
                      "modelAsString": true
                    }
                  },
                  "mountPath": {
                    "description": "The mount path of the persistent disk.",
                    "type": "string"
                  },
                  "readOnly": {
                    "description": "Indicates whether the persistent disk is a readOnly one.",
                    "type": "boolean"
                  },
                  "enableSubPath": {
                    "description": "If set to true, it will create and mount a dedicated directory for every individual app instance.",
                    "type": "boolean",
                    "default": false
                  },
                  "mountOptions": {
                    "description": "These are the mount options for a persistent disk.",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "discriminator": "type"
              },
              "storageId": {
                "description": "The resource id of Azure Spring Apps Storage resource.",
                "type": "string"
              }
            }
          }
        },
        "enableEndToEndTLS": {
          "description": "Indicate if end to end TLS is enabled.",
          "type": "boolean",
          "default": false
        },
        "loadedCertificates": {
          "description": "Collection of loaded certificates",
          "type": "array",
          "items": {
            "description": "Loaded certificate payload",
            "required": [
              "resourceId"
            ],
            "type": "object",
            "properties": {
              "resourceId": {
                "description": "Resource Id of loaded certificate",
                "type": "string"
              },
              "loadTrustStore": {
                "description": "Indicate whether the certificate will be loaded into default trust store, only work for Java runtime.",
                "type": "boolean",
                "default": false
              }
            }
          }
        },
        "vnetAddons": {
          "description": "Additional App settings in vnet injection instance",
          "type": "object",
          "properties": {
            "publicEndpoint": {
              "description": "Indicates whether the App in vnet injection instance exposes endpoint which could be accessed from internet.",
              "type": "boolean",
              "default": false
            },
            "publicEndpointUrl": {
              "description": "URL of the App in vnet injection instance which could be accessed from internet",
              "type": "string",
              "readOnly": true
            }
          }
        },
        "ingressSettings": {
          "description": "App ingress settings payload.",
          "type": "object",
          "properties": {
            "readTimeoutInSeconds": {
              "format": "int32",
              "description": "Ingress read time out in seconds.",
              "type": "integer"
            },
            "sendTimeoutInSeconds": {
              "format": "int32",
              "description": "Ingress send time out in seconds.",
              "type": "integer"
            },
            "sessionAffinity": {
              "description": "Type of the affinity, set this to Cookie to enable session affinity.",
              "enum": [
                "Cookie",
                "None"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SessionAffinity",
                "modelAsString": true
              }
            },
            "sessionCookieMaxAge": {
              "description": "Time in seconds until the cookie expires.",
              "format": "int32",
              "type": "integer"
            },
            "backendProtocol": {
              "description": "How ingress should communicate with this app backend service.",
              "enum": [
                "GRPC",
                "Default"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "BackendProtocol",
                "modelAsString": true
              }
            },
            "clientAuth": {
              "description": "Client-Certification Authentication.",
              "type": "object",
              "properties": {
                "certificates": {
                  "description": "Collection of certificate resource id.",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "TemporaryDisk": {
      "description": "Temporary disk payload",
      "type": "object",
      "properties": {
        "sizeInGB": {
          "format": "int32",
          "description": "Size of the temporary disk in GB",
          "maximum": 5,
          "minimum": 0,
          "type": "integer"
        },
        "mountPath": {
          "description": "Mount path of the temporary disk",
          "type": "string",
          "default": "/tmp"
        }
      }
    },
    "PersistentDisk": {
      "description": "Persistent disk payload",
      "type": "object",
      "properties": {
        "sizeInGB": {
          "format": "int32",
          "description": "Size of the persistent disk in GB",
          "maximum": 50,
          "minimum": 0,
          "type": "integer"
        },
        "usedInGB": {
          "format": "int32",
          "description": "Size of the used persistent disk in GB",
          "maximum": 50,
          "minimum": 0,
          "type": "integer",
          "readOnly": true
        },
        "mountPath": {
          "description": "Mount path of the persistent disk",
          "type": "string"
        }
      }
    },
    "LoadedCertificate": {
      "description": "Loaded certificate payload",
      "required": [
        "resourceId"
      ],
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "Resource Id of loaded certificate",
          "type": "string"
        },
        "loadTrustStore": {
          "description": "Indicate whether the certificate will be loaded into default trust store, only work for Java runtime.",
          "type": "boolean",
          "default": false
        }
      }
    },
    "LoadedCertificateCollection": {
      "description": "Collection of loaded certificate resources list and a possible link for next page.",
      "type": "array",
      "items": {
        "description": "Loaded certificate payload",
        "required": [
          "resourceId"
        ],
        "type": "object",
        "properties": {
          "resourceId": {
            "description": "Resource Id of loaded certificate",
            "type": "string"
          },
          "loadTrustStore": {
            "description": "Indicate whether the certificate will be loaded into default trust store, only work for Java runtime.",
            "type": "boolean",
            "default": false
          }
        }
      }
    },
    "AppVNetAddons": {
      "description": "Additional App settings in vnet injection instance",
      "type": "object",
      "properties": {
        "publicEndpoint": {
          "description": "Indicates whether the App in vnet injection instance exposes endpoint which could be accessed from internet.",
          "type": "boolean",
          "default": false
        },
        "publicEndpointUrl": {
          "description": "URL of the App in vnet injection instance which could be accessed from internet",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IngressSettings": {
      "description": "App ingress settings payload.",
      "type": "object",
      "properties": {
        "readTimeoutInSeconds": {
          "format": "int32",
          "description": "Ingress read time out in seconds.",
          "type": "integer"
        },
        "sendTimeoutInSeconds": {
          "format": "int32",
          "description": "Ingress send time out in seconds.",
          "type": "integer"
        },
        "sessionAffinity": {
          "description": "Type of the affinity, set this to Cookie to enable session affinity.",
          "enum": [
            "Cookie",
            "None"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SessionAffinity",
            "modelAsString": true
          }
        },
        "sessionCookieMaxAge": {
          "description": "Time in seconds until the cookie expires.",
          "format": "int32",
          "type": "integer"
        },
        "backendProtocol": {
          "description": "How ingress should communicate with this app backend service.",
          "enum": [
            "GRPC",
            "Default"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BackendProtocol",
            "modelAsString": true
          }
        },
        "clientAuth": {
          "description": "Client-Certification Authentication.",
          "type": "object",
          "properties": {
            "certificates": {
              "description": "Collection of certificate resource id.",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "AppResourceCollection": {
      "description": "Object that includes an array of App resources and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of App resources",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "App resource payload",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified resource Id for the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "lastModifiedByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource modification (UTC).",
                    "type": "string"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "Properties of the App resource",
                "x-ms-client-flatten": false,
                "type": "object",
                "properties": {
                  "public": {
                    "description": "Indicates whether the App exposes public endpoint",
                    "type": "boolean"
                  },
                  "url": {
                    "description": "URL of the App",
                    "type": "string",
                    "readOnly": true
                  },
                  "addonConfigs": {
                    "description": "Collection of addons",
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the App",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Creating",
                      "Updating",
                      "Deleting"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "AppResourceProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "fqdn": {
                    "description": "Fully qualified dns Name.",
                    "type": "string",
                    "readOnly": true
                  },
                  "httpsOnly": {
                    "description": "Indicate if only https is allowed.",
                    "type": "boolean",
                    "default": false
                  },
                  "temporaryDisk": {
                    "description": "Temporary disk settings",
                    "type": "object",
                    "properties": {
                      "sizeInGB": {
                        "format": "int32",
                        "description": "Size of the temporary disk in GB",
                        "maximum": 5,
                        "minimum": 0,
                        "type": "integer"
                      },
                      "mountPath": {
                        "description": "Mount path of the temporary disk",
                        "type": "string",
                        "default": "/tmp"
                      }
                    }
                  },
                  "persistentDisk": {
                    "description": "Persistent disk settings",
                    "type": "object",
                    "properties": {
                      "sizeInGB": {
                        "format": "int32",
                        "description": "Size of the persistent disk in GB",
                        "maximum": 50,
                        "minimum": 0,
                        "type": "integer"
                      },
                      "usedInGB": {
                        "format": "int32",
                        "description": "Size of the used persistent disk in GB",
                        "maximum": 50,
                        "minimum": 0,
                        "type": "integer",
                        "readOnly": true
                      },
                      "mountPath": {
                        "description": "Mount path of the persistent disk",
                        "type": "string"
                      }
                    }
                  },
                  "customPersistentDisks": {
                    "description": "List of custom persistent disks",
                    "type": "array",
                    "items": {
                      "description": "Custom persistent disk resource payload.",
                      "type": "object",
                      "required": [
                        "storageId"
                      ],
                      "properties": {
                        "customPersistentDiskProperties": {
                          "description": "Properties of the custom persistent disk resource payload.",
                          "x-ms-client-flatten": false,
                          "required": [
                            "type",
                            "mountPath"
                          ],
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The type of the underlying resource to mount as a persistent disk.",
                              "enum": [
                                "AzureFileVolume"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "Type",
                                "modelAsString": true
                              }
                            },
                            "mountPath": {
                              "description": "The mount path of the persistent disk.",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "Indicates whether the persistent disk is a readOnly one.",
                              "type": "boolean"
                            },
                            "enableSubPath": {
                              "description": "If set to true, it will create and mount a dedicated directory for every individual app instance.",
                              "type": "boolean",
                              "default": false
                            },
                            "mountOptions": {
                              "description": "These are the mount options for a persistent disk.",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "discriminator": "type"
                        },
                        "storageId": {
                          "description": "The resource id of Azure Spring Apps Storage resource.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "enableEndToEndTLS": {
                    "description": "Indicate if end to end TLS is enabled.",
                    "type": "boolean",
                    "default": false
                  },
                  "loadedCertificates": {
                    "description": "Collection of loaded certificates",
                    "type": "array",
                    "items": {
                      "description": "Loaded certificate payload",
                      "required": [
                        "resourceId"
                      ],
                      "type": "object",
                      "properties": {
                        "resourceId": {
                          "description": "Resource Id of loaded certificate",
                          "type": "string"
                        },
                        "loadTrustStore": {
                          "description": "Indicate whether the certificate will be loaded into default trust store, only work for Java runtime.",
                          "type": "boolean",
                          "default": false
                        }
                      }
                    }
                  },
                  "vnetAddons": {
                    "description": "Additional App settings in vnet injection instance",
                    "type": "object",
                    "properties": {
                      "publicEndpoint": {
                        "description": "Indicates whether the App in vnet injection instance exposes endpoint which could be accessed from internet.",
                        "type": "boolean",
                        "default": false
                      },
                      "publicEndpointUrl": {
                        "description": "URL of the App in vnet injection instance which could be accessed from internet",
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  },
                  "ingressSettings": {
                    "description": "App ingress settings payload.",
                    "type": "object",
                    "properties": {
                      "readTimeoutInSeconds": {
                        "format": "int32",
                        "description": "Ingress read time out in seconds.",
                        "type": "integer"
                      },
                      "sendTimeoutInSeconds": {
                        "format": "int32",
                        "description": "Ingress send time out in seconds.",
                        "type": "integer"
                      },
                      "sessionAffinity": {
                        "description": "Type of the affinity, set this to Cookie to enable session affinity.",
                        "enum": [
                          "Cookie",
                          "None"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "SessionAffinity",
                          "modelAsString": true
                        }
                      },
                      "sessionCookieMaxAge": {
                        "description": "Time in seconds until the cookie expires.",
                        "format": "int32",
                        "type": "integer"
                      },
                      "backendProtocol": {
                        "description": "How ingress should communicate with this app backend service.",
                        "enum": [
                          "GRPC",
                          "Default"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "BackendProtocol",
                          "modelAsString": true
                        }
                      },
                      "clientAuth": {
                        "description": "Client-Certification Authentication.",
                        "type": "object",
                        "properties": {
                          "certificates": {
                            "description": "Collection of certificate resource id.",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "identity": {
                "description": "The Managed Identity type of the app resource",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "Type of the managed identity",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned,UserAssigned"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "ManagedIdentityType",
                      "modelAsString": true
                    }
                  },
                  "principalId": {
                    "description": "Principal Id of system-assigned managed identity.",
                    "type": "string"
                  },
                  "tenantId": {
                    "description": "Tenant Id of system-assigned managed identity.",
                    "type": "string"
                  },
                  "userAssignedIdentities": {
                    "description": "Properties of user-assigned managed identities",
                    "type": "object",
                    "additionalProperties": {
                      "description": "The details of the user-assigned managed identity assigned to an App.",
                      "type": "object",
                      "properties": {
                        "principalId": {
                          "description": "Principal Id of user-assigned managed identity.",
                          "type": "string",
                          "readOnly": true
                        },
                        "clientId": {
                          "description": "Client Id of user-assigned managed identity.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    }
                  }
                }
              },
              "location": {
                "description": "The GEO location of the application, always the same with its parent resource",
                "type": "string"
              }
            }
          }
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "ActiveDeploymentCollection": {
      "description": "Object that includes an array of Deployment resource name and set them as active.",
      "type": "object",
      "properties": {
        "activeDeploymentNames": {
          "description": "Collection of Deployment name.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ResourceUploadDefinition": {
      "description": "Resource upload definition payload",
      "type": "object",
      "properties": {
        "relativePath": {
          "description": "Source relative path",
          "type": "string"
        },
        "uploadUrl": {
          "description": "Upload URL",
          "type": "string"
        }
      }
    },
    "BindingResource": {
      "description": "Binding resource payload",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the Binding resource",
          "x-ms-client-flatten": false,
          "type": "object",
          "properties": {
            "resourceName": {
              "description": "The name of the bound resource",
              "type": "string",
              "readOnly": true
            },
            "resourceType": {
              "description": "The standard Azure resource type of the bound resource",
              "type": "string",
              "readOnly": true
            },
            "resourceId": {
              "description": "The Azure resource id of the bound resource",
              "type": "string"
            },
            "key": {
              "description": "The key of the bound resource",
              "type": "string"
            },
            "bindingParameters": {
              "description": "Binding parameters of the Binding resource",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "generatedProperties": {
              "description": "The generated Spring Boot property file for this binding. The secret will be deducted.",
              "type": "string",
              "readOnly": true
            },
            "createdAt": {
              "description": "Creation time of the Binding resource",
              "type": "string",
              "readOnly": true
            },
            "updatedAt": {
              "description": "Update time of the Binding resource",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "BindingResourceProperties": {
      "description": "Binding resource properties payload",
      "type": "object",
      "properties": {
        "resourceName": {
          "description": "The name of the bound resource",
          "type": "string",
          "readOnly": true
        },
        "resourceType": {
          "description": "The standard Azure resource type of the bound resource",
          "type": "string",
          "readOnly": true
        },
        "resourceId": {
          "description": "The Azure resource id of the bound resource",
          "type": "string"
        },
        "key": {
          "description": "The key of the bound resource",
          "type": "string"
        },
        "bindingParameters": {
          "description": "Binding parameters of the Binding resource",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "generatedProperties": {
          "description": "The generated Spring Boot property file for this binding. The secret will be deducted.",
          "type": "string",
          "readOnly": true
        },
        "createdAt": {
          "description": "Creation time of the Binding resource",
          "type": "string",
          "readOnly": true
        },
        "updatedAt": {
          "description": "Update time of the Binding resource",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "BindingResourceCollection": {
      "description": "Object that includes an array of Binding resources and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of Binding resources",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Binding resource payload",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified resource Id for the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "lastModifiedByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource modification (UTC).",
                    "type": "string"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "Properties of the Binding resource",
                "x-ms-client-flatten": false,
                "type": "object",
                "properties": {
                  "resourceName": {
                    "description": "The name of the bound resource",
                    "type": "string",
                    "readOnly": true
                  },
                  "resourceType": {
                    "description": "The standard Azure resource type of the bound resource",
                    "type": "string",
                    "readOnly": true
                  },
                  "resourceId": {
                    "description": "The Azure resource id of the bound resource",
                    "type": "string"
                  },
                  "key": {
                    "description": "The key of the bound resource",
                    "type": "string"
                  },
                  "bindingParameters": {
                    "description": "Binding parameters of the Binding resource",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "generatedProperties": {
                    "description": "The generated Spring Boot property file for this binding. The secret will be deducted.",
                    "type": "string",
                    "readOnly": true
                  },
                  "createdAt": {
                    "description": "Creation time of the Binding resource",
                    "type": "string",
                    "readOnly": true
                  },
                  "updatedAt": {
                    "description": "Update time of the Binding resource",
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "CertificateResource": {
      "description": "Certificate resource payload.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the certificate resource payload.",
          "x-ms-client-flatten": false,
          "required": [
            "type"
          ],
          "type": "object",
          "properties": {
            "type": {
              "description": "The type of the certificate source.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "thumbprint": {
              "description": "The thumbprint of certificate.",
              "type": "string",
              "readOnly": true
            },
            "issuer": {
              "description": "The issuer of certificate.",
              "type": "string",
              "readOnly": true
            },
            "issuedDate": {
              "description": "The issue date of certificate.",
              "type": "string",
              "readOnly": true
            },
            "expirationDate": {
              "description": "The expiration date of certificate.",
              "type": "string",
              "readOnly": true
            },
            "activateDate": {
              "description": "The activate date of certificate.",
              "type": "string",
              "readOnly": true
            },
            "subjectName": {
              "description": "The subject name of certificate.",
              "type": "string",
              "readOnly": true
            },
            "dnsNames": {
              "description": "The domain list of certificate.",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state of the Certificate",
              "enum": [
                "Creating",
                "Updating",
                "Succeeded",
                "Failed",
                "Deleting"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "CertificateResourceProvisioningState",
                "modelAsString": true
              }
            }
          },
          "discriminator": "type"
        }
      }
    },
    "CertificateProperties": {
      "description": "Certificate resource payload.",
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of the certificate source.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "thumbprint": {
          "description": "The thumbprint of certificate.",
          "type": "string",
          "readOnly": true
        },
        "issuer": {
          "description": "The issuer of certificate.",
          "type": "string",
          "readOnly": true
        },
        "issuedDate": {
          "description": "The issue date of certificate.",
          "type": "string",
          "readOnly": true
        },
        "expirationDate": {
          "description": "The expiration date of certificate.",
          "type": "string",
          "readOnly": true
        },
        "activateDate": {
          "description": "The activate date of certificate.",
          "type": "string",
          "readOnly": true
        },
        "subjectName": {
          "description": "The subject name of certificate.",
          "type": "string",
          "readOnly": true
        },
        "dnsNames": {
          "description": "The domain list of certificate.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of the Certificate",
          "enum": [
            "Creating",
            "Updating",
            "Succeeded",
            "Failed",
            "Deleting"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "CertificateResourceProvisioningState",
            "modelAsString": true
          }
        }
      },
      "discriminator": "type"
    },
    "KeyVaultCertificateProperties": {
      "description": "Properties of certificate imported from key vault.",
      "required": [
        "type",
        "vaultUri",
        "keyVaultCertName"
      ],
      "type": "object",
      "allOf": [
        {
          "description": "Certificate resource payload.",
          "required": [
            "type"
          ],
          "type": "object",
          "properties": {
            "type": {
              "description": "The type of the certificate source.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "thumbprint": {
              "description": "The thumbprint of certificate.",
              "type": "string",
              "readOnly": true
            },
            "issuer": {
              "description": "The issuer of certificate.",
              "type": "string",
              "readOnly": true
            },
            "issuedDate": {
              "description": "The issue date of certificate.",
              "type": "string",
              "readOnly": true
            },
            "expirationDate": {
              "description": "The expiration date of certificate.",
              "type": "string",
              "readOnly": true
            },
            "activateDate": {
              "description": "The activate date of certificate.",
              "type": "string",
              "readOnly": true
            },
            "subjectName": {
              "description": "The subject name of certificate.",
              "type": "string",
              "readOnly": true
            },
            "dnsNames": {
              "description": "The domain list of certificate.",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state of the Certificate",
              "enum": [
                "Creating",
                "Updating",
                "Succeeded",
                "Failed",
                "Deleting"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "CertificateResourceProvisioningState",
                "modelAsString": true
              }
            }
          },
          "discriminator": "type"
        }
      ],
      "properties": {
        "vaultUri": {
          "description": "The vault uri of user key vault.",
          "type": "string"
        },
        "keyVaultCertName": {
          "description": "The certificate name of key vault.",
          "type": "string"
        },
        "certVersion": {
          "description": "The certificate version of key vault.",
          "type": "string"
        },
        "excludePrivateKey": {
          "description": "Optional. If set to true, it will not import private key from key vault.",
          "type": "boolean",
          "default": false
        },
        "autoSync": {
          "description": "Indicates whether to automatically synchronize certificate from key vault or not.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "default": "Disabled",
          "type": "string",
          "x-ms-enum": {
            "name": "KeyVaultCertificateAutoSync",
            "modelAsString": true
          }
        }
      },
      "x-ms-discriminator-value": "KeyVaultCertificate"
    },
    "ContentCertificateProperties": {
      "description": "Properties of certificate imported from key vault.",
      "required": [
        "type"
      ],
      "type": "object",
      "allOf": [
        {
          "description": "Certificate resource payload.",
          "required": [
            "type"
          ],
          "type": "object",
          "properties": {
            "type": {
              "description": "The type of the certificate source.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "thumbprint": {
              "description": "The thumbprint of certificate.",
              "type": "string",
              "readOnly": true
            },
            "issuer": {
              "description": "The issuer of certificate.",
              "type": "string",
              "readOnly": true
            },
            "issuedDate": {
              "description": "The issue date of certificate.",
              "type": "string",
              "readOnly": true
            },
            "expirationDate": {
              "description": "The expiration date of certificate.",
              "type": "string",
              "readOnly": true
            },
            "activateDate": {
              "description": "The activate date of certificate.",
              "type": "string",
              "readOnly": true
            },
            "subjectName": {
              "description": "The subject name of certificate.",
              "type": "string",
              "readOnly": true
            },
            "dnsNames": {
              "description": "The domain list of certificate.",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state of the Certificate",
              "enum": [
                "Creating",
                "Updating",
                "Succeeded",
                "Failed",
                "Deleting"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "CertificateResourceProvisioningState",
                "modelAsString": true
              }
            }
          },
          "discriminator": "type"
        }
      ],
      "properties": {
        "content": {
          "description": "The content of uploaded certificate.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        }
      },
      "x-ms-discriminator-value": "ContentCertificate"
    },
    "CertificateResourceCollection": {
      "description": "Collection compose of certificate resources list and a possible link for next page.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The certificate resources list.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Certificate resource payload.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified resource Id for the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "lastModifiedByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource modification (UTC).",
                    "type": "string"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "Properties of the certificate resource payload.",
                "x-ms-client-flatten": false,
                "required": [
                  "type"
                ],
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type of the certificate source.",
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "thumbprint": {
                    "description": "The thumbprint of certificate.",
                    "type": "string",
                    "readOnly": true
                  },
                  "issuer": {
                    "description": "The issuer of certificate.",
                    "type": "string",
                    "readOnly": true
                  },
                  "issuedDate": {
                    "description": "The issue date of certificate.",
                    "type": "string",
                    "readOnly": true
                  },
                  "expirationDate": {
                    "description": "The expiration date of certificate.",
                    "type": "string",
                    "readOnly": true
                  },
                  "activateDate": {
                    "description": "The activate date of certificate.",
                    "type": "string",
                    "readOnly": true
                  },
                  "subjectName": {
                    "description": "The subject name of certificate.",
                    "type": "string",
                    "readOnly": true
                  },
                  "dnsNames": {
                    "description": "The domain list of certificate.",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the Certificate",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Succeeded",
                      "Failed",
                      "Deleting"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "CertificateResourceProvisioningState",
                      "modelAsString": true
                    }
                  }
                },
                "discriminator": "type"
              }
            }
          }
        },
        "nextLink": {
          "description": "The link to next page of certificate list.",
          "type": "string"
        }
      }
    },
    "StorageResource": {
      "description": "Storage resource payload.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the storage resource payload.",
          "x-ms-client-flatten": false,
          "type": "object",
          "required": [
            "storageType"
          ],
          "properties": {
            "storageType": {
              "description": "The type of the storage.",
              "enum": [
                "StorageAccount"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "StorageType",
                "modelAsString": true
              }
            }
          },
          "discriminator": "storageType"
        }
      }
    },
    "StorageProperties": {
      "description": "Storage resource payload.",
      "type": "object",
      "required": [
        "storageType"
      ],
      "properties": {
        "storageType": {
          "description": "The type of the storage.",
          "enum": [
            "StorageAccount"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "StorageType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "storageType"
    },
    "StorageAccount": {
      "description": "storage resource of type Azure Storage Account.",
      "type": "object",
      "required": [
        "storageType",
        "accountName",
        "accountKey"
      ],
      "allOf": [
        {
          "description": "Storage resource payload.",
          "type": "object",
          "required": [
            "storageType"
          ],
          "properties": {
            "storageType": {
              "description": "The type of the storage.",
              "enum": [
                "StorageAccount"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "StorageType",
                "modelAsString": true
              }
            }
          },
          "discriminator": "storageType"
        }
      ],
      "properties": {
        "accountName": {
          "description": "The account name of the Azure Storage Account.",
          "type": "string"
        },
        "accountKey": {
          "description": "The account key of the Azure Storage Account.",
          "type": "string",
          "x-ms-secret": true,
          "x-ms-mutability": [
            "create",
            "update"
          ]
        }
      },
      "x-ms-discriminator-value": "StorageAccount"
    },
    "StorageResourceCollection": {
      "description": "Collection compose of storage resources list and a possible link for next page.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The storage resources list.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Storage resource payload.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified resource Id for the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "lastModifiedByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource modification (UTC).",
                    "type": "string"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "Properties of the storage resource payload.",
                "x-ms-client-flatten": false,
                "type": "object",
                "required": [
                  "storageType"
                ],
                "properties": {
                  "storageType": {
                    "description": "The type of the storage.",
                    "enum": [
                      "StorageAccount"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "StorageType",
                      "modelAsString": true
                    }
                  }
                },
                "discriminator": "storageType"
              }
            }
          }
        },
        "nextLink": {
          "description": "The link to next page of storage list.",
          "type": "string"
        }
      }
    },
    "CustomPersistentDiskResource": {
      "description": "Custom persistent disk resource payload.",
      "type": "object",
      "required": [
        "storageId"
      ],
      "properties": {
        "customPersistentDiskProperties": {
          "description": "Properties of the custom persistent disk resource payload.",
          "x-ms-client-flatten": false,
          "required": [
            "type",
            "mountPath"
          ],
          "type": "object",
          "properties": {
            "type": {
              "description": "The type of the underlying resource to mount as a persistent disk.",
              "enum": [
                "AzureFileVolume"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "Type",
                "modelAsString": true
              }
            },
            "mountPath": {
              "description": "The mount path of the persistent disk.",
              "type": "string"
            },
            "readOnly": {
              "description": "Indicates whether the persistent disk is a readOnly one.",
              "type": "boolean"
            },
            "enableSubPath": {
              "description": "If set to true, it will create and mount a dedicated directory for every individual app instance.",
              "type": "boolean",
              "default": false
            },
            "mountOptions": {
              "description": "These are the mount options for a persistent disk.",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "discriminator": "type"
        },
        "storageId": {
          "description": "The resource id of Azure Spring Apps Storage resource.",
          "type": "string"
        }
      }
    },
    "CustomPersistentDiskProperties": {
      "description": "Custom persistent disk resource payload.",
      "required": [
        "type",
        "mountPath"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of the underlying resource to mount as a persistent disk.",
          "enum": [
            "AzureFileVolume"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "Type",
            "modelAsString": true
          }
        },
        "mountPath": {
          "description": "The mount path of the persistent disk.",
          "type": "string"
        },
        "readOnly": {
          "description": "Indicates whether the persistent disk is a readOnly one.",
          "type": "boolean"
        },
        "enableSubPath": {
          "description": "If set to true, it will create and mount a dedicated directory for every individual app instance.",
          "type": "boolean",
          "default": false
        },
        "mountOptions": {
          "description": "These are the mount options for a persistent disk.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "discriminator": "type"
    },
    "CustomPersistentDiskCollection": {
      "description": "Collection of persistent disk resources list and a possible link for next page.",
      "type": "array",
      "items": {
        "description": "Custom persistent disk resource payload.",
        "type": "object",
        "required": [
          "storageId"
        ],
        "properties": {
          "customPersistentDiskProperties": {
            "description": "Properties of the custom persistent disk resource payload.",
            "x-ms-client-flatten": false,
            "required": [
              "type",
              "mountPath"
            ],
            "type": "object",
            "properties": {
              "type": {
                "description": "The type of the underlying resource to mount as a persistent disk.",
                "enum": [
                  "AzureFileVolume"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "Type",
                  "modelAsString": true
                }
              },
              "mountPath": {
                "description": "The mount path of the persistent disk.",
                "type": "string"
              },
              "readOnly": {
                "description": "Indicates whether the persistent disk is a readOnly one.",
                "type": "boolean"
              },
              "enableSubPath": {
                "description": "If set to true, it will create and mount a dedicated directory for every individual app instance.",
                "type": "boolean",
                "default": false
              },
              "mountOptions": {
                "description": "These are the mount options for a persistent disk.",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "discriminator": "type"
          },
          "storageId": {
            "description": "The resource id of Azure Spring Apps Storage resource.",
            "type": "string"
          }
        }
      }
    },
    "AzureFileVolume": {
      "description": "The properties of the Azure File volume. Azure File shares are mounted as volumes.",
      "type": "object",
      "required": [
        "type",
        "mountPath"
      ],
      "allOf": [
        {
          "description": "Custom persistent disk resource payload.",
          "required": [
            "type",
            "mountPath"
          ],
          "type": "object",
          "properties": {
            "type": {
              "description": "The type of the underlying resource to mount as a persistent disk.",
              "enum": [
                "AzureFileVolume"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "Type",
                "modelAsString": true
              }
            },
            "mountPath": {
              "description": "The mount path of the persistent disk.",
              "type": "string"
            },
            "readOnly": {
              "description": "Indicates whether the persistent disk is a readOnly one.",
              "type": "boolean"
            },
            "enableSubPath": {
              "description": "If set to true, it will create and mount a dedicated directory for every individual app instance.",
              "type": "boolean",
              "default": false
            },
            "mountOptions": {
              "description": "These are the mount options for a persistent disk.",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "discriminator": "type"
        }
      ],
      "properties": {
        "shareName": {
          "description": "The share name of the Azure File share.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "AzureFileVolume"
    },
    "NameAvailabilityParameters": {
      "description": "Name availability parameters payload",
      "required": [
        "type",
        "name"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of the resource to check name availability",
          "type": "string"
        },
        "name": {
          "description": "Name to be checked",
          "type": "string"
        }
      }
    },
    "NameAvailability": {
      "description": "Name availability result payload",
      "type": "object",
      "properties": {
        "nameAvailable": {
          "description": "Indicates whether the name is available",
          "type": "boolean"
        },
        "reason": {
          "description": "Reason why the name is not available",
          "type": "string"
        },
        "message": {
          "description": "Message why the name is not available",
          "type": "string"
        }
      },
      "readOnly": true
    },
    "CustomDomainResource": {
      "description": "Custom domain resource payload.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the custom domain resource.",
          "x-ms-client-flatten": false,
          "type": "object",
          "properties": {
            "thumbprint": {
              "description": "The thumbprint of bound certificate.",
              "type": "string"
            },
            "appName": {
              "description": "The app name of domain.",
              "type": "string",
              "readOnly": true
            },
            "certName": {
              "description": "The bound certificate name of domain.",
              "type": "string"
            },
            "provisioningState": {
              "description": "Provisioning state of the Domain",
              "enum": [
                "Creating",
                "Updating",
                "Succeeded",
                "Failed",
                "Deleting"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "CustomDomainResourceProvisioningState",
                "modelAsString": true
              }
            }
          }
        }
      }
    },
    "CustomDomainProperties": {
      "description": "Custom domain of app resource payload.",
      "type": "object",
      "properties": {
        "thumbprint": {
          "description": "The thumbprint of bound certificate.",
          "type": "string"
        },
        "appName": {
          "description": "The app name of domain.",
          "type": "string",
          "readOnly": true
        },
        "certName": {
          "description": "The bound certificate name of domain.",
          "type": "string"
        },
        "provisioningState": {
          "description": "Provisioning state of the Domain",
          "enum": [
            "Creating",
            "Updating",
            "Succeeded",
            "Failed",
            "Deleting"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "CustomDomainResourceProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "CustomDomainResourceCollection": {
      "description": "Collection compose of a custom domain resources list and a possible link for next page.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The custom domain resources list.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Custom domain resource payload.",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified resource Id for the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "lastModifiedByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource modification (UTC).",
                    "type": "string"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "Properties of the custom domain resource.",
                "x-ms-client-flatten": false,
                "type": "object",
                "properties": {
                  "thumbprint": {
                    "description": "The thumbprint of bound certificate.",
                    "type": "string"
                  },
                  "appName": {
                    "description": "The app name of domain.",
                    "type": "string",
                    "readOnly": true
                  },
                  "certName": {
                    "description": "The bound certificate name of domain.",
                    "type": "string"
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the Domain",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Succeeded",
                      "Failed",
                      "Deleting"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "CustomDomainResourceProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "The link to next page of custom domain list.",
          "type": "string"
        }
      }
    },
    "CustomDomainValidatePayload": {
      "description": "Custom domain validate payload.",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Name to be validated",
          "type": "string"
        }
      }
    },
    "CustomDomainValidateResult": {
      "description": "Validation result for custom domain.",
      "type": "object",
      "properties": {
        "isValid": {
          "description": "Indicates if domain name is valid.",
          "type": "boolean"
        },
        "message": {
          "description": "Message of why domain name is invalid.",
          "type": "string"
        }
      }
    },
    "RemoteDebuggingPayload": {
      "description": "Remote debugging payload.",
      "type": "object",
      "properties": {
        "port": {
          "description": "Application debugging port.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RemoteDebugging": {
      "description": "Remote debugging config.",
      "type": "object",
      "properties": {
        "port": {
          "description": "Application debugging port",
          "type": "integer",
          "format": "int32"
        },
        "enabled": {
          "description": "Indicate if remote debugging is enabled",
          "type": "boolean"
        }
      }
    },
    "DeploymentResource": {
      "description": "Deployment resource payload",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the Deployment resource",
          "x-ms-client-flatten": false,
          "type": "object",
          "properties": {
            "source": {
              "description": "Uploaded source information of the deployment.",
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "description": "Type of the source uploaded",
                  "type": "string"
                },
                "version": {
                  "description": "Version of the source",
                  "type": "string"
                }
              },
              "discriminator": "type"
            },
            "deploymentSettings": {
              "description": "Deployment settings of the Deployment",
              "type": "object",
              "properties": {
                "resourceRequests": {
                  "description": "The requested resource quantity for required CPU and Memory. It is recommended that using this field to represent the required CPU and Memory, the old field cpu and memoryInGB will be deprecated later.",
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "description": "Required CPU. 1 core can be represented by 1 or 1000m. This should be 500m or 1 for Basic tier, and {500m, 1, 2, 3, 4} for Standard tier.",
                      "type": "string"
                    },
                    "memory": {
                      "description": "Required memory. 1 GB can be represented by 1Gi or 1024Mi. This should be {512Mi, 1Gi, 2Gi} for Basic tier, and {512Mi, 1Gi, 2Gi, ..., 8Gi} for Standard tier.",
                      "type": "string"
                    }
                  }
                },
                "environmentVariables": {
                  "description": "Collection of environment variables",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "apms": {
                  "description": "Collection of ApmReferences",
                  "type": "array",
                  "x-ms-identifiers": [
                    "resourceId"
                  ],
                  "items": {
                    "description": "A reference to the APM",
                    "required": [
                      "resourceId"
                    ],
                    "type": "object",
                    "properties": {
                      "resourceId": {
                        "description": "Resource Id of the APM",
                        "type": "string",
                        "format": "arm-id",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.AppPlatform/Spring/apms"
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                "addonConfigs": {
                  "description": "Collection of addons",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "livenessProbe": {
                  "description": "Periodic probe of App Instance liveness. App Instance will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                  "type": "object",
                  "required": [
                    "disableProbe"
                  ],
                  "properties": {
                    "probeAction": {
                      "description": "The action of the probe.",
                      "required": [
                        "type"
                      ],
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of the action to take to perform the health check.",
                          "enum": [
                            "HTTPGetAction",
                            "TCPSocketAction",
                            "ExecAction"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "ProbeActionType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "type"
                    },
                    "disableProbe": {
                      "description": "Indicate whether the probe is disabled.",
                      "type": "boolean",
                      "default": false
                    },
                    "initialDelaySeconds": {
                      "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                      "format": "int32",
                      "type": "integer"
                    },
                    "periodSeconds": {
                      "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "timeoutSeconds": {
                      "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "failureThreshold": {
                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "successThreshold": {
                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                      "format": "int32",
                      "type": "integer"
                    }
                  }
                },
                "readinessProbe": {
                  "description": "Periodic probe of App Instance service readiness. App Instance will be removed from service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                  "type": "object",
                  "required": [
                    "disableProbe"
                  ],
                  "properties": {
                    "probeAction": {
                      "description": "The action of the probe.",
                      "required": [
                        "type"
                      ],
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of the action to take to perform the health check.",
                          "enum": [
                            "HTTPGetAction",
                            "TCPSocketAction",
                            "ExecAction"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "ProbeActionType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "type"
                    },
                    "disableProbe": {
                      "description": "Indicate whether the probe is disabled.",
                      "type": "boolean",
                      "default": false
                    },
                    "initialDelaySeconds": {
                      "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                      "format": "int32",
                      "type": "integer"
                    },
                    "periodSeconds": {
                      "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "timeoutSeconds": {
                      "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "failureThreshold": {
                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "successThreshold": {
                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                      "format": "int32",
                      "type": "integer"
                    }
                  }
                },
                "startupProbe": {
                  "description": "StartupProbe indicates that the App Instance has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a App Instance's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                  "type": "object",
                  "required": [
                    "disableProbe"
                  ],
                  "properties": {
                    "probeAction": {
                      "description": "The action of the probe.",
                      "required": [
                        "type"
                      ],
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of the action to take to perform the health check.",
                          "enum": [
                            "HTTPGetAction",
                            "TCPSocketAction",
                            "ExecAction"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "ProbeActionType",
                            "modelAsString": true
                          }
                        }
                      },
                      "discriminator": "type"
                    },
                    "disableProbe": {
                      "description": "Indicate whether the probe is disabled.",
                      "type": "boolean",
                      "default": false
                    },
                    "initialDelaySeconds": {
                      "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                      "format": "int32",
                      "type": "integer"
                    },
                    "periodSeconds": {
                      "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "timeoutSeconds": {
                      "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "failureThreshold": {
                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "successThreshold": {
                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                      "format": "int32",
                      "type": "integer"
                    }
                  }
                },
                "terminationGracePeriodSeconds": {
                  "description": "Optional duration in seconds the App Instance needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the App Instance are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 90 seconds.",
                  "format": "int32",
                  "type": "integer",
                  "default": 90
                },
                "containerProbeSettings": {
                  "description": "Container liveness and readiness probe settings",
                  "type": "object",
                  "properties": {
                    "disableProbe": {
                      "description": "Indicates whether disable the liveness and readiness probe",
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "provisioningState": {
              "description": "Provisioning state of the Deployment",
              "enum": [
                "Creating",
                "Updating",
                "Succeeded",
                "Failed"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "DeploymentResourceProvisioningState",
                "modelAsString": true
              }
            },
            "status": {
              "description": "Status of the Deployment",
              "enum": [
                "Stopped",
                "Running"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "DeploymentResourceStatus",
                "modelAsString": true
              }
            },
            "active": {
              "description": "Indicates whether the Deployment is active",
              "type": "boolean"
            },
            "instances": {
              "description": "Collection of instances belong to the Deployment",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "description": "Deployment instance payload",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the deployment instance",
                    "type": "string",
                    "readOnly": true
                  },
                  "status": {
                    "description": "Status of the deployment instance",
                    "type": "string",
                    "readOnly": true
                  },
                  "reason": {
                    "description": "Failed reason of the deployment instance",
                    "type": "string",
                    "readOnly": true
                  },
                  "discoveryStatus": {
                    "description": "Discovery status of the deployment instance",
                    "type": "string",
                    "readOnly": true
                  },
                  "startTime": {
                    "description": "Start time of the deployment instance",
                    "type": "string",
                    "readOnly": true
                  },
                  "zone": {
                    "description": "Availability zone information of the deployment instance",
                    "type": "string",
                    "readOnly": true
                  }
                }
              },
              "readOnly": true
            }
          }
        },
        "sku": {
          "description": "Sku of the Deployment resource",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the Sku",
              "type": "string",
              "default": "S0"
            },
            "tier": {
              "description": "Tier of the Sku",
              "type": "string",
              "default": "Standard"
            },
            "capacity": {
              "format": "int32",
              "description": "Current capacity of the target resource",
              "type": "integer"
            }
          }
        }
      }
    },
    "DeploymentResourceProperties": {
      "description": "Deployment resource properties payload",
      "type": "object",
      "properties": {
        "source": {
          "description": "Uploaded source information of the deployment.",
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "description": "Type of the source uploaded",
              "type": "string"
            },
            "version": {
              "description": "Version of the source",
              "type": "string"
            }
          },
          "discriminator": "type"
        },
        "deploymentSettings": {
          "description": "Deployment settings of the Deployment",
          "type": "object",
          "properties": {
            "resourceRequests": {
              "description": "The requested resource quantity for required CPU and Memory. It is recommended that using this field to represent the required CPU and Memory, the old field cpu and memoryInGB will be deprecated later.",
              "type": "object",
              "properties": {
                "cpu": {
                  "description": "Required CPU. 1 core can be represented by 1 or 1000m. This should be 500m or 1 for Basic tier, and {500m, 1, 2, 3, 4} for Standard tier.",
                  "type": "string"
                },
                "memory": {
                  "description": "Required memory. 1 GB can be represented by 1Gi or 1024Mi. This should be {512Mi, 1Gi, 2Gi} for Basic tier, and {512Mi, 1Gi, 2Gi, ..., 8Gi} for Standard tier.",
                  "type": "string"
                }
              }
            },
            "environmentVariables": {
              "description": "Collection of environment variables",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "apms": {
              "description": "Collection of ApmReferences",
              "type": "array",
              "x-ms-identifiers": [
                "resourceId"
              ],
              "items": {
                "description": "A reference to the APM",
                "required": [
                  "resourceId"
                ],
                "type": "object",
                "properties": {
                  "resourceId": {
                    "description": "Resource Id of the APM",
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.AppPlatform/Spring/apms"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "addonConfigs": {
              "description": "Collection of addons",
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            },
            "livenessProbe": {
              "description": "Periodic probe of App Instance liveness. App Instance will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
              "type": "object",
              "required": [
                "disableProbe"
              ],
              "properties": {
                "probeAction": {
                  "description": "The action of the probe.",
                  "required": [
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of the action to take to perform the health check.",
                      "enum": [
                        "HTTPGetAction",
                        "TCPSocketAction",
                        "ExecAction"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ProbeActionType",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "type"
                },
                "disableProbe": {
                  "description": "Indicate whether the probe is disabled.",
                  "type": "boolean",
                  "default": false
                },
                "initialDelaySeconds": {
                  "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                  "format": "int32",
                  "type": "integer"
                },
                "periodSeconds": {
                  "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                  "format": "int32",
                  "type": "integer"
                },
                "timeoutSeconds": {
                  "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                  "format": "int32",
                  "type": "integer"
                },
                "failureThreshold": {
                  "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                  "format": "int32",
                  "type": "integer"
                },
                "successThreshold": {
                  "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "readinessProbe": {
              "description": "Periodic probe of App Instance service readiness. App Instance will be removed from service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
              "type": "object",
              "required": [
                "disableProbe"
              ],
              "properties": {
                "probeAction": {
                  "description": "The action of the probe.",
                  "required": [
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of the action to take to perform the health check.",
                      "enum": [
                        "HTTPGetAction",
                        "TCPSocketAction",
                        "ExecAction"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ProbeActionType",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "type"
                },
                "disableProbe": {
                  "description": "Indicate whether the probe is disabled.",
                  "type": "boolean",
                  "default": false
                },
                "initialDelaySeconds": {
                  "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                  "format": "int32",
                  "type": "integer"
                },
                "periodSeconds": {
                  "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                  "format": "int32",
                  "type": "integer"
                },
                "timeoutSeconds": {
                  "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                  "format": "int32",
                  "type": "integer"
                },
                "failureThreshold": {
                  "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                  "format": "int32",
                  "type": "integer"
                },
                "successThreshold": {
                  "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "startupProbe": {
              "description": "StartupProbe indicates that the App Instance has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a App Instance's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
              "type": "object",
              "required": [
                "disableProbe"
              ],
              "properties": {
                "probeAction": {
                  "description": "The action of the probe.",
                  "required": [
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The type of the action to take to perform the health check.",
                      "enum": [
                        "HTTPGetAction",
                        "TCPSocketAction",
                        "ExecAction"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ProbeActionType",
                        "modelAsString": true
                      }
                    }
                  },
                  "discriminator": "type"
                },
                "disableProbe": {
                  "description": "Indicate whether the probe is disabled.",
                  "type": "boolean",
                  "default": false
                },
                "initialDelaySeconds": {
                  "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                  "format": "int32",
                  "type": "integer"
                },
                "periodSeconds": {
                  "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                  "format": "int32",
                  "type": "integer"
                },
                "timeoutSeconds": {
                  "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                  "format": "int32",
                  "type": "integer"
                },
                "failureThreshold": {
                  "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                  "format": "int32",
                  "type": "integer"
                },
                "successThreshold": {
                  "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "terminationGracePeriodSeconds": {
              "description": "Optional duration in seconds the App Instance needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the App Instance are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 90 seconds.",
              "format": "int32",
              "type": "integer",
              "default": 90
            },
            "containerProbeSettings": {
              "description": "Container liveness and readiness probe settings",
              "type": "object",
              "properties": {
                "disableProbe": {
                  "description": "Indicates whether disable the liveness and readiness probe",
                  "type": "boolean"
                }
              }
            }
          }
        },
        "provisioningState": {
          "description": "Provisioning state of the Deployment",
          "enum": [
            "Creating",
            "Updating",
            "Succeeded",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "DeploymentResourceProvisioningState",
            "modelAsString": true
          }
        },
        "status": {
          "description": "Status of the Deployment",
          "enum": [
            "Stopped",
            "Running"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "DeploymentResourceStatus",
            "modelAsString": true
          }
        },
        "active": {
          "description": "Indicates whether the Deployment is active",
          "type": "boolean"
        },
        "instances": {
          "description": "Collection of instances belong to the Deployment",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Deployment instance payload",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the deployment instance",
                "type": "string",
                "readOnly": true
              },
              "status": {
                "description": "Status of the deployment instance",
                "type": "string",
                "readOnly": true
              },
              "reason": {
                "description": "Failed reason of the deployment instance",
                "type": "string",
                "readOnly": true
              },
              "discoveryStatus": {
                "description": "Discovery status of the deployment instance",
                "type": "string",
                "readOnly": true
              },
              "startTime": {
                "description": "Start time of the deployment instance",
                "type": "string",
                "readOnly": true
              },
              "zone": {
                "description": "Availability zone information of the deployment instance",
                "type": "string",
                "readOnly": true
              }
            }
          },
          "readOnly": true
        }
      }
    },
    "UserSourceInfo": {
      "description": "Source information for a deployment",
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "Type of the source uploaded",
          "type": "string"
        },
        "version": {
          "description": "Version of the source",
          "type": "string"
        }
      },
      "discriminator": "type"
    },
    "UploadedUserSourceInfo": {
      "description": "Source with uploaded location",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of the source uploaded",
          "type": "string"
        },
        "version": {
          "description": "Version of the source",
          "type": "string"
        },
        "relativePath": {
          "description": "Relative path of the storage which stores the source",
          "type": "string"
        }
      }
    },
    "JarUploadedUserSourceInfo": {
      "description": "Uploaded Jar binary for a deployment",
      "type": "object",
      "allOf": [
        {
          "description": "Source with uploaded location",
          "type": "object",
          "properties": {
            "type": {
              "description": "Type of the source uploaded",
              "type": "string"
            },
            "version": {
              "description": "Version of the source",
              "type": "string"
            },
            "relativePath": {
              "description": "Relative path of the storage which stores the source",
              "type": "string"
            }
          }
        }
      ],
      "properties": {
        "runtimeVersion": {
          "description": "Runtime version of the Jar file",
          "type": "string"
        },
        "jvmOptions": {
          "description": "JVM parameter",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "Jar"
    },
    "WarUploadedUserSourceInfo": {
      "description": "Uploaded War binary for a deployment",
      "type": "object",
      "allOf": [
        {
          "description": "Source with uploaded location",
          "type": "object",
          "properties": {
            "type": {
              "description": "Type of the source uploaded",
              "type": "string"
            },
            "version": {
              "description": "Version of the source",
              "type": "string"
            },
            "relativePath": {
              "description": "Relative path of the storage which stores the source",
              "type": "string"
            }
          }
        }
      ],
      "properties": {
        "runtimeVersion": {
          "description": "Runtime version of the war file",
          "type": "string"
        },
        "jvmOptions": {
          "description": "JVM parameter",
          "type": "string"
        },
        "serverVersion": {
          "description": "Server version, currently only Apache Tomcat is supported",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "War"
    },
    "SourceUploadedUserSourceInfo": {
      "description": "Uploaded Java source code binary for a deployment",
      "type": "object",
      "allOf": [
        {
          "description": "Source with uploaded location",
          "type": "object",
          "properties": {
            "type": {
              "description": "Type of the source uploaded",
              "type": "string"
            },
            "version": {
              "description": "Version of the source",
              "type": "string"
            },
            "relativePath": {
              "description": "Relative path of the storage which stores the source",
              "type": "string"
            }
          }
        }
      ],
      "properties": {
        "artifactSelector": {
          "description": "Selector for the artifact to be used for the deployment for multi-module projects. This should be\r\nthe relative path to the target module/project.",
          "type": "string"
        },
        "runtimeVersion": {
          "description": "Runtime version of the source file",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "Source"
    },
    "NetCoreZipUploadedUserSourceInfo": {
      "description": "Uploaded Jar binary for a deployment",
      "type": "object",
      "allOf": [
        {
          "description": "Source with uploaded location",
          "type": "object",
          "properties": {
            "type": {
              "description": "Type of the source uploaded",
              "type": "string"
            },
            "version": {
              "description": "Version of the source",
              "type": "string"
            },
            "relativePath": {
              "description": "Relative path of the storage which stores the source",
              "type": "string"
            }
          }
        }
      ],
      "properties": {
        "netCoreMainEntryPath": {
          "description": "The path to the .NET executable relative to zip root",
          "type": "string"
        },
        "runtimeVersion": {
          "description": "Runtime version of the .Net file",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "NetCoreZip"
    },
    "BuildResultUserSourceInfo": {
      "description": "Reference to a build result",
      "type": "object",
      "x-ms-discriminator-value": "BuildResult",
      "allOf": [
        {
          "description": "Source information for a deployment",
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "description": "Type of the source uploaded",
              "type": "string"
            },
            "version": {
              "description": "Version of the source",
              "type": "string"
            }
          },
          "discriminator": "type"
        }
      ],
      "properties": {
        "buildResultId": {
          "description": "Resource id of an existing succeeded build result under the same Spring instance.",
          "type": "string"
        }
      }
    },
    "CustomContainerUserSourceInfo": {
      "description": "Custom container user source info",
      "type": "object",
      "x-ms-discriminator-value": "Container",
      "allOf": [
        {
          "description": "Source information for a deployment",
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "description": "Type of the source uploaded",
              "type": "string"
            },
            "version": {
              "description": "Version of the source",
              "type": "string"
            }
          },
          "discriminator": "type"
        }
      ],
      "properties": {
        "customContainer": {
          "description": "Custom container payload",
          "type": "object",
          "properties": {
            "server": {
              "type": "string",
              "description": "The name of the registry that contains the container image"
            },
            "containerImage": {
              "type": "string",
              "description": "Container image of the custom container. This should be in the form of <repository>:<tag> without the server name of the registry"
            },
            "command": {
              "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided.",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "args": {
              "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided.",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "imageRegistryCredential": {
              "description": "Credential of the image registry",
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "description": "The username of the image registry credential"
                },
                "password": {
                  "type": "string",
                  "description": "The password of the image registry credential"
                }
              }
            },
            "languageFramework": {
              "description": "Language framework of the container image uploaded. Supported values: \"springboot\", \"\", null.",
              "type": "string"
            }
          }
        }
      }
    },
    "CustomContainer": {
      "description": "Custom container payload",
      "type": "object",
      "properties": {
        "server": {
          "type": "string",
          "description": "The name of the registry that contains the container image"
        },
        "containerImage": {
          "type": "string",
          "description": "Container image of the custom container. This should be in the form of <repository>:<tag> without the server name of the registry"
        },
        "command": {
          "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "args": {
          "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "imageRegistryCredential": {
          "description": "Credential of the image registry",
          "type": "object",
          "properties": {
            "username": {
              "type": "string",
              "description": "The username of the image registry credential"
            },
            "password": {
              "type": "string",
              "description": "The password of the image registry credential"
            }
          }
        },
        "languageFramework": {
          "description": "Language framework of the container image uploaded. Supported values: \"springboot\", \"\", null.",
          "type": "string"
        }
      }
    },
    "ImageRegistryCredential": {
      "description": "Credential of the image registry",
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "The username of the image registry credential"
        },
        "password": {
          "type": "string",
          "description": "The password of the image registry credential"
        }
      }
    },
    "DeploymentSettings": {
      "description": "Deployment settings payload",
      "type": "object",
      "properties": {
        "resourceRequests": {
          "description": "The requested resource quantity for required CPU and Memory. It is recommended that using this field to represent the required CPU and Memory, the old field cpu and memoryInGB will be deprecated later.",
          "type": "object",
          "properties": {
            "cpu": {
              "description": "Required CPU. 1 core can be represented by 1 or 1000m. This should be 500m or 1 for Basic tier, and {500m, 1, 2, 3, 4} for Standard tier.",
              "type": "string"
            },
            "memory": {
              "description": "Required memory. 1 GB can be represented by 1Gi or 1024Mi. This should be {512Mi, 1Gi, 2Gi} for Basic tier, and {512Mi, 1Gi, 2Gi, ..., 8Gi} for Standard tier.",
              "type": "string"
            }
          }
        },
        "environmentVariables": {
          "description": "Collection of environment variables",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "apms": {
          "description": "Collection of ApmReferences",
          "type": "array",
          "x-ms-identifiers": [
            "resourceId"
          ],
          "items": {
            "description": "A reference to the APM",
            "required": [
              "resourceId"
            ],
            "type": "object",
            "properties": {
              "resourceId": {
                "description": "Resource Id of the APM",
                "type": "string",
                "format": "arm-id",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.AppPlatform/Spring/apms"
                    }
                  ]
                }
              }
            }
          }
        },
        "addonConfigs": {
          "description": "Collection of addons",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "livenessProbe": {
          "description": "Periodic probe of App Instance liveness. App Instance will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "type": "object",
          "required": [
            "disableProbe"
          ],
          "properties": {
            "probeAction": {
              "description": "The action of the probe.",
              "required": [
                "type"
              ],
              "type": "object",
              "properties": {
                "type": {
                  "description": "The type of the action to take to perform the health check.",
                  "enum": [
                    "HTTPGetAction",
                    "TCPSocketAction",
                    "ExecAction"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "ProbeActionType",
                    "modelAsString": true
                  }
                }
              },
              "discriminator": "type"
            },
            "disableProbe": {
              "description": "Indicate whether the probe is disabled.",
              "type": "boolean",
              "default": false
            },
            "initialDelaySeconds": {
              "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
              "format": "int32",
              "type": "integer"
            },
            "periodSeconds": {
              "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            },
            "timeoutSeconds": {
              "description": "Number of seconds after which the probe times out. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            },
            "failureThreshold": {
              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            },
            "successThreshold": {
              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            }
          }
        },
        "readinessProbe": {
          "description": "Periodic probe of App Instance service readiness. App Instance will be removed from service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "type": "object",
          "required": [
            "disableProbe"
          ],
          "properties": {
            "probeAction": {
              "description": "The action of the probe.",
              "required": [
                "type"
              ],
              "type": "object",
              "properties": {
                "type": {
                  "description": "The type of the action to take to perform the health check.",
                  "enum": [
                    "HTTPGetAction",
                    "TCPSocketAction",
                    "ExecAction"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "ProbeActionType",
                    "modelAsString": true
                  }
                }
              },
              "discriminator": "type"
            },
            "disableProbe": {
              "description": "Indicate whether the probe is disabled.",
              "type": "boolean",
              "default": false
            },
            "initialDelaySeconds": {
              "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
              "format": "int32",
              "type": "integer"
            },
            "periodSeconds": {
              "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            },
            "timeoutSeconds": {
              "description": "Number of seconds after which the probe times out. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            },
            "failureThreshold": {
              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            },
            "successThreshold": {
              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            }
          }
        },
        "startupProbe": {
          "description": "StartupProbe indicates that the App Instance has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a App Instance's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "type": "object",
          "required": [
            "disableProbe"
          ],
          "properties": {
            "probeAction": {
              "description": "The action of the probe.",
              "required": [
                "type"
              ],
              "type": "object",
              "properties": {
                "type": {
                  "description": "The type of the action to take to perform the health check.",
                  "enum": [
                    "HTTPGetAction",
                    "TCPSocketAction",
                    "ExecAction"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "ProbeActionType",
                    "modelAsString": true
                  }
                }
              },
              "discriminator": "type"
            },
            "disableProbe": {
              "description": "Indicate whether the probe is disabled.",
              "type": "boolean",
              "default": false
            },
            "initialDelaySeconds": {
              "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
              "format": "int32",
              "type": "integer"
            },
            "periodSeconds": {
              "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            },
            "timeoutSeconds": {
              "description": "Number of seconds after which the probe times out. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            },
            "failureThreshold": {
              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            },
            "successThreshold": {
              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
              "format": "int32",
              "type": "integer"
            }
          }
        },
        "terminationGracePeriodSeconds": {
          "description": "Optional duration in seconds the App Instance needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the App Instance are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 90 seconds.",
          "format": "int32",
          "type": "integer",
          "default": 90
        },
        "containerProbeSettings": {
          "description": "Container liveness and readiness probe settings",
          "type": "object",
          "properties": {
            "disableProbe": {
              "description": "Indicates whether disable the liveness and readiness probe",
              "type": "boolean"
            }
          }
        }
      }
    },
    "Probe": {
      "description": "Probe describes a health check to be performed against an App Instance to determine whether it is alive or ready to receive traffic.",
      "type": "object",
      "required": [
        "disableProbe"
      ],
      "properties": {
        "probeAction": {
          "description": "The action of the probe.",
          "required": [
            "type"
          ],
          "type": "object",
          "properties": {
            "type": {
              "description": "The type of the action to take to perform the health check.",
              "enum": [
                "HTTPGetAction",
                "TCPSocketAction",
                "ExecAction"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ProbeActionType",
                "modelAsString": true
              }
            }
          },
          "discriminator": "type"
        },
        "disableProbe": {
          "description": "Indicate whether the probe is disabled.",
          "type": "boolean",
          "default": false
        },
        "initialDelaySeconds": {
          "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "format": "int32",
          "type": "integer"
        },
        "periodSeconds": {
          "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
          "format": "int32",
          "type": "integer"
        },
        "timeoutSeconds": {
          "description": "Number of seconds after which the probe times out. Minimum value is 1.",
          "format": "int32",
          "type": "integer"
        },
        "failureThreshold": {
          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
          "format": "int32",
          "type": "integer"
        },
        "successThreshold": {
          "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ProbeAction": {
      "description": "The action of the probe.",
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of the action to take to perform the health check.",
          "enum": [
            "HTTPGetAction",
            "TCPSocketAction",
            "ExecAction"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ProbeActionType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "type"
    },
    "HTTPGetAction": {
      "description": "HTTPGetAction describes an action based on HTTP Get requests.",
      "properties": {
        "path": {
          "description": "Path to access on the HTTP server.",
          "type": "string"
        },
        "scheme": {
          "description": "Scheme to use for connecting to the host. Defaults to HTTP.\n\nPossible enum values:\n - `\"HTTP\"` means that the scheme used will be http://\n - `\"HTTPS\"` means that the scheme used will be https://",
          "enum": [
            "HTTP",
            "HTTPS"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "HTTPSchemeType",
            "modelAsString": true
          }
        }
      },
      "type": "object",
      "allOf": [
        {
          "description": "The action of the probe.",
          "required": [
            "type"
          ],
          "type": "object",
          "properties": {
            "type": {
              "description": "The type of the action to take to perform the health check.",
              "enum": [
                "HTTPGetAction",
                "TCPSocketAction",
                "ExecAction"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ProbeActionType",
                "modelAsString": true
              }
            }
          },
          "discriminator": "type"
        }
      ],
      "x-ms-discriminator-value": "HTTPGetAction"
    },
    "ExecAction": {
      "description": "ExecAction describes a \"run in container\" action.",
      "properties": {
        "command": {
          "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-ms-identifiers": []
        }
      },
      "type": "object",
      "allOf": [
        {
          "description": "The action of the probe.",
          "required": [
            "type"
          ],
          "type": "object",
          "properties": {
            "type": {
              "description": "The type of the action to take to perform the health check.",
              "enum": [
                "HTTPGetAction",
                "TCPSocketAction",
                "ExecAction"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ProbeActionType",
                "modelAsString": true
              }
            }
          },
          "discriminator": "type"
        }
      ],
      "x-ms-discriminator-value": "ExecAction"
    },
    "TCPSocketAction": {
      "description": "TCPSocketAction describes an action based on opening a socket",
      "properties": {},
      "type": "object",
      "allOf": [
        {
          "description": "The action of the probe.",
          "required": [
            "type"
          ],
          "type": "object",
          "properties": {
            "type": {
              "description": "The type of the action to take to perform the health check.",
              "enum": [
                "HTTPGetAction",
                "TCPSocketAction",
                "ExecAction"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ProbeActionType",
                "modelAsString": true
              }
            }
          },
          "discriminator": "type"
        }
      ],
      "x-ms-discriminator-value": "TCPSocketAction"
    },
    "ContainerProbeSettings": {
      "description": "Container liveness and readiness probe settings",
      "type": "object",
      "properties": {
        "disableProbe": {
          "description": "Indicates whether disable the liveness and readiness probe",
          "type": "boolean"
        }
      }
    },
    "DeploymentInstance": {
      "description": "Deployment instance payload",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the deployment instance",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "Status of the deployment instance",
          "type": "string",
          "readOnly": true
        },
        "reason": {
          "description": "Failed reason of the deployment instance",
          "type": "string",
          "readOnly": true
        },
        "discoveryStatus": {
          "description": "Discovery status of the deployment instance",
          "type": "string",
          "readOnly": true
        },
        "startTime": {
          "description": "Start time of the deployment instance",
          "type": "string",
          "readOnly": true
        },
        "zone": {
          "description": "Availability zone information of the deployment instance",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DeploymentList": {
      "description": "A list of deployments resource ids.",
      "type": "object",
      "properties": {
        "deployments": {
          "description": "A list of deployment resource ids.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DeploymentResourceCollection": {
      "description": "Object that includes an array of App resources and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of Deployment resources",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Deployment resource payload",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified resource Id for the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "lastModifiedByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource modification (UTC).",
                    "type": "string"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "Properties of the Deployment resource",
                "x-ms-client-flatten": false,
                "type": "object",
                "properties": {
                  "source": {
                    "description": "Uploaded source information of the deployment.",
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "description": "Type of the source uploaded",
                        "type": "string"
                      },
                      "version": {
                        "description": "Version of the source",
                        "type": "string"
                      }
                    },
                    "discriminator": "type"
                  },
                  "deploymentSettings": {
                    "description": "Deployment settings of the Deployment",
                    "type": "object",
                    "properties": {
                      "resourceRequests": {
                        "description": "The requested resource quantity for required CPU and Memory. It is recommended that using this field to represent the required CPU and Memory, the old field cpu and memoryInGB will be deprecated later.",
                        "type": "object",
                        "properties": {
                          "cpu": {
                            "description": "Required CPU. 1 core can be represented by 1 or 1000m. This should be 500m or 1 for Basic tier, and {500m, 1, 2, 3, 4} for Standard tier.",
                            "type": "string"
                          },
                          "memory": {
                            "description": "Required memory. 1 GB can be represented by 1Gi or 1024Mi. This should be {512Mi, 1Gi, 2Gi} for Basic tier, and {512Mi, 1Gi, 2Gi, ..., 8Gi} for Standard tier.",
                            "type": "string"
                          }
                        }
                      },
                      "environmentVariables": {
                        "description": "Collection of environment variables",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "apms": {
                        "description": "Collection of ApmReferences",
                        "type": "array",
                        "x-ms-identifiers": [
                          "resourceId"
                        ],
                        "items": {
                          "description": "A reference to the APM",
                          "required": [
                            "resourceId"
                          ],
                          "type": "object",
                          "properties": {
                            "resourceId": {
                              "description": "Resource Id of the APM",
                              "type": "string",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.AppPlatform/Spring/apms"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      },
                      "addonConfigs": {
                        "description": "Collection of addons",
                        "type": "object",
                        "additionalProperties": {
                          "type": "object"
                        }
                      },
                      "livenessProbe": {
                        "description": "Periodic probe of App Instance liveness. App Instance will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                        "type": "object",
                        "required": [
                          "disableProbe"
                        ],
                        "properties": {
                          "probeAction": {
                            "description": "The action of the probe.",
                            "required": [
                              "type"
                            ],
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "The type of the action to take to perform the health check.",
                                "enum": [
                                  "HTTPGetAction",
                                  "TCPSocketAction",
                                  "ExecAction"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "ProbeActionType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "type"
                          },
                          "disableProbe": {
                            "description": "Indicate whether the probe is disabled.",
                            "type": "boolean",
                            "default": false
                          },
                          "initialDelaySeconds": {
                            "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "format": "int32",
                            "type": "integer"
                          },
                          "periodSeconds": {
                            "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "timeoutSeconds": {
                            "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "failureThreshold": {
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "successThreshold": {
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                            "format": "int32",
                            "type": "integer"
                          }
                        }
                      },
                      "readinessProbe": {
                        "description": "Periodic probe of App Instance service readiness. App Instance will be removed from service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                        "type": "object",
                        "required": [
                          "disableProbe"
                        ],
                        "properties": {
                          "probeAction": {
                            "description": "The action of the probe.",
                            "required": [
                              "type"
                            ],
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "The type of the action to take to perform the health check.",
                                "enum": [
                                  "HTTPGetAction",
                                  "TCPSocketAction",
                                  "ExecAction"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "ProbeActionType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "type"
                          },
                          "disableProbe": {
                            "description": "Indicate whether the probe is disabled.",
                            "type": "boolean",
                            "default": false
                          },
                          "initialDelaySeconds": {
                            "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "format": "int32",
                            "type": "integer"
                          },
                          "periodSeconds": {
                            "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "timeoutSeconds": {
                            "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "failureThreshold": {
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "successThreshold": {
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                            "format": "int32",
                            "type": "integer"
                          }
                        }
                      },
                      "startupProbe": {
                        "description": "StartupProbe indicates that the App Instance has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a App Instance's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                        "type": "object",
                        "required": [
                          "disableProbe"
                        ],
                        "properties": {
                          "probeAction": {
                            "description": "The action of the probe.",
                            "required": [
                              "type"
                            ],
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "The type of the action to take to perform the health check.",
                                "enum": [
                                  "HTTPGetAction",
                                  "TCPSocketAction",
                                  "ExecAction"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "ProbeActionType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "discriminator": "type"
                          },
                          "disableProbe": {
                            "description": "Indicate whether the probe is disabled.",
                            "type": "boolean",
                            "default": false
                          },
                          "initialDelaySeconds": {
                            "description": "Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "format": "int32",
                            "type": "integer"
                          },
                          "periodSeconds": {
                            "description": "How often (in seconds) to perform the probe. Minimum value is 1.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "timeoutSeconds": {
                            "description": "Number of seconds after which the probe times out. Minimum value is 1.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "failureThreshold": {
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "successThreshold": {
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1.",
                            "format": "int32",
                            "type": "integer"
                          }
                        }
                      },
                      "terminationGracePeriodSeconds": {
                        "description": "Optional duration in seconds the App Instance needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the App Instance are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 90 seconds.",
                        "format": "int32",
                        "type": "integer",
                        "default": 90
                      },
                      "containerProbeSettings": {
                        "description": "Container liveness and readiness probe settings",
                        "type": "object",
                        "properties": {
                          "disableProbe": {
                            "description": "Indicates whether disable the liveness and readiness probe",
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the Deployment",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Succeeded",
                      "Failed"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "DeploymentResourceProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "status": {
                    "description": "Status of the Deployment",
                    "enum": [
                      "Stopped",
                      "Running"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "DeploymentResourceStatus",
                      "modelAsString": true
                    }
                  },
                  "active": {
                    "description": "Indicates whether the Deployment is active",
                    "type": "boolean"
                  },
                  "instances": {
                    "description": "Collection of instances belong to the Deployment",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "description": "Deployment instance payload",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the deployment instance",
                          "type": "string",
                          "readOnly": true
                        },
                        "status": {
                          "description": "Status of the deployment instance",
                          "type": "string",
                          "readOnly": true
                        },
                        "reason": {
                          "description": "Failed reason of the deployment instance",
                          "type": "string",
                          "readOnly": true
                        },
                        "discoveryStatus": {
                          "description": "Discovery status of the deployment instance",
                          "type": "string",
                          "readOnly": true
                        },
                        "startTime": {
                          "description": "Start time of the deployment instance",
                          "type": "string",
                          "readOnly": true
                        },
                        "zone": {
                          "description": "Availability zone information of the deployment instance",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true
                  }
                }
              },
              "sku": {
                "description": "Sku of the Deployment resource",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the Sku",
                    "type": "string",
                    "default": "S0"
                  },
                  "tier": {
                    "description": "Tier of the Sku",
                    "type": "string",
                    "default": "Standard"
                  },
                  "capacity": {
                    "format": "int32",
                    "description": "Current capacity of the target resource",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "ResourceRequests": {
      "description": "Deployment resource request payload",
      "type": "object",
      "properties": {
        "cpu": {
          "description": "Required CPU. 1 core can be represented by 1 or 1000m. This should be 500m or 1 for Basic tier, and {500m, 1, 2, 3, 4} for Standard tier.",
          "type": "string"
        },
        "memory": {
          "description": "Required memory. 1 GB can be represented by 1Gi or 1024Mi. This should be {512Mi, 1Gi, 2Gi} for Basic tier, and {512Mi, 1Gi, 2Gi, ..., 8Gi} for Standard tier.",
          "type": "string"
        }
      }
    },
    "LogFileUrlResponse": {
      "description": "Log file URL payload",
      "required": [
        "url"
      ],
      "type": "object",
      "properties": {
        "url": {
          "description": "URL of the log file",
          "type": "string"
        }
      }
    },
    "DiagnosticParameters": {
      "description": "Diagnostic parameters of diagnostic operations",
      "type": "object",
      "properties": {
        "appInstance": {
          "description": "App instance name",
          "type": "string"
        },
        "filePath": {
          "description": "Your target file path in your own BYOS",
          "type": "string"
        },
        "duration": {
          "description": "Duration of your JFR. 1 min can be represented by 1m or 60s.",
          "type": "string"
        }
      }
    },
    "ServiceResourceList": {
      "description": "Object that includes an array of Service resources and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of Service resources",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Service resource",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified resource Id for the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "lastModifiedByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource modification (UTC).",
                    "type": "string"
                  }
                },
                "readOnly": true
              },
              "location": {
                "description": "The GEO location of the resource.",
                "type": "string"
              },
              "tags": {
                "description": "Tags of the service which is a list of key value pairs that describe the resource.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "properties": {
                "description": "Properties of the Service resource",
                "x-ms-client-flatten": false,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Provisioning state of the Service",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Starting",
                      "Stopping",
                      "Deleting",
                      "Deleted",
                      "Succeeded",
                      "Failed",
                      "Moving",
                      "Moved",
                      "MoveFailed"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "networkProfile": {
                    "description": "Network profile of the Service",
                    "type": "object",
                    "properties": {
                      "serviceRuntimeSubnetId": {
                        "description": "Fully qualified resource Id of the subnet to host Azure Spring Apps Service Runtime",
                        "type": "string",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "appSubnetId": {
                        "description": "Fully qualified resource Id of the subnet to host customer apps in Azure Spring Apps",
                        "type": "string",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "serviceCidr": {
                        "description": "Azure Spring Apps service reserved CIDR",
                        "type": "string",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "serviceRuntimeNetworkResourceGroup": {
                        "description": "Name of the resource group containing network resources of Azure Spring Apps Service Runtime",
                        "type": "string",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "appNetworkResourceGroup": {
                        "description": "Name of the resource group containing network resources for customer apps in Azure Spring Apps",
                        "type": "string",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "outboundIPs": {
                        "description": "Desired outbound IP resources for Azure Spring Apps resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "publicIPs": {
                            "type": "array",
                            "readOnly": true,
                            "items": {
                              "type": "string"
                            },
                            "description": "A list of public IP addresses."
                          }
                        }
                      },
                      "requiredTraffics": {
                        "description": "Required inbound or outbound traffics for Azure Spring Apps resource.",
                        "type": "array",
                        "readOnly": true,
                        "items": {
                          "description": "Required inbound or outbound traffic for Azure Spring Apps resource.",
                          "type": "object",
                          "properties": {
                            "protocol": {
                              "description": "The protocol of required traffic",
                              "type": "string",
                              "readOnly": true
                            },
                            "port": {
                              "description": "The port of required traffic",
                              "type": "integer",
                              "format": "int32",
                              "readOnly": true
                            },
                            "ips": {
                              "description": "The ip list of required traffic",
                              "type": "array",
                              "readOnly": true,
                              "items": {
                                "type": "string"
                              }
                            },
                            "fqdns": {
                              "description": "The FQDN list of required traffic",
                              "type": "array",
                              "readOnly": true,
                              "items": {
                                "type": "string"
                              }
                            },
                            "direction": {
                              "description": "The direction of required traffic",
                              "type": "string",
                              "readOnly": true,
                              "enum": [
                                "Inbound",
                                "Outbound"
                              ],
                              "x-ms-enum": {
                                "name": "trafficDirection",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      },
                      "ingressConfig": {
                        "description": "Ingress configuration payload for Azure Spring Apps resource.",
                        "type": "object",
                        "properties": {
                          "readTimeoutInSeconds": {
                            "format": "int32",
                            "description": "Ingress read time out in seconds.",
                            "type": "integer"
                          }
                        }
                      },
                      "outboundType": {
                        "description": "The egress traffic type of Azure Spring Apps VNet instances.",
                        "type": "string",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      }
                    }
                  },
                  "vnetAddons": {
                    "description": "Additional Service settings in vnet injection instance",
                    "type": "object",
                    "properties": {
                      "logStreamPublicEndpoint": {
                        "description": "Indicates whether the log stream in vnet injection instance could be accessed from internet.",
                        "type": "boolean",
                        "default": false
                      },
                      "dataPlanePublicEndpoint": {
                        "description": "Indicates whether the data plane components(log stream, app connect, remote debugging) in vnet injection instance could be accessed from internet.",
                        "type": "boolean",
                        "default": false
                      }
                    }
                  },
                  "version": {
                    "format": "int32",
                    "description": "Version of the Service",
                    "type": "integer",
                    "readOnly": true
                  },
                  "serviceId": {
                    "description": "ServiceInstanceEntity Id which uniquely identifies a created resource",
                    "type": "string",
                    "readOnly": true
                  },
                  "powerState": {
                    "description": "Power state of the Service",
                    "enum": [
                      "Running",
                      "Stopped"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "PowerState",
                      "modelAsString": true
                    }
                  },
                  "zoneRedundant": {
                    "type": "boolean",
                    "default": false,
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "fqdn": {
                    "description": "Fully qualified dns name of the service instance",
                    "type": "string",
                    "readOnly": true
                  },
                  "marketplaceResource": {
                    "description": "Purchasing 3rd party product of the Service resource.",
                    "type": "object",
                    "properties": {
                      "plan": {
                        "description": "The plan id of the 3rd Party Artifact that is being procured.",
                        "type": "string"
                      },
                      "publisher": {
                        "description": "The publisher id of the 3rd Party Artifact that is being bought.",
                        "type": "string"
                      },
                      "product": {
                        "description": "The 3rd Party artifact that is being procured.",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "sku": {
                "description": "Sku of the Service resource",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the Sku",
                    "type": "string",
                    "default": "S0"
                  },
                  "tier": {
                    "description": "Tier of the Sku",
                    "type": "string",
                    "default": "Standard"
                  },
                  "capacity": {
                    "format": "int32",
                    "description": "Current capacity of the target resource",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "AvailableOperations": {
      "description": "Available operations of the service",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of available operation details",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Operation detail payload",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the operation",
                "type": "string"
              },
              "isDataAction": {
                "description": "Indicates whether the operation is a data action",
                "type": "boolean"
              },
              "display": {
                "description": "Display of the operation",
                "type": "object",
                "properties": {
                  "provider": {
                    "description": "Resource provider of the operation",
                    "type": "string"
                  },
                  "resource": {
                    "description": "Resource of the operation",
                    "type": "string"
                  },
                  "operation": {
                    "description": "Localized friendly name for the operation",
                    "type": "string"
                  },
                  "description": {
                    "description": "Localized friendly description for the operation",
                    "type": "string"
                  }
                }
              },
              "actionType": {
                "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
                "type": "string",
                "readOnly": true,
                "enum": [
                  "Internal"
                ],
                "x-ms-enum": {
                  "name": "ActionType",
                  "modelAsString": true
                }
              },
              "origin": {
                "description": "Origin of the operation",
                "type": "string"
              },
              "properties": {
                "description": "Properties of the operation",
                "type": "object",
                "properties": {
                  "serviceSpecification": {
                    "description": "Service specifications of the operation",
                    "type": "object",
                    "properties": {
                      "logSpecifications": {
                        "description": "Specifications of the Log for Azure Monitoring",
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "description": "Specifications of the Log for Azure Monitoring",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Name of the log",
                              "type": "string"
                            },
                            "displayName": {
                              "description": "Localized friendly display name of the log",
                              "type": "string"
                            },
                            "blobDuration": {
                              "description": "Blob duration of the log",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "metricSpecifications": {
                        "description": "Specifications of the Metrics for Azure Monitoring",
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "description": "Specifications of the Metrics for Azure Monitoring",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Name of the metric",
                              "type": "string"
                            },
                            "displayName": {
                              "description": "Localized friendly display name of the metric",
                              "type": "string"
                            },
                            "displayDescription": {
                              "description": "Localized friendly description of the metric",
                              "type": "string"
                            },
                            "unit": {
                              "description": "Unit that makes sense for the metric",
                              "type": "string"
                            },
                            "category": {
                              "description": "Name of the metric category that the metric belongs to. A metric can only belong to a single category.",
                              "type": "string"
                            },
                            "aggregationType": {
                              "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.",
                              "type": "string"
                            },
                            "supportedAggregationTypes": {
                              "description": "Supported aggregation types",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "supportedTimeGrainTypes": {
                              "description": "Supported time grain types",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "fillGapWithZero": {
                              "description": "Optional. If set to true, then zero will be returned for time duration where no metric is emitted/published.",
                              "type": "boolean"
                            },
                            "dimensions": {
                              "description": "Dimensions of the metric",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "description": "Specifications of the Dimension of metrics",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Name of the dimension",
                                    "type": "string"
                                  },
                                  "displayName": {
                                    "description": "Localized friendly display name of the dimension",
                                    "type": "string"
                                  },
                                  "toBeExportedForShoebox": {
                                    "description": "Whether this dimension should be included for the Shoebox export scenario",
                                    "type": "boolean"
                                  }
                                }
                              }
                            },
                            "sourceMdmNamespace": {
                              "description": "Name of the MDM namespace. Optional.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "OperationDetail": {
      "description": "Operation detail payload",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the operation",
          "type": "string"
        },
        "isDataAction": {
          "description": "Indicates whether the operation is a data action",
          "type": "boolean"
        },
        "display": {
          "description": "Display of the operation",
          "type": "object",
          "properties": {
            "provider": {
              "description": "Resource provider of the operation",
              "type": "string"
            },
            "resource": {
              "description": "Resource of the operation",
              "type": "string"
            },
            "operation": {
              "description": "Localized friendly name for the operation",
              "type": "string"
            },
            "description": {
              "description": "Localized friendly description for the operation",
              "type": "string"
            }
          }
        },
        "actionType": {
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          }
        },
        "origin": {
          "description": "Origin of the operation",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the operation",
          "type": "object",
          "properties": {
            "serviceSpecification": {
              "description": "Service specifications of the operation",
              "type": "object",
              "properties": {
                "logSpecifications": {
                  "description": "Specifications of the Log for Azure Monitoring",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Specifications of the Log for Azure Monitoring",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the log",
                        "type": "string"
                      },
                      "displayName": {
                        "description": "Localized friendly display name of the log",
                        "type": "string"
                      },
                      "blobDuration": {
                        "description": "Blob duration of the log",
                        "type": "string"
                      }
                    }
                  }
                },
                "metricSpecifications": {
                  "description": "Specifications of the Metrics for Azure Monitoring",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Specifications of the Metrics for Azure Monitoring",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the metric",
                        "type": "string"
                      },
                      "displayName": {
                        "description": "Localized friendly display name of the metric",
                        "type": "string"
                      },
                      "displayDescription": {
                        "description": "Localized friendly description of the metric",
                        "type": "string"
                      },
                      "unit": {
                        "description": "Unit that makes sense for the metric",
                        "type": "string"
                      },
                      "category": {
                        "description": "Name of the metric category that the metric belongs to. A metric can only belong to a single category.",
                        "type": "string"
                      },
                      "aggregationType": {
                        "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.",
                        "type": "string"
                      },
                      "supportedAggregationTypes": {
                        "description": "Supported aggregation types",
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "supportedTimeGrainTypes": {
                        "description": "Supported time grain types",
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "fillGapWithZero": {
                        "description": "Optional. If set to true, then zero will be returned for time duration where no metric is emitted/published.",
                        "type": "boolean"
                      },
                      "dimensions": {
                        "description": "Dimensions of the metric",
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "description": "Specifications of the Dimension of metrics",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Name of the dimension",
                              "type": "string"
                            },
                            "displayName": {
                              "description": "Localized friendly display name of the dimension",
                              "type": "string"
                            },
                            "toBeExportedForShoebox": {
                              "description": "Whether this dimension should be included for the Shoebox export scenario",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "sourceMdmNamespace": {
                        "description": "Name of the MDM namespace. Optional.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "OperationDisplay": {
      "description": "Operation display payload",
      "type": "object",
      "properties": {
        "provider": {
          "description": "Resource provider of the operation",
          "type": "string"
        },
        "resource": {
          "description": "Resource of the operation",
          "type": "string"
        },
        "operation": {
          "description": "Localized friendly name for the operation",
          "type": "string"
        },
        "description": {
          "description": "Localized friendly description for the operation",
          "type": "string"
        }
      }
    },
    "OperationProperties": {
      "description": "Extra Operation properties",
      "type": "object",
      "properties": {
        "serviceSpecification": {
          "description": "Service specifications of the operation",
          "type": "object",
          "properties": {
            "logSpecifications": {
              "description": "Specifications of the Log for Azure Monitoring",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "description": "Specifications of the Log for Azure Monitoring",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the log",
                    "type": "string"
                  },
                  "displayName": {
                    "description": "Localized friendly display name of the log",
                    "type": "string"
                  },
                  "blobDuration": {
                    "description": "Blob duration of the log",
                    "type": "string"
                  }
                }
              }
            },
            "metricSpecifications": {
              "description": "Specifications of the Metrics for Azure Monitoring",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "description": "Specifications of the Metrics for Azure Monitoring",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the metric",
                    "type": "string"
                  },
                  "displayName": {
                    "description": "Localized friendly display name of the metric",
                    "type": "string"
                  },
                  "displayDescription": {
                    "description": "Localized friendly description of the metric",
                    "type": "string"
                  },
                  "unit": {
                    "description": "Unit that makes sense for the metric",
                    "type": "string"
                  },
                  "category": {
                    "description": "Name of the metric category that the metric belongs to. A metric can only belong to a single category.",
                    "type": "string"
                  },
                  "aggregationType": {
                    "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.",
                    "type": "string"
                  },
                  "supportedAggregationTypes": {
                    "description": "Supported aggregation types",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "supportedTimeGrainTypes": {
                    "description": "Supported time grain types",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "fillGapWithZero": {
                    "description": "Optional. If set to true, then zero will be returned for time duration where no metric is emitted/published.",
                    "type": "boolean"
                  },
                  "dimensions": {
                    "description": "Dimensions of the metric",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "description": "Specifications of the Dimension of metrics",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the dimension",
                          "type": "string"
                        },
                        "displayName": {
                          "description": "Localized friendly display name of the dimension",
                          "type": "string"
                        },
                        "toBeExportedForShoebox": {
                          "description": "Whether this dimension should be included for the Shoebox export scenario",
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "sourceMdmNamespace": {
                    "description": "Name of the MDM namespace. Optional.",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "ServiceSpecification": {
      "description": "Service specification payload",
      "type": "object",
      "properties": {
        "logSpecifications": {
          "description": "Specifications of the Log for Azure Monitoring",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Specifications of the Log for Azure Monitoring",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the log",
                "type": "string"
              },
              "displayName": {
                "description": "Localized friendly display name of the log",
                "type": "string"
              },
              "blobDuration": {
                "description": "Blob duration of the log",
                "type": "string"
              }
            }
          }
        },
        "metricSpecifications": {
          "description": "Specifications of the Metrics for Azure Monitoring",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Specifications of the Metrics for Azure Monitoring",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the metric",
                "type": "string"
              },
              "displayName": {
                "description": "Localized friendly display name of the metric",
                "type": "string"
              },
              "displayDescription": {
                "description": "Localized friendly description of the metric",
                "type": "string"
              },
              "unit": {
                "description": "Unit that makes sense for the metric",
                "type": "string"
              },
              "category": {
                "description": "Name of the metric category that the metric belongs to. A metric can only belong to a single category.",
                "type": "string"
              },
              "aggregationType": {
                "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.",
                "type": "string"
              },
              "supportedAggregationTypes": {
                "description": "Supported aggregation types",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "supportedTimeGrainTypes": {
                "description": "Supported time grain types",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "fillGapWithZero": {
                "description": "Optional. If set to true, then zero will be returned for time duration where no metric is emitted/published.",
                "type": "boolean"
              },
              "dimensions": {
                "description": "Dimensions of the metric",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "description": "Specifications of the Dimension of metrics",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the dimension",
                      "type": "string"
                    },
                    "displayName": {
                      "description": "Localized friendly display name of the dimension",
                      "type": "string"
                    },
                    "toBeExportedForShoebox": {
                      "description": "Whether this dimension should be included for the Shoebox export scenario",
                      "type": "boolean"
                    }
                  }
                }
              },
              "sourceMdmNamespace": {
                "description": "Name of the MDM namespace. Optional.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "LogSpecification": {
      "description": "Specifications of the Log for Azure Monitoring",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the log",
          "type": "string"
        },
        "displayName": {
          "description": "Localized friendly display name of the log",
          "type": "string"
        },
        "blobDuration": {
          "description": "Blob duration of the log",
          "type": "string"
        }
      }
    },
    "MetricSpecification": {
      "description": "Specifications of the Metrics for Azure Monitoring",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the metric",
          "type": "string"
        },
        "displayName": {
          "description": "Localized friendly display name of the metric",
          "type": "string"
        },
        "displayDescription": {
          "description": "Localized friendly description of the metric",
          "type": "string"
        },
        "unit": {
          "description": "Unit that makes sense for the metric",
          "type": "string"
        },
        "category": {
          "description": "Name of the metric category that the metric belongs to. A metric can only belong to a single category.",
          "type": "string"
        },
        "aggregationType": {
          "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.",
          "type": "string"
        },
        "supportedAggregationTypes": {
          "description": "Supported aggregation types",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supportedTimeGrainTypes": {
          "description": "Supported time grain types",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fillGapWithZero": {
          "description": "Optional. If set to true, then zero will be returned for time duration where no metric is emitted/published.",
          "type": "boolean"
        },
        "dimensions": {
          "description": "Dimensions of the metric",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Specifications of the Dimension of metrics",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the dimension",
                "type": "string"
              },
              "displayName": {
                "description": "Localized friendly display name of the dimension",
                "type": "string"
              },
              "toBeExportedForShoebox": {
                "description": "Whether this dimension should be included for the Shoebox export scenario",
                "type": "boolean"
              }
            }
          }
        },
        "sourceMdmNamespace": {
          "description": "Name of the MDM namespace. Optional.",
          "type": "string"
        }
      }
    },
    "MetricDimension": {
      "description": "Specifications of the Dimension of metrics",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the dimension",
          "type": "string"
        },
        "displayName": {
          "description": "Localized friendly display name of the dimension",
          "type": "string"
        },
        "toBeExportedForShoebox": {
          "description": "Whether this dimension should be included for the Shoebox export scenario",
          "type": "boolean"
        }
      }
    },
    "ResourceSkuCollection": {
      "description": "Object that includes an array of Azure Spring Apps SKU and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resource SKU",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Describes an available Azure Spring Apps SKU.",
            "type": "object",
            "properties": {
              "resourceType": {
                "description": "Gets the type of resource the SKU applies to.",
                "type": "string"
              },
              "name": {
                "description": "Gets the name of SKU.",
                "type": "string"
              },
              "tier": {
                "description": "Gets the tier of SKU.",
                "type": "string"
              },
              "capacity": {
                "description": "Gets the capacity of SKU.",
                "required": [
                  "minimum"
                ],
                "type": "object",
                "properties": {
                  "minimum": {
                    "format": "int32",
                    "description": "Gets or sets the minimum.",
                    "type": "integer"
                  },
                  "maximum": {
                    "format": "int32",
                    "description": "Gets or sets the maximum.",
                    "type": "integer"
                  },
                  "default": {
                    "format": "int32",
                    "description": "Gets or sets the default.",
                    "type": "integer"
                  },
                  "scaleType": {
                    "description": "Gets or sets the type of the scale.",
                    "enum": [
                      "None",
                      "Manual",
                      "Automatic"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "SkuScaleType",
                      "modelAsString": true
                    }
                  }
                }
              },
              "locations": {
                "description": "Gets the set of locations that the SKU is available.",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "locationInfo": {
                "description": "Gets a list of locations and availability zones in those locations where the SKU is available.",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "description": "Locations and availability zones where the SKU is available",
                  "type": "object",
                  "properties": {
                    "location": {
                      "description": "Gets location of the SKU",
                      "type": "string"
                    },
                    "zones": {
                      "description": "Gets list of availability zones where the SKU is supported.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "zoneDetails": {
                      "description": "Gets details of capabilities available to a SKU in specific zones.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "description": "Details of capabilities available to a SKU in specific zones",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Gets the set of zones that the SKU is available in with the\r\nspecified capabilities.",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "capabilities": {
                            "description": "Gets a list of capabilities that are available for the SKU in the\r\nspecified list of zones.",
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Gets an invariant to describe the feature.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "Gets an invariant if the feature is measured by quantity.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "restrictions": {
                "description": "Gets the restrictions because of which SKU cannot be used. This is\r\nempty if there are no restrictions.",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "description": "Restrictions where the SKU cannot be used",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Gets the type of restrictions. Possible values include: 'Location', 'Zone'",
                      "enum": [
                        "Location",
                        "Zone"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ResourceSkuRestrictionsType",
                        "modelAsString": true
                      }
                    },
                    "values": {
                      "description": "Gets the value of restrictions. If the restriction type is set to\r\nlocation. This would be different locations where the SKU is restricted.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "restrictionInfo": {
                      "description": "Gets the information about the restriction where the SKU cannot be used.",
                      "type": "object",
                      "properties": {
                        "locations": {
                          "description": "Gets locations where the SKU is restricted",
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "zones": {
                          "description": "Gets list of availability zones where the SKU is restricted.",
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "reasonCode": {
                      "description": "Gets the reason for restriction. Possible values include: 'QuotaId', 'NotAvailableForSubscription'",
                      "enum": [
                        "QuotaId",
                        "NotAvailableForSubscription"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ResourceSkuRestrictionsReasonCode",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "ResourceSku": {
      "description": "Describes an available Azure Spring Apps SKU.",
      "type": "object",
      "properties": {
        "resourceType": {
          "description": "Gets the type of resource the SKU applies to.",
          "type": "string"
        },
        "name": {
          "description": "Gets the name of SKU.",
          "type": "string"
        },
        "tier": {
          "description": "Gets the tier of SKU.",
          "type": "string"
        },
        "capacity": {
          "description": "Gets the capacity of SKU.",
          "required": [
            "minimum"
          ],
          "type": "object",
          "properties": {
            "minimum": {
              "format": "int32",
              "description": "Gets or sets the minimum.",
              "type": "integer"
            },
            "maximum": {
              "format": "int32",
              "description": "Gets or sets the maximum.",
              "type": "integer"
            },
            "default": {
              "format": "int32",
              "description": "Gets or sets the default.",
              "type": "integer"
            },
            "scaleType": {
              "description": "Gets or sets the type of the scale.",
              "enum": [
                "None",
                "Manual",
                "Automatic"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SkuScaleType",
                "modelAsString": true
              }
            }
          }
        },
        "locations": {
          "description": "Gets the set of locations that the SKU is available.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locationInfo": {
          "description": "Gets a list of locations and availability zones in those locations where the SKU is available.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Locations and availability zones where the SKU is available",
            "type": "object",
            "properties": {
              "location": {
                "description": "Gets location of the SKU",
                "type": "string"
              },
              "zones": {
                "description": "Gets list of availability zones where the SKU is supported.",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "zoneDetails": {
                "description": "Gets details of capabilities available to a SKU in specific zones.",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "description": "Details of capabilities available to a SKU in specific zones",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Gets the set of zones that the SKU is available in with the\r\nspecified capabilities.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "capabilities": {
                      "description": "Gets a list of capabilities that are available for the SKU in the\r\nspecified list of zones.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Gets an invariant to describe the feature.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Gets an invariant if the feature is measured by quantity.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "restrictions": {
          "description": "Gets the restrictions because of which SKU cannot be used. This is\r\nempty if there are no restrictions.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Restrictions where the SKU cannot be used",
            "type": "object",
            "properties": {
              "type": {
                "description": "Gets the type of restrictions. Possible values include: 'Location', 'Zone'",
                "enum": [
                  "Location",
                  "Zone"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "ResourceSkuRestrictionsType",
                  "modelAsString": true
                }
              },
              "values": {
                "description": "Gets the value of restrictions. If the restriction type is set to\r\nlocation. This would be different locations where the SKU is restricted.",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "restrictionInfo": {
                "description": "Gets the information about the restriction where the SKU cannot be used.",
                "type": "object",
                "properties": {
                  "locations": {
                    "description": "Gets locations where the SKU is restricted",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "zones": {
                    "description": "Gets list of availability zones where the SKU is restricted.",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "reasonCode": {
                "description": "Gets the reason for restriction. Possible values include: 'QuotaId', 'NotAvailableForSubscription'",
                "enum": [
                  "QuotaId",
                  "NotAvailableForSubscription"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "ResourceSkuRestrictionsReasonCode",
                  "modelAsString": true
                }
              }
            }
          }
        }
      }
    },
    "SkuCapacity": {
      "description": "The SKU capacity",
      "required": [
        "minimum"
      ],
      "type": "object",
      "properties": {
        "minimum": {
          "format": "int32",
          "description": "Gets or sets the minimum.",
          "type": "integer"
        },
        "maximum": {
          "format": "int32",
          "description": "Gets or sets the maximum.",
          "type": "integer"
        },
        "default": {
          "format": "int32",
          "description": "Gets or sets the default.",
          "type": "integer"
        },
        "scaleType": {
          "description": "Gets or sets the type of the scale.",
          "enum": [
            "None",
            "Manual",
            "Automatic"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SkuScaleType",
            "modelAsString": true
          }
        }
      }
    },
    "ResourceSkuLocationInfo": {
      "description": "Locations and availability zones where the SKU is available",
      "type": "object",
      "properties": {
        "location": {
          "description": "Gets location of the SKU",
          "type": "string"
        },
        "zones": {
          "description": "Gets list of availability zones where the SKU is supported.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "zoneDetails": {
          "description": "Gets details of capabilities available to a SKU in specific zones.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Details of capabilities available to a SKU in specific zones",
            "type": "object",
            "properties": {
              "name": {
                "description": "Gets the set of zones that the SKU is available in with the\r\nspecified capabilities.",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "capabilities": {
                "description": "Gets a list of capabilities that are available for the SKU in the\r\nspecified list of zones.",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Gets an invariant to describe the feature.",
                      "type": "string"
                    },
                    "value": {
                      "description": "Gets an invariant if the feature is measured by quantity.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ResourceSkuRestrictions": {
      "description": "Restrictions where the SKU cannot be used",
      "type": "object",
      "properties": {
        "type": {
          "description": "Gets the type of restrictions. Possible values include: 'Location', 'Zone'",
          "enum": [
            "Location",
            "Zone"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ResourceSkuRestrictionsType",
            "modelAsString": true
          }
        },
        "values": {
          "description": "Gets the value of restrictions. If the restriction type is set to\r\nlocation. This would be different locations where the SKU is restricted.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "restrictionInfo": {
          "description": "Gets the information about the restriction where the SKU cannot be used.",
          "type": "object",
          "properties": {
            "locations": {
              "description": "Gets locations where the SKU is restricted",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "zones": {
              "description": "Gets list of availability zones where the SKU is restricted.",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "reasonCode": {
          "description": "Gets the reason for restriction. Possible values include: 'QuotaId', 'NotAvailableForSubscription'",
          "enum": [
            "QuotaId",
            "NotAvailableForSubscription"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ResourceSkuRestrictionsReasonCode",
            "modelAsString": true
          }
        }
      }
    },
    "ResourceSkuZoneDetails": {
      "description": "Details of capabilities available to a SKU in specific zones",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets the set of zones that the SKU is available in with the\r\nspecified capabilities.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "capabilities": {
          "description": "Gets a list of capabilities that are available for the SKU in the\r\nspecified list of zones.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "description": "Gets an invariant to describe the feature.",
                "type": "string"
              },
              "value": {
                "description": "Gets an invariant if the feature is measured by quantity.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ResourceSkuRestrictionInfo": {
      "description": "Information about the restriction where the SKU cannot be used",
      "type": "object",
      "properties": {
        "locations": {
          "description": "Gets locations where the SKU is restricted",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "zones": {
          "description": "Gets list of availability zones where the SKU is restricted.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ResourceSkuCapabilities": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets an invariant to describe the feature.",
          "type": "string"
        },
        "value": {
          "description": "Gets an invariant if the feature is measured by quantity.",
          "type": "string"
        }
      }
    },
    "CloudError": {
      "type": "object",
      "description": "An error response from the service.",
      "properties": {
        "error": {
          "description": "An error response from the service.",
          "$ref": "#/definitions/CloudErrorBody"
        }
      },
      "x-ms-external": true
    },
    "CloudErrorBody": {
      "type": "object",
      "description": "An error response from the service.",
      "properties": {
        "code": {
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically.",
          "type": "string"
        },
        "message": {
          "description": "A message describing the error, intended to be suitable for display in a user interface.",
          "type": "string"
        },
        "target": {
          "description": "The target of the particular error. For example, the name of the property in error.",
          "type": "string"
        },
        "details": {
          "description": "A list of additional details about the error.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          }
        }
      },
      "x-ms-external": true
    },
    "AvailableRuntimeVersions": {
      "type": "object",
      "properties": {
        "value": {
          "description": "A list of all supported runtime versions.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Supported deployment runtime version descriptor.",
            "type": "object",
            "properties": {
              "value": {
                "description": "The raw value which could be passed to deployment CRUD operations.",
                "enum": [
                  "Java_8",
                  "Java_11",
                  "Java_17",
                  "NetCore_31"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "SupportedRuntimeValue",
                  "modelAsString": true
                }
              },
              "platform": {
                "description": "The platform of this runtime version (possible values: \"Java\" or \".NET\").",
                "enum": [
                  "Java",
                  ".NET Core"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "SupportedRuntimePlatform",
                  "modelAsString": true
                }
              },
              "version": {
                "description": "The detailed version (major.minor) of the platform.",
                "type": "string"
              }
            },
            "readOnly": true
          },
          "readOnly": true
        }
      },
      "readOnly": true
    },
    "SupportedRuntimeVersion": {
      "description": "Supported deployment runtime version descriptor.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The raw value which could be passed to deployment CRUD operations.",
          "enum": [
            "Java_8",
            "Java_11",
            "Java_17",
            "NetCore_31"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SupportedRuntimeValue",
            "modelAsString": true
          }
        },
        "platform": {
          "description": "The platform of this runtime version (possible values: \"Java\" or \".NET\").",
          "enum": [
            "Java",
            ".NET Core"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SupportedRuntimePlatform",
            "modelAsString": true
          }
        },
        "version": {
          "description": "The detailed version (major.minor) of the platform.",
          "type": "string"
        }
      },
      "readOnly": true
    },
    "SupportedServerVersions": {
      "description": "Supported server versions.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of the supported server versions.",
          "uniqueItems": false,
          "type": "array",
          "x-ms-identifiers": [
            "value"
          ],
          "items": {
            "description": "Supported server version.",
            "type": "object",
            "properties": {
              "value": {
                "description": "The raw server version value which could be passed to deployment CRUD operations.",
                "type": "string"
              },
              "server": {
                "description": "The server name.",
                "type": "string"
              },
              "version": {
                "description": "The Server version.",
                "type": "string"
              }
            },
            "readOnly": true
          }
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "SupportedServerVersion": {
      "description": "Supported server version.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The raw server version value which could be passed to deployment CRUD operations.",
          "type": "string"
        },
        "server": {
          "description": "The server name.",
          "type": "string"
        },
        "version": {
          "description": "The Server version.",
          "type": "string"
        }
      },
      "readOnly": true
    },
    "BuildpackBindingResourceCollection": {
      "description": "Object that includes an array of BuildpackBinding resources and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of BuildpackBinding resources",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Buildpack Binding Resource object",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified resource Id for the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "lastModifiedByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource modification (UTC).",
                    "type": "string"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "Properties of a buildpack binding",
                "type": "object",
                "properties": {
                  "bindingType": {
                    "description": "Buildpack Binding Type",
                    "enum": [
                      "ApplicationInsights",
                      "ApacheSkyWalking",
                      "AppDynamics",
                      "Dynatrace",
                      "NewRelic",
                      "ElasticAPM"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "bindingType",
                      "modelAsString": true
                    }
                  },
                  "provisioningState": {
                    "description": "State of the Buildpack Binding.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Succeeded",
                      "Failed",
                      "Deleting"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "BuildpackBindingProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "launchProperties": {
                    "description": "The object describes the buildpack binding launch properties",
                    "type": "object",
                    "properties": {
                      "properties": {
                        "description": "Non-sensitive properties for launchProperties",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "secrets": {
                        "description": "Sensitive properties for launchProperties",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "BuildpackBindingResource": {
      "description": "Buildpack Binding Resource object",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "Properties of a buildpack binding",
          "type": "object",
          "properties": {
            "bindingType": {
              "description": "Buildpack Binding Type",
              "enum": [
                "ApplicationInsights",
                "ApacheSkyWalking",
                "AppDynamics",
                "Dynatrace",
                "NewRelic",
                "ElasticAPM"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "bindingType",
                "modelAsString": true
              }
            },
            "provisioningState": {
              "description": "State of the Buildpack Binding.",
              "enum": [
                "Creating",
                "Updating",
                "Succeeded",
                "Failed",
                "Deleting"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "BuildpackBindingProvisioningState",
                "modelAsString": true
              }
            },
            "launchProperties": {
              "description": "The object describes the buildpack binding launch properties",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "Non-sensitive properties for launchProperties",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "secrets": {
                  "description": "Sensitive properties for launchProperties",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "BuildpackBindingProperties": {
      "description": "Properties of a buildpack binding",
      "type": "object",
      "properties": {
        "bindingType": {
          "description": "Buildpack Binding Type",
          "enum": [
            "ApplicationInsights",
            "ApacheSkyWalking",
            "AppDynamics",
            "Dynatrace",
            "NewRelic",
            "ElasticAPM"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "bindingType",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "description": "State of the Buildpack Binding.",
          "enum": [
            "Creating",
            "Updating",
            "Succeeded",
            "Failed",
            "Deleting"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "BuildpackBindingProvisioningState",
            "modelAsString": true
          }
        },
        "launchProperties": {
          "description": "The object describes the buildpack binding launch properties",
          "type": "object",
          "properties": {
            "properties": {
              "description": "Non-sensitive properties for launchProperties",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "secrets": {
              "description": "Sensitive properties for launchProperties",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "BuildpackBindingLaunchProperties": {
      "description": "Buildpack Binding Launch Properties",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Non-sensitive properties for launchProperties",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "secrets": {
          "description": "Sensitive properties for launchProperties",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ApmResourceCollection": {
      "description": "Object that includes an array of APM resources and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of APM resources",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "APM Resource object",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified resource Id for the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "lastModifiedByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource modification (UTC).",
                    "type": "string"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "Properties of an APM",
                "x-ms-client-flatten": false,
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "description": "APM Type",
                    "type": "string"
                  },
                  "provisioningState": {
                    "description": "State of the APM.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Succeeded",
                      "Failed",
                      "Deleting",
                      "Canceled"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "ApmProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "properties": {
                    "description": "Non-sensitive properties for the APM",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "secrets": {
                    "description": "Sensitive properties for the APM",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-ms-secret": true,
                    "x-ms-mutability": [
                      "create",
                      "update"
                    ]
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "ApmResource": {
      "description": "APM Resource object",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "Properties of an APM",
          "x-ms-client-flatten": false,
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "description": "APM Type",
              "type": "string"
            },
            "provisioningState": {
              "description": "State of the APM.",
              "enum": [
                "Creating",
                "Updating",
                "Succeeded",
                "Failed",
                "Deleting",
                "Canceled"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ApmProvisioningState",
                "modelAsString": true
              }
            },
            "properties": {
              "description": "Non-sensitive properties for the APM",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "secrets": {
              "description": "Sensitive properties for the APM",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-ms-secret": true,
              "x-ms-mutability": [
                "create",
                "update"
              ]
            }
          }
        }
      }
    },
    "ApmProperties": {
      "description": "Properties of an APM",
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "APM Type",
          "type": "string"
        },
        "provisioningState": {
          "description": "State of the APM.",
          "enum": [
            "Creating",
            "Updating",
            "Succeeded",
            "Failed",
            "Deleting",
            "Canceled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ApmProvisioningState",
            "modelAsString": true
          }
        },
        "properties": {
          "description": "Non-sensitive properties for the APM",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "secrets": {
          "description": "Sensitive properties for the APM",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-secret": true,
          "x-ms-mutability": [
            "create",
            "update"
          ]
        }
      }
    },
    "ApmSecretKeys": {
      "description": "Keys of APM sensitive properties",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of the keys for the APM sensitive properties",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SupportedApmTypes": {
      "description": "Supported APM types payload",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of the supported APM type",
          "uniqueItems": false,
          "type": "array",
          "x-ms-identifiers": [
            "name"
          ],
          "items": {
            "description": "Supported APM type",
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the supported APM type",
                "type": "string"
              }
            }
          }
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "SupportedApmType": {
      "description": "Supported APM type",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the supported APM type",
          "type": "string"
        }
      }
    },
    "GloballyEnabledApms": {
      "description": "Globally enabled APMs payload",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of the globally enabled APMs",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ApmReference": {
      "description": "A reference to the APM",
      "required": [
        "resourceId"
      ],
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "Resource Id of the APM",
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.AppPlatform/Spring/apms"
              }
            ]
          }
        }
      }
    },
    "ApmReferenceCollection": {
      "description": "Collection of ApmReferences",
      "type": "array",
      "x-ms-identifiers": [
        "resourceId"
      ],
      "items": {
        "description": "A reference to the APM",
        "required": [
          "resourceId"
        ],
        "type": "object",
        "properties": {
          "resourceId": {
            "description": "Resource Id of the APM",
            "type": "string",
            "format": "arm-id",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.AppPlatform/Spring/apms"
                }
              ]
            }
          }
        }
      }
    },
    "CertificateReference": {
      "description": "A reference to the certificate",
      "required": [
        "resourceId"
      ],
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "Resource Id of the certificate",
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.AppPlatform/Spring/certificates"
              }
            ]
          }
        }
      }
    },
    "CertificateReferenceCollection": {
      "description": "Collection of CertificateReferences",
      "type": "array",
      "x-ms-identifiers": [
        "resourceId"
      ],
      "items": {
        "description": "A reference to the certificate",
        "required": [
          "resourceId"
        ],
        "type": "object",
        "properties": {
          "resourceId": {
            "description": "Resource Id of the certificate",
            "type": "string",
            "format": "arm-id",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.AppPlatform/Spring/certificates"
                }
              ]
            }
          }
        }
      }
    },
    "GatewayResourceCollection": {
      "description": "Object that includes an array of gateway resources and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of gateway resources",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Spring Cloud Gateway resource",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified resource Id for the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "lastModifiedByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource modification (UTC).",
                    "type": "string"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "Spring Cloud Gateway properties payload",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "State of the Spring Cloud Gateway.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Succeeded",
                      "Failed",
                      "Deleting"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "GatewayProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "public": {
                    "description": "Indicates whether the Spring Cloud Gateway exposes endpoint.",
                    "type": "boolean",
                    "default": false
                  },
                  "url": {
                    "description": "URL of the Spring Cloud Gateway, exposed when 'public' is true.",
                    "type": "string",
                    "readOnly": true
                  },
                  "httpsOnly": {
                    "description": "Indicate if only https is allowed.",
                    "type": "boolean",
                    "default": false
                  },
                  "ssoProperties": {
                    "description": "Single sign-on related configuration",
                    "type": "object",
                    "properties": {
                      "scope": {
                        "description": "It defines the specific actions applications can be allowed to do on a user's behalf",
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "clientId": {
                        "description": "The public identifier for the application",
                        "type": "string"
                      },
                      "clientSecret": {
                        "description": "The secret known only to the application and the authorization server",
                        "type": "string"
                      },
                      "issuerUri": {
                        "description": "The URI of Issuer Identifier",
                        "type": "string"
                      }
                    }
                  },
                  "apiMetadataProperties": {
                    "description": "API metadata property for Spring Cloud Gateway",
                    "type": "object",
                    "properties": {
                      "title": {
                        "description": "Title describing the context of the APIs available on the Gateway instance (default: `Spring Cloud Gateway for K8S`)",
                        "type": "string"
                      },
                      "description": {
                        "description": "Detailed description of the APIs available on the Gateway instance (default: `Generated OpenAPI 3 document that describes the API routes configured.`)",
                        "type": "string"
                      },
                      "documentation": {
                        "description": "Location of additional documentation for the APIs available on the Gateway instance",
                        "type": "string"
                      },
                      "version": {
                        "description": "Version of APIs available on this Gateway instance (default: `unspecified`).",
                        "type": "string"
                      },
                      "serverUrl": {
                        "description": "Base URL that API consumers will use to access APIs on the Gateway instance.",
                        "type": "string"
                      }
                    }
                  },
                  "corsProperties": {
                    "description": "Cross-Origin Resource Sharing property",
                    "type": "object",
                    "properties": {
                      "allowedOrigins": {
                        "description": "Allowed origins to make cross-site requests. The special value `*` allows all domains.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "allowedOriginPatterns": {
                        "description": "Allowed origin patterns to make cross-site requests.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "allowedMethods": {
                        "description": "Allowed HTTP methods on cross-site requests. The special value `*` allows all methods. If not set, `GET` and `HEAD` are allowed by default.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "allowedHeaders": {
                        "description": "Allowed headers in cross-site requests. The special value `*` allows actual requests to send any header.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "maxAge": {
                        "format": "int32",
                        "description": "How long, in seconds, the response from a pre-flight request can be cached by clients.",
                        "type": "integer"
                      },
                      "allowCredentials": {
                        "description": "Whether user credentials are supported on cross-site requests. Valid values: `true`, `false`.",
                        "type": "boolean"
                      },
                      "exposedHeaders": {
                        "description": "HTTP response headers to expose for cross-site requests.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "clientAuth": {
                    "description": "Client-Certification Authentication.",
                    "type": "object",
                    "properties": {
                      "certificates": {
                        "description": "Collection of certificate resource Ids in Azure Spring Apps.",
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "certificateVerification": {
                        "description": "Whether to enable certificate verification or not",
                        "type": "string",
                        "default": "Disabled",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "GatewayCertificateVerification",
                          "values": [
                            {
                              "description": "Enable certificate verification in Spring Cloud Gateway.",
                              "value": "Enabled"
                            },
                            {
                              "description": "Disable certificate verification in Spring Cloud Gateway.",
                              "value": "Disabled"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "apms": {
                    "description": "Collection of ApmReferences in service level",
                    "type": "array",
                    "x-ms-identifiers": [
                      "resourceId"
                    ],
                    "items": {
                      "description": "A reference to the APM",
                      "required": [
                        "resourceId"
                      ],
                      "type": "object",
                      "properties": {
                        "resourceId": {
                          "description": "Resource Id of the APM",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.AppPlatform/Spring/apms"
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "environmentVariables": {
                    "description": "Environment variables of Spring Cloud Gateway",
                    "type": "object",
                    "properties": {
                      "properties": {
                        "description": "Non-sensitive properties",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "secrets": {
                        "description": "Sensitive properties",
                        "type": "object",
                        "x-ms-secret": true,
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "resourceRequests": {
                    "description": "The requested resource quantity for required CPU and Memory.",
                    "type": "object",
                    "properties": {
                      "cpu": {
                        "description": "Cpu allocated to each Spring Cloud Gateway instance.",
                        "type": "string",
                        "default": "1"
                      },
                      "memory": {
                        "description": "Memory allocated to each Spring Cloud Gateway instance.",
                        "type": "string",
                        "default": "2Gi"
                      }
                    }
                  },
                  "instances": {
                    "description": "Collection of instances belong to Spring Cloud Gateway.",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "description": "Collection of instances belong to the Spring Cloud Gateway",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "name": {
                          "description": "Name of the Spring Cloud Gateway instance",
                          "type": "string",
                          "readOnly": true
                        },
                        "status": {
                          "description": "Status of the Spring Cloud Gateway instance",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true
                  },
                  "operatorProperties": {
                    "readOnly": true,
                    "description": "Properties of the Spring Cloud Gateway Operator.",
                    "type": "object",
                    "properties": {
                      "resourceRequests": {
                        "description": "The requested resource quantity for required CPU and Memory.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "cpu": {
                            "description": "Cpu allocated to each Spring Cloud Gateway Operator instance.",
                            "type": "string",
                            "readOnly": true
                          },
                          "memory": {
                            "description": "Memory allocated to each Spring Cloud Gateway Operator instance.",
                            "type": "string",
                            "readOnly": true
                          },
                          "instanceCount": {
                            "format": "int32",
                            "description": "Instance count of the Spring Cloud Gateway Operator.",
                            "type": "integer",
                            "readOnly": true
                          }
                        }
                      },
                      "instances": {
                        "description": "Collection of instances belong to Spring Cloud Gateway operator.",
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "description": "Collection of instances belong to the Spring Cloud Gateway",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "name": {
                              "description": "Name of the Spring Cloud Gateway instance",
                              "type": "string",
                              "readOnly": true
                            },
                            "status": {
                              "description": "Status of the Spring Cloud Gateway instance",
                              "type": "string",
                              "readOnly": true
                            }
                          }
                        },
                        "readOnly": true
                      }
                    }
                  }
                }
              },
              "sku": {
                "description": "Sku of the Spring Cloud Gateway resource",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the Sku",
                    "type": "string",
                    "default": "S0"
                  },
                  "tier": {
                    "description": "Tier of the Sku",
                    "type": "string",
                    "default": "Standard"
                  },
                  "capacity": {
                    "format": "int32",
                    "description": "Current capacity of the target resource",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "GatewayResource": {
      "description": "Spring Cloud Gateway resource",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "Spring Cloud Gateway properties payload",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "State of the Spring Cloud Gateway.",
              "enum": [
                "Creating",
                "Updating",
                "Succeeded",
                "Failed",
                "Deleting"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "GatewayProvisioningState",
                "modelAsString": true
              }
            },
            "public": {
              "description": "Indicates whether the Spring Cloud Gateway exposes endpoint.",
              "type": "boolean",
              "default": false
            },
            "url": {
              "description": "URL of the Spring Cloud Gateway, exposed when 'public' is true.",
              "type": "string",
              "readOnly": true
            },
            "httpsOnly": {
              "description": "Indicate if only https is allowed.",
              "type": "boolean",
              "default": false
            },
            "ssoProperties": {
              "description": "Single sign-on related configuration",
              "type": "object",
              "properties": {
                "scope": {
                  "description": "It defines the specific actions applications can be allowed to do on a user's behalf",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "clientId": {
                  "description": "The public identifier for the application",
                  "type": "string"
                },
                "clientSecret": {
                  "description": "The secret known only to the application and the authorization server",
                  "type": "string"
                },
                "issuerUri": {
                  "description": "The URI of Issuer Identifier",
                  "type": "string"
                }
              }
            },
            "apiMetadataProperties": {
              "description": "API metadata property for Spring Cloud Gateway",
              "type": "object",
              "properties": {
                "title": {
                  "description": "Title describing the context of the APIs available on the Gateway instance (default: `Spring Cloud Gateway for K8S`)",
                  "type": "string"
                },
                "description": {
                  "description": "Detailed description of the APIs available on the Gateway instance (default: `Generated OpenAPI 3 document that describes the API routes configured.`)",
                  "type": "string"
                },
                "documentation": {
                  "description": "Location of additional documentation for the APIs available on the Gateway instance",
                  "type": "string"
                },
                "version": {
                  "description": "Version of APIs available on this Gateway instance (default: `unspecified`).",
                  "type": "string"
                },
                "serverUrl": {
                  "description": "Base URL that API consumers will use to access APIs on the Gateway instance.",
                  "type": "string"
                }
              }
            },
            "corsProperties": {
              "description": "Cross-Origin Resource Sharing property",
              "type": "object",
              "properties": {
                "allowedOrigins": {
                  "description": "Allowed origins to make cross-site requests. The special value `*` allows all domains.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "allowedOriginPatterns": {
                  "description": "Allowed origin patterns to make cross-site requests.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "allowedMethods": {
                  "description": "Allowed HTTP methods on cross-site requests. The special value `*` allows all methods. If not set, `GET` and `HEAD` are allowed by default.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "allowedHeaders": {
                  "description": "Allowed headers in cross-site requests. The special value `*` allows actual requests to send any header.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "maxAge": {
                  "format": "int32",
                  "description": "How long, in seconds, the response from a pre-flight request can be cached by clients.",
                  "type": "integer"
                },
                "allowCredentials": {
                  "description": "Whether user credentials are supported on cross-site requests. Valid values: `true`, `false`.",
                  "type": "boolean"
                },
                "exposedHeaders": {
                  "description": "HTTP response headers to expose for cross-site requests.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "clientAuth": {
              "description": "Client-Certification Authentication.",
              "type": "object",
              "properties": {
                "certificates": {
                  "description": "Collection of certificate resource Ids in Azure Spring Apps.",
                  "uniqueItems": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "certificateVerification": {
                  "description": "Whether to enable certificate verification or not",
                  "type": "string",
                  "default": "Disabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "GatewayCertificateVerification",
                    "values": [
                      {
                        "description": "Enable certificate verification in Spring Cloud Gateway.",
                        "value": "Enabled"
                      },
                      {
                        "description": "Disable certificate verification in Spring Cloud Gateway.",
                        "value": "Disabled"
                      }
                    ]
                  }
                }
              }
            },
            "apms": {
              "description": "Collection of ApmReferences in service level",
              "type": "array",
              "x-ms-identifiers": [
                "resourceId"
              ],
              "items": {
                "description": "A reference to the APM",
                "required": [
                  "resourceId"
                ],
                "type": "object",
                "properties": {
                  "resourceId": {
                    "description": "Resource Id of the APM",
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.AppPlatform/Spring/apms"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "environmentVariables": {
              "description": "Environment variables of Spring Cloud Gateway",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "Non-sensitive properties",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "secrets": {
                  "description": "Sensitive properties",
                  "type": "object",
                  "x-ms-secret": true,
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "resourceRequests": {
              "description": "The requested resource quantity for required CPU and Memory.",
              "type": "object",
              "properties": {
                "cpu": {
                  "description": "Cpu allocated to each Spring Cloud Gateway instance.",
                  "type": "string",
                  "default": "1"
                },
                "memory": {
                  "description": "Memory allocated to each Spring Cloud Gateway instance.",
                  "type": "string",
                  "default": "2Gi"
                }
              }
            },
            "instances": {
              "description": "Collection of instances belong to Spring Cloud Gateway.",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "description": "Collection of instances belong to the Spring Cloud Gateway",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "name": {
                    "description": "Name of the Spring Cloud Gateway instance",
                    "type": "string",
                    "readOnly": true
                  },
                  "status": {
                    "description": "Status of the Spring Cloud Gateway instance",
                    "type": "string",
                    "readOnly": true
                  }
                }
              },
              "readOnly": true
            },
            "operatorProperties": {
              "readOnly": true,
              "description": "Properties of the Spring Cloud Gateway Operator.",
              "type": "object",
              "properties": {
                "resourceRequests": {
                  "description": "The requested resource quantity for required CPU and Memory.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "cpu": {
                      "description": "Cpu allocated to each Spring Cloud Gateway Operator instance.",
                      "type": "string",
                      "readOnly": true
                    },
                    "memory": {
                      "description": "Memory allocated to each Spring Cloud Gateway Operator instance.",
                      "type": "string",
                      "readOnly": true
                    },
                    "instanceCount": {
                      "format": "int32",
                      "description": "Instance count of the Spring Cloud Gateway Operator.",
                      "type": "integer",
                      "readOnly": true
                    }
                  }
                },
                "instances": {
                  "description": "Collection of instances belong to Spring Cloud Gateway operator.",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Collection of instances belong to the Spring Cloud Gateway",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "name": {
                        "description": "Name of the Spring Cloud Gateway instance",
                        "type": "string",
                        "readOnly": true
                      },
                      "status": {
                        "description": "Status of the Spring Cloud Gateway instance",
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true
                }
              }
            }
          }
        },
        "sku": {
          "description": "Sku of the Spring Cloud Gateway resource",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the Sku",
              "type": "string",
              "default": "S0"
            },
            "tier": {
              "description": "Tier of the Sku",
              "type": "string",
              "default": "Standard"
            },
            "capacity": {
              "format": "int32",
              "description": "Current capacity of the target resource",
              "type": "integer"
            }
          }
        }
      }
    },
    "SkuObject": {
      "description": "Resource Sku object used for scaling out and scaling in.",
      "type": "object",
      "properties": {
        "sku": {
          "description": "Sku of the Spring Cloud Gateway resource",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the Sku",
              "type": "string",
              "default": "S0"
            },
            "tier": {
              "description": "Tier of the Sku",
              "type": "string",
              "default": "Standard"
            },
            "capacity": {
              "format": "int32",
              "description": "Current capacity of the target resource",
              "type": "integer"
            }
          }
        }
      }
    },
    "GatewayProperties": {
      "description": "Spring Cloud Gateway properties payload",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "State of the Spring Cloud Gateway.",
          "enum": [
            "Creating",
            "Updating",
            "Succeeded",
            "Failed",
            "Deleting"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "GatewayProvisioningState",
            "modelAsString": true
          }
        },
        "public": {
          "description": "Indicates whether the Spring Cloud Gateway exposes endpoint.",
          "type": "boolean",
          "default": false
        },
        "url": {
          "description": "URL of the Spring Cloud Gateway, exposed when 'public' is true.",
          "type": "string",
          "readOnly": true
        },
        "httpsOnly": {
          "description": "Indicate if only https is allowed.",
          "type": "boolean",
          "default": false
        },
        "ssoProperties": {
          "description": "Single sign-on related configuration",
          "type": "object",
          "properties": {
            "scope": {
              "description": "It defines the specific actions applications can be allowed to do on a user's behalf",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "clientId": {
              "description": "The public identifier for the application",
              "type": "string"
            },
            "clientSecret": {
              "description": "The secret known only to the application and the authorization server",
              "type": "string"
            },
            "issuerUri": {
              "description": "The URI of Issuer Identifier",
              "type": "string"
            }
          }
        },
        "apiMetadataProperties": {
          "description": "API metadata property for Spring Cloud Gateway",
          "type": "object",
          "properties": {
            "title": {
              "description": "Title describing the context of the APIs available on the Gateway instance (default: `Spring Cloud Gateway for K8S`)",
              "type": "string"
            },
            "description": {
              "description": "Detailed description of the APIs available on the Gateway instance (default: `Generated OpenAPI 3 document that describes the API routes configured.`)",
              "type": "string"
            },
            "documentation": {
              "description": "Location of additional documentation for the APIs available on the Gateway instance",
              "type": "string"
            },
            "version": {
              "description": "Version of APIs available on this Gateway instance (default: `unspecified`).",
              "type": "string"
            },
            "serverUrl": {
              "description": "Base URL that API consumers will use to access APIs on the Gateway instance.",
              "type": "string"
            }
          }
        },
        "corsProperties": {
          "description": "Cross-Origin Resource Sharing property",
          "type": "object",
          "properties": {
            "allowedOrigins": {
              "description": "Allowed origins to make cross-site requests. The special value `*` allows all domains.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "allowedOriginPatterns": {
              "description": "Allowed origin patterns to make cross-site requests.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "allowedMethods": {
              "description": "Allowed HTTP methods on cross-site requests. The special value `*` allows all methods. If not set, `GET` and `HEAD` are allowed by default.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "allowedHeaders": {
              "description": "Allowed headers in cross-site requests. The special value `*` allows actual requests to send any header.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "maxAge": {
              "format": "int32",
              "description": "How long, in seconds, the response from a pre-flight request can be cached by clients.",
              "type": "integer"
            },
            "allowCredentials": {
              "description": "Whether user credentials are supported on cross-site requests. Valid values: `true`, `false`.",
              "type": "boolean"
            },
            "exposedHeaders": {
              "description": "HTTP response headers to expose for cross-site requests.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "clientAuth": {
          "description": "Client-Certification Authentication.",
          "type": "object",
          "properties": {
            "certificates": {
              "description": "Collection of certificate resource Ids in Azure Spring Apps.",
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "certificateVerification": {
              "description": "Whether to enable certificate verification or not",
              "type": "string",
              "default": "Disabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "GatewayCertificateVerification",
                "values": [
                  {
                    "description": "Enable certificate verification in Spring Cloud Gateway.",
                    "value": "Enabled"
                  },
                  {
                    "description": "Disable certificate verification in Spring Cloud Gateway.",
                    "value": "Disabled"
                  }
                ]
              }
            }
          }
        },
        "apms": {
          "description": "Collection of ApmReferences in service level",
          "type": "array",
          "x-ms-identifiers": [
            "resourceId"
          ],
          "items": {
            "description": "A reference to the APM",
            "required": [
              "resourceId"
            ],
            "type": "object",
            "properties": {
              "resourceId": {
                "description": "Resource Id of the APM",
                "type": "string",
                "format": "arm-id",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.AppPlatform/Spring/apms"
                    }
                  ]
                }
              }
            }
          }
        },
        "environmentVariables": {
          "description": "Environment variables of Spring Cloud Gateway",
          "type": "object",
          "properties": {
            "properties": {
              "description": "Non-sensitive properties",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "secrets": {
              "description": "Sensitive properties",
              "type": "object",
              "x-ms-secret": true,
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "resourceRequests": {
          "description": "The requested resource quantity for required CPU and Memory.",
          "type": "object",
          "properties": {
            "cpu": {
              "description": "Cpu allocated to each Spring Cloud Gateway instance.",
              "type": "string",
              "default": "1"
            },
            "memory": {
              "description": "Memory allocated to each Spring Cloud Gateway instance.",
              "type": "string",
              "default": "2Gi"
            }
          }
        },
        "instances": {
          "description": "Collection of instances belong to Spring Cloud Gateway.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Collection of instances belong to the Spring Cloud Gateway",
            "type": "object",
            "readOnly": true,
            "properties": {
              "name": {
                "description": "Name of the Spring Cloud Gateway instance",
                "type": "string",
                "readOnly": true
              },
              "status": {
                "description": "Status of the Spring Cloud Gateway instance",
                "type": "string",
                "readOnly": true
              }
            }
          },
          "readOnly": true
        },
        "operatorProperties": {
          "readOnly": true,
          "description": "Properties of the Spring Cloud Gateway Operator.",
          "type": "object",
          "properties": {
            "resourceRequests": {
              "description": "The requested resource quantity for required CPU and Memory.",
              "type": "object",
              "readOnly": true,
              "properties": {
                "cpu": {
                  "description": "Cpu allocated to each Spring Cloud Gateway Operator instance.",
                  "type": "string",
                  "readOnly": true
                },
                "memory": {
                  "description": "Memory allocated to each Spring Cloud Gateway Operator instance.",
                  "type": "string",
                  "readOnly": true
                },
                "instanceCount": {
                  "format": "int32",
                  "description": "Instance count of the Spring Cloud Gateway Operator.",
                  "type": "integer",
                  "readOnly": true
                }
              }
            },
            "instances": {
              "description": "Collection of instances belong to Spring Cloud Gateway operator.",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "description": "Collection of instances belong to the Spring Cloud Gateway",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "name": {
                    "description": "Name of the Spring Cloud Gateway instance",
                    "type": "string",
                    "readOnly": true
                  },
                  "status": {
                    "description": "Status of the Spring Cloud Gateway instance",
                    "type": "string",
                    "readOnly": true
                  }
                }
              },
              "readOnly": true
            }
          }
        }
      }
    },
    "SsoProperties": {
      "description": "Single sign-on related configuration",
      "type": "object",
      "properties": {
        "scope": {
          "description": "It defines the specific actions applications can be allowed to do on a user's behalf",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientId": {
          "description": "The public identifier for the application",
          "type": "string"
        },
        "clientSecret": {
          "description": "The secret known only to the application and the authorization server",
          "type": "string"
        },
        "issuerUri": {
          "description": "The URI of Issuer Identifier",
          "type": "string"
        }
      }
    },
    "GatewayApiMetadataProperties": {
      "description": "API metadata property for Spring Cloud Gateway",
      "type": "object",
      "properties": {
        "title": {
          "description": "Title describing the context of the APIs available on the Gateway instance (default: `Spring Cloud Gateway for K8S`)",
          "type": "string"
        },
        "description": {
          "description": "Detailed description of the APIs available on the Gateway instance (default: `Generated OpenAPI 3 document that describes the API routes configured.`)",
          "type": "string"
        },
        "documentation": {
          "description": "Location of additional documentation for the APIs available on the Gateway instance",
          "type": "string"
        },
        "version": {
          "description": "Version of APIs available on this Gateway instance (default: `unspecified`).",
          "type": "string"
        },
        "serverUrl": {
          "description": "Base URL that API consumers will use to access APIs on the Gateway instance.",
          "type": "string"
        }
      }
    },
    "GatewayCorsProperties": {
      "description": "Cross-Origin Resource Sharing property",
      "type": "object",
      "properties": {
        "allowedOrigins": {
          "description": "Allowed origins to make cross-site requests. The special value `*` allows all domains.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedOriginPatterns": {
          "description": "Allowed origin patterns to make cross-site requests.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedMethods": {
          "description": "Allowed HTTP methods on cross-site requests. The special value `*` allows all methods. If not set, `GET` and `HEAD` are allowed by default.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedHeaders": {
          "description": "Allowed headers in cross-site requests. The special value `*` allows actual requests to send any header.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maxAge": {
          "format": "int32",
          "description": "How long, in seconds, the response from a pre-flight request can be cached by clients.",
          "type": "integer"
        },
        "allowCredentials": {
          "description": "Whether user credentials are supported on cross-site requests. Valid values: `true`, `false`.",
          "type": "boolean"
        },
        "exposedHeaders": {
          "description": "HTTP response headers to expose for cross-site requests.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GatewayResourceRequests": {
      "description": "Resource request payload of Spring Cloud Gateway.",
      "type": "object",
      "properties": {
        "cpu": {
          "description": "Cpu allocated to each Spring Cloud Gateway instance.",
          "type": "string",
          "default": "1"
        },
        "memory": {
          "description": "Memory allocated to each Spring Cloud Gateway instance.",
          "type": "string",
          "default": "2Gi"
        }
      }
    },
    "GatewayOperatorProperties": {
      "description": "Properties of the Spring Cloud Gateway Operator.",
      "type": "object",
      "readOnly": true,
      "properties": {
        "resourceRequests": {
          "description": "The requested resource quantity for required CPU and Memory.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "cpu": {
              "description": "Cpu allocated to each Spring Cloud Gateway Operator instance.",
              "type": "string",
              "readOnly": true
            },
            "memory": {
              "description": "Memory allocated to each Spring Cloud Gateway Operator instance.",
              "type": "string",
              "readOnly": true
            },
            "instanceCount": {
              "format": "int32",
              "description": "Instance count of the Spring Cloud Gateway Operator.",
              "type": "integer",
              "readOnly": true
            }
          }
        },
        "instances": {
          "description": "Collection of instances belong to Spring Cloud Gateway operator.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Collection of instances belong to the Spring Cloud Gateway",
            "type": "object",
            "readOnly": true,
            "properties": {
              "name": {
                "description": "Name of the Spring Cloud Gateway instance",
                "type": "string",
                "readOnly": true
              },
              "status": {
                "description": "Status of the Spring Cloud Gateway instance",
                "type": "string",
                "readOnly": true
              }
            }
          },
          "readOnly": true
        }
      }
    },
    "GatewayOperatorResourceRequests": {
      "description": "Properties of the Spring Cloud Gateway Operator.",
      "type": "object",
      "readOnly": true,
      "properties": {
        "cpu": {
          "description": "Cpu allocated to each Spring Cloud Gateway Operator instance.",
          "type": "string",
          "readOnly": true
        },
        "memory": {
          "description": "Memory allocated to each Spring Cloud Gateway Operator instance.",
          "type": "string",
          "readOnly": true
        },
        "instanceCount": {
          "format": "int32",
          "description": "Instance count of the Spring Cloud Gateway Operator.",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "GatewayInstance": {
      "description": "Collection of instances belong to the Spring Cloud Gateway",
      "type": "object",
      "readOnly": true,
      "properties": {
        "name": {
          "description": "Name of the Spring Cloud Gateway instance",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "Status of the Spring Cloud Gateway instance",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GatewayEnvSecrets": {
      "description": "Sensitive properties for Spring Cloud Gateway",
      "type": "object",
      "x-ms-secret": true,
      "additionalProperties": {
        "type": "string"
      }
    },
    "GatewayRouteConfigResource": {
      "description": "Spring Cloud Gateway route config resource",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "API route config of the Spring Cloud Gateway",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "State of the Spring Cloud Gateway route config.",
              "enum": [
                "Creating",
                "Updating",
                "Succeeded",
                "Failed",
                "Deleting"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "GatewayProvisioningState",
                "modelAsString": true
              }
            },
            "appResourceId": {
              "description": "The resource Id of the Azure Spring Apps app, required unless route defines `uri`.",
              "type": "string"
            },
            "openApi": {
              "description": "OpenAPI properties of Spring Cloud Gateway route config.",
              "type": "object",
              "properties": {
                "uri": {
                  "description": "The URI of OpenAPI specification.",
                  "type": "string"
                }
              }
            },
            "protocol": {
              "description": "Protocol of routed Azure Spring Apps applications.",
              "enum": [
                "HTTP",
                "HTTPS"
              ],
              "default": "HTTP",
              "type": "string",
              "x-ms-enum": {
                "name": "GatewayRouteConfigProtocol",
                "modelAsString": true
              }
            },
            "routes": {
              "description": "Array of API routes, each route contains properties such as `title`, `uri`, `ssoEnabled`, `predicates`, `filters`.",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "description": "API route config of the Spring Cloud Gateway",
                "type": "object",
                "properties": {
                  "title": {
                    "description": "A title, will be applied to methods in the generated OpenAPI documentation.",
                    "type": "string"
                  },
                  "description": {
                    "description": "A description, will be applied to methods in the generated OpenAPI documentation.",
                    "type": "string"
                  },
                  "uri": {
                    "description": "Full uri, will override `appName`.",
                    "type": "string"
                  },
                  "ssoEnabled": {
                    "description": "Enable sso validation.",
                    "type": "boolean"
                  },
                  "tokenRelay": {
                    "description": "Pass currently-authenticated user's identity token to application service, default is 'false'",
                    "type": "boolean"
                  },
                  "predicates": {
                    "description": "A number of conditions to evaluate a route for each request. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "filters": {
                    "description": "To modify the request before sending it to the target endpoint, or the received response.",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "order": {
                    "description": "Route processing order.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "tags": {
                    "description": "Classification tags, will be applied to methods in the generated OpenAPI documentation.",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "ssoEnabled": {
              "description": "Enable Single Sign-On in app level.",
              "type": "boolean"
            },
            "predicates": {
              "description": "A number of conditions to evaluate a route for each request in app level. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "filters": {
              "description": "To modify the request before sending it to the target endpoint, or the received response in app level.",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "GatewayRouteConfigProperties": {
      "description": "API route config of the Spring Cloud Gateway",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "State of the Spring Cloud Gateway route config.",
          "enum": [
            "Creating",
            "Updating",
            "Succeeded",
            "Failed",
            "Deleting"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "GatewayProvisioningState",
            "modelAsString": true
          }
        },
        "appResourceId": {
          "description": "The resource Id of the Azure Spring Apps app, required unless route defines `uri`.",
          "type": "string"
        },
        "openApi": {
          "description": "OpenAPI properties of Spring Cloud Gateway route config.",
          "type": "object",
          "properties": {
            "uri": {
              "description": "The URI of OpenAPI specification.",
              "type": "string"
            }
          }
        },
        "protocol": {
          "description": "Protocol of routed Azure Spring Apps applications.",
          "enum": [
            "HTTP",
            "HTTPS"
          ],
          "default": "HTTP",
          "type": "string",
          "x-ms-enum": {
            "name": "GatewayRouteConfigProtocol",
            "modelAsString": true
          }
        },
        "routes": {
          "description": "Array of API routes, each route contains properties such as `title`, `uri`, `ssoEnabled`, `predicates`, `filters`.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "API route config of the Spring Cloud Gateway",
            "type": "object",
            "properties": {
              "title": {
                "description": "A title, will be applied to methods in the generated OpenAPI documentation.",
                "type": "string"
              },
              "description": {
                "description": "A description, will be applied to methods in the generated OpenAPI documentation.",
                "type": "string"
              },
              "uri": {
                "description": "Full uri, will override `appName`.",
                "type": "string"
              },
              "ssoEnabled": {
                "description": "Enable sso validation.",
                "type": "boolean"
              },
              "tokenRelay": {
                "description": "Pass currently-authenticated user's identity token to application service, default is 'false'",
                "type": "boolean"
              },
              "predicates": {
                "description": "A number of conditions to evaluate a route for each request. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "filters": {
                "description": "To modify the request before sending it to the target endpoint, or the received response.",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "order": {
                "description": "Route processing order.",
                "type": "integer",
                "format": "int32"
              },
              "tags": {
                "description": "Classification tags, will be applied to methods in the generated OpenAPI documentation.",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "ssoEnabled": {
          "description": "Enable Single Sign-On in app level.",
          "type": "boolean"
        },
        "predicates": {
          "description": "A number of conditions to evaluate a route for each request in app level. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filters": {
          "description": "To modify the request before sending it to the target endpoint, or the received response in app level.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GatewayRouteConfigOpenApiProperties": {
      "description": "OpenAPI properties of Spring Cloud Gateway route config.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The URI of OpenAPI specification.",
          "type": "string"
        }
      }
    },
    "GatewayApiRoute": {
      "description": "API route config of the Spring Cloud Gateway",
      "type": "object",
      "properties": {
        "title": {
          "description": "A title, will be applied to methods in the generated OpenAPI documentation.",
          "type": "string"
        },
        "description": {
          "description": "A description, will be applied to methods in the generated OpenAPI documentation.",
          "type": "string"
        },
        "uri": {
          "description": "Full uri, will override `appName`.",
          "type": "string"
        },
        "ssoEnabled": {
          "description": "Enable sso validation.",
          "type": "boolean"
        },
        "tokenRelay": {
          "description": "Pass currently-authenticated user's identity token to application service, default is 'false'",
          "type": "boolean"
        },
        "predicates": {
          "description": "A number of conditions to evaluate a route for each request. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filters": {
          "description": "To modify the request before sending it to the target endpoint, or the received response.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "order": {
          "description": "Route processing order.",
          "type": "integer",
          "format": "int32"
        },
        "tags": {
          "description": "Classification tags, will be applied to methods in the generated OpenAPI documentation.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GatewayRouteConfigResourceCollection": {
      "description": "Object that includes an array of Spring Cloud Gateway route config resources and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of Spring Cloud Gateway route config resources",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Spring Cloud Gateway route config resource",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified resource Id for the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "lastModifiedByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource modification (UTC).",
                    "type": "string"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "API route config of the Spring Cloud Gateway",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "State of the Spring Cloud Gateway route config.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Succeeded",
                      "Failed",
                      "Deleting"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "GatewayProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "appResourceId": {
                    "description": "The resource Id of the Azure Spring Apps app, required unless route defines `uri`.",
                    "type": "string"
                  },
                  "openApi": {
                    "description": "OpenAPI properties of Spring Cloud Gateway route config.",
                    "type": "object",
                    "properties": {
                      "uri": {
                        "description": "The URI of OpenAPI specification.",
                        "type": "string"
                      }
                    }
                  },
                  "protocol": {
                    "description": "Protocol of routed Azure Spring Apps applications.",
                    "enum": [
                      "HTTP",
                      "HTTPS"
                    ],
                    "default": "HTTP",
                    "type": "string",
                    "x-ms-enum": {
                      "name": "GatewayRouteConfigProtocol",
                      "modelAsString": true
                    }
                  },
                  "routes": {
                    "description": "Array of API routes, each route contains properties such as `title`, `uri`, `ssoEnabled`, `predicates`, `filters`.",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "description": "API route config of the Spring Cloud Gateway",
                      "type": "object",
                      "properties": {
                        "title": {
                          "description": "A title, will be applied to methods in the generated OpenAPI documentation.",
                          "type": "string"
                        },
                        "description": {
                          "description": "A description, will be applied to methods in the generated OpenAPI documentation.",
                          "type": "string"
                        },
                        "uri": {
                          "description": "Full uri, will override `appName`.",
                          "type": "string"
                        },
                        "ssoEnabled": {
                          "description": "Enable sso validation.",
                          "type": "boolean"
                        },
                        "tokenRelay": {
                          "description": "Pass currently-authenticated user's identity token to application service, default is 'false'",
                          "type": "boolean"
                        },
                        "predicates": {
                          "description": "A number of conditions to evaluate a route for each request. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.",
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "filters": {
                          "description": "To modify the request before sending it to the target endpoint, or the received response.",
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "order": {
                          "description": "Route processing order.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "tags": {
                          "description": "Classification tags, will be applied to methods in the generated OpenAPI documentation.",
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "ssoEnabled": {
                    "description": "Enable Single Sign-On in app level.",
                    "type": "boolean"
                  },
                  "predicates": {
                    "description": "A number of conditions to evaluate a route for each request in app level. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "filters": {
                    "description": "To modify the request before sending it to the target endpoint, or the received response in app level.",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "GatewayCustomDomainResource": {
      "description": "Custom domain of the Spring Cloud Gateway",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "The properties of custom domain for Spring Cloud Gateway",
          "type": "object",
          "properties": {
            "thumbprint": {
              "description": "The thumbprint of bound certificate.",
              "type": "string"
            }
          }
        }
      }
    },
    "GatewayCustomDomainProperties": {
      "description": "The properties of custom domain for Spring Cloud Gateway",
      "type": "object",
      "properties": {
        "thumbprint": {
          "description": "The thumbprint of bound certificate.",
          "type": "string"
        }
      }
    },
    "GatewayCustomDomainResourceCollection": {
      "description": "Object that includes an array of Spring Cloud Gateway custom domain resources and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of Spring Cloud Gateway custom domain resources",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Custom domain of the Spring Cloud Gateway",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified resource Id for the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "lastModifiedByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource modification (UTC).",
                    "type": "string"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "The properties of custom domain for Spring Cloud Gateway",
                "type": "object",
                "properties": {
                  "thumbprint": {
                    "description": "The thumbprint of bound certificate.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "ApiPortalResourceCollection": {
      "description": "Object that includes an array of API portal resources and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of API portal resources",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "API portal resource",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified resource Id for the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "lastModifiedByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource modification (UTC).",
                    "type": "string"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "API portal properties payload",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "State of the API portal.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Succeeded",
                      "Failed",
                      "Deleting"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "ApiPortalProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "public": {
                    "description": "Indicates whether the API portal exposes endpoint.",
                    "type": "boolean",
                    "default": false
                  },
                  "url": {
                    "description": "URL of the API portal, exposed when 'public' is true.",
                    "type": "string",
                    "readOnly": true
                  },
                  "httpsOnly": {
                    "description": "Indicate if only https is allowed.",
                    "type": "boolean",
                    "default": false
                  },
                  "gatewayIds": {
                    "description": "The array of resource Ids of gateway to integrate with API portal.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "sourceUrls": {
                    "description": "Collection of OpenAPI source URL locations.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "ssoProperties": {
                    "description": "Single sign-on related configuration",
                    "type": "object",
                    "properties": {
                      "scope": {
                        "description": "It defines the specific actions applications can be allowed to do on a user's behalf",
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "clientId": {
                        "description": "The public identifier for the application",
                        "type": "string"
                      },
                      "clientSecret": {
                        "description": "The secret known only to the application and the authorization server",
                        "type": "string"
                      },
                      "issuerUri": {
                        "description": "The URI of Issuer Identifier",
                        "type": "string"
                      }
                    }
                  },
                  "resourceRequests": {
                    "description": "The requested resource quantity for required CPU and Memory.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "cpu": {
                        "description": "Cpu allocated to each API portal instance",
                        "type": "string",
                        "readOnly": true
                      },
                      "memory": {
                        "description": "Memory allocated to each API portal instance",
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  },
                  "instances": {
                    "description": "Collection of instances belong to API portal.",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "description": "Collection of instances belong to the API portal",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the API portal instance",
                          "type": "string",
                          "readOnly": true
                        },
                        "status": {
                          "description": "Status of the API portal instance",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true
                  },
                  "apiTryOutEnabledState": {
                    "description": "Indicates whether the API try-out feature is enabled or disabled. When enabled, users can try out the API by sending requests and viewing responses in API portal. When disabled, users cannot try out the API.",
                    "type": "string",
                    "default": "Enabled",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "ApiPortalApiTryOutEnabledState",
                      "modelAsString": true
                    }
                  }
                }
              },
              "sku": {
                "description": "Sku of the API portal resource",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the Sku",
                    "type": "string",
                    "default": "S0"
                  },
                  "tier": {
                    "description": "Tier of the Sku",
                    "type": "string",
                    "default": "Standard"
                  },
                  "capacity": {
                    "format": "int32",
                    "description": "Current capacity of the target resource",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "ApiPortalResource": {
      "description": "API portal resource",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "API portal properties payload",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "State of the API portal.",
              "enum": [
                "Creating",
                "Updating",
                "Succeeded",
                "Failed",
                "Deleting"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ApiPortalProvisioningState",
                "modelAsString": true
              }
            },
            "public": {
              "description": "Indicates whether the API portal exposes endpoint.",
              "type": "boolean",
              "default": false
            },
            "url": {
              "description": "URL of the API portal, exposed when 'public' is true.",
              "type": "string",
              "readOnly": true
            },
            "httpsOnly": {
              "description": "Indicate if only https is allowed.",
              "type": "boolean",
              "default": false
            },
            "gatewayIds": {
              "description": "The array of resource Ids of gateway to integrate with API portal.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "sourceUrls": {
              "description": "Collection of OpenAPI source URL locations.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "ssoProperties": {
              "description": "Single sign-on related configuration",
              "type": "object",
              "properties": {
                "scope": {
                  "description": "It defines the specific actions applications can be allowed to do on a user's behalf",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "clientId": {
                  "description": "The public identifier for the application",
                  "type": "string"
                },
                "clientSecret": {
                  "description": "The secret known only to the application and the authorization server",
                  "type": "string"
                },
                "issuerUri": {
                  "description": "The URI of Issuer Identifier",
                  "type": "string"
                }
              }
            },
            "resourceRequests": {
              "description": "The requested resource quantity for required CPU and Memory.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "cpu": {
                  "description": "Cpu allocated to each API portal instance",
                  "type": "string",
                  "readOnly": true
                },
                "memory": {
                  "description": "Memory allocated to each API portal instance",
                  "type": "string",
                  "readOnly": true
                }
              }
            },
            "instances": {
              "description": "Collection of instances belong to API portal.",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "description": "Collection of instances belong to the API portal",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the API portal instance",
                    "type": "string",
                    "readOnly": true
                  },
                  "status": {
                    "description": "Status of the API portal instance",
                    "type": "string",
                    "readOnly": true
                  }
                }
              },
              "readOnly": true
            },
            "apiTryOutEnabledState": {
              "description": "Indicates whether the API try-out feature is enabled or disabled. When enabled, users can try out the API by sending requests and viewing responses in API portal. When disabled, users cannot try out the API.",
              "type": "string",
              "default": "Enabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "ApiPortalApiTryOutEnabledState",
                "modelAsString": true
              }
            }
          }
        },
        "sku": {
          "description": "Sku of the API portal resource",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the Sku",
              "type": "string",
              "default": "S0"
            },
            "tier": {
              "description": "Tier of the Sku",
              "type": "string",
              "default": "Standard"
            },
            "capacity": {
              "format": "int32",
              "description": "Current capacity of the target resource",
              "type": "integer"
            }
          }
        }
      }
    },
    "ApiPortalProperties": {
      "description": "API portal properties payload",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "State of the API portal.",
          "enum": [
            "Creating",
            "Updating",
            "Succeeded",
            "Failed",
            "Deleting"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ApiPortalProvisioningState",
            "modelAsString": true
          }
        },
        "public": {
          "description": "Indicates whether the API portal exposes endpoint.",
          "type": "boolean",
          "default": false
        },
        "url": {
          "description": "URL of the API portal, exposed when 'public' is true.",
          "type": "string",
          "readOnly": true
        },
        "httpsOnly": {
          "description": "Indicate if only https is allowed.",
          "type": "boolean",
          "default": false
        },
        "gatewayIds": {
          "description": "The array of resource Ids of gateway to integrate with API portal.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sourceUrls": {
          "description": "Collection of OpenAPI source URL locations.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ssoProperties": {
          "description": "Single sign-on related configuration",
          "type": "object",
          "properties": {
            "scope": {
              "description": "It defines the specific actions applications can be allowed to do on a user's behalf",
              "uniqueItems": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "clientId": {
              "description": "The public identifier for the application",
              "type": "string"
            },
            "clientSecret": {
              "description": "The secret known only to the application and the authorization server",
              "type": "string"
            },
            "issuerUri": {
              "description": "The URI of Issuer Identifier",
              "type": "string"
            }
          }
        },
        "resourceRequests": {
          "description": "The requested resource quantity for required CPU and Memory.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "cpu": {
              "description": "Cpu allocated to each API portal instance",
              "type": "string",
              "readOnly": true
            },
            "memory": {
              "description": "Memory allocated to each API portal instance",
              "type": "string",
              "readOnly": true
            }
          }
        },
        "instances": {
          "description": "Collection of instances belong to API portal.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Collection of instances belong to the API portal",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the API portal instance",
                "type": "string",
                "readOnly": true
              },
              "status": {
                "description": "Status of the API portal instance",
                "type": "string",
                "readOnly": true
              }
            }
          },
          "readOnly": true
        },
        "apiTryOutEnabledState": {
          "description": "Indicates whether the API try-out feature is enabled or disabled. When enabled, users can try out the API by sending requests and viewing responses in API portal. When disabled, users cannot try out the API.",
          "type": "string",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ApiPortalApiTryOutEnabledState",
            "modelAsString": true
          }
        }
      }
    },
    "ApiPortalResourceRequests": {
      "description": "Resource requests of the API portal",
      "type": "object",
      "properties": {
        "cpu": {
          "description": "Cpu allocated to each API portal instance",
          "type": "string",
          "readOnly": true
        },
        "memory": {
          "description": "Memory allocated to each API portal instance",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ApiPortalInstance": {
      "description": "Collection of instances belong to the API portal",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the API portal instance",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "Status of the API portal instance",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ApiPortalCustomDomainResource": {
      "description": "Custom domain of the API portal",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "The properties of custom domain for API portal",
          "type": "object",
          "properties": {
            "thumbprint": {
              "description": "The thumbprint of bound certificate.",
              "type": "string"
            }
          }
        }
      }
    },
    "ApiPortalCustomDomainProperties": {
      "description": "The properties of custom domain for API portal",
      "type": "object",
      "properties": {
        "thumbprint": {
          "description": "The thumbprint of bound certificate.",
          "type": "string"
        }
      }
    },
    "ApiPortalCustomDomainResourceCollection": {
      "description": "Object that includes an array of API portal custom domain resources and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of API portal custom domain resources",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Custom domain of the API portal",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified resource Id for the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "lastModifiedByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource modification (UTC).",
                    "type": "string"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "The properties of custom domain for API portal",
                "type": "object",
                "properties": {
                  "thumbprint": {
                    "description": "The thumbprint of bound certificate.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "ApplicationAcceleratorResourceCollection": {
      "description": "Object that includes an array of application accelerator resources and a possible link for next set",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of application accelerator resources",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Application accelerator resource",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified resource Id for the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "lastModifiedByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource modification (UTC).",
                    "type": "string"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "Application accelerator properties payload",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "State of the application accelerator.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Succeeded",
                      "Failed",
                      "Deleting",
                      "Canceled"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "ApplicationAcceleratorProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "components": {
                    "description": "Collection of components belong to application accelerator.",
                    "uniqueItems": false,
                    "type": "array",
                    "x-ms-identifiers": [
                      "name"
                    ],
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "readOnly": true
                        },
                        "resourceRequests": {
                          "type": "object",
                          "properties": {
                            "cpu": {
                              "description": "Cpu allocated to each application accelerator component. 1 core can be represented by 1 or 1000m",
                              "type": "string",
                              "readOnly": true
                            },
                            "memory": {
                              "description": "Memory allocated to each application accelerator component. 1 GB can be represented by 1Gi or 1024Mi.",
                              "type": "string",
                              "readOnly": true
                            },
                            "instanceCount": {
                              "format": "int32",
                              "description": "Instance count of the application accelerator component.",
                              "type": "integer",
                              "readOnly": true
                            }
                          }
                        },
                        "instances": {
                          "type": "array",
                          "x-ms-identifiers": [
                            "name"
                          ],
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the Application Accelerator instance.",
                                "type": "string",
                                "readOnly": true
                              },
                              "status": {
                                "description": "Status of the Application Accelerator instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true
                  }
                }
              },
              "sku": {
                "description": "Sku of the application accelerator resource",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the Sku",
                    "type": "string",
                    "default": "S0"
                  },
                  "tier": {
                    "description": "Tier of the Sku",
                    "type": "string",
                    "default": "Standard"
                  },
                  "capacity": {
                    "format": "int32",
                    "description": "Current capacity of the target resource",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "ApplicationAcceleratorResource": {
      "description": "Application accelerator resource",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "Application accelerator properties payload",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "State of the application accelerator.",
              "enum": [
                "Creating",
                "Updating",
                "Succeeded",
                "Failed",
                "Deleting",
                "Canceled"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ApplicationAcceleratorProvisioningState",
                "modelAsString": true
              }
            },
            "components": {
              "description": "Collection of components belong to application accelerator.",
              "uniqueItems": false,
              "type": "array",
              "x-ms-identifiers": [
                "name"
              ],
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "readOnly": true
                  },
                  "resourceRequests": {
                    "type": "object",
                    "properties": {
                      "cpu": {
                        "description": "Cpu allocated to each application accelerator component. 1 core can be represented by 1 or 1000m",
                        "type": "string",
                        "readOnly": true
                      },
                      "memory": {
                        "description": "Memory allocated to each application accelerator component. 1 GB can be represented by 1Gi or 1024Mi.",
                        "type": "string",
                        "readOnly": true
                      },
                      "instanceCount": {
                        "format": "int32",
                        "description": "Instance count of the application accelerator component.",
                        "type": "integer",
                        "readOnly": true
                      }
                    }
                  },
                  "instances": {
                    "type": "array",
                    "x-ms-identifiers": [
                      "name"
                    ],
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the Application Accelerator instance.",
                          "type": "string",
                          "readOnly": true
                        },
                        "status": {
                          "description": "Status of the Application Accelerator instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true
                  }
                }
              },
              "readOnly": true
            }
          }
        },
        "sku": {
          "description": "Sku of the application accelerator resource",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the Sku",
              "type": "string",
              "default": "S0"
            },
            "tier": {
              "description": "Tier of the Sku",
              "type": "string",
              "default": "Standard"
            },
            "capacity": {
              "format": "int32",
              "description": "Current capacity of the target resource",
              "type": "integer"
            }
          }
        }
      }
    },
    "ApplicationAcceleratorProperties": {
      "description": "Application accelerator properties payload",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "State of the application accelerator.",
          "enum": [
            "Creating",
            "Updating",
            "Succeeded",
            "Failed",
            "Deleting",
            "Canceled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ApplicationAcceleratorProvisioningState",
            "modelAsString": true
          }
        },
        "components": {
          "description": "Collection of components belong to application accelerator.",
          "uniqueItems": false,
          "type": "array",
          "x-ms-identifiers": [
            "name"
          ],
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "readOnly": true
              },
              "resourceRequests": {
                "type": "object",
                "properties": {
                  "cpu": {
                    "description": "Cpu allocated to each application accelerator component. 1 core can be represented by 1 or 1000m",
                    "type": "string",
                    "readOnly": true
                  },
                  "memory": {
                    "description": "Memory allocated to each application accelerator component. 1 GB can be represented by 1Gi or 1024Mi.",
                    "type": "string",
                    "readOnly": true
                  },
                  "instanceCount": {
                    "format": "int32",
                    "description": "Instance count of the application accelerator component.",
                    "type": "integer",
                    "readOnly": true
                  }
                }
              },
              "instances": {
                "type": "array",
                "x-ms-identifiers": [
                  "name"
                ],
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the Application Accelerator instance.",
                      "type": "string",
                      "readOnly": true
                    },
                    "status": {
                      "description": "Status of the Application Accelerator instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                "readOnly": true
              }
            }
          },
          "readOnly": true
        }
      }
    },
    "ApplicationAcceleratorComponent": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        },
        "resourceRequests": {
          "type": "object",
          "properties": {
            "cpu": {
              "description": "Cpu allocated to each application accelerator component. 1 core can be represented by 1 or 1000m",
              "type": "string",
              "readOnly": true
            },
            "memory": {
              "description": "Memory allocated to each application accelerator component. 1 GB can be represented by 1Gi or 1024Mi.",
              "type": "string",
              "readOnly": true
            },
            "instanceCount": {
              "format": "int32",
              "description": "Instance count of the application accelerator component.",
              "type": "integer",
              "readOnly": true
            }
          }
        },
        "instances": {
          "type": "array",
          "x-ms-identifiers": [
            "name"
          ],
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the Application Accelerator instance.",
                "type": "string",
                "readOnly": true
              },
              "status": {
                "description": "Status of the Application Accelerator instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
                "type": "string",
                "readOnly": true
              }
            }
          },
          "readOnly": true
        }
      }
    },
    "ApplicationAcceleratorResourceRequests": {
      "type": "object",
      "properties": {
        "cpu": {
          "description": "Cpu allocated to each application accelerator component. 1 core can be represented by 1 or 1000m",
          "type": "string",
          "readOnly": true
        },
        "memory": {
          "description": "Memory allocated to each application accelerator component. 1 GB can be represented by 1Gi or 1024Mi.",
          "type": "string",
          "readOnly": true
        },
        "instanceCount": {
          "format": "int32",
          "description": "Instance count of the application accelerator component.",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "ApplicationAcceleratorInstance": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the Application Accelerator instance.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "Status of the Application Accelerator instance. It can be Pending, Running, Succeeded, Failed, Unknown.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CustomizedAcceleratorResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "Customized accelerator resource",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified resource Id for the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "lastModifiedByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource modification (UTC).",
                    "type": "string"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "Customized accelerator properties payload",
                "required": [
                  "gitRepository"
                ],
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "State of the customized accelerator.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Succeeded",
                      "Failed",
                      "Deleting",
                      "Canceled"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "CustomizedAcceleratorProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "acceleratorType": {
                    "description": "Type of the customized accelerator.",
                    "enum": [
                      "Accelerator",
                      "Fragment"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "CustomizedAcceleratorType",
                      "modelAsString": true
                    }
                  },
                  "displayName": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "iconUrl": {
                    "type": "string"
                  },
                  "acceleratorTags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "imports": {
                    "type": "array",
                    "readOnly": true,
                    "description": "Imports references all imports that this accelerator/fragment depends upon.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "gitRepository": {
                    "required": [
                      "url",
                      "authSetting"
                    ],
                    "type": "object",
                    "properties": {
                      "url": {
                        "description": "Git repository URL for the accelerator.",
                        "type": "string"
                      },
                      "intervalInSeconds": {
                        "description": "Interval for checking for updates to Git or image repository.",
                        "format": "int32",
                        "type": "integer"
                      },
                      "branch": {
                        "description": "Git repository branch to be used.",
                        "type": "string"
                      },
                      "commit": {
                        "description": "Git repository commit to be used.",
                        "type": "string"
                      },
                      "gitTag": {
                        "description": "Git repository tag to be used.",
                        "type": "string"
                      },
                      "authSetting": {
                        "description": "Properties of the auth setting payload.",
                        "x-ms-client-flatten": false,
                        "required": [
                          "authType"
                        ],
                        "type": "object",
                        "properties": {
                          "authType": {
                            "description": "The type of the auth setting.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          }
                        },
                        "discriminator": "authType"
                      },
                      "subPath": {
                        "description": "Folder path inside the git repository to consider as the root of the accelerator or fragment.",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "sku": {
                "description": "Sku of the customized accelerator resource",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the Sku",
                    "type": "string",
                    "default": "S0"
                  },
                  "tier": {
                    "description": "Tier of the Sku",
                    "type": "string",
                    "default": "Standard"
                  },
                  "capacity": {
                    "format": "int32",
                    "description": "Current capacity of the target resource",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "CustomizedAcceleratorResource": {
      "description": "Customized accelerator resource",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "Customized accelerator properties payload",
          "required": [
            "gitRepository"
          ],
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "State of the customized accelerator.",
              "enum": [
                "Creating",
                "Updating",
                "Succeeded",
                "Failed",
                "Deleting",
                "Canceled"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "CustomizedAcceleratorProvisioningState",
                "modelAsString": true
              }
            },
            "acceleratorType": {
              "description": "Type of the customized accelerator.",
              "enum": [
                "Accelerator",
                "Fragment"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "CustomizedAcceleratorType",
                "modelAsString": true
              }
            },
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "iconUrl": {
              "type": "string"
            },
            "acceleratorTags": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "imports": {
              "type": "array",
              "readOnly": true,
              "description": "Imports references all imports that this accelerator/fragment depends upon.",
              "items": {
                "type": "string"
              }
            },
            "gitRepository": {
              "required": [
                "url",
                "authSetting"
              ],
              "type": "object",
              "properties": {
                "url": {
                  "description": "Git repository URL for the accelerator.",
                  "type": "string"
                },
                "intervalInSeconds": {
                  "description": "Interval for checking for updates to Git or image repository.",
                  "format": "int32",
                  "type": "integer"
                },
                "branch": {
                  "description": "Git repository branch to be used.",
                  "type": "string"
                },
                "commit": {
                  "description": "Git repository commit to be used.",
                  "type": "string"
                },
                "gitTag": {
                  "description": "Git repository tag to be used.",
                  "type": "string"
                },
                "authSetting": {
                  "description": "Properties of the auth setting payload.",
                  "x-ms-client-flatten": false,
                  "required": [
                    "authType"
                  ],
                  "type": "object",
                  "properties": {
                    "authType": {
                      "description": "The type of the auth setting.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    }
                  },
                  "discriminator": "authType"
                },
                "subPath": {
                  "description": "Folder path inside the git repository to consider as the root of the accelerator or fragment.",
                  "type": "string"
                }
              }
            }
          }
        },
        "sku": {
          "description": "Sku of the customized accelerator resource",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the Sku",
              "type": "string",
              "default": "S0"
            },
            "tier": {
              "description": "Tier of the Sku",
              "type": "string",
              "default": "Standard"
            },
            "capacity": {
              "format": "int32",
              "description": "Current capacity of the target resource",
              "type": "integer"
            }
          }
        }
      }
    },
    "CustomizedAcceleratorProperties": {
      "description": "Customized accelerator properties payload",
      "required": [
        "gitRepository"
      ],
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "State of the customized accelerator.",
          "enum": [
            "Creating",
            "Updating",
            "Succeeded",
            "Failed",
            "Deleting",
            "Canceled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "CustomizedAcceleratorProvisioningState",
            "modelAsString": true
          }
        },
        "acceleratorType": {
          "description": "Type of the customized accelerator.",
          "enum": [
            "Accelerator",
            "Fragment"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CustomizedAcceleratorType",
            "modelAsString": true
          }
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "iconUrl": {
          "type": "string"
        },
        "acceleratorTags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "imports": {
          "type": "array",
          "readOnly": true,
          "description": "Imports references all imports that this accelerator/fragment depends upon.",
          "items": {
            "type": "string"
          }
        },
        "gitRepository": {
          "required": [
            "url",
            "authSetting"
          ],
          "type": "object",
          "properties": {
            "url": {
              "description": "Git repository URL for the accelerator.",
              "type": "string"
            },
            "intervalInSeconds": {
              "description": "Interval for checking for updates to Git or image repository.",
              "format": "int32",
              "type": "integer"
            },
            "branch": {
              "description": "Git repository branch to be used.",
              "type": "string"
            },
            "commit": {
              "description": "Git repository commit to be used.",
              "type": "string"
            },
            "gitTag": {
              "description": "Git repository tag to be used.",
              "type": "string"
            },
            "authSetting": {
              "description": "Properties of the auth setting payload.",
              "x-ms-client-flatten": false,
              "required": [
                "authType"
              ],
              "type": "object",
              "properties": {
                "authType": {
                  "description": "The type of the auth setting.",
                  "type": "string",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                }
              },
              "discriminator": "authType"
            },
            "subPath": {
              "description": "Folder path inside the git repository to consider as the root of the accelerator or fragment.",
              "type": "string"
            }
          }
        }
      }
    },
    "AcceleratorGitRepository": {
      "required": [
        "url",
        "authSetting"
      ],
      "type": "object",
      "properties": {
        "url": {
          "description": "Git repository URL for the accelerator.",
          "type": "string"
        },
        "intervalInSeconds": {
          "description": "Interval for checking for updates to Git or image repository.",
          "format": "int32",
          "type": "integer"
        },
        "branch": {
          "description": "Git repository branch to be used.",
          "type": "string"
        },
        "commit": {
          "description": "Git repository commit to be used.",
          "type": "string"
        },
        "gitTag": {
          "description": "Git repository tag to be used.",
          "type": "string"
        },
        "authSetting": {
          "description": "Properties of the auth setting payload.",
          "x-ms-client-flatten": false,
          "required": [
            "authType"
          ],
          "type": "object",
          "properties": {
            "authType": {
              "description": "The type of the auth setting.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            }
          },
          "discriminator": "authType"
        },
        "subPath": {
          "description": "Folder path inside the git repository to consider as the root of the accelerator or fragment.",
          "type": "string"
        }
      }
    },
    "AcceleratorAuthSetting": {
      "description": "Auth setting payload.",
      "required": [
        "authType"
      ],
      "type": "object",
      "properties": {
        "authType": {
          "description": "The type of the auth setting.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "discriminator": "authType"
    },
    "AcceleratorPublicSetting": {
      "description": "Auth setting for public url.",
      "required": [
        "authType"
      ],
      "type": "object",
      "allOf": [
        {
          "description": "Auth setting payload.",
          "required": [
            "authType"
          ],
          "type": "object",
          "properties": {
            "authType": {
              "description": "The type of the auth setting.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            }
          },
          "discriminator": "authType"
        }
      ],
      "properties": {
        "caCertResourceId": {
          "description": "Resource Id of CA certificate for https URL of Git repository.",
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.AppPlatform/Spring/certificates"
              }
            ]
          }
        }
      },
      "x-ms-discriminator-value": "Public"
    },
    "AcceleratorBasicAuthSetting": {
      "description": "Auth setting for basic auth.",
      "required": [
        "authType",
        "username"
      ],
      "type": "object",
      "allOf": [
        {
          "description": "Auth setting payload.",
          "required": [
            "authType"
          ],
          "type": "object",
          "properties": {
            "authType": {
              "description": "The type of the auth setting.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            }
          },
          "discriminator": "authType"
        }
      ],
      "properties": {
        "caCertResourceId": {
          "description": "Resource Id of CA certificate for https URL of Git repository.",
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.AppPlatform/Spring/certificates"
              }
            ]
          }
        },
        "username": {
          "description": "Username of git repository basic auth.",
          "type": "string"
        },
        "password": {
          "description": "Password of git repository basic auth.",
          "type": "string",
          "x-ms-secret": true,
          "x-ms-mutability": [
            "create",
            "update"
          ]
        }
      },
      "x-ms-discriminator-value": "BasicAuth"
    },
    "AcceleratorSshSetting": {
      "description": "Auth setting for SSH auth.",
      "required": [
        "authType"
      ],
      "type": "object",
      "allOf": [
        {
          "description": "Auth setting payload.",
          "required": [
            "authType"
          ],
          "type": "object",
          "properties": {
            "authType": {
              "description": "The type of the auth setting.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            }
          },
          "discriminator": "authType"
        }
      ],
      "properties": {
        "hostKey": {
          "description": "Public SSH Key of git repository.",
          "type": "string",
          "x-ms-secret": true,
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "hostKeyAlgorithm": {
          "description": "SSH Key algorithm of git repository.",
          "type": "string",
          "x-ms-secret": true,
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "privateKey": {
          "description": "Private SSH Key algorithm of git repository.",
          "type": "string",
          "x-ms-secret": true,
          "x-ms-mutability": [
            "create",
            "update"
          ]
        }
      },
      "x-ms-discriminator-value": "SSH"
    },
    "CustomizedAcceleratorValidateResult": {
      "description": "Validation result for customized accelerator properties",
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "description": "State of the customized accelerator validation result",
          "default": "Valid",
          "enum": [
            "Valid",
            "Invalid"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "CustomizedAcceleratorValidateResultState",
            "values": [
              {
                "description": "Customized accelerator properties are valid.",
                "value": "Valid"
              },
              {
                "description": "Customized accelerator properties are invalid.",
                "value": "Invalid"
              }
            ]
          }
        },
        "errorMessage": {
          "description": "The detail validation results",
          "type": "string"
        }
      }
    },
    "PredefinedAcceleratorResourceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "Predefined accelerator resource",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified resource Id for the resource.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The identity that created the resource.",
                    "type": "string"
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC).",
                    "type": "string"
                  },
                  "lastModifiedBy": {
                    "description": "The identity that last modified the resource.",
                    "type": "string"
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "lastModifiedByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "format": "date-time",
                    "description": "The timestamp of resource modification (UTC).",
                    "type": "string"
                  }
                },
                "readOnly": true
              },
              "properties": {
                "description": "Predefined accelerator properties payload",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Provisioning state of the predefined accelerator.",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Succeeded",
                      "Failed",
                      "Canceled"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "PredefinedAcceleratorProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "displayName": {
                    "type": "string",
                    "readOnly": true
                  },
                  "description": {
                    "type": "string",
                    "readOnly": true
                  },
                  "iconUrl": {
                    "type": "string",
                    "readOnly": true
                  },
                  "acceleratorTags": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                      "type": "string"
                    }
                  },
                  "state": {
                    "type": "string",
                    "description": "State of the predefined accelerator.",
                    "default": "Enabled",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "PredefinedAcceleratorState",
                      "values": [
                        {
                          "description": "Enable the predefined accelerator.",
                          "value": "Enabled"
                        },
                        {
                          "description": "Disable the predefined accelerator.",
                          "value": "Disabled"
                        }
                      ]
                    }
                  }
                }
              },
              "sku": {
                "description": "Sku of the predefined accelerator resource",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the Sku",
                    "type": "string",
                    "default": "S0"
                  },
                  "tier": {
                    "description": "Tier of the Sku",
                    "type": "string",
                    "default": "Standard"
                  },
                  "capacity": {
                    "format": "int32",
                    "description": "Current capacity of the target resource",
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "PredefinedAcceleratorResource": {
      "description": "Predefined accelerator resource",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "lastModifiedByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "format": "date-time",
              "description": "The timestamp of resource modification (UTC).",
              "type": "string"
            }
          },
          "readOnly": true
        },
        "properties": {
          "description": "Predefined accelerator properties payload",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the predefined accelerator.",
              "enum": [
                "Creating",
                "Updating",
                "Succeeded",
                "Failed",
                "Canceled"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "PredefinedAcceleratorProvisioningState",
                "modelAsString": true
              }
            },
            "displayName": {
              "type": "string",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "readOnly": true
            },
            "iconUrl": {
              "type": "string",
              "readOnly": true
            },
            "acceleratorTags": {
              "type": "array",
              "readOnly": true,
              "items": {
                "type": "string"
              }
            },
            "state": {
              "type": "string",
              "description": "State of the predefined accelerator.",
              "default": "Enabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "PredefinedAcceleratorState",
                "values": [
                  {
                    "description": "Enable the predefined accelerator.",
                    "value": "Enabled"
                  },
                  {
                    "description": "Disable the predefined accelerator.",
                    "value": "Disabled"
                  }
                ]
              }
            }
          }
        },
        "sku": {
          "description": "Sku of the predefined accelerator resource",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the Sku",
              "type": "string",
              "default": "S0"
            },
            "tier": {
              "description": "Tier of the Sku",
              "type": "string",
              "default": "Standard"
            },
            "capacity": {
              "format": "int32",
              "description": "Current capacity of the target resource",
              "type": "integer"
            }
          }
        }
      }
    },
    "PredefinedAcceleratorProperties": {
      "description": "Predefined accelerator properties payload",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the predefined accelerator.",
          "enum": [
            "Creating",
            "Updating",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "PredefinedAcceleratorProvisioningState",
            "modelAsString": true
          }
        },
        "displayName": {
          "type": "string",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "readOnly": true
        },
        "iconUrl": {
          "type": "string",
          "readOnly": true
        },
        "acceleratorTags": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        },
        "state": {
          "type": "string",
          "description": "State of the predefined accelerator.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PredefinedAcceleratorState",
            "values": [
              {
                "description": "Enable the predefined accelerator.",
                "value": "Enabled"
              },
              {
                "description": "Disable the predefined accelerator.",
                "value": "Disabled"
              }
            ]
          }
        }
      }
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Gets subscription ID which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
      "required": true,
      "type": "string"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ServiceNameParameter": {
      "name": "serviceName",
      "in": "path",
      "description": "The name of the Service resource.",
      "required": true,
      "type": "string",
      "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
      "x-ms-parameter-location": "method"
    },
    "AppNameParameter": {
      "name": "appName",
      "in": "path",
      "description": "The name of the App resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ApmNameParameter": {
      "name": "apmName",
      "in": "path",
      "description": "The name of the APM",
      "required": true,
      "type": "string",
      "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
      "x-ms-parameter-location": "method"
    },
    "DeploymentNameParameter": {
      "name": "deploymentName",
      "in": "path",
      "description": "The name of the Deployment resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ContainerRegistryNameParameter": {
      "name": "containerRegistryName",
      "in": "path",
      "description": "The name of the container registry.",
      "required": true,
      "type": "string",
      "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
      "x-ms-parameter-location": "method"
    },
    "BuildServiceNameParameter": {
      "name": "buildServiceName",
      "in": "path",
      "description": "The name of the build service resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "BuildServiceBuildpackNameParameter": {
      "name": "buildpackName",
      "in": "path",
      "description": "The name of the buildpack resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "BuildServiceStackNameParameter": {
      "name": "stackName",
      "in": "path",
      "description": "The name of the stack resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "BuildServiceAgentPoolNameParameter": {
      "name": "agentPoolName",
      "in": "path",
      "description": "The name of the build service agent pool resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "BuilderNameParameter": {
      "name": "builderName",
      "in": "path",
      "description": "The name of the builder resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "BuildNameParameter": {
      "name": "buildName",
      "in": "path",
      "description": "The name of the build resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "BuildResultNameParameter": {
      "name": "buildResultName",
      "in": "path",
      "description": "The name of the build result resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "BuildResultLogNameParameter": {
      "name": "buildResultLogName",
      "in": "path",
      "description": "The name of the build result log resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "BuildpackBindingNameParameter": {
      "name": "buildpackBindingName",
      "in": "path",
      "description": "The name of the Buildpack Binding Name",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "BindingNameParameter": {
      "name": "bindingName",
      "in": "path",
      "description": "The name of the Binding resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "CustomDomainNameParameter": {
      "name": "domainName",
      "in": "path",
      "description": "The name of the custom domain resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "CertificateNameParameter": {
      "name": "certificateName",
      "in": "path",
      "description": "The name of the certificate resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "StorageNameParameter": {
      "name": "storageName",
      "in": "path",
      "description": "The name of the storage resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ConfigurationServiceNameParameter": {
      "name": "configurationServiceName",
      "in": "path",
      "description": "The name of Application Configuration Service.",
      "required": true,
      "type": "string",
      "pattern": "^[a-z][a-z0-9]*$",
      "x-ms-parameter-location": "method"
    },
    "ServiceRegistryNameParameter": {
      "name": "serviceRegistryName",
      "in": "path",
      "description": "The name of Service Registry.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ApplicationLiveViewNameParameter": {
      "name": "applicationLiveViewName",
      "in": "path",
      "description": "The name of Application Live View.",
      "required": true,
      "type": "string",
      "pattern": "^[a-z][a-z0-9]*$",
      "x-ms-parameter-location": "method"
    },
    "DevToolPortalNameParameter": {
      "name": "devToolPortalName",
      "in": "path",
      "description": "The name of Dev Tool Portal.",
      "required": true,
      "type": "string",
      "pattern": "^[a-z][a-z0-9]*$",
      "x-ms-parameter-location": "method"
    },
    "GatewayNameParameter": {
      "name": "gatewayName",
      "in": "path",
      "description": "The name of Spring Cloud Gateway.",
      "required": true,
      "type": "string",
      "pattern": "^[a-z][a-z0-9]*$",
      "x-ms-parameter-location": "method"
    },
    "GatewayRouteConfigNameParameter": {
      "name": "routeConfigName",
      "in": "path",
      "description": "The name of the Spring Cloud Gateway route config.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "GatewayCustomDomainParameter": {
      "name": "domainName",
      "in": "path",
      "description": "The name of the Spring Cloud Gateway custom domain.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ApiPortalNameParameter": {
      "name": "apiPortalName",
      "in": "path",
      "description": "The name of API portal.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ApiPortalCustomDomainParameter": {
      "name": "domainName",
      "in": "path",
      "description": "The name of the API portal custom domain.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ApplicationAcceleratorNameParameter": {
      "name": "applicationAcceleratorName",
      "in": "path",
      "description": "The name of the application accelerator.",
      "required": true,
      "type": "string",
      "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
      "x-ms-parameter-location": "method"
    },
    "CustomizedAcceleratorNameParameter": {
      "name": "customizedAcceleratorName",
      "in": "path",
      "description": "The name of the customized accelerator.",
      "required": true,
      "type": "string",
      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])$",
      "x-ms-parameter-location": "method"
    },
    "PredefinedAcceleratorNameParameter": {
      "name": "predefinedAcceleratorName",
      "in": "path",
      "description": "The name of the predefined accelerator.",
      "required": true,
      "type": "string",
      "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
      "x-ms-parameter-location": "method"
    }
  }
}