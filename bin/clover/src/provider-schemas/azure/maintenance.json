{
  "swagger": "2.0",
  "info": {
    "title": "Azure maintenance",
    "version": "2023-04-01",
    "description": "Azure maintenance service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Maintenance/publicMaintenanceConfigurations": {
      "get": {
        "tags": [
          "PublicMaintenanceConfigurations"
        ],
        "summary": "Get Public Maintenance Configuration records",
        "operationId": "PublicMaintenanceConfigurations_List",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Response for MaintenanceConfigurations list",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The list of maintenance Configurations",
                  "type": "array",
                  "items": {
                    "description": "Maintenance configuration record type",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "readOnly": true,
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "location": {
                        "description": "Gets or sets location of the resource",
                        "type": "string"
                      },
                      "tags": {
                        "description": "Gets or sets tags of the resource",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "Gets or sets properties of the resource",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "namespace": {
                            "description": "Gets or sets namespace of the resource",
                            "type": "string"
                          },
                          "extensionProperties": {
                            "description": "Gets or sets extensionProperties of the maintenanceConfiguration",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "maintenanceScope": {
                            "description": "Gets or sets maintenanceScope of the configuration",
                            "enum": [
                              "Host",
                              "Resource",
                              "OSImage",
                              "Extension",
                              "InGuestPatch",
                              "SQLDB",
                              "SQLManagedInstance"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "MaintenanceScope",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Host",
                                  "description": "This maintenance scope controls installation of azure platform updates i.e. services on physical nodes hosting customer VMs."
                                },
                                {
                                  "value": "Resource",
                                  "description": "This maintenance scope controls the default update maintenance of the Azure Resource"
                                },
                                {
                                  "value": "OSImage",
                                  "description": "This maintenance scope controls os image installation on VM/VMSS"
                                },
                                {
                                  "value": "Extension",
                                  "description": "This maintenance scope controls extension installation on VM/VMSS"
                                },
                                {
                                  "value": "InGuestPatch",
                                  "description": "This maintenance scope controls installation of windows and linux packages on VM/VMSS"
                                },
                                {
                                  "value": "SQLDB",
                                  "description": "This maintenance scope controls installation of SQL server platform updates."
                                },
                                {
                                  "value": "SQLManagedInstance",
                                  "description": "This maintenance scope controls installation of SQL managed instance platform update."
                                }
                              ]
                            }
                          },
                          "maintenanceWindow": {
                            "description": "Definition of a MaintenanceWindow",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "startDateTime": {
                                "description": "Effective start date of the maintenance window in YYYY-MM-DD hh:mm format. The start date can be set to either the current date or future date. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone.",
                                "type": "string"
                              },
                              "expirationDateTime": {
                                "description": "Effective expiration date of the maintenance window in YYYY-MM-DD hh:mm format. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone. Expiration date must be set to a future date. If not provided, it will be set to the maximum datetime 9999-12-31 23:59:59.",
                                "type": "string"
                              },
                              "duration": {
                                "description": "Duration of the maintenance window in HH:mm format. If not provided, default value will be used based on maintenance scope provided. Example: 05:00.",
                                "type": "string"
                              },
                              "timeZone": {
                                "description": "Name of the timezone. List of timezones can be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell. Example: Pacific Standard Time, UTC, W. Europe Standard Time, Korea Standard Time, Cen. Australia Standard Time.",
                                "type": "string"
                              },
                              "recurEvery": {
                                "description": "Rate at which a Maintenance window is expected to recur. The rate can be expressed as daily, weekly, or monthly schedules. Daily schedule are formatted as recurEvery: [Frequency as integer]['Day(s)']. If no frequency is provided, the default frequency is 1. Daily schedule examples are recurEvery: Day, recurEvery: 3Days.  Weekly schedule are formatted as recurEvery: [Frequency as integer]['Week(s)'] [Optional comma separated list of weekdays Monday-Sunday]. Weekly schedule examples are recurEvery: 3Weeks, recurEvery: Week Saturday,Sunday. Monthly schedules are formatted as [Frequency as integer]['Month(s)'] [Comma separated list of month days] or [Frequency as integer]['Month(s)'] [Week of Month (First, Second, Third, Fourth, Last)] [Weekday Monday-Sunday] [Optional Offset(No. of days)]. Offset value must be between -6 to 6 inclusive. Monthly schedule examples are recurEvery: Month, recurEvery: 2Months, recurEvery: Month day23,day24, recurEvery: Month Last Sunday, recurEvery: Month Fourth Monday, recurEvery: Month Last Sunday Offset-3, recurEvery: Month Third Sunday Offset6.",
                                "type": "string"
                              }
                            }
                          },
                          "visibility": {
                            "description": "Gets or sets the visibility of the configuration. The default value is 'Custom'",
                            "enum": [
                              "Custom",
                              "Public"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "Visibility",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Custom",
                                  "description": "Only visible to users with permissions."
                                },
                                {
                                  "value": "Public",
                                  "description": "Visible to all users."
                                }
                              ]
                            }
                          },
                          "installPatches": {
                            "description": "The input parameters to be passed to the patch run operation.",
                            "type": "object",
                            "properties": {
                              "rebootSetting": {
                                "type": "string",
                                "enum": [
                                  "IfRequired",
                                  "Never",
                                  "Always"
                                ],
                                "x-ms-enum": {
                                  "name": "RebootOptions",
                                  "modelAsString": true
                                },
                                "default": "IfRequired",
                                "description": "Possible reboot preference as defined by the user based on which it would be decided to reboot the machine or not after the patch operation is completed."
                              },
                              "windowsParameters": {
                                "description": "Input parameters specific to patching a Windows machine. For Linux machines, do not pass this property.",
                                "type": "object",
                                "properties": {
                                  "kbNumbersToExclude": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Windows KBID to be excluded for patching."
                                  },
                                  "kbNumbersToInclude": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Windows KBID to be included for patching."
                                  },
                                  "classificationsToInclude": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', 'UpdateRollup', 'FeaturePack', 'ServicePack', 'Definition', 'Tools', and 'Updates'."
                                  },
                                  "excludeKbsRequiringReboot": {
                                    "type": "boolean",
                                    "description": "Exclude patches which need reboot"
                                  }
                                }
                              },
                              "linuxParameters": {
                                "description": "Input parameters specific to patching Linux machine. For Windows machines, do not pass this property.",
                                "type": "object",
                                "properties": {
                                  "packageNameMasksToExclude": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Package names to be excluded for patching."
                                  },
                                  "packageNameMasksToInclude": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Package names to be included for patching."
                                  },
                                  "classificationsToInclude": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', and 'Other'."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/{resourceName}": {
      "get": {
        "tags": [
          "PublicMaintenanceConfigurations"
        ],
        "summary": "Get Public Maintenance Configuration record",
        "operationId": "PublicMaintenanceConfigurations_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Maintenance Configuration Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Maintenance configuration record type",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets location of the resource",
                  "type": "string"
                },
                "tags": {
                  "description": "Gets or sets tags of the resource",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Gets or sets properties of the resource",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "namespace": {
                      "description": "Gets or sets namespace of the resource",
                      "type": "string"
                    },
                    "extensionProperties": {
                      "description": "Gets or sets extensionProperties of the maintenanceConfiguration",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "maintenanceScope": {
                      "description": "Gets or sets maintenanceScope of the configuration",
                      "enum": [
                        "Host",
                        "Resource",
                        "OSImage",
                        "Extension",
                        "InGuestPatch",
                        "SQLDB",
                        "SQLManagedInstance"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "MaintenanceScope",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Host",
                            "description": "This maintenance scope controls installation of azure platform updates i.e. services on physical nodes hosting customer VMs."
                          },
                          {
                            "value": "Resource",
                            "description": "This maintenance scope controls the default update maintenance of the Azure Resource"
                          },
                          {
                            "value": "OSImage",
                            "description": "This maintenance scope controls os image installation on VM/VMSS"
                          },
                          {
                            "value": "Extension",
                            "description": "This maintenance scope controls extension installation on VM/VMSS"
                          },
                          {
                            "value": "InGuestPatch",
                            "description": "This maintenance scope controls installation of windows and linux packages on VM/VMSS"
                          },
                          {
                            "value": "SQLDB",
                            "description": "This maintenance scope controls installation of SQL server platform updates."
                          },
                          {
                            "value": "SQLManagedInstance",
                            "description": "This maintenance scope controls installation of SQL managed instance platform update."
                          }
                        ]
                      }
                    },
                    "maintenanceWindow": {
                      "description": "Definition of a MaintenanceWindow",
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "properties": {
                        "startDateTime": {
                          "description": "Effective start date of the maintenance window in YYYY-MM-DD hh:mm format. The start date can be set to either the current date or future date. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone.",
                          "type": "string"
                        },
                        "expirationDateTime": {
                          "description": "Effective expiration date of the maintenance window in YYYY-MM-DD hh:mm format. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone. Expiration date must be set to a future date. If not provided, it will be set to the maximum datetime 9999-12-31 23:59:59.",
                          "type": "string"
                        },
                        "duration": {
                          "description": "Duration of the maintenance window in HH:mm format. If not provided, default value will be used based on maintenance scope provided. Example: 05:00.",
                          "type": "string"
                        },
                        "timeZone": {
                          "description": "Name of the timezone. List of timezones can be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell. Example: Pacific Standard Time, UTC, W. Europe Standard Time, Korea Standard Time, Cen. Australia Standard Time.",
                          "type": "string"
                        },
                        "recurEvery": {
                          "description": "Rate at which a Maintenance window is expected to recur. The rate can be expressed as daily, weekly, or monthly schedules. Daily schedule are formatted as recurEvery: [Frequency as integer]['Day(s)']. If no frequency is provided, the default frequency is 1. Daily schedule examples are recurEvery: Day, recurEvery: 3Days.  Weekly schedule are formatted as recurEvery: [Frequency as integer]['Week(s)'] [Optional comma separated list of weekdays Monday-Sunday]. Weekly schedule examples are recurEvery: 3Weeks, recurEvery: Week Saturday,Sunday. Monthly schedules are formatted as [Frequency as integer]['Month(s)'] [Comma separated list of month days] or [Frequency as integer]['Month(s)'] [Week of Month (First, Second, Third, Fourth, Last)] [Weekday Monday-Sunday] [Optional Offset(No. of days)]. Offset value must be between -6 to 6 inclusive. Monthly schedule examples are recurEvery: Month, recurEvery: 2Months, recurEvery: Month day23,day24, recurEvery: Month Last Sunday, recurEvery: Month Fourth Monday, recurEvery: Month Last Sunday Offset-3, recurEvery: Month Third Sunday Offset6.",
                          "type": "string"
                        }
                      }
                    },
                    "visibility": {
                      "description": "Gets or sets the visibility of the configuration. The default value is 'Custom'",
                      "enum": [
                        "Custom",
                        "Public"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "Visibility",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Custom",
                            "description": "Only visible to users with permissions."
                          },
                          {
                            "value": "Public",
                            "description": "Visible to all users."
                          }
                        ]
                      }
                    },
                    "installPatches": {
                      "description": "The input parameters to be passed to the patch run operation.",
                      "type": "object",
                      "properties": {
                        "rebootSetting": {
                          "type": "string",
                          "enum": [
                            "IfRequired",
                            "Never",
                            "Always"
                          ],
                          "x-ms-enum": {
                            "name": "RebootOptions",
                            "modelAsString": true
                          },
                          "default": "IfRequired",
                          "description": "Possible reboot preference as defined by the user based on which it would be decided to reboot the machine or not after the patch operation is completed."
                        },
                        "windowsParameters": {
                          "description": "Input parameters specific to patching a Windows machine. For Linux machines, do not pass this property.",
                          "type": "object",
                          "properties": {
                            "kbNumbersToExclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Windows KBID to be excluded for patching."
                            },
                            "kbNumbersToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Windows KBID to be included for patching."
                            },
                            "classificationsToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', 'UpdateRollup', 'FeaturePack', 'ServicePack', 'Definition', 'Tools', and 'Updates'."
                            },
                            "excludeKbsRequiringReboot": {
                              "type": "boolean",
                              "description": "Exclude patches which need reboot"
                            }
                          }
                        },
                        "linuxParameters": {
                          "description": "Input parameters specific to patching Linux machine. For Windows machines, do not pass this property.",
                          "type": "object",
                          "properties": {
                            "packageNameMasksToExclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Package names to be excluded for patching."
                            },
                            "packageNameMasksToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Package names to be included for patching."
                            },
                            "classificationsToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', and 'Other'."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{providerName}/{resourceParentType}/{resourceParentName}/{resourceType}/{resourceName}/providers/Microsoft.Maintenance/applyUpdates/{applyUpdateName}": {
      "get": {
        "tags": [
          "ApplyUpdates"
        ],
        "summary": "Track Updates to resource with parent",
        "description": "Track maintenance updates to resource with parent",
        "operationId": "ApplyUpdates_GetParent",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerName",
            "in": "path",
            "description": "Resource provider name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceParentType",
            "in": "path",
            "description": "Resource parent type",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceParentName",
            "in": "path",
            "description": "Resource parent identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "Resource type",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "applyUpdateName",
            "in": "path",
            "description": "applyUpdate Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Apply Update request",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Properties of the apply update",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "The status",
                      "enum": [
                        "Pending",
                        "InProgress",
                        "Completed",
                        "RetryNow",
                        "RetryLater"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "UpdateStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Pending",
                            "description": "There are pending updates to be installed."
                          },
                          {
                            "value": "InProgress",
                            "description": "Updates installation are in progress."
                          },
                          {
                            "value": "Completed",
                            "description": "All updates are successfully applied."
                          },
                          {
                            "value": "RetryNow",
                            "description": "Updates installation failed but are ready to retry again."
                          },
                          {
                            "value": "RetryLater",
                            "description": "Updates installation failed and should be retried later."
                          }
                        ]
                      }
                    },
                    "resourceId": {
                      "description": "The resourceId",
                      "type": "string"
                    },
                    "lastUpdateTime": {
                      "format": "date-time",
                      "description": "Last Update time",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{providerName}/{resourceType}/{resourceName}/providers/Microsoft.Maintenance/applyUpdates/{applyUpdateName}": {
      "get": {
        "tags": [
          "ApplyUpdates"
        ],
        "summary": "Track Updates to resource",
        "description": "Track maintenance updates to resource",
        "operationId": "ApplyUpdates_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerName",
            "in": "path",
            "description": "Resource provider name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "Resource type",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "applyUpdateName",
            "in": "path",
            "description": "applyUpdate Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Apply Update request",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Properties of the apply update",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "The status",
                      "enum": [
                        "Pending",
                        "InProgress",
                        "Completed",
                        "RetryNow",
                        "RetryLater"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "UpdateStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Pending",
                            "description": "There are pending updates to be installed."
                          },
                          {
                            "value": "InProgress",
                            "description": "Updates installation are in progress."
                          },
                          {
                            "value": "Completed",
                            "description": "All updates are successfully applied."
                          },
                          {
                            "value": "RetryNow",
                            "description": "Updates installation failed but are ready to retry again."
                          },
                          {
                            "value": "RetryLater",
                            "description": "Updates installation failed and should be retried later."
                          }
                        ]
                      }
                    },
                    "resourceId": {
                      "description": "The resourceId",
                      "type": "string"
                    },
                    "lastUpdateTime": {
                      "format": "date-time",
                      "description": "Last Update time",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{providerName}/{resourceParentType}/{resourceParentName}/{resourceType}/{resourceName}/providers/Microsoft.Maintenance/applyUpdates/default": {
      "put": {
        "tags": [
          "ApplyUpdates"
        ],
        "summary": "Apply Updates to resource with parent",
        "description": "Apply maintenance updates to resource with parent",
        "operationId": "ApplyUpdates_CreateOrUpdateParent",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerName",
            "in": "path",
            "description": "Resource provider name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceParentType",
            "in": "path",
            "description": "Resource parent type",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceParentName",
            "in": "path",
            "description": "Resource parent identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "Resource type",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "Apply-update update request accepted",
            "schema": {
              "description": "Apply Update request",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Properties of the apply update",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "The status",
                      "enum": [
                        "Pending",
                        "InProgress",
                        "Completed",
                        "RetryNow",
                        "RetryLater"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "UpdateStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Pending",
                            "description": "There are pending updates to be installed."
                          },
                          {
                            "value": "InProgress",
                            "description": "Updates installation are in progress."
                          },
                          {
                            "value": "Completed",
                            "description": "All updates are successfully applied."
                          },
                          {
                            "value": "RetryNow",
                            "description": "Updates installation failed but are ready to retry again."
                          },
                          {
                            "value": "RetryLater",
                            "description": "Updates installation failed and should be retried later."
                          }
                        ]
                      }
                    },
                    "resourceId": {
                      "description": "The resourceId",
                      "type": "string"
                    },
                    "lastUpdateTime": {
                      "format": "date-time",
                      "description": "Last Update time",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Apply-update create request accepted",
            "schema": {
              "description": "Apply Update request",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Properties of the apply update",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "The status",
                      "enum": [
                        "Pending",
                        "InProgress",
                        "Completed",
                        "RetryNow",
                        "RetryLater"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "UpdateStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Pending",
                            "description": "There are pending updates to be installed."
                          },
                          {
                            "value": "InProgress",
                            "description": "Updates installation are in progress."
                          },
                          {
                            "value": "Completed",
                            "description": "All updates are successfully applied."
                          },
                          {
                            "value": "RetryNow",
                            "description": "Updates installation failed but are ready to retry again."
                          },
                          {
                            "value": "RetryLater",
                            "description": "Updates installation failed and should be retried later."
                          }
                        ]
                      }
                    },
                    "resourceId": {
                      "description": "The resourceId",
                      "type": "string"
                    },
                    "lastUpdateTime": {
                      "format": "date-time",
                      "description": "Last Update time",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{providerName}/{resourceType}/{resourceName}/providers/Microsoft.Maintenance/applyUpdates/default": {
      "put": {
        "tags": [
          "ApplyUpdates"
        ],
        "summary": "Apply Updates to resource",
        "description": "Apply maintenance updates to resource",
        "operationId": "ApplyUpdates_CreateOrUpdate",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerName",
            "in": "path",
            "description": "Resource provider name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "Resource type",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "ApplyUpdate update request accepted",
            "schema": {
              "description": "Apply Update request",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Properties of the apply update",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "The status",
                      "enum": [
                        "Pending",
                        "InProgress",
                        "Completed",
                        "RetryNow",
                        "RetryLater"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "UpdateStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Pending",
                            "description": "There are pending updates to be installed."
                          },
                          {
                            "value": "InProgress",
                            "description": "Updates installation are in progress."
                          },
                          {
                            "value": "Completed",
                            "description": "All updates are successfully applied."
                          },
                          {
                            "value": "RetryNow",
                            "description": "Updates installation failed but are ready to retry again."
                          },
                          {
                            "value": "RetryLater",
                            "description": "Updates installation failed and should be retried later."
                          }
                        ]
                      }
                    },
                    "resourceId": {
                      "description": "The resourceId",
                      "type": "string"
                    },
                    "lastUpdateTime": {
                      "format": "date-time",
                      "description": "Last Update time",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "ApplyUpdate create request accepted",
            "schema": {
              "description": "Apply Update request",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Properties of the apply update",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "The status",
                      "enum": [
                        "Pending",
                        "InProgress",
                        "Completed",
                        "RetryNow",
                        "RetryLater"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "UpdateStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Pending",
                            "description": "There are pending updates to be installed."
                          },
                          {
                            "value": "InProgress",
                            "description": "Updates installation are in progress."
                          },
                          {
                            "value": "Completed",
                            "description": "All updates are successfully applied."
                          },
                          {
                            "value": "RetryNow",
                            "description": "Updates installation failed but are ready to retry again."
                          },
                          {
                            "value": "RetryLater",
                            "description": "Updates installation failed and should be retried later."
                          }
                        ]
                      }
                    },
                    "resourceId": {
                      "description": "The resourceId",
                      "type": "string"
                    },
                    "lastUpdateTime": {
                      "format": "date-time",
                      "description": "Last Update time",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{providerName}/{resourceParentType}/{resourceParentName}/{resourceType}/{resourceName}/providers/Microsoft.Maintenance/configurationAssignments/{configurationAssignmentName}": {
      "get": {
        "tags": [
          "ConfigurationAssignments"
        ],
        "summary": "Get configuration assignment",
        "description": "Get configuration assignment for resource..",
        "operationId": "ConfigurationAssignments_GetParent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerName",
            "in": "path",
            "description": "Resource provider name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceParentType",
            "in": "path",
            "description": "Resource parent type",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceParentName",
            "in": "path",
            "description": "Resource parent identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "Resource type",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationAssignmentName",
            "in": "path",
            "description": "Configuration assignment name",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Configuration Assignment",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource",
                  "type": "string"
                },
                "properties": {
                  "description": "Properties of the configuration assignment",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "maintenanceConfigurationId": {
                      "description": "The maintenance configuration Id",
                      "type": "string"
                    },
                    "resourceId": {
                      "description": "The unique resourceId",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Properties of the configuration assignment",
                      "type": "object",
                      "properties": {
                        "resourceTypes": {
                          "type": "array",
                          "description": "List of allowed resources.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resources"
                          }
                        },
                        "resourceGroups": {
                          "type": "array",
                          "description": "List of allowed resource groups.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resource groups"
                          }
                        },
                        "osTypes": {
                          "type": "array",
                          "description": "List of allowed operating systems.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed operating systems"
                          }
                        },
                        "locations": {
                          "type": "array",
                          "description": "List of locations to scope the query to.",
                          "items": {
                            "type": "string",
                            "description": "Location to scope the query to."
                          }
                        },
                        "tagSettings": {
                          "type": "object",
                          "description": "Tag settings for the VM.",
                          "properties": {
                            "tags": {
                              "type": "object",
                              "description": "Dictionary of tags with its list of values.",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "List of tag values for a tag."
                                }
                              }
                            },
                            "filterOperator": {
                              "type": "string",
                              "description": "Filter VMs by Any or All specified tags.",
                              "enum": [
                                "All",
                                "Any"
                              ],
                              "x-ms-enum": {
                                "name": "TagOperators",
                                "modelAsString": false
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ConfigurationAssignments"
        ],
        "summary": "Create configuration assignment",
        "description": "Register configuration for resource.",
        "operationId": "ConfigurationAssignments_CreateOrUpdateParent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerName",
            "in": "path",
            "description": "Resource provider name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceParentType",
            "in": "path",
            "description": "Resource parent type",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceParentName",
            "in": "path",
            "description": "Resource parent identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "Resource type",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationAssignmentName",
            "in": "path",
            "description": "Configuration assignment name",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationAssignment",
            "in": "body",
            "description": "The configurationAssignment",
            "required": true,
            "schema": {
              "description": "Configuration Assignment",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource",
                  "type": "string"
                },
                "properties": {
                  "description": "Properties of the configuration assignment",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "maintenanceConfigurationId": {
                      "description": "The maintenance configuration Id",
                      "type": "string"
                    },
                    "resourceId": {
                      "description": "The unique resourceId",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Properties of the configuration assignment",
                      "type": "object",
                      "properties": {
                        "resourceTypes": {
                          "type": "array",
                          "description": "List of allowed resources.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resources"
                          }
                        },
                        "resourceGroups": {
                          "type": "array",
                          "description": "List of allowed resource groups.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resource groups"
                          }
                        },
                        "osTypes": {
                          "type": "array",
                          "description": "List of allowed operating systems.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed operating systems"
                          }
                        },
                        "locations": {
                          "type": "array",
                          "description": "List of locations to scope the query to.",
                          "items": {
                            "type": "string",
                            "description": "Location to scope the query to."
                          }
                        },
                        "tagSettings": {
                          "type": "object",
                          "description": "Tag settings for the VM.",
                          "properties": {
                            "tags": {
                              "type": "object",
                              "description": "Dictionary of tags with its list of values.",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "List of tag values for a tag."
                                }
                              }
                            },
                            "filterOperator": {
                              "type": "string",
                              "description": "Filter VMs by Any or All specified tags.",
                              "enum": [
                                "All",
                                "Any"
                              ],
                              "x-ms-enum": {
                                "name": "TagOperators",
                                "modelAsString": false
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "Configuration assignment update request accepted",
            "schema": {
              "description": "Configuration Assignment",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource",
                  "type": "string"
                },
                "properties": {
                  "description": "Properties of the configuration assignment",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "maintenanceConfigurationId": {
                      "description": "The maintenance configuration Id",
                      "type": "string"
                    },
                    "resourceId": {
                      "description": "The unique resourceId",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Properties of the configuration assignment",
                      "type": "object",
                      "properties": {
                        "resourceTypes": {
                          "type": "array",
                          "description": "List of allowed resources.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resources"
                          }
                        },
                        "resourceGroups": {
                          "type": "array",
                          "description": "List of allowed resource groups.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resource groups"
                          }
                        },
                        "osTypes": {
                          "type": "array",
                          "description": "List of allowed operating systems.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed operating systems"
                          }
                        },
                        "locations": {
                          "type": "array",
                          "description": "List of locations to scope the query to.",
                          "items": {
                            "type": "string",
                            "description": "Location to scope the query to."
                          }
                        },
                        "tagSettings": {
                          "type": "object",
                          "description": "Tag settings for the VM.",
                          "properties": {
                            "tags": {
                              "type": "object",
                              "description": "Dictionary of tags with its list of values.",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "List of tag values for a tag."
                                }
                              }
                            },
                            "filterOperator": {
                              "type": "string",
                              "description": "Filter VMs by Any or All specified tags.",
                              "enum": [
                                "All",
                                "Any"
                              ],
                              "x-ms-enum": {
                                "name": "TagOperators",
                                "modelAsString": false
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Configuration assignment create request accepted",
            "schema": {
              "description": "Configuration Assignment",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource",
                  "type": "string"
                },
                "properties": {
                  "description": "Properties of the configuration assignment",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "maintenanceConfigurationId": {
                      "description": "The maintenance configuration Id",
                      "type": "string"
                    },
                    "resourceId": {
                      "description": "The unique resourceId",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Properties of the configuration assignment",
                      "type": "object",
                      "properties": {
                        "resourceTypes": {
                          "type": "array",
                          "description": "List of allowed resources.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resources"
                          }
                        },
                        "resourceGroups": {
                          "type": "array",
                          "description": "List of allowed resource groups.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resource groups"
                          }
                        },
                        "osTypes": {
                          "type": "array",
                          "description": "List of allowed operating systems.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed operating systems"
                          }
                        },
                        "locations": {
                          "type": "array",
                          "description": "List of locations to scope the query to.",
                          "items": {
                            "type": "string",
                            "description": "Location to scope the query to."
                          }
                        },
                        "tagSettings": {
                          "type": "object",
                          "description": "Tag settings for the VM.",
                          "properties": {
                            "tags": {
                              "type": "object",
                              "description": "Dictionary of tags with its list of values.",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "List of tag values for a tag."
                                }
                              }
                            },
                            "filterOperator": {
                              "type": "string",
                              "description": "Filter VMs by Any or All specified tags.",
                              "enum": [
                                "All",
                                "Any"
                              ],
                              "x-ms-enum": {
                                "name": "TagOperators",
                                "modelAsString": false
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ConfigurationAssignments"
        ],
        "summary": "Unregister configuration for resource",
        "description": "Unregister configuration for resource.",
        "operationId": "ConfigurationAssignments_DeleteParent",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerName",
            "in": "path",
            "description": "Resource provider name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceParentType",
            "in": "path",
            "description": "Resource parent type",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceParentName",
            "in": "path",
            "description": "Resource parent identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "Resource type",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationAssignmentName",
            "in": "path",
            "description": "Unique configuration assignment name",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Configuration Assignment",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource",
                  "type": "string"
                },
                "properties": {
                  "description": "Properties of the configuration assignment",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "maintenanceConfigurationId": {
                      "description": "The maintenance configuration Id",
                      "type": "string"
                    },
                    "resourceId": {
                      "description": "The unique resourceId",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Properties of the configuration assignment",
                      "type": "object",
                      "properties": {
                        "resourceTypes": {
                          "type": "array",
                          "description": "List of allowed resources.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resources"
                          }
                        },
                        "resourceGroups": {
                          "type": "array",
                          "description": "List of allowed resource groups.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resource groups"
                          }
                        },
                        "osTypes": {
                          "type": "array",
                          "description": "List of allowed operating systems.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed operating systems"
                          }
                        },
                        "locations": {
                          "type": "array",
                          "description": "List of locations to scope the query to.",
                          "items": {
                            "type": "string",
                            "description": "Location to scope the query to."
                          }
                        },
                        "tagSettings": {
                          "type": "object",
                          "description": "Tag settings for the VM.",
                          "properties": {
                            "tags": {
                              "type": "object",
                              "description": "Dictionary of tags with its list of values.",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "List of tag values for a tag."
                                }
                              }
                            },
                            "filterOperator": {
                              "type": "string",
                              "description": "Filter VMs by Any or All specified tags.",
                              "enum": [
                                "All",
                                "Any"
                              ],
                              "x-ms-enum": {
                                "name": "TagOperators",
                                "modelAsString": false
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{providerName}/{resourceType}/{resourceName}/providers/Microsoft.Maintenance/configurationAssignments/{configurationAssignmentName}": {
      "get": {
        "tags": [
          "ConfigurationAssignments"
        ],
        "summary": "Get configuration assignment",
        "description": "Get configuration assignment for resource..",
        "operationId": "ConfigurationAssignments_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerName",
            "in": "path",
            "description": "Resource provider name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "Resource type",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationAssignmentName",
            "in": "path",
            "description": "Configuration assignment name",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Configuration Assignment",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource",
                  "type": "string"
                },
                "properties": {
                  "description": "Properties of the configuration assignment",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "maintenanceConfigurationId": {
                      "description": "The maintenance configuration Id",
                      "type": "string"
                    },
                    "resourceId": {
                      "description": "The unique resourceId",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Properties of the configuration assignment",
                      "type": "object",
                      "properties": {
                        "resourceTypes": {
                          "type": "array",
                          "description": "List of allowed resources.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resources"
                          }
                        },
                        "resourceGroups": {
                          "type": "array",
                          "description": "List of allowed resource groups.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resource groups"
                          }
                        },
                        "osTypes": {
                          "type": "array",
                          "description": "List of allowed operating systems.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed operating systems"
                          }
                        },
                        "locations": {
                          "type": "array",
                          "description": "List of locations to scope the query to.",
                          "items": {
                            "type": "string",
                            "description": "Location to scope the query to."
                          }
                        },
                        "tagSettings": {
                          "type": "object",
                          "description": "Tag settings for the VM.",
                          "properties": {
                            "tags": {
                              "type": "object",
                              "description": "Dictionary of tags with its list of values.",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "List of tag values for a tag."
                                }
                              }
                            },
                            "filterOperator": {
                              "type": "string",
                              "description": "Filter VMs by Any or All specified tags.",
                              "enum": [
                                "All",
                                "Any"
                              ],
                              "x-ms-enum": {
                                "name": "TagOperators",
                                "modelAsString": false
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ConfigurationAssignments"
        ],
        "summary": "Create configuration assignment",
        "description": "Register configuration for resource.",
        "operationId": "ConfigurationAssignments_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerName",
            "in": "path",
            "description": "Resource provider name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "Resource type",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationAssignmentName",
            "in": "path",
            "description": "Configuration assignment name",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationAssignment",
            "in": "body",
            "description": "The configurationAssignment",
            "required": true,
            "schema": {
              "description": "Configuration Assignment",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource",
                  "type": "string"
                },
                "properties": {
                  "description": "Properties of the configuration assignment",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "maintenanceConfigurationId": {
                      "description": "The maintenance configuration Id",
                      "type": "string"
                    },
                    "resourceId": {
                      "description": "The unique resourceId",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Properties of the configuration assignment",
                      "type": "object",
                      "properties": {
                        "resourceTypes": {
                          "type": "array",
                          "description": "List of allowed resources.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resources"
                          }
                        },
                        "resourceGroups": {
                          "type": "array",
                          "description": "List of allowed resource groups.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resource groups"
                          }
                        },
                        "osTypes": {
                          "type": "array",
                          "description": "List of allowed operating systems.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed operating systems"
                          }
                        },
                        "locations": {
                          "type": "array",
                          "description": "List of locations to scope the query to.",
                          "items": {
                            "type": "string",
                            "description": "Location to scope the query to."
                          }
                        },
                        "tagSettings": {
                          "type": "object",
                          "description": "Tag settings for the VM.",
                          "properties": {
                            "tags": {
                              "type": "object",
                              "description": "Dictionary of tags with its list of values.",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "List of tag values for a tag."
                                }
                              }
                            },
                            "filterOperator": {
                              "type": "string",
                              "description": "Filter VMs by Any or All specified tags.",
                              "enum": [
                                "All",
                                "Any"
                              ],
                              "x-ms-enum": {
                                "name": "TagOperators",
                                "modelAsString": false
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "Configuration assignment update request accepted",
            "schema": {
              "description": "Configuration Assignment",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource",
                  "type": "string"
                },
                "properties": {
                  "description": "Properties of the configuration assignment",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "maintenanceConfigurationId": {
                      "description": "The maintenance configuration Id",
                      "type": "string"
                    },
                    "resourceId": {
                      "description": "The unique resourceId",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Properties of the configuration assignment",
                      "type": "object",
                      "properties": {
                        "resourceTypes": {
                          "type": "array",
                          "description": "List of allowed resources.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resources"
                          }
                        },
                        "resourceGroups": {
                          "type": "array",
                          "description": "List of allowed resource groups.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resource groups"
                          }
                        },
                        "osTypes": {
                          "type": "array",
                          "description": "List of allowed operating systems.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed operating systems"
                          }
                        },
                        "locations": {
                          "type": "array",
                          "description": "List of locations to scope the query to.",
                          "items": {
                            "type": "string",
                            "description": "Location to scope the query to."
                          }
                        },
                        "tagSettings": {
                          "type": "object",
                          "description": "Tag settings for the VM.",
                          "properties": {
                            "tags": {
                              "type": "object",
                              "description": "Dictionary of tags with its list of values.",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "List of tag values for a tag."
                                }
                              }
                            },
                            "filterOperator": {
                              "type": "string",
                              "description": "Filter VMs by Any or All specified tags.",
                              "enum": [
                                "All",
                                "Any"
                              ],
                              "x-ms-enum": {
                                "name": "TagOperators",
                                "modelAsString": false
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Configuration assignment create request accepted",
            "schema": {
              "description": "Configuration Assignment",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource",
                  "type": "string"
                },
                "properties": {
                  "description": "Properties of the configuration assignment",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "maintenanceConfigurationId": {
                      "description": "The maintenance configuration Id",
                      "type": "string"
                    },
                    "resourceId": {
                      "description": "The unique resourceId",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Properties of the configuration assignment",
                      "type": "object",
                      "properties": {
                        "resourceTypes": {
                          "type": "array",
                          "description": "List of allowed resources.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resources"
                          }
                        },
                        "resourceGroups": {
                          "type": "array",
                          "description": "List of allowed resource groups.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resource groups"
                          }
                        },
                        "osTypes": {
                          "type": "array",
                          "description": "List of allowed operating systems.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed operating systems"
                          }
                        },
                        "locations": {
                          "type": "array",
                          "description": "List of locations to scope the query to.",
                          "items": {
                            "type": "string",
                            "description": "Location to scope the query to."
                          }
                        },
                        "tagSettings": {
                          "type": "object",
                          "description": "Tag settings for the VM.",
                          "properties": {
                            "tags": {
                              "type": "object",
                              "description": "Dictionary of tags with its list of values.",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "List of tag values for a tag."
                                }
                              }
                            },
                            "filterOperator": {
                              "type": "string",
                              "description": "Filter VMs by Any or All specified tags.",
                              "enum": [
                                "All",
                                "Any"
                              ],
                              "x-ms-enum": {
                                "name": "TagOperators",
                                "modelAsString": false
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ConfigurationAssignments"
        ],
        "summary": "Unregister configuration for resource",
        "description": "Unregister configuration for resource.",
        "operationId": "ConfigurationAssignments_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerName",
            "in": "path",
            "description": "Resource provider name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "Resource type",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationAssignmentName",
            "in": "path",
            "description": "Unique configuration assignment name",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Configuration Assignment",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource",
                  "type": "string"
                },
                "properties": {
                  "description": "Properties of the configuration assignment",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "maintenanceConfigurationId": {
                      "description": "The maintenance configuration Id",
                      "type": "string"
                    },
                    "resourceId": {
                      "description": "The unique resourceId",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Properties of the configuration assignment",
                      "type": "object",
                      "properties": {
                        "resourceTypes": {
                          "type": "array",
                          "description": "List of allowed resources.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resources"
                          }
                        },
                        "resourceGroups": {
                          "type": "array",
                          "description": "List of allowed resource groups.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resource groups"
                          }
                        },
                        "osTypes": {
                          "type": "array",
                          "description": "List of allowed operating systems.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed operating systems"
                          }
                        },
                        "locations": {
                          "type": "array",
                          "description": "List of locations to scope the query to.",
                          "items": {
                            "type": "string",
                            "description": "Location to scope the query to."
                          }
                        },
                        "tagSettings": {
                          "type": "object",
                          "description": "Tag settings for the VM.",
                          "properties": {
                            "tags": {
                              "type": "object",
                              "description": "Dictionary of tags with its list of values.",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "List of tag values for a tag."
                                }
                              }
                            },
                            "filterOperator": {
                              "type": "string",
                              "description": "Filter VMs by Any or All specified tags.",
                              "enum": [
                                "All",
                                "Any"
                              ],
                              "x-ms-enum": {
                                "name": "TagOperators",
                                "modelAsString": false
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{providerName}/{resourceParentType}/{resourceParentName}/{resourceType}/{resourceName}/providers/Microsoft.Maintenance/configurationAssignments": {
      "get": {
        "tags": [
          "ConfigurationAssignments"
        ],
        "summary": "List configurationAssignments for resource",
        "description": "List configurationAssignments for resource.",
        "operationId": "ConfigurationAssignments_ListParent",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerName",
            "in": "path",
            "description": "Resource provider name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceParentType",
            "in": "path",
            "description": "Resource parent type",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceParentName",
            "in": "path",
            "description": "Resource parent identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "Resource type",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Response for ConfigurationAssignments list",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The list of configuration Assignments",
                  "type": "array",
                  "items": {
                    "description": "Configuration Assignment",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "readOnly": true,
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "location": {
                        "description": "Location of the resource",
                        "type": "string"
                      },
                      "properties": {
                        "description": "Properties of the configuration assignment",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "maintenanceConfigurationId": {
                            "description": "The maintenance configuration Id",
                            "type": "string"
                          },
                          "resourceId": {
                            "description": "The unique resourceId",
                            "type": "string"
                          },
                          "filter": {
                            "description": "Properties of the configuration assignment",
                            "type": "object",
                            "properties": {
                              "resourceTypes": {
                                "type": "array",
                                "description": "List of allowed resources.",
                                "items": {
                                  "type": "string",
                                  "description": "List of allowed resources"
                                }
                              },
                              "resourceGroups": {
                                "type": "array",
                                "description": "List of allowed resource groups.",
                                "items": {
                                  "type": "string",
                                  "description": "List of allowed resource groups"
                                }
                              },
                              "osTypes": {
                                "type": "array",
                                "description": "List of allowed operating systems.",
                                "items": {
                                  "type": "string",
                                  "description": "List of allowed operating systems"
                                }
                              },
                              "locations": {
                                "type": "array",
                                "description": "List of locations to scope the query to.",
                                "items": {
                                  "type": "string",
                                  "description": "Location to scope the query to."
                                }
                              },
                              "tagSettings": {
                                "type": "object",
                                "description": "Tag settings for the VM.",
                                "properties": {
                                  "tags": {
                                    "type": "object",
                                    "description": "Dictionary of tags with its list of values.",
                                    "additionalProperties": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "List of tag values for a tag."
                                      }
                                    }
                                  },
                                  "filterOperator": {
                                    "type": "string",
                                    "description": "Filter VMs by Any or All specified tags.",
                                    "enum": [
                                      "All",
                                      "Any"
                                    ],
                                    "x-ms-enum": {
                                      "name": "TagOperators",
                                      "modelAsString": false
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{providerName}/{resourceType}/{resourceName}/providers/Microsoft.Maintenance/configurationAssignments": {
      "get": {
        "tags": [
          "ConfigurationAssignments"
        ],
        "summary": "List configurationAssignments for resource",
        "description": "List configurationAssignments for resource.",
        "operationId": "ConfigurationAssignments_List",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerName",
            "in": "path",
            "description": "Resource provider name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "Resource type",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Response for ConfigurationAssignments list",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The list of configuration Assignments",
                  "type": "array",
                  "items": {
                    "description": "Configuration Assignment",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "readOnly": true,
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "location": {
                        "description": "Location of the resource",
                        "type": "string"
                      },
                      "properties": {
                        "description": "Properties of the configuration assignment",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "maintenanceConfigurationId": {
                            "description": "The maintenance configuration Id",
                            "type": "string"
                          },
                          "resourceId": {
                            "description": "The unique resourceId",
                            "type": "string"
                          },
                          "filter": {
                            "description": "Properties of the configuration assignment",
                            "type": "object",
                            "properties": {
                              "resourceTypes": {
                                "type": "array",
                                "description": "List of allowed resources.",
                                "items": {
                                  "type": "string",
                                  "description": "List of allowed resources"
                                }
                              },
                              "resourceGroups": {
                                "type": "array",
                                "description": "List of allowed resource groups.",
                                "items": {
                                  "type": "string",
                                  "description": "List of allowed resource groups"
                                }
                              },
                              "osTypes": {
                                "type": "array",
                                "description": "List of allowed operating systems.",
                                "items": {
                                  "type": "string",
                                  "description": "List of allowed operating systems"
                                }
                              },
                              "locations": {
                                "type": "array",
                                "description": "List of locations to scope the query to.",
                                "items": {
                                  "type": "string",
                                  "description": "Location to scope the query to."
                                }
                              },
                              "tagSettings": {
                                "type": "object",
                                "description": "Tag settings for the VM.",
                                "properties": {
                                  "tags": {
                                    "type": "object",
                                    "description": "Dictionary of tags with its list of values.",
                                    "additionalProperties": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "List of tag values for a tag."
                                      }
                                    }
                                  },
                                  "filterOperator": {
                                    "type": "string",
                                    "description": "Filter VMs by Any or All specified tags.",
                                    "enum": [
                                      "All",
                                      "Any"
                                    ],
                                    "x-ms-enum": {
                                      "name": "TagOperators",
                                      "modelAsString": false
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Maintenance/maintenanceConfigurations/{resourceName}": {
      "get": {
        "tags": [
          "MaintenanceConfigurations"
        ],
        "summary": "Get Configuration record",
        "operationId": "MaintenanceConfigurations_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource Group Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Maintenance Configuration Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Maintenance configuration record type",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets location of the resource",
                  "type": "string"
                },
                "tags": {
                  "description": "Gets or sets tags of the resource",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Gets or sets properties of the resource",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "namespace": {
                      "description": "Gets or sets namespace of the resource",
                      "type": "string"
                    },
                    "extensionProperties": {
                      "description": "Gets or sets extensionProperties of the maintenanceConfiguration",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "maintenanceScope": {
                      "description": "Gets or sets maintenanceScope of the configuration",
                      "enum": [
                        "Host",
                        "Resource",
                        "OSImage",
                        "Extension",
                        "InGuestPatch",
                        "SQLDB",
                        "SQLManagedInstance"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "MaintenanceScope",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Host",
                            "description": "This maintenance scope controls installation of azure platform updates i.e. services on physical nodes hosting customer VMs."
                          },
                          {
                            "value": "Resource",
                            "description": "This maintenance scope controls the default update maintenance of the Azure Resource"
                          },
                          {
                            "value": "OSImage",
                            "description": "This maintenance scope controls os image installation on VM/VMSS"
                          },
                          {
                            "value": "Extension",
                            "description": "This maintenance scope controls extension installation on VM/VMSS"
                          },
                          {
                            "value": "InGuestPatch",
                            "description": "This maintenance scope controls installation of windows and linux packages on VM/VMSS"
                          },
                          {
                            "value": "SQLDB",
                            "description": "This maintenance scope controls installation of SQL server platform updates."
                          },
                          {
                            "value": "SQLManagedInstance",
                            "description": "This maintenance scope controls installation of SQL managed instance platform update."
                          }
                        ]
                      }
                    },
                    "maintenanceWindow": {
                      "description": "Definition of a MaintenanceWindow",
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "properties": {
                        "startDateTime": {
                          "description": "Effective start date of the maintenance window in YYYY-MM-DD hh:mm format. The start date can be set to either the current date or future date. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone.",
                          "type": "string"
                        },
                        "expirationDateTime": {
                          "description": "Effective expiration date of the maintenance window in YYYY-MM-DD hh:mm format. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone. Expiration date must be set to a future date. If not provided, it will be set to the maximum datetime 9999-12-31 23:59:59.",
                          "type": "string"
                        },
                        "duration": {
                          "description": "Duration of the maintenance window in HH:mm format. If not provided, default value will be used based on maintenance scope provided. Example: 05:00.",
                          "type": "string"
                        },
                        "timeZone": {
                          "description": "Name of the timezone. List of timezones can be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell. Example: Pacific Standard Time, UTC, W. Europe Standard Time, Korea Standard Time, Cen. Australia Standard Time.",
                          "type": "string"
                        },
                        "recurEvery": {
                          "description": "Rate at which a Maintenance window is expected to recur. The rate can be expressed as daily, weekly, or monthly schedules. Daily schedule are formatted as recurEvery: [Frequency as integer]['Day(s)']. If no frequency is provided, the default frequency is 1. Daily schedule examples are recurEvery: Day, recurEvery: 3Days.  Weekly schedule are formatted as recurEvery: [Frequency as integer]['Week(s)'] [Optional comma separated list of weekdays Monday-Sunday]. Weekly schedule examples are recurEvery: 3Weeks, recurEvery: Week Saturday,Sunday. Monthly schedules are formatted as [Frequency as integer]['Month(s)'] [Comma separated list of month days] or [Frequency as integer]['Month(s)'] [Week of Month (First, Second, Third, Fourth, Last)] [Weekday Monday-Sunday] [Optional Offset(No. of days)]. Offset value must be between -6 to 6 inclusive. Monthly schedule examples are recurEvery: Month, recurEvery: 2Months, recurEvery: Month day23,day24, recurEvery: Month Last Sunday, recurEvery: Month Fourth Monday, recurEvery: Month Last Sunday Offset-3, recurEvery: Month Third Sunday Offset6.",
                          "type": "string"
                        }
                      }
                    },
                    "visibility": {
                      "description": "Gets or sets the visibility of the configuration. The default value is 'Custom'",
                      "enum": [
                        "Custom",
                        "Public"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "Visibility",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Custom",
                            "description": "Only visible to users with permissions."
                          },
                          {
                            "value": "Public",
                            "description": "Visible to all users."
                          }
                        ]
                      }
                    },
                    "installPatches": {
                      "description": "The input parameters to be passed to the patch run operation.",
                      "type": "object",
                      "properties": {
                        "rebootSetting": {
                          "type": "string",
                          "enum": [
                            "IfRequired",
                            "Never",
                            "Always"
                          ],
                          "x-ms-enum": {
                            "name": "RebootOptions",
                            "modelAsString": true
                          },
                          "default": "IfRequired",
                          "description": "Possible reboot preference as defined by the user based on which it would be decided to reboot the machine or not after the patch operation is completed."
                        },
                        "windowsParameters": {
                          "description": "Input parameters specific to patching a Windows machine. For Linux machines, do not pass this property.",
                          "type": "object",
                          "properties": {
                            "kbNumbersToExclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Windows KBID to be excluded for patching."
                            },
                            "kbNumbersToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Windows KBID to be included for patching."
                            },
                            "classificationsToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', 'UpdateRollup', 'FeaturePack', 'ServicePack', 'Definition', 'Tools', and 'Updates'."
                            },
                            "excludeKbsRequiringReboot": {
                              "type": "boolean",
                              "description": "Exclude patches which need reboot"
                            }
                          }
                        },
                        "linuxParameters": {
                          "description": "Input parameters specific to patching Linux machine. For Windows machines, do not pass this property.",
                          "type": "object",
                          "properties": {
                            "packageNameMasksToExclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Package names to be excluded for patching."
                            },
                            "packageNameMasksToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Package names to be included for patching."
                            },
                            "classificationsToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', and 'Other'."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MaintenanceConfigurations"
        ],
        "summary": "Create or Update configuration record",
        "operationId": "MaintenanceConfigurations_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource Group Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Maintenance Configuration Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "configuration",
            "in": "body",
            "description": "The configuration",
            "required": true,
            "schema": {
              "description": "Maintenance configuration record type",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets location of the resource",
                  "type": "string"
                },
                "tags": {
                  "description": "Gets or sets tags of the resource",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Gets or sets properties of the resource",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "namespace": {
                      "description": "Gets or sets namespace of the resource",
                      "type": "string"
                    },
                    "extensionProperties": {
                      "description": "Gets or sets extensionProperties of the maintenanceConfiguration",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "maintenanceScope": {
                      "description": "Gets or sets maintenanceScope of the configuration",
                      "enum": [
                        "Host",
                        "Resource",
                        "OSImage",
                        "Extension",
                        "InGuestPatch",
                        "SQLDB",
                        "SQLManagedInstance"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "MaintenanceScope",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Host",
                            "description": "This maintenance scope controls installation of azure platform updates i.e. services on physical nodes hosting customer VMs."
                          },
                          {
                            "value": "Resource",
                            "description": "This maintenance scope controls the default update maintenance of the Azure Resource"
                          },
                          {
                            "value": "OSImage",
                            "description": "This maintenance scope controls os image installation on VM/VMSS"
                          },
                          {
                            "value": "Extension",
                            "description": "This maintenance scope controls extension installation on VM/VMSS"
                          },
                          {
                            "value": "InGuestPatch",
                            "description": "This maintenance scope controls installation of windows and linux packages on VM/VMSS"
                          },
                          {
                            "value": "SQLDB",
                            "description": "This maintenance scope controls installation of SQL server platform updates."
                          },
                          {
                            "value": "SQLManagedInstance",
                            "description": "This maintenance scope controls installation of SQL managed instance platform update."
                          }
                        ]
                      }
                    },
                    "maintenanceWindow": {
                      "description": "Definition of a MaintenanceWindow",
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "properties": {
                        "startDateTime": {
                          "description": "Effective start date of the maintenance window in YYYY-MM-DD hh:mm format. The start date can be set to either the current date or future date. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone.",
                          "type": "string"
                        },
                        "expirationDateTime": {
                          "description": "Effective expiration date of the maintenance window in YYYY-MM-DD hh:mm format. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone. Expiration date must be set to a future date. If not provided, it will be set to the maximum datetime 9999-12-31 23:59:59.",
                          "type": "string"
                        },
                        "duration": {
                          "description": "Duration of the maintenance window in HH:mm format. If not provided, default value will be used based on maintenance scope provided. Example: 05:00.",
                          "type": "string"
                        },
                        "timeZone": {
                          "description": "Name of the timezone. List of timezones can be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell. Example: Pacific Standard Time, UTC, W. Europe Standard Time, Korea Standard Time, Cen. Australia Standard Time.",
                          "type": "string"
                        },
                        "recurEvery": {
                          "description": "Rate at which a Maintenance window is expected to recur. The rate can be expressed as daily, weekly, or monthly schedules. Daily schedule are formatted as recurEvery: [Frequency as integer]['Day(s)']. If no frequency is provided, the default frequency is 1. Daily schedule examples are recurEvery: Day, recurEvery: 3Days.  Weekly schedule are formatted as recurEvery: [Frequency as integer]['Week(s)'] [Optional comma separated list of weekdays Monday-Sunday]. Weekly schedule examples are recurEvery: 3Weeks, recurEvery: Week Saturday,Sunday. Monthly schedules are formatted as [Frequency as integer]['Month(s)'] [Comma separated list of month days] or [Frequency as integer]['Month(s)'] [Week of Month (First, Second, Third, Fourth, Last)] [Weekday Monday-Sunday] [Optional Offset(No. of days)]. Offset value must be between -6 to 6 inclusive. Monthly schedule examples are recurEvery: Month, recurEvery: 2Months, recurEvery: Month day23,day24, recurEvery: Month Last Sunday, recurEvery: Month Fourth Monday, recurEvery: Month Last Sunday Offset-3, recurEvery: Month Third Sunday Offset6.",
                          "type": "string"
                        }
                      }
                    },
                    "visibility": {
                      "description": "Gets or sets the visibility of the configuration. The default value is 'Custom'",
                      "enum": [
                        "Custom",
                        "Public"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "Visibility",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Custom",
                            "description": "Only visible to users with permissions."
                          },
                          {
                            "value": "Public",
                            "description": "Visible to all users."
                          }
                        ]
                      }
                    },
                    "installPatches": {
                      "description": "The input parameters to be passed to the patch run operation.",
                      "type": "object",
                      "properties": {
                        "rebootSetting": {
                          "type": "string",
                          "enum": [
                            "IfRequired",
                            "Never",
                            "Always"
                          ],
                          "x-ms-enum": {
                            "name": "RebootOptions",
                            "modelAsString": true
                          },
                          "default": "IfRequired",
                          "description": "Possible reboot preference as defined by the user based on which it would be decided to reboot the machine or not after the patch operation is completed."
                        },
                        "windowsParameters": {
                          "description": "Input parameters specific to patching a Windows machine. For Linux machines, do not pass this property.",
                          "type": "object",
                          "properties": {
                            "kbNumbersToExclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Windows KBID to be excluded for patching."
                            },
                            "kbNumbersToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Windows KBID to be included for patching."
                            },
                            "classificationsToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', 'UpdateRollup', 'FeaturePack', 'ServicePack', 'Definition', 'Tools', and 'Updates'."
                            },
                            "excludeKbsRequiringReboot": {
                              "type": "boolean",
                              "description": "Exclude patches which need reboot"
                            }
                          }
                        },
                        "linuxParameters": {
                          "description": "Input parameters specific to patching Linux machine. For Windows machines, do not pass this property.",
                          "type": "object",
                          "properties": {
                            "packageNameMasksToExclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Package names to be excluded for patching."
                            },
                            "packageNameMasksToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Package names to be included for patching."
                            },
                            "classificationsToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', and 'Other'."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "Maintenance configuration update request accepted",
            "schema": {
              "description": "Maintenance configuration record type",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets location of the resource",
                  "type": "string"
                },
                "tags": {
                  "description": "Gets or sets tags of the resource",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Gets or sets properties of the resource",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "namespace": {
                      "description": "Gets or sets namespace of the resource",
                      "type": "string"
                    },
                    "extensionProperties": {
                      "description": "Gets or sets extensionProperties of the maintenanceConfiguration",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "maintenanceScope": {
                      "description": "Gets or sets maintenanceScope of the configuration",
                      "enum": [
                        "Host",
                        "Resource",
                        "OSImage",
                        "Extension",
                        "InGuestPatch",
                        "SQLDB",
                        "SQLManagedInstance"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "MaintenanceScope",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Host",
                            "description": "This maintenance scope controls installation of azure platform updates i.e. services on physical nodes hosting customer VMs."
                          },
                          {
                            "value": "Resource",
                            "description": "This maintenance scope controls the default update maintenance of the Azure Resource"
                          },
                          {
                            "value": "OSImage",
                            "description": "This maintenance scope controls os image installation on VM/VMSS"
                          },
                          {
                            "value": "Extension",
                            "description": "This maintenance scope controls extension installation on VM/VMSS"
                          },
                          {
                            "value": "InGuestPatch",
                            "description": "This maintenance scope controls installation of windows and linux packages on VM/VMSS"
                          },
                          {
                            "value": "SQLDB",
                            "description": "This maintenance scope controls installation of SQL server platform updates."
                          },
                          {
                            "value": "SQLManagedInstance",
                            "description": "This maintenance scope controls installation of SQL managed instance platform update."
                          }
                        ]
                      }
                    },
                    "maintenanceWindow": {
                      "description": "Definition of a MaintenanceWindow",
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "properties": {
                        "startDateTime": {
                          "description": "Effective start date of the maintenance window in YYYY-MM-DD hh:mm format. The start date can be set to either the current date or future date. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone.",
                          "type": "string"
                        },
                        "expirationDateTime": {
                          "description": "Effective expiration date of the maintenance window in YYYY-MM-DD hh:mm format. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone. Expiration date must be set to a future date. If not provided, it will be set to the maximum datetime 9999-12-31 23:59:59.",
                          "type": "string"
                        },
                        "duration": {
                          "description": "Duration of the maintenance window in HH:mm format. If not provided, default value will be used based on maintenance scope provided. Example: 05:00.",
                          "type": "string"
                        },
                        "timeZone": {
                          "description": "Name of the timezone. List of timezones can be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell. Example: Pacific Standard Time, UTC, W. Europe Standard Time, Korea Standard Time, Cen. Australia Standard Time.",
                          "type": "string"
                        },
                        "recurEvery": {
                          "description": "Rate at which a Maintenance window is expected to recur. The rate can be expressed as daily, weekly, or monthly schedules. Daily schedule are formatted as recurEvery: [Frequency as integer]['Day(s)']. If no frequency is provided, the default frequency is 1. Daily schedule examples are recurEvery: Day, recurEvery: 3Days.  Weekly schedule are formatted as recurEvery: [Frequency as integer]['Week(s)'] [Optional comma separated list of weekdays Monday-Sunday]. Weekly schedule examples are recurEvery: 3Weeks, recurEvery: Week Saturday,Sunday. Monthly schedules are formatted as [Frequency as integer]['Month(s)'] [Comma separated list of month days] or [Frequency as integer]['Month(s)'] [Week of Month (First, Second, Third, Fourth, Last)] [Weekday Monday-Sunday] [Optional Offset(No. of days)]. Offset value must be between -6 to 6 inclusive. Monthly schedule examples are recurEvery: Month, recurEvery: 2Months, recurEvery: Month day23,day24, recurEvery: Month Last Sunday, recurEvery: Month Fourth Monday, recurEvery: Month Last Sunday Offset-3, recurEvery: Month Third Sunday Offset6.",
                          "type": "string"
                        }
                      }
                    },
                    "visibility": {
                      "description": "Gets or sets the visibility of the configuration. The default value is 'Custom'",
                      "enum": [
                        "Custom",
                        "Public"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "Visibility",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Custom",
                            "description": "Only visible to users with permissions."
                          },
                          {
                            "value": "Public",
                            "description": "Visible to all users."
                          }
                        ]
                      }
                    },
                    "installPatches": {
                      "description": "The input parameters to be passed to the patch run operation.",
                      "type": "object",
                      "properties": {
                        "rebootSetting": {
                          "type": "string",
                          "enum": [
                            "IfRequired",
                            "Never",
                            "Always"
                          ],
                          "x-ms-enum": {
                            "name": "RebootOptions",
                            "modelAsString": true
                          },
                          "default": "IfRequired",
                          "description": "Possible reboot preference as defined by the user based on which it would be decided to reboot the machine or not after the patch operation is completed."
                        },
                        "windowsParameters": {
                          "description": "Input parameters specific to patching a Windows machine. For Linux machines, do not pass this property.",
                          "type": "object",
                          "properties": {
                            "kbNumbersToExclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Windows KBID to be excluded for patching."
                            },
                            "kbNumbersToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Windows KBID to be included for patching."
                            },
                            "classificationsToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', 'UpdateRollup', 'FeaturePack', 'ServicePack', 'Definition', 'Tools', and 'Updates'."
                            },
                            "excludeKbsRequiringReboot": {
                              "type": "boolean",
                              "description": "Exclude patches which need reboot"
                            }
                          }
                        },
                        "linuxParameters": {
                          "description": "Input parameters specific to patching Linux machine. For Windows machines, do not pass this property.",
                          "type": "object",
                          "properties": {
                            "packageNameMasksToExclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Package names to be excluded for patching."
                            },
                            "packageNameMasksToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Package names to be included for patching."
                            },
                            "classificationsToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', and 'Other'."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Maintenance configuration create request accepted",
            "schema": {
              "description": "Maintenance configuration record type",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets location of the resource",
                  "type": "string"
                },
                "tags": {
                  "description": "Gets or sets tags of the resource",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Gets or sets properties of the resource",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "namespace": {
                      "description": "Gets or sets namespace of the resource",
                      "type": "string"
                    },
                    "extensionProperties": {
                      "description": "Gets or sets extensionProperties of the maintenanceConfiguration",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "maintenanceScope": {
                      "description": "Gets or sets maintenanceScope of the configuration",
                      "enum": [
                        "Host",
                        "Resource",
                        "OSImage",
                        "Extension",
                        "InGuestPatch",
                        "SQLDB",
                        "SQLManagedInstance"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "MaintenanceScope",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Host",
                            "description": "This maintenance scope controls installation of azure platform updates i.e. services on physical nodes hosting customer VMs."
                          },
                          {
                            "value": "Resource",
                            "description": "This maintenance scope controls the default update maintenance of the Azure Resource"
                          },
                          {
                            "value": "OSImage",
                            "description": "This maintenance scope controls os image installation on VM/VMSS"
                          },
                          {
                            "value": "Extension",
                            "description": "This maintenance scope controls extension installation on VM/VMSS"
                          },
                          {
                            "value": "InGuestPatch",
                            "description": "This maintenance scope controls installation of windows and linux packages on VM/VMSS"
                          },
                          {
                            "value": "SQLDB",
                            "description": "This maintenance scope controls installation of SQL server platform updates."
                          },
                          {
                            "value": "SQLManagedInstance",
                            "description": "This maintenance scope controls installation of SQL managed instance platform update."
                          }
                        ]
                      }
                    },
                    "maintenanceWindow": {
                      "description": "Definition of a MaintenanceWindow",
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "properties": {
                        "startDateTime": {
                          "description": "Effective start date of the maintenance window in YYYY-MM-DD hh:mm format. The start date can be set to either the current date or future date. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone.",
                          "type": "string"
                        },
                        "expirationDateTime": {
                          "description": "Effective expiration date of the maintenance window in YYYY-MM-DD hh:mm format. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone. Expiration date must be set to a future date. If not provided, it will be set to the maximum datetime 9999-12-31 23:59:59.",
                          "type": "string"
                        },
                        "duration": {
                          "description": "Duration of the maintenance window in HH:mm format. If not provided, default value will be used based on maintenance scope provided. Example: 05:00.",
                          "type": "string"
                        },
                        "timeZone": {
                          "description": "Name of the timezone. List of timezones can be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell. Example: Pacific Standard Time, UTC, W. Europe Standard Time, Korea Standard Time, Cen. Australia Standard Time.",
                          "type": "string"
                        },
                        "recurEvery": {
                          "description": "Rate at which a Maintenance window is expected to recur. The rate can be expressed as daily, weekly, or monthly schedules. Daily schedule are formatted as recurEvery: [Frequency as integer]['Day(s)']. If no frequency is provided, the default frequency is 1. Daily schedule examples are recurEvery: Day, recurEvery: 3Days.  Weekly schedule are formatted as recurEvery: [Frequency as integer]['Week(s)'] [Optional comma separated list of weekdays Monday-Sunday]. Weekly schedule examples are recurEvery: 3Weeks, recurEvery: Week Saturday,Sunday. Monthly schedules are formatted as [Frequency as integer]['Month(s)'] [Comma separated list of month days] or [Frequency as integer]['Month(s)'] [Week of Month (First, Second, Third, Fourth, Last)] [Weekday Monday-Sunday] [Optional Offset(No. of days)]. Offset value must be between -6 to 6 inclusive. Monthly schedule examples are recurEvery: Month, recurEvery: 2Months, recurEvery: Month day23,day24, recurEvery: Month Last Sunday, recurEvery: Month Fourth Monday, recurEvery: Month Last Sunday Offset-3, recurEvery: Month Third Sunday Offset6.",
                          "type": "string"
                        }
                      }
                    },
                    "visibility": {
                      "description": "Gets or sets the visibility of the configuration. The default value is 'Custom'",
                      "enum": [
                        "Custom",
                        "Public"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "Visibility",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Custom",
                            "description": "Only visible to users with permissions."
                          },
                          {
                            "value": "Public",
                            "description": "Visible to all users."
                          }
                        ]
                      }
                    },
                    "installPatches": {
                      "description": "The input parameters to be passed to the patch run operation.",
                      "type": "object",
                      "properties": {
                        "rebootSetting": {
                          "type": "string",
                          "enum": [
                            "IfRequired",
                            "Never",
                            "Always"
                          ],
                          "x-ms-enum": {
                            "name": "RebootOptions",
                            "modelAsString": true
                          },
                          "default": "IfRequired",
                          "description": "Possible reboot preference as defined by the user based on which it would be decided to reboot the machine or not after the patch operation is completed."
                        },
                        "windowsParameters": {
                          "description": "Input parameters specific to patching a Windows machine. For Linux machines, do not pass this property.",
                          "type": "object",
                          "properties": {
                            "kbNumbersToExclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Windows KBID to be excluded for patching."
                            },
                            "kbNumbersToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Windows KBID to be included for patching."
                            },
                            "classificationsToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', 'UpdateRollup', 'FeaturePack', 'ServicePack', 'Definition', 'Tools', and 'Updates'."
                            },
                            "excludeKbsRequiringReboot": {
                              "type": "boolean",
                              "description": "Exclude patches which need reboot"
                            }
                          }
                        },
                        "linuxParameters": {
                          "description": "Input parameters specific to patching Linux machine. For Windows machines, do not pass this property.",
                          "type": "object",
                          "properties": {
                            "packageNameMasksToExclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Package names to be excluded for patching."
                            },
                            "packageNameMasksToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Package names to be included for patching."
                            },
                            "classificationsToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', and 'Other'."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MaintenanceConfigurations"
        ],
        "summary": "Delete Configuration record",
        "operationId": "MaintenanceConfigurations_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource Group Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Maintenance Configuration Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Maintenance configuration record type",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets location of the resource",
                  "type": "string"
                },
                "tags": {
                  "description": "Gets or sets tags of the resource",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Gets or sets properties of the resource",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "namespace": {
                      "description": "Gets or sets namespace of the resource",
                      "type": "string"
                    },
                    "extensionProperties": {
                      "description": "Gets or sets extensionProperties of the maintenanceConfiguration",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "maintenanceScope": {
                      "description": "Gets or sets maintenanceScope of the configuration",
                      "enum": [
                        "Host",
                        "Resource",
                        "OSImage",
                        "Extension",
                        "InGuestPatch",
                        "SQLDB",
                        "SQLManagedInstance"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "MaintenanceScope",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Host",
                            "description": "This maintenance scope controls installation of azure platform updates i.e. services on physical nodes hosting customer VMs."
                          },
                          {
                            "value": "Resource",
                            "description": "This maintenance scope controls the default update maintenance of the Azure Resource"
                          },
                          {
                            "value": "OSImage",
                            "description": "This maintenance scope controls os image installation on VM/VMSS"
                          },
                          {
                            "value": "Extension",
                            "description": "This maintenance scope controls extension installation on VM/VMSS"
                          },
                          {
                            "value": "InGuestPatch",
                            "description": "This maintenance scope controls installation of windows and linux packages on VM/VMSS"
                          },
                          {
                            "value": "SQLDB",
                            "description": "This maintenance scope controls installation of SQL server platform updates."
                          },
                          {
                            "value": "SQLManagedInstance",
                            "description": "This maintenance scope controls installation of SQL managed instance platform update."
                          }
                        ]
                      }
                    },
                    "maintenanceWindow": {
                      "description": "Definition of a MaintenanceWindow",
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "properties": {
                        "startDateTime": {
                          "description": "Effective start date of the maintenance window in YYYY-MM-DD hh:mm format. The start date can be set to either the current date or future date. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone.",
                          "type": "string"
                        },
                        "expirationDateTime": {
                          "description": "Effective expiration date of the maintenance window in YYYY-MM-DD hh:mm format. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone. Expiration date must be set to a future date. If not provided, it will be set to the maximum datetime 9999-12-31 23:59:59.",
                          "type": "string"
                        },
                        "duration": {
                          "description": "Duration of the maintenance window in HH:mm format. If not provided, default value will be used based on maintenance scope provided. Example: 05:00.",
                          "type": "string"
                        },
                        "timeZone": {
                          "description": "Name of the timezone. List of timezones can be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell. Example: Pacific Standard Time, UTC, W. Europe Standard Time, Korea Standard Time, Cen. Australia Standard Time.",
                          "type": "string"
                        },
                        "recurEvery": {
                          "description": "Rate at which a Maintenance window is expected to recur. The rate can be expressed as daily, weekly, or monthly schedules. Daily schedule are formatted as recurEvery: [Frequency as integer]['Day(s)']. If no frequency is provided, the default frequency is 1. Daily schedule examples are recurEvery: Day, recurEvery: 3Days.  Weekly schedule are formatted as recurEvery: [Frequency as integer]['Week(s)'] [Optional comma separated list of weekdays Monday-Sunday]. Weekly schedule examples are recurEvery: 3Weeks, recurEvery: Week Saturday,Sunday. Monthly schedules are formatted as [Frequency as integer]['Month(s)'] [Comma separated list of month days] or [Frequency as integer]['Month(s)'] [Week of Month (First, Second, Third, Fourth, Last)] [Weekday Monday-Sunday] [Optional Offset(No. of days)]. Offset value must be between -6 to 6 inclusive. Monthly schedule examples are recurEvery: Month, recurEvery: 2Months, recurEvery: Month day23,day24, recurEvery: Month Last Sunday, recurEvery: Month Fourth Monday, recurEvery: Month Last Sunday Offset-3, recurEvery: Month Third Sunday Offset6.",
                          "type": "string"
                        }
                      }
                    },
                    "visibility": {
                      "description": "Gets or sets the visibility of the configuration. The default value is 'Custom'",
                      "enum": [
                        "Custom",
                        "Public"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "Visibility",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Custom",
                            "description": "Only visible to users with permissions."
                          },
                          {
                            "value": "Public",
                            "description": "Visible to all users."
                          }
                        ]
                      }
                    },
                    "installPatches": {
                      "description": "The input parameters to be passed to the patch run operation.",
                      "type": "object",
                      "properties": {
                        "rebootSetting": {
                          "type": "string",
                          "enum": [
                            "IfRequired",
                            "Never",
                            "Always"
                          ],
                          "x-ms-enum": {
                            "name": "RebootOptions",
                            "modelAsString": true
                          },
                          "default": "IfRequired",
                          "description": "Possible reboot preference as defined by the user based on which it would be decided to reboot the machine or not after the patch operation is completed."
                        },
                        "windowsParameters": {
                          "description": "Input parameters specific to patching a Windows machine. For Linux machines, do not pass this property.",
                          "type": "object",
                          "properties": {
                            "kbNumbersToExclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Windows KBID to be excluded for patching."
                            },
                            "kbNumbersToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Windows KBID to be included for patching."
                            },
                            "classificationsToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', 'UpdateRollup', 'FeaturePack', 'ServicePack', 'Definition', 'Tools', and 'Updates'."
                            },
                            "excludeKbsRequiringReboot": {
                              "type": "boolean",
                              "description": "Exclude patches which need reboot"
                            }
                          }
                        },
                        "linuxParameters": {
                          "description": "Input parameters specific to patching Linux machine. For Windows machines, do not pass this property.",
                          "type": "object",
                          "properties": {
                            "packageNameMasksToExclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Package names to be excluded for patching."
                            },
                            "packageNameMasksToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Package names to be included for patching."
                            },
                            "classificationsToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', and 'Other'."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "MaintenanceConfigurations"
        ],
        "summary": "Patch configuration record",
        "operationId": "MaintenanceConfigurations_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource Group Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Maintenance Configuration Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "configuration",
            "in": "body",
            "description": "The configuration",
            "required": true,
            "schema": {
              "description": "Maintenance configuration record type",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets location of the resource",
                  "type": "string"
                },
                "tags": {
                  "description": "Gets or sets tags of the resource",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Gets or sets properties of the resource",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "namespace": {
                      "description": "Gets or sets namespace of the resource",
                      "type": "string"
                    },
                    "extensionProperties": {
                      "description": "Gets or sets extensionProperties of the maintenanceConfiguration",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "maintenanceScope": {
                      "description": "Gets or sets maintenanceScope of the configuration",
                      "enum": [
                        "Host",
                        "Resource",
                        "OSImage",
                        "Extension",
                        "InGuestPatch",
                        "SQLDB",
                        "SQLManagedInstance"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "MaintenanceScope",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Host",
                            "description": "This maintenance scope controls installation of azure platform updates i.e. services on physical nodes hosting customer VMs."
                          },
                          {
                            "value": "Resource",
                            "description": "This maintenance scope controls the default update maintenance of the Azure Resource"
                          },
                          {
                            "value": "OSImage",
                            "description": "This maintenance scope controls os image installation on VM/VMSS"
                          },
                          {
                            "value": "Extension",
                            "description": "This maintenance scope controls extension installation on VM/VMSS"
                          },
                          {
                            "value": "InGuestPatch",
                            "description": "This maintenance scope controls installation of windows and linux packages on VM/VMSS"
                          },
                          {
                            "value": "SQLDB",
                            "description": "This maintenance scope controls installation of SQL server platform updates."
                          },
                          {
                            "value": "SQLManagedInstance",
                            "description": "This maintenance scope controls installation of SQL managed instance platform update."
                          }
                        ]
                      }
                    },
                    "maintenanceWindow": {
                      "description": "Definition of a MaintenanceWindow",
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "properties": {
                        "startDateTime": {
                          "description": "Effective start date of the maintenance window in YYYY-MM-DD hh:mm format. The start date can be set to either the current date or future date. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone.",
                          "type": "string"
                        },
                        "expirationDateTime": {
                          "description": "Effective expiration date of the maintenance window in YYYY-MM-DD hh:mm format. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone. Expiration date must be set to a future date. If not provided, it will be set to the maximum datetime 9999-12-31 23:59:59.",
                          "type": "string"
                        },
                        "duration": {
                          "description": "Duration of the maintenance window in HH:mm format. If not provided, default value will be used based on maintenance scope provided. Example: 05:00.",
                          "type": "string"
                        },
                        "timeZone": {
                          "description": "Name of the timezone. List of timezones can be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell. Example: Pacific Standard Time, UTC, W. Europe Standard Time, Korea Standard Time, Cen. Australia Standard Time.",
                          "type": "string"
                        },
                        "recurEvery": {
                          "description": "Rate at which a Maintenance window is expected to recur. The rate can be expressed as daily, weekly, or monthly schedules. Daily schedule are formatted as recurEvery: [Frequency as integer]['Day(s)']. If no frequency is provided, the default frequency is 1. Daily schedule examples are recurEvery: Day, recurEvery: 3Days.  Weekly schedule are formatted as recurEvery: [Frequency as integer]['Week(s)'] [Optional comma separated list of weekdays Monday-Sunday]. Weekly schedule examples are recurEvery: 3Weeks, recurEvery: Week Saturday,Sunday. Monthly schedules are formatted as [Frequency as integer]['Month(s)'] [Comma separated list of month days] or [Frequency as integer]['Month(s)'] [Week of Month (First, Second, Third, Fourth, Last)] [Weekday Monday-Sunday] [Optional Offset(No. of days)]. Offset value must be between -6 to 6 inclusive. Monthly schedule examples are recurEvery: Month, recurEvery: 2Months, recurEvery: Month day23,day24, recurEvery: Month Last Sunday, recurEvery: Month Fourth Monday, recurEvery: Month Last Sunday Offset-3, recurEvery: Month Third Sunday Offset6.",
                          "type": "string"
                        }
                      }
                    },
                    "visibility": {
                      "description": "Gets or sets the visibility of the configuration. The default value is 'Custom'",
                      "enum": [
                        "Custom",
                        "Public"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "Visibility",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Custom",
                            "description": "Only visible to users with permissions."
                          },
                          {
                            "value": "Public",
                            "description": "Visible to all users."
                          }
                        ]
                      }
                    },
                    "installPatches": {
                      "description": "The input parameters to be passed to the patch run operation.",
                      "type": "object",
                      "properties": {
                        "rebootSetting": {
                          "type": "string",
                          "enum": [
                            "IfRequired",
                            "Never",
                            "Always"
                          ],
                          "x-ms-enum": {
                            "name": "RebootOptions",
                            "modelAsString": true
                          },
                          "default": "IfRequired",
                          "description": "Possible reboot preference as defined by the user based on which it would be decided to reboot the machine or not after the patch operation is completed."
                        },
                        "windowsParameters": {
                          "description": "Input parameters specific to patching a Windows machine. For Linux machines, do not pass this property.",
                          "type": "object",
                          "properties": {
                            "kbNumbersToExclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Windows KBID to be excluded for patching."
                            },
                            "kbNumbersToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Windows KBID to be included for patching."
                            },
                            "classificationsToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', 'UpdateRollup', 'FeaturePack', 'ServicePack', 'Definition', 'Tools', and 'Updates'."
                            },
                            "excludeKbsRequiringReboot": {
                              "type": "boolean",
                              "description": "Exclude patches which need reboot"
                            }
                          }
                        },
                        "linuxParameters": {
                          "description": "Input parameters specific to patching Linux machine. For Windows machines, do not pass this property.",
                          "type": "object",
                          "properties": {
                            "packageNameMasksToExclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Package names to be excluded for patching."
                            },
                            "packageNameMasksToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Package names to be included for patching."
                            },
                            "classificationsToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', and 'Other'."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Maintenance configuration record type",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets location of the resource",
                  "type": "string"
                },
                "tags": {
                  "description": "Gets or sets tags of the resource",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Gets or sets properties of the resource",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "namespace": {
                      "description": "Gets or sets namespace of the resource",
                      "type": "string"
                    },
                    "extensionProperties": {
                      "description": "Gets or sets extensionProperties of the maintenanceConfiguration",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "maintenanceScope": {
                      "description": "Gets or sets maintenanceScope of the configuration",
                      "enum": [
                        "Host",
                        "Resource",
                        "OSImage",
                        "Extension",
                        "InGuestPatch",
                        "SQLDB",
                        "SQLManagedInstance"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "MaintenanceScope",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Host",
                            "description": "This maintenance scope controls installation of azure platform updates i.e. services on physical nodes hosting customer VMs."
                          },
                          {
                            "value": "Resource",
                            "description": "This maintenance scope controls the default update maintenance of the Azure Resource"
                          },
                          {
                            "value": "OSImage",
                            "description": "This maintenance scope controls os image installation on VM/VMSS"
                          },
                          {
                            "value": "Extension",
                            "description": "This maintenance scope controls extension installation on VM/VMSS"
                          },
                          {
                            "value": "InGuestPatch",
                            "description": "This maintenance scope controls installation of windows and linux packages on VM/VMSS"
                          },
                          {
                            "value": "SQLDB",
                            "description": "This maintenance scope controls installation of SQL server platform updates."
                          },
                          {
                            "value": "SQLManagedInstance",
                            "description": "This maintenance scope controls installation of SQL managed instance platform update."
                          }
                        ]
                      }
                    },
                    "maintenanceWindow": {
                      "description": "Definition of a MaintenanceWindow",
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "properties": {
                        "startDateTime": {
                          "description": "Effective start date of the maintenance window in YYYY-MM-DD hh:mm format. The start date can be set to either the current date or future date. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone.",
                          "type": "string"
                        },
                        "expirationDateTime": {
                          "description": "Effective expiration date of the maintenance window in YYYY-MM-DD hh:mm format. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone. Expiration date must be set to a future date. If not provided, it will be set to the maximum datetime 9999-12-31 23:59:59.",
                          "type": "string"
                        },
                        "duration": {
                          "description": "Duration of the maintenance window in HH:mm format. If not provided, default value will be used based on maintenance scope provided. Example: 05:00.",
                          "type": "string"
                        },
                        "timeZone": {
                          "description": "Name of the timezone. List of timezones can be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell. Example: Pacific Standard Time, UTC, W. Europe Standard Time, Korea Standard Time, Cen. Australia Standard Time.",
                          "type": "string"
                        },
                        "recurEvery": {
                          "description": "Rate at which a Maintenance window is expected to recur. The rate can be expressed as daily, weekly, or monthly schedules. Daily schedule are formatted as recurEvery: [Frequency as integer]['Day(s)']. If no frequency is provided, the default frequency is 1. Daily schedule examples are recurEvery: Day, recurEvery: 3Days.  Weekly schedule are formatted as recurEvery: [Frequency as integer]['Week(s)'] [Optional comma separated list of weekdays Monday-Sunday]. Weekly schedule examples are recurEvery: 3Weeks, recurEvery: Week Saturday,Sunday. Monthly schedules are formatted as [Frequency as integer]['Month(s)'] [Comma separated list of month days] or [Frequency as integer]['Month(s)'] [Week of Month (First, Second, Third, Fourth, Last)] [Weekday Monday-Sunday] [Optional Offset(No. of days)]. Offset value must be between -6 to 6 inclusive. Monthly schedule examples are recurEvery: Month, recurEvery: 2Months, recurEvery: Month day23,day24, recurEvery: Month Last Sunday, recurEvery: Month Fourth Monday, recurEvery: Month Last Sunday Offset-3, recurEvery: Month Third Sunday Offset6.",
                          "type": "string"
                        }
                      }
                    },
                    "visibility": {
                      "description": "Gets or sets the visibility of the configuration. The default value is 'Custom'",
                      "enum": [
                        "Custom",
                        "Public"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "Visibility",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Custom",
                            "description": "Only visible to users with permissions."
                          },
                          {
                            "value": "Public",
                            "description": "Visible to all users."
                          }
                        ]
                      }
                    },
                    "installPatches": {
                      "description": "The input parameters to be passed to the patch run operation.",
                      "type": "object",
                      "properties": {
                        "rebootSetting": {
                          "type": "string",
                          "enum": [
                            "IfRequired",
                            "Never",
                            "Always"
                          ],
                          "x-ms-enum": {
                            "name": "RebootOptions",
                            "modelAsString": true
                          },
                          "default": "IfRequired",
                          "description": "Possible reboot preference as defined by the user based on which it would be decided to reboot the machine or not after the patch operation is completed."
                        },
                        "windowsParameters": {
                          "description": "Input parameters specific to patching a Windows machine. For Linux machines, do not pass this property.",
                          "type": "object",
                          "properties": {
                            "kbNumbersToExclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Windows KBID to be excluded for patching."
                            },
                            "kbNumbersToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Windows KBID to be included for patching."
                            },
                            "classificationsToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', 'UpdateRollup', 'FeaturePack', 'ServicePack', 'Definition', 'Tools', and 'Updates'."
                            },
                            "excludeKbsRequiringReboot": {
                              "type": "boolean",
                              "description": "Exclude patches which need reboot"
                            }
                          }
                        },
                        "linuxParameters": {
                          "description": "Input parameters specific to patching Linux machine. For Windows machines, do not pass this property.",
                          "type": "object",
                          "properties": {
                            "packageNameMasksToExclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Package names to be excluded for patching."
                            },
                            "packageNameMasksToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Package names to be included for patching."
                            },
                            "classificationsToInclude": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', and 'Other'."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Maintenance/maintenanceConfigurations": {
      "get": {
        "tags": [
          "MaintenanceConfigurations"
        ],
        "summary": "Get Configuration records within a subscription",
        "operationId": "MaintenanceConfigurations_List",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Response for MaintenanceConfigurations list",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The list of maintenance Configurations",
                  "type": "array",
                  "items": {
                    "description": "Maintenance configuration record type",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "readOnly": true,
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "location": {
                        "description": "Gets or sets location of the resource",
                        "type": "string"
                      },
                      "tags": {
                        "description": "Gets or sets tags of the resource",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "Gets or sets properties of the resource",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "namespace": {
                            "description": "Gets or sets namespace of the resource",
                            "type": "string"
                          },
                          "extensionProperties": {
                            "description": "Gets or sets extensionProperties of the maintenanceConfiguration",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "maintenanceScope": {
                            "description": "Gets or sets maintenanceScope of the configuration",
                            "enum": [
                              "Host",
                              "Resource",
                              "OSImage",
                              "Extension",
                              "InGuestPatch",
                              "SQLDB",
                              "SQLManagedInstance"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "MaintenanceScope",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Host",
                                  "description": "This maintenance scope controls installation of azure platform updates i.e. services on physical nodes hosting customer VMs."
                                },
                                {
                                  "value": "Resource",
                                  "description": "This maintenance scope controls the default update maintenance of the Azure Resource"
                                },
                                {
                                  "value": "OSImage",
                                  "description": "This maintenance scope controls os image installation on VM/VMSS"
                                },
                                {
                                  "value": "Extension",
                                  "description": "This maintenance scope controls extension installation on VM/VMSS"
                                },
                                {
                                  "value": "InGuestPatch",
                                  "description": "This maintenance scope controls installation of windows and linux packages on VM/VMSS"
                                },
                                {
                                  "value": "SQLDB",
                                  "description": "This maintenance scope controls installation of SQL server platform updates."
                                },
                                {
                                  "value": "SQLManagedInstance",
                                  "description": "This maintenance scope controls installation of SQL managed instance platform update."
                                }
                              ]
                            }
                          },
                          "maintenanceWindow": {
                            "description": "Definition of a MaintenanceWindow",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "startDateTime": {
                                "description": "Effective start date of the maintenance window in YYYY-MM-DD hh:mm format. The start date can be set to either the current date or future date. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone.",
                                "type": "string"
                              },
                              "expirationDateTime": {
                                "description": "Effective expiration date of the maintenance window in YYYY-MM-DD hh:mm format. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone. Expiration date must be set to a future date. If not provided, it will be set to the maximum datetime 9999-12-31 23:59:59.",
                                "type": "string"
                              },
                              "duration": {
                                "description": "Duration of the maintenance window in HH:mm format. If not provided, default value will be used based on maintenance scope provided. Example: 05:00.",
                                "type": "string"
                              },
                              "timeZone": {
                                "description": "Name of the timezone. List of timezones can be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell. Example: Pacific Standard Time, UTC, W. Europe Standard Time, Korea Standard Time, Cen. Australia Standard Time.",
                                "type": "string"
                              },
                              "recurEvery": {
                                "description": "Rate at which a Maintenance window is expected to recur. The rate can be expressed as daily, weekly, or monthly schedules. Daily schedule are formatted as recurEvery: [Frequency as integer]['Day(s)']. If no frequency is provided, the default frequency is 1. Daily schedule examples are recurEvery: Day, recurEvery: 3Days.  Weekly schedule are formatted as recurEvery: [Frequency as integer]['Week(s)'] [Optional comma separated list of weekdays Monday-Sunday]. Weekly schedule examples are recurEvery: 3Weeks, recurEvery: Week Saturday,Sunday. Monthly schedules are formatted as [Frequency as integer]['Month(s)'] [Comma separated list of month days] or [Frequency as integer]['Month(s)'] [Week of Month (First, Second, Third, Fourth, Last)] [Weekday Monday-Sunday] [Optional Offset(No. of days)]. Offset value must be between -6 to 6 inclusive. Monthly schedule examples are recurEvery: Month, recurEvery: 2Months, recurEvery: Month day23,day24, recurEvery: Month Last Sunday, recurEvery: Month Fourth Monday, recurEvery: Month Last Sunday Offset-3, recurEvery: Month Third Sunday Offset6.",
                                "type": "string"
                              }
                            }
                          },
                          "visibility": {
                            "description": "Gets or sets the visibility of the configuration. The default value is 'Custom'",
                            "enum": [
                              "Custom",
                              "Public"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "Visibility",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Custom",
                                  "description": "Only visible to users with permissions."
                                },
                                {
                                  "value": "Public",
                                  "description": "Visible to all users."
                                }
                              ]
                            }
                          },
                          "installPatches": {
                            "description": "The input parameters to be passed to the patch run operation.",
                            "type": "object",
                            "properties": {
                              "rebootSetting": {
                                "type": "string",
                                "enum": [
                                  "IfRequired",
                                  "Never",
                                  "Always"
                                ],
                                "x-ms-enum": {
                                  "name": "RebootOptions",
                                  "modelAsString": true
                                },
                                "default": "IfRequired",
                                "description": "Possible reboot preference as defined by the user based on which it would be decided to reboot the machine or not after the patch operation is completed."
                              },
                              "windowsParameters": {
                                "description": "Input parameters specific to patching a Windows machine. For Linux machines, do not pass this property.",
                                "type": "object",
                                "properties": {
                                  "kbNumbersToExclude": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Windows KBID to be excluded for patching."
                                  },
                                  "kbNumbersToInclude": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Windows KBID to be included for patching."
                                  },
                                  "classificationsToInclude": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', 'UpdateRollup', 'FeaturePack', 'ServicePack', 'Definition', 'Tools', and 'Updates'."
                                  },
                                  "excludeKbsRequiringReboot": {
                                    "type": "boolean",
                                    "description": "Exclude patches which need reboot"
                                  }
                                }
                              },
                              "linuxParameters": {
                                "description": "Input parameters specific to patching Linux machine. For Windows machines, do not pass this property.",
                                "type": "object",
                                "properties": {
                                  "packageNameMasksToExclude": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Package names to be excluded for patching."
                                  },
                                  "packageNameMasksToInclude": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Package names to be included for patching."
                                  },
                                  "classificationsToInclude": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', and 'Other'."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Maintenance/maintenanceConfigurations": {
      "get": {
        "tags": [
          "MaintenanceConfigurations"
        ],
        "summary": "Get Configuration records within a subscription and resource group",
        "operationId": "MaintenanceConfigurationsForResourceGroup_List",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource Group Name",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Response for MaintenanceConfigurations list",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The list of maintenance Configurations",
                  "type": "array",
                  "items": {
                    "description": "Maintenance configuration record type",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "readOnly": true,
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "location": {
                        "description": "Gets or sets location of the resource",
                        "type": "string"
                      },
                      "tags": {
                        "description": "Gets or sets tags of the resource",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "Gets or sets properties of the resource",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "namespace": {
                            "description": "Gets or sets namespace of the resource",
                            "type": "string"
                          },
                          "extensionProperties": {
                            "description": "Gets or sets extensionProperties of the maintenanceConfiguration",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "maintenanceScope": {
                            "description": "Gets or sets maintenanceScope of the configuration",
                            "enum": [
                              "Host",
                              "Resource",
                              "OSImage",
                              "Extension",
                              "InGuestPatch",
                              "SQLDB",
                              "SQLManagedInstance"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "MaintenanceScope",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Host",
                                  "description": "This maintenance scope controls installation of azure platform updates i.e. services on physical nodes hosting customer VMs."
                                },
                                {
                                  "value": "Resource",
                                  "description": "This maintenance scope controls the default update maintenance of the Azure Resource"
                                },
                                {
                                  "value": "OSImage",
                                  "description": "This maintenance scope controls os image installation on VM/VMSS"
                                },
                                {
                                  "value": "Extension",
                                  "description": "This maintenance scope controls extension installation on VM/VMSS"
                                },
                                {
                                  "value": "InGuestPatch",
                                  "description": "This maintenance scope controls installation of windows and linux packages on VM/VMSS"
                                },
                                {
                                  "value": "SQLDB",
                                  "description": "This maintenance scope controls installation of SQL server platform updates."
                                },
                                {
                                  "value": "SQLManagedInstance",
                                  "description": "This maintenance scope controls installation of SQL managed instance platform update."
                                }
                              ]
                            }
                          },
                          "maintenanceWindow": {
                            "description": "Definition of a MaintenanceWindow",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "startDateTime": {
                                "description": "Effective start date of the maintenance window in YYYY-MM-DD hh:mm format. The start date can be set to either the current date or future date. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone.",
                                "type": "string"
                              },
                              "expirationDateTime": {
                                "description": "Effective expiration date of the maintenance window in YYYY-MM-DD hh:mm format. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone. Expiration date must be set to a future date. If not provided, it will be set to the maximum datetime 9999-12-31 23:59:59.",
                                "type": "string"
                              },
                              "duration": {
                                "description": "Duration of the maintenance window in HH:mm format. If not provided, default value will be used based on maintenance scope provided. Example: 05:00.",
                                "type": "string"
                              },
                              "timeZone": {
                                "description": "Name of the timezone. List of timezones can be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell. Example: Pacific Standard Time, UTC, W. Europe Standard Time, Korea Standard Time, Cen. Australia Standard Time.",
                                "type": "string"
                              },
                              "recurEvery": {
                                "description": "Rate at which a Maintenance window is expected to recur. The rate can be expressed as daily, weekly, or monthly schedules. Daily schedule are formatted as recurEvery: [Frequency as integer]['Day(s)']. If no frequency is provided, the default frequency is 1. Daily schedule examples are recurEvery: Day, recurEvery: 3Days.  Weekly schedule are formatted as recurEvery: [Frequency as integer]['Week(s)'] [Optional comma separated list of weekdays Monday-Sunday]. Weekly schedule examples are recurEvery: 3Weeks, recurEvery: Week Saturday,Sunday. Monthly schedules are formatted as [Frequency as integer]['Month(s)'] [Comma separated list of month days] or [Frequency as integer]['Month(s)'] [Week of Month (First, Second, Third, Fourth, Last)] [Weekday Monday-Sunday] [Optional Offset(No. of days)]. Offset value must be between -6 to 6 inclusive. Monthly schedule examples are recurEvery: Month, recurEvery: 2Months, recurEvery: Month day23,day24, recurEvery: Month Last Sunday, recurEvery: Month Fourth Monday, recurEvery: Month Last Sunday Offset-3, recurEvery: Month Third Sunday Offset6.",
                                "type": "string"
                              }
                            }
                          },
                          "visibility": {
                            "description": "Gets or sets the visibility of the configuration. The default value is 'Custom'",
                            "enum": [
                              "Custom",
                              "Public"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "Visibility",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Custom",
                                  "description": "Only visible to users with permissions."
                                },
                                {
                                  "value": "Public",
                                  "description": "Visible to all users."
                                }
                              ]
                            }
                          },
                          "installPatches": {
                            "description": "The input parameters to be passed to the patch run operation.",
                            "type": "object",
                            "properties": {
                              "rebootSetting": {
                                "type": "string",
                                "enum": [
                                  "IfRequired",
                                  "Never",
                                  "Always"
                                ],
                                "x-ms-enum": {
                                  "name": "RebootOptions",
                                  "modelAsString": true
                                },
                                "default": "IfRequired",
                                "description": "Possible reboot preference as defined by the user based on which it would be decided to reboot the machine or not after the patch operation is completed."
                              },
                              "windowsParameters": {
                                "description": "Input parameters specific to patching a Windows machine. For Linux machines, do not pass this property.",
                                "type": "object",
                                "properties": {
                                  "kbNumbersToExclude": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Windows KBID to be excluded for patching."
                                  },
                                  "kbNumbersToInclude": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Windows KBID to be included for patching."
                                  },
                                  "classificationsToInclude": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', 'UpdateRollup', 'FeaturePack', 'ServicePack', 'Definition', 'Tools', and 'Updates'."
                                  },
                                  "excludeKbsRequiringReboot": {
                                    "type": "boolean",
                                    "description": "Exclude patches which need reboot"
                                  }
                                }
                              },
                              "linuxParameters": {
                                "description": "Input parameters specific to patching Linux machine. For Windows machines, do not pass this property.",
                                "type": "object",
                                "properties": {
                                  "packageNameMasksToExclude": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Package names to be excluded for patching."
                                  },
                                  "packageNameMasksToInclude": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Package names to be included for patching."
                                  },
                                  "classificationsToInclude": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', and 'Other'."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Maintenance/configurationAssignments": {
      "get": {
        "tags": [
          "ConfigurationAssignments"
        ],
        "summary": "[UNSUPPORTED] Get configuration assignment within a subscription. This API is not implemented yet.",
        "operationId": "ConfigurationAssignmentsWithinSubscription_List",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Response for ConfigurationAssignments list",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The list of configuration Assignments",
                  "type": "array",
                  "items": {
                    "description": "Configuration Assignment",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Fully qualified identifier of the resource",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Name of the resource",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Type of the resource",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "readOnly": true,
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "location": {
                        "description": "Location of the resource",
                        "type": "string"
                      },
                      "properties": {
                        "description": "Properties of the configuration assignment",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "maintenanceConfigurationId": {
                            "description": "The maintenance configuration Id",
                            "type": "string"
                          },
                          "resourceId": {
                            "description": "The unique resourceId",
                            "type": "string"
                          },
                          "filter": {
                            "description": "Properties of the configuration assignment",
                            "type": "object",
                            "properties": {
                              "resourceTypes": {
                                "type": "array",
                                "description": "List of allowed resources.",
                                "items": {
                                  "type": "string",
                                  "description": "List of allowed resources"
                                }
                              },
                              "resourceGroups": {
                                "type": "array",
                                "description": "List of allowed resource groups.",
                                "items": {
                                  "type": "string",
                                  "description": "List of allowed resource groups"
                                }
                              },
                              "osTypes": {
                                "type": "array",
                                "description": "List of allowed operating systems.",
                                "items": {
                                  "type": "string",
                                  "description": "List of allowed operating systems"
                                }
                              },
                              "locations": {
                                "type": "array",
                                "description": "List of locations to scope the query to.",
                                "items": {
                                  "type": "string",
                                  "description": "Location to scope the query to."
                                }
                              },
                              "tagSettings": {
                                "type": "object",
                                "description": "Tag settings for the VM.",
                                "properties": {
                                  "tags": {
                                    "type": "object",
                                    "description": "Dictionary of tags with its list of values.",
                                    "additionalProperties": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "List of tag values for a tag."
                                      }
                                    }
                                  },
                                  "filterOperator": {
                                    "type": "string",
                                    "description": "Filter VMs by Any or All specified tags.",
                                    "enum": [
                                      "All",
                                      "Any"
                                    ],
                                    "x-ms-enum": {
                                      "name": "TagOperators",
                                      "modelAsString": false
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Maintenance/configurationAssignments/{configurationAssignmentName}": {
      "get": {
        "tags": [
          "ConfigurationAssignments"
        ],
        "summary": "[UNSUPPORTED] Get configuration assignment. This API is not implemented yet.",
        "description": "Get configuration assignment for resource.",
        "operationId": "ConfigurationAssignmentsForSubscriptions_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "configurationAssignmentName",
            "in": "path",
            "description": "Configuration assignment name",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Configuration Assignment",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource",
                  "type": "string"
                },
                "properties": {
                  "description": "Properties of the configuration assignment",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "maintenanceConfigurationId": {
                      "description": "The maintenance configuration Id",
                      "type": "string"
                    },
                    "resourceId": {
                      "description": "The unique resourceId",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Properties of the configuration assignment",
                      "type": "object",
                      "properties": {
                        "resourceTypes": {
                          "type": "array",
                          "description": "List of allowed resources.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resources"
                          }
                        },
                        "resourceGroups": {
                          "type": "array",
                          "description": "List of allowed resource groups.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resource groups"
                          }
                        },
                        "osTypes": {
                          "type": "array",
                          "description": "List of allowed operating systems.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed operating systems"
                          }
                        },
                        "locations": {
                          "type": "array",
                          "description": "List of locations to scope the query to.",
                          "items": {
                            "type": "string",
                            "description": "Location to scope the query to."
                          }
                        },
                        "tagSettings": {
                          "type": "object",
                          "description": "Tag settings for the VM.",
                          "properties": {
                            "tags": {
                              "type": "object",
                              "description": "Dictionary of tags with its list of values.",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "List of tag values for a tag."
                                }
                              }
                            },
                            "filterOperator": {
                              "type": "string",
                              "description": "Filter VMs by Any or All specified tags.",
                              "enum": [
                                "All",
                                "Any"
                              ],
                              "x-ms-enum": {
                                "name": "TagOperators",
                                "modelAsString": false
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ConfigurationAssignments"
        ],
        "summary": "Create configuration assignment",
        "description": "Register configuration for resource.",
        "operationId": "ConfigurationAssignmentsForSubscriptions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "configurationAssignmentName",
            "in": "path",
            "description": "Configuration assignment name",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationAssignment",
            "in": "body",
            "description": "The configurationAssignment",
            "required": true,
            "schema": {
              "description": "Configuration Assignment",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource",
                  "type": "string"
                },
                "properties": {
                  "description": "Properties of the configuration assignment",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "maintenanceConfigurationId": {
                      "description": "The maintenance configuration Id",
                      "type": "string"
                    },
                    "resourceId": {
                      "description": "The unique resourceId",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Properties of the configuration assignment",
                      "type": "object",
                      "properties": {
                        "resourceTypes": {
                          "type": "array",
                          "description": "List of allowed resources.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resources"
                          }
                        },
                        "resourceGroups": {
                          "type": "array",
                          "description": "List of allowed resource groups.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resource groups"
                          }
                        },
                        "osTypes": {
                          "type": "array",
                          "description": "List of allowed operating systems.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed operating systems"
                          }
                        },
                        "locations": {
                          "type": "array",
                          "description": "List of locations to scope the query to.",
                          "items": {
                            "type": "string",
                            "description": "Location to scope the query to."
                          }
                        },
                        "tagSettings": {
                          "type": "object",
                          "description": "Tag settings for the VM.",
                          "properties": {
                            "tags": {
                              "type": "object",
                              "description": "Dictionary of tags with its list of values.",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "List of tag values for a tag."
                                }
                              }
                            },
                            "filterOperator": {
                              "type": "string",
                              "description": "Filter VMs by Any or All specified tags.",
                              "enum": [
                                "All",
                                "Any"
                              ],
                              "x-ms-enum": {
                                "name": "TagOperators",
                                "modelAsString": false
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "Configuration assignment update request accepted",
            "schema": {
              "description": "Configuration Assignment",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource",
                  "type": "string"
                },
                "properties": {
                  "description": "Properties of the configuration assignment",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "maintenanceConfigurationId": {
                      "description": "The maintenance configuration Id",
                      "type": "string"
                    },
                    "resourceId": {
                      "description": "The unique resourceId",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Properties of the configuration assignment",
                      "type": "object",
                      "properties": {
                        "resourceTypes": {
                          "type": "array",
                          "description": "List of allowed resources.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resources"
                          }
                        },
                        "resourceGroups": {
                          "type": "array",
                          "description": "List of allowed resource groups.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resource groups"
                          }
                        },
                        "osTypes": {
                          "type": "array",
                          "description": "List of allowed operating systems.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed operating systems"
                          }
                        },
                        "locations": {
                          "type": "array",
                          "description": "List of locations to scope the query to.",
                          "items": {
                            "type": "string",
                            "description": "Location to scope the query to."
                          }
                        },
                        "tagSettings": {
                          "type": "object",
                          "description": "Tag settings for the VM.",
                          "properties": {
                            "tags": {
                              "type": "object",
                              "description": "Dictionary of tags with its list of values.",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "List of tag values for a tag."
                                }
                              }
                            },
                            "filterOperator": {
                              "type": "string",
                              "description": "Filter VMs by Any or All specified tags.",
                              "enum": [
                                "All",
                                "Any"
                              ],
                              "x-ms-enum": {
                                "name": "TagOperators",
                                "modelAsString": false
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Configuration assignment create request accepted",
            "schema": {
              "description": "Configuration Assignment",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource",
                  "type": "string"
                },
                "properties": {
                  "description": "Properties of the configuration assignment",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "maintenanceConfigurationId": {
                      "description": "The maintenance configuration Id",
                      "type": "string"
                    },
                    "resourceId": {
                      "description": "The unique resourceId",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Properties of the configuration assignment",
                      "type": "object",
                      "properties": {
                        "resourceTypes": {
                          "type": "array",
                          "description": "List of allowed resources.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resources"
                          }
                        },
                        "resourceGroups": {
                          "type": "array",
                          "description": "List of allowed resource groups.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resource groups"
                          }
                        },
                        "osTypes": {
                          "type": "array",
                          "description": "List of allowed operating systems.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed operating systems"
                          }
                        },
                        "locations": {
                          "type": "array",
                          "description": "List of locations to scope the query to.",
                          "items": {
                            "type": "string",
                            "description": "Location to scope the query to."
                          }
                        },
                        "tagSettings": {
                          "type": "object",
                          "description": "Tag settings for the VM.",
                          "properties": {
                            "tags": {
                              "type": "object",
                              "description": "Dictionary of tags with its list of values.",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "List of tag values for a tag."
                                }
                              }
                            },
                            "filterOperator": {
                              "type": "string",
                              "description": "Filter VMs by Any or All specified tags.",
                              "enum": [
                                "All",
                                "Any"
                              ],
                              "x-ms-enum": {
                                "name": "TagOperators",
                                "modelAsString": false
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ConfigurationAssignments"
        ],
        "summary": "Create configuration assignment",
        "description": "Register configuration for resource.",
        "operationId": "ConfigurationAssignmentsForSubscriptions_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "configurationAssignmentName",
            "in": "path",
            "description": "Configuration assignment name",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationAssignment",
            "in": "body",
            "description": "The configurationAssignment",
            "required": true,
            "schema": {
              "description": "Configuration Assignment",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource",
                  "type": "string"
                },
                "properties": {
                  "description": "Properties of the configuration assignment",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "maintenanceConfigurationId": {
                      "description": "The maintenance configuration Id",
                      "type": "string"
                    },
                    "resourceId": {
                      "description": "The unique resourceId",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Properties of the configuration assignment",
                      "type": "object",
                      "properties": {
                        "resourceTypes": {
                          "type": "array",
                          "description": "List of allowed resources.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resources"
                          }
                        },
                        "resourceGroups": {
                          "type": "array",
                          "description": "List of allowed resource groups.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resource groups"
                          }
                        },
                        "osTypes": {
                          "type": "array",
                          "description": "List of allowed operating systems.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed operating systems"
                          }
                        },
                        "locations": {
                          "type": "array",
                          "description": "List of locations to scope the query to.",
                          "items": {
                            "type": "string",
                            "description": "Location to scope the query to."
                          }
                        },
                        "tagSettings": {
                          "type": "object",
                          "description": "Tag settings for the VM.",
                          "properties": {
                            "tags": {
                              "type": "object",
                              "description": "Dictionary of tags with its list of values.",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "List of tag values for a tag."
                                }
                              }
                            },
                            "filterOperator": {
                              "type": "string",
                              "description": "Filter VMs by Any or All specified tags.",
                              "enum": [
                                "All",
                                "Any"
                              ],
                              "x-ms-enum": {
                                "name": "TagOperators",
                                "modelAsString": false
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Configuration Assignment",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource",
                  "type": "string"
                },
                "properties": {
                  "description": "Properties of the configuration assignment",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "maintenanceConfigurationId": {
                      "description": "The maintenance configuration Id",
                      "type": "string"
                    },
                    "resourceId": {
                      "description": "The unique resourceId",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Properties of the configuration assignment",
                      "type": "object",
                      "properties": {
                        "resourceTypes": {
                          "type": "array",
                          "description": "List of allowed resources.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resources"
                          }
                        },
                        "resourceGroups": {
                          "type": "array",
                          "description": "List of allowed resource groups.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resource groups"
                          }
                        },
                        "osTypes": {
                          "type": "array",
                          "description": "List of allowed operating systems.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed operating systems"
                          }
                        },
                        "locations": {
                          "type": "array",
                          "description": "List of locations to scope the query to.",
                          "items": {
                            "type": "string",
                            "description": "Location to scope the query to."
                          }
                        },
                        "tagSettings": {
                          "type": "object",
                          "description": "Tag settings for the VM.",
                          "properties": {
                            "tags": {
                              "type": "object",
                              "description": "Dictionary of tags with its list of values.",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "List of tag values for a tag."
                                }
                              }
                            },
                            "filterOperator": {
                              "type": "string",
                              "description": "Filter VMs by Any or All specified tags.",
                              "enum": [
                                "All",
                                "Any"
                              ],
                              "x-ms-enum": {
                                "name": "TagOperators",
                                "modelAsString": false
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ConfigurationAssignments"
        ],
        "summary": "Unregister configuration for resource",
        "description": "Unregister configuration for resource.",
        "operationId": "ConfigurationAssignmentsForSubscriptions_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "configurationAssignmentName",
            "in": "path",
            "description": "Unique configuration assignment name",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Configuration Assignment",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource",
                  "type": "string"
                },
                "properties": {
                  "description": "Properties of the configuration assignment",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "maintenanceConfigurationId": {
                      "description": "The maintenance configuration Id",
                      "type": "string"
                    },
                    "resourceId": {
                      "description": "The unique resourceId",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Properties of the configuration assignment",
                      "type": "object",
                      "properties": {
                        "resourceTypes": {
                          "type": "array",
                          "description": "List of allowed resources.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resources"
                          }
                        },
                        "resourceGroups": {
                          "type": "array",
                          "description": "List of allowed resource groups.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resource groups"
                          }
                        },
                        "osTypes": {
                          "type": "array",
                          "description": "List of allowed operating systems.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed operating systems"
                          }
                        },
                        "locations": {
                          "type": "array",
                          "description": "List of locations to scope the query to.",
                          "items": {
                            "type": "string",
                            "description": "Location to scope the query to."
                          }
                        },
                        "tagSettings": {
                          "type": "object",
                          "description": "Tag settings for the VM.",
                          "properties": {
                            "tags": {
                              "type": "object",
                              "description": "Dictionary of tags with its list of values.",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "List of tag values for a tag."
                                }
                              }
                            },
                            "filterOperator": {
                              "type": "string",
                              "description": "Filter VMs by Any or All specified tags.",
                              "enum": [
                                "All",
                                "Any"
                              ],
                              "x-ms-enum": {
                                "name": "TagOperators",
                                "modelAsString": false
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Maintenance/configurationAssignments/{configurationAssignmentName}": {
      "get": {
        "tags": [
          "ConfigurationAssignments"
        ],
        "summary": "Get configuration assignment",
        "description": "Get configuration assignment for resource..",
        "operationId": "ConfigurationAssignmentsForResourceGroup_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationAssignmentName",
            "in": "path",
            "description": "Configuration assignment name",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Configuration Assignment",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource",
                  "type": "string"
                },
                "properties": {
                  "description": "Properties of the configuration assignment",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "maintenanceConfigurationId": {
                      "description": "The maintenance configuration Id",
                      "type": "string"
                    },
                    "resourceId": {
                      "description": "The unique resourceId",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Properties of the configuration assignment",
                      "type": "object",
                      "properties": {
                        "resourceTypes": {
                          "type": "array",
                          "description": "List of allowed resources.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resources"
                          }
                        },
                        "resourceGroups": {
                          "type": "array",
                          "description": "List of allowed resource groups.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resource groups"
                          }
                        },
                        "osTypes": {
                          "type": "array",
                          "description": "List of allowed operating systems.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed operating systems"
                          }
                        },
                        "locations": {
                          "type": "array",
                          "description": "List of locations to scope the query to.",
                          "items": {
                            "type": "string",
                            "description": "Location to scope the query to."
                          }
                        },
                        "tagSettings": {
                          "type": "object",
                          "description": "Tag settings for the VM.",
                          "properties": {
                            "tags": {
                              "type": "object",
                              "description": "Dictionary of tags with its list of values.",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "List of tag values for a tag."
                                }
                              }
                            },
                            "filterOperator": {
                              "type": "string",
                              "description": "Filter VMs by Any or All specified tags.",
                              "enum": [
                                "All",
                                "Any"
                              ],
                              "x-ms-enum": {
                                "name": "TagOperators",
                                "modelAsString": false
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ConfigurationAssignments"
        ],
        "summary": "Create configuration assignment",
        "description": "Register configuration for resource.",
        "operationId": "ConfigurationAssignmentsForResourceGroup_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationAssignmentName",
            "in": "path",
            "description": "Configuration assignment name",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationAssignment",
            "in": "body",
            "description": "The configurationAssignment",
            "required": true,
            "schema": {
              "description": "Configuration Assignment",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource",
                  "type": "string"
                },
                "properties": {
                  "description": "Properties of the configuration assignment",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "maintenanceConfigurationId": {
                      "description": "The maintenance configuration Id",
                      "type": "string"
                    },
                    "resourceId": {
                      "description": "The unique resourceId",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Properties of the configuration assignment",
                      "type": "object",
                      "properties": {
                        "resourceTypes": {
                          "type": "array",
                          "description": "List of allowed resources.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resources"
                          }
                        },
                        "resourceGroups": {
                          "type": "array",
                          "description": "List of allowed resource groups.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resource groups"
                          }
                        },
                        "osTypes": {
                          "type": "array",
                          "description": "List of allowed operating systems.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed operating systems"
                          }
                        },
                        "locations": {
                          "type": "array",
                          "description": "List of locations to scope the query to.",
                          "items": {
                            "type": "string",
                            "description": "Location to scope the query to."
                          }
                        },
                        "tagSettings": {
                          "type": "object",
                          "description": "Tag settings for the VM.",
                          "properties": {
                            "tags": {
                              "type": "object",
                              "description": "Dictionary of tags with its list of values.",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "List of tag values for a tag."
                                }
                              }
                            },
                            "filterOperator": {
                              "type": "string",
                              "description": "Filter VMs by Any or All specified tags.",
                              "enum": [
                                "All",
                                "Any"
                              ],
                              "x-ms-enum": {
                                "name": "TagOperators",
                                "modelAsString": false
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "Configuration assignment update request accepted",
            "schema": {
              "description": "Configuration Assignment",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource",
                  "type": "string"
                },
                "properties": {
                  "description": "Properties of the configuration assignment",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "maintenanceConfigurationId": {
                      "description": "The maintenance configuration Id",
                      "type": "string"
                    },
                    "resourceId": {
                      "description": "The unique resourceId",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Properties of the configuration assignment",
                      "type": "object",
                      "properties": {
                        "resourceTypes": {
                          "type": "array",
                          "description": "List of allowed resources.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resources"
                          }
                        },
                        "resourceGroups": {
                          "type": "array",
                          "description": "List of allowed resource groups.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resource groups"
                          }
                        },
                        "osTypes": {
                          "type": "array",
                          "description": "List of allowed operating systems.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed operating systems"
                          }
                        },
                        "locations": {
                          "type": "array",
                          "description": "List of locations to scope the query to.",
                          "items": {
                            "type": "string",
                            "description": "Location to scope the query to."
                          }
                        },
                        "tagSettings": {
                          "type": "object",
                          "description": "Tag settings for the VM.",
                          "properties": {
                            "tags": {
                              "type": "object",
                              "description": "Dictionary of tags with its list of values.",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "List of tag values for a tag."
                                }
                              }
                            },
                            "filterOperator": {
                              "type": "string",
                              "description": "Filter VMs by Any or All specified tags.",
                              "enum": [
                                "All",
                                "Any"
                              ],
                              "x-ms-enum": {
                                "name": "TagOperators",
                                "modelAsString": false
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Configuration assignment create request accepted",
            "schema": {
              "description": "Configuration Assignment",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource",
                  "type": "string"
                },
                "properties": {
                  "description": "Properties of the configuration assignment",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "maintenanceConfigurationId": {
                      "description": "The maintenance configuration Id",
                      "type": "string"
                    },
                    "resourceId": {
                      "description": "The unique resourceId",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Properties of the configuration assignment",
                      "type": "object",
                      "properties": {
                        "resourceTypes": {
                          "type": "array",
                          "description": "List of allowed resources.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resources"
                          }
                        },
                        "resourceGroups": {
                          "type": "array",
                          "description": "List of allowed resource groups.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resource groups"
                          }
                        },
                        "osTypes": {
                          "type": "array",
                          "description": "List of allowed operating systems.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed operating systems"
                          }
                        },
                        "locations": {
                          "type": "array",
                          "description": "List of locations to scope the query to.",
                          "items": {
                            "type": "string",
                            "description": "Location to scope the query to."
                          }
                        },
                        "tagSettings": {
                          "type": "object",
                          "description": "Tag settings for the VM.",
                          "properties": {
                            "tags": {
                              "type": "object",
                              "description": "Dictionary of tags with its list of values.",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "List of tag values for a tag."
                                }
                              }
                            },
                            "filterOperator": {
                              "type": "string",
                              "description": "Filter VMs by Any or All specified tags.",
                              "enum": [
                                "All",
                                "Any"
                              ],
                              "x-ms-enum": {
                                "name": "TagOperators",
                                "modelAsString": false
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ConfigurationAssignments"
        ],
        "summary": "Create configuration assignment",
        "description": "Register configuration for resource.",
        "operationId": "ConfigurationAssignmentsForResourceGroup_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationAssignmentName",
            "in": "path",
            "description": "Configuration assignment name",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationAssignment",
            "in": "body",
            "description": "The configurationAssignment",
            "required": true,
            "schema": {
              "description": "Configuration Assignment",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource",
                  "type": "string"
                },
                "properties": {
                  "description": "Properties of the configuration assignment",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "maintenanceConfigurationId": {
                      "description": "The maintenance configuration Id",
                      "type": "string"
                    },
                    "resourceId": {
                      "description": "The unique resourceId",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Properties of the configuration assignment",
                      "type": "object",
                      "properties": {
                        "resourceTypes": {
                          "type": "array",
                          "description": "List of allowed resources.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resources"
                          }
                        },
                        "resourceGroups": {
                          "type": "array",
                          "description": "List of allowed resource groups.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resource groups"
                          }
                        },
                        "osTypes": {
                          "type": "array",
                          "description": "List of allowed operating systems.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed operating systems"
                          }
                        },
                        "locations": {
                          "type": "array",
                          "description": "List of locations to scope the query to.",
                          "items": {
                            "type": "string",
                            "description": "Location to scope the query to."
                          }
                        },
                        "tagSettings": {
                          "type": "object",
                          "description": "Tag settings for the VM.",
                          "properties": {
                            "tags": {
                              "type": "object",
                              "description": "Dictionary of tags with its list of values.",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "List of tag values for a tag."
                                }
                              }
                            },
                            "filterOperator": {
                              "type": "string",
                              "description": "Filter VMs by Any or All specified tags.",
                              "enum": [
                                "All",
                                "Any"
                              ],
                              "x-ms-enum": {
                                "name": "TagOperators",
                                "modelAsString": false
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Configuration Assignment",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource",
                  "type": "string"
                },
                "properties": {
                  "description": "Properties of the configuration assignment",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "maintenanceConfigurationId": {
                      "description": "The maintenance configuration Id",
                      "type": "string"
                    },
                    "resourceId": {
                      "description": "The unique resourceId",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Properties of the configuration assignment",
                      "type": "object",
                      "properties": {
                        "resourceTypes": {
                          "type": "array",
                          "description": "List of allowed resources.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resources"
                          }
                        },
                        "resourceGroups": {
                          "type": "array",
                          "description": "List of allowed resource groups.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resource groups"
                          }
                        },
                        "osTypes": {
                          "type": "array",
                          "description": "List of allowed operating systems.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed operating systems"
                          }
                        },
                        "locations": {
                          "type": "array",
                          "description": "List of locations to scope the query to.",
                          "items": {
                            "type": "string",
                            "description": "Location to scope the query to."
                          }
                        },
                        "tagSettings": {
                          "type": "object",
                          "description": "Tag settings for the VM.",
                          "properties": {
                            "tags": {
                              "type": "object",
                              "description": "Dictionary of tags with its list of values.",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "List of tag values for a tag."
                                }
                              }
                            },
                            "filterOperator": {
                              "type": "string",
                              "description": "Filter VMs by Any or All specified tags.",
                              "enum": [
                                "All",
                                "Any"
                              ],
                              "x-ms-enum": {
                                "name": "TagOperators",
                                "modelAsString": false
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ConfigurationAssignments"
        ],
        "summary": "Unregister configuration for resource",
        "description": "Unregister configuration for resource.",
        "operationId": "ConfigurationAssignmentsForResourceGroup_Delete",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationAssignmentName",
            "in": "path",
            "description": "Unique configuration assignment name",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Configuration Assignment",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Fully qualified identifier of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Name of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Type of the resource",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "description": "Location of the resource",
                  "type": "string"
                },
                "properties": {
                  "description": "Properties of the configuration assignment",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "maintenanceConfigurationId": {
                      "description": "The maintenance configuration Id",
                      "type": "string"
                    },
                    "resourceId": {
                      "description": "The unique resourceId",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Properties of the configuration assignment",
                      "type": "object",
                      "properties": {
                        "resourceTypes": {
                          "type": "array",
                          "description": "List of allowed resources.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resources"
                          }
                        },
                        "resourceGroups": {
                          "type": "array",
                          "description": "List of allowed resource groups.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed resource groups"
                          }
                        },
                        "osTypes": {
                          "type": "array",
                          "description": "List of allowed operating systems.",
                          "items": {
                            "type": "string",
                            "description": "List of allowed operating systems"
                          }
                        },
                        "locations": {
                          "type": "array",
                          "description": "List of locations to scope the query to.",
                          "items": {
                            "type": "string",
                            "description": "Location to scope the query to."
                          }
                        },
                        "tagSettings": {
                          "type": "object",
                          "description": "Tag settings for the VM.",
                          "properties": {
                            "tags": {
                              "type": "object",
                              "description": "Dictionary of tags with its list of values.",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "List of tag values for a tag."
                                }
                              }
                            },
                            "filterOperator": {
                              "type": "string",
                              "description": "Filter VMs by Any or All specified tags.",
                              "enum": [
                                "All",
                                "Any"
                              ],
                              "x-ms-enum": {
                                "name": "TagOperators",
                                "modelAsString": false
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/providers/Microsoft.Maintenance/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "summary": "List available operations",
        "description": "List the available operations supported by the Microsoft.Maintenance resource provider",
        "operationId": "Operations_List",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the List Operations operation",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A collection of operations",
                  "type": "array",
                  "items": {
                    "description": "Represents an operation returned by the GetOperations request",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the operation",
                        "type": "string"
                      },
                      "display": {
                        "description": "Display name of the operation",
                        "type": "object",
                        "properties": {
                          "provider": {
                            "description": "Name of the provider",
                            "type": "string"
                          },
                          "resource": {
                            "description": "Name of the resource type",
                            "type": "string"
                          },
                          "operation": {
                            "description": "Name of the operation",
                            "type": "string"
                          },
                          "description": {
                            "description": "Description of the operation",
                            "type": "string"
                          }
                        }
                      },
                      "origin": {
                        "description": "Origin of the operation",
                        "type": "string"
                      },
                      "properties": {
                        "description": "Properties of the operation",
                        "type": "object",
                        "x-ms-client-flatten": true
                      },
                      "isDataAction": {
                        "description": "Indicates whether the operation is a data action",
                        "type": "boolean"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{providerName}/{resourceParentType}/{resourceParentName}/{resourceType}/{resourceName}/providers/Microsoft.Maintenance/updates": {
      "get": {
        "tags": [
          "Updates"
        ],
        "summary": "Get Updates to resource",
        "description": "Get updates to resources.",
        "operationId": "Updates_ListParent",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerName",
            "in": "path",
            "description": "Resource provider name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceParentType",
            "in": "path",
            "description": "Resource parent type",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceParentName",
            "in": "path",
            "description": "Resource parent identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "Resource type",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Response for Updates list",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The pending updates",
                  "type": "array",
                  "items": {
                    "description": "Maintenance update on a resource",
                    "type": "object",
                    "properties": {
                      "maintenanceScope": {
                        "description": "The impact area",
                        "enum": [
                          "Host",
                          "Resource",
                          "OSImage",
                          "Extension",
                          "InGuestPatch",
                          "SQLDB",
                          "SQLManagedInstance"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "MaintenanceScope",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Host",
                              "description": "This maintenance scope controls installation of azure platform updates i.e. services on physical nodes hosting customer VMs."
                            },
                            {
                              "value": "Resource",
                              "description": "This maintenance scope controls the default update maintenance of the Azure Resource"
                            },
                            {
                              "value": "OSImage",
                              "description": "This maintenance scope controls os image installation on VM/VMSS"
                            },
                            {
                              "value": "Extension",
                              "description": "This maintenance scope controls extension installation on VM/VMSS"
                            },
                            {
                              "value": "InGuestPatch",
                              "description": "This maintenance scope controls installation of windows and linux packages on VM/VMSS"
                            },
                            {
                              "value": "SQLDB",
                              "description": "This maintenance scope controls installation of SQL server platform updates."
                            },
                            {
                              "value": "SQLManagedInstance",
                              "description": "This maintenance scope controls installation of SQL managed instance platform update."
                            }
                          ]
                        }
                      },
                      "impactType": {
                        "description": "The impact type",
                        "enum": [
                          "None",
                          "Freeze",
                          "Restart",
                          "Redeploy"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "ImpactType",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "None",
                              "description": "Pending updates has no impact on resource."
                            },
                            {
                              "value": "Freeze",
                              "description": "Pending updates can freeze network or disk io operation on resource."
                            },
                            {
                              "value": "Restart",
                              "description": "Pending updates can cause resource to restart."
                            },
                            {
                              "value": "Redeploy",
                              "description": "Pending updates can redeploy resource."
                            }
                          ]
                        }
                      },
                      "status": {
                        "description": "The status",
                        "enum": [
                          "Pending",
                          "InProgress",
                          "Completed",
                          "RetryNow",
                          "RetryLater"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "UpdateStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Pending",
                              "description": "There are pending updates to be installed."
                            },
                            {
                              "value": "InProgress",
                              "description": "Updates installation are in progress."
                            },
                            {
                              "value": "Completed",
                              "description": "All updates are successfully applied."
                            },
                            {
                              "value": "RetryNow",
                              "description": "Updates installation failed but are ready to retry again."
                            },
                            {
                              "value": "RetryLater",
                              "description": "Updates installation failed and should be retried later."
                            }
                          ]
                        }
                      },
                      "impactDurationInSec": {
                        "format": "int32",
                        "description": "Duration of impact in seconds",
                        "type": "integer"
                      },
                      "notBefore": {
                        "format": "date-time",
                        "description": "Time when Azure will start force updates if not self-updated by customer before this time",
                        "type": "string"
                      },
                      "properties": {
                        "description": "Properties of the apply update",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "resourceId": {
                            "description": "The resourceId",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{providerName}/{resourceType}/{resourceName}/providers/Microsoft.Maintenance/updates": {
      "get": {
        "tags": [
          "Updates"
        ],
        "summary": "Get Updates to resource",
        "description": "Get updates to resources.",
        "operationId": "Updates_List",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name",
            "required": true,
            "type": "string"
          },
          {
            "name": "providerName",
            "in": "path",
            "description": "Resource provider name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "Resource type",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to be used with the client request.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Response for Updates list",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The pending updates",
                  "type": "array",
                  "items": {
                    "description": "Maintenance update on a resource",
                    "type": "object",
                    "properties": {
                      "maintenanceScope": {
                        "description": "The impact area",
                        "enum": [
                          "Host",
                          "Resource",
                          "OSImage",
                          "Extension",
                          "InGuestPatch",
                          "SQLDB",
                          "SQLManagedInstance"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "MaintenanceScope",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Host",
                              "description": "This maintenance scope controls installation of azure platform updates i.e. services on physical nodes hosting customer VMs."
                            },
                            {
                              "value": "Resource",
                              "description": "This maintenance scope controls the default update maintenance of the Azure Resource"
                            },
                            {
                              "value": "OSImage",
                              "description": "This maintenance scope controls os image installation on VM/VMSS"
                            },
                            {
                              "value": "Extension",
                              "description": "This maintenance scope controls extension installation on VM/VMSS"
                            },
                            {
                              "value": "InGuestPatch",
                              "description": "This maintenance scope controls installation of windows and linux packages on VM/VMSS"
                            },
                            {
                              "value": "SQLDB",
                              "description": "This maintenance scope controls installation of SQL server platform updates."
                            },
                            {
                              "value": "SQLManagedInstance",
                              "description": "This maintenance scope controls installation of SQL managed instance platform update."
                            }
                          ]
                        }
                      },
                      "impactType": {
                        "description": "The impact type",
                        "enum": [
                          "None",
                          "Freeze",
                          "Restart",
                          "Redeploy"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "ImpactType",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "None",
                              "description": "Pending updates has no impact on resource."
                            },
                            {
                              "value": "Freeze",
                              "description": "Pending updates can freeze network or disk io operation on resource."
                            },
                            {
                              "value": "Restart",
                              "description": "Pending updates can cause resource to restart."
                            },
                            {
                              "value": "Redeploy",
                              "description": "Pending updates can redeploy resource."
                            }
                          ]
                        }
                      },
                      "status": {
                        "description": "The status",
                        "enum": [
                          "Pending",
                          "InProgress",
                          "Completed",
                          "RetryNow",
                          "RetryLater"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "UpdateStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Pending",
                              "description": "There are pending updates to be installed."
                            },
                            {
                              "value": "InProgress",
                              "description": "Updates installation are in progress."
                            },
                            {
                              "value": "Completed",
                              "description": "All updates are successfully applied."
                            },
                            {
                              "value": "RetryNow",
                              "description": "Updates installation failed but are ready to retry again."
                            },
                            {
                              "value": "RetryLater",
                              "description": "Updates installation failed and should be retried later."
                            }
                          ]
                        }
                      },
                      "impactDurationInSec": {
                        "format": "int32",
                        "description": "Duration of impact in seconds",
                        "type": "integer"
                      },
                      "notBefore": {
                        "format": "date-time",
                        "description": "Time when Azure will start force updates if not self-updated by customer before this time",
                        "type": "string"
                      },
                      "properties": {
                        "description": "Properties of the apply update",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "resourceId": {
                            "description": "The resourceId",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApplyUpdateProperties": {
      "description": "Properties for apply update",
      "type": "object",
      "properties": {
        "status": {
          "description": "The status",
          "enum": [
            "Pending",
            "InProgress",
            "Completed",
            "RetryNow",
            "RetryLater"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "UpdateStatus",
            "modelAsString": true,
            "values": [
              {
                "value": "Pending",
                "description": "There are pending updates to be installed."
              },
              {
                "value": "InProgress",
                "description": "Updates installation are in progress."
              },
              {
                "value": "Completed",
                "description": "All updates are successfully applied."
              },
              {
                "value": "RetryNow",
                "description": "Updates installation failed but are ready to retry again."
              },
              {
                "value": "RetryLater",
                "description": "Updates installation failed and should be retried later."
              }
            ]
          }
        },
        "resourceId": {
          "description": "The resourceId",
          "type": "string"
        },
        "lastUpdateTime": {
          "format": "date-time",
          "description": "Last Update time",
          "type": "string"
        }
      }
    },
    "Resource": {
      "description": "Definition of a Resource",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "readOnly": true,
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      },
      "x-ms-azure-resource": true
    },
    "ApplyUpdate": {
      "description": "Apply Update request",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "readOnly": true,
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Properties of the apply update",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "status": {
              "description": "The status",
              "enum": [
                "Pending",
                "InProgress",
                "Completed",
                "RetryNow",
                "RetryLater"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "UpdateStatus",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Pending",
                    "description": "There are pending updates to be installed."
                  },
                  {
                    "value": "InProgress",
                    "description": "Updates installation are in progress."
                  },
                  {
                    "value": "Completed",
                    "description": "All updates are successfully applied."
                  },
                  {
                    "value": "RetryNow",
                    "description": "Updates installation failed but are ready to retry again."
                  },
                  {
                    "value": "RetryLater",
                    "description": "Updates installation failed and should be retried later."
                  }
                ]
              }
            },
            "resourceId": {
              "description": "The resourceId",
              "type": "string"
            },
            "lastUpdateTime": {
              "format": "date-time",
              "description": "Last Update time",
              "type": "string"
            }
          }
        }
      }
    },
    "ListApplyUpdate": {
      "description": "Response for ApplyUpdate list",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of apply updates",
          "type": "array",
          "items": {
            "description": "Apply Update request",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified identifier of the resource",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Name of the resource",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Type of the resource",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "readOnly": true,
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Properties of the apply update",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "status": {
                    "description": "The status",
                    "enum": [
                      "Pending",
                      "InProgress",
                      "Completed",
                      "RetryNow",
                      "RetryLater"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "UpdateStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Pending",
                          "description": "There are pending updates to be installed."
                        },
                        {
                          "value": "InProgress",
                          "description": "Updates installation are in progress."
                        },
                        {
                          "value": "Completed",
                          "description": "All updates are successfully applied."
                        },
                        {
                          "value": "RetryNow",
                          "description": "Updates installation failed but are ready to retry again."
                        },
                        {
                          "value": "RetryLater",
                          "description": "Updates installation failed and should be retried later."
                        }
                      ]
                    }
                  },
                  "resourceId": {
                    "description": "The resourceId",
                    "type": "string"
                  },
                  "lastUpdateTime": {
                    "format": "date-time",
                    "description": "Last Update time",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "ConfigurationAssignmentFilterProperties": {
      "type": "object",
      "description": "Azure query for the update configuration.",
      "properties": {
        "resourceTypes": {
          "type": "array",
          "description": "List of allowed resources.",
          "items": {
            "type": "string",
            "description": "List of allowed resources"
          }
        },
        "resourceGroups": {
          "type": "array",
          "description": "List of allowed resource groups.",
          "items": {
            "type": "string",
            "description": "List of allowed resource groups"
          }
        },
        "osTypes": {
          "type": "array",
          "description": "List of allowed operating systems.",
          "items": {
            "type": "string",
            "description": "List of allowed operating systems"
          }
        },
        "locations": {
          "type": "array",
          "description": "List of locations to scope the query to.",
          "items": {
            "type": "string",
            "description": "Location to scope the query to."
          }
        },
        "tagSettings": {
          "type": "object",
          "description": "Tag settings for the VM.",
          "properties": {
            "tags": {
              "type": "object",
              "description": "Dictionary of tags with its list of values.",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "List of tag values for a tag."
                }
              }
            },
            "filterOperator": {
              "type": "string",
              "description": "Filter VMs by Any or All specified tags.",
              "enum": [
                "All",
                "Any"
              ],
              "x-ms-enum": {
                "name": "TagOperators",
                "modelAsString": false
              }
            }
          }
        }
      }
    },
    "TagSettingsProperties": {
      "type": "object",
      "description": "Tag filter information for the VM.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Dictionary of tags with its list of values.",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "List of tag values for a tag."
            }
          }
        },
        "filterOperator": {
          "type": "string",
          "description": "Filter VMs by Any or All specified tags.",
          "enum": [
            "All",
            "Any"
          ],
          "x-ms-enum": {
            "name": "TagOperators",
            "modelAsString": false
          }
        }
      }
    },
    "ConfigurationAssignmentProperties": {
      "description": "Properties for configuration assignment",
      "type": "object",
      "properties": {
        "maintenanceConfigurationId": {
          "description": "The maintenance configuration Id",
          "type": "string"
        },
        "resourceId": {
          "description": "The unique resourceId",
          "type": "string"
        },
        "filter": {
          "description": "Properties of the configuration assignment",
          "type": "object",
          "properties": {
            "resourceTypes": {
              "type": "array",
              "description": "List of allowed resources.",
              "items": {
                "type": "string",
                "description": "List of allowed resources"
              }
            },
            "resourceGroups": {
              "type": "array",
              "description": "List of allowed resource groups.",
              "items": {
                "type": "string",
                "description": "List of allowed resource groups"
              }
            },
            "osTypes": {
              "type": "array",
              "description": "List of allowed operating systems.",
              "items": {
                "type": "string",
                "description": "List of allowed operating systems"
              }
            },
            "locations": {
              "type": "array",
              "description": "List of locations to scope the query to.",
              "items": {
                "type": "string",
                "description": "Location to scope the query to."
              }
            },
            "tagSettings": {
              "type": "object",
              "description": "Tag settings for the VM.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "Dictionary of tags with its list of values.",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "List of tag values for a tag."
                    }
                  }
                },
                "filterOperator": {
                  "type": "string",
                  "description": "Filter VMs by Any or All specified tags.",
                  "enum": [
                    "All",
                    "Any"
                  ],
                  "x-ms-enum": {
                    "name": "TagOperators",
                    "modelAsString": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "ConfigurationAssignment": {
      "description": "Configuration Assignment",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "readOnly": true,
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "location": {
          "description": "Location of the resource",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the configuration assignment",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "maintenanceConfigurationId": {
              "description": "The maintenance configuration Id",
              "type": "string"
            },
            "resourceId": {
              "description": "The unique resourceId",
              "type": "string"
            },
            "filter": {
              "description": "Properties of the configuration assignment",
              "type": "object",
              "properties": {
                "resourceTypes": {
                  "type": "array",
                  "description": "List of allowed resources.",
                  "items": {
                    "type": "string",
                    "description": "List of allowed resources"
                  }
                },
                "resourceGroups": {
                  "type": "array",
                  "description": "List of allowed resource groups.",
                  "items": {
                    "type": "string",
                    "description": "List of allowed resource groups"
                  }
                },
                "osTypes": {
                  "type": "array",
                  "description": "List of allowed operating systems.",
                  "items": {
                    "type": "string",
                    "description": "List of allowed operating systems"
                  }
                },
                "locations": {
                  "type": "array",
                  "description": "List of locations to scope the query to.",
                  "items": {
                    "type": "string",
                    "description": "Location to scope the query to."
                  }
                },
                "tagSettings": {
                  "type": "object",
                  "description": "Tag settings for the VM.",
                  "properties": {
                    "tags": {
                      "type": "object",
                      "description": "Dictionary of tags with its list of values.",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "List of tag values for a tag."
                        }
                      }
                    },
                    "filterOperator": {
                      "type": "string",
                      "description": "Filter VMs by Any or All specified tags.",
                      "enum": [
                        "All",
                        "Any"
                      ],
                      "x-ms-enum": {
                        "name": "TagOperators",
                        "modelAsString": false
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ListConfigurationAssignmentsResult": {
      "description": "Response for ConfigurationAssignments list",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of configuration Assignments",
          "type": "array",
          "items": {
            "description": "Configuration Assignment",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified identifier of the resource",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Name of the resource",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Type of the resource",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "readOnly": true,
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "location": {
                "description": "Location of the resource",
                "type": "string"
              },
              "properties": {
                "description": "Properties of the configuration assignment",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "maintenanceConfigurationId": {
                    "description": "The maintenance configuration Id",
                    "type": "string"
                  },
                  "resourceId": {
                    "description": "The unique resourceId",
                    "type": "string"
                  },
                  "filter": {
                    "description": "Properties of the configuration assignment",
                    "type": "object",
                    "properties": {
                      "resourceTypes": {
                        "type": "array",
                        "description": "List of allowed resources.",
                        "items": {
                          "type": "string",
                          "description": "List of allowed resources"
                        }
                      },
                      "resourceGroups": {
                        "type": "array",
                        "description": "List of allowed resource groups.",
                        "items": {
                          "type": "string",
                          "description": "List of allowed resource groups"
                        }
                      },
                      "osTypes": {
                        "type": "array",
                        "description": "List of allowed operating systems.",
                        "items": {
                          "type": "string",
                          "description": "List of allowed operating systems"
                        }
                      },
                      "locations": {
                        "type": "array",
                        "description": "List of locations to scope the query to.",
                        "items": {
                          "type": "string",
                          "description": "Location to scope the query to."
                        }
                      },
                      "tagSettings": {
                        "type": "object",
                        "description": "Tag settings for the VM.",
                        "properties": {
                          "tags": {
                            "type": "object",
                            "description": "Dictionary of tags with its list of values.",
                            "additionalProperties": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "List of tag values for a tag."
                              }
                            }
                          },
                          "filterOperator": {
                            "type": "string",
                            "description": "Filter VMs by Any or All specified tags.",
                            "enum": [
                              "All",
                              "Any"
                            ],
                            "x-ms-enum": {
                              "name": "TagOperators",
                              "modelAsString": false
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "MaintenanceWindow": {
      "description": "Definition of a MaintenanceWindow",
      "type": "object",
      "properties": {
        "startDateTime": {
          "description": "Effective start date of the maintenance window in YYYY-MM-DD hh:mm format. The start date can be set to either the current date or future date. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone.",
          "type": "string"
        },
        "expirationDateTime": {
          "description": "Effective expiration date of the maintenance window in YYYY-MM-DD hh:mm format. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone. Expiration date must be set to a future date. If not provided, it will be set to the maximum datetime 9999-12-31 23:59:59.",
          "type": "string"
        },
        "duration": {
          "description": "Duration of the maintenance window in HH:mm format. If not provided, default value will be used based on maintenance scope provided. Example: 05:00.",
          "type": "string"
        },
        "timeZone": {
          "description": "Name of the timezone. List of timezones can be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell. Example: Pacific Standard Time, UTC, W. Europe Standard Time, Korea Standard Time, Cen. Australia Standard Time.",
          "type": "string"
        },
        "recurEvery": {
          "description": "Rate at which a Maintenance window is expected to recur. The rate can be expressed as daily, weekly, or monthly schedules. Daily schedule are formatted as recurEvery: [Frequency as integer]['Day(s)']. If no frequency is provided, the default frequency is 1. Daily schedule examples are recurEvery: Day, recurEvery: 3Days.  Weekly schedule are formatted as recurEvery: [Frequency as integer]['Week(s)'] [Optional comma separated list of weekdays Monday-Sunday]. Weekly schedule examples are recurEvery: 3Weeks, recurEvery: Week Saturday,Sunday. Monthly schedules are formatted as [Frequency as integer]['Month(s)'] [Comma separated list of month days] or [Frequency as integer]['Month(s)'] [Week of Month (First, Second, Third, Fourth, Last)] [Weekday Monday-Sunday] [Optional Offset(No. of days)]. Offset value must be between -6 to 6 inclusive. Monthly schedule examples are recurEvery: Month, recurEvery: 2Months, recurEvery: Month day23,day24, recurEvery: Month Last Sunday, recurEvery: Month Fourth Monday, recurEvery: Month Last Sunday Offset-3, recurEvery: Month Third Sunday Offset6.",
          "type": "string"
        }
      }
    },
    "MaintenanceConfigurationProperties": {
      "description": "Properties for maintenance configuration",
      "type": "object",
      "properties": {
        "namespace": {
          "description": "Gets or sets namespace of the resource",
          "type": "string"
        },
        "extensionProperties": {
          "description": "Gets or sets extensionProperties of the maintenanceConfiguration",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "maintenanceScope": {
          "description": "Gets or sets maintenanceScope of the configuration",
          "enum": [
            "Host",
            "Resource",
            "OSImage",
            "Extension",
            "InGuestPatch",
            "SQLDB",
            "SQLManagedInstance"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MaintenanceScope",
            "modelAsString": true,
            "values": [
              {
                "value": "Host",
                "description": "This maintenance scope controls installation of azure platform updates i.e. services on physical nodes hosting customer VMs."
              },
              {
                "value": "Resource",
                "description": "This maintenance scope controls the default update maintenance of the Azure Resource"
              },
              {
                "value": "OSImage",
                "description": "This maintenance scope controls os image installation on VM/VMSS"
              },
              {
                "value": "Extension",
                "description": "This maintenance scope controls extension installation on VM/VMSS"
              },
              {
                "value": "InGuestPatch",
                "description": "This maintenance scope controls installation of windows and linux packages on VM/VMSS"
              },
              {
                "value": "SQLDB",
                "description": "This maintenance scope controls installation of SQL server platform updates."
              },
              {
                "value": "SQLManagedInstance",
                "description": "This maintenance scope controls installation of SQL managed instance platform update."
              }
            ]
          }
        },
        "maintenanceWindow": {
          "description": "Definition of a MaintenanceWindow",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "startDateTime": {
              "description": "Effective start date of the maintenance window in YYYY-MM-DD hh:mm format. The start date can be set to either the current date or future date. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone.",
              "type": "string"
            },
            "expirationDateTime": {
              "description": "Effective expiration date of the maintenance window in YYYY-MM-DD hh:mm format. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone. Expiration date must be set to a future date. If not provided, it will be set to the maximum datetime 9999-12-31 23:59:59.",
              "type": "string"
            },
            "duration": {
              "description": "Duration of the maintenance window in HH:mm format. If not provided, default value will be used based on maintenance scope provided. Example: 05:00.",
              "type": "string"
            },
            "timeZone": {
              "description": "Name of the timezone. List of timezones can be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell. Example: Pacific Standard Time, UTC, W. Europe Standard Time, Korea Standard Time, Cen. Australia Standard Time.",
              "type": "string"
            },
            "recurEvery": {
              "description": "Rate at which a Maintenance window is expected to recur. The rate can be expressed as daily, weekly, or monthly schedules. Daily schedule are formatted as recurEvery: [Frequency as integer]['Day(s)']. If no frequency is provided, the default frequency is 1. Daily schedule examples are recurEvery: Day, recurEvery: 3Days.  Weekly schedule are formatted as recurEvery: [Frequency as integer]['Week(s)'] [Optional comma separated list of weekdays Monday-Sunday]. Weekly schedule examples are recurEvery: 3Weeks, recurEvery: Week Saturday,Sunday. Monthly schedules are formatted as [Frequency as integer]['Month(s)'] [Comma separated list of month days] or [Frequency as integer]['Month(s)'] [Week of Month (First, Second, Third, Fourth, Last)] [Weekday Monday-Sunday] [Optional Offset(No. of days)]. Offset value must be between -6 to 6 inclusive. Monthly schedule examples are recurEvery: Month, recurEvery: 2Months, recurEvery: Month day23,day24, recurEvery: Month Last Sunday, recurEvery: Month Fourth Monday, recurEvery: Month Last Sunday Offset-3, recurEvery: Month Third Sunday Offset6.",
              "type": "string"
            }
          }
        },
        "visibility": {
          "description": "Gets or sets the visibility of the configuration. The default value is 'Custom'",
          "enum": [
            "Custom",
            "Public"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "Visibility",
            "modelAsString": true,
            "values": [
              {
                "value": "Custom",
                "description": "Only visible to users with permissions."
              },
              {
                "value": "Public",
                "description": "Visible to all users."
              }
            ]
          }
        },
        "installPatches": {
          "description": "The input parameters to be passed to the patch run operation.",
          "type": "object",
          "properties": {
            "rebootSetting": {
              "type": "string",
              "enum": [
                "IfRequired",
                "Never",
                "Always"
              ],
              "x-ms-enum": {
                "name": "RebootOptions",
                "modelAsString": true
              },
              "default": "IfRequired",
              "description": "Possible reboot preference as defined by the user based on which it would be decided to reboot the machine or not after the patch operation is completed."
            },
            "windowsParameters": {
              "description": "Input parameters specific to patching a Windows machine. For Linux machines, do not pass this property.",
              "type": "object",
              "properties": {
                "kbNumbersToExclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Windows KBID to be excluded for patching."
                },
                "kbNumbersToInclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Windows KBID to be included for patching."
                },
                "classificationsToInclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', 'UpdateRollup', 'FeaturePack', 'ServicePack', 'Definition', 'Tools', and 'Updates'."
                },
                "excludeKbsRequiringReboot": {
                  "type": "boolean",
                  "description": "Exclude patches which need reboot"
                }
              }
            },
            "linuxParameters": {
              "description": "Input parameters specific to patching Linux machine. For Windows machines, do not pass this property.",
              "type": "object",
              "properties": {
                "packageNameMasksToExclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Package names to be excluded for patching."
                },
                "packageNameMasksToInclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Package names to be included for patching."
                },
                "classificationsToInclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', and 'Other'."
                }
              }
            }
          }
        }
      }
    },
    "InputPatchConfiguration": {
      "type": "object",
      "properties": {
        "rebootSetting": {
          "type": "string",
          "enum": [
            "IfRequired",
            "Never",
            "Always"
          ],
          "x-ms-enum": {
            "name": "RebootOptions",
            "modelAsString": true
          },
          "default": "IfRequired",
          "description": "Possible reboot preference as defined by the user based on which it would be decided to reboot the machine or not after the patch operation is completed."
        },
        "windowsParameters": {
          "description": "Input parameters specific to patching a Windows machine. For Linux machines, do not pass this property.",
          "type": "object",
          "properties": {
            "kbNumbersToExclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Windows KBID to be excluded for patching."
            },
            "kbNumbersToInclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Windows KBID to be included for patching."
            },
            "classificationsToInclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', 'UpdateRollup', 'FeaturePack', 'ServicePack', 'Definition', 'Tools', and 'Updates'."
            },
            "excludeKbsRequiringReboot": {
              "type": "boolean",
              "description": "Exclude patches which need reboot"
            }
          }
        },
        "linuxParameters": {
          "description": "Input parameters specific to patching Linux machine. For Windows machines, do not pass this property.",
          "type": "object",
          "properties": {
            "packageNameMasksToExclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Package names to be excluded for patching."
            },
            "packageNameMasksToInclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Package names to be included for patching."
            },
            "classificationsToInclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', and 'Other'."
            }
          }
        }
      },
      "description": "Input configuration for a patch run"
    },
    "InputWindowsParameters": {
      "type": "object",
      "properties": {
        "kbNumbersToExclude": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Windows KBID to be excluded for patching."
        },
        "kbNumbersToInclude": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Windows KBID to be included for patching."
        },
        "classificationsToInclude": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', 'UpdateRollup', 'FeaturePack', 'ServicePack', 'Definition', 'Tools', and 'Updates'."
        },
        "excludeKbsRequiringReboot": {
          "type": "boolean",
          "description": "Exclude patches which need reboot"
        }
      },
      "description": "Input properties for patching a Windows machine."
    },
    "InputLinuxParameters": {
      "type": "object",
      "properties": {
        "packageNameMasksToExclude": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Package names to be excluded for patching."
        },
        "packageNameMasksToInclude": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Package names to be included for patching."
        },
        "classificationsToInclude": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', and 'Other'."
        }
      },
      "description": "Input properties for patching a Linux machine."
    },
    "MaintenanceConfiguration": {
      "description": "Maintenance configuration record type",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "readOnly": true,
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "location": {
          "description": "Gets or sets location of the resource",
          "type": "string"
        },
        "tags": {
          "description": "Gets or sets tags of the resource",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Gets or sets properties of the resource",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "namespace": {
              "description": "Gets or sets namespace of the resource",
              "type": "string"
            },
            "extensionProperties": {
              "description": "Gets or sets extensionProperties of the maintenanceConfiguration",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "maintenanceScope": {
              "description": "Gets or sets maintenanceScope of the configuration",
              "enum": [
                "Host",
                "Resource",
                "OSImage",
                "Extension",
                "InGuestPatch",
                "SQLDB",
                "SQLManagedInstance"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "MaintenanceScope",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Host",
                    "description": "This maintenance scope controls installation of azure platform updates i.e. services on physical nodes hosting customer VMs."
                  },
                  {
                    "value": "Resource",
                    "description": "This maintenance scope controls the default update maintenance of the Azure Resource"
                  },
                  {
                    "value": "OSImage",
                    "description": "This maintenance scope controls os image installation on VM/VMSS"
                  },
                  {
                    "value": "Extension",
                    "description": "This maintenance scope controls extension installation on VM/VMSS"
                  },
                  {
                    "value": "InGuestPatch",
                    "description": "This maintenance scope controls installation of windows and linux packages on VM/VMSS"
                  },
                  {
                    "value": "SQLDB",
                    "description": "This maintenance scope controls installation of SQL server platform updates."
                  },
                  {
                    "value": "SQLManagedInstance",
                    "description": "This maintenance scope controls installation of SQL managed instance platform update."
                  }
                ]
              }
            },
            "maintenanceWindow": {
              "description": "Definition of a MaintenanceWindow",
              "x-ms-client-flatten": true,
              "type": "object",
              "properties": {
                "startDateTime": {
                  "description": "Effective start date of the maintenance window in YYYY-MM-DD hh:mm format. The start date can be set to either the current date or future date. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone.",
                  "type": "string"
                },
                "expirationDateTime": {
                  "description": "Effective expiration date of the maintenance window in YYYY-MM-DD hh:mm format. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone. Expiration date must be set to a future date. If not provided, it will be set to the maximum datetime 9999-12-31 23:59:59.",
                  "type": "string"
                },
                "duration": {
                  "description": "Duration of the maintenance window in HH:mm format. If not provided, default value will be used based on maintenance scope provided. Example: 05:00.",
                  "type": "string"
                },
                "timeZone": {
                  "description": "Name of the timezone. List of timezones can be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell. Example: Pacific Standard Time, UTC, W. Europe Standard Time, Korea Standard Time, Cen. Australia Standard Time.",
                  "type": "string"
                },
                "recurEvery": {
                  "description": "Rate at which a Maintenance window is expected to recur. The rate can be expressed as daily, weekly, or monthly schedules. Daily schedule are formatted as recurEvery: [Frequency as integer]['Day(s)']. If no frequency is provided, the default frequency is 1. Daily schedule examples are recurEvery: Day, recurEvery: 3Days.  Weekly schedule are formatted as recurEvery: [Frequency as integer]['Week(s)'] [Optional comma separated list of weekdays Monday-Sunday]. Weekly schedule examples are recurEvery: 3Weeks, recurEvery: Week Saturday,Sunday. Monthly schedules are formatted as [Frequency as integer]['Month(s)'] [Comma separated list of month days] or [Frequency as integer]['Month(s)'] [Week of Month (First, Second, Third, Fourth, Last)] [Weekday Monday-Sunday] [Optional Offset(No. of days)]. Offset value must be between -6 to 6 inclusive. Monthly schedule examples are recurEvery: Month, recurEvery: 2Months, recurEvery: Month day23,day24, recurEvery: Month Last Sunday, recurEvery: Month Fourth Monday, recurEvery: Month Last Sunday Offset-3, recurEvery: Month Third Sunday Offset6.",
                  "type": "string"
                }
              }
            },
            "visibility": {
              "description": "Gets or sets the visibility of the configuration. The default value is 'Custom'",
              "enum": [
                "Custom",
                "Public"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "Visibility",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Custom",
                    "description": "Only visible to users with permissions."
                  },
                  {
                    "value": "Public",
                    "description": "Visible to all users."
                  }
                ]
              }
            },
            "installPatches": {
              "description": "The input parameters to be passed to the patch run operation.",
              "type": "object",
              "properties": {
                "rebootSetting": {
                  "type": "string",
                  "enum": [
                    "IfRequired",
                    "Never",
                    "Always"
                  ],
                  "x-ms-enum": {
                    "name": "RebootOptions",
                    "modelAsString": true
                  },
                  "default": "IfRequired",
                  "description": "Possible reboot preference as defined by the user based on which it would be decided to reboot the machine or not after the patch operation is completed."
                },
                "windowsParameters": {
                  "description": "Input parameters specific to patching a Windows machine. For Linux machines, do not pass this property.",
                  "type": "object",
                  "properties": {
                    "kbNumbersToExclude": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Windows KBID to be excluded for patching."
                    },
                    "kbNumbersToInclude": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Windows KBID to be included for patching."
                    },
                    "classificationsToInclude": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', 'UpdateRollup', 'FeaturePack', 'ServicePack', 'Definition', 'Tools', and 'Updates'."
                    },
                    "excludeKbsRequiringReboot": {
                      "type": "boolean",
                      "description": "Exclude patches which need reboot"
                    }
                  }
                },
                "linuxParameters": {
                  "description": "Input parameters specific to patching Linux machine. For Windows machines, do not pass this property.",
                  "type": "object",
                  "properties": {
                    "packageNameMasksToExclude": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Package names to be excluded for patching."
                    },
                    "packageNameMasksToInclude": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Package names to be included for patching."
                    },
                    "classificationsToInclude": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', and 'Other'."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "MaintenanceError": {
      "description": "An error response received from the Azure Maintenance service.",
      "type": "object",
      "properties": {
        "error": {
          "description": "Details of the error",
          "type": "object",
          "properties": {
            "code": {
              "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.",
              "type": "string"
            },
            "message": {
              "description": "Human-readable representation of the error.",
              "type": "string"
            }
          }
        }
      }
    },
    "ErrorDetails": {
      "description": "An error response details received from the Azure Maintenance service.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.",
          "type": "string"
        },
        "message": {
          "description": "Human-readable representation of the error.",
          "type": "string"
        }
      }
    },
    "ListMaintenanceConfigurationsResult": {
      "description": "Response for MaintenanceConfigurations list",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of maintenance Configurations",
          "type": "array",
          "items": {
            "description": "Maintenance configuration record type",
            "type": "object",
            "properties": {
              "id": {
                "description": "Fully qualified identifier of the resource",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "Name of the resource",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Type of the resource",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "readOnly": true,
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "location": {
                "description": "Gets or sets location of the resource",
                "type": "string"
              },
              "tags": {
                "description": "Gets or sets tags of the resource",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "properties": {
                "description": "Gets or sets properties of the resource",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "namespace": {
                    "description": "Gets or sets namespace of the resource",
                    "type": "string"
                  },
                  "extensionProperties": {
                    "description": "Gets or sets extensionProperties of the maintenanceConfiguration",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "maintenanceScope": {
                    "description": "Gets or sets maintenanceScope of the configuration",
                    "enum": [
                      "Host",
                      "Resource",
                      "OSImage",
                      "Extension",
                      "InGuestPatch",
                      "SQLDB",
                      "SQLManagedInstance"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "MaintenanceScope",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Host",
                          "description": "This maintenance scope controls installation of azure platform updates i.e. services on physical nodes hosting customer VMs."
                        },
                        {
                          "value": "Resource",
                          "description": "This maintenance scope controls the default update maintenance of the Azure Resource"
                        },
                        {
                          "value": "OSImage",
                          "description": "This maintenance scope controls os image installation on VM/VMSS"
                        },
                        {
                          "value": "Extension",
                          "description": "This maintenance scope controls extension installation on VM/VMSS"
                        },
                        {
                          "value": "InGuestPatch",
                          "description": "This maintenance scope controls installation of windows and linux packages on VM/VMSS"
                        },
                        {
                          "value": "SQLDB",
                          "description": "This maintenance scope controls installation of SQL server platform updates."
                        },
                        {
                          "value": "SQLManagedInstance",
                          "description": "This maintenance scope controls installation of SQL managed instance platform update."
                        }
                      ]
                    }
                  },
                  "maintenanceWindow": {
                    "description": "Definition of a MaintenanceWindow",
                    "x-ms-client-flatten": true,
                    "type": "object",
                    "properties": {
                      "startDateTime": {
                        "description": "Effective start date of the maintenance window in YYYY-MM-DD hh:mm format. The start date can be set to either the current date or future date. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone.",
                        "type": "string"
                      },
                      "expirationDateTime": {
                        "description": "Effective expiration date of the maintenance window in YYYY-MM-DD hh:mm format. The window will be created in the time zone provided and adjusted to daylight savings according to that time zone. Expiration date must be set to a future date. If not provided, it will be set to the maximum datetime 9999-12-31 23:59:59.",
                        "type": "string"
                      },
                      "duration": {
                        "description": "Duration of the maintenance window in HH:mm format. If not provided, default value will be used based on maintenance scope provided. Example: 05:00.",
                        "type": "string"
                      },
                      "timeZone": {
                        "description": "Name of the timezone. List of timezones can be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell. Example: Pacific Standard Time, UTC, W. Europe Standard Time, Korea Standard Time, Cen. Australia Standard Time.",
                        "type": "string"
                      },
                      "recurEvery": {
                        "description": "Rate at which a Maintenance window is expected to recur. The rate can be expressed as daily, weekly, or monthly schedules. Daily schedule are formatted as recurEvery: [Frequency as integer]['Day(s)']. If no frequency is provided, the default frequency is 1. Daily schedule examples are recurEvery: Day, recurEvery: 3Days.  Weekly schedule are formatted as recurEvery: [Frequency as integer]['Week(s)'] [Optional comma separated list of weekdays Monday-Sunday]. Weekly schedule examples are recurEvery: 3Weeks, recurEvery: Week Saturday,Sunday. Monthly schedules are formatted as [Frequency as integer]['Month(s)'] [Comma separated list of month days] or [Frequency as integer]['Month(s)'] [Week of Month (First, Second, Third, Fourth, Last)] [Weekday Monday-Sunday] [Optional Offset(No. of days)]. Offset value must be between -6 to 6 inclusive. Monthly schedule examples are recurEvery: Month, recurEvery: 2Months, recurEvery: Month day23,day24, recurEvery: Month Last Sunday, recurEvery: Month Fourth Monday, recurEvery: Month Last Sunday Offset-3, recurEvery: Month Third Sunday Offset6.",
                        "type": "string"
                      }
                    }
                  },
                  "visibility": {
                    "description": "Gets or sets the visibility of the configuration. The default value is 'Custom'",
                    "enum": [
                      "Custom",
                      "Public"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "Visibility",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Custom",
                          "description": "Only visible to users with permissions."
                        },
                        {
                          "value": "Public",
                          "description": "Visible to all users."
                        }
                      ]
                    }
                  },
                  "installPatches": {
                    "description": "The input parameters to be passed to the patch run operation.",
                    "type": "object",
                    "properties": {
                      "rebootSetting": {
                        "type": "string",
                        "enum": [
                          "IfRequired",
                          "Never",
                          "Always"
                        ],
                        "x-ms-enum": {
                          "name": "RebootOptions",
                          "modelAsString": true
                        },
                        "default": "IfRequired",
                        "description": "Possible reboot preference as defined by the user based on which it would be decided to reboot the machine or not after the patch operation is completed."
                      },
                      "windowsParameters": {
                        "description": "Input parameters specific to patching a Windows machine. For Linux machines, do not pass this property.",
                        "type": "object",
                        "properties": {
                          "kbNumbersToExclude": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Windows KBID to be excluded for patching."
                          },
                          "kbNumbersToInclude": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Windows KBID to be included for patching."
                          },
                          "classificationsToInclude": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', 'UpdateRollup', 'FeaturePack', 'ServicePack', 'Definition', 'Tools', and 'Updates'."
                          },
                          "excludeKbsRequiringReboot": {
                            "type": "boolean",
                            "description": "Exclude patches which need reboot"
                          }
                        }
                      },
                      "linuxParameters": {
                        "description": "Input parameters specific to patching Linux machine. For Windows machines, do not pass this property.",
                        "type": "object",
                        "properties": {
                          "packageNameMasksToExclude": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Package names to be excluded for patching."
                          },
                          "packageNameMasksToInclude": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Package names to be included for patching."
                          },
                          "classificationsToInclude": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Classification category of patches to be patched. Allowed values are 'Critical', 'Security', and 'Other'."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "OperationsListResult": {
      "description": "Result of the List Operations operation",
      "type": "object",
      "properties": {
        "value": {
          "description": "A collection of operations",
          "type": "array",
          "items": {
            "description": "Represents an operation returned by the GetOperations request",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the operation",
                "type": "string"
              },
              "display": {
                "description": "Display name of the operation",
                "type": "object",
                "properties": {
                  "provider": {
                    "description": "Name of the provider",
                    "type": "string"
                  },
                  "resource": {
                    "description": "Name of the resource type",
                    "type": "string"
                  },
                  "operation": {
                    "description": "Name of the operation",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description of the operation",
                    "type": "string"
                  }
                }
              },
              "origin": {
                "description": "Origin of the operation",
                "type": "string"
              },
              "properties": {
                "description": "Properties of the operation",
                "type": "object",
                "x-ms-client-flatten": true
              },
              "isDataAction": {
                "description": "Indicates whether the operation is a data action",
                "type": "boolean"
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "Operation": {
      "description": "Represents an operation returned by the GetOperations request",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the operation",
          "type": "string"
        },
        "display": {
          "description": "Display name of the operation",
          "type": "object",
          "properties": {
            "provider": {
              "description": "Name of the provider",
              "type": "string"
            },
            "resource": {
              "description": "Name of the resource type",
              "type": "string"
            },
            "operation": {
              "description": "Name of the operation",
              "type": "string"
            },
            "description": {
              "description": "Description of the operation",
              "type": "string"
            }
          }
        },
        "origin": {
          "description": "Origin of the operation",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the operation",
          "type": "object",
          "x-ms-client-flatten": true
        },
        "isDataAction": {
          "description": "Indicates whether the operation is a data action",
          "type": "boolean"
        }
      }
    },
    "OperationInfo": {
      "description": "Information about an operation",
      "type": "object",
      "properties": {
        "provider": {
          "description": "Name of the provider",
          "type": "string"
        },
        "resource": {
          "description": "Name of the resource type",
          "type": "string"
        },
        "operation": {
          "description": "Name of the operation",
          "type": "string"
        },
        "description": {
          "description": "Description of the operation",
          "type": "string"
        }
      }
    },
    "ListUpdatesResult": {
      "description": "Response for Updates list",
      "type": "object",
      "properties": {
        "value": {
          "description": "The pending updates",
          "type": "array",
          "items": {
            "description": "Maintenance update on a resource",
            "type": "object",
            "properties": {
              "maintenanceScope": {
                "description": "The impact area",
                "enum": [
                  "Host",
                  "Resource",
                  "OSImage",
                  "Extension",
                  "InGuestPatch",
                  "SQLDB",
                  "SQLManagedInstance"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "MaintenanceScope",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "Host",
                      "description": "This maintenance scope controls installation of azure platform updates i.e. services on physical nodes hosting customer VMs."
                    },
                    {
                      "value": "Resource",
                      "description": "This maintenance scope controls the default update maintenance of the Azure Resource"
                    },
                    {
                      "value": "OSImage",
                      "description": "This maintenance scope controls os image installation on VM/VMSS"
                    },
                    {
                      "value": "Extension",
                      "description": "This maintenance scope controls extension installation on VM/VMSS"
                    },
                    {
                      "value": "InGuestPatch",
                      "description": "This maintenance scope controls installation of windows and linux packages on VM/VMSS"
                    },
                    {
                      "value": "SQLDB",
                      "description": "This maintenance scope controls installation of SQL server platform updates."
                    },
                    {
                      "value": "SQLManagedInstance",
                      "description": "This maintenance scope controls installation of SQL managed instance platform update."
                    }
                  ]
                }
              },
              "impactType": {
                "description": "The impact type",
                "enum": [
                  "None",
                  "Freeze",
                  "Restart",
                  "Redeploy"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "ImpactType",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "None",
                      "description": "Pending updates has no impact on resource."
                    },
                    {
                      "value": "Freeze",
                      "description": "Pending updates can freeze network or disk io operation on resource."
                    },
                    {
                      "value": "Restart",
                      "description": "Pending updates can cause resource to restart."
                    },
                    {
                      "value": "Redeploy",
                      "description": "Pending updates can redeploy resource."
                    }
                  ]
                }
              },
              "status": {
                "description": "The status",
                "enum": [
                  "Pending",
                  "InProgress",
                  "Completed",
                  "RetryNow",
                  "RetryLater"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "UpdateStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "Pending",
                      "description": "There are pending updates to be installed."
                    },
                    {
                      "value": "InProgress",
                      "description": "Updates installation are in progress."
                    },
                    {
                      "value": "Completed",
                      "description": "All updates are successfully applied."
                    },
                    {
                      "value": "RetryNow",
                      "description": "Updates installation failed but are ready to retry again."
                    },
                    {
                      "value": "RetryLater",
                      "description": "Updates installation failed and should be retried later."
                    }
                  ]
                }
              },
              "impactDurationInSec": {
                "format": "int32",
                "description": "Duration of impact in seconds",
                "type": "integer"
              },
              "notBefore": {
                "format": "date-time",
                "description": "Time when Azure will start force updates if not self-updated by customer before this time",
                "type": "string"
              },
              "properties": {
                "description": "Properties of the apply update",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "resourceId": {
                    "description": "The resourceId",
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Update": {
      "description": "Maintenance update on a resource",
      "type": "object",
      "properties": {
        "maintenanceScope": {
          "description": "The impact area",
          "enum": [
            "Host",
            "Resource",
            "OSImage",
            "Extension",
            "InGuestPatch",
            "SQLDB",
            "SQLManagedInstance"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MaintenanceScope",
            "modelAsString": true,
            "values": [
              {
                "value": "Host",
                "description": "This maintenance scope controls installation of azure platform updates i.e. services on physical nodes hosting customer VMs."
              },
              {
                "value": "Resource",
                "description": "This maintenance scope controls the default update maintenance of the Azure Resource"
              },
              {
                "value": "OSImage",
                "description": "This maintenance scope controls os image installation on VM/VMSS"
              },
              {
                "value": "Extension",
                "description": "This maintenance scope controls extension installation on VM/VMSS"
              },
              {
                "value": "InGuestPatch",
                "description": "This maintenance scope controls installation of windows and linux packages on VM/VMSS"
              },
              {
                "value": "SQLDB",
                "description": "This maintenance scope controls installation of SQL server platform updates."
              },
              {
                "value": "SQLManagedInstance",
                "description": "This maintenance scope controls installation of SQL managed instance platform update."
              }
            ]
          }
        },
        "impactType": {
          "description": "The impact type",
          "enum": [
            "None",
            "Freeze",
            "Restart",
            "Redeploy"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ImpactType",
            "modelAsString": true,
            "values": [
              {
                "value": "None",
                "description": "Pending updates has no impact on resource."
              },
              {
                "value": "Freeze",
                "description": "Pending updates can freeze network or disk io operation on resource."
              },
              {
                "value": "Restart",
                "description": "Pending updates can cause resource to restart."
              },
              {
                "value": "Redeploy",
                "description": "Pending updates can redeploy resource."
              }
            ]
          }
        },
        "status": {
          "description": "The status",
          "enum": [
            "Pending",
            "InProgress",
            "Completed",
            "RetryNow",
            "RetryLater"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "UpdateStatus",
            "modelAsString": true,
            "values": [
              {
                "value": "Pending",
                "description": "There are pending updates to be installed."
              },
              {
                "value": "InProgress",
                "description": "Updates installation are in progress."
              },
              {
                "value": "Completed",
                "description": "All updates are successfully applied."
              },
              {
                "value": "RetryNow",
                "description": "Updates installation failed but are ready to retry again."
              },
              {
                "value": "RetryLater",
                "description": "Updates installation failed and should be retried later."
              }
            ]
          }
        },
        "impactDurationInSec": {
          "format": "int32",
          "description": "Duration of impact in seconds",
          "type": "integer"
        },
        "notBefore": {
          "format": "date-time",
          "description": "Time when Azure will start force updates if not self-updated by customer before this time",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the apply update",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "resourceId": {
              "description": "The resourceId",
              "type": "string"
            }
          }
        }
      }
    },
    "UpdateProperties": {
      "description": "Properties for update",
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "The resourceId",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to be used with the client request.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client"
    }
  }
}