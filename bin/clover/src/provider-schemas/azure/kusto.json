{
  "swagger": "2.0",
  "info": {
    "title": "Azure kusto",
    "version": "2024-04-13",
    "description": "Azure kusto service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}": {
      "get": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_Get",
        "description": "Gets a Kusto cluster.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Kusto cluster.",
            "schema": {
              "type": "object",
              "required": [
                "sku"
              ],
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "sku": {
                  "description": "The SKU of the cluster.",
                  "type": "object",
                  "required": [
                    "name",
                    "tier"
                  ],
                  "properties": {
                    "name": {
                      "description": "SKU name.",
                      "type": "string",
                      "enum": [
                        "Dev(No SLA)_Standard_D11_v2",
                        "Dev(No SLA)_Standard_E2a_v4",
                        "Standard_D11_v2",
                        "Standard_D12_v2",
                        "Standard_D13_v2",
                        "Standard_D14_v2",
                        "Standard_D32d_v4",
                        "Standard_D16d_v5",
                        "Standard_D32d_v5",
                        "Standard_DS13_v2+1TB_PS",
                        "Standard_DS13_v2+2TB_PS",
                        "Standard_DS14_v2+3TB_PS",
                        "Standard_DS14_v2+4TB_PS",
                        "Standard_L4s",
                        "Standard_L8s",
                        "Standard_L16s",
                        "Standard_L8s_v2",
                        "Standard_L16s_v2",
                        "Standard_L8s_v3",
                        "Standard_L16s_v3",
                        "Standard_L32s_v3",
                        "Standard_L8as_v3",
                        "Standard_L16as_v3",
                        "Standard_L32as_v3",
                        "Standard_E64i_v3",
                        "Standard_E80ids_v4",
                        "Standard_E2a_v4",
                        "Standard_E4a_v4",
                        "Standard_E8a_v4",
                        "Standard_E16a_v4",
                        "Standard_E8as_v4+1TB_PS",
                        "Standard_E8as_v4+2TB_PS",
                        "Standard_E16as_v4+3TB_PS",
                        "Standard_E16as_v4+4TB_PS",
                        "Standard_E8as_v5+1TB_PS",
                        "Standard_E8as_v5+2TB_PS",
                        "Standard_E16as_v5+3TB_PS",
                        "Standard_E16as_v5+4TB_PS",
                        "Standard_E2ads_v5",
                        "Standard_E4ads_v5",
                        "Standard_E8ads_v5",
                        "Standard_E16ads_v5",
                        "Standard_EC8as_v5+1TB_PS",
                        "Standard_EC8as_v5+2TB_PS",
                        "Standard_EC16as_v5+3TB_PS",
                        "Standard_EC16as_v5+4TB_PS",
                        "Standard_EC8ads_v5",
                        "Standard_EC16ads_v5",
                        "Standard_E8s_v4+1TB_PS",
                        "Standard_E8s_v4+2TB_PS",
                        "Standard_E16s_v4+3TB_PS",
                        "Standard_E16s_v4+4TB_PS",
                        "Standard_E8s_v5+1TB_PS",
                        "Standard_E8s_v5+2TB_PS",
                        "Standard_E16s_v5+3TB_PS",
                        "Standard_E16s_v5+4TB_PS",
                        "Standard_E2d_v4",
                        "Standard_E4d_v4",
                        "Standard_E8d_v4",
                        "Standard_E16d_v4",
                        "Standard_E2d_v5",
                        "Standard_E4d_v5",
                        "Standard_E8d_v5",
                        "Standard_E16d_v5"
                      ],
                      "x-ms-enum": {
                        "name": "AzureSkuName",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "description": "The number of instances of the cluster.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "tier": {
                      "description": "SKU tier.",
                      "type": "string",
                      "enum": [
                        "Basic",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "AzureSkuTier",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "zones": {
                  "description": "The availability zones of the cluster.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "identity": {
                  "description": "The identity of the cluster, if configured.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID of resource identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID of resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove all identities.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal id of user assigned identity."
                          },
                          "clientId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The client id of user assigned identity."
                          }
                        }
                      },
                      "description": "The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The cluster properties.",
                  "type": "object",
                  "properties": {
                    "state": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The state of the resource.",
                      "enum": [
                        "Creating",
                        "Unavailable",
                        "Running",
                        "Deleting",
                        "Deleted",
                        "Stopping",
                        "Stopped",
                        "Starting",
                        "Updating",
                        "Migrated"
                      ],
                      "x-ms-enum": {
                        "name": "State",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "uri": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The cluster URI."
                    },
                    "dataIngestionUri": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The cluster data ingestion URI."
                    },
                    "stateReason": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The reason for the cluster's current state."
                    },
                    "trustedExternalTenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "GUID representing an external tenant."
                          }
                        },
                        "description": "Represents a tenant ID that is trusted by the cluster."
                      },
                      "description": "The cluster's external tenants."
                    },
                    "optimizedAutoscale": {
                      "type": "object",
                      "description": "Optimized auto scale definition.",
                      "required": [
                        "version",
                        "isEnabled",
                        "minimum",
                        "maximum"
                      ],
                      "properties": {
                        "version": {
                          "description": "The version of the template defined, for instance 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "isEnabled": {
                          "description": "A boolean value that indicate if the optimized autoscale feature is enabled or not.",
                          "type": "boolean"
                        },
                        "minimum": {
                          "description": "Minimum allowed instances count.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "maximum": {
                          "description": "Maximum allowed instances count.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "enableDiskEncryption": {
                      "description": "A boolean value that indicates if the cluster's disks are encrypted.",
                      "default": false,
                      "type": "boolean"
                    },
                    "enableStreamingIngest": {
                      "description": "A boolean value that indicates if the streaming ingest is enabled.",
                      "default": false,
                      "type": "boolean"
                    },
                    "virtualNetworkConfiguration": {
                      "type": "object",
                      "description": "Virtual network definition.",
                      "required": [
                        "subnetId",
                        "enginePublicIpId",
                        "dataManagementPublicIpId"
                      ],
                      "properties": {
                        "subnetId": {
                          "description": "The subnet resource id.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "enginePublicIpId": {
                          "description": "Engine service's public IP address resource id.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "dataManagementPublicIpId": {
                          "description": "Data management's service public IP address resource id.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "state": {
                          "type": "string",
                          "description": "When enabled, the cluster is deployed into the configured subnet, when disabled it will be removed from the subnet.",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "VnetState",
                            "modelAsString": true
                          },
                          "default": "Enabled"
                        }
                      }
                    },
                    "keyVaultProperties": {
                      "type": "object",
                      "description": "KeyVault properties for the cluster encryption.",
                      "properties": {
                        "keyName": {
                          "type": "string",
                          "description": "The name of the key vault key.",
                          "x-ms-client-name": "KeyName"
                        },
                        "keyVersion": {
                          "type": "string",
                          "description": "The version of the key vault key.",
                          "x-ms-client-name": "KeyVersion"
                        },
                        "keyVaultUri": {
                          "type": "string",
                          "description": "The Uri of the key vault.",
                          "x-ms-client-name": "KeyVaultUri"
                        },
                        "userIdentity": {
                          "type": "string",
                          "description": "The user assigned identity (ARM resource id) that has access to the key.",
                          "x-ms-client-name": "UserIdentity"
                        }
                      }
                    },
                    "enablePurge": {
                      "description": "A boolean value that indicates if the purge operations are enabled.",
                      "default": false,
                      "type": "boolean"
                    },
                    "languageExtensions": {
                      "type": "object",
                      "description": "List of the cluster's language extensions.",
                      "properties": {
                        "value": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The language extension object.",
                            "properties": {
                              "languageExtensionName": {
                                "description": "The language extension name.",
                                "type": "string",
                                "enum": [
                                  "PYTHON",
                                  "R"
                                ],
                                "x-ms-enum": {
                                  "name": "languageExtensionName",
                                  "modelAsString": true
                                }
                              },
                              "languageExtensionImageName": {
                                "description": "The language extension image name.",
                                "type": "string",
                                "enum": [
                                  "R",
                                  "Python3_6_5",
                                  "Python3_10_8",
                                  "Python3_10_8_DL",
                                  "PythonCustomImage",
                                  "Python3_11_7",
                                  "Python3_11_7_DL"
                                ],
                                "x-ms-enum": {
                                  "name": "languageExtensionImageName",
                                  "modelAsString": true
                                }
                              },
                              "languageExtensionCustomImageName": {
                                "description": "The language extension custom image name.",
                                "type": "string"
                              }
                            }
                          },
                          "description": "The list of language extensions."
                        }
                      }
                    },
                    "enableDoubleEncryption": {
                      "description": "A boolean value that indicates if double encryption is enabled.",
                      "default": false,
                      "type": "boolean"
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "description": "Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "allowedIpRangeList": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The list of ips in the format of CIDR allowed to connect to the cluster."
                    },
                    "engineType": {
                      "type": "string",
                      "description": "The engine type",
                      "enum": [
                        "V2",
                        "V3"
                      ],
                      "x-ms-enum": {
                        "name": "EngineType",
                        "modelAsString": true
                      },
                      "default": "V3"
                    },
                    "acceptedAudiences": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "GUID or valid URL representing an accepted audience."
                          }
                        },
                        "description": "Represents an accepted audience trusted by the cluster."
                      },
                      "description": "The cluster's accepted audiences."
                    },
                    "enableAutoStop": {
                      "description": "A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days).",
                      "default": true,
                      "type": "boolean"
                    },
                    "restrictOutboundNetworkAccess": {
                      "description": "Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ClusterNetworkAccessFlag",
                        "modelAsString": true
                      },
                      "default": "Disabled"
                    },
                    "allowedFqdnList": {
                      "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.",
                      "type": "array",
                      "items": {
                        "description": "FQDN to be allowed for egress. Example: my-storageaccount.blob.core.windows.net",
                        "type": "string"
                      }
                    },
                    "calloutPolicies": {
                      "description": "List of callout policies for egress from Cluster.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "calloutUriRegex": {
                            "type": "string",
                            "description": "Regular expression or FQDN pattern for the callout URI."
                          },
                          "calloutType": {
                            "type": "string",
                            "enum": [
                              "kusto",
                              "sql",
                              "cosmosdb",
                              "external_data",
                              "azure_digital_twins",
                              "sandbox_artifacts",
                              "webapi",
                              "mysql",
                              "postgresql",
                              "genevametrics",
                              "azure_openai"
                            ],
                            "x-ms-enum": {
                              "name": "calloutType",
                              "modelAsString": true
                            },
                            "description": "Type of the callout service, specifying the kind of external resource or service being accessed."
                          },
                          "outboundAccess": {
                            "type": "string",
                            "enum": [
                              "Allow",
                              "Deny"
                            ],
                            "x-ms-enum": {
                              "name": "outboundAccess",
                              "modelAsString": true
                            },
                            "description": "Indicates whether outbound access is permitted for the specified URI pattern."
                          },
                          "calloutId": {
                            "type": "string",
                            "description": "Unique identifier for the callout configuration.",
                            "readOnly": true
                          }
                        },
                        "description": "Configuration for external callout policies, including URI patterns, access types, and service types."
                      }
                    },
                    "publicIPType": {
                      "description": "Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6)",
                      "enum": [
                        "IPv4",
                        "DualStack"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "publicIPType",
                        "modelAsString": true
                      },
                      "default": "IPv4"
                    },
                    "virtualClusterGraduationProperties": {
                      "description": "Virtual Cluster graduation properties",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "items": {
                        "description": "A private endpoint connection",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "required": [
                              "privateLinkServiceConnectionState"
                            ],
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "Private endpoint which the connection belongs to.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Resource id of the private endpoint.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection State of the Private Endpoint Connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "description": "The private link service connection status."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The private link service connection description."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                                    "readOnly": true
                                  }
                                }
                              },
                              "groupId": {
                                "type": "string",
                                "description": "Group id of the private endpoint.",
                                "readOnly": true
                              },
                              "provisioningState": {
                                "type": "string",
                                "description": "Provisioning state of the private endpoint.",
                                "readOnly": true
                              }
                            }
                          },
                          "systemData": {
                            "readOnly": true,
                            "description": "Metadata pertaining to creation and last modification of the resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true,
                      "description": "A list of private endpoint connections."
                    },
                    "migrationCluster": {
                      "description": "Properties of the peer cluster involved in a migration to/from this cluster.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The resource ID of the cluster.",
                          "readOnly": true
                        },
                        "uri": {
                          "type": "string",
                          "description": "The public URL of the cluster.",
                          "readOnly": true
                        },
                        "dataIngestionUri": {
                          "type": "string",
                          "description": "The public data ingestion URL of the cluster.",
                          "readOnly": true
                        },
                        "role": {
                          "type": "string",
                          "description": "The role of the cluster in the migration process.",
                          "readOnly": true,
                          "enum": [
                            "Source",
                            "Destination"
                          ],
                          "x-ms-enum": {
                            "name": "MigrationClusterRole",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "zoneStatus": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Indicates whether the cluster is zonal or non-zonal.",
                      "enum": [
                        "NonZonal",
                        "ZonalInconsistency",
                        "Zonal"
                      ],
                      "x-ms-enum": {
                        "name": "ZoneStatus",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "readOnly": true,
                  "description": "A unique read-only string that changes whenever the resource is updated."
                }
              },
              "description": "Class representing a Kusto cluster."
            }
          }
        }
      },
      "put": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_CreateOrUpdate",
        "description": "Create or update a Kusto cluster.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "sku"
              ],
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "sku": {
                  "description": "The SKU of the cluster.",
                  "type": "object",
                  "required": [
                    "name",
                    "tier"
                  ],
                  "properties": {
                    "name": {
                      "description": "SKU name.",
                      "type": "string",
                      "enum": [
                        "Dev(No SLA)_Standard_D11_v2",
                        "Dev(No SLA)_Standard_E2a_v4",
                        "Standard_D11_v2",
                        "Standard_D12_v2",
                        "Standard_D13_v2",
                        "Standard_D14_v2",
                        "Standard_D32d_v4",
                        "Standard_D16d_v5",
                        "Standard_D32d_v5",
                        "Standard_DS13_v2+1TB_PS",
                        "Standard_DS13_v2+2TB_PS",
                        "Standard_DS14_v2+3TB_PS",
                        "Standard_DS14_v2+4TB_PS",
                        "Standard_L4s",
                        "Standard_L8s",
                        "Standard_L16s",
                        "Standard_L8s_v2",
                        "Standard_L16s_v2",
                        "Standard_L8s_v3",
                        "Standard_L16s_v3",
                        "Standard_L32s_v3",
                        "Standard_L8as_v3",
                        "Standard_L16as_v3",
                        "Standard_L32as_v3",
                        "Standard_E64i_v3",
                        "Standard_E80ids_v4",
                        "Standard_E2a_v4",
                        "Standard_E4a_v4",
                        "Standard_E8a_v4",
                        "Standard_E16a_v4",
                        "Standard_E8as_v4+1TB_PS",
                        "Standard_E8as_v4+2TB_PS",
                        "Standard_E16as_v4+3TB_PS",
                        "Standard_E16as_v4+4TB_PS",
                        "Standard_E8as_v5+1TB_PS",
                        "Standard_E8as_v5+2TB_PS",
                        "Standard_E16as_v5+3TB_PS",
                        "Standard_E16as_v5+4TB_PS",
                        "Standard_E2ads_v5",
                        "Standard_E4ads_v5",
                        "Standard_E8ads_v5",
                        "Standard_E16ads_v5",
                        "Standard_EC8as_v5+1TB_PS",
                        "Standard_EC8as_v5+2TB_PS",
                        "Standard_EC16as_v5+3TB_PS",
                        "Standard_EC16as_v5+4TB_PS",
                        "Standard_EC8ads_v5",
                        "Standard_EC16ads_v5",
                        "Standard_E8s_v4+1TB_PS",
                        "Standard_E8s_v4+2TB_PS",
                        "Standard_E16s_v4+3TB_PS",
                        "Standard_E16s_v4+4TB_PS",
                        "Standard_E8s_v5+1TB_PS",
                        "Standard_E8s_v5+2TB_PS",
                        "Standard_E16s_v5+3TB_PS",
                        "Standard_E16s_v5+4TB_PS",
                        "Standard_E2d_v4",
                        "Standard_E4d_v4",
                        "Standard_E8d_v4",
                        "Standard_E16d_v4",
                        "Standard_E2d_v5",
                        "Standard_E4d_v5",
                        "Standard_E8d_v5",
                        "Standard_E16d_v5"
                      ],
                      "x-ms-enum": {
                        "name": "AzureSkuName",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "description": "The number of instances of the cluster.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "tier": {
                      "description": "SKU tier.",
                      "type": "string",
                      "enum": [
                        "Basic",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "AzureSkuTier",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "zones": {
                  "description": "The availability zones of the cluster.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "identity": {
                  "description": "The identity of the cluster, if configured.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID of resource identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID of resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove all identities.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal id of user assigned identity."
                          },
                          "clientId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The client id of user assigned identity."
                          }
                        }
                      },
                      "description": "The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The cluster properties.",
                  "type": "object",
                  "properties": {
                    "state": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The state of the resource.",
                      "enum": [
                        "Creating",
                        "Unavailable",
                        "Running",
                        "Deleting",
                        "Deleted",
                        "Stopping",
                        "Stopped",
                        "Starting",
                        "Updating",
                        "Migrated"
                      ],
                      "x-ms-enum": {
                        "name": "State",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "uri": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The cluster URI."
                    },
                    "dataIngestionUri": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The cluster data ingestion URI."
                    },
                    "stateReason": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The reason for the cluster's current state."
                    },
                    "trustedExternalTenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "GUID representing an external tenant."
                          }
                        },
                        "description": "Represents a tenant ID that is trusted by the cluster."
                      },
                      "description": "The cluster's external tenants."
                    },
                    "optimizedAutoscale": {
                      "type": "object",
                      "description": "Optimized auto scale definition.",
                      "required": [
                        "version",
                        "isEnabled",
                        "minimum",
                        "maximum"
                      ],
                      "properties": {
                        "version": {
                          "description": "The version of the template defined, for instance 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "isEnabled": {
                          "description": "A boolean value that indicate if the optimized autoscale feature is enabled or not.",
                          "type": "boolean"
                        },
                        "minimum": {
                          "description": "Minimum allowed instances count.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "maximum": {
                          "description": "Maximum allowed instances count.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "enableDiskEncryption": {
                      "description": "A boolean value that indicates if the cluster's disks are encrypted.",
                      "default": false,
                      "type": "boolean"
                    },
                    "enableStreamingIngest": {
                      "description": "A boolean value that indicates if the streaming ingest is enabled.",
                      "default": false,
                      "type": "boolean"
                    },
                    "virtualNetworkConfiguration": {
                      "type": "object",
                      "description": "Virtual network definition.",
                      "required": [
                        "subnetId",
                        "enginePublicIpId",
                        "dataManagementPublicIpId"
                      ],
                      "properties": {
                        "subnetId": {
                          "description": "The subnet resource id.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "enginePublicIpId": {
                          "description": "Engine service's public IP address resource id.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "dataManagementPublicIpId": {
                          "description": "Data management's service public IP address resource id.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "state": {
                          "type": "string",
                          "description": "When enabled, the cluster is deployed into the configured subnet, when disabled it will be removed from the subnet.",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "VnetState",
                            "modelAsString": true
                          },
                          "default": "Enabled"
                        }
                      }
                    },
                    "keyVaultProperties": {
                      "type": "object",
                      "description": "KeyVault properties for the cluster encryption.",
                      "properties": {
                        "keyName": {
                          "type": "string",
                          "description": "The name of the key vault key.",
                          "x-ms-client-name": "KeyName"
                        },
                        "keyVersion": {
                          "type": "string",
                          "description": "The version of the key vault key.",
                          "x-ms-client-name": "KeyVersion"
                        },
                        "keyVaultUri": {
                          "type": "string",
                          "description": "The Uri of the key vault.",
                          "x-ms-client-name": "KeyVaultUri"
                        },
                        "userIdentity": {
                          "type": "string",
                          "description": "The user assigned identity (ARM resource id) that has access to the key.",
                          "x-ms-client-name": "UserIdentity"
                        }
                      }
                    },
                    "enablePurge": {
                      "description": "A boolean value that indicates if the purge operations are enabled.",
                      "default": false,
                      "type": "boolean"
                    },
                    "languageExtensions": {
                      "type": "object",
                      "description": "List of the cluster's language extensions.",
                      "properties": {
                        "value": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The language extension object.",
                            "properties": {
                              "languageExtensionName": {
                                "description": "The language extension name.",
                                "type": "string",
                                "enum": [
                                  "PYTHON",
                                  "R"
                                ],
                                "x-ms-enum": {
                                  "name": "languageExtensionName",
                                  "modelAsString": true
                                }
                              },
                              "languageExtensionImageName": {
                                "description": "The language extension image name.",
                                "type": "string",
                                "enum": [
                                  "R",
                                  "Python3_6_5",
                                  "Python3_10_8",
                                  "Python3_10_8_DL",
                                  "PythonCustomImage",
                                  "Python3_11_7",
                                  "Python3_11_7_DL"
                                ],
                                "x-ms-enum": {
                                  "name": "languageExtensionImageName",
                                  "modelAsString": true
                                }
                              },
                              "languageExtensionCustomImageName": {
                                "description": "The language extension custom image name.",
                                "type": "string"
                              }
                            }
                          },
                          "description": "The list of language extensions."
                        }
                      }
                    },
                    "enableDoubleEncryption": {
                      "description": "A boolean value that indicates if double encryption is enabled.",
                      "default": false,
                      "type": "boolean"
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "description": "Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "allowedIpRangeList": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The list of ips in the format of CIDR allowed to connect to the cluster."
                    },
                    "engineType": {
                      "type": "string",
                      "description": "The engine type",
                      "enum": [
                        "V2",
                        "V3"
                      ],
                      "x-ms-enum": {
                        "name": "EngineType",
                        "modelAsString": true
                      },
                      "default": "V3"
                    },
                    "acceptedAudiences": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "GUID or valid URL representing an accepted audience."
                          }
                        },
                        "description": "Represents an accepted audience trusted by the cluster."
                      },
                      "description": "The cluster's accepted audiences."
                    },
                    "enableAutoStop": {
                      "description": "A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days).",
                      "default": true,
                      "type": "boolean"
                    },
                    "restrictOutboundNetworkAccess": {
                      "description": "Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ClusterNetworkAccessFlag",
                        "modelAsString": true
                      },
                      "default": "Disabled"
                    },
                    "allowedFqdnList": {
                      "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.",
                      "type": "array",
                      "items": {
                        "description": "FQDN to be allowed for egress. Example: my-storageaccount.blob.core.windows.net",
                        "type": "string"
                      }
                    },
                    "calloutPolicies": {
                      "description": "List of callout policies for egress from Cluster.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "calloutUriRegex": {
                            "type": "string",
                            "description": "Regular expression or FQDN pattern for the callout URI."
                          },
                          "calloutType": {
                            "type": "string",
                            "enum": [
                              "kusto",
                              "sql",
                              "cosmosdb",
                              "external_data",
                              "azure_digital_twins",
                              "sandbox_artifacts",
                              "webapi",
                              "mysql",
                              "postgresql",
                              "genevametrics",
                              "azure_openai"
                            ],
                            "x-ms-enum": {
                              "name": "calloutType",
                              "modelAsString": true
                            },
                            "description": "Type of the callout service, specifying the kind of external resource or service being accessed."
                          },
                          "outboundAccess": {
                            "type": "string",
                            "enum": [
                              "Allow",
                              "Deny"
                            ],
                            "x-ms-enum": {
                              "name": "outboundAccess",
                              "modelAsString": true
                            },
                            "description": "Indicates whether outbound access is permitted for the specified URI pattern."
                          },
                          "calloutId": {
                            "type": "string",
                            "description": "Unique identifier for the callout configuration.",
                            "readOnly": true
                          }
                        },
                        "description": "Configuration for external callout policies, including URI patterns, access types, and service types."
                      }
                    },
                    "publicIPType": {
                      "description": "Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6)",
                      "enum": [
                        "IPv4",
                        "DualStack"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "publicIPType",
                        "modelAsString": true
                      },
                      "default": "IPv4"
                    },
                    "virtualClusterGraduationProperties": {
                      "description": "Virtual Cluster graduation properties",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "items": {
                        "description": "A private endpoint connection",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "required": [
                              "privateLinkServiceConnectionState"
                            ],
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "Private endpoint which the connection belongs to.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Resource id of the private endpoint.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection State of the Private Endpoint Connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "description": "The private link service connection status."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The private link service connection description."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                                    "readOnly": true
                                  }
                                }
                              },
                              "groupId": {
                                "type": "string",
                                "description": "Group id of the private endpoint.",
                                "readOnly": true
                              },
                              "provisioningState": {
                                "type": "string",
                                "description": "Provisioning state of the private endpoint.",
                                "readOnly": true
                              }
                            }
                          },
                          "systemData": {
                            "readOnly": true,
                            "description": "Metadata pertaining to creation and last modification of the resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true,
                      "description": "A list of private endpoint connections."
                    },
                    "migrationCluster": {
                      "description": "Properties of the peer cluster involved in a migration to/from this cluster.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The resource ID of the cluster.",
                          "readOnly": true
                        },
                        "uri": {
                          "type": "string",
                          "description": "The public URL of the cluster.",
                          "readOnly": true
                        },
                        "dataIngestionUri": {
                          "type": "string",
                          "description": "The public data ingestion URL of the cluster.",
                          "readOnly": true
                        },
                        "role": {
                          "type": "string",
                          "description": "The role of the cluster in the migration process.",
                          "readOnly": true,
                          "enum": [
                            "Source",
                            "Destination"
                          ],
                          "x-ms-enum": {
                            "name": "MigrationClusterRole",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "zoneStatus": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Indicates whether the cluster is zonal or non-zonal.",
                      "enum": [
                        "NonZonal",
                        "ZonalInconsistency",
                        "Zonal"
                      ],
                      "x-ms-enum": {
                        "name": "ZoneStatus",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "readOnly": true,
                  "description": "A unique read-only string that changes whenever the resource is updated."
                }
              },
              "description": "Class representing a Kusto cluster."
            },
            "description": "The Kusto cluster parameters supplied to the CreateOrUpdate operation."
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfMatch",
            "description": "The ETag of the cluster. Omit this value to always overwrite the current cluster. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes."
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfNoneMatch",
            "description": "Set to '*' to allow a new cluster to be created, but to prevent updating an existing cluster. Other values will result in a 412 Pre-condition Failed response."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the Cluster.",
            "schema": {
              "type": "object",
              "required": [
                "sku"
              ],
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "sku": {
                  "description": "The SKU of the cluster.",
                  "type": "object",
                  "required": [
                    "name",
                    "tier"
                  ],
                  "properties": {
                    "name": {
                      "description": "SKU name.",
                      "type": "string",
                      "enum": [
                        "Dev(No SLA)_Standard_D11_v2",
                        "Dev(No SLA)_Standard_E2a_v4",
                        "Standard_D11_v2",
                        "Standard_D12_v2",
                        "Standard_D13_v2",
                        "Standard_D14_v2",
                        "Standard_D32d_v4",
                        "Standard_D16d_v5",
                        "Standard_D32d_v5",
                        "Standard_DS13_v2+1TB_PS",
                        "Standard_DS13_v2+2TB_PS",
                        "Standard_DS14_v2+3TB_PS",
                        "Standard_DS14_v2+4TB_PS",
                        "Standard_L4s",
                        "Standard_L8s",
                        "Standard_L16s",
                        "Standard_L8s_v2",
                        "Standard_L16s_v2",
                        "Standard_L8s_v3",
                        "Standard_L16s_v3",
                        "Standard_L32s_v3",
                        "Standard_L8as_v3",
                        "Standard_L16as_v3",
                        "Standard_L32as_v3",
                        "Standard_E64i_v3",
                        "Standard_E80ids_v4",
                        "Standard_E2a_v4",
                        "Standard_E4a_v4",
                        "Standard_E8a_v4",
                        "Standard_E16a_v4",
                        "Standard_E8as_v4+1TB_PS",
                        "Standard_E8as_v4+2TB_PS",
                        "Standard_E16as_v4+3TB_PS",
                        "Standard_E16as_v4+4TB_PS",
                        "Standard_E8as_v5+1TB_PS",
                        "Standard_E8as_v5+2TB_PS",
                        "Standard_E16as_v5+3TB_PS",
                        "Standard_E16as_v5+4TB_PS",
                        "Standard_E2ads_v5",
                        "Standard_E4ads_v5",
                        "Standard_E8ads_v5",
                        "Standard_E16ads_v5",
                        "Standard_EC8as_v5+1TB_PS",
                        "Standard_EC8as_v5+2TB_PS",
                        "Standard_EC16as_v5+3TB_PS",
                        "Standard_EC16as_v5+4TB_PS",
                        "Standard_EC8ads_v5",
                        "Standard_EC16ads_v5",
                        "Standard_E8s_v4+1TB_PS",
                        "Standard_E8s_v4+2TB_PS",
                        "Standard_E16s_v4+3TB_PS",
                        "Standard_E16s_v4+4TB_PS",
                        "Standard_E8s_v5+1TB_PS",
                        "Standard_E8s_v5+2TB_PS",
                        "Standard_E16s_v5+3TB_PS",
                        "Standard_E16s_v5+4TB_PS",
                        "Standard_E2d_v4",
                        "Standard_E4d_v4",
                        "Standard_E8d_v4",
                        "Standard_E16d_v4",
                        "Standard_E2d_v5",
                        "Standard_E4d_v5",
                        "Standard_E8d_v5",
                        "Standard_E16d_v5"
                      ],
                      "x-ms-enum": {
                        "name": "AzureSkuName",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "description": "The number of instances of the cluster.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "tier": {
                      "description": "SKU tier.",
                      "type": "string",
                      "enum": [
                        "Basic",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "AzureSkuTier",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "zones": {
                  "description": "The availability zones of the cluster.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "identity": {
                  "description": "The identity of the cluster, if configured.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID of resource identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID of resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove all identities.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal id of user assigned identity."
                          },
                          "clientId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The client id of user assigned identity."
                          }
                        }
                      },
                      "description": "The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The cluster properties.",
                  "type": "object",
                  "properties": {
                    "state": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The state of the resource.",
                      "enum": [
                        "Creating",
                        "Unavailable",
                        "Running",
                        "Deleting",
                        "Deleted",
                        "Stopping",
                        "Stopped",
                        "Starting",
                        "Updating",
                        "Migrated"
                      ],
                      "x-ms-enum": {
                        "name": "State",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "uri": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The cluster URI."
                    },
                    "dataIngestionUri": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The cluster data ingestion URI."
                    },
                    "stateReason": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The reason for the cluster's current state."
                    },
                    "trustedExternalTenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "GUID representing an external tenant."
                          }
                        },
                        "description": "Represents a tenant ID that is trusted by the cluster."
                      },
                      "description": "The cluster's external tenants."
                    },
                    "optimizedAutoscale": {
                      "type": "object",
                      "description": "Optimized auto scale definition.",
                      "required": [
                        "version",
                        "isEnabled",
                        "minimum",
                        "maximum"
                      ],
                      "properties": {
                        "version": {
                          "description": "The version of the template defined, for instance 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "isEnabled": {
                          "description": "A boolean value that indicate if the optimized autoscale feature is enabled or not.",
                          "type": "boolean"
                        },
                        "minimum": {
                          "description": "Minimum allowed instances count.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "maximum": {
                          "description": "Maximum allowed instances count.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "enableDiskEncryption": {
                      "description": "A boolean value that indicates if the cluster's disks are encrypted.",
                      "default": false,
                      "type": "boolean"
                    },
                    "enableStreamingIngest": {
                      "description": "A boolean value that indicates if the streaming ingest is enabled.",
                      "default": false,
                      "type": "boolean"
                    },
                    "virtualNetworkConfiguration": {
                      "type": "object",
                      "description": "Virtual network definition.",
                      "required": [
                        "subnetId",
                        "enginePublicIpId",
                        "dataManagementPublicIpId"
                      ],
                      "properties": {
                        "subnetId": {
                          "description": "The subnet resource id.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "enginePublicIpId": {
                          "description": "Engine service's public IP address resource id.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "dataManagementPublicIpId": {
                          "description": "Data management's service public IP address resource id.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "state": {
                          "type": "string",
                          "description": "When enabled, the cluster is deployed into the configured subnet, when disabled it will be removed from the subnet.",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "VnetState",
                            "modelAsString": true
                          },
                          "default": "Enabled"
                        }
                      }
                    },
                    "keyVaultProperties": {
                      "type": "object",
                      "description": "KeyVault properties for the cluster encryption.",
                      "properties": {
                        "keyName": {
                          "type": "string",
                          "description": "The name of the key vault key.",
                          "x-ms-client-name": "KeyName"
                        },
                        "keyVersion": {
                          "type": "string",
                          "description": "The version of the key vault key.",
                          "x-ms-client-name": "KeyVersion"
                        },
                        "keyVaultUri": {
                          "type": "string",
                          "description": "The Uri of the key vault.",
                          "x-ms-client-name": "KeyVaultUri"
                        },
                        "userIdentity": {
                          "type": "string",
                          "description": "The user assigned identity (ARM resource id) that has access to the key.",
                          "x-ms-client-name": "UserIdentity"
                        }
                      }
                    },
                    "enablePurge": {
                      "description": "A boolean value that indicates if the purge operations are enabled.",
                      "default": false,
                      "type": "boolean"
                    },
                    "languageExtensions": {
                      "type": "object",
                      "description": "List of the cluster's language extensions.",
                      "properties": {
                        "value": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The language extension object.",
                            "properties": {
                              "languageExtensionName": {
                                "description": "The language extension name.",
                                "type": "string",
                                "enum": [
                                  "PYTHON",
                                  "R"
                                ],
                                "x-ms-enum": {
                                  "name": "languageExtensionName",
                                  "modelAsString": true
                                }
                              },
                              "languageExtensionImageName": {
                                "description": "The language extension image name.",
                                "type": "string",
                                "enum": [
                                  "R",
                                  "Python3_6_5",
                                  "Python3_10_8",
                                  "Python3_10_8_DL",
                                  "PythonCustomImage",
                                  "Python3_11_7",
                                  "Python3_11_7_DL"
                                ],
                                "x-ms-enum": {
                                  "name": "languageExtensionImageName",
                                  "modelAsString": true
                                }
                              },
                              "languageExtensionCustomImageName": {
                                "description": "The language extension custom image name.",
                                "type": "string"
                              }
                            }
                          },
                          "description": "The list of language extensions."
                        }
                      }
                    },
                    "enableDoubleEncryption": {
                      "description": "A boolean value that indicates if double encryption is enabled.",
                      "default": false,
                      "type": "boolean"
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "description": "Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "allowedIpRangeList": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The list of ips in the format of CIDR allowed to connect to the cluster."
                    },
                    "engineType": {
                      "type": "string",
                      "description": "The engine type",
                      "enum": [
                        "V2",
                        "V3"
                      ],
                      "x-ms-enum": {
                        "name": "EngineType",
                        "modelAsString": true
                      },
                      "default": "V3"
                    },
                    "acceptedAudiences": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "GUID or valid URL representing an accepted audience."
                          }
                        },
                        "description": "Represents an accepted audience trusted by the cluster."
                      },
                      "description": "The cluster's accepted audiences."
                    },
                    "enableAutoStop": {
                      "description": "A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days).",
                      "default": true,
                      "type": "boolean"
                    },
                    "restrictOutboundNetworkAccess": {
                      "description": "Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ClusterNetworkAccessFlag",
                        "modelAsString": true
                      },
                      "default": "Disabled"
                    },
                    "allowedFqdnList": {
                      "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.",
                      "type": "array",
                      "items": {
                        "description": "FQDN to be allowed for egress. Example: my-storageaccount.blob.core.windows.net",
                        "type": "string"
                      }
                    },
                    "calloutPolicies": {
                      "description": "List of callout policies for egress from Cluster.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "calloutUriRegex": {
                            "type": "string",
                            "description": "Regular expression or FQDN pattern for the callout URI."
                          },
                          "calloutType": {
                            "type": "string",
                            "enum": [
                              "kusto",
                              "sql",
                              "cosmosdb",
                              "external_data",
                              "azure_digital_twins",
                              "sandbox_artifacts",
                              "webapi",
                              "mysql",
                              "postgresql",
                              "genevametrics",
                              "azure_openai"
                            ],
                            "x-ms-enum": {
                              "name": "calloutType",
                              "modelAsString": true
                            },
                            "description": "Type of the callout service, specifying the kind of external resource or service being accessed."
                          },
                          "outboundAccess": {
                            "type": "string",
                            "enum": [
                              "Allow",
                              "Deny"
                            ],
                            "x-ms-enum": {
                              "name": "outboundAccess",
                              "modelAsString": true
                            },
                            "description": "Indicates whether outbound access is permitted for the specified URI pattern."
                          },
                          "calloutId": {
                            "type": "string",
                            "description": "Unique identifier for the callout configuration.",
                            "readOnly": true
                          }
                        },
                        "description": "Configuration for external callout policies, including URI patterns, access types, and service types."
                      }
                    },
                    "publicIPType": {
                      "description": "Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6)",
                      "enum": [
                        "IPv4",
                        "DualStack"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "publicIPType",
                        "modelAsString": true
                      },
                      "default": "IPv4"
                    },
                    "virtualClusterGraduationProperties": {
                      "description": "Virtual Cluster graduation properties",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "items": {
                        "description": "A private endpoint connection",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "required": [
                              "privateLinkServiceConnectionState"
                            ],
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "Private endpoint which the connection belongs to.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Resource id of the private endpoint.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection State of the Private Endpoint Connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "description": "The private link service connection status."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The private link service connection description."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                                    "readOnly": true
                                  }
                                }
                              },
                              "groupId": {
                                "type": "string",
                                "description": "Group id of the private endpoint.",
                                "readOnly": true
                              },
                              "provisioningState": {
                                "type": "string",
                                "description": "Provisioning state of the private endpoint.",
                                "readOnly": true
                              }
                            }
                          },
                          "systemData": {
                            "readOnly": true,
                            "description": "Metadata pertaining to creation and last modification of the resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true,
                      "description": "A list of private endpoint connections."
                    },
                    "migrationCluster": {
                      "description": "Properties of the peer cluster involved in a migration to/from this cluster.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The resource ID of the cluster.",
                          "readOnly": true
                        },
                        "uri": {
                          "type": "string",
                          "description": "The public URL of the cluster.",
                          "readOnly": true
                        },
                        "dataIngestionUri": {
                          "type": "string",
                          "description": "The public data ingestion URL of the cluster.",
                          "readOnly": true
                        },
                        "role": {
                          "type": "string",
                          "description": "The role of the cluster in the migration process.",
                          "readOnly": true,
                          "enum": [
                            "Source",
                            "Destination"
                          ],
                          "x-ms-enum": {
                            "name": "MigrationClusterRole",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "zoneStatus": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Indicates whether the cluster is zonal or non-zonal.",
                      "enum": [
                        "NonZonal",
                        "ZonalInconsistency",
                        "Zonal"
                      ],
                      "x-ms-enum": {
                        "name": "ZoneStatus",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "readOnly": true,
                  "description": "A unique read-only string that changes whenever the resource is updated."
                }
              },
              "description": "Class representing a Kusto cluster."
            }
          },
          "201": {
            "description": "Successfully created the cluster.",
            "schema": {
              "type": "object",
              "required": [
                "sku"
              ],
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "sku": {
                  "description": "The SKU of the cluster.",
                  "type": "object",
                  "required": [
                    "name",
                    "tier"
                  ],
                  "properties": {
                    "name": {
                      "description": "SKU name.",
                      "type": "string",
                      "enum": [
                        "Dev(No SLA)_Standard_D11_v2",
                        "Dev(No SLA)_Standard_E2a_v4",
                        "Standard_D11_v2",
                        "Standard_D12_v2",
                        "Standard_D13_v2",
                        "Standard_D14_v2",
                        "Standard_D32d_v4",
                        "Standard_D16d_v5",
                        "Standard_D32d_v5",
                        "Standard_DS13_v2+1TB_PS",
                        "Standard_DS13_v2+2TB_PS",
                        "Standard_DS14_v2+3TB_PS",
                        "Standard_DS14_v2+4TB_PS",
                        "Standard_L4s",
                        "Standard_L8s",
                        "Standard_L16s",
                        "Standard_L8s_v2",
                        "Standard_L16s_v2",
                        "Standard_L8s_v3",
                        "Standard_L16s_v3",
                        "Standard_L32s_v3",
                        "Standard_L8as_v3",
                        "Standard_L16as_v3",
                        "Standard_L32as_v3",
                        "Standard_E64i_v3",
                        "Standard_E80ids_v4",
                        "Standard_E2a_v4",
                        "Standard_E4a_v4",
                        "Standard_E8a_v4",
                        "Standard_E16a_v4",
                        "Standard_E8as_v4+1TB_PS",
                        "Standard_E8as_v4+2TB_PS",
                        "Standard_E16as_v4+3TB_PS",
                        "Standard_E16as_v4+4TB_PS",
                        "Standard_E8as_v5+1TB_PS",
                        "Standard_E8as_v5+2TB_PS",
                        "Standard_E16as_v5+3TB_PS",
                        "Standard_E16as_v5+4TB_PS",
                        "Standard_E2ads_v5",
                        "Standard_E4ads_v5",
                        "Standard_E8ads_v5",
                        "Standard_E16ads_v5",
                        "Standard_EC8as_v5+1TB_PS",
                        "Standard_EC8as_v5+2TB_PS",
                        "Standard_EC16as_v5+3TB_PS",
                        "Standard_EC16as_v5+4TB_PS",
                        "Standard_EC8ads_v5",
                        "Standard_EC16ads_v5",
                        "Standard_E8s_v4+1TB_PS",
                        "Standard_E8s_v4+2TB_PS",
                        "Standard_E16s_v4+3TB_PS",
                        "Standard_E16s_v4+4TB_PS",
                        "Standard_E8s_v5+1TB_PS",
                        "Standard_E8s_v5+2TB_PS",
                        "Standard_E16s_v5+3TB_PS",
                        "Standard_E16s_v5+4TB_PS",
                        "Standard_E2d_v4",
                        "Standard_E4d_v4",
                        "Standard_E8d_v4",
                        "Standard_E16d_v4",
                        "Standard_E2d_v5",
                        "Standard_E4d_v5",
                        "Standard_E8d_v5",
                        "Standard_E16d_v5"
                      ],
                      "x-ms-enum": {
                        "name": "AzureSkuName",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "description": "The number of instances of the cluster.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "tier": {
                      "description": "SKU tier.",
                      "type": "string",
                      "enum": [
                        "Basic",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "AzureSkuTier",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "zones": {
                  "description": "The availability zones of the cluster.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "identity": {
                  "description": "The identity of the cluster, if configured.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID of resource identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID of resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove all identities.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal id of user assigned identity."
                          },
                          "clientId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The client id of user assigned identity."
                          }
                        }
                      },
                      "description": "The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The cluster properties.",
                  "type": "object",
                  "properties": {
                    "state": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The state of the resource.",
                      "enum": [
                        "Creating",
                        "Unavailable",
                        "Running",
                        "Deleting",
                        "Deleted",
                        "Stopping",
                        "Stopped",
                        "Starting",
                        "Updating",
                        "Migrated"
                      ],
                      "x-ms-enum": {
                        "name": "State",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "uri": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The cluster URI."
                    },
                    "dataIngestionUri": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The cluster data ingestion URI."
                    },
                    "stateReason": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The reason for the cluster's current state."
                    },
                    "trustedExternalTenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "GUID representing an external tenant."
                          }
                        },
                        "description": "Represents a tenant ID that is trusted by the cluster."
                      },
                      "description": "The cluster's external tenants."
                    },
                    "optimizedAutoscale": {
                      "type": "object",
                      "description": "Optimized auto scale definition.",
                      "required": [
                        "version",
                        "isEnabled",
                        "minimum",
                        "maximum"
                      ],
                      "properties": {
                        "version": {
                          "description": "The version of the template defined, for instance 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "isEnabled": {
                          "description": "A boolean value that indicate if the optimized autoscale feature is enabled or not.",
                          "type": "boolean"
                        },
                        "minimum": {
                          "description": "Minimum allowed instances count.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "maximum": {
                          "description": "Maximum allowed instances count.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "enableDiskEncryption": {
                      "description": "A boolean value that indicates if the cluster's disks are encrypted.",
                      "default": false,
                      "type": "boolean"
                    },
                    "enableStreamingIngest": {
                      "description": "A boolean value that indicates if the streaming ingest is enabled.",
                      "default": false,
                      "type": "boolean"
                    },
                    "virtualNetworkConfiguration": {
                      "type": "object",
                      "description": "Virtual network definition.",
                      "required": [
                        "subnetId",
                        "enginePublicIpId",
                        "dataManagementPublicIpId"
                      ],
                      "properties": {
                        "subnetId": {
                          "description": "The subnet resource id.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "enginePublicIpId": {
                          "description": "Engine service's public IP address resource id.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "dataManagementPublicIpId": {
                          "description": "Data management's service public IP address resource id.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "state": {
                          "type": "string",
                          "description": "When enabled, the cluster is deployed into the configured subnet, when disabled it will be removed from the subnet.",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "VnetState",
                            "modelAsString": true
                          },
                          "default": "Enabled"
                        }
                      }
                    },
                    "keyVaultProperties": {
                      "type": "object",
                      "description": "KeyVault properties for the cluster encryption.",
                      "properties": {
                        "keyName": {
                          "type": "string",
                          "description": "The name of the key vault key.",
                          "x-ms-client-name": "KeyName"
                        },
                        "keyVersion": {
                          "type": "string",
                          "description": "The version of the key vault key.",
                          "x-ms-client-name": "KeyVersion"
                        },
                        "keyVaultUri": {
                          "type": "string",
                          "description": "The Uri of the key vault.",
                          "x-ms-client-name": "KeyVaultUri"
                        },
                        "userIdentity": {
                          "type": "string",
                          "description": "The user assigned identity (ARM resource id) that has access to the key.",
                          "x-ms-client-name": "UserIdentity"
                        }
                      }
                    },
                    "enablePurge": {
                      "description": "A boolean value that indicates if the purge operations are enabled.",
                      "default": false,
                      "type": "boolean"
                    },
                    "languageExtensions": {
                      "type": "object",
                      "description": "List of the cluster's language extensions.",
                      "properties": {
                        "value": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The language extension object.",
                            "properties": {
                              "languageExtensionName": {
                                "description": "The language extension name.",
                                "type": "string",
                                "enum": [
                                  "PYTHON",
                                  "R"
                                ],
                                "x-ms-enum": {
                                  "name": "languageExtensionName",
                                  "modelAsString": true
                                }
                              },
                              "languageExtensionImageName": {
                                "description": "The language extension image name.",
                                "type": "string",
                                "enum": [
                                  "R",
                                  "Python3_6_5",
                                  "Python3_10_8",
                                  "Python3_10_8_DL",
                                  "PythonCustomImage",
                                  "Python3_11_7",
                                  "Python3_11_7_DL"
                                ],
                                "x-ms-enum": {
                                  "name": "languageExtensionImageName",
                                  "modelAsString": true
                                }
                              },
                              "languageExtensionCustomImageName": {
                                "description": "The language extension custom image name.",
                                "type": "string"
                              }
                            }
                          },
                          "description": "The list of language extensions."
                        }
                      }
                    },
                    "enableDoubleEncryption": {
                      "description": "A boolean value that indicates if double encryption is enabled.",
                      "default": false,
                      "type": "boolean"
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "description": "Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "allowedIpRangeList": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The list of ips in the format of CIDR allowed to connect to the cluster."
                    },
                    "engineType": {
                      "type": "string",
                      "description": "The engine type",
                      "enum": [
                        "V2",
                        "V3"
                      ],
                      "x-ms-enum": {
                        "name": "EngineType",
                        "modelAsString": true
                      },
                      "default": "V3"
                    },
                    "acceptedAudiences": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "GUID or valid URL representing an accepted audience."
                          }
                        },
                        "description": "Represents an accepted audience trusted by the cluster."
                      },
                      "description": "The cluster's accepted audiences."
                    },
                    "enableAutoStop": {
                      "description": "A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days).",
                      "default": true,
                      "type": "boolean"
                    },
                    "restrictOutboundNetworkAccess": {
                      "description": "Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ClusterNetworkAccessFlag",
                        "modelAsString": true
                      },
                      "default": "Disabled"
                    },
                    "allowedFqdnList": {
                      "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.",
                      "type": "array",
                      "items": {
                        "description": "FQDN to be allowed for egress. Example: my-storageaccount.blob.core.windows.net",
                        "type": "string"
                      }
                    },
                    "calloutPolicies": {
                      "description": "List of callout policies for egress from Cluster.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "calloutUriRegex": {
                            "type": "string",
                            "description": "Regular expression or FQDN pattern for the callout URI."
                          },
                          "calloutType": {
                            "type": "string",
                            "enum": [
                              "kusto",
                              "sql",
                              "cosmosdb",
                              "external_data",
                              "azure_digital_twins",
                              "sandbox_artifacts",
                              "webapi",
                              "mysql",
                              "postgresql",
                              "genevametrics",
                              "azure_openai"
                            ],
                            "x-ms-enum": {
                              "name": "calloutType",
                              "modelAsString": true
                            },
                            "description": "Type of the callout service, specifying the kind of external resource or service being accessed."
                          },
                          "outboundAccess": {
                            "type": "string",
                            "enum": [
                              "Allow",
                              "Deny"
                            ],
                            "x-ms-enum": {
                              "name": "outboundAccess",
                              "modelAsString": true
                            },
                            "description": "Indicates whether outbound access is permitted for the specified URI pattern."
                          },
                          "calloutId": {
                            "type": "string",
                            "description": "Unique identifier for the callout configuration.",
                            "readOnly": true
                          }
                        },
                        "description": "Configuration for external callout policies, including URI patterns, access types, and service types."
                      }
                    },
                    "publicIPType": {
                      "description": "Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6)",
                      "enum": [
                        "IPv4",
                        "DualStack"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "publicIPType",
                        "modelAsString": true
                      },
                      "default": "IPv4"
                    },
                    "virtualClusterGraduationProperties": {
                      "description": "Virtual Cluster graduation properties",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "items": {
                        "description": "A private endpoint connection",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "required": [
                              "privateLinkServiceConnectionState"
                            ],
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "Private endpoint which the connection belongs to.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Resource id of the private endpoint.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection State of the Private Endpoint Connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "description": "The private link service connection status."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The private link service connection description."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                                    "readOnly": true
                                  }
                                }
                              },
                              "groupId": {
                                "type": "string",
                                "description": "Group id of the private endpoint.",
                                "readOnly": true
                              },
                              "provisioningState": {
                                "type": "string",
                                "description": "Provisioning state of the private endpoint.",
                                "readOnly": true
                              }
                            }
                          },
                          "systemData": {
                            "readOnly": true,
                            "description": "Metadata pertaining to creation and last modification of the resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true,
                      "description": "A list of private endpoint connections."
                    },
                    "migrationCluster": {
                      "description": "Properties of the peer cluster involved in a migration to/from this cluster.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The resource ID of the cluster.",
                          "readOnly": true
                        },
                        "uri": {
                          "type": "string",
                          "description": "The public URL of the cluster.",
                          "readOnly": true
                        },
                        "dataIngestionUri": {
                          "type": "string",
                          "description": "The public data ingestion URL of the cluster.",
                          "readOnly": true
                        },
                        "role": {
                          "type": "string",
                          "description": "The role of the cluster in the migration process.",
                          "readOnly": true,
                          "enum": [
                            "Source",
                            "Destination"
                          ],
                          "x-ms-enum": {
                            "name": "MigrationClusterRole",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "zoneStatus": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Indicates whether the cluster is zonal or non-zonal.",
                      "enum": [
                        "NonZonal",
                        "ZonalInconsistency",
                        "Zonal"
                      ],
                      "x-ms-enum": {
                        "name": "ZoneStatus",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "readOnly": true,
                  "description": "A unique read-only string that changes whenever the resource is updated."
                }
              },
              "description": "Class representing a Kusto cluster."
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_Update",
        "description": "Update a Kusto cluster.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "sku": {
                  "description": "The SKU of the cluster.",
                  "type": "object",
                  "required": [
                    "name",
                    "tier"
                  ],
                  "properties": {
                    "name": {
                      "description": "SKU name.",
                      "type": "string",
                      "enum": [
                        "Dev(No SLA)_Standard_D11_v2",
                        "Dev(No SLA)_Standard_E2a_v4",
                        "Standard_D11_v2",
                        "Standard_D12_v2",
                        "Standard_D13_v2",
                        "Standard_D14_v2",
                        "Standard_D32d_v4",
                        "Standard_D16d_v5",
                        "Standard_D32d_v5",
                        "Standard_DS13_v2+1TB_PS",
                        "Standard_DS13_v2+2TB_PS",
                        "Standard_DS14_v2+3TB_PS",
                        "Standard_DS14_v2+4TB_PS",
                        "Standard_L4s",
                        "Standard_L8s",
                        "Standard_L16s",
                        "Standard_L8s_v2",
                        "Standard_L16s_v2",
                        "Standard_L8s_v3",
                        "Standard_L16s_v3",
                        "Standard_L32s_v3",
                        "Standard_L8as_v3",
                        "Standard_L16as_v3",
                        "Standard_L32as_v3",
                        "Standard_E64i_v3",
                        "Standard_E80ids_v4",
                        "Standard_E2a_v4",
                        "Standard_E4a_v4",
                        "Standard_E8a_v4",
                        "Standard_E16a_v4",
                        "Standard_E8as_v4+1TB_PS",
                        "Standard_E8as_v4+2TB_PS",
                        "Standard_E16as_v4+3TB_PS",
                        "Standard_E16as_v4+4TB_PS",
                        "Standard_E8as_v5+1TB_PS",
                        "Standard_E8as_v5+2TB_PS",
                        "Standard_E16as_v5+3TB_PS",
                        "Standard_E16as_v5+4TB_PS",
                        "Standard_E2ads_v5",
                        "Standard_E4ads_v5",
                        "Standard_E8ads_v5",
                        "Standard_E16ads_v5",
                        "Standard_EC8as_v5+1TB_PS",
                        "Standard_EC8as_v5+2TB_PS",
                        "Standard_EC16as_v5+3TB_PS",
                        "Standard_EC16as_v5+4TB_PS",
                        "Standard_EC8ads_v5",
                        "Standard_EC16ads_v5",
                        "Standard_E8s_v4+1TB_PS",
                        "Standard_E8s_v4+2TB_PS",
                        "Standard_E16s_v4+3TB_PS",
                        "Standard_E16s_v4+4TB_PS",
                        "Standard_E8s_v5+1TB_PS",
                        "Standard_E8s_v5+2TB_PS",
                        "Standard_E16s_v5+3TB_PS",
                        "Standard_E16s_v5+4TB_PS",
                        "Standard_E2d_v4",
                        "Standard_E4d_v4",
                        "Standard_E8d_v4",
                        "Standard_E16d_v4",
                        "Standard_E2d_v5",
                        "Standard_E4d_v5",
                        "Standard_E8d_v5",
                        "Standard_E16d_v5"
                      ],
                      "x-ms-enum": {
                        "name": "AzureSkuName",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "description": "The number of instances of the cluster.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "tier": {
                      "description": "SKU tier.",
                      "type": "string",
                      "enum": [
                        "Basic",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "AzureSkuTier",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "zones": {
                  "description": "The availability zones of the cluster.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "identity": {
                  "description": "The identity of the cluster, if configured.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID of resource identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID of resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove all identities.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal id of user assigned identity."
                          },
                          "clientId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The client id of user assigned identity."
                          }
                        }
                      },
                      "description": "The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The cluster properties.",
                  "type": "object",
                  "properties": {
                    "state": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The state of the resource.",
                      "enum": [
                        "Creating",
                        "Unavailable",
                        "Running",
                        "Deleting",
                        "Deleted",
                        "Stopping",
                        "Stopped",
                        "Starting",
                        "Updating",
                        "Migrated"
                      ],
                      "x-ms-enum": {
                        "name": "State",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "uri": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The cluster URI."
                    },
                    "dataIngestionUri": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The cluster data ingestion URI."
                    },
                    "stateReason": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The reason for the cluster's current state."
                    },
                    "trustedExternalTenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "GUID representing an external tenant."
                          }
                        },
                        "description": "Represents a tenant ID that is trusted by the cluster."
                      },
                      "description": "The cluster's external tenants."
                    },
                    "optimizedAutoscale": {
                      "type": "object",
                      "description": "Optimized auto scale definition.",
                      "required": [
                        "version",
                        "isEnabled",
                        "minimum",
                        "maximum"
                      ],
                      "properties": {
                        "version": {
                          "description": "The version of the template defined, for instance 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "isEnabled": {
                          "description": "A boolean value that indicate if the optimized autoscale feature is enabled or not.",
                          "type": "boolean"
                        },
                        "minimum": {
                          "description": "Minimum allowed instances count.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "maximum": {
                          "description": "Maximum allowed instances count.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "enableDiskEncryption": {
                      "description": "A boolean value that indicates if the cluster's disks are encrypted.",
                      "default": false,
                      "type": "boolean"
                    },
                    "enableStreamingIngest": {
                      "description": "A boolean value that indicates if the streaming ingest is enabled.",
                      "default": false,
                      "type": "boolean"
                    },
                    "virtualNetworkConfiguration": {
                      "type": "object",
                      "description": "Virtual network definition.",
                      "required": [
                        "subnetId",
                        "enginePublicIpId",
                        "dataManagementPublicIpId"
                      ],
                      "properties": {
                        "subnetId": {
                          "description": "The subnet resource id.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "enginePublicIpId": {
                          "description": "Engine service's public IP address resource id.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "dataManagementPublicIpId": {
                          "description": "Data management's service public IP address resource id.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "state": {
                          "type": "string",
                          "description": "When enabled, the cluster is deployed into the configured subnet, when disabled it will be removed from the subnet.",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "VnetState",
                            "modelAsString": true
                          },
                          "default": "Enabled"
                        }
                      }
                    },
                    "keyVaultProperties": {
                      "type": "object",
                      "description": "KeyVault properties for the cluster encryption.",
                      "properties": {
                        "keyName": {
                          "type": "string",
                          "description": "The name of the key vault key.",
                          "x-ms-client-name": "KeyName"
                        },
                        "keyVersion": {
                          "type": "string",
                          "description": "The version of the key vault key.",
                          "x-ms-client-name": "KeyVersion"
                        },
                        "keyVaultUri": {
                          "type": "string",
                          "description": "The Uri of the key vault.",
                          "x-ms-client-name": "KeyVaultUri"
                        },
                        "userIdentity": {
                          "type": "string",
                          "description": "The user assigned identity (ARM resource id) that has access to the key.",
                          "x-ms-client-name": "UserIdentity"
                        }
                      }
                    },
                    "enablePurge": {
                      "description": "A boolean value that indicates if the purge operations are enabled.",
                      "default": false,
                      "type": "boolean"
                    },
                    "languageExtensions": {
                      "type": "object",
                      "description": "List of the cluster's language extensions.",
                      "properties": {
                        "value": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The language extension object.",
                            "properties": {
                              "languageExtensionName": {
                                "description": "The language extension name.",
                                "type": "string",
                                "enum": [
                                  "PYTHON",
                                  "R"
                                ],
                                "x-ms-enum": {
                                  "name": "languageExtensionName",
                                  "modelAsString": true
                                }
                              },
                              "languageExtensionImageName": {
                                "description": "The language extension image name.",
                                "type": "string",
                                "enum": [
                                  "R",
                                  "Python3_6_5",
                                  "Python3_10_8",
                                  "Python3_10_8_DL",
                                  "PythonCustomImage",
                                  "Python3_11_7",
                                  "Python3_11_7_DL"
                                ],
                                "x-ms-enum": {
                                  "name": "languageExtensionImageName",
                                  "modelAsString": true
                                }
                              },
                              "languageExtensionCustomImageName": {
                                "description": "The language extension custom image name.",
                                "type": "string"
                              }
                            }
                          },
                          "description": "The list of language extensions."
                        }
                      }
                    },
                    "enableDoubleEncryption": {
                      "description": "A boolean value that indicates if double encryption is enabled.",
                      "default": false,
                      "type": "boolean"
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "description": "Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "allowedIpRangeList": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The list of ips in the format of CIDR allowed to connect to the cluster."
                    },
                    "engineType": {
                      "type": "string",
                      "description": "The engine type",
                      "enum": [
                        "V2",
                        "V3"
                      ],
                      "x-ms-enum": {
                        "name": "EngineType",
                        "modelAsString": true
                      },
                      "default": "V3"
                    },
                    "acceptedAudiences": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "GUID or valid URL representing an accepted audience."
                          }
                        },
                        "description": "Represents an accepted audience trusted by the cluster."
                      },
                      "description": "The cluster's accepted audiences."
                    },
                    "enableAutoStop": {
                      "description": "A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days).",
                      "default": true,
                      "type": "boolean"
                    },
                    "restrictOutboundNetworkAccess": {
                      "description": "Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ClusterNetworkAccessFlag",
                        "modelAsString": true
                      },
                      "default": "Disabled"
                    },
                    "allowedFqdnList": {
                      "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.",
                      "type": "array",
                      "items": {
                        "description": "FQDN to be allowed for egress. Example: my-storageaccount.blob.core.windows.net",
                        "type": "string"
                      }
                    },
                    "calloutPolicies": {
                      "description": "List of callout policies for egress from Cluster.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "calloutUriRegex": {
                            "type": "string",
                            "description": "Regular expression or FQDN pattern for the callout URI."
                          },
                          "calloutType": {
                            "type": "string",
                            "enum": [
                              "kusto",
                              "sql",
                              "cosmosdb",
                              "external_data",
                              "azure_digital_twins",
                              "sandbox_artifacts",
                              "webapi",
                              "mysql",
                              "postgresql",
                              "genevametrics",
                              "azure_openai"
                            ],
                            "x-ms-enum": {
                              "name": "calloutType",
                              "modelAsString": true
                            },
                            "description": "Type of the callout service, specifying the kind of external resource or service being accessed."
                          },
                          "outboundAccess": {
                            "type": "string",
                            "enum": [
                              "Allow",
                              "Deny"
                            ],
                            "x-ms-enum": {
                              "name": "outboundAccess",
                              "modelAsString": true
                            },
                            "description": "Indicates whether outbound access is permitted for the specified URI pattern."
                          },
                          "calloutId": {
                            "type": "string",
                            "description": "Unique identifier for the callout configuration.",
                            "readOnly": true
                          }
                        },
                        "description": "Configuration for external callout policies, including URI patterns, access types, and service types."
                      }
                    },
                    "publicIPType": {
                      "description": "Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6)",
                      "enum": [
                        "IPv4",
                        "DualStack"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "publicIPType",
                        "modelAsString": true
                      },
                      "default": "IPv4"
                    },
                    "virtualClusterGraduationProperties": {
                      "description": "Virtual Cluster graduation properties",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "items": {
                        "description": "A private endpoint connection",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "required": [
                              "privateLinkServiceConnectionState"
                            ],
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "Private endpoint which the connection belongs to.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Resource id of the private endpoint.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection State of the Private Endpoint Connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "description": "The private link service connection status."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The private link service connection description."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                                    "readOnly": true
                                  }
                                }
                              },
                              "groupId": {
                                "type": "string",
                                "description": "Group id of the private endpoint.",
                                "readOnly": true
                              },
                              "provisioningState": {
                                "type": "string",
                                "description": "Provisioning state of the private endpoint.",
                                "readOnly": true
                              }
                            }
                          },
                          "systemData": {
                            "readOnly": true,
                            "description": "Metadata pertaining to creation and last modification of the resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true,
                      "description": "A list of private endpoint connections."
                    },
                    "migrationCluster": {
                      "description": "Properties of the peer cluster involved in a migration to/from this cluster.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The resource ID of the cluster.",
                          "readOnly": true
                        },
                        "uri": {
                          "type": "string",
                          "description": "The public URL of the cluster.",
                          "readOnly": true
                        },
                        "dataIngestionUri": {
                          "type": "string",
                          "description": "The public data ingestion URL of the cluster.",
                          "readOnly": true
                        },
                        "role": {
                          "type": "string",
                          "description": "The role of the cluster in the migration process.",
                          "readOnly": true,
                          "enum": [
                            "Source",
                            "Destination"
                          ],
                          "x-ms-enum": {
                            "name": "MigrationClusterRole",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "zoneStatus": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Indicates whether the cluster is zonal or non-zonal.",
                      "enum": [
                        "NonZonal",
                        "ZonalInconsistency",
                        "Zonal"
                      ],
                      "x-ms-enum": {
                        "name": "ZoneStatus",
                        "modelAsString": true
                      }
                    }
                  }
                }
              },
              "description": "Class representing an update to a Kusto cluster."
            },
            "description": "The Kusto cluster parameters supplied to the Update operation."
          },
          {
            "name": "If-Match",
            "in": "header",
            "required": false,
            "type": "string",
            "x-ms-client-name": "IfMatch",
            "description": "The ETag of the cluster. Omit this value to always overwrite the current cluster. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the Cluster.",
            "schema": {
              "type": "object",
              "required": [
                "sku"
              ],
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "sku": {
                  "description": "The SKU of the cluster.",
                  "type": "object",
                  "required": [
                    "name",
                    "tier"
                  ],
                  "properties": {
                    "name": {
                      "description": "SKU name.",
                      "type": "string",
                      "enum": [
                        "Dev(No SLA)_Standard_D11_v2",
                        "Dev(No SLA)_Standard_E2a_v4",
                        "Standard_D11_v2",
                        "Standard_D12_v2",
                        "Standard_D13_v2",
                        "Standard_D14_v2",
                        "Standard_D32d_v4",
                        "Standard_D16d_v5",
                        "Standard_D32d_v5",
                        "Standard_DS13_v2+1TB_PS",
                        "Standard_DS13_v2+2TB_PS",
                        "Standard_DS14_v2+3TB_PS",
                        "Standard_DS14_v2+4TB_PS",
                        "Standard_L4s",
                        "Standard_L8s",
                        "Standard_L16s",
                        "Standard_L8s_v2",
                        "Standard_L16s_v2",
                        "Standard_L8s_v3",
                        "Standard_L16s_v3",
                        "Standard_L32s_v3",
                        "Standard_L8as_v3",
                        "Standard_L16as_v3",
                        "Standard_L32as_v3",
                        "Standard_E64i_v3",
                        "Standard_E80ids_v4",
                        "Standard_E2a_v4",
                        "Standard_E4a_v4",
                        "Standard_E8a_v4",
                        "Standard_E16a_v4",
                        "Standard_E8as_v4+1TB_PS",
                        "Standard_E8as_v4+2TB_PS",
                        "Standard_E16as_v4+3TB_PS",
                        "Standard_E16as_v4+4TB_PS",
                        "Standard_E8as_v5+1TB_PS",
                        "Standard_E8as_v5+2TB_PS",
                        "Standard_E16as_v5+3TB_PS",
                        "Standard_E16as_v5+4TB_PS",
                        "Standard_E2ads_v5",
                        "Standard_E4ads_v5",
                        "Standard_E8ads_v5",
                        "Standard_E16ads_v5",
                        "Standard_EC8as_v5+1TB_PS",
                        "Standard_EC8as_v5+2TB_PS",
                        "Standard_EC16as_v5+3TB_PS",
                        "Standard_EC16as_v5+4TB_PS",
                        "Standard_EC8ads_v5",
                        "Standard_EC16ads_v5",
                        "Standard_E8s_v4+1TB_PS",
                        "Standard_E8s_v4+2TB_PS",
                        "Standard_E16s_v4+3TB_PS",
                        "Standard_E16s_v4+4TB_PS",
                        "Standard_E8s_v5+1TB_PS",
                        "Standard_E8s_v5+2TB_PS",
                        "Standard_E16s_v5+3TB_PS",
                        "Standard_E16s_v5+4TB_PS",
                        "Standard_E2d_v4",
                        "Standard_E4d_v4",
                        "Standard_E8d_v4",
                        "Standard_E16d_v4",
                        "Standard_E2d_v5",
                        "Standard_E4d_v5",
                        "Standard_E8d_v5",
                        "Standard_E16d_v5"
                      ],
                      "x-ms-enum": {
                        "name": "AzureSkuName",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "description": "The number of instances of the cluster.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "tier": {
                      "description": "SKU tier.",
                      "type": "string",
                      "enum": [
                        "Basic",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "AzureSkuTier",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "zones": {
                  "description": "The availability zones of the cluster.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "identity": {
                  "description": "The identity of the cluster, if configured.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID of resource identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID of resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove all identities.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal id of user assigned identity."
                          },
                          "clientId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The client id of user assigned identity."
                          }
                        }
                      },
                      "description": "The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The cluster properties.",
                  "type": "object",
                  "properties": {
                    "state": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The state of the resource.",
                      "enum": [
                        "Creating",
                        "Unavailable",
                        "Running",
                        "Deleting",
                        "Deleted",
                        "Stopping",
                        "Stopped",
                        "Starting",
                        "Updating",
                        "Migrated"
                      ],
                      "x-ms-enum": {
                        "name": "State",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "uri": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The cluster URI."
                    },
                    "dataIngestionUri": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The cluster data ingestion URI."
                    },
                    "stateReason": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The reason for the cluster's current state."
                    },
                    "trustedExternalTenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "GUID representing an external tenant."
                          }
                        },
                        "description": "Represents a tenant ID that is trusted by the cluster."
                      },
                      "description": "The cluster's external tenants."
                    },
                    "optimizedAutoscale": {
                      "type": "object",
                      "description": "Optimized auto scale definition.",
                      "required": [
                        "version",
                        "isEnabled",
                        "minimum",
                        "maximum"
                      ],
                      "properties": {
                        "version": {
                          "description": "The version of the template defined, for instance 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "isEnabled": {
                          "description": "A boolean value that indicate if the optimized autoscale feature is enabled or not.",
                          "type": "boolean"
                        },
                        "minimum": {
                          "description": "Minimum allowed instances count.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "maximum": {
                          "description": "Maximum allowed instances count.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "enableDiskEncryption": {
                      "description": "A boolean value that indicates if the cluster's disks are encrypted.",
                      "default": false,
                      "type": "boolean"
                    },
                    "enableStreamingIngest": {
                      "description": "A boolean value that indicates if the streaming ingest is enabled.",
                      "default": false,
                      "type": "boolean"
                    },
                    "virtualNetworkConfiguration": {
                      "type": "object",
                      "description": "Virtual network definition.",
                      "required": [
                        "subnetId",
                        "enginePublicIpId",
                        "dataManagementPublicIpId"
                      ],
                      "properties": {
                        "subnetId": {
                          "description": "The subnet resource id.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "enginePublicIpId": {
                          "description": "Engine service's public IP address resource id.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "dataManagementPublicIpId": {
                          "description": "Data management's service public IP address resource id.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "state": {
                          "type": "string",
                          "description": "When enabled, the cluster is deployed into the configured subnet, when disabled it will be removed from the subnet.",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "VnetState",
                            "modelAsString": true
                          },
                          "default": "Enabled"
                        }
                      }
                    },
                    "keyVaultProperties": {
                      "type": "object",
                      "description": "KeyVault properties for the cluster encryption.",
                      "properties": {
                        "keyName": {
                          "type": "string",
                          "description": "The name of the key vault key.",
                          "x-ms-client-name": "KeyName"
                        },
                        "keyVersion": {
                          "type": "string",
                          "description": "The version of the key vault key.",
                          "x-ms-client-name": "KeyVersion"
                        },
                        "keyVaultUri": {
                          "type": "string",
                          "description": "The Uri of the key vault.",
                          "x-ms-client-name": "KeyVaultUri"
                        },
                        "userIdentity": {
                          "type": "string",
                          "description": "The user assigned identity (ARM resource id) that has access to the key.",
                          "x-ms-client-name": "UserIdentity"
                        }
                      }
                    },
                    "enablePurge": {
                      "description": "A boolean value that indicates if the purge operations are enabled.",
                      "default": false,
                      "type": "boolean"
                    },
                    "languageExtensions": {
                      "type": "object",
                      "description": "List of the cluster's language extensions.",
                      "properties": {
                        "value": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The language extension object.",
                            "properties": {
                              "languageExtensionName": {
                                "description": "The language extension name.",
                                "type": "string",
                                "enum": [
                                  "PYTHON",
                                  "R"
                                ],
                                "x-ms-enum": {
                                  "name": "languageExtensionName",
                                  "modelAsString": true
                                }
                              },
                              "languageExtensionImageName": {
                                "description": "The language extension image name.",
                                "type": "string",
                                "enum": [
                                  "R",
                                  "Python3_6_5",
                                  "Python3_10_8",
                                  "Python3_10_8_DL",
                                  "PythonCustomImage",
                                  "Python3_11_7",
                                  "Python3_11_7_DL"
                                ],
                                "x-ms-enum": {
                                  "name": "languageExtensionImageName",
                                  "modelAsString": true
                                }
                              },
                              "languageExtensionCustomImageName": {
                                "description": "The language extension custom image name.",
                                "type": "string"
                              }
                            }
                          },
                          "description": "The list of language extensions."
                        }
                      }
                    },
                    "enableDoubleEncryption": {
                      "description": "A boolean value that indicates if double encryption is enabled.",
                      "default": false,
                      "type": "boolean"
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "description": "Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "allowedIpRangeList": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The list of ips in the format of CIDR allowed to connect to the cluster."
                    },
                    "engineType": {
                      "type": "string",
                      "description": "The engine type",
                      "enum": [
                        "V2",
                        "V3"
                      ],
                      "x-ms-enum": {
                        "name": "EngineType",
                        "modelAsString": true
                      },
                      "default": "V3"
                    },
                    "acceptedAudiences": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "GUID or valid URL representing an accepted audience."
                          }
                        },
                        "description": "Represents an accepted audience trusted by the cluster."
                      },
                      "description": "The cluster's accepted audiences."
                    },
                    "enableAutoStop": {
                      "description": "A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days).",
                      "default": true,
                      "type": "boolean"
                    },
                    "restrictOutboundNetworkAccess": {
                      "description": "Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ClusterNetworkAccessFlag",
                        "modelAsString": true
                      },
                      "default": "Disabled"
                    },
                    "allowedFqdnList": {
                      "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.",
                      "type": "array",
                      "items": {
                        "description": "FQDN to be allowed for egress. Example: my-storageaccount.blob.core.windows.net",
                        "type": "string"
                      }
                    },
                    "calloutPolicies": {
                      "description": "List of callout policies for egress from Cluster.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "calloutUriRegex": {
                            "type": "string",
                            "description": "Regular expression or FQDN pattern for the callout URI."
                          },
                          "calloutType": {
                            "type": "string",
                            "enum": [
                              "kusto",
                              "sql",
                              "cosmosdb",
                              "external_data",
                              "azure_digital_twins",
                              "sandbox_artifacts",
                              "webapi",
                              "mysql",
                              "postgresql",
                              "genevametrics",
                              "azure_openai"
                            ],
                            "x-ms-enum": {
                              "name": "calloutType",
                              "modelAsString": true
                            },
                            "description": "Type of the callout service, specifying the kind of external resource or service being accessed."
                          },
                          "outboundAccess": {
                            "type": "string",
                            "enum": [
                              "Allow",
                              "Deny"
                            ],
                            "x-ms-enum": {
                              "name": "outboundAccess",
                              "modelAsString": true
                            },
                            "description": "Indicates whether outbound access is permitted for the specified URI pattern."
                          },
                          "calloutId": {
                            "type": "string",
                            "description": "Unique identifier for the callout configuration.",
                            "readOnly": true
                          }
                        },
                        "description": "Configuration for external callout policies, including URI patterns, access types, and service types."
                      }
                    },
                    "publicIPType": {
                      "description": "Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6)",
                      "enum": [
                        "IPv4",
                        "DualStack"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "publicIPType",
                        "modelAsString": true
                      },
                      "default": "IPv4"
                    },
                    "virtualClusterGraduationProperties": {
                      "description": "Virtual Cluster graduation properties",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "items": {
                        "description": "A private endpoint connection",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "required": [
                              "privateLinkServiceConnectionState"
                            ],
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "Private endpoint which the connection belongs to.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Resource id of the private endpoint.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection State of the Private Endpoint Connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "description": "The private link service connection status."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The private link service connection description."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                                    "readOnly": true
                                  }
                                }
                              },
                              "groupId": {
                                "type": "string",
                                "description": "Group id of the private endpoint.",
                                "readOnly": true
                              },
                              "provisioningState": {
                                "type": "string",
                                "description": "Provisioning state of the private endpoint.",
                                "readOnly": true
                              }
                            }
                          },
                          "systemData": {
                            "readOnly": true,
                            "description": "Metadata pertaining to creation and last modification of the resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true,
                      "description": "A list of private endpoint connections."
                    },
                    "migrationCluster": {
                      "description": "Properties of the peer cluster involved in a migration to/from this cluster.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The resource ID of the cluster.",
                          "readOnly": true
                        },
                        "uri": {
                          "type": "string",
                          "description": "The public URL of the cluster.",
                          "readOnly": true
                        },
                        "dataIngestionUri": {
                          "type": "string",
                          "description": "The public data ingestion URL of the cluster.",
                          "readOnly": true
                        },
                        "role": {
                          "type": "string",
                          "description": "The role of the cluster in the migration process.",
                          "readOnly": true,
                          "enum": [
                            "Source",
                            "Destination"
                          ],
                          "x-ms-enum": {
                            "name": "MigrationClusterRole",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "zoneStatus": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Indicates whether the cluster is zonal or non-zonal.",
                      "enum": [
                        "NonZonal",
                        "ZonalInconsistency",
                        "Zonal"
                      ],
                      "x-ms-enum": {
                        "name": "ZoneStatus",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "readOnly": true,
                  "description": "A unique read-only string that changes whenever the resource is updated."
                }
              },
              "description": "Class representing a Kusto cluster."
            }
          },
          "201": {
            "description": "Successfully updated the cluster.",
            "headers": {
              "Location": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "sku"
              ],
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "sku": {
                  "description": "The SKU of the cluster.",
                  "type": "object",
                  "required": [
                    "name",
                    "tier"
                  ],
                  "properties": {
                    "name": {
                      "description": "SKU name.",
                      "type": "string",
                      "enum": [
                        "Dev(No SLA)_Standard_D11_v2",
                        "Dev(No SLA)_Standard_E2a_v4",
                        "Standard_D11_v2",
                        "Standard_D12_v2",
                        "Standard_D13_v2",
                        "Standard_D14_v2",
                        "Standard_D32d_v4",
                        "Standard_D16d_v5",
                        "Standard_D32d_v5",
                        "Standard_DS13_v2+1TB_PS",
                        "Standard_DS13_v2+2TB_PS",
                        "Standard_DS14_v2+3TB_PS",
                        "Standard_DS14_v2+4TB_PS",
                        "Standard_L4s",
                        "Standard_L8s",
                        "Standard_L16s",
                        "Standard_L8s_v2",
                        "Standard_L16s_v2",
                        "Standard_L8s_v3",
                        "Standard_L16s_v3",
                        "Standard_L32s_v3",
                        "Standard_L8as_v3",
                        "Standard_L16as_v3",
                        "Standard_L32as_v3",
                        "Standard_E64i_v3",
                        "Standard_E80ids_v4",
                        "Standard_E2a_v4",
                        "Standard_E4a_v4",
                        "Standard_E8a_v4",
                        "Standard_E16a_v4",
                        "Standard_E8as_v4+1TB_PS",
                        "Standard_E8as_v4+2TB_PS",
                        "Standard_E16as_v4+3TB_PS",
                        "Standard_E16as_v4+4TB_PS",
                        "Standard_E8as_v5+1TB_PS",
                        "Standard_E8as_v5+2TB_PS",
                        "Standard_E16as_v5+3TB_PS",
                        "Standard_E16as_v5+4TB_PS",
                        "Standard_E2ads_v5",
                        "Standard_E4ads_v5",
                        "Standard_E8ads_v5",
                        "Standard_E16ads_v5",
                        "Standard_EC8as_v5+1TB_PS",
                        "Standard_EC8as_v5+2TB_PS",
                        "Standard_EC16as_v5+3TB_PS",
                        "Standard_EC16as_v5+4TB_PS",
                        "Standard_EC8ads_v5",
                        "Standard_EC16ads_v5",
                        "Standard_E8s_v4+1TB_PS",
                        "Standard_E8s_v4+2TB_PS",
                        "Standard_E16s_v4+3TB_PS",
                        "Standard_E16s_v4+4TB_PS",
                        "Standard_E8s_v5+1TB_PS",
                        "Standard_E8s_v5+2TB_PS",
                        "Standard_E16s_v5+3TB_PS",
                        "Standard_E16s_v5+4TB_PS",
                        "Standard_E2d_v4",
                        "Standard_E4d_v4",
                        "Standard_E8d_v4",
                        "Standard_E16d_v4",
                        "Standard_E2d_v5",
                        "Standard_E4d_v5",
                        "Standard_E8d_v5",
                        "Standard_E16d_v5"
                      ],
                      "x-ms-enum": {
                        "name": "AzureSkuName",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "description": "The number of instances of the cluster.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "tier": {
                      "description": "SKU tier.",
                      "type": "string",
                      "enum": [
                        "Basic",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "AzureSkuTier",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "zones": {
                  "description": "The availability zones of the cluster.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "identity": {
                  "description": "The identity of the cluster, if configured.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID of resource identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID of resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove all identities.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal id of user assigned identity."
                          },
                          "clientId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The client id of user assigned identity."
                          }
                        }
                      },
                      "description": "The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The cluster properties.",
                  "type": "object",
                  "properties": {
                    "state": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The state of the resource.",
                      "enum": [
                        "Creating",
                        "Unavailable",
                        "Running",
                        "Deleting",
                        "Deleted",
                        "Stopping",
                        "Stopped",
                        "Starting",
                        "Updating",
                        "Migrated"
                      ],
                      "x-ms-enum": {
                        "name": "State",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "uri": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The cluster URI."
                    },
                    "dataIngestionUri": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The cluster data ingestion URI."
                    },
                    "stateReason": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The reason for the cluster's current state."
                    },
                    "trustedExternalTenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "GUID representing an external tenant."
                          }
                        },
                        "description": "Represents a tenant ID that is trusted by the cluster."
                      },
                      "description": "The cluster's external tenants."
                    },
                    "optimizedAutoscale": {
                      "type": "object",
                      "description": "Optimized auto scale definition.",
                      "required": [
                        "version",
                        "isEnabled",
                        "minimum",
                        "maximum"
                      ],
                      "properties": {
                        "version": {
                          "description": "The version of the template defined, for instance 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "isEnabled": {
                          "description": "A boolean value that indicate if the optimized autoscale feature is enabled or not.",
                          "type": "boolean"
                        },
                        "minimum": {
                          "description": "Minimum allowed instances count.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "maximum": {
                          "description": "Maximum allowed instances count.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "enableDiskEncryption": {
                      "description": "A boolean value that indicates if the cluster's disks are encrypted.",
                      "default": false,
                      "type": "boolean"
                    },
                    "enableStreamingIngest": {
                      "description": "A boolean value that indicates if the streaming ingest is enabled.",
                      "default": false,
                      "type": "boolean"
                    },
                    "virtualNetworkConfiguration": {
                      "type": "object",
                      "description": "Virtual network definition.",
                      "required": [
                        "subnetId",
                        "enginePublicIpId",
                        "dataManagementPublicIpId"
                      ],
                      "properties": {
                        "subnetId": {
                          "description": "The subnet resource id.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "enginePublicIpId": {
                          "description": "Engine service's public IP address resource id.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "dataManagementPublicIpId": {
                          "description": "Data management's service public IP address resource id.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "state": {
                          "type": "string",
                          "description": "When enabled, the cluster is deployed into the configured subnet, when disabled it will be removed from the subnet.",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "VnetState",
                            "modelAsString": true
                          },
                          "default": "Enabled"
                        }
                      }
                    },
                    "keyVaultProperties": {
                      "type": "object",
                      "description": "KeyVault properties for the cluster encryption.",
                      "properties": {
                        "keyName": {
                          "type": "string",
                          "description": "The name of the key vault key.",
                          "x-ms-client-name": "KeyName"
                        },
                        "keyVersion": {
                          "type": "string",
                          "description": "The version of the key vault key.",
                          "x-ms-client-name": "KeyVersion"
                        },
                        "keyVaultUri": {
                          "type": "string",
                          "description": "The Uri of the key vault.",
                          "x-ms-client-name": "KeyVaultUri"
                        },
                        "userIdentity": {
                          "type": "string",
                          "description": "The user assigned identity (ARM resource id) that has access to the key.",
                          "x-ms-client-name": "UserIdentity"
                        }
                      }
                    },
                    "enablePurge": {
                      "description": "A boolean value that indicates if the purge operations are enabled.",
                      "default": false,
                      "type": "boolean"
                    },
                    "languageExtensions": {
                      "type": "object",
                      "description": "List of the cluster's language extensions.",
                      "properties": {
                        "value": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The language extension object.",
                            "properties": {
                              "languageExtensionName": {
                                "description": "The language extension name.",
                                "type": "string",
                                "enum": [
                                  "PYTHON",
                                  "R"
                                ],
                                "x-ms-enum": {
                                  "name": "languageExtensionName",
                                  "modelAsString": true
                                }
                              },
                              "languageExtensionImageName": {
                                "description": "The language extension image name.",
                                "type": "string",
                                "enum": [
                                  "R",
                                  "Python3_6_5",
                                  "Python3_10_8",
                                  "Python3_10_8_DL",
                                  "PythonCustomImage",
                                  "Python3_11_7",
                                  "Python3_11_7_DL"
                                ],
                                "x-ms-enum": {
                                  "name": "languageExtensionImageName",
                                  "modelAsString": true
                                }
                              },
                              "languageExtensionCustomImageName": {
                                "description": "The language extension custom image name.",
                                "type": "string"
                              }
                            }
                          },
                          "description": "The list of language extensions."
                        }
                      }
                    },
                    "enableDoubleEncryption": {
                      "description": "A boolean value that indicates if double encryption is enabled.",
                      "default": false,
                      "type": "boolean"
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "description": "Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "allowedIpRangeList": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The list of ips in the format of CIDR allowed to connect to the cluster."
                    },
                    "engineType": {
                      "type": "string",
                      "description": "The engine type",
                      "enum": [
                        "V2",
                        "V3"
                      ],
                      "x-ms-enum": {
                        "name": "EngineType",
                        "modelAsString": true
                      },
                      "default": "V3"
                    },
                    "acceptedAudiences": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "GUID or valid URL representing an accepted audience."
                          }
                        },
                        "description": "Represents an accepted audience trusted by the cluster."
                      },
                      "description": "The cluster's accepted audiences."
                    },
                    "enableAutoStop": {
                      "description": "A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days).",
                      "default": true,
                      "type": "boolean"
                    },
                    "restrictOutboundNetworkAccess": {
                      "description": "Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ClusterNetworkAccessFlag",
                        "modelAsString": true
                      },
                      "default": "Disabled"
                    },
                    "allowedFqdnList": {
                      "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.",
                      "type": "array",
                      "items": {
                        "description": "FQDN to be allowed for egress. Example: my-storageaccount.blob.core.windows.net",
                        "type": "string"
                      }
                    },
                    "calloutPolicies": {
                      "description": "List of callout policies for egress from Cluster.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "calloutUriRegex": {
                            "type": "string",
                            "description": "Regular expression or FQDN pattern for the callout URI."
                          },
                          "calloutType": {
                            "type": "string",
                            "enum": [
                              "kusto",
                              "sql",
                              "cosmosdb",
                              "external_data",
                              "azure_digital_twins",
                              "sandbox_artifacts",
                              "webapi",
                              "mysql",
                              "postgresql",
                              "genevametrics",
                              "azure_openai"
                            ],
                            "x-ms-enum": {
                              "name": "calloutType",
                              "modelAsString": true
                            },
                            "description": "Type of the callout service, specifying the kind of external resource or service being accessed."
                          },
                          "outboundAccess": {
                            "type": "string",
                            "enum": [
                              "Allow",
                              "Deny"
                            ],
                            "x-ms-enum": {
                              "name": "outboundAccess",
                              "modelAsString": true
                            },
                            "description": "Indicates whether outbound access is permitted for the specified URI pattern."
                          },
                          "calloutId": {
                            "type": "string",
                            "description": "Unique identifier for the callout configuration.",
                            "readOnly": true
                          }
                        },
                        "description": "Configuration for external callout policies, including URI patterns, access types, and service types."
                      }
                    },
                    "publicIPType": {
                      "description": "Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6)",
                      "enum": [
                        "IPv4",
                        "DualStack"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "publicIPType",
                        "modelAsString": true
                      },
                      "default": "IPv4"
                    },
                    "virtualClusterGraduationProperties": {
                      "description": "Virtual Cluster graduation properties",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "items": {
                        "description": "A private endpoint connection",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "required": [
                              "privateLinkServiceConnectionState"
                            ],
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "Private endpoint which the connection belongs to.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Resource id of the private endpoint.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection State of the Private Endpoint Connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "description": "The private link service connection status."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The private link service connection description."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                                    "readOnly": true
                                  }
                                }
                              },
                              "groupId": {
                                "type": "string",
                                "description": "Group id of the private endpoint.",
                                "readOnly": true
                              },
                              "provisioningState": {
                                "type": "string",
                                "description": "Provisioning state of the private endpoint.",
                                "readOnly": true
                              }
                            }
                          },
                          "systemData": {
                            "readOnly": true,
                            "description": "Metadata pertaining to creation and last modification of the resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true,
                      "description": "A list of private endpoint connections."
                    },
                    "migrationCluster": {
                      "description": "Properties of the peer cluster involved in a migration to/from this cluster.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The resource ID of the cluster.",
                          "readOnly": true
                        },
                        "uri": {
                          "type": "string",
                          "description": "The public URL of the cluster.",
                          "readOnly": true
                        },
                        "dataIngestionUri": {
                          "type": "string",
                          "description": "The public data ingestion URL of the cluster.",
                          "readOnly": true
                        },
                        "role": {
                          "type": "string",
                          "description": "The role of the cluster in the migration process.",
                          "readOnly": true,
                          "enum": [
                            "Source",
                            "Destination"
                          ],
                          "x-ms-enum": {
                            "name": "MigrationClusterRole",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "zoneStatus": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Indicates whether the cluster is zonal or non-zonal.",
                      "enum": [
                        "NonZonal",
                        "ZonalInconsistency",
                        "Zonal"
                      ],
                      "x-ms-enum": {
                        "name": "ZoneStatus",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "readOnly": true,
                  "description": "A unique read-only string that changes whenever the resource is updated."
                }
              },
              "description": "Class representing a Kusto cluster."
            }
          },
          "202": {
            "description": "Successfully updated the cluster.",
            "headers": {
              "Location": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "sku"
              ],
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "sku": {
                  "description": "The SKU of the cluster.",
                  "type": "object",
                  "required": [
                    "name",
                    "tier"
                  ],
                  "properties": {
                    "name": {
                      "description": "SKU name.",
                      "type": "string",
                      "enum": [
                        "Dev(No SLA)_Standard_D11_v2",
                        "Dev(No SLA)_Standard_E2a_v4",
                        "Standard_D11_v2",
                        "Standard_D12_v2",
                        "Standard_D13_v2",
                        "Standard_D14_v2",
                        "Standard_D32d_v4",
                        "Standard_D16d_v5",
                        "Standard_D32d_v5",
                        "Standard_DS13_v2+1TB_PS",
                        "Standard_DS13_v2+2TB_PS",
                        "Standard_DS14_v2+3TB_PS",
                        "Standard_DS14_v2+4TB_PS",
                        "Standard_L4s",
                        "Standard_L8s",
                        "Standard_L16s",
                        "Standard_L8s_v2",
                        "Standard_L16s_v2",
                        "Standard_L8s_v3",
                        "Standard_L16s_v3",
                        "Standard_L32s_v3",
                        "Standard_L8as_v3",
                        "Standard_L16as_v3",
                        "Standard_L32as_v3",
                        "Standard_E64i_v3",
                        "Standard_E80ids_v4",
                        "Standard_E2a_v4",
                        "Standard_E4a_v4",
                        "Standard_E8a_v4",
                        "Standard_E16a_v4",
                        "Standard_E8as_v4+1TB_PS",
                        "Standard_E8as_v4+2TB_PS",
                        "Standard_E16as_v4+3TB_PS",
                        "Standard_E16as_v4+4TB_PS",
                        "Standard_E8as_v5+1TB_PS",
                        "Standard_E8as_v5+2TB_PS",
                        "Standard_E16as_v5+3TB_PS",
                        "Standard_E16as_v5+4TB_PS",
                        "Standard_E2ads_v5",
                        "Standard_E4ads_v5",
                        "Standard_E8ads_v5",
                        "Standard_E16ads_v5",
                        "Standard_EC8as_v5+1TB_PS",
                        "Standard_EC8as_v5+2TB_PS",
                        "Standard_EC16as_v5+3TB_PS",
                        "Standard_EC16as_v5+4TB_PS",
                        "Standard_EC8ads_v5",
                        "Standard_EC16ads_v5",
                        "Standard_E8s_v4+1TB_PS",
                        "Standard_E8s_v4+2TB_PS",
                        "Standard_E16s_v4+3TB_PS",
                        "Standard_E16s_v4+4TB_PS",
                        "Standard_E8s_v5+1TB_PS",
                        "Standard_E8s_v5+2TB_PS",
                        "Standard_E16s_v5+3TB_PS",
                        "Standard_E16s_v5+4TB_PS",
                        "Standard_E2d_v4",
                        "Standard_E4d_v4",
                        "Standard_E8d_v4",
                        "Standard_E16d_v4",
                        "Standard_E2d_v5",
                        "Standard_E4d_v5",
                        "Standard_E8d_v5",
                        "Standard_E16d_v5"
                      ],
                      "x-ms-enum": {
                        "name": "AzureSkuName",
                        "modelAsString": true
                      }
                    },
                    "capacity": {
                      "description": "The number of instances of the cluster.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "tier": {
                      "description": "SKU tier.",
                      "type": "string",
                      "enum": [
                        "Basic",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "AzureSkuTier",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "zones": {
                  "description": "The availability zones of the cluster.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "identity": {
                  "description": "The identity of the cluster, if configured.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal ID of resource identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant ID of resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove all identities.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal id of user assigned identity."
                          },
                          "clientId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The client id of user assigned identity."
                          }
                        }
                      },
                      "description": "The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The cluster properties.",
                  "type": "object",
                  "properties": {
                    "state": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The state of the resource.",
                      "enum": [
                        "Creating",
                        "Unavailable",
                        "Running",
                        "Deleting",
                        "Deleted",
                        "Stopping",
                        "Stopped",
                        "Starting",
                        "Updating",
                        "Migrated"
                      ],
                      "x-ms-enum": {
                        "name": "State",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "uri": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The cluster URI."
                    },
                    "dataIngestionUri": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The cluster data ingestion URI."
                    },
                    "stateReason": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The reason for the cluster's current state."
                    },
                    "trustedExternalTenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "GUID representing an external tenant."
                          }
                        },
                        "description": "Represents a tenant ID that is trusted by the cluster."
                      },
                      "description": "The cluster's external tenants."
                    },
                    "optimizedAutoscale": {
                      "type": "object",
                      "description": "Optimized auto scale definition.",
                      "required": [
                        "version",
                        "isEnabled",
                        "minimum",
                        "maximum"
                      ],
                      "properties": {
                        "version": {
                          "description": "The version of the template defined, for instance 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "isEnabled": {
                          "description": "A boolean value that indicate if the optimized autoscale feature is enabled or not.",
                          "type": "boolean"
                        },
                        "minimum": {
                          "description": "Minimum allowed instances count.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "maximum": {
                          "description": "Maximum allowed instances count.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "enableDiskEncryption": {
                      "description": "A boolean value that indicates if the cluster's disks are encrypted.",
                      "default": false,
                      "type": "boolean"
                    },
                    "enableStreamingIngest": {
                      "description": "A boolean value that indicates if the streaming ingest is enabled.",
                      "default": false,
                      "type": "boolean"
                    },
                    "virtualNetworkConfiguration": {
                      "type": "object",
                      "description": "Virtual network definition.",
                      "required": [
                        "subnetId",
                        "enginePublicIpId",
                        "dataManagementPublicIpId"
                      ],
                      "properties": {
                        "subnetId": {
                          "description": "The subnet resource id.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "enginePublicIpId": {
                          "description": "Engine service's public IP address resource id.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "dataManagementPublicIpId": {
                          "description": "Data management's service public IP address resource id.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "state": {
                          "type": "string",
                          "description": "When enabled, the cluster is deployed into the configured subnet, when disabled it will be removed from the subnet.",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "VnetState",
                            "modelAsString": true
                          },
                          "default": "Enabled"
                        }
                      }
                    },
                    "keyVaultProperties": {
                      "type": "object",
                      "description": "KeyVault properties for the cluster encryption.",
                      "properties": {
                        "keyName": {
                          "type": "string",
                          "description": "The name of the key vault key.",
                          "x-ms-client-name": "KeyName"
                        },
                        "keyVersion": {
                          "type": "string",
                          "description": "The version of the key vault key.",
                          "x-ms-client-name": "KeyVersion"
                        },
                        "keyVaultUri": {
                          "type": "string",
                          "description": "The Uri of the key vault.",
                          "x-ms-client-name": "KeyVaultUri"
                        },
                        "userIdentity": {
                          "type": "string",
                          "description": "The user assigned identity (ARM resource id) that has access to the key.",
                          "x-ms-client-name": "UserIdentity"
                        }
                      }
                    },
                    "enablePurge": {
                      "description": "A boolean value that indicates if the purge operations are enabled.",
                      "default": false,
                      "type": "boolean"
                    },
                    "languageExtensions": {
                      "type": "object",
                      "description": "List of the cluster's language extensions.",
                      "properties": {
                        "value": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The language extension object.",
                            "properties": {
                              "languageExtensionName": {
                                "description": "The language extension name.",
                                "type": "string",
                                "enum": [
                                  "PYTHON",
                                  "R"
                                ],
                                "x-ms-enum": {
                                  "name": "languageExtensionName",
                                  "modelAsString": true
                                }
                              },
                              "languageExtensionImageName": {
                                "description": "The language extension image name.",
                                "type": "string",
                                "enum": [
                                  "R",
                                  "Python3_6_5",
                                  "Python3_10_8",
                                  "Python3_10_8_DL",
                                  "PythonCustomImage",
                                  "Python3_11_7",
                                  "Python3_11_7_DL"
                                ],
                                "x-ms-enum": {
                                  "name": "languageExtensionImageName",
                                  "modelAsString": true
                                }
                              },
                              "languageExtensionCustomImageName": {
                                "description": "The language extension custom image name.",
                                "type": "string"
                              }
                            }
                          },
                          "description": "The list of language extensions."
                        }
                      }
                    },
                    "enableDoubleEncryption": {
                      "description": "A boolean value that indicates if double encryption is enabled.",
                      "default": false,
                      "type": "boolean"
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "description": "Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      },
                      "default": "Enabled"
                    },
                    "allowedIpRangeList": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The list of ips in the format of CIDR allowed to connect to the cluster."
                    },
                    "engineType": {
                      "type": "string",
                      "description": "The engine type",
                      "enum": [
                        "V2",
                        "V3"
                      ],
                      "x-ms-enum": {
                        "name": "EngineType",
                        "modelAsString": true
                      },
                      "default": "V3"
                    },
                    "acceptedAudiences": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "GUID or valid URL representing an accepted audience."
                          }
                        },
                        "description": "Represents an accepted audience trusted by the cluster."
                      },
                      "description": "The cluster's accepted audiences."
                    },
                    "enableAutoStop": {
                      "description": "A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days).",
                      "default": true,
                      "type": "boolean"
                    },
                    "restrictOutboundNetworkAccess": {
                      "description": "Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ClusterNetworkAccessFlag",
                        "modelAsString": true
                      },
                      "default": "Disabled"
                    },
                    "allowedFqdnList": {
                      "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.",
                      "type": "array",
                      "items": {
                        "description": "FQDN to be allowed for egress. Example: my-storageaccount.blob.core.windows.net",
                        "type": "string"
                      }
                    },
                    "calloutPolicies": {
                      "description": "List of callout policies for egress from Cluster.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "calloutUriRegex": {
                            "type": "string",
                            "description": "Regular expression or FQDN pattern for the callout URI."
                          },
                          "calloutType": {
                            "type": "string",
                            "enum": [
                              "kusto",
                              "sql",
                              "cosmosdb",
                              "external_data",
                              "azure_digital_twins",
                              "sandbox_artifacts",
                              "webapi",
                              "mysql",
                              "postgresql",
                              "genevametrics",
                              "azure_openai"
                            ],
                            "x-ms-enum": {
                              "name": "calloutType",
                              "modelAsString": true
                            },
                            "description": "Type of the callout service, specifying the kind of external resource or service being accessed."
                          },
                          "outboundAccess": {
                            "type": "string",
                            "enum": [
                              "Allow",
                              "Deny"
                            ],
                            "x-ms-enum": {
                              "name": "outboundAccess",
                              "modelAsString": true
                            },
                            "description": "Indicates whether outbound access is permitted for the specified URI pattern."
                          },
                          "calloutId": {
                            "type": "string",
                            "description": "Unique identifier for the callout configuration.",
                            "readOnly": true
                          }
                        },
                        "description": "Configuration for external callout policies, including URI patterns, access types, and service types."
                      }
                    },
                    "publicIPType": {
                      "description": "Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6)",
                      "enum": [
                        "IPv4",
                        "DualStack"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "publicIPType",
                        "modelAsString": true
                      },
                      "default": "IPv4"
                    },
                    "virtualClusterGraduationProperties": {
                      "description": "Virtual Cluster graduation properties",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "items": {
                        "description": "A private endpoint connection",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "required": [
                              "privateLinkServiceConnectionState"
                            ],
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "Private endpoint which the connection belongs to.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Resource id of the private endpoint.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection State of the Private Endpoint Connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "description": "The private link service connection status."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The private link service connection description."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                                    "readOnly": true
                                  }
                                }
                              },
                              "groupId": {
                                "type": "string",
                                "description": "Group id of the private endpoint.",
                                "readOnly": true
                              },
                              "provisioningState": {
                                "type": "string",
                                "description": "Provisioning state of the private endpoint.",
                                "readOnly": true
                              }
                            }
                          },
                          "systemData": {
                            "readOnly": true,
                            "description": "Metadata pertaining to creation and last modification of the resource.",
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true,
                      "description": "A list of private endpoint connections."
                    },
                    "migrationCluster": {
                      "description": "Properties of the peer cluster involved in a migration to/from this cluster.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The resource ID of the cluster.",
                          "readOnly": true
                        },
                        "uri": {
                          "type": "string",
                          "description": "The public URL of the cluster.",
                          "readOnly": true
                        },
                        "dataIngestionUri": {
                          "type": "string",
                          "description": "The public data ingestion URL of the cluster.",
                          "readOnly": true
                        },
                        "role": {
                          "type": "string",
                          "description": "The role of the cluster in the migration process.",
                          "readOnly": true,
                          "enum": [
                            "Source",
                            "Destination"
                          ],
                          "x-ms-enum": {
                            "name": "MigrationClusterRole",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "zoneStatus": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Indicates whether the cluster is zonal or non-zonal.",
                      "enum": [
                        "NonZonal",
                        "ZonalInconsistency",
                        "Zonal"
                      ],
                      "x-ms-enum": {
                        "name": "ZoneStatus",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "readOnly": true,
                  "description": "A unique read-only string that changes whenever the resource is updated."
                }
              },
              "description": "Class representing a Kusto cluster."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_Delete",
        "description": "Deletes a Kusto cluster.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- cluster deleted successfully."
          },
          "202": {
            "description": "Accepted the delete cluster request.",
            "headers": {
              "Location": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent -- cluster does not exist in the subscription."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/stop": {
      "post": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_Stop",
        "description": "Stops a Kusto cluster.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/start": {
      "post": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_Start",
        "description": "Starts a Kusto cluster.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted.",
            "headers": {
              "Location": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/migrate": {
      "post": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_Migrate",
        "description": "Migrate data from a Kusto cluster to another cluster.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "clusterMigrateRequest",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "clusterResourceId": {
                  "type": "string",
                  "description": "Resource ID of the destination cluster or kusto pool."
                }
              },
              "required": [
                "clusterResourceId"
              ],
              "description": "A cluster migrate request."
            },
            "description": "The cluster migrate request parameters."
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted.",
            "headers": {
              "Location": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/checkPrincipalAssignmentNameAvailability": {
      "post": {
        "tags": [
          "ClusterPrincipalAssignments"
        ],
        "operationId": "ClusterPrincipalAssignments_CheckNameAvailability",
        "description": "Checks that the principal assignment name is valid and is not already in use.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "principalAssignmentName",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Principal Assignment resource name."
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "Microsoft.Kusto/clusters/principalAssignments"
                  ],
                  "x-ms-enum": {
                    "name": "PrincipalAssignmentType",
                    "modelAsString": false
                  },
                  "description": "The type of resource, Microsoft.Kusto/clusters/principalAssignments."
                }
              },
              "required": [
                "name",
                "type"
              ],
              "description": "A principal assignment check name availability request."
            },
            "description": "The name of the principal assignment."
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Operation to check the kusto resource name availability was successful.",
            "schema": {
              "type": "object",
              "properties": {
                "nameAvailable": {
                  "type": "boolean",
                  "description": "Specifies a Boolean value that indicates if the name is available."
                },
                "name": {
                  "type": "string",
                  "description": "The name that was checked."
                },
                "message": {
                  "type": "string",
                  "description": "Message indicating an unavailable name due to a conflict, or a description of the naming rules that are violated."
                },
                "reason": {
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "AlreadyExists"
                  ],
                  "x-ms-enum": {
                    "name": "reason",
                    "modelAsString": true
                  },
                  "description": "Message providing the reason why the given name is invalid."
                }
              },
              "description": "The result returned from a check name availability request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/principalAssignments/{principalAssignmentName}": {
      "get": {
        "tags": [
          "ClusterPrincipalAssignments"
        ],
        "operationId": "ClusterPrincipalAssignments_Get",
        "description": "Gets a Kusto cluster principalAssignment.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "principalAssignmentName",
            "in": "path",
            "description": "The name of the Kusto principalAssignment.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Kusto cluster principal assignment object.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The cluster principal.",
                  "type": "object",
                  "required": [
                    "principalId",
                    "role",
                    "principalType"
                  ],
                  "properties": {
                    "principalId": {
                      "description": "The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name.",
                      "type": "string"
                    },
                    "role": {
                      "description": "Cluster principal role.",
                      "type": "string",
                      "enum": [
                        "AllDatabasesAdmin",
                        "AllDatabasesViewer",
                        "AllDatabasesMonitor"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterPrincipalRole",
                        "modelAsString": true
                      }
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "The tenant id of the principal"
                    },
                    "principalType": {
                      "description": "Principal type.",
                      "type": "string",
                      "enum": [
                        "App",
                        "Group",
                        "User"
                      ],
                      "x-ms-enum": {
                        "name": "PrincipalType",
                        "modelAsString": true
                      }
                    },
                    "tenantName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The tenant name of the principal"
                    },
                    "principalName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The principal name"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "aadObjectId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The service principal object id in AAD (Azure active directory)"
                    }
                  }
                }
              },
              "description": "Class representing a cluster principal assignment."
            }
          }
        }
      },
      "put": {
        "tags": [
          "ClusterPrincipalAssignments"
        ],
        "operationId": "ClusterPrincipalAssignments_CreateOrUpdate",
        "description": "Create a Kusto cluster principalAssignment.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "principalAssignmentName",
            "in": "path",
            "description": "The name of the Kusto principalAssignment.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The cluster principal.",
                  "type": "object",
                  "required": [
                    "principalId",
                    "role",
                    "principalType"
                  ],
                  "properties": {
                    "principalId": {
                      "description": "The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name.",
                      "type": "string"
                    },
                    "role": {
                      "description": "Cluster principal role.",
                      "type": "string",
                      "enum": [
                        "AllDatabasesAdmin",
                        "AllDatabasesViewer",
                        "AllDatabasesMonitor"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterPrincipalRole",
                        "modelAsString": true
                      }
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "The tenant id of the principal"
                    },
                    "principalType": {
                      "description": "Principal type.",
                      "type": "string",
                      "enum": [
                        "App",
                        "Group",
                        "User"
                      ],
                      "x-ms-enum": {
                        "name": "PrincipalType",
                        "modelAsString": true
                      }
                    },
                    "tenantName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The tenant name of the principal"
                    },
                    "principalName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The principal name"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "aadObjectId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The service principal object id in AAD (Azure active directory)"
                    }
                  }
                }
              },
              "description": "Class representing a cluster principal assignment."
            },
            "description": "The Kusto cluster principalAssignment's parameters supplied for the operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the PrincipalAssignment.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The cluster principal.",
                  "type": "object",
                  "required": [
                    "principalId",
                    "role",
                    "principalType"
                  ],
                  "properties": {
                    "principalId": {
                      "description": "The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name.",
                      "type": "string"
                    },
                    "role": {
                      "description": "Cluster principal role.",
                      "type": "string",
                      "enum": [
                        "AllDatabasesAdmin",
                        "AllDatabasesViewer",
                        "AllDatabasesMonitor"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterPrincipalRole",
                        "modelAsString": true
                      }
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "The tenant id of the principal"
                    },
                    "principalType": {
                      "description": "Principal type.",
                      "type": "string",
                      "enum": [
                        "App",
                        "Group",
                        "User"
                      ],
                      "x-ms-enum": {
                        "name": "PrincipalType",
                        "modelAsString": true
                      }
                    },
                    "tenantName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The tenant name of the principal"
                    },
                    "principalName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The principal name"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "aadObjectId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The service principal object id in AAD (Azure active directory)"
                    }
                  }
                }
              },
              "description": "Class representing a cluster principal assignment."
            }
          },
          "201": {
            "description": "Successfully created the principalAssignment.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The cluster principal.",
                  "type": "object",
                  "required": [
                    "principalId",
                    "role",
                    "principalType"
                  ],
                  "properties": {
                    "principalId": {
                      "description": "The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name.",
                      "type": "string"
                    },
                    "role": {
                      "description": "Cluster principal role.",
                      "type": "string",
                      "enum": [
                        "AllDatabasesAdmin",
                        "AllDatabasesViewer",
                        "AllDatabasesMonitor"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterPrincipalRole",
                        "modelAsString": true
                      }
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "The tenant id of the principal"
                    },
                    "principalType": {
                      "description": "Principal type.",
                      "type": "string",
                      "enum": [
                        "App",
                        "Group",
                        "User"
                      ],
                      "x-ms-enum": {
                        "name": "PrincipalType",
                        "modelAsString": true
                      }
                    },
                    "tenantName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The tenant name of the principal"
                    },
                    "principalName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The principal name"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "aadObjectId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The service principal object id in AAD (Azure active directory)"
                    }
                  }
                }
              },
              "description": "Class representing a cluster principal assignment."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ClusterPrincipalAssignments"
        ],
        "operationId": "ClusterPrincipalAssignments_Delete",
        "description": "Deletes a Kusto cluster principalAssignment.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "principalAssignmentName",
            "in": "path",
            "description": "The name of the Kusto principalAssignment.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- principalAssignments deleted successfully."
          },
          "202": {
            "description": "Accepted the delete principalAssignments request.",
            "headers": {
              "Location": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent -- principalAssignments does not exist in the subscription."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/principalAssignments": {
      "get": {
        "tags": [
          "ClusterPrincipalAssignments"
        ],
        "operationId": "ClusterPrincipalAssignments_List",
        "description": "Lists all Kusto cluster principalAssignments.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The cluster principal.",
                        "type": "object",
                        "required": [
                          "principalId",
                          "role",
                          "principalType"
                        ],
                        "properties": {
                          "principalId": {
                            "description": "The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name.",
                            "type": "string"
                          },
                          "role": {
                            "description": "Cluster principal role.",
                            "type": "string",
                            "enum": [
                              "AllDatabasesAdmin",
                              "AllDatabasesViewer",
                              "AllDatabasesMonitor"
                            ],
                            "x-ms-enum": {
                              "name": "ClusterPrincipalRole",
                              "modelAsString": true
                            }
                          },
                          "tenantId": {
                            "type": "string",
                            "description": "The tenant id of the principal"
                          },
                          "principalType": {
                            "description": "Principal type.",
                            "type": "string",
                            "enum": [
                              "App",
                              "Group",
                              "User"
                            ],
                            "x-ms-enum": {
                              "name": "PrincipalType",
                              "modelAsString": true
                            }
                          },
                          "tenantName": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The tenant name of the principal"
                          },
                          "principalName": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The principal name"
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "description": "The provisioned state of the resource.",
                            "type": "string",
                            "enum": [
                              "Running",
                              "Creating",
                              "Deleting",
                              "Succeeded",
                              "Failed",
                              "Moving",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "aadObjectId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The service principal object id in AAD (Azure active directory)"
                          }
                        }
                      }
                    },
                    "description": "Class representing a cluster principal assignment."
                  },
                  "description": "The list of Kusto cluster principal assignments."
                }
              },
              "description": "The list Kusto cluster principal assignments operation response."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/listFollowerDatabases": {
      "get": {
        "tags": [
          "Clusters"
        ],
        "description": "Returns a list of databases that are owned by this cluster and were followed by another cluster.",
        "operationId": "Clusters_ListFollowerDatabasesGet",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of followed databases.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Follower database definition.",
                        "type": "object",
                        "required": [
                          "clusterResourceId",
                          "attachedDatabaseConfigurationName"
                        ],
                        "properties": {
                          "clusterResourceId": {
                            "type": "string",
                            "description": "Resource id of the cluster that follows a database owned by this cluster."
                          },
                          "attachedDatabaseConfigurationName": {
                            "type": "string",
                            "description": "Resource name of the attached database configuration in the follower cluster."
                          },
                          "databaseName": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The database name owned by this cluster that was followed. * in case following all databases."
                          },
                          "tableLevelSharingProperties": {
                            "type": "object",
                            "readOnly": true,
                            "description": "Table level sharing specifications",
                            "properties": {
                              "tablesToInclude": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "List of tables to include in the follower database"
                              },
                              "tablesToExclude": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "List of tables to exclude from the follower database"
                              },
                              "externalTablesToInclude": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "List of external tables to include in the follower database"
                              },
                              "externalTablesToExclude": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "List of external tables to exclude from the follower database"
                              },
                              "materializedViewsToInclude": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "List of materialized views to include in the follower database"
                              },
                              "materializedViewsToExclude": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "List of materialized views to exclude from the follower database"
                              },
                              "functionsToInclude": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "List of functions to include in the follower database"
                              },
                              "functionsToExclude": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "List of functions to exclude from the follower database"
                              }
                            }
                          },
                          "databaseShareOrigin": {
                            "type": "string",
                            "readOnly": true,
                            "enum": [
                              "Direct",
                              "DataShare",
                              "Other"
                            ],
                            "x-ms-enum": {
                              "name": "DatabaseShareOrigin",
                              "modelAsString": true
                            },
                            "description": "The origin of the following setup."
                          }
                        }
                      }
                    },
                    "description": "A class representing follower database object."
                  },
                  "description": "The list of follower database result."
                },
                "nextLink": {
                  "type": "string",
                  "title": "The URL to get the next set of follower databases list results if there are any."
                }
              },
              "description": "The list Kusto database principals operation response."
            }
          }
        }
      },
      "post": {
        "tags": [
          "Clusters"
        ],
        "description": "Returns a list of databases that are owned by this cluster and were followed by another cluster.",
        "operationId": "Clusters_ListFollowerDatabases",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of followed databases.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "clusterResourceId",
                      "attachedDatabaseConfigurationName"
                    ],
                    "properties": {
                      "clusterResourceId": {
                        "type": "string",
                        "description": "Resource id of the cluster that follows a database owned by this cluster."
                      },
                      "attachedDatabaseConfigurationName": {
                        "type": "string",
                        "description": "Resource name of the attached database configuration in the follower cluster."
                      },
                      "databaseName": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The database name owned by this cluster that was followed. * in case following all databases."
                      },
                      "tableLevelSharingProperties": {
                        "type": "object",
                        "readOnly": true,
                        "description": "Table level sharing specifications",
                        "properties": {
                          "tablesToInclude": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of tables to include in the follower database"
                          },
                          "tablesToExclude": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of tables to exclude from the follower database"
                          },
                          "externalTablesToInclude": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of external tables to include in the follower database"
                          },
                          "externalTablesToExclude": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of external tables to exclude from the follower database"
                          },
                          "materializedViewsToInclude": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of materialized views to include in the follower database"
                          },
                          "materializedViewsToExclude": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of materialized views to exclude from the follower database"
                          },
                          "functionsToInclude": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of functions to include in the follower database"
                          },
                          "functionsToExclude": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of functions to exclude from the follower database"
                          }
                        }
                      },
                      "databaseShareOrigin": {
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Direct",
                          "DataShare",
                          "Other"
                        ],
                        "x-ms-enum": {
                          "name": "DatabaseShareOrigin",
                          "modelAsString": true
                        },
                        "description": "The origin of the following setup."
                      }
                    },
                    "description": "A class representing follower database request."
                  },
                  "description": "The list of follower database result."
                }
              },
              "description": "The list Kusto database principals operation response."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/detachFollowerDatabases": {
      "post": {
        "tags": [
          "Clusters"
        ],
        "description": "Detaches all followers of a database owned by this cluster.",
        "operationId": "Clusters_DetachFollowerDatabases",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "followerDatabaseToRemove",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "clusterResourceId",
                "attachedDatabaseConfigurationName"
              ],
              "properties": {
                "clusterResourceId": {
                  "type": "string",
                  "description": "Resource id of the cluster that follows a database owned by this cluster."
                },
                "attachedDatabaseConfigurationName": {
                  "type": "string",
                  "description": "Resource name of the attached database configuration in the follower cluster."
                },
                "databaseName": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The database name owned by this cluster that was followed. * in case following all databases."
                },
                "tableLevelSharingProperties": {
                  "type": "object",
                  "readOnly": true,
                  "description": "Table level sharing specifications",
                  "properties": {
                    "tablesToInclude": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of tables to include in the follower database"
                    },
                    "tablesToExclude": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of tables to exclude from the follower database"
                    },
                    "externalTablesToInclude": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of external tables to include in the follower database"
                    },
                    "externalTablesToExclude": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of external tables to exclude from the follower database"
                    },
                    "materializedViewsToInclude": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of materialized views to include in the follower database"
                    },
                    "materializedViewsToExclude": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of materialized views to exclude from the follower database"
                    },
                    "functionsToInclude": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of functions to include in the follower database"
                    },
                    "functionsToExclude": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of functions to exclude from the follower database"
                    }
                  }
                },
                "databaseShareOrigin": {
                  "type": "string",
                  "readOnly": true,
                  "enum": [
                    "Direct",
                    "DataShare",
                    "Other"
                  ],
                  "x-ms-enum": {
                    "name": "DatabaseShareOrigin",
                    "modelAsString": true
                  },
                  "description": "The origin of the following setup."
                }
              },
              "description": "A class representing follower database request."
            },
            "description": "The follower databases properties to remove."
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/diagnoseVirtualNetwork": {
      "post": {
        "tags": [
          "Clusters"
        ],
        "description": "Diagnoses network connectivity status for external resources on which the service is dependent on.",
        "operationId": "Clusters_DiagnoseVirtualNetwork",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "findings": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The list of network connectivity diagnostic finding"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters": {
      "get": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_ListByResourceGroup",
        "description": "Lists all Kusto clusters within a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "sku"
                    ],
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ],
                        "description": "Resource tags."
                      },
                      "location": {
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "The geo-location where the resource lives"
                      },
                      "sku": {
                        "description": "The SKU of the cluster.",
                        "type": "object",
                        "required": [
                          "name",
                          "tier"
                        ],
                        "properties": {
                          "name": {
                            "description": "SKU name.",
                            "type": "string",
                            "enum": [
                              "Dev(No SLA)_Standard_D11_v2",
                              "Dev(No SLA)_Standard_E2a_v4",
                              "Standard_D11_v2",
                              "Standard_D12_v2",
                              "Standard_D13_v2",
                              "Standard_D14_v2",
                              "Standard_D32d_v4",
                              "Standard_D16d_v5",
                              "Standard_D32d_v5",
                              "Standard_DS13_v2+1TB_PS",
                              "Standard_DS13_v2+2TB_PS",
                              "Standard_DS14_v2+3TB_PS",
                              "Standard_DS14_v2+4TB_PS",
                              "Standard_L4s",
                              "Standard_L8s",
                              "Standard_L16s",
                              "Standard_L8s_v2",
                              "Standard_L16s_v2",
                              "Standard_L8s_v3",
                              "Standard_L16s_v3",
                              "Standard_L32s_v3",
                              "Standard_L8as_v3",
                              "Standard_L16as_v3",
                              "Standard_L32as_v3",
                              "Standard_E64i_v3",
                              "Standard_E80ids_v4",
                              "Standard_E2a_v4",
                              "Standard_E4a_v4",
                              "Standard_E8a_v4",
                              "Standard_E16a_v4",
                              "Standard_E8as_v4+1TB_PS",
                              "Standard_E8as_v4+2TB_PS",
                              "Standard_E16as_v4+3TB_PS",
                              "Standard_E16as_v4+4TB_PS",
                              "Standard_E8as_v5+1TB_PS",
                              "Standard_E8as_v5+2TB_PS",
                              "Standard_E16as_v5+3TB_PS",
                              "Standard_E16as_v5+4TB_PS",
                              "Standard_E2ads_v5",
                              "Standard_E4ads_v5",
                              "Standard_E8ads_v5",
                              "Standard_E16ads_v5",
                              "Standard_EC8as_v5+1TB_PS",
                              "Standard_EC8as_v5+2TB_PS",
                              "Standard_EC16as_v5+3TB_PS",
                              "Standard_EC16as_v5+4TB_PS",
                              "Standard_EC8ads_v5",
                              "Standard_EC16ads_v5",
                              "Standard_E8s_v4+1TB_PS",
                              "Standard_E8s_v4+2TB_PS",
                              "Standard_E16s_v4+3TB_PS",
                              "Standard_E16s_v4+4TB_PS",
                              "Standard_E8s_v5+1TB_PS",
                              "Standard_E8s_v5+2TB_PS",
                              "Standard_E16s_v5+3TB_PS",
                              "Standard_E16s_v5+4TB_PS",
                              "Standard_E2d_v4",
                              "Standard_E4d_v4",
                              "Standard_E8d_v4",
                              "Standard_E16d_v4",
                              "Standard_E2d_v5",
                              "Standard_E4d_v5",
                              "Standard_E8d_v5",
                              "Standard_E16d_v5"
                            ],
                            "x-ms-enum": {
                              "name": "AzureSkuName",
                              "modelAsString": true
                            }
                          },
                          "capacity": {
                            "description": "The number of instances of the cluster.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "tier": {
                            "description": "SKU tier.",
                            "type": "string",
                            "enum": [
                              "Basic",
                              "Standard"
                            ],
                            "x-ms-enum": {
                              "name": "AzureSkuTier",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "zones": {
                        "description": "The availability zones of the cluster.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "identity": {
                        "description": "The identity of the cluster, if configured.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal ID of resource identity."
                          },
                          "tenantId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The tenant ID of resource."
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove all identities.",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned, UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "IdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "principalId": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The principal id of user assigned identity."
                                },
                                "clientId": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The client id of user assigned identity."
                                }
                              }
                            },
                            "description": "The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The cluster properties.",
                        "type": "object",
                        "properties": {
                          "state": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The state of the resource.",
                            "enum": [
                              "Creating",
                              "Unavailable",
                              "Running",
                              "Deleting",
                              "Deleted",
                              "Stopping",
                              "Stopped",
                              "Starting",
                              "Updating",
                              "Migrated"
                            ],
                            "x-ms-enum": {
                              "name": "State",
                              "modelAsString": true
                            }
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "description": "The provisioned state of the resource.",
                            "type": "string",
                            "enum": [
                              "Running",
                              "Creating",
                              "Deleting",
                              "Succeeded",
                              "Failed",
                              "Moving",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "uri": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The cluster URI."
                          },
                          "dataIngestionUri": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The cluster data ingestion URI."
                          },
                          "stateReason": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The reason for the cluster's current state."
                          },
                          "trustedExternalTenants": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "string",
                                  "description": "GUID representing an external tenant."
                                }
                              },
                              "description": "Represents a tenant ID that is trusted by the cluster."
                            },
                            "description": "The cluster's external tenants."
                          },
                          "optimizedAutoscale": {
                            "type": "object",
                            "description": "Optimized auto scale definition.",
                            "required": [
                              "version",
                              "isEnabled",
                              "minimum",
                              "maximum"
                            ],
                            "properties": {
                              "version": {
                                "description": "The version of the template defined, for instance 1.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "isEnabled": {
                                "description": "A boolean value that indicate if the optimized autoscale feature is enabled or not.",
                                "type": "boolean"
                              },
                              "minimum": {
                                "description": "Minimum allowed instances count.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "maximum": {
                                "description": "Maximum allowed instances count.",
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "enableDiskEncryption": {
                            "description": "A boolean value that indicates if the cluster's disks are encrypted.",
                            "default": false,
                            "type": "boolean"
                          },
                          "enableStreamingIngest": {
                            "description": "A boolean value that indicates if the streaming ingest is enabled.",
                            "default": false,
                            "type": "boolean"
                          },
                          "virtualNetworkConfiguration": {
                            "type": "object",
                            "description": "Virtual network definition.",
                            "required": [
                              "subnetId",
                              "enginePublicIpId",
                              "dataManagementPublicIpId"
                            ],
                            "properties": {
                              "subnetId": {
                                "description": "The subnet resource id.",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "enginePublicIpId": {
                                "description": "Engine service's public IP address resource id.",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "dataManagementPublicIpId": {
                                "description": "Data management's service public IP address resource id.",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "state": {
                                "type": "string",
                                "description": "When enabled, the cluster is deployed into the configured subnet, when disabled it will be removed from the subnet.",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "VnetState",
                                  "modelAsString": true
                                },
                                "default": "Enabled"
                              }
                            }
                          },
                          "keyVaultProperties": {
                            "type": "object",
                            "description": "KeyVault properties for the cluster encryption.",
                            "properties": {
                              "keyName": {
                                "type": "string",
                                "description": "The name of the key vault key.",
                                "x-ms-client-name": "KeyName"
                              },
                              "keyVersion": {
                                "type": "string",
                                "description": "The version of the key vault key.",
                                "x-ms-client-name": "KeyVersion"
                              },
                              "keyVaultUri": {
                                "type": "string",
                                "description": "The Uri of the key vault.",
                                "x-ms-client-name": "KeyVaultUri"
                              },
                              "userIdentity": {
                                "type": "string",
                                "description": "The user assigned identity (ARM resource id) that has access to the key.",
                                "x-ms-client-name": "UserIdentity"
                              }
                            }
                          },
                          "enablePurge": {
                            "description": "A boolean value that indicates if the purge operations are enabled.",
                            "default": false,
                            "type": "boolean"
                          },
                          "languageExtensions": {
                            "type": "object",
                            "description": "List of the cluster's language extensions.",
                            "properties": {
                              "value": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "The language extension object.",
                                  "properties": {
                                    "languageExtensionName": {
                                      "description": "The language extension name.",
                                      "type": "string",
                                      "enum": [
                                        "PYTHON",
                                        "R"
                                      ],
                                      "x-ms-enum": {
                                        "name": "languageExtensionName",
                                        "modelAsString": true
                                      }
                                    },
                                    "languageExtensionImageName": {
                                      "description": "The language extension image name.",
                                      "type": "string",
                                      "enum": [
                                        "R",
                                        "Python3_6_5",
                                        "Python3_10_8",
                                        "Python3_10_8_DL",
                                        "PythonCustomImage",
                                        "Python3_11_7",
                                        "Python3_11_7_DL"
                                      ],
                                      "x-ms-enum": {
                                        "name": "languageExtensionImageName",
                                        "modelAsString": true
                                      }
                                    },
                                    "languageExtensionCustomImageName": {
                                      "description": "The language extension custom image name.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "description": "The list of language extensions."
                              }
                            }
                          },
                          "enableDoubleEncryption": {
                            "description": "A boolean value that indicates if double encryption is enabled.",
                            "default": false,
                            "type": "boolean"
                          },
                          "publicNetworkAccess": {
                            "type": "string",
                            "description": "Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true
                            },
                            "default": "Enabled"
                          },
                          "allowedIpRangeList": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The list of ips in the format of CIDR allowed to connect to the cluster."
                          },
                          "engineType": {
                            "type": "string",
                            "description": "The engine type",
                            "enum": [
                              "V2",
                              "V3"
                            ],
                            "x-ms-enum": {
                              "name": "EngineType",
                              "modelAsString": true
                            },
                            "default": "V3"
                          },
                          "acceptedAudiences": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "string",
                                  "description": "GUID or valid URL representing an accepted audience."
                                }
                              },
                              "description": "Represents an accepted audience trusted by the cluster."
                            },
                            "description": "The cluster's accepted audiences."
                          },
                          "enableAutoStop": {
                            "description": "A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days).",
                            "default": true,
                            "type": "boolean"
                          },
                          "restrictOutboundNetworkAccess": {
                            "description": "Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "ClusterNetworkAccessFlag",
                              "modelAsString": true
                            },
                            "default": "Disabled"
                          },
                          "allowedFqdnList": {
                            "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.",
                            "type": "array",
                            "items": {
                              "description": "FQDN to be allowed for egress. Example: my-storageaccount.blob.core.windows.net",
                              "type": "string"
                            }
                          },
                          "calloutPolicies": {
                            "description": "List of callout policies for egress from Cluster.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "calloutUriRegex": {
                                  "type": "string",
                                  "description": "Regular expression or FQDN pattern for the callout URI."
                                },
                                "calloutType": {
                                  "type": "string",
                                  "enum": [
                                    "kusto",
                                    "sql",
                                    "cosmosdb",
                                    "external_data",
                                    "azure_digital_twins",
                                    "sandbox_artifacts",
                                    "webapi",
                                    "mysql",
                                    "postgresql",
                                    "genevametrics",
                                    "azure_openai"
                                  ],
                                  "x-ms-enum": {
                                    "name": "calloutType",
                                    "modelAsString": true
                                  },
                                  "description": "Type of the callout service, specifying the kind of external resource or service being accessed."
                                },
                                "outboundAccess": {
                                  "type": "string",
                                  "enum": [
                                    "Allow",
                                    "Deny"
                                  ],
                                  "x-ms-enum": {
                                    "name": "outboundAccess",
                                    "modelAsString": true
                                  },
                                  "description": "Indicates whether outbound access is permitted for the specified URI pattern."
                                },
                                "calloutId": {
                                  "type": "string",
                                  "description": "Unique identifier for the callout configuration.",
                                  "readOnly": true
                                }
                              },
                              "description": "Configuration for external callout policies, including URI patterns, access types, and service types."
                            }
                          },
                          "publicIPType": {
                            "description": "Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6)",
                            "enum": [
                              "IPv4",
                              "DualStack"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "publicIPType",
                              "modelAsString": true
                            },
                            "default": "IPv4"
                          },
                          "virtualClusterGraduationProperties": {
                            "description": "Virtual Cluster graduation properties",
                            "type": "string",
                            "x-ms-mutability": [
                              "create"
                            ],
                            "x-ms-secret": true
                          },
                          "privateEndpointConnections": {
                            "type": "array",
                            "items": {
                              "description": "A private endpoint connection",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The name of the resource"
                                },
                                "type": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                                },
                                "properties": {
                                  "description": "Resource properties.",
                                  "x-ms-client-flatten": true,
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "Private endpoint which the connection belongs to.",
                                      "readOnly": true,
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Resource id of the private endpoint.",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "Connection State of the Private Endpoint Connection.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "description": "The private link service connection status."
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The private link service connection description."
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "groupId": {
                                      "type": "string",
                                      "description": "Group id of the private endpoint.",
                                      "readOnly": true
                                    },
                                    "provisioningState": {
                                      "type": "string",
                                      "description": "Provisioning state of the private endpoint.",
                                      "readOnly": true
                                    }
                                  }
                                },
                                "systemData": {
                                  "readOnly": true,
                                  "description": "Metadata pertaining to creation and last modification of the resource.",
                                  "type": "object",
                                  "properties": {
                                    "createdBy": {
                                      "type": "string",
                                      "description": "The identity that created the resource."
                                    },
                                    "createdByType": {
                                      "type": "string",
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "createdAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource creation (UTC)."
                                    },
                                    "lastModifiedBy": {
                                      "type": "string",
                                      "description": "The identity that last modified the resource."
                                    },
                                    "lastModifiedByType": {
                                      "type": "string",
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource last modification (UTC)"
                                    }
                                  }
                                }
                              }
                            },
                            "readOnly": true,
                            "description": "A list of private endpoint connections."
                          },
                          "migrationCluster": {
                            "description": "Properties of the peer cluster involved in a migration to/from this cluster.",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The resource ID of the cluster.",
                                "readOnly": true
                              },
                              "uri": {
                                "type": "string",
                                "description": "The public URL of the cluster.",
                                "readOnly": true
                              },
                              "dataIngestionUri": {
                                "type": "string",
                                "description": "The public data ingestion URL of the cluster.",
                                "readOnly": true
                              },
                              "role": {
                                "type": "string",
                                "description": "The role of the cluster in the migration process.",
                                "readOnly": true,
                                "enum": [
                                  "Source",
                                  "Destination"
                                ],
                                "x-ms-enum": {
                                  "name": "MigrationClusterRole",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "zoneStatus": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Indicates whether the cluster is zonal or non-zonal.",
                            "enum": [
                              "NonZonal",
                              "ZonalInconsistency",
                              "Zonal"
                            ],
                            "x-ms-enum": {
                              "name": "ZoneStatus",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "etag": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A unique read-only string that changes whenever the resource is updated."
                      }
                    },
                    "description": "Class representing a Kusto cluster."
                  },
                  "description": "The list of Kusto clusters."
                }
              },
              "description": "The list Kusto clusters operation response."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Kusto/clusters": {
      "get": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_List",
        "description": "Lists all Kusto clusters within a subscription.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "sku"
                    ],
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ],
                        "description": "Resource tags."
                      },
                      "location": {
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "The geo-location where the resource lives"
                      },
                      "sku": {
                        "description": "The SKU of the cluster.",
                        "type": "object",
                        "required": [
                          "name",
                          "tier"
                        ],
                        "properties": {
                          "name": {
                            "description": "SKU name.",
                            "type": "string",
                            "enum": [
                              "Dev(No SLA)_Standard_D11_v2",
                              "Dev(No SLA)_Standard_E2a_v4",
                              "Standard_D11_v2",
                              "Standard_D12_v2",
                              "Standard_D13_v2",
                              "Standard_D14_v2",
                              "Standard_D32d_v4",
                              "Standard_D16d_v5",
                              "Standard_D32d_v5",
                              "Standard_DS13_v2+1TB_PS",
                              "Standard_DS13_v2+2TB_PS",
                              "Standard_DS14_v2+3TB_PS",
                              "Standard_DS14_v2+4TB_PS",
                              "Standard_L4s",
                              "Standard_L8s",
                              "Standard_L16s",
                              "Standard_L8s_v2",
                              "Standard_L16s_v2",
                              "Standard_L8s_v3",
                              "Standard_L16s_v3",
                              "Standard_L32s_v3",
                              "Standard_L8as_v3",
                              "Standard_L16as_v3",
                              "Standard_L32as_v3",
                              "Standard_E64i_v3",
                              "Standard_E80ids_v4",
                              "Standard_E2a_v4",
                              "Standard_E4a_v4",
                              "Standard_E8a_v4",
                              "Standard_E16a_v4",
                              "Standard_E8as_v4+1TB_PS",
                              "Standard_E8as_v4+2TB_PS",
                              "Standard_E16as_v4+3TB_PS",
                              "Standard_E16as_v4+4TB_PS",
                              "Standard_E8as_v5+1TB_PS",
                              "Standard_E8as_v5+2TB_PS",
                              "Standard_E16as_v5+3TB_PS",
                              "Standard_E16as_v5+4TB_PS",
                              "Standard_E2ads_v5",
                              "Standard_E4ads_v5",
                              "Standard_E8ads_v5",
                              "Standard_E16ads_v5",
                              "Standard_EC8as_v5+1TB_PS",
                              "Standard_EC8as_v5+2TB_PS",
                              "Standard_EC16as_v5+3TB_PS",
                              "Standard_EC16as_v5+4TB_PS",
                              "Standard_EC8ads_v5",
                              "Standard_EC16ads_v5",
                              "Standard_E8s_v4+1TB_PS",
                              "Standard_E8s_v4+2TB_PS",
                              "Standard_E16s_v4+3TB_PS",
                              "Standard_E16s_v4+4TB_PS",
                              "Standard_E8s_v5+1TB_PS",
                              "Standard_E8s_v5+2TB_PS",
                              "Standard_E16s_v5+3TB_PS",
                              "Standard_E16s_v5+4TB_PS",
                              "Standard_E2d_v4",
                              "Standard_E4d_v4",
                              "Standard_E8d_v4",
                              "Standard_E16d_v4",
                              "Standard_E2d_v5",
                              "Standard_E4d_v5",
                              "Standard_E8d_v5",
                              "Standard_E16d_v5"
                            ],
                            "x-ms-enum": {
                              "name": "AzureSkuName",
                              "modelAsString": true
                            }
                          },
                          "capacity": {
                            "description": "The number of instances of the cluster.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "tier": {
                            "description": "SKU tier.",
                            "type": "string",
                            "enum": [
                              "Basic",
                              "Standard"
                            ],
                            "x-ms-enum": {
                              "name": "AzureSkuTier",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "zones": {
                        "description": "The availability zones of the cluster.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "identity": {
                        "description": "The identity of the cluster, if configured.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal ID of resource identity."
                          },
                          "tenantId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The tenant ID of resource."
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove all identities.",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned, UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "IdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "principalId": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The principal id of user assigned identity."
                                },
                                "clientId": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The client id of user assigned identity."
                                }
                              }
                            },
                            "description": "The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The cluster properties.",
                        "type": "object",
                        "properties": {
                          "state": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The state of the resource.",
                            "enum": [
                              "Creating",
                              "Unavailable",
                              "Running",
                              "Deleting",
                              "Deleted",
                              "Stopping",
                              "Stopped",
                              "Starting",
                              "Updating",
                              "Migrated"
                            ],
                            "x-ms-enum": {
                              "name": "State",
                              "modelAsString": true
                            }
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "description": "The provisioned state of the resource.",
                            "type": "string",
                            "enum": [
                              "Running",
                              "Creating",
                              "Deleting",
                              "Succeeded",
                              "Failed",
                              "Moving",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "uri": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The cluster URI."
                          },
                          "dataIngestionUri": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The cluster data ingestion URI."
                          },
                          "stateReason": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The reason for the cluster's current state."
                          },
                          "trustedExternalTenants": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "string",
                                  "description": "GUID representing an external tenant."
                                }
                              },
                              "description": "Represents a tenant ID that is trusted by the cluster."
                            },
                            "description": "The cluster's external tenants."
                          },
                          "optimizedAutoscale": {
                            "type": "object",
                            "description": "Optimized auto scale definition.",
                            "required": [
                              "version",
                              "isEnabled",
                              "minimum",
                              "maximum"
                            ],
                            "properties": {
                              "version": {
                                "description": "The version of the template defined, for instance 1.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "isEnabled": {
                                "description": "A boolean value that indicate if the optimized autoscale feature is enabled or not.",
                                "type": "boolean"
                              },
                              "minimum": {
                                "description": "Minimum allowed instances count.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "maximum": {
                                "description": "Maximum allowed instances count.",
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "enableDiskEncryption": {
                            "description": "A boolean value that indicates if the cluster's disks are encrypted.",
                            "default": false,
                            "type": "boolean"
                          },
                          "enableStreamingIngest": {
                            "description": "A boolean value that indicates if the streaming ingest is enabled.",
                            "default": false,
                            "type": "boolean"
                          },
                          "virtualNetworkConfiguration": {
                            "type": "object",
                            "description": "Virtual network definition.",
                            "required": [
                              "subnetId",
                              "enginePublicIpId",
                              "dataManagementPublicIpId"
                            ],
                            "properties": {
                              "subnetId": {
                                "description": "The subnet resource id.",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "enginePublicIpId": {
                                "description": "Engine service's public IP address resource id.",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "dataManagementPublicIpId": {
                                "description": "Data management's service public IP address resource id.",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "state": {
                                "type": "string",
                                "description": "When enabled, the cluster is deployed into the configured subnet, when disabled it will be removed from the subnet.",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "VnetState",
                                  "modelAsString": true
                                },
                                "default": "Enabled"
                              }
                            }
                          },
                          "keyVaultProperties": {
                            "type": "object",
                            "description": "KeyVault properties for the cluster encryption.",
                            "properties": {
                              "keyName": {
                                "type": "string",
                                "description": "The name of the key vault key.",
                                "x-ms-client-name": "KeyName"
                              },
                              "keyVersion": {
                                "type": "string",
                                "description": "The version of the key vault key.",
                                "x-ms-client-name": "KeyVersion"
                              },
                              "keyVaultUri": {
                                "type": "string",
                                "description": "The Uri of the key vault.",
                                "x-ms-client-name": "KeyVaultUri"
                              },
                              "userIdentity": {
                                "type": "string",
                                "description": "The user assigned identity (ARM resource id) that has access to the key.",
                                "x-ms-client-name": "UserIdentity"
                              }
                            }
                          },
                          "enablePurge": {
                            "description": "A boolean value that indicates if the purge operations are enabled.",
                            "default": false,
                            "type": "boolean"
                          },
                          "languageExtensions": {
                            "type": "object",
                            "description": "List of the cluster's language extensions.",
                            "properties": {
                              "value": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "The language extension object.",
                                  "properties": {
                                    "languageExtensionName": {
                                      "description": "The language extension name.",
                                      "type": "string",
                                      "enum": [
                                        "PYTHON",
                                        "R"
                                      ],
                                      "x-ms-enum": {
                                        "name": "languageExtensionName",
                                        "modelAsString": true
                                      }
                                    },
                                    "languageExtensionImageName": {
                                      "description": "The language extension image name.",
                                      "type": "string",
                                      "enum": [
                                        "R",
                                        "Python3_6_5",
                                        "Python3_10_8",
                                        "Python3_10_8_DL",
                                        "PythonCustomImage",
                                        "Python3_11_7",
                                        "Python3_11_7_DL"
                                      ],
                                      "x-ms-enum": {
                                        "name": "languageExtensionImageName",
                                        "modelAsString": true
                                      }
                                    },
                                    "languageExtensionCustomImageName": {
                                      "description": "The language extension custom image name.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "description": "The list of language extensions."
                              }
                            }
                          },
                          "enableDoubleEncryption": {
                            "description": "A boolean value that indicates if double encryption is enabled.",
                            "default": false,
                            "type": "boolean"
                          },
                          "publicNetworkAccess": {
                            "type": "string",
                            "description": "Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true
                            },
                            "default": "Enabled"
                          },
                          "allowedIpRangeList": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The list of ips in the format of CIDR allowed to connect to the cluster."
                          },
                          "engineType": {
                            "type": "string",
                            "description": "The engine type",
                            "enum": [
                              "V2",
                              "V3"
                            ],
                            "x-ms-enum": {
                              "name": "EngineType",
                              "modelAsString": true
                            },
                            "default": "V3"
                          },
                          "acceptedAudiences": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "string",
                                  "description": "GUID or valid URL representing an accepted audience."
                                }
                              },
                              "description": "Represents an accepted audience trusted by the cluster."
                            },
                            "description": "The cluster's accepted audiences."
                          },
                          "enableAutoStop": {
                            "description": "A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days).",
                            "default": true,
                            "type": "boolean"
                          },
                          "restrictOutboundNetworkAccess": {
                            "description": "Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "ClusterNetworkAccessFlag",
                              "modelAsString": true
                            },
                            "default": "Disabled"
                          },
                          "allowedFqdnList": {
                            "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.",
                            "type": "array",
                            "items": {
                              "description": "FQDN to be allowed for egress. Example: my-storageaccount.blob.core.windows.net",
                              "type": "string"
                            }
                          },
                          "calloutPolicies": {
                            "description": "List of callout policies for egress from Cluster.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "calloutUriRegex": {
                                  "type": "string",
                                  "description": "Regular expression or FQDN pattern for the callout URI."
                                },
                                "calloutType": {
                                  "type": "string",
                                  "enum": [
                                    "kusto",
                                    "sql",
                                    "cosmosdb",
                                    "external_data",
                                    "azure_digital_twins",
                                    "sandbox_artifacts",
                                    "webapi",
                                    "mysql",
                                    "postgresql",
                                    "genevametrics",
                                    "azure_openai"
                                  ],
                                  "x-ms-enum": {
                                    "name": "calloutType",
                                    "modelAsString": true
                                  },
                                  "description": "Type of the callout service, specifying the kind of external resource or service being accessed."
                                },
                                "outboundAccess": {
                                  "type": "string",
                                  "enum": [
                                    "Allow",
                                    "Deny"
                                  ],
                                  "x-ms-enum": {
                                    "name": "outboundAccess",
                                    "modelAsString": true
                                  },
                                  "description": "Indicates whether outbound access is permitted for the specified URI pattern."
                                },
                                "calloutId": {
                                  "type": "string",
                                  "description": "Unique identifier for the callout configuration.",
                                  "readOnly": true
                                }
                              },
                              "description": "Configuration for external callout policies, including URI patterns, access types, and service types."
                            }
                          },
                          "publicIPType": {
                            "description": "Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6)",
                            "enum": [
                              "IPv4",
                              "DualStack"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "publicIPType",
                              "modelAsString": true
                            },
                            "default": "IPv4"
                          },
                          "virtualClusterGraduationProperties": {
                            "description": "Virtual Cluster graduation properties",
                            "type": "string",
                            "x-ms-mutability": [
                              "create"
                            ],
                            "x-ms-secret": true
                          },
                          "privateEndpointConnections": {
                            "type": "array",
                            "items": {
                              "description": "A private endpoint connection",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The name of the resource"
                                },
                                "type": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                                },
                                "properties": {
                                  "description": "Resource properties.",
                                  "x-ms-client-flatten": true,
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "Private endpoint which the connection belongs to.",
                                      "readOnly": true,
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Resource id of the private endpoint.",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "Connection State of the Private Endpoint Connection.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "description": "The private link service connection status."
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The private link service connection description."
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "groupId": {
                                      "type": "string",
                                      "description": "Group id of the private endpoint.",
                                      "readOnly": true
                                    },
                                    "provisioningState": {
                                      "type": "string",
                                      "description": "Provisioning state of the private endpoint.",
                                      "readOnly": true
                                    }
                                  }
                                },
                                "systemData": {
                                  "readOnly": true,
                                  "description": "Metadata pertaining to creation and last modification of the resource.",
                                  "type": "object",
                                  "properties": {
                                    "createdBy": {
                                      "type": "string",
                                      "description": "The identity that created the resource."
                                    },
                                    "createdByType": {
                                      "type": "string",
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "createdAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource creation (UTC)."
                                    },
                                    "lastModifiedBy": {
                                      "type": "string",
                                      "description": "The identity that last modified the resource."
                                    },
                                    "lastModifiedByType": {
                                      "type": "string",
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource last modification (UTC)"
                                    }
                                  }
                                }
                              }
                            },
                            "readOnly": true,
                            "description": "A list of private endpoint connections."
                          },
                          "migrationCluster": {
                            "description": "Properties of the peer cluster involved in a migration to/from this cluster.",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The resource ID of the cluster.",
                                "readOnly": true
                              },
                              "uri": {
                                "type": "string",
                                "description": "The public URL of the cluster.",
                                "readOnly": true
                              },
                              "dataIngestionUri": {
                                "type": "string",
                                "description": "The public data ingestion URL of the cluster.",
                                "readOnly": true
                              },
                              "role": {
                                "type": "string",
                                "description": "The role of the cluster in the migration process.",
                                "readOnly": true,
                                "enum": [
                                  "Source",
                                  "Destination"
                                ],
                                "x-ms-enum": {
                                  "name": "MigrationClusterRole",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "zoneStatus": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Indicates whether the cluster is zonal or non-zonal.",
                            "enum": [
                              "NonZonal",
                              "ZonalInconsistency",
                              "Zonal"
                            ],
                            "x-ms-enum": {
                              "name": "ZoneStatus",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "etag": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A unique read-only string that changes whenever the resource is updated."
                      }
                    },
                    "description": "Class representing a Kusto cluster."
                  },
                  "description": "The list of Kusto clusters."
                }
              },
              "description": "The list Kusto clusters operation response."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Kusto/skus": {
      "get": {
        "description": "Lists eligible SKUs for Kusto resource provider.",
        "operationId": "Clusters_ListSkus",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "The list of the EngagementFabric SKU descriptions",
              "type": "object",
              "properties": {
                "value": {
                  "description": "SKU descriptions",
                  "type": "array",
                  "items": {
                    "description": "The Kusto SKU description of given resource type",
                    "type": "object",
                    "properties": {
                      "resourceType": {
                        "description": "The resource type",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the SKU",
                        "type": "string",
                        "readOnly": true
                      },
                      "tier": {
                        "description": "The tier of the SKU",
                        "type": "string",
                        "readOnly": true
                      },
                      "locations": {
                        "description": "The set of locations that the SKU is available",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "locationInfo": {
                        "description": "Locations and zones",
                        "type": "array",
                        "items": {
                          "description": "The locations and zones info for SKU.",
                          "type": "object",
                          "required": [
                            "location"
                          ],
                          "properties": {
                            "location": {
                              "description": "The available location of the SKU.",
                              "type": "string"
                            },
                            "zones": {
                              "description": "The available zone of the SKU.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "zoneDetails": {
                              "description": "Gets details of capabilities available to a SKU in specific zones.",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "array",
                                    "readOnly": true,
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "The set of zones that the SKU is available in with the specified capabilities."
                                  },
                                  "capabilities": {
                                    "type": "array",
                                    "readOnly": true,
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "readOnly": true,
                                          "description": "An invariant to describe the feature."
                                        },
                                        "value": {
                                          "type": "string",
                                          "readOnly": true,
                                          "description": "An invariant if the feature is measured by quantity."
                                        }
                                      },
                                      "description": "Describes The SKU capabilities object."
                                    },
                                    "x-ms-identifiers": [
                                      "name"
                                    ],
                                    "description": "A list of capabilities that are available for the SKU in the specified list of zones."
                                  }
                                },
                                "description": "Describes The zonal capabilities of a SKU."
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            }
                          }
                        },
                        "readOnly": true
                      },
                      "restrictions": {
                        "description": "The restrictions because of which SKU cannot be used",
                        "type": "array",
                        "items": {
                          "type": "object"
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Kusto/locations/{location}/checkNameAvailability": {
      "post": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_CheckNameAvailability",
        "description": "Checks that the cluster name is valid and is not already in use.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Cluster name."
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "Microsoft.Kusto/clusters"
                  ],
                  "x-ms-enum": {
                    "name": "ClusterType",
                    "modelAsString": false
                  },
                  "description": "The type of resource, Microsoft.Kusto/clusters."
                }
              },
              "required": [
                "name",
                "type"
              ],
              "description": "The result returned from a cluster check name availability request."
            },
            "description": "The name of the cluster."
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Operation to check the kusto resource name availability was successful.",
            "schema": {
              "type": "object",
              "properties": {
                "nameAvailable": {
                  "type": "boolean",
                  "description": "Specifies a Boolean value that indicates if the name is available."
                },
                "name": {
                  "type": "string",
                  "description": "The name that was checked."
                },
                "message": {
                  "type": "string",
                  "description": "Message indicating an unavailable name due to a conflict, or a description of the naming rules that are violated."
                },
                "reason": {
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "AlreadyExists"
                  ],
                  "x-ms-enum": {
                    "name": "reason",
                    "modelAsString": true
                  },
                  "description": "Message providing the reason why the given name is invalid."
                }
              },
              "description": "The result returned from a check name availability request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Kusto/locations/{location}/skus": {
      "get": {
        "description": "Lists eligible region SKUs for Kusto resource provider by Azure region.",
        "operationId": "Skus_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "The list of the EngagementFabric SKU descriptions",
              "type": "object",
              "properties": {
                "value": {
                  "description": "SKU descriptions",
                  "type": "array",
                  "items": {
                    "description": "The Kusto SKU description of given resource type",
                    "type": "object",
                    "properties": {
                      "resourceType": {
                        "description": "The resource type",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the SKU",
                        "type": "string",
                        "readOnly": true
                      },
                      "tier": {
                        "description": "The tier of the SKU",
                        "type": "string",
                        "readOnly": true
                      },
                      "locations": {
                        "description": "The set of locations that the SKU is available",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "locationInfo": {
                        "description": "Locations and zones",
                        "type": "array",
                        "items": {
                          "description": "The locations and zones info for SKU.",
                          "type": "object",
                          "required": [
                            "location"
                          ],
                          "properties": {
                            "location": {
                              "description": "The available location of the SKU.",
                              "type": "string"
                            },
                            "zones": {
                              "description": "The available zone of the SKU.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "zoneDetails": {
                              "description": "Gets details of capabilities available to a SKU in specific zones.",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "array",
                                    "readOnly": true,
                                    "items": {
                                      "type": "string"
                                    },
                                    "description": "The set of zones that the SKU is available in with the specified capabilities."
                                  },
                                  "capabilities": {
                                    "type": "array",
                                    "readOnly": true,
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "readOnly": true,
                                          "description": "An invariant to describe the feature."
                                        },
                                        "value": {
                                          "type": "string",
                                          "readOnly": true,
                                          "description": "An invariant if the feature is measured by quantity."
                                        }
                                      },
                                      "description": "Describes The SKU capabilities object."
                                    },
                                    "x-ms-identifiers": [
                                      "name"
                                    ],
                                    "description": "A list of capabilities that are available for the SKU in the specified list of zones."
                                  }
                                },
                                "description": "Describes The zonal capabilities of a SKU."
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            }
                          }
                        },
                        "readOnly": true
                      },
                      "restrictions": {
                        "description": "The restrictions because of which SKU cannot be used",
                        "type": "array",
                        "items": {
                          "type": "object"
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/checkNameAvailability": {
      "post": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_CheckNameAvailability",
        "description": "Checks that the databases resource name is valid and is not already in use.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceName",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Resource name."
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "Microsoft.Kusto/clusters/databases",
                    "Microsoft.Kusto/clusters/attachedDatabaseConfigurations"
                  ],
                  "x-ms-enum": {
                    "name": "Type",
                    "modelAsString": false
                  },
                  "description": "The type of resource, for instance Microsoft.Kusto/clusters/databases."
                }
              },
              "required": [
                "name",
                "type"
              ],
              "description": "The result returned from a database check name availability request."
            },
            "description": "The name of the resource."
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Operation to check the kusto resource name availability was successful.",
            "schema": {
              "type": "object",
              "properties": {
                "nameAvailable": {
                  "type": "boolean",
                  "description": "Specifies a Boolean value that indicates if the name is available."
                },
                "name": {
                  "type": "string",
                  "description": "The name that was checked."
                },
                "message": {
                  "type": "string",
                  "description": "Message indicating an unavailable name due to a conflict, or a description of the naming rules that are violated."
                },
                "reason": {
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "AlreadyExists"
                  ],
                  "x-ms-enum": {
                    "name": "reason",
                    "modelAsString": true
                  },
                  "description": "Message providing the reason why the given name is invalid."
                }
              },
              "description": "The result returned from a check name availability request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/attachedDatabaseConfigurationCheckNameAvailability": {
      "post": {
        "tags": [
          "AttachedDatabaseConfigurations"
        ],
        "operationId": "AttachedDatabaseConfigurations_CheckNameAvailability",
        "description": "Checks that the attached database configuration resource name is valid and is not already in use.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceName",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Attached database resource name."
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "Microsoft.Kusto/clusters/attachedDatabaseConfigurations"
                  ],
                  "x-ms-enum": {
                    "name": "AttachedDatabaseType",
                    "modelAsString": false
                  },
                  "description": "The type of resource, for instance Microsoft.Kusto/clusters/attachedDatabaseConfigurations."
                }
              },
              "required": [
                "name",
                "type"
              ],
              "description": "The result returned from a AttachedDatabaseConfigurations check name availability request."
            },
            "description": "The name of the resource."
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Operation to check the kusto resource name availability was successful.",
            "schema": {
              "type": "object",
              "properties": {
                "nameAvailable": {
                  "type": "boolean",
                  "description": "Specifies a Boolean value that indicates if the name is available."
                },
                "name": {
                  "type": "string",
                  "description": "The name that was checked."
                },
                "message": {
                  "type": "string",
                  "description": "Message indicating an unavailable name due to a conflict, or a description of the naming rules that are violated."
                },
                "reason": {
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "AlreadyExists"
                  ],
                  "x-ms-enum": {
                    "name": "reason",
                    "modelAsString": true
                  },
                  "description": "Message providing the reason why the given name is invalid."
                }
              },
              "description": "The result returned from a check name availability request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/managedPrivateEndpointsCheckNameAvailability": {
      "post": {
        "tags": [
          "ManagedPrivateEndpoints"
        ],
        "operationId": "ManagedPrivateEndpoints_CheckNameAvailability",
        "description": "Checks that the managed private endpoints resource name is valid and is not already in use.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceName",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Managed private endpoint resource name."
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "Microsoft.Kusto/clusters/managedPrivateEndpoints"
                  ],
                  "x-ms-enum": {
                    "name": "ManagedPrivateEndpointsType",
                    "modelAsString": false
                  },
                  "description": "The type of resource, for instance Microsoft.Kusto/clusters/managedPrivateEndpoints."
                }
              },
              "required": [
                "name",
                "type"
              ],
              "description": "The result returned from a managedPrivateEndpoints check name availability request."
            },
            "description": "The name of the resource."
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Operation to check the kusto resource name availability was successful.",
            "schema": {
              "type": "object",
              "properties": {
                "nameAvailable": {
                  "type": "boolean",
                  "description": "Specifies a Boolean value that indicates if the name is available."
                },
                "name": {
                  "type": "string",
                  "description": "The name that was checked."
                },
                "message": {
                  "type": "string",
                  "description": "Message indicating an unavailable name due to a conflict, or a description of the naming rules that are violated."
                },
                "reason": {
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "AlreadyExists"
                  ],
                  "x-ms-enum": {
                    "name": "reason",
                    "modelAsString": true
                  },
                  "description": "Message providing the reason why the given name is invalid."
                }
              },
              "description": "The result returned from a check name availability request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/skus": {
      "get": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_ListSkusByResource",
        "description": "Returns the SKUs available for the provided resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "List of available SKUs for a Kusto Cluster.",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "resourceType": {
                        "type": "string",
                        "description": "Resource Namespace and Type."
                      },
                      "sku": {
                        "description": "The SKU details.",
                        "type": "object",
                        "required": [
                          "name",
                          "tier"
                        ],
                        "properties": {
                          "name": {
                            "description": "SKU name.",
                            "type": "string",
                            "enum": [
                              "Dev(No SLA)_Standard_D11_v2",
                              "Dev(No SLA)_Standard_E2a_v4",
                              "Standard_D11_v2",
                              "Standard_D12_v2",
                              "Standard_D13_v2",
                              "Standard_D14_v2",
                              "Standard_D32d_v4",
                              "Standard_D16d_v5",
                              "Standard_D32d_v5",
                              "Standard_DS13_v2+1TB_PS",
                              "Standard_DS13_v2+2TB_PS",
                              "Standard_DS14_v2+3TB_PS",
                              "Standard_DS14_v2+4TB_PS",
                              "Standard_L4s",
                              "Standard_L8s",
                              "Standard_L16s",
                              "Standard_L8s_v2",
                              "Standard_L16s_v2",
                              "Standard_L8s_v3",
                              "Standard_L16s_v3",
                              "Standard_L32s_v3",
                              "Standard_L8as_v3",
                              "Standard_L16as_v3",
                              "Standard_L32as_v3",
                              "Standard_E64i_v3",
                              "Standard_E80ids_v4",
                              "Standard_E2a_v4",
                              "Standard_E4a_v4",
                              "Standard_E8a_v4",
                              "Standard_E16a_v4",
                              "Standard_E8as_v4+1TB_PS",
                              "Standard_E8as_v4+2TB_PS",
                              "Standard_E16as_v4+3TB_PS",
                              "Standard_E16as_v4+4TB_PS",
                              "Standard_E8as_v5+1TB_PS",
                              "Standard_E8as_v5+2TB_PS",
                              "Standard_E16as_v5+3TB_PS",
                              "Standard_E16as_v5+4TB_PS",
                              "Standard_E2ads_v5",
                              "Standard_E4ads_v5",
                              "Standard_E8ads_v5",
                              "Standard_E16ads_v5",
                              "Standard_EC8as_v5+1TB_PS",
                              "Standard_EC8as_v5+2TB_PS",
                              "Standard_EC16as_v5+3TB_PS",
                              "Standard_EC16as_v5+4TB_PS",
                              "Standard_EC8ads_v5",
                              "Standard_EC16ads_v5",
                              "Standard_E8s_v4+1TB_PS",
                              "Standard_E8s_v4+2TB_PS",
                              "Standard_E16s_v4+3TB_PS",
                              "Standard_E16s_v4+4TB_PS",
                              "Standard_E8s_v5+1TB_PS",
                              "Standard_E8s_v5+2TB_PS",
                              "Standard_E16s_v5+3TB_PS",
                              "Standard_E16s_v5+4TB_PS",
                              "Standard_E2d_v4",
                              "Standard_E4d_v4",
                              "Standard_E8d_v4",
                              "Standard_E16d_v4",
                              "Standard_E2d_v5",
                              "Standard_E4d_v5",
                              "Standard_E8d_v5",
                              "Standard_E16d_v5"
                            ],
                            "x-ms-enum": {
                              "name": "AzureSkuName",
                              "modelAsString": true
                            }
                          },
                          "capacity": {
                            "description": "The number of instances of the cluster.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "tier": {
                            "description": "SKU tier.",
                            "type": "string",
                            "enum": [
                              "Basic",
                              "Standard"
                            ],
                            "x-ms-enum": {
                              "name": "AzureSkuTier",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "capacity": {
                        "description": "The number of instances of the cluster.",
                        "type": "object",
                        "required": [
                          "minimum",
                          "maximum",
                          "default",
                          "scaleType"
                        ],
                        "properties": {
                          "scaleType": {
                            "description": "Scale type.",
                            "type": "string",
                            "enum": [
                              "automatic",
                              "manual",
                              "none"
                            ],
                            "x-ms-enum": {
                              "name": "AzureScaleType",
                              "modelAsString": true
                            }
                          },
                          "minimum": {
                            "description": "Minimum allowed capacity.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "maximum": {
                            "description": "Maximum allowed capacity.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "default": {
                            "description": "The default capacity that would be used.",
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "description": "Azure resource SKU definition."
                  },
                  "description": "The collection of available SKUs for an existing resource."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases": {
      "get": {
        "tags": [
          "Databases"
        ],
        "description": "Returns the list of databases of the given Kusto cluster.",
        "operationId": "Databases_ListByCluster",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$top",
            "description": "limit the number of results",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 5,
            "maximum": 1000
          },
          {
            "name": "$skiptoken",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of databases.",
            "schema": {
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "Link to the next page of results",
                  "type": "string"
                },
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "kind"
                    ],
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "location": {
                        "type": "string",
                        "description": "Resource location."
                      },
                      "kind": {
                        "description": "Kind of the database",
                        "enum": [
                          "ReadWrite",
                          "ReadOnlyFollowing"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "Kind",
                          "modelAsString": true
                        }
                      }
                    },
                    "description": "Class representing a Kusto database.",
                    "discriminator": "kind"
                  },
                  "description": "The list of Kusto databases."
                }
              },
              "description": "The list Kusto databases operation response."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}": {
      "get": {
        "tags": [
          "Databases"
        ],
        "description": "Returns a database.",
        "operationId": "Databases_Get",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database in the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the specified database.",
            "schema": {
              "type": "object",
              "required": [
                "kind"
              ],
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "kind": {
                  "description": "Kind of the database",
                  "enum": [
                    "ReadWrite",
                    "ReadOnlyFollowing"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  }
                }
              },
              "description": "Class representing a Kusto database.",
              "discriminator": "kind"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Databases"
        ],
        "description": "Creates or updates a database.",
        "operationId": "Databases_CreateOrUpdate",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database in the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "kind"
              ],
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "kind": {
                  "description": "Kind of the database",
                  "enum": [
                    "ReadWrite",
                    "ReadOnlyFollowing"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  }
                }
              },
              "description": "Class representing a Kusto database.",
              "discriminator": "kind"
            },
            "description": "The database parameters supplied to the CreateOrUpdate operation."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "callerRole",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Admin",
              "None"
            ],
            "x-ms-enum": {
              "name": "callerRole",
              "modelAsString": true
            },
            "default": "Admin",
            "x-ms-parameter-location": "method",
            "description": "By default, any user who run operation on a database become an Admin on it. This property allows the caller to exclude the caller from Admins list."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the database.",
            "schema": {
              "type": "object",
              "required": [
                "kind"
              ],
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "kind": {
                  "description": "Kind of the database",
                  "enum": [
                    "ReadWrite",
                    "ReadOnlyFollowing"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  }
                }
              },
              "description": "Class representing a Kusto database.",
              "discriminator": "kind"
            }
          },
          "201": {
            "description": "Successfully created the database.",
            "schema": {
              "type": "object",
              "required": [
                "kind"
              ],
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "kind": {
                  "description": "Kind of the database",
                  "enum": [
                    "ReadWrite",
                    "ReadOnlyFollowing"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  }
                }
              },
              "description": "Class representing a Kusto database.",
              "discriminator": "kind"
            }
          },
          "202": {
            "description": "Accepted the create database request.",
            "schema": {
              "type": "object",
              "required": [
                "kind"
              ],
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "kind": {
                  "description": "Kind of the database",
                  "enum": [
                    "ReadWrite",
                    "ReadOnlyFollowing"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  }
                }
              },
              "description": "Class representing a Kusto database.",
              "discriminator": "kind"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Databases"
        ],
        "description": "Updates a database.",
        "operationId": "Databases_Update",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database in the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "kind"
              ],
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "kind": {
                  "description": "Kind of the database",
                  "enum": [
                    "ReadWrite",
                    "ReadOnlyFollowing"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  }
                }
              },
              "description": "Class representing a Kusto database.",
              "discriminator": "kind"
            },
            "description": "The database parameters supplied to the Update operation."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "callerRole",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Admin",
              "None"
            ],
            "x-ms-enum": {
              "name": "callerRole",
              "modelAsString": true
            },
            "default": "Admin",
            "x-ms-parameter-location": "method",
            "description": "By default, any user who run operation on a database become an Admin on it. This property allows the caller to exclude the caller from Admins list."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the database.",
            "schema": {
              "type": "object",
              "required": [
                "kind"
              ],
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "kind": {
                  "description": "Kind of the database",
                  "enum": [
                    "ReadWrite",
                    "ReadOnlyFollowing"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  }
                }
              },
              "description": "Class representing a Kusto database.",
              "discriminator": "kind"
            }
          },
          "201": {
            "description": "Successfully updated the database.",
            "headers": {
              "Location": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "kind"
              ],
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "kind": {
                  "description": "Kind of the database",
                  "enum": [
                    "ReadWrite",
                    "ReadOnlyFollowing"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  }
                }
              },
              "description": "Class representing a Kusto database.",
              "discriminator": "kind"
            }
          },
          "202": {
            "description": "Accepted the update database request.",
            "headers": {
              "Location": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "kind"
              ],
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "kind": {
                  "description": "Kind of the database",
                  "enum": [
                    "ReadWrite",
                    "ReadOnlyFollowing"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "Kind",
                    "modelAsString": true
                  }
                }
              },
              "description": "Class representing a Kusto database.",
              "discriminator": "kind"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Databases"
        ],
        "description": "Deletes the database with the given name.",
        "operationId": "Databases_Delete",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database in the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the database."
          },
          "202": {
            "description": "Accepted.",
            "headers": {
              "Location": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The specified database does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/inviteFollower": {
      "post": {
        "tags": [
          "Databases"
        ],
        "operationId": "Database_InviteFollower",
        "description": "Generates an invitation token that allows attaching a follower database to this database.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database in the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "inviteeEmail": {
                  "type": "string",
                  "description": "The email of the invited user for which the follower invitation is generated."
                },
                "tableLevelSharingProperties": {
                  "type": "object",
                  "description": "Table level sharing specifications",
                  "properties": {
                    "tablesToInclude": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of tables to include in the follower database"
                    },
                    "tablesToExclude": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of tables to exclude from the follower database"
                    },
                    "externalTablesToInclude": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of external tables to include in the follower database"
                    },
                    "externalTablesToExclude": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of external tables to exclude from the follower database"
                    },
                    "materializedViewsToInclude": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of materialized views to include in the follower database"
                    },
                    "materializedViewsToExclude": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of materialized views to exclude from the follower database"
                    },
                    "functionsToInclude": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of functions to include in the follower database"
                    },
                    "functionsToExclude": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of functions to exclude from the follower database"
                    }
                  }
                }
              },
              "required": [
                "inviteeEmail"
              ],
              "description": "The request to invite a follower to a database."
            },
            "description": "The follower invitation request parameters."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "generatedInvitation": {
                  "type": "string",
                  "description": "The generated invitation token."
                }
              },
              "description": "The result returned from a follower invitation generation request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/checkPrincipalAssignmentNameAvailability": {
      "post": {
        "tags": [
          "DatabasePrincipalAssignments"
        ],
        "operationId": "DatabasePrincipalAssignments_CheckNameAvailability",
        "description": "Checks that the database principal assignment is valid and is not already in use.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database in the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "principalAssignmentName",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Principal Assignment resource name."
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "Microsoft.Kusto/clusters/databases/principalAssignments"
                  ],
                  "x-ms-enum": {
                    "name": "DatabasePrincipalAssignmentType",
                    "modelAsString": false
                  },
                  "description": "The type of resource, Microsoft.Kusto/clusters/databases/principalAssignments."
                }
              },
              "required": [
                "name",
                "type"
              ],
              "description": "A principal assignment check name availability request."
            },
            "description": "The name of the resource."
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Operation to check the kusto resource name availability was successful.",
            "schema": {
              "type": "object",
              "properties": {
                "nameAvailable": {
                  "type": "boolean",
                  "description": "Specifies a Boolean value that indicates if the name is available."
                },
                "name": {
                  "type": "string",
                  "description": "The name that was checked."
                },
                "message": {
                  "type": "string",
                  "description": "Message indicating an unavailable name due to a conflict, or a description of the naming rules that are violated."
                },
                "reason": {
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "AlreadyExists"
                  ],
                  "x-ms-enum": {
                    "name": "reason",
                    "modelAsString": true
                  },
                  "description": "Message providing the reason why the given name is invalid."
                }
              },
              "description": "The result returned from a check name availability request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/principalAssignments/{principalAssignmentName}": {
      "get": {
        "tags": [
          "DatabasePrincipalAssignments"
        ],
        "operationId": "DatabasePrincipalAssignments_Get",
        "description": "Gets a Kusto cluster database principalAssignment.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database in the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "principalAssignmentName",
            "in": "path",
            "description": "The name of the Kusto principalAssignment.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Kusto cluster database principal assignment object.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The database principal.",
                  "type": "object",
                  "required": [
                    "principalId",
                    "role",
                    "principalType"
                  ],
                  "properties": {
                    "principalId": {
                      "description": "The principal ID assigned to the database principal. It can be a user email, application ID, or security group name.",
                      "type": "string"
                    },
                    "role": {
                      "description": "Database principal role.",
                      "type": "string",
                      "enum": [
                        "Admin",
                        "Ingestor",
                        "Monitor",
                        "User",
                        "UnrestrictedViewer",
                        "Viewer"
                      ],
                      "x-ms-enum": {
                        "name": "DatabasePrincipalRole",
                        "modelAsString": true
                      }
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "The tenant id of the principal"
                    },
                    "principalType": {
                      "description": "Principal type.",
                      "type": "string",
                      "enum": [
                        "App",
                        "Group",
                        "User"
                      ],
                      "x-ms-enum": {
                        "name": "PrincipalType",
                        "modelAsString": true
                      }
                    },
                    "tenantName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The tenant name of the principal"
                    },
                    "principalName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The principal name"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "aadObjectId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The service principal object id in AAD (Azure active directory)"
                    }
                  }
                }
              },
              "description": "Class representing a database principal assignment."
            }
          }
        }
      },
      "put": {
        "tags": [
          "DatabasePrincipalAssignments"
        ],
        "operationId": "DatabasePrincipalAssignments_CreateOrUpdate",
        "description": "Creates a Kusto cluster database principalAssignment.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database in the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "principalAssignmentName",
            "in": "path",
            "description": "The name of the Kusto principalAssignment.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The database principal.",
                  "type": "object",
                  "required": [
                    "principalId",
                    "role",
                    "principalType"
                  ],
                  "properties": {
                    "principalId": {
                      "description": "The principal ID assigned to the database principal. It can be a user email, application ID, or security group name.",
                      "type": "string"
                    },
                    "role": {
                      "description": "Database principal role.",
                      "type": "string",
                      "enum": [
                        "Admin",
                        "Ingestor",
                        "Monitor",
                        "User",
                        "UnrestrictedViewer",
                        "Viewer"
                      ],
                      "x-ms-enum": {
                        "name": "DatabasePrincipalRole",
                        "modelAsString": true
                      }
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "The tenant id of the principal"
                    },
                    "principalType": {
                      "description": "Principal type.",
                      "type": "string",
                      "enum": [
                        "App",
                        "Group",
                        "User"
                      ],
                      "x-ms-enum": {
                        "name": "PrincipalType",
                        "modelAsString": true
                      }
                    },
                    "tenantName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The tenant name of the principal"
                    },
                    "principalName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The principal name"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "aadObjectId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The service principal object id in AAD (Azure active directory)"
                    }
                  }
                }
              },
              "description": "Class representing a database principal assignment."
            },
            "description": "The Kusto principalAssignments parameters supplied for the operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the PrincipalAssignments.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The database principal.",
                  "type": "object",
                  "required": [
                    "principalId",
                    "role",
                    "principalType"
                  ],
                  "properties": {
                    "principalId": {
                      "description": "The principal ID assigned to the database principal. It can be a user email, application ID, or security group name.",
                      "type": "string"
                    },
                    "role": {
                      "description": "Database principal role.",
                      "type": "string",
                      "enum": [
                        "Admin",
                        "Ingestor",
                        "Monitor",
                        "User",
                        "UnrestrictedViewer",
                        "Viewer"
                      ],
                      "x-ms-enum": {
                        "name": "DatabasePrincipalRole",
                        "modelAsString": true
                      }
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "The tenant id of the principal"
                    },
                    "principalType": {
                      "description": "Principal type.",
                      "type": "string",
                      "enum": [
                        "App",
                        "Group",
                        "User"
                      ],
                      "x-ms-enum": {
                        "name": "PrincipalType",
                        "modelAsString": true
                      }
                    },
                    "tenantName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The tenant name of the principal"
                    },
                    "principalName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The principal name"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "aadObjectId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The service principal object id in AAD (Azure active directory)"
                    }
                  }
                }
              },
              "description": "Class representing a database principal assignment."
            }
          },
          "201": {
            "description": "Successfully created the principalAssignments.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The database principal.",
                  "type": "object",
                  "required": [
                    "principalId",
                    "role",
                    "principalType"
                  ],
                  "properties": {
                    "principalId": {
                      "description": "The principal ID assigned to the database principal. It can be a user email, application ID, or security group name.",
                      "type": "string"
                    },
                    "role": {
                      "description": "Database principal role.",
                      "type": "string",
                      "enum": [
                        "Admin",
                        "Ingestor",
                        "Monitor",
                        "User",
                        "UnrestrictedViewer",
                        "Viewer"
                      ],
                      "x-ms-enum": {
                        "name": "DatabasePrincipalRole",
                        "modelAsString": true
                      }
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "The tenant id of the principal"
                    },
                    "principalType": {
                      "description": "Principal type.",
                      "type": "string",
                      "enum": [
                        "App",
                        "Group",
                        "User"
                      ],
                      "x-ms-enum": {
                        "name": "PrincipalType",
                        "modelAsString": true
                      }
                    },
                    "tenantName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The tenant name of the principal"
                    },
                    "principalName": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The principal name"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "aadObjectId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The service principal object id in AAD (Azure active directory)"
                    }
                  }
                }
              },
              "description": "Class representing a database principal assignment."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DatabasePrincipalAssignments"
        ],
        "operationId": "DatabasePrincipalAssignments_Delete",
        "description": "Deletes a Kusto principalAssignment.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database in the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "principalAssignmentName",
            "in": "path",
            "description": "The name of the Kusto principalAssignment.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- principalAssignments deleted successfully."
          },
          "202": {
            "description": "Accepted the delete principalAssignments request.",
            "headers": {
              "Location": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent -- principalAssignments does not exist in the subscription."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/principalAssignments": {
      "get": {
        "tags": [
          "DatabasePrincipalAssignments"
        ],
        "operationId": "DatabasePrincipalAssignments_List",
        "description": "Lists all Kusto cluster database principalAssignments.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database in the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The database principal.",
                        "type": "object",
                        "required": [
                          "principalId",
                          "role",
                          "principalType"
                        ],
                        "properties": {
                          "principalId": {
                            "description": "The principal ID assigned to the database principal. It can be a user email, application ID, or security group name.",
                            "type": "string"
                          },
                          "role": {
                            "description": "Database principal role.",
                            "type": "string",
                            "enum": [
                              "Admin",
                              "Ingestor",
                              "Monitor",
                              "User",
                              "UnrestrictedViewer",
                              "Viewer"
                            ],
                            "x-ms-enum": {
                              "name": "DatabasePrincipalRole",
                              "modelAsString": true
                            }
                          },
                          "tenantId": {
                            "type": "string",
                            "description": "The tenant id of the principal"
                          },
                          "principalType": {
                            "description": "Principal type.",
                            "type": "string",
                            "enum": [
                              "App",
                              "Group",
                              "User"
                            ],
                            "x-ms-enum": {
                              "name": "PrincipalType",
                              "modelAsString": true
                            }
                          },
                          "tenantName": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The tenant name of the principal"
                          },
                          "principalName": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The principal name"
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "description": "The provisioned state of the resource.",
                            "type": "string",
                            "enum": [
                              "Running",
                              "Creating",
                              "Deleting",
                              "Succeeded",
                              "Failed",
                              "Moving",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "aadObjectId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The service principal object id in AAD (Azure active directory)"
                          }
                        }
                      }
                    },
                    "description": "Class representing a database principal assignment."
                  },
                  "description": "The list of Kusto database principal assignments."
                }
              },
              "description": "The list Kusto database principal assignments operation response."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/listPrincipals": {
      "post": {
        "tags": [
          "Databases"
        ],
        "description": "Returns a list of database principals of the given Kusto cluster and database.",
        "operationId": "Databases_ListPrincipals",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database in the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of database principals.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "name",
                      "role",
                      "type"
                    ],
                    "properties": {
                      "role": {
                        "description": "Database principal role.",
                        "type": "string",
                        "enum": [
                          "Admin",
                          "Ingestor",
                          "Monitor",
                          "User",
                          "UnrestrictedViewer",
                          "Viewer"
                        ],
                        "x-ms-enum": {
                          "name": "DatabasePrincipalRole",
                          "modelAsString": true
                        }
                      },
                      "name": {
                        "description": "Database principal name.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Database principal type.",
                        "type": "string",
                        "enum": [
                          "App",
                          "Group",
                          "User"
                        ],
                        "x-ms-enum": {
                          "name": "DatabasePrincipalType",
                          "modelAsString": true
                        }
                      },
                      "fqn": {
                        "description": "Database principal fully qualified name.",
                        "type": "string"
                      },
                      "email": {
                        "description": "Database principal email if exists.",
                        "type": "string"
                      },
                      "appId": {
                        "description": "Application id - relevant only for application principal type.",
                        "type": "string"
                      },
                      "tenantName": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The tenant name of the principal"
                      }
                    },
                    "description": "A class representing database principal entity."
                  },
                  "description": "The list of Kusto database principals."
                }
              },
              "description": "The list Kusto database principals operation response."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/addPrincipals": {
      "post": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_AddPrincipals",
        "description": "Add Database principals permissions.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database in the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "databasePrincipalsToAdd",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "name",
                      "role",
                      "type"
                    ],
                    "properties": {
                      "role": {
                        "description": "Database principal role.",
                        "type": "string",
                        "enum": [
                          "Admin",
                          "Ingestor",
                          "Monitor",
                          "User",
                          "UnrestrictedViewer",
                          "Viewer"
                        ],
                        "x-ms-enum": {
                          "name": "DatabasePrincipalRole",
                          "modelAsString": true
                        }
                      },
                      "name": {
                        "description": "Database principal name.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Database principal type.",
                        "type": "string",
                        "enum": [
                          "App",
                          "Group",
                          "User"
                        ],
                        "x-ms-enum": {
                          "name": "DatabasePrincipalType",
                          "modelAsString": true
                        }
                      },
                      "fqn": {
                        "description": "Database principal fully qualified name.",
                        "type": "string"
                      },
                      "email": {
                        "description": "Database principal email if exists.",
                        "type": "string"
                      },
                      "appId": {
                        "description": "Application id - relevant only for application principal type.",
                        "type": "string"
                      },
                      "tenantName": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The tenant name of the principal"
                      }
                    },
                    "description": "A class representing database principal entity."
                  },
                  "description": "The list of Kusto database principals."
                }
              },
              "description": "The list Kusto database principals operation request."
            },
            "description": "List of database principals to add."
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Successfully added the list of database principals. Returns the updated list of principals.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "name",
                      "role",
                      "type"
                    ],
                    "properties": {
                      "role": {
                        "description": "Database principal role.",
                        "type": "string",
                        "enum": [
                          "Admin",
                          "Ingestor",
                          "Monitor",
                          "User",
                          "UnrestrictedViewer",
                          "Viewer"
                        ],
                        "x-ms-enum": {
                          "name": "DatabasePrincipalRole",
                          "modelAsString": true
                        }
                      },
                      "name": {
                        "description": "Database principal name.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Database principal type.",
                        "type": "string",
                        "enum": [
                          "App",
                          "Group",
                          "User"
                        ],
                        "x-ms-enum": {
                          "name": "DatabasePrincipalType",
                          "modelAsString": true
                        }
                      },
                      "fqn": {
                        "description": "Database principal fully qualified name.",
                        "type": "string"
                      },
                      "email": {
                        "description": "Database principal email if exists.",
                        "type": "string"
                      },
                      "appId": {
                        "description": "Application id - relevant only for application principal type.",
                        "type": "string"
                      },
                      "tenantName": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The tenant name of the principal"
                      }
                    },
                    "description": "A class representing database principal entity."
                  },
                  "description": "The list of Kusto database principals."
                }
              },
              "description": "The list Kusto database principals operation response."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/scripts": {
      "get": {
        "tags": [
          "scripts"
        ],
        "operationId": "Scripts_ListByDatabase",
        "description": "Returns the list of database scripts for given database.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database in the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The list result of Kusto database scripts.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The database script.",
                        "type": "object",
                        "properties": {
                          "scriptUrl": {
                            "description": "The url to the KQL script blob file. Must not be used together with scriptContent property",
                            "type": "string"
                          },
                          "scriptUrlSasToken": {
                            "description": "The SaS token that provide read access to the file which contain the script. Must be provided when using scriptUrl property.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create"
                            ],
                            "x-ms-secret": true
                          },
                          "scriptContent": {
                            "description": "The script content. This property should be used when the script is provide inline and not through file in a SA. Must not be used together with scriptUrl and scriptUrlSasToken properties.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create"
                            ],
                            "x-ms-secret": true
                          },
                          "forceUpdateTag": {
                            "description": "A unique string. If changed the script will be applied again.",
                            "type": "string"
                          },
                          "continueOnErrors": {
                            "description": "Flag that indicates whether to continue if one of the command fails.",
                            "type": "boolean",
                            "default": false
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "description": "The provisioned state of the resource.",
                            "type": "string",
                            "enum": [
                              "Running",
                              "Creating",
                              "Deleting",
                              "Succeeded",
                              "Failed",
                              "Moving",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "scriptLevel": {
                            "type": "string",
                            "description": "Differentiates between the type of script commands included - Database or Cluster. The default is Database.",
                            "enum": [
                              "Database",
                              "Cluster"
                            ],
                            "x-ms-enum": {
                              "name": "ScriptLevel",
                              "modelAsString": true
                            }
                          },
                          "principalPermissionsAction": {
                            "type": "string",
                            "description": "Indicates if the permissions for the script caller are kept following completion of the script.",
                            "enum": [
                              "RetainPermissionOnScriptCompletion",
                              "RemovePermissionOnScriptCompletion"
                            ],
                            "x-ms-enum": {
                              "name": "PrincipalPermissionsAction",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    },
                    "description": "Class representing a database script."
                  },
                  "description": "The list of Kusto scripts."
                }
              },
              "description": "The list Kusto database script operation response."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/scripts/{scriptName}": {
      "get": {
        "tags": [
          "Scripts"
        ],
        "operationId": "Scripts_Get",
        "description": "Gets a Kusto cluster database script.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database in the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "scriptName",
            "in": "path",
            "description": "The name of the Kusto database script.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Kusto cluster database script object.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The database script.",
                  "type": "object",
                  "properties": {
                    "scriptUrl": {
                      "description": "The url to the KQL script blob file. Must not be used together with scriptContent property",
                      "type": "string"
                    },
                    "scriptUrlSasToken": {
                      "description": "The SaS token that provide read access to the file which contain the script. Must be provided when using scriptUrl property.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "scriptContent": {
                      "description": "The script content. This property should be used when the script is provide inline and not through file in a SA. Must not be used together with scriptUrl and scriptUrlSasToken properties.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "forceUpdateTag": {
                      "description": "A unique string. If changed the script will be applied again.",
                      "type": "string"
                    },
                    "continueOnErrors": {
                      "description": "Flag that indicates whether to continue if one of the command fails.",
                      "type": "boolean",
                      "default": false
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "scriptLevel": {
                      "type": "string",
                      "description": "Differentiates between the type of script commands included - Database or Cluster. The default is Database.",
                      "enum": [
                        "Database",
                        "Cluster"
                      ],
                      "x-ms-enum": {
                        "name": "ScriptLevel",
                        "modelAsString": true
                      }
                    },
                    "principalPermissionsAction": {
                      "type": "string",
                      "description": "Indicates if the permissions for the script caller are kept following completion of the script.",
                      "enum": [
                        "RetainPermissionOnScriptCompletion",
                        "RemovePermissionOnScriptCompletion"
                      ],
                      "x-ms-enum": {
                        "name": "PrincipalPermissionsAction",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "Class representing a database script."
            }
          }
        }
      },
      "put": {
        "tags": [
          "Scripts"
        ],
        "operationId": "Scripts_CreateOrUpdate",
        "description": "Creates a Kusto database script.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database in the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "scriptName",
            "in": "path",
            "description": "The name of the Kusto database script.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The database script.",
                  "type": "object",
                  "properties": {
                    "scriptUrl": {
                      "description": "The url to the KQL script blob file. Must not be used together with scriptContent property",
                      "type": "string"
                    },
                    "scriptUrlSasToken": {
                      "description": "The SaS token that provide read access to the file which contain the script. Must be provided when using scriptUrl property.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "scriptContent": {
                      "description": "The script content. This property should be used when the script is provide inline and not through file in a SA. Must not be used together with scriptUrl and scriptUrlSasToken properties.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "forceUpdateTag": {
                      "description": "A unique string. If changed the script will be applied again.",
                      "type": "string"
                    },
                    "continueOnErrors": {
                      "description": "Flag that indicates whether to continue if one of the command fails.",
                      "type": "boolean",
                      "default": false
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "scriptLevel": {
                      "type": "string",
                      "description": "Differentiates between the type of script commands included - Database or Cluster. The default is Database.",
                      "enum": [
                        "Database",
                        "Cluster"
                      ],
                      "x-ms-enum": {
                        "name": "ScriptLevel",
                        "modelAsString": true
                      }
                    },
                    "principalPermissionsAction": {
                      "type": "string",
                      "description": "Indicates if the permissions for the script caller are kept following completion of the script.",
                      "enum": [
                        "RetainPermissionOnScriptCompletion",
                        "RemovePermissionOnScriptCompletion"
                      ],
                      "x-ms-enum": {
                        "name": "PrincipalPermissionsAction",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "Class representing a database script."
            },
            "description": "The Kusto Script parameters contains the KQL to run."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the Script.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The database script.",
                  "type": "object",
                  "properties": {
                    "scriptUrl": {
                      "description": "The url to the KQL script blob file. Must not be used together with scriptContent property",
                      "type": "string"
                    },
                    "scriptUrlSasToken": {
                      "description": "The SaS token that provide read access to the file which contain the script. Must be provided when using scriptUrl property.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "scriptContent": {
                      "description": "The script content. This property should be used when the script is provide inline and not through file in a SA. Must not be used together with scriptUrl and scriptUrlSasToken properties.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "forceUpdateTag": {
                      "description": "A unique string. If changed the script will be applied again.",
                      "type": "string"
                    },
                    "continueOnErrors": {
                      "description": "Flag that indicates whether to continue if one of the command fails.",
                      "type": "boolean",
                      "default": false
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "scriptLevel": {
                      "type": "string",
                      "description": "Differentiates between the type of script commands included - Database or Cluster. The default is Database.",
                      "enum": [
                        "Database",
                        "Cluster"
                      ],
                      "x-ms-enum": {
                        "name": "ScriptLevel",
                        "modelAsString": true
                      }
                    },
                    "principalPermissionsAction": {
                      "type": "string",
                      "description": "Indicates if the permissions for the script caller are kept following completion of the script.",
                      "enum": [
                        "RetainPermissionOnScriptCompletion",
                        "RemovePermissionOnScriptCompletion"
                      ],
                      "x-ms-enum": {
                        "name": "PrincipalPermissionsAction",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "Class representing a database script."
            }
          },
          "201": {
            "description": "Successfully created the script.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The database script.",
                  "type": "object",
                  "properties": {
                    "scriptUrl": {
                      "description": "The url to the KQL script blob file. Must not be used together with scriptContent property",
                      "type": "string"
                    },
                    "scriptUrlSasToken": {
                      "description": "The SaS token that provide read access to the file which contain the script. Must be provided when using scriptUrl property.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "scriptContent": {
                      "description": "The script content. This property should be used when the script is provide inline and not through file in a SA. Must not be used together with scriptUrl and scriptUrlSasToken properties.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "forceUpdateTag": {
                      "description": "A unique string. If changed the script will be applied again.",
                      "type": "string"
                    },
                    "continueOnErrors": {
                      "description": "Flag that indicates whether to continue if one of the command fails.",
                      "type": "boolean",
                      "default": false
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "scriptLevel": {
                      "type": "string",
                      "description": "Differentiates between the type of script commands included - Database or Cluster. The default is Database.",
                      "enum": [
                        "Database",
                        "Cluster"
                      ],
                      "x-ms-enum": {
                        "name": "ScriptLevel",
                        "modelAsString": true
                      }
                    },
                    "principalPermissionsAction": {
                      "type": "string",
                      "description": "Indicates if the permissions for the script caller are kept following completion of the script.",
                      "enum": [
                        "RetainPermissionOnScriptCompletion",
                        "RemovePermissionOnScriptCompletion"
                      ],
                      "x-ms-enum": {
                        "name": "PrincipalPermissionsAction",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "Class representing a database script."
            }
          },
          "202": {
            "description": "Successfully accepted the Script.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The database script.",
                  "type": "object",
                  "properties": {
                    "scriptUrl": {
                      "description": "The url to the KQL script blob file. Must not be used together with scriptContent property",
                      "type": "string"
                    },
                    "scriptUrlSasToken": {
                      "description": "The SaS token that provide read access to the file which contain the script. Must be provided when using scriptUrl property.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "scriptContent": {
                      "description": "The script content. This property should be used when the script is provide inline and not through file in a SA. Must not be used together with scriptUrl and scriptUrlSasToken properties.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "forceUpdateTag": {
                      "description": "A unique string. If changed the script will be applied again.",
                      "type": "string"
                    },
                    "continueOnErrors": {
                      "description": "Flag that indicates whether to continue if one of the command fails.",
                      "type": "boolean",
                      "default": false
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "scriptLevel": {
                      "type": "string",
                      "description": "Differentiates between the type of script commands included - Database or Cluster. The default is Database.",
                      "enum": [
                        "Database",
                        "Cluster"
                      ],
                      "x-ms-enum": {
                        "name": "ScriptLevel",
                        "modelAsString": true
                      }
                    },
                    "principalPermissionsAction": {
                      "type": "string",
                      "description": "Indicates if the permissions for the script caller are kept following completion of the script.",
                      "enum": [
                        "RetainPermissionOnScriptCompletion",
                        "RemovePermissionOnScriptCompletion"
                      ],
                      "x-ms-enum": {
                        "name": "PrincipalPermissionsAction",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "Class representing a database script."
            },
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Scripts"
        ],
        "operationId": "Scripts_Update",
        "description": "Updates a database script.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database in the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "scriptName",
            "in": "path",
            "description": "The name of the Kusto database script.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The database script.",
                  "type": "object",
                  "properties": {
                    "scriptUrl": {
                      "description": "The url to the KQL script blob file. Must not be used together with scriptContent property",
                      "type": "string"
                    },
                    "scriptUrlSasToken": {
                      "description": "The SaS token that provide read access to the file which contain the script. Must be provided when using scriptUrl property.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "scriptContent": {
                      "description": "The script content. This property should be used when the script is provide inline and not through file in a SA. Must not be used together with scriptUrl and scriptUrlSasToken properties.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "forceUpdateTag": {
                      "description": "A unique string. If changed the script will be applied again.",
                      "type": "string"
                    },
                    "continueOnErrors": {
                      "description": "Flag that indicates whether to continue if one of the command fails.",
                      "type": "boolean",
                      "default": false
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "scriptLevel": {
                      "type": "string",
                      "description": "Differentiates between the type of script commands included - Database or Cluster. The default is Database.",
                      "enum": [
                        "Database",
                        "Cluster"
                      ],
                      "x-ms-enum": {
                        "name": "ScriptLevel",
                        "modelAsString": true
                      }
                    },
                    "principalPermissionsAction": {
                      "type": "string",
                      "description": "Indicates if the permissions for the script caller are kept following completion of the script.",
                      "enum": [
                        "RetainPermissionOnScriptCompletion",
                        "RemovePermissionOnScriptCompletion"
                      ],
                      "x-ms-enum": {
                        "name": "PrincipalPermissionsAction",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "Class representing a database script."
            },
            "description": "The Kusto Script parameters contains to the KQL to run."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the database script.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The database script.",
                  "type": "object",
                  "properties": {
                    "scriptUrl": {
                      "description": "The url to the KQL script blob file. Must not be used together with scriptContent property",
                      "type": "string"
                    },
                    "scriptUrlSasToken": {
                      "description": "The SaS token that provide read access to the file which contain the script. Must be provided when using scriptUrl property.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "scriptContent": {
                      "description": "The script content. This property should be used when the script is provide inline and not through file in a SA. Must not be used together with scriptUrl and scriptUrlSasToken properties.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "forceUpdateTag": {
                      "description": "A unique string. If changed the script will be applied again.",
                      "type": "string"
                    },
                    "continueOnErrors": {
                      "description": "Flag that indicates whether to continue if one of the command fails.",
                      "type": "boolean",
                      "default": false
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "scriptLevel": {
                      "type": "string",
                      "description": "Differentiates between the type of script commands included - Database or Cluster. The default is Database.",
                      "enum": [
                        "Database",
                        "Cluster"
                      ],
                      "x-ms-enum": {
                        "name": "ScriptLevel",
                        "modelAsString": true
                      }
                    },
                    "principalPermissionsAction": {
                      "type": "string",
                      "description": "Indicates if the permissions for the script caller are kept following completion of the script.",
                      "enum": [
                        "RetainPermissionOnScriptCompletion",
                        "RemovePermissionOnScriptCompletion"
                      ],
                      "x-ms-enum": {
                        "name": "PrincipalPermissionsAction",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "Class representing a database script."
            }
          },
          "202": {
            "description": "Accepted the update request of the database script.",
            "headers": {
              "Location": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The database script.",
                  "type": "object",
                  "properties": {
                    "scriptUrl": {
                      "description": "The url to the KQL script blob file. Must not be used together with scriptContent property",
                      "type": "string"
                    },
                    "scriptUrlSasToken": {
                      "description": "The SaS token that provide read access to the file which contain the script. Must be provided when using scriptUrl property.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "scriptContent": {
                      "description": "The script content. This property should be used when the script is provide inline and not through file in a SA. Must not be used together with scriptUrl and scriptUrlSasToken properties.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "forceUpdateTag": {
                      "description": "A unique string. If changed the script will be applied again.",
                      "type": "string"
                    },
                    "continueOnErrors": {
                      "description": "Flag that indicates whether to continue if one of the command fails.",
                      "type": "boolean",
                      "default": false
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "scriptLevel": {
                      "type": "string",
                      "description": "Differentiates between the type of script commands included - Database or Cluster. The default is Database.",
                      "enum": [
                        "Database",
                        "Cluster"
                      ],
                      "x-ms-enum": {
                        "name": "ScriptLevel",
                        "modelAsString": true
                      }
                    },
                    "principalPermissionsAction": {
                      "type": "string",
                      "description": "Indicates if the permissions for the script caller are kept following completion of the script.",
                      "enum": [
                        "RetainPermissionOnScriptCompletion",
                        "RemovePermissionOnScriptCompletion"
                      ],
                      "x-ms-enum": {
                        "name": "PrincipalPermissionsAction",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "Class representing a database script."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Scripts"
        ],
        "operationId": "Scripts_Delete",
        "description": "Deletes a Kusto database script.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database in the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "scriptName",
            "in": "path",
            "description": "The name of the Kusto database script.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Script deleted successfully."
          },
          "202": {
            "description": "Accepted the delete Script request.",
            "headers": {
              "Location": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent -- If the Script resource is already deleted, this is the expected status code."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/sandboxCustomImages": {
      "get": {
        "tags": [
          "SandboxCustomImages"
        ],
        "description": "Returns the list of the existing sandbox custom images of the given Kusto cluster.",
        "operationId": "SandboxCustomImages_ListByCluster",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of sandbox custom images.",
            "schema": {
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "Link to the next page of results",
                  "type": "string"
                },
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "A sandbox custom image.",
                        "type": "object",
                        "required": [
                          "language"
                        ],
                        "properties": {
                          "language": {
                            "description": "The language name, for example Python.",
                            "type": "string",
                            "enum": [
                              "Python"
                            ],
                            "x-ms-enum": {
                              "name": "language",
                              "modelAsString": true
                            }
                          },
                          "languageVersion": {
                            "description": "The version of the language. Either this property or baseImageName should be specified.",
                            "type": "string"
                          },
                          "baseImageName": {
                            "description": "The base image name on which the custom image is built on top of. It can be one of the LanguageExtensionImageName (e.g.: 'Python3_10_8', 'Python3_10_8_DL') or the name of an existing custom image. Either this property or languageVersion should be specified.",
                            "type": "string"
                          },
                          "requirementsFileContent": {
                            "description": "The requirements file content.",
                            "type": "string"
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "description": "The provisioned state of the resource.",
                            "type": "string",
                            "enum": [
                              "Running",
                              "Creating",
                              "Deleting",
                              "Succeeded",
                              "Failed",
                              "Moving",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      }
                    },
                    "description": "Class representing a Kusto sandbox custom image."
                  },
                  "description": "The list of Kusto sandbox custom images."
                }
              },
              "description": "The list Kusto sandbox custom images operation response."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/sandboxCustomImages/{sandboxCustomImageName}": {
      "get": {
        "tags": [
          "SandboxCustomImages"
        ],
        "operationId": "SandboxCustomImages_Get",
        "description": "Returns a sandbox custom image",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "sandboxCustomImageName",
            "in": "path",
            "description": "The name of the sandbox custom image.",
            "required": true,
            "x-ms-parameter-location": "method",
            "type": "string",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the specified sandbox custom image",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "A sandbox custom image.",
                  "type": "object",
                  "required": [
                    "language"
                  ],
                  "properties": {
                    "language": {
                      "description": "The language name, for example Python.",
                      "type": "string",
                      "enum": [
                        "Python"
                      ],
                      "x-ms-enum": {
                        "name": "language",
                        "modelAsString": true
                      }
                    },
                    "languageVersion": {
                      "description": "The version of the language. Either this property or baseImageName should be specified.",
                      "type": "string"
                    },
                    "baseImageName": {
                      "description": "The base image name on which the custom image is built on top of. It can be one of the LanguageExtensionImageName (e.g.: 'Python3_10_8', 'Python3_10_8_DL') or the name of an existing custom image. Either this property or languageVersion should be specified.",
                      "type": "string"
                    },
                    "requirementsFileContent": {
                      "description": "The requirements file content.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              },
              "description": "Class representing a Kusto sandbox custom image."
            }
          }
        }
      },
      "put": {
        "tags": [
          "SandboxCustomImages"
        ],
        "operationId": "SandboxCustomImages_CreateOrUpdate",
        "description": "Creates or updates a sandbox custom image.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "sandboxCustomImageName",
            "in": "path",
            "description": "The name of the sandbox custom image.",
            "required": true,
            "x-ms-parameter-location": "method",
            "type": "string",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "A sandbox custom image.",
                  "type": "object",
                  "required": [
                    "language"
                  ],
                  "properties": {
                    "language": {
                      "description": "The language name, for example Python.",
                      "type": "string",
                      "enum": [
                        "Python"
                      ],
                      "x-ms-enum": {
                        "name": "language",
                        "modelAsString": true
                      }
                    },
                    "languageVersion": {
                      "description": "The version of the language. Either this property or baseImageName should be specified.",
                      "type": "string"
                    },
                    "baseImageName": {
                      "description": "The base image name on which the custom image is built on top of. It can be one of the LanguageExtensionImageName (e.g.: 'Python3_10_8', 'Python3_10_8_DL') or the name of an existing custom image. Either this property or languageVersion should be specified.",
                      "type": "string"
                    },
                    "requirementsFileContent": {
                      "description": "The requirements file content.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              },
              "description": "Class representing a Kusto sandbox custom image."
            },
            "description": "The sandbox custom image parameters."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the sandbox custom image.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "A sandbox custom image.",
                  "type": "object",
                  "required": [
                    "language"
                  ],
                  "properties": {
                    "language": {
                      "description": "The language name, for example Python.",
                      "type": "string",
                      "enum": [
                        "Python"
                      ],
                      "x-ms-enum": {
                        "name": "language",
                        "modelAsString": true
                      }
                    },
                    "languageVersion": {
                      "description": "The version of the language. Either this property or baseImageName should be specified.",
                      "type": "string"
                    },
                    "baseImageName": {
                      "description": "The base image name on which the custom image is built on top of. It can be one of the LanguageExtensionImageName (e.g.: 'Python3_10_8', 'Python3_10_8_DL') or the name of an existing custom image. Either this property or languageVersion should be specified.",
                      "type": "string"
                    },
                    "requirementsFileContent": {
                      "description": "The requirements file content.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              },
              "description": "Class representing a Kusto sandbox custom image."
            }
          },
          "201": {
            "description": "Successfully created the sandbox custom image.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "A sandbox custom image.",
                  "type": "object",
                  "required": [
                    "language"
                  ],
                  "properties": {
                    "language": {
                      "description": "The language name, for example Python.",
                      "type": "string",
                      "enum": [
                        "Python"
                      ],
                      "x-ms-enum": {
                        "name": "language",
                        "modelAsString": true
                      }
                    },
                    "languageVersion": {
                      "description": "The version of the language. Either this property or baseImageName should be specified.",
                      "type": "string"
                    },
                    "baseImageName": {
                      "description": "The base image name on which the custom image is built on top of. It can be one of the LanguageExtensionImageName (e.g.: 'Python3_10_8', 'Python3_10_8_DL') or the name of an existing custom image. Either this property or languageVersion should be specified.",
                      "type": "string"
                    },
                    "requirementsFileContent": {
                      "description": "The requirements file content.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              },
              "description": "Class representing a Kusto sandbox custom image."
            }
          }
        }
      },
      "patch": {
        "tags": [
          "SandboxCustomImages"
        ],
        "operationId": "SandboxCustomImages_Update",
        "description": "Updates a sandbox custom image.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "sandboxCustomImageName",
            "in": "path",
            "description": "The name of the sandbox custom image.",
            "required": true,
            "x-ms-parameter-location": "method",
            "type": "string",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "A sandbox custom image.",
                  "type": "object",
                  "required": [
                    "language"
                  ],
                  "properties": {
                    "language": {
                      "description": "The language name, for example Python.",
                      "type": "string",
                      "enum": [
                        "Python"
                      ],
                      "x-ms-enum": {
                        "name": "language",
                        "modelAsString": true
                      }
                    },
                    "languageVersion": {
                      "description": "The version of the language. Either this property or baseImageName should be specified.",
                      "type": "string"
                    },
                    "baseImageName": {
                      "description": "The base image name on which the custom image is built on top of. It can be one of the LanguageExtensionImageName (e.g.: 'Python3_10_8', 'Python3_10_8_DL') or the name of an existing custom image. Either this property or languageVersion should be specified.",
                      "type": "string"
                    },
                    "requirementsFileContent": {
                      "description": "The requirements file content.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              },
              "description": "Class representing a Kusto sandbox custom image."
            },
            "description": "The sandbox custom image parameters."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the sandbox custom image.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "A sandbox custom image.",
                  "type": "object",
                  "required": [
                    "language"
                  ],
                  "properties": {
                    "language": {
                      "description": "The language name, for example Python.",
                      "type": "string",
                      "enum": [
                        "Python"
                      ],
                      "x-ms-enum": {
                        "name": "language",
                        "modelAsString": true
                      }
                    },
                    "languageVersion": {
                      "description": "The version of the language. Either this property or baseImageName should be specified.",
                      "type": "string"
                    },
                    "baseImageName": {
                      "description": "The base image name on which the custom image is built on top of. It can be one of the LanguageExtensionImageName (e.g.: 'Python3_10_8', 'Python3_10_8_DL') or the name of an existing custom image. Either this property or languageVersion should be specified.",
                      "type": "string"
                    },
                    "requirementsFileContent": {
                      "description": "The requirements file content.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              },
              "description": "Class representing a Kusto sandbox custom image."
            }
          },
          "201": {
            "description": "Accepted. The sandbox custom image update will complete asynchronously.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "A sandbox custom image.",
                  "type": "object",
                  "required": [
                    "language"
                  ],
                  "properties": {
                    "language": {
                      "description": "The language name, for example Python.",
                      "type": "string",
                      "enum": [
                        "Python"
                      ],
                      "x-ms-enum": {
                        "name": "language",
                        "modelAsString": true
                      }
                    },
                    "languageVersion": {
                      "description": "The version of the language. Either this property or baseImageName should be specified.",
                      "type": "string"
                    },
                    "baseImageName": {
                      "description": "The base image name on which the custom image is built on top of. It can be one of the LanguageExtensionImageName (e.g.: 'Python3_10_8', 'Python3_10_8_DL') or the name of an existing custom image. Either this property or languageVersion should be specified.",
                      "type": "string"
                    },
                    "requirementsFileContent": {
                      "description": "The requirements file content.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              },
              "description": "Class representing a Kusto sandbox custom image."
            }
          },
          "202": {
            "description": "Accepted the update request of the sandbox custom image.",
            "headers": {
              "Location": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "A sandbox custom image.",
                  "type": "object",
                  "required": [
                    "language"
                  ],
                  "properties": {
                    "language": {
                      "description": "The language name, for example Python.",
                      "type": "string",
                      "enum": [
                        "Python"
                      ],
                      "x-ms-enum": {
                        "name": "language",
                        "modelAsString": true
                      }
                    },
                    "languageVersion": {
                      "description": "The version of the language. Either this property or baseImageName should be specified.",
                      "type": "string"
                    },
                    "baseImageName": {
                      "description": "The base image name on which the custom image is built on top of. It can be one of the LanguageExtensionImageName (e.g.: 'Python3_10_8', 'Python3_10_8_DL') or the name of an existing custom image. Either this property or languageVersion should be specified.",
                      "type": "string"
                    },
                    "requirementsFileContent": {
                      "description": "The requirements file content.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              },
              "description": "Class representing a Kusto sandbox custom image."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SandboxCustomImages"
        ],
        "operationId": "SandboxCustomImages_Delete",
        "description": "Deletes a sandbox custom image.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "sandboxCustomImageName",
            "in": "path",
            "description": "The name of the sandbox custom image.",
            "required": true,
            "x-ms-parameter-location": "method",
            "type": "string",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- sandbox custom image deleted successfully."
          },
          "202": {
            "description": "Accepted the delete sandbox custom image request.",
            "headers": {
              "Location": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent -- If the sandbox custom image resource is already deleted, this is the expected status code."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/sandboxCustomImagesCheckNameAvailability": {
      "post": {
        "tags": [
          "SandboxCustomImages"
        ],
        "operationId": "SandboxCustomImages_CheckNameAvailability",
        "description": "Checks that the sandbox custom image resource name is valid and is not already in use.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceName",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Sandbox custom image resource name."
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "Microsoft.Kusto/clusters/sandboxCustomImages"
                  ],
                  "x-ms-enum": {
                    "name": "SandboxCustomImageType",
                    "modelAsString": false
                  },
                  "description": "The type of resource, for instance Microsoft.Kusto/clusters/sandboxCustomImages."
                }
              },
              "required": [
                "name",
                "type"
              ],
              "description": "The result returned from a sandboxCustomImage check name availability request."
            },
            "description": "The name of the resource."
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Operation to check the kusto resource name availability was successful.",
            "schema": {
              "type": "object",
              "properties": {
                "nameAvailable": {
                  "type": "boolean",
                  "description": "Specifies a Boolean value that indicates if the name is available."
                },
                "name": {
                  "type": "string",
                  "description": "The name that was checked."
                },
                "message": {
                  "type": "string",
                  "description": "Message indicating an unavailable name due to a conflict, or a description of the naming rules that are violated."
                },
                "reason": {
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "AlreadyExists"
                  ],
                  "x-ms-enum": {
                    "name": "reason",
                    "modelAsString": true
                  },
                  "description": "Message providing the reason why the given name is invalid."
                }
              },
              "description": "The result returned from a check name availability request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/managedPrivateEndpoints": {
      "get": {
        "tags": [
          "ManagedPrivateEndpoints"
        ],
        "operationId": "ManagedPrivateEndpoints_List",
        "description": "Returns the list of managed private endpoints.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The list result of managed private endpoints.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "A managed private endpoint.",
                        "type": "object",
                        "required": [
                          "privateLinkResourceId",
                          "groupId"
                        ],
                        "properties": {
                          "privateLinkResourceId": {
                            "description": "The ARM resource ID of the resource for which the managed private endpoint is created.",
                            "type": "string"
                          },
                          "privateLinkResourceRegion": {
                            "description": "The region of the resource to which the managed private endpoint is created.",
                            "type": "string"
                          },
                          "groupId": {
                            "description": "The groupId in which the managed private endpoint is created.",
                            "type": "string"
                          },
                          "requestMessage": {
                            "description": "The user request message.",
                            "type": "string"
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "description": "The provisioned state of the resource.",
                            "type": "string",
                            "enum": [
                              "Running",
                              "Creating",
                              "Deleting",
                              "Succeeded",
                              "Failed",
                              "Moving",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    },
                    "description": "Class representing a managed private endpoint."
                  },
                  "description": "The list of managed private endpoints."
                }
              },
              "description": "The list managed private endpoints operation response."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/managedPrivateEndpoints/{managedPrivateEndpointName}": {
      "get": {
        "tags": [
          "ManagedPrivateEndpoints"
        ],
        "operationId": "ManagedPrivateEndpoints_Get",
        "description": "Gets a managed private endpoint.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "managedPrivateEndpointName",
            "in": "path",
            "description": "The name of the managed private endpoint.",
            "required": true,
            "x-ms-parameter-location": "method",
            "type": "string",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The managed private endpoint object.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "A managed private endpoint.",
                  "type": "object",
                  "required": [
                    "privateLinkResourceId",
                    "groupId"
                  ],
                  "properties": {
                    "privateLinkResourceId": {
                      "description": "The ARM resource ID of the resource for which the managed private endpoint is created.",
                      "type": "string"
                    },
                    "privateLinkResourceRegion": {
                      "description": "The region of the resource to which the managed private endpoint is created.",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "The groupId in which the managed private endpoint is created.",
                      "type": "string"
                    },
                    "requestMessage": {
                      "description": "The user request message.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "Class representing a managed private endpoint."
            }
          }
        }
      },
      "put": {
        "tags": [
          "ManagedPrivateEndpoints"
        ],
        "operationId": "ManagedPrivateEndpoints_CreateOrUpdate",
        "description": "Creates a managed private endpoint.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "managedPrivateEndpointName",
            "in": "path",
            "description": "The name of the managed private endpoint.",
            "required": true,
            "x-ms-parameter-location": "method",
            "type": "string",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "A managed private endpoint.",
                  "type": "object",
                  "required": [
                    "privateLinkResourceId",
                    "groupId"
                  ],
                  "properties": {
                    "privateLinkResourceId": {
                      "description": "The ARM resource ID of the resource for which the managed private endpoint is created.",
                      "type": "string"
                    },
                    "privateLinkResourceRegion": {
                      "description": "The region of the resource to which the managed private endpoint is created.",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "The groupId in which the managed private endpoint is created.",
                      "type": "string"
                    },
                    "requestMessage": {
                      "description": "The user request message.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "Class representing a managed private endpoint."
            },
            "description": "The managed private endpoint parameters."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the managed private endpoint.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "A managed private endpoint.",
                  "type": "object",
                  "required": [
                    "privateLinkResourceId",
                    "groupId"
                  ],
                  "properties": {
                    "privateLinkResourceId": {
                      "description": "The ARM resource ID of the resource for which the managed private endpoint is created.",
                      "type": "string"
                    },
                    "privateLinkResourceRegion": {
                      "description": "The region of the resource to which the managed private endpoint is created.",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "The groupId in which the managed private endpoint is created.",
                      "type": "string"
                    },
                    "requestMessage": {
                      "description": "The user request message.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "Class representing a managed private endpoint."
            }
          },
          "201": {
            "description": "Successfully created the managed private endpoint.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "A managed private endpoint.",
                  "type": "object",
                  "required": [
                    "privateLinkResourceId",
                    "groupId"
                  ],
                  "properties": {
                    "privateLinkResourceId": {
                      "description": "The ARM resource ID of the resource for which the managed private endpoint is created.",
                      "type": "string"
                    },
                    "privateLinkResourceRegion": {
                      "description": "The region of the resource to which the managed private endpoint is created.",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "The groupId in which the managed private endpoint is created.",
                      "type": "string"
                    },
                    "requestMessage": {
                      "description": "The user request message.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "Class representing a managed private endpoint."
            }
          },
          "202": {
            "description": "Successfully accepted the managed private endpoint.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "A managed private endpoint.",
                  "type": "object",
                  "required": [
                    "privateLinkResourceId",
                    "groupId"
                  ],
                  "properties": {
                    "privateLinkResourceId": {
                      "description": "The ARM resource ID of the resource for which the managed private endpoint is created.",
                      "type": "string"
                    },
                    "privateLinkResourceRegion": {
                      "description": "The region of the resource to which the managed private endpoint is created.",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "The groupId in which the managed private endpoint is created.",
                      "type": "string"
                    },
                    "requestMessage": {
                      "description": "The user request message.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "Class representing a managed private endpoint."
            },
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ManagedPrivateEndpoints"
        ],
        "operationId": "ManagedPrivateEndpoints_Update",
        "description": "Updates a managed private endpoint.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "managedPrivateEndpointName",
            "in": "path",
            "description": "The name of the managed private endpoint.",
            "required": true,
            "x-ms-parameter-location": "method",
            "type": "string",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "A managed private endpoint.",
                  "type": "object",
                  "required": [
                    "privateLinkResourceId",
                    "groupId"
                  ],
                  "properties": {
                    "privateLinkResourceId": {
                      "description": "The ARM resource ID of the resource for which the managed private endpoint is created.",
                      "type": "string"
                    },
                    "privateLinkResourceRegion": {
                      "description": "The region of the resource to which the managed private endpoint is created.",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "The groupId in which the managed private endpoint is created.",
                      "type": "string"
                    },
                    "requestMessage": {
                      "description": "The user request message.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "Class representing a managed private endpoint."
            },
            "description": "The managed private endpoint parameters."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the managed private endpoint.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "A managed private endpoint.",
                  "type": "object",
                  "required": [
                    "privateLinkResourceId",
                    "groupId"
                  ],
                  "properties": {
                    "privateLinkResourceId": {
                      "description": "The ARM resource ID of the resource for which the managed private endpoint is created.",
                      "type": "string"
                    },
                    "privateLinkResourceRegion": {
                      "description": "The region of the resource to which the managed private endpoint is created.",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "The groupId in which the managed private endpoint is created.",
                      "type": "string"
                    },
                    "requestMessage": {
                      "description": "The user request message.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "Class representing a managed private endpoint."
            }
          },
          "202": {
            "description": "Accepted the update request of the managed private endpoint.",
            "headers": {
              "Location": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "A managed private endpoint.",
                  "type": "object",
                  "required": [
                    "privateLinkResourceId",
                    "groupId"
                  ],
                  "properties": {
                    "privateLinkResourceId": {
                      "description": "The ARM resource ID of the resource for which the managed private endpoint is created.",
                      "type": "string"
                    },
                    "privateLinkResourceRegion": {
                      "description": "The region of the resource to which the managed private endpoint is created.",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "The groupId in which the managed private endpoint is created.",
                      "type": "string"
                    },
                    "requestMessage": {
                      "description": "The user request message.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              },
              "description": "Class representing a managed private endpoint."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ManagedPrivateEndpoints"
        ],
        "operationId": "ManagedPrivateEndpoints_Delete",
        "description": "Deletes a managed private endpoint.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "managedPrivateEndpointName",
            "in": "path",
            "description": "The name of the managed private endpoint.",
            "required": true,
            "x-ms-parameter-location": "method",
            "type": "string",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- managed private endpoint deleted successfully."
          },
          "202": {
            "description": "Accepted the delete managed private endpoint request.",
            "headers": {
              "Location": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent -- If the managed private endpoint resource is already deleted, this is the expected status code."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_List",
        "description": "Returns the list of private endpoint connections.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The list result of private endpoint connections.",
            "schema": {
              "description": "A list of private endpoint connections",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Array of private endpoint connections",
                  "items": {
                    "description": "A private endpoint connection",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "required": [
                          "privateLinkServiceConnectionState"
                        ],
                        "type": "object",
                        "properties": {
                          "privateEndpoint": {
                            "description": "Private endpoint which the connection belongs to.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Resource id of the private endpoint.",
                                "readOnly": true
                              }
                            }
                          },
                          "privateLinkServiceConnectionState": {
                            "description": "Connection State of the Private Endpoint Connection.",
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "The private link service connection status."
                              },
                              "description": {
                                "type": "string",
                                "description": "The private link service connection description."
                              },
                              "actionsRequired": {
                                "type": "string",
                                "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                                "readOnly": true
                              }
                            }
                          },
                          "groupId": {
                            "type": "string",
                            "description": "Group id of the private endpoint.",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "Provisioning state of the private endpoint.",
                            "readOnly": true
                          }
                        }
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Gets a private endpoint connection.",
        "operationId": "PrivateEndpointConnections_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The name of the private endpoint connection.",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved a specified private endpoint connection.",
            "schema": {
              "description": "A private endpoint connection",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "privateLinkServiceConnectionState"
                  ],
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "Private endpoint which the connection belongs to.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource id of the private endpoint.",
                          "readOnly": true
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Connection State of the Private Endpoint Connection.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The private link service connection status."
                        },
                        "description": {
                          "type": "string",
                          "description": "The private link service connection description."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                          "readOnly": true
                        }
                      }
                    },
                    "groupId": {
                      "type": "string",
                      "description": "Group id of the private endpoint.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the private endpoint.",
                      "readOnly": true
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Approve or reject a private endpoint connection with a given name.",
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The name of the private endpoint connection.",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "A private endpoint connection",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "privateLinkServiceConnectionState"
                  ],
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "Private endpoint which the connection belongs to.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource id of the private endpoint.",
                          "readOnly": true
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Connection State of the Private Endpoint Connection.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The private link service connection status."
                        },
                        "description": {
                          "type": "string",
                          "description": "The private link service connection description."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                          "readOnly": true
                        }
                      }
                    },
                    "groupId": {
                      "type": "string",
                      "description": "Group id of the private endpoint.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the private endpoint.",
                      "readOnly": true
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully approved or rejected private endpoint connection.",
            "schema": {
              "description": "A private endpoint connection",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "privateLinkServiceConnectionState"
                  ],
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "Private endpoint which the connection belongs to.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource id of the private endpoint.",
                          "readOnly": true
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Connection State of the Private Endpoint Connection.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The private link service connection status."
                        },
                        "description": {
                          "type": "string",
                          "description": "The private link service connection description."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                          "readOnly": true
                        }
                      }
                    },
                    "groupId": {
                      "type": "string",
                      "description": "Group id of the private endpoint.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the private endpoint.",
                      "readOnly": true
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Accepted. The private endpoint connection update will complete asynchronously.",
            "schema": {
              "description": "A private endpoint connection",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "privateLinkServiceConnectionState"
                  ],
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "Private endpoint which the connection belongs to.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource id of the private endpoint.",
                          "readOnly": true
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Connection State of the Private Endpoint Connection.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The private link service connection status."
                        },
                        "description": {
                          "type": "string",
                          "description": "The private link service connection description."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                          "readOnly": true
                        }
                      }
                    },
                    "groupId": {
                      "type": "string",
                      "description": "Group id of the private endpoint.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the private endpoint.",
                      "readOnly": true
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Deletes a private endpoint connection with a given name.",
        "operationId": "PrivateEndpointConnections_Delete",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The name of the private endpoint connection.",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the private endpoint connection."
          },
          "202": {
            "description": "Accepted. The private endpoint connection delete will complete asynchronously.",
            "headers": {
              "Location": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Private endpoint connection does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/privateLinkResources": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Returns the list of private link resources.",
        "operationId": "PrivateLinkResources_List",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved private link resources.",
            "schema": {
              "description": "A list of private link resources",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Array of private link resources",
                  "items": {
                    "description": "A private link resource",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "groupId": {
                            "description": "The private link resource group id.",
                            "type": "string",
                            "readOnly": true
                          },
                          "requiredMembers": {
                            "description": "The private link resource required member names.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "requiredZoneNames": {
                            "description": "The private link resource required zone names.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/privateLinkResources/{privateLinkResourceName}": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Gets a private link resource.",
        "operationId": "PrivateLinkResources_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "privateLinkResourceName",
            "in": "path",
            "description": "The name of the private link resource.",
            "required": true,
            "x-ms-parameter-location": "method",
            "type": "string",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved a specified private link resource.",
            "schema": {
              "description": "A private link resource",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "groupId": {
                      "description": "The private link resource group id.",
                      "type": "string",
                      "readOnly": true
                    },
                    "requiredMembers": {
                      "description": "The private link resource required member names.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "requiredZoneNames": {
                      "description": "The private link resource required zone names.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/outboundNetworkDependenciesEndpoints": {
      "get": {
        "tags": [
          "OutboundNetworkDependenciesEndpoints"
        ],
        "operationId": "Clusters_ListOutboundNetworkDependenciesEndpoints",
        "description": "Gets the network endpoints of all outbound dependencies of a Kusto cluster",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Collection of Outbound Environment Endpoints",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "Endpoints accessed for a common purpose that the Kusto Service Environment requires outbound network access to.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The outbound environment endpoint properties.",
                        "type": "object",
                        "properties": {
                          "category": {
                            "description": "The type of service accessed by the Kusto Service Environment, e.g., Azure Storage, Azure SQL Database, and Azure Active Directory.",
                            "type": "string"
                          },
                          "endpoints": {
                            "description": "The endpoints that the Kusto Service Environment reaches the service at.",
                            "type": "array",
                            "items": {
                              "description": "A domain name that a service is reached at, including details of the current connection status.",
                              "type": "object",
                              "properties": {
                                "domainName": {
                                  "description": "The domain name of the dependency.",
                                  "type": "string"
                                },
                                "endpointDetails": {
                                  "description": "The ports used when connecting to DomainName.",
                                  "type": "array",
                                  "items": {
                                    "description": "Current TCP connectivity information from the Kusto cluster to a single endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "format": "int32",
                                        "description": "The port an endpoint is connected to.",
                                        "type": "integer"
                                      },
                                      "ipAddress": {
                                        "description": "The ip address of the endpoint.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "description": "The provisioned state of the resource.",
                            "type": "string",
                            "enum": [
                              "Running",
                              "Creating",
                              "Deleting",
                              "Succeeded",
                              "Failed",
                              "Moving",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "etag": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A unique read-only string that changes whenever the resource is updated."
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/attachedDatabaseConfigurations": {
      "get": {
        "tags": [
          "AttachedDatabaseConfigurations"
        ],
        "description": "Returns the list of attached database configurations of the given Kusto cluster.",
        "operationId": "AttachedDatabaseConfigurations_ListByCluster",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of attached database configurations.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "location": {
                        "type": "string",
                        "description": "Resource location."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The properties of the attached database configuration.",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "readOnly": true,
                            "description": "The provisioned state of the resource.",
                            "type": "string",
                            "enum": [
                              "Running",
                              "Creating",
                              "Deleting",
                              "Succeeded",
                              "Failed",
                              "Moving",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "databaseName": {
                            "type": "string",
                            "description": "The name of the database which you would like to attach, use * if you want to follow all current and future databases."
                          },
                          "clusterResourceId": {
                            "type": "string",
                            "description": "The resource id of the cluster where the databases you would like to attach reside."
                          },
                          "attachedDatabaseNames": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true,
                            "description": "The list of databases from the clusterResourceId which are currently attached to the cluster."
                          },
                          "defaultPrincipalsModificationKind": {
                            "type": "string",
                            "enum": [
                              "Union",
                              "Replace",
                              "None"
                            ],
                            "x-ms-enum": {
                              "name": "DefaultPrincipalsModificationKind",
                              "modelAsString": true
                            },
                            "description": "The default principals modification kind"
                          },
                          "tableLevelSharingProperties": {
                            "type": "object",
                            "description": "Table level sharing specifications",
                            "properties": {
                              "tablesToInclude": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "List of tables to include in the follower database"
                              },
                              "tablesToExclude": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "List of tables to exclude from the follower database"
                              },
                              "externalTablesToInclude": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "List of external tables to include in the follower database"
                              },
                              "externalTablesToExclude": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "List of external tables to exclude from the follower database"
                              },
                              "materializedViewsToInclude": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "List of materialized views to include in the follower database"
                              },
                              "materializedViewsToExclude": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "List of materialized views to exclude from the follower database"
                              },
                              "functionsToInclude": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "List of functions to include in the follower database"
                              },
                              "functionsToExclude": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "List of functions to exclude from the follower database"
                              }
                            }
                          },
                          "databaseNameOverride": {
                            "type": "string",
                            "description": "Overrides the original database name. Relevant only when attaching to a specific database."
                          },
                          "databaseNamePrefix": {
                            "type": "string",
                            "description": "Adds a prefix to the attached databases name. When following an entire cluster, that prefix would be added to all of the databases original names from leader cluster."
                          }
                        },
                        "required": [
                          "databaseName",
                          "clusterResourceId",
                          "defaultPrincipalsModificationKind"
                        ]
                      }
                    },
                    "description": "Class representing an attached database configuration."
                  },
                  "description": "The list of attached database configurations."
                }
              },
              "description": "The list attached database configurations operation response."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/attachedDatabaseConfigurations/{attachedDatabaseConfigurationName}": {
      "get": {
        "tags": [
          "AttachedDatabaseConfigurations"
        ],
        "description": "Returns an attached database configuration.",
        "operationId": "AttachedDatabaseConfigurations_Get",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "attachedDatabaseConfigurationName",
            "in": "path",
            "description": "The name of the attached database configuration.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the specified attached database configuration.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of the attached database configuration.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "databaseName": {
                      "type": "string",
                      "description": "The name of the database which you would like to attach, use * if you want to follow all current and future databases."
                    },
                    "clusterResourceId": {
                      "type": "string",
                      "description": "The resource id of the cluster where the databases you would like to attach reside."
                    },
                    "attachedDatabaseNames": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true,
                      "description": "The list of databases from the clusterResourceId which are currently attached to the cluster."
                    },
                    "defaultPrincipalsModificationKind": {
                      "type": "string",
                      "enum": [
                        "Union",
                        "Replace",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "DefaultPrincipalsModificationKind",
                        "modelAsString": true
                      },
                      "description": "The default principals modification kind"
                    },
                    "tableLevelSharingProperties": {
                      "type": "object",
                      "description": "Table level sharing specifications",
                      "properties": {
                        "tablesToInclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of tables to include in the follower database"
                        },
                        "tablesToExclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of tables to exclude from the follower database"
                        },
                        "externalTablesToInclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of external tables to include in the follower database"
                        },
                        "externalTablesToExclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of external tables to exclude from the follower database"
                        },
                        "materializedViewsToInclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of materialized views to include in the follower database"
                        },
                        "materializedViewsToExclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of materialized views to exclude from the follower database"
                        },
                        "functionsToInclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of functions to include in the follower database"
                        },
                        "functionsToExclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of functions to exclude from the follower database"
                        }
                      }
                    },
                    "databaseNameOverride": {
                      "type": "string",
                      "description": "Overrides the original database name. Relevant only when attaching to a specific database."
                    },
                    "databaseNamePrefix": {
                      "type": "string",
                      "description": "Adds a prefix to the attached databases name. When following an entire cluster, that prefix would be added to all of the databases original names from leader cluster."
                    }
                  },
                  "required": [
                    "databaseName",
                    "clusterResourceId",
                    "defaultPrincipalsModificationKind"
                  ]
                }
              },
              "description": "Class representing an attached database configuration."
            }
          }
        }
      },
      "put": {
        "tags": [
          "AttachedDatabaseConfigurations"
        ],
        "description": "Creates or updates an attached database configuration.",
        "operationId": "AttachedDatabaseConfigurations_CreateOrUpdate",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "attachedDatabaseConfigurationName",
            "in": "path",
            "description": "The name of the attached database configuration.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of the attached database configuration.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "databaseName": {
                      "type": "string",
                      "description": "The name of the database which you would like to attach, use * if you want to follow all current and future databases."
                    },
                    "clusterResourceId": {
                      "type": "string",
                      "description": "The resource id of the cluster where the databases you would like to attach reside."
                    },
                    "attachedDatabaseNames": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true,
                      "description": "The list of databases from the clusterResourceId which are currently attached to the cluster."
                    },
                    "defaultPrincipalsModificationKind": {
                      "type": "string",
                      "enum": [
                        "Union",
                        "Replace",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "DefaultPrincipalsModificationKind",
                        "modelAsString": true
                      },
                      "description": "The default principals modification kind"
                    },
                    "tableLevelSharingProperties": {
                      "type": "object",
                      "description": "Table level sharing specifications",
                      "properties": {
                        "tablesToInclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of tables to include in the follower database"
                        },
                        "tablesToExclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of tables to exclude from the follower database"
                        },
                        "externalTablesToInclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of external tables to include in the follower database"
                        },
                        "externalTablesToExclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of external tables to exclude from the follower database"
                        },
                        "materializedViewsToInclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of materialized views to include in the follower database"
                        },
                        "materializedViewsToExclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of materialized views to exclude from the follower database"
                        },
                        "functionsToInclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of functions to include in the follower database"
                        },
                        "functionsToExclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of functions to exclude from the follower database"
                        }
                      }
                    },
                    "databaseNameOverride": {
                      "type": "string",
                      "description": "Overrides the original database name. Relevant only when attaching to a specific database."
                    },
                    "databaseNamePrefix": {
                      "type": "string",
                      "description": "Adds a prefix to the attached databases name. When following an entire cluster, that prefix would be added to all of the databases original names from leader cluster."
                    }
                  },
                  "required": [
                    "databaseName",
                    "clusterResourceId",
                    "defaultPrincipalsModificationKind"
                  ]
                }
              },
              "description": "Class representing an attached database configuration."
            },
            "description": "The database parameters supplied to the CreateOrUpdate operation."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the database.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of the attached database configuration.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "databaseName": {
                      "type": "string",
                      "description": "The name of the database which you would like to attach, use * if you want to follow all current and future databases."
                    },
                    "clusterResourceId": {
                      "type": "string",
                      "description": "The resource id of the cluster where the databases you would like to attach reside."
                    },
                    "attachedDatabaseNames": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true,
                      "description": "The list of databases from the clusterResourceId which are currently attached to the cluster."
                    },
                    "defaultPrincipalsModificationKind": {
                      "type": "string",
                      "enum": [
                        "Union",
                        "Replace",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "DefaultPrincipalsModificationKind",
                        "modelAsString": true
                      },
                      "description": "The default principals modification kind"
                    },
                    "tableLevelSharingProperties": {
                      "type": "object",
                      "description": "Table level sharing specifications",
                      "properties": {
                        "tablesToInclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of tables to include in the follower database"
                        },
                        "tablesToExclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of tables to exclude from the follower database"
                        },
                        "externalTablesToInclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of external tables to include in the follower database"
                        },
                        "externalTablesToExclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of external tables to exclude from the follower database"
                        },
                        "materializedViewsToInclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of materialized views to include in the follower database"
                        },
                        "materializedViewsToExclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of materialized views to exclude from the follower database"
                        },
                        "functionsToInclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of functions to include in the follower database"
                        },
                        "functionsToExclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of functions to exclude from the follower database"
                        }
                      }
                    },
                    "databaseNameOverride": {
                      "type": "string",
                      "description": "Overrides the original database name. Relevant only when attaching to a specific database."
                    },
                    "databaseNamePrefix": {
                      "type": "string",
                      "description": "Adds a prefix to the attached databases name. When following an entire cluster, that prefix would be added to all of the databases original names from leader cluster."
                    }
                  },
                  "required": [
                    "databaseName",
                    "clusterResourceId",
                    "defaultPrincipalsModificationKind"
                  ]
                }
              },
              "description": "Class representing an attached database configuration."
            }
          },
          "201": {
            "description": "Successfully created the database.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of the attached database configuration.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "databaseName": {
                      "type": "string",
                      "description": "The name of the database which you would like to attach, use * if you want to follow all current and future databases."
                    },
                    "clusterResourceId": {
                      "type": "string",
                      "description": "The resource id of the cluster where the databases you would like to attach reside."
                    },
                    "attachedDatabaseNames": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true,
                      "description": "The list of databases from the clusterResourceId which are currently attached to the cluster."
                    },
                    "defaultPrincipalsModificationKind": {
                      "type": "string",
                      "enum": [
                        "Union",
                        "Replace",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "DefaultPrincipalsModificationKind",
                        "modelAsString": true
                      },
                      "description": "The default principals modification kind"
                    },
                    "tableLevelSharingProperties": {
                      "type": "object",
                      "description": "Table level sharing specifications",
                      "properties": {
                        "tablesToInclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of tables to include in the follower database"
                        },
                        "tablesToExclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of tables to exclude from the follower database"
                        },
                        "externalTablesToInclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of external tables to include in the follower database"
                        },
                        "externalTablesToExclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of external tables to exclude from the follower database"
                        },
                        "materializedViewsToInclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of materialized views to include in the follower database"
                        },
                        "materializedViewsToExclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of materialized views to exclude from the follower database"
                        },
                        "functionsToInclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of functions to include in the follower database"
                        },
                        "functionsToExclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of functions to exclude from the follower database"
                        }
                      }
                    },
                    "databaseNameOverride": {
                      "type": "string",
                      "description": "Overrides the original database name. Relevant only when attaching to a specific database."
                    },
                    "databaseNamePrefix": {
                      "type": "string",
                      "description": "Adds a prefix to the attached databases name. When following an entire cluster, that prefix would be added to all of the databases original names from leader cluster."
                    }
                  },
                  "required": [
                    "databaseName",
                    "clusterResourceId",
                    "defaultPrincipalsModificationKind"
                  ]
                }
              },
              "description": "Class representing an attached database configuration."
            }
          },
          "202": {
            "description": "Accepted the create database request.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of the attached database configuration.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "databaseName": {
                      "type": "string",
                      "description": "The name of the database which you would like to attach, use * if you want to follow all current and future databases."
                    },
                    "clusterResourceId": {
                      "type": "string",
                      "description": "The resource id of the cluster where the databases you would like to attach reside."
                    },
                    "attachedDatabaseNames": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true,
                      "description": "The list of databases from the clusterResourceId which are currently attached to the cluster."
                    },
                    "defaultPrincipalsModificationKind": {
                      "type": "string",
                      "enum": [
                        "Union",
                        "Replace",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "DefaultPrincipalsModificationKind",
                        "modelAsString": true
                      },
                      "description": "The default principals modification kind"
                    },
                    "tableLevelSharingProperties": {
                      "type": "object",
                      "description": "Table level sharing specifications",
                      "properties": {
                        "tablesToInclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of tables to include in the follower database"
                        },
                        "tablesToExclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of tables to exclude from the follower database"
                        },
                        "externalTablesToInclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of external tables to include in the follower database"
                        },
                        "externalTablesToExclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of external tables to exclude from the follower database"
                        },
                        "materializedViewsToInclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of materialized views to include in the follower database"
                        },
                        "materializedViewsToExclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of materialized views to exclude from the follower database"
                        },
                        "functionsToInclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of functions to include in the follower database"
                        },
                        "functionsToExclude": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of functions to exclude from the follower database"
                        }
                      }
                    },
                    "databaseNameOverride": {
                      "type": "string",
                      "description": "Overrides the original database name. Relevant only when attaching to a specific database."
                    },
                    "databaseNamePrefix": {
                      "type": "string",
                      "description": "Adds a prefix to the attached databases name. When following an entire cluster, that prefix would be added to all of the databases original names from leader cluster."
                    }
                  },
                  "required": [
                    "databaseName",
                    "clusterResourceId",
                    "defaultPrincipalsModificationKind"
                  ]
                }
              },
              "description": "Class representing an attached database configuration."
            },
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AttachedDatabaseConfigurations"
        ],
        "description": "Deletes the attached database configuration with the given name.",
        "operationId": "AttachedDatabaseConfigurations_Delete",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "attachedDatabaseConfigurationName",
            "in": "path",
            "description": "The name of the attached database configuration.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the database."
          },
          "202": {
            "description": "Accepted.",
            "headers": {
              "Location": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The specified database does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/removePrincipals": {
      "post": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_RemovePrincipals",
        "description": "Remove Database principals permissions.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database in the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "databasePrincipalsToRemove",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "name",
                      "role",
                      "type"
                    ],
                    "properties": {
                      "role": {
                        "description": "Database principal role.",
                        "type": "string",
                        "enum": [
                          "Admin",
                          "Ingestor",
                          "Monitor",
                          "User",
                          "UnrestrictedViewer",
                          "Viewer"
                        ],
                        "x-ms-enum": {
                          "name": "DatabasePrincipalRole",
                          "modelAsString": true
                        }
                      },
                      "name": {
                        "description": "Database principal name.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Database principal type.",
                        "type": "string",
                        "enum": [
                          "App",
                          "Group",
                          "User"
                        ],
                        "x-ms-enum": {
                          "name": "DatabasePrincipalType",
                          "modelAsString": true
                        }
                      },
                      "fqn": {
                        "description": "Database principal fully qualified name.",
                        "type": "string"
                      },
                      "email": {
                        "description": "Database principal email if exists.",
                        "type": "string"
                      },
                      "appId": {
                        "description": "Application id - relevant only for application principal type.",
                        "type": "string"
                      },
                      "tenantName": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The tenant name of the principal"
                      }
                    },
                    "description": "A class representing database principal entity."
                  },
                  "description": "The list of Kusto database principals."
                }
              },
              "description": "The list Kusto database principals operation request."
            },
            "description": "List of database principals to remove."
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Successfully removed the list of database principals. Returns the updated list of principals.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "name",
                      "role",
                      "type"
                    ],
                    "properties": {
                      "role": {
                        "description": "Database principal role.",
                        "type": "string",
                        "enum": [
                          "Admin",
                          "Ingestor",
                          "Monitor",
                          "User",
                          "UnrestrictedViewer",
                          "Viewer"
                        ],
                        "x-ms-enum": {
                          "name": "DatabasePrincipalRole",
                          "modelAsString": true
                        }
                      },
                      "name": {
                        "description": "Database principal name.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Database principal type.",
                        "type": "string",
                        "enum": [
                          "App",
                          "Group",
                          "User"
                        ],
                        "x-ms-enum": {
                          "name": "DatabasePrincipalType",
                          "modelAsString": true
                        }
                      },
                      "fqn": {
                        "description": "Database principal fully qualified name.",
                        "type": "string"
                      },
                      "email": {
                        "description": "Database principal email if exists.",
                        "type": "string"
                      },
                      "appId": {
                        "description": "Application id - relevant only for application principal type.",
                        "type": "string"
                      },
                      "tenantName": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The tenant name of the principal"
                      }
                    },
                    "description": "A class representing database principal entity."
                  },
                  "description": "The list of Kusto database principals."
                }
              },
              "description": "The list Kusto database principals operation response."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/dataConnections": {
      "get": {
        "tags": [
          "DataConnections"
        ],
        "description": "Returns the list of data connections of the given Kusto database.",
        "operationId": "DataConnections_ListByDatabase",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database in the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of data connections.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "kind"
                    ],
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "location": {
                        "type": "string",
                        "description": "Resource location."
                      },
                      "kind": {
                        "description": "Kind of the endpoint for the data connection",
                        "enum": [
                          "EventHub",
                          "EventGrid",
                          "IotHub",
                          "CosmosDb"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "DataConnectionKind",
                          "modelAsString": true
                        }
                      }
                    },
                    "description": "Class representing an data connection.",
                    "discriminator": "kind"
                  },
                  "description": "The list of Kusto data connections."
                }
              },
              "description": "The list Kusto data connections operation response."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/dataConnectionValidation": {
      "post": {
        "tags": [
          "DataConnections"
        ],
        "operationId": "DataConnections_dataConnectionValidation",
        "description": "Checks that the data connection parameters are valid.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database in the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "dataConnectionName": {
                  "type": "string",
                  "description": "The name of the data connection."
                },
                "properties": {
                  "type": "object",
                  "required": [
                    "kind"
                  ],
                  "properties": {
                    "id": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                    },
                    "name": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The name of the resource"
                    },
                    "type": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                    },
                    "location": {
                      "type": "string",
                      "description": "Resource location."
                    },
                    "kind": {
                      "description": "Kind of the endpoint for the data connection",
                      "enum": [
                        "EventHub",
                        "EventGrid",
                        "IotHub",
                        "CosmosDb"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "DataConnectionKind",
                        "modelAsString": true
                      }
                    }
                  },
                  "description": "Class representing an data connection.",
                  "discriminator": "kind"
                }
              },
              "description": "Class representing an data connection validation."
            },
            "description": "The data connection parameters supplied to the CreateOrUpdate operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Operation to check the kusto resource name availability was successful.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "errorMessage": {
                        "type": "string",
                        "description": "A message which indicates a problem in data connection validation."
                      }
                    },
                    "description": "The result returned from a data connection validation request."
                  },
                  "description": "The list of Kusto data connection validation errors."
                }
              },
              "description": "The list Kusto data connection validation result."
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/checkNameAvailability": {
      "post": {
        "tags": [
          "DataConnections"
        ],
        "operationId": "DataConnections_CheckNameAvailability",
        "description": "Checks that the data connection name is valid and is not already in use.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database in the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "dataConnectionName",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Data Connection name."
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "Microsoft.Kusto/clusters/databases/dataConnections"
                  ],
                  "x-ms-enum": {
                    "name": "DataConnectionType",
                    "modelAsString": false
                  },
                  "description": "The type of resource, Microsoft.Kusto/clusters/databases/dataConnections."
                }
              },
              "required": [
                "name",
                "type"
              ],
              "description": "A data connection check name availability request."
            },
            "description": "The name of the data connection."
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Operation to check the Kusto resource name availability was successful.",
            "schema": {
              "type": "object",
              "properties": {
                "nameAvailable": {
                  "type": "boolean",
                  "description": "Specifies a Boolean value that indicates if the name is available."
                },
                "name": {
                  "type": "string",
                  "description": "The name that was checked."
                },
                "message": {
                  "type": "string",
                  "description": "Message indicating an unavailable name due to a conflict, or a description of the naming rules that are violated."
                },
                "reason": {
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "AlreadyExists"
                  ],
                  "x-ms-enum": {
                    "name": "reason",
                    "modelAsString": true
                  },
                  "description": "Message providing the reason why the given name is invalid."
                }
              },
              "description": "The result returned from a check name availability request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/scriptsCheckNameAvailability": {
      "post": {
        "tags": [
          "Scripts"
        ],
        "operationId": "Scripts_CheckNameAvailability",
        "description": "Checks that the script name is valid and is not already in use.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database in the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "scriptName",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Script name."
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "Microsoft.Kusto/clusters/databases/scripts"
                  ],
                  "x-ms-enum": {
                    "name": "ScriptType",
                    "modelAsString": false
                  },
                  "description": "The type of resource, Microsoft.Kusto/clusters/databases/scripts."
                }
              },
              "required": [
                "name",
                "type"
              ],
              "description": "A script name availability request."
            },
            "description": "The name of the script."
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Operation to check the Kusto resource name availability was successful.",
            "schema": {
              "type": "object",
              "properties": {
                "nameAvailable": {
                  "type": "boolean",
                  "description": "Specifies a Boolean value that indicates if the name is available."
                },
                "name": {
                  "type": "string",
                  "description": "The name that was checked."
                },
                "message": {
                  "type": "string",
                  "description": "Message indicating an unavailable name due to a conflict, or a description of the naming rules that are violated."
                },
                "reason": {
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "AlreadyExists"
                  ],
                  "x-ms-enum": {
                    "name": "reason",
                    "modelAsString": true
                  },
                  "description": "Message providing the reason why the given name is invalid."
                }
              },
              "description": "The result returned from a check name availability request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/dataConnections/{dataConnectionName}": {
      "get": {
        "tags": [
          "DataConnections"
        ],
        "description": "Returns a data connection.",
        "operationId": "DataConnections_Get",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database in the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "dataConnectionName",
            "in": "path",
            "description": "The name of the data connection.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the specified data connection.",
            "schema": {
              "type": "object",
              "required": [
                "kind"
              ],
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "kind": {
                  "description": "Kind of the endpoint for the data connection",
                  "enum": [
                    "EventHub",
                    "EventGrid",
                    "IotHub",
                    "CosmosDb"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "DataConnectionKind",
                    "modelAsString": true
                  }
                }
              },
              "description": "Class representing an data connection.",
              "discriminator": "kind"
            }
          }
        }
      },
      "put": {
        "tags": [
          "DataConnections"
        ],
        "description": "Creates or updates a data connection.",
        "operationId": "DataConnections_CreateOrUpdate",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database in the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "dataConnectionName",
            "in": "path",
            "description": "The name of the data connection.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "kind"
              ],
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "kind": {
                  "description": "Kind of the endpoint for the data connection",
                  "enum": [
                    "EventHub",
                    "EventGrid",
                    "IotHub",
                    "CosmosDb"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "DataConnectionKind",
                    "modelAsString": true
                  }
                }
              },
              "description": "Class representing an data connection.",
              "discriminator": "kind"
            },
            "description": "The data connection parameters supplied to the CreateOrUpdate operation."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the data connection.",
            "schema": {
              "type": "object",
              "required": [
                "kind"
              ],
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "kind": {
                  "description": "Kind of the endpoint for the data connection",
                  "enum": [
                    "EventHub",
                    "EventGrid",
                    "IotHub",
                    "CosmosDb"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "DataConnectionKind",
                    "modelAsString": true
                  }
                }
              },
              "description": "Class representing an data connection.",
              "discriminator": "kind"
            }
          },
          "201": {
            "description": "Successfully created the data connection.",
            "schema": {
              "type": "object",
              "required": [
                "kind"
              ],
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "kind": {
                  "description": "Kind of the endpoint for the data connection",
                  "enum": [
                    "EventHub",
                    "EventGrid",
                    "IotHub",
                    "CosmosDb"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "DataConnectionKind",
                    "modelAsString": true
                  }
                }
              },
              "description": "Class representing an data connection.",
              "discriminator": "kind"
            }
          },
          "202": {
            "description": "Accepted the create data connection request.",
            "schema": {
              "type": "object",
              "required": [
                "kind"
              ],
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "kind": {
                  "description": "Kind of the endpoint for the data connection",
                  "enum": [
                    "EventHub",
                    "EventGrid",
                    "IotHub",
                    "CosmosDb"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "DataConnectionKind",
                    "modelAsString": true
                  }
                }
              },
              "description": "Class representing an data connection.",
              "discriminator": "kind"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "DataConnections"
        ],
        "description": "Updates a data connection.",
        "operationId": "DataConnections_Update",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database in the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "dataConnectionName",
            "in": "path",
            "description": "The name of the data connection.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "kind"
              ],
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "kind": {
                  "description": "Kind of the endpoint for the data connection",
                  "enum": [
                    "EventHub",
                    "EventGrid",
                    "IotHub",
                    "CosmosDb"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "DataConnectionKind",
                    "modelAsString": true
                  }
                }
              },
              "description": "Class representing an data connection.",
              "discriminator": "kind"
            },
            "description": "The data connection parameters supplied to the Update operation."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the data connection.",
            "schema": {
              "type": "object",
              "required": [
                "kind"
              ],
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "kind": {
                  "description": "Kind of the endpoint for the data connection",
                  "enum": [
                    "EventHub",
                    "EventGrid",
                    "IotHub",
                    "CosmosDb"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "DataConnectionKind",
                    "modelAsString": true
                  }
                }
              },
              "description": "Class representing an data connection.",
              "discriminator": "kind"
            }
          },
          "201": {
            "description": "Successfully updated the data connection.",
            "headers": {
              "Location": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "kind"
              ],
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "kind": {
                  "description": "Kind of the endpoint for the data connection",
                  "enum": [
                    "EventHub",
                    "EventGrid",
                    "IotHub",
                    "CosmosDb"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "DataConnectionKind",
                    "modelAsString": true
                  }
                }
              },
              "description": "Class representing an data connection.",
              "discriminator": "kind"
            }
          },
          "202": {
            "description": "Accepted the update data connection request.",
            "headers": {
              "Location": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "kind"
              ],
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "location": {
                  "type": "string",
                  "description": "Resource location."
                },
                "kind": {
                  "description": "Kind of the endpoint for the data connection",
                  "enum": [
                    "EventHub",
                    "EventGrid",
                    "IotHub",
                    "CosmosDb"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "DataConnectionKind",
                    "modelAsString": true
                  }
                }
              },
              "description": "Class representing an data connection.",
              "discriminator": "kind"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DataConnections"
        ],
        "description": "Deletes the data connection with the given name.",
        "operationId": "DataConnections_Delete",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "The name of the database in the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "dataConnectionName",
            "in": "path",
            "description": "The name of the data connection.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the data connection."
          },
          "202": {
            "description": "Accepted.",
            "headers": {
              "Location": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The specified data connection does not exist."
          }
        }
      }
    },
    "/providers/Microsoft.Kusto/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "Lists available operations for the Microsoft.Kusto provider.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The operation was successful. The response contains the list of available operations.",
            "schema": {
              "type": "object",
              "title": "Result of the request to list REST API operations. It contains a list of operations and a URL nextLink to get the next set of results.",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "title": "A REST API operation",
                    "type": "object",
                    "properties": {
                      "name": {
                        "title": "The operation name.",
                        "description": "This is of the format {provider}/{resource}/{operation}.",
                        "type": "string"
                      },
                      "display": {
                        "type": "object",
                        "title": "The object that describes the operation.",
                        "properties": {
                          "provider": {
                            "title": "Friendly name of the resource provider.",
                            "type": "string"
                          },
                          "operation": {
                            "title": "The operation type.",
                            "description": "For example: read, write, delete.",
                            "type": "string"
                          },
                          "resource": {
                            "title": "The resource type on which the operation is performed.",
                            "type": "string"
                          },
                          "description": {
                            "title": "The friendly name of the operation.",
                            "type": "string"
                          }
                        }
                      },
                      "origin": {
                        "title": "The intended executor of the operation.",
                        "type": "string"
                      },
                      "properties": {
                        "title": "Properties of the operation.",
                        "type": "object",
                        "x-ms-client-flatten": true
                      }
                    }
                  },
                  "title": "The list of operations supported by the resource provider."
                },
                "nextLink": {
                  "type": "string",
                  "title": "The URL to get the next set of operation list results if there are any."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/addCalloutPolicies": {
      "post": {
        "tags": [
          "Clusters"
        ],
        "description": "Adds a list of callout policies for engine services.",
        "operationId": "Clusters_AddCalloutPolicies",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "calloutPolicies",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "calloutUriRegex": {
                        "type": "string",
                        "description": "Regular expression or FQDN pattern for the callout URI."
                      },
                      "calloutType": {
                        "type": "string",
                        "enum": [
                          "kusto",
                          "sql",
                          "cosmosdb",
                          "external_data",
                          "azure_digital_twins",
                          "sandbox_artifacts",
                          "webapi",
                          "mysql",
                          "postgresql",
                          "genevametrics",
                          "azure_openai"
                        ],
                        "x-ms-enum": {
                          "name": "calloutType",
                          "modelAsString": true
                        },
                        "description": "Type of the callout service, specifying the kind of external resource or service being accessed."
                      },
                      "outboundAccess": {
                        "type": "string",
                        "enum": [
                          "Allow",
                          "Deny"
                        ],
                        "x-ms-enum": {
                          "name": "outboundAccess",
                          "modelAsString": true
                        },
                        "description": "Indicates whether outbound access is permitted for the specified URI pattern."
                      },
                      "calloutId": {
                        "type": "string",
                        "description": "Unique identifier for the callout configuration.",
                        "readOnly": true
                      }
                    },
                    "description": "Configuration for external callout policies, including URI patterns, access types, and service types."
                  },
                  "description": "A list of the service's callout policies."
                },
                "nextLink": {
                  "type": "string",
                  "title": "The URL to get the next set of callout policies list results if there are any."
                }
              },
              "description": "A list of the service's callout policy objects."
            },
            "description": "The callout policies to add."
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/removeCalloutPolicy": {
      "post": {
        "tags": [
          "Clusters"
        ],
        "description": "Removes callout policy for engine services.",
        "operationId": "Clusters_RemoveCalloutPolicy",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "calloutPolicy",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "calloutId": {
                  "type": "string",
                  "description": "Unique identifier for the callout configuration."
                }
              },
              "description": "Configuration for an external callout policy to remove."
            },
            "description": "The callout policies to remove."
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/listCalloutPolicies": {
      "post": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_ListCalloutPolicies",
        "description": "Returns the allowed callout policies for the specified service.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "calloutUriRegex": {
                        "type": "string",
                        "description": "Regular expression or FQDN pattern for the callout URI."
                      },
                      "calloutType": {
                        "type": "string",
                        "enum": [
                          "kusto",
                          "sql",
                          "cosmosdb",
                          "external_data",
                          "azure_digital_twins",
                          "sandbox_artifacts",
                          "webapi",
                          "mysql",
                          "postgresql",
                          "genevametrics",
                          "azure_openai"
                        ],
                        "x-ms-enum": {
                          "name": "calloutType",
                          "modelAsString": true
                        },
                        "description": "Type of the callout service, specifying the kind of external resource or service being accessed."
                      },
                      "outboundAccess": {
                        "type": "string",
                        "enum": [
                          "Allow",
                          "Deny"
                        ],
                        "x-ms-enum": {
                          "name": "outboundAccess",
                          "modelAsString": true
                        },
                        "description": "Indicates whether outbound access is permitted for the specified URI pattern."
                      },
                      "calloutId": {
                        "type": "string",
                        "description": "Unique identifier for the callout configuration.",
                        "readOnly": true
                      }
                    },
                    "description": "Configuration for external callout policies, including URI patterns, access types, and service types."
                  },
                  "description": "A list of the service's callout policies."
                },
                "nextLink": {
                  "type": "string",
                  "title": "The URL to get the next set of callout policies list results if there are any."
                }
              },
              "description": "A list of the service's callout policy objects."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/listLanguageExtensions": {
      "post": {
        "tags": [
          "Clusters"
        ],
        "description": "Returns a list of language extensions that can run within KQL queries.",
        "operationId": "Clusters_ListLanguageExtensions",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of language extensions.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "The language extension object.",
                    "properties": {
                      "languageExtensionName": {
                        "description": "The language extension name.",
                        "type": "string",
                        "enum": [
                          "PYTHON",
                          "R"
                        ],
                        "x-ms-enum": {
                          "name": "languageExtensionName",
                          "modelAsString": true
                        }
                      },
                      "languageExtensionImageName": {
                        "description": "The language extension image name.",
                        "type": "string",
                        "enum": [
                          "R",
                          "Python3_6_5",
                          "Python3_10_8",
                          "Python3_10_8_DL",
                          "PythonCustomImage",
                          "Python3_11_7",
                          "Python3_11_7_DL"
                        ],
                        "x-ms-enum": {
                          "name": "languageExtensionImageName",
                          "modelAsString": true
                        }
                      },
                      "languageExtensionCustomImageName": {
                        "description": "The language extension custom image name.",
                        "type": "string"
                      }
                    }
                  },
                  "description": "The list of language extensions."
                }
              },
              "description": "The list of language extension objects."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/addLanguageExtensions": {
      "post": {
        "tags": [
          "Clusters"
        ],
        "description": "Add a list of language extensions that can run within KQL queries.",
        "operationId": "Clusters_AddLanguageExtensions",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "languageExtensionsToAdd",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "The language extension object.",
                    "properties": {
                      "languageExtensionName": {
                        "description": "The language extension name.",
                        "type": "string",
                        "enum": [
                          "PYTHON",
                          "R"
                        ],
                        "x-ms-enum": {
                          "name": "languageExtensionName",
                          "modelAsString": true
                        }
                      },
                      "languageExtensionImageName": {
                        "description": "The language extension image name.",
                        "type": "string",
                        "enum": [
                          "R",
                          "Python3_6_5",
                          "Python3_10_8",
                          "Python3_10_8_DL",
                          "PythonCustomImage",
                          "Python3_11_7",
                          "Python3_11_7_DL"
                        ],
                        "x-ms-enum": {
                          "name": "languageExtensionImageName",
                          "modelAsString": true
                        }
                      },
                      "languageExtensionCustomImageName": {
                        "description": "The language extension custom image name.",
                        "type": "string"
                      }
                    }
                  },
                  "description": "The list of language extensions."
                }
              },
              "description": "The list of language extension objects."
            },
            "description": "The language extensions to add."
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/removeLanguageExtensions": {
      "post": {
        "tags": [
          "Clusters"
        ],
        "description": "Remove a list of language extensions that can run within KQL queries.",
        "operationId": "Clusters_RemoveLanguageExtensions",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the Kusto cluster.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "pattern": "^.*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "languageExtensionsToRemove",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "The language extension object.",
                    "properties": {
                      "languageExtensionName": {
                        "description": "The language extension name.",
                        "type": "string",
                        "enum": [
                          "PYTHON",
                          "R"
                        ],
                        "x-ms-enum": {
                          "name": "languageExtensionName",
                          "modelAsString": true
                        }
                      },
                      "languageExtensionImageName": {
                        "description": "The language extension image name.",
                        "type": "string",
                        "enum": [
                          "R",
                          "Python3_6_5",
                          "Python3_10_8",
                          "Python3_10_8_DL",
                          "PythonCustomImage",
                          "Python3_11_7",
                          "Python3_11_7_DL"
                        ],
                        "x-ms-enum": {
                          "name": "languageExtensionImageName",
                          "modelAsString": true
                        }
                      },
                      "languageExtensionCustomImageName": {
                        "description": "The language extension custom image name.",
                        "type": "string"
                      }
                    }
                  },
                  "description": "The list of language extensions."
                }
              },
              "description": "The list of language extension objects."
            },
            "description": "The language extensions to remove."
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL to query the status of the operation.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Kusto/locations/{location}/operationResults/{operationId}": {
      "get": {
        "tags": [
          "OperationResults"
        ],
        "description": "Returns operation results.",
        "operationId": "OperationsResults_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The ID of an ongoing async operation.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the operation result.",
            "schema": {
              "description": "Operation Result Entity.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "description": "ID of the resource.",
                  "type": "string"
                },
                "name": {
                  "readOnly": true,
                  "description": "Name of the resource.",
                  "type": "string"
                },
                "status": {
                  "description": "status of the Operation result.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Succeeded",
                    "Canceled",
                    "Failed",
                    "Running"
                  ],
                  "x-ms-enum": {
                    "name": "Status",
                    "modelAsString": true
                  }
                },
                "startTime": {
                  "description": "The operation start time",
                  "type": "string",
                  "format": "date-time"
                },
                "endTime": {
                  "description": "The operation end time",
                  "type": "string",
                  "format": "date-time"
                },
                "percentComplete": {
                  "type": "number",
                  "format": "double",
                  "minimum": 0,
                  "maximum": 100,
                  "description": "Percentage completed."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the operation results",
                  "type": "object",
                  "properties": {
                    "operationKind": {
                      "type": "string",
                      "description": "The kind of the operation."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioned state of the resource.",
                      "type": "string",
                      "enum": [
                        "Running",
                        "Creating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Moving",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "operationState": {
                      "type": "string",
                      "description": "The state of the operation."
                    }
                  }
                },
                "error": {
                  "x-ms-client-flatten": true,
                  "description": "Object that contains the error code and message if the operation failed.",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "The code of the error."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ClusterProperties": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "readOnly": true,
          "description": "The state of the resource.",
          "enum": [
            "Creating",
            "Unavailable",
            "Running",
            "Deleting",
            "Deleted",
            "Stopping",
            "Stopped",
            "Starting",
            "Updating",
            "Migrated"
          ],
          "x-ms-enum": {
            "name": "State",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "readOnly": true,
          "description": "The provisioned state of the resource.",
          "type": "string",
          "enum": [
            "Running",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Moving",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "uri": {
          "type": "string",
          "readOnly": true,
          "description": "The cluster URI."
        },
        "dataIngestionUri": {
          "type": "string",
          "readOnly": true,
          "description": "The cluster data ingestion URI."
        },
        "stateReason": {
          "type": "string",
          "readOnly": true,
          "description": "The reason for the cluster's current state."
        },
        "trustedExternalTenants": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "description": "GUID representing an external tenant."
              }
            },
            "description": "Represents a tenant ID that is trusted by the cluster."
          },
          "description": "The cluster's external tenants."
        },
        "optimizedAutoscale": {
          "type": "object",
          "description": "Optimized auto scale definition.",
          "required": [
            "version",
            "isEnabled",
            "minimum",
            "maximum"
          ],
          "properties": {
            "version": {
              "description": "The version of the template defined, for instance 1.",
              "type": "integer",
              "format": "int32"
            },
            "isEnabled": {
              "description": "A boolean value that indicate if the optimized autoscale feature is enabled or not.",
              "type": "boolean"
            },
            "minimum": {
              "description": "Minimum allowed instances count.",
              "type": "integer",
              "format": "int32"
            },
            "maximum": {
              "description": "Maximum allowed instances count.",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "enableDiskEncryption": {
          "description": "A boolean value that indicates if the cluster's disks are encrypted.",
          "default": false,
          "type": "boolean"
        },
        "enableStreamingIngest": {
          "description": "A boolean value that indicates if the streaming ingest is enabled.",
          "default": false,
          "type": "boolean"
        },
        "virtualNetworkConfiguration": {
          "type": "object",
          "description": "Virtual network definition.",
          "required": [
            "subnetId",
            "enginePublicIpId",
            "dataManagementPublicIpId"
          ],
          "properties": {
            "subnetId": {
              "description": "The subnet resource id.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "enginePublicIpId": {
              "description": "Engine service's public IP address resource id.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "dataManagementPublicIpId": {
              "description": "Data management's service public IP address resource id.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "state": {
              "type": "string",
              "description": "When enabled, the cluster is deployed into the configured subnet, when disabled it will be removed from the subnet.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "VnetState",
                "modelAsString": true
              },
              "default": "Enabled"
            }
          }
        },
        "keyVaultProperties": {
          "type": "object",
          "description": "KeyVault properties for the cluster encryption.",
          "properties": {
            "keyName": {
              "type": "string",
              "description": "The name of the key vault key.",
              "x-ms-client-name": "KeyName"
            },
            "keyVersion": {
              "type": "string",
              "description": "The version of the key vault key.",
              "x-ms-client-name": "KeyVersion"
            },
            "keyVaultUri": {
              "type": "string",
              "description": "The Uri of the key vault.",
              "x-ms-client-name": "KeyVaultUri"
            },
            "userIdentity": {
              "type": "string",
              "description": "The user assigned identity (ARM resource id) that has access to the key.",
              "x-ms-client-name": "UserIdentity"
            }
          }
        },
        "enablePurge": {
          "description": "A boolean value that indicates if the purge operations are enabled.",
          "default": false,
          "type": "boolean"
        },
        "languageExtensions": {
          "type": "object",
          "description": "List of the cluster's language extensions.",
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "The language extension object.",
                "properties": {
                  "languageExtensionName": {
                    "description": "The language extension name.",
                    "type": "string",
                    "enum": [
                      "PYTHON",
                      "R"
                    ],
                    "x-ms-enum": {
                      "name": "languageExtensionName",
                      "modelAsString": true
                    }
                  },
                  "languageExtensionImageName": {
                    "description": "The language extension image name.",
                    "type": "string",
                    "enum": [
                      "R",
                      "Python3_6_5",
                      "Python3_10_8",
                      "Python3_10_8_DL",
                      "PythonCustomImage",
                      "Python3_11_7",
                      "Python3_11_7_DL"
                    ],
                    "x-ms-enum": {
                      "name": "languageExtensionImageName",
                      "modelAsString": true
                    }
                  },
                  "languageExtensionCustomImageName": {
                    "description": "The language extension custom image name.",
                    "type": "string"
                  }
                }
              },
              "description": "The list of language extensions."
            }
          }
        },
        "enableDoubleEncryption": {
          "description": "A boolean value that indicates if double encryption is enabled.",
          "default": false,
          "type": "boolean"
        },
        "publicNetworkAccess": {
          "type": "string",
          "description": "Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "modelAsString": true
          },
          "default": "Enabled"
        },
        "allowedIpRangeList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of ips in the format of CIDR allowed to connect to the cluster."
        },
        "engineType": {
          "type": "string",
          "description": "The engine type",
          "enum": [
            "V2",
            "V3"
          ],
          "x-ms-enum": {
            "name": "EngineType",
            "modelAsString": true
          },
          "default": "V3"
        },
        "acceptedAudiences": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "description": "GUID or valid URL representing an accepted audience."
              }
            },
            "description": "Represents an accepted audience trusted by the cluster."
          },
          "description": "The cluster's accepted audiences."
        },
        "enableAutoStop": {
          "description": "A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days).",
          "default": true,
          "type": "boolean"
        },
        "restrictOutboundNetworkAccess": {
          "description": "Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ClusterNetworkAccessFlag",
            "modelAsString": true
          },
          "default": "Disabled"
        },
        "allowedFqdnList": {
          "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.",
          "type": "array",
          "items": {
            "description": "FQDN to be allowed for egress. Example: my-storageaccount.blob.core.windows.net",
            "type": "string"
          }
        },
        "calloutPolicies": {
          "description": "List of callout policies for egress from Cluster.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "calloutUriRegex": {
                "type": "string",
                "description": "Regular expression or FQDN pattern for the callout URI."
              },
              "calloutType": {
                "type": "string",
                "enum": [
                  "kusto",
                  "sql",
                  "cosmosdb",
                  "external_data",
                  "azure_digital_twins",
                  "sandbox_artifacts",
                  "webapi",
                  "mysql",
                  "postgresql",
                  "genevametrics",
                  "azure_openai"
                ],
                "x-ms-enum": {
                  "name": "calloutType",
                  "modelAsString": true
                },
                "description": "Type of the callout service, specifying the kind of external resource or service being accessed."
              },
              "outboundAccess": {
                "type": "string",
                "enum": [
                  "Allow",
                  "Deny"
                ],
                "x-ms-enum": {
                  "name": "outboundAccess",
                  "modelAsString": true
                },
                "description": "Indicates whether outbound access is permitted for the specified URI pattern."
              },
              "calloutId": {
                "type": "string",
                "description": "Unique identifier for the callout configuration.",
                "readOnly": true
              }
            },
            "description": "Configuration for external callout policies, including URI patterns, access types, and service types."
          }
        },
        "publicIPType": {
          "description": "Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6)",
          "enum": [
            "IPv4",
            "DualStack"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "publicIPType",
            "modelAsString": true
          },
          "default": "IPv4"
        },
        "virtualClusterGraduationProperties": {
          "description": "Virtual Cluster graduation properties",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ],
          "x-ms-secret": true
        },
        "privateEndpointConnections": {
          "type": "array",
          "items": {
            "description": "A private endpoint connection",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "required": [
                  "privateLinkServiceConnectionState"
                ],
                "type": "object",
                "properties": {
                  "privateEndpoint": {
                    "description": "Private endpoint which the connection belongs to.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource id of the private endpoint.",
                        "readOnly": true
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "Connection State of the Private Endpoint Connection.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "The private link service connection status."
                      },
                      "description": {
                        "type": "string",
                        "description": "The private link service connection description."
                      },
                      "actionsRequired": {
                        "type": "string",
                        "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                        "readOnly": true
                      }
                    }
                  },
                  "groupId": {
                    "type": "string",
                    "description": "Group id of the private endpoint.",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "Provisioning state of the private endpoint.",
                    "readOnly": true
                  }
                }
              },
              "systemData": {
                "readOnly": true,
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            }
          },
          "readOnly": true,
          "description": "A list of private endpoint connections."
        },
        "migrationCluster": {
          "description": "Properties of the peer cluster involved in a migration to/from this cluster.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "id": {
              "type": "string",
              "description": "The resource ID of the cluster.",
              "readOnly": true
            },
            "uri": {
              "type": "string",
              "description": "The public URL of the cluster.",
              "readOnly": true
            },
            "dataIngestionUri": {
              "type": "string",
              "description": "The public data ingestion URL of the cluster.",
              "readOnly": true
            },
            "role": {
              "type": "string",
              "description": "The role of the cluster in the migration process.",
              "readOnly": true,
              "enum": [
                "Source",
                "Destination"
              ],
              "x-ms-enum": {
                "name": "MigrationClusterRole",
                "modelAsString": true
              }
            }
          }
        },
        "zoneStatus": {
          "type": "string",
          "readOnly": true,
          "description": "Indicates whether the cluster is zonal or non-zonal.",
          "enum": [
            "NonZonal",
            "ZonalInconsistency",
            "Zonal"
          ],
          "x-ms-enum": {
            "name": "ZoneStatus",
            "modelAsString": true
          }
        }
      },
      "description": "Class representing the Kusto cluster properties."
    },
    "MigrationClusterProperties": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource ID of the cluster.",
          "readOnly": true
        },
        "uri": {
          "type": "string",
          "description": "The public URL of the cluster.",
          "readOnly": true
        },
        "dataIngestionUri": {
          "type": "string",
          "description": "The public data ingestion URL of the cluster.",
          "readOnly": true
        },
        "role": {
          "type": "string",
          "description": "The role of the cluster in the migration process.",
          "readOnly": true,
          "enum": [
            "Source",
            "Destination"
          ],
          "x-ms-enum": {
            "name": "MigrationClusterRole",
            "modelAsString": true
          }
        }
      },
      "description": "Represents a properties of a cluster that is part of a migration."
    },
    "TrustedExternalTenant": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "GUID representing an external tenant."
        }
      },
      "description": "Represents a tenant ID that is trusted by the cluster."
    },
    "CalloutPolicy": {
      "type": "object",
      "properties": {
        "calloutUriRegex": {
          "type": "string",
          "description": "Regular expression or FQDN pattern for the callout URI."
        },
        "calloutType": {
          "type": "string",
          "enum": [
            "kusto",
            "sql",
            "cosmosdb",
            "external_data",
            "azure_digital_twins",
            "sandbox_artifacts",
            "webapi",
            "mysql",
            "postgresql",
            "genevametrics",
            "azure_openai"
          ],
          "x-ms-enum": {
            "name": "calloutType",
            "modelAsString": true
          },
          "description": "Type of the callout service, specifying the kind of external resource or service being accessed."
        },
        "outboundAccess": {
          "type": "string",
          "enum": [
            "Allow",
            "Deny"
          ],
          "x-ms-enum": {
            "name": "outboundAccess",
            "modelAsString": true
          },
          "description": "Indicates whether outbound access is permitted for the specified URI pattern."
        },
        "calloutId": {
          "type": "string",
          "description": "Unique identifier for the callout configuration.",
          "readOnly": true
        }
      },
      "description": "Configuration for external callout policies, including URI patterns, access types, and service types."
    },
    "CalloutPolicyToRemove": {
      "type": "object",
      "properties": {
        "calloutId": {
          "type": "string",
          "description": "Unique identifier for the callout configuration."
        }
      },
      "description": "Configuration for an external callout policy to remove."
    },
    "AzureResourceSku": {
      "type": "object",
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "Resource Namespace and Type."
        },
        "sku": {
          "description": "The SKU details.",
          "type": "object",
          "required": [
            "name",
            "tier"
          ],
          "properties": {
            "name": {
              "description": "SKU name.",
              "type": "string",
              "enum": [
                "Dev(No SLA)_Standard_D11_v2",
                "Dev(No SLA)_Standard_E2a_v4",
                "Standard_D11_v2",
                "Standard_D12_v2",
                "Standard_D13_v2",
                "Standard_D14_v2",
                "Standard_D32d_v4",
                "Standard_D16d_v5",
                "Standard_D32d_v5",
                "Standard_DS13_v2+1TB_PS",
                "Standard_DS13_v2+2TB_PS",
                "Standard_DS14_v2+3TB_PS",
                "Standard_DS14_v2+4TB_PS",
                "Standard_L4s",
                "Standard_L8s",
                "Standard_L16s",
                "Standard_L8s_v2",
                "Standard_L16s_v2",
                "Standard_L8s_v3",
                "Standard_L16s_v3",
                "Standard_L32s_v3",
                "Standard_L8as_v3",
                "Standard_L16as_v3",
                "Standard_L32as_v3",
                "Standard_E64i_v3",
                "Standard_E80ids_v4",
                "Standard_E2a_v4",
                "Standard_E4a_v4",
                "Standard_E8a_v4",
                "Standard_E16a_v4",
                "Standard_E8as_v4+1TB_PS",
                "Standard_E8as_v4+2TB_PS",
                "Standard_E16as_v4+3TB_PS",
                "Standard_E16as_v4+4TB_PS",
                "Standard_E8as_v5+1TB_PS",
                "Standard_E8as_v5+2TB_PS",
                "Standard_E16as_v5+3TB_PS",
                "Standard_E16as_v5+4TB_PS",
                "Standard_E2ads_v5",
                "Standard_E4ads_v5",
                "Standard_E8ads_v5",
                "Standard_E16ads_v5",
                "Standard_EC8as_v5+1TB_PS",
                "Standard_EC8as_v5+2TB_PS",
                "Standard_EC16as_v5+3TB_PS",
                "Standard_EC16as_v5+4TB_PS",
                "Standard_EC8ads_v5",
                "Standard_EC16ads_v5",
                "Standard_E8s_v4+1TB_PS",
                "Standard_E8s_v4+2TB_PS",
                "Standard_E16s_v4+3TB_PS",
                "Standard_E16s_v4+4TB_PS",
                "Standard_E8s_v5+1TB_PS",
                "Standard_E8s_v5+2TB_PS",
                "Standard_E16s_v5+3TB_PS",
                "Standard_E16s_v5+4TB_PS",
                "Standard_E2d_v4",
                "Standard_E4d_v4",
                "Standard_E8d_v4",
                "Standard_E16d_v4",
                "Standard_E2d_v5",
                "Standard_E4d_v5",
                "Standard_E8d_v5",
                "Standard_E16d_v5"
              ],
              "x-ms-enum": {
                "name": "AzureSkuName",
                "modelAsString": true
              }
            },
            "capacity": {
              "description": "The number of instances of the cluster.",
              "type": "integer",
              "format": "int32"
            },
            "tier": {
              "description": "SKU tier.",
              "type": "string",
              "enum": [
                "Basic",
                "Standard"
              ],
              "x-ms-enum": {
                "name": "AzureSkuTier",
                "modelAsString": true
              }
            }
          }
        },
        "capacity": {
          "description": "The number of instances of the cluster.",
          "type": "object",
          "required": [
            "minimum",
            "maximum",
            "default",
            "scaleType"
          ],
          "properties": {
            "scaleType": {
              "description": "Scale type.",
              "type": "string",
              "enum": [
                "automatic",
                "manual",
                "none"
              ],
              "x-ms-enum": {
                "name": "AzureScaleType",
                "modelAsString": true
              }
            },
            "minimum": {
              "description": "Minimum allowed capacity.",
              "type": "integer",
              "format": "int32"
            },
            "maximum": {
              "description": "Maximum allowed capacity.",
              "type": "integer",
              "format": "int32"
            },
            "default": {
              "description": "The default capacity that would be used.",
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "description": "Azure resource SKU definition."
    },
    "AzureCapacity": {
      "type": "object",
      "required": [
        "minimum",
        "maximum",
        "default",
        "scaleType"
      ],
      "properties": {
        "scaleType": {
          "description": "Scale type.",
          "type": "string",
          "enum": [
            "automatic",
            "manual",
            "none"
          ],
          "x-ms-enum": {
            "name": "AzureScaleType",
            "modelAsString": true
          }
        },
        "minimum": {
          "description": "Minimum allowed capacity.",
          "type": "integer",
          "format": "int32"
        },
        "maximum": {
          "description": "Maximum allowed capacity.",
          "type": "integer",
          "format": "int32"
        },
        "default": {
          "description": "The default capacity that would be used.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Azure capacity definition."
    },
    "SkuDescriptionList": {
      "description": "The list of the EngagementFabric SKU descriptions",
      "type": "object",
      "properties": {
        "value": {
          "description": "SKU descriptions",
          "type": "array",
          "items": {
            "description": "The Kusto SKU description of given resource type",
            "type": "object",
            "properties": {
              "resourceType": {
                "description": "The resource type",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the SKU",
                "type": "string",
                "readOnly": true
              },
              "tier": {
                "description": "The tier of the SKU",
                "type": "string",
                "readOnly": true
              },
              "locations": {
                "description": "The set of locations that the SKU is available",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "locationInfo": {
                "description": "Locations and zones",
                "type": "array",
                "items": {
                  "description": "The locations and zones info for SKU.",
                  "type": "object",
                  "required": [
                    "location"
                  ],
                  "properties": {
                    "location": {
                      "description": "The available location of the SKU.",
                      "type": "string"
                    },
                    "zones": {
                      "description": "The available zone of the SKU.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "zoneDetails": {
                      "description": "Gets details of capabilities available to a SKU in specific zones.",
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "array",
                            "readOnly": true,
                            "items": {
                              "type": "string"
                            },
                            "description": "The set of zones that the SKU is available in with the specified capabilities."
                          },
                          "capabilities": {
                            "type": "array",
                            "readOnly": true,
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "An invariant to describe the feature."
                                },
                                "value": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "An invariant if the feature is measured by quantity."
                                }
                              },
                              "description": "Describes The SKU capabilities object."
                            },
                            "x-ms-identifiers": [
                              "name"
                            ],
                            "description": "A list of capabilities that are available for the SKU in the specified list of zones."
                          }
                        },
                        "description": "Describes The zonal capabilities of a SKU."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    }
                  }
                },
                "readOnly": true
              },
              "restrictions": {
                "description": "The restrictions because of which SKU cannot be used",
                "type": "array",
                "items": {
                  "type": "object"
                },
                "readOnly": true
              }
            }
          },
          "readOnly": true
        }
      }
    },
    "SkuDescription": {
      "description": "The Kusto SKU description of given resource type",
      "type": "object",
      "properties": {
        "resourceType": {
          "description": "The resource type",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the SKU",
          "type": "string",
          "readOnly": true
        },
        "tier": {
          "description": "The tier of the SKU",
          "type": "string",
          "readOnly": true
        },
        "locations": {
          "description": "The set of locations that the SKU is available",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "locationInfo": {
          "description": "Locations and zones",
          "type": "array",
          "items": {
            "description": "The locations and zones info for SKU.",
            "type": "object",
            "required": [
              "location"
            ],
            "properties": {
              "location": {
                "description": "The available location of the SKU.",
                "type": "string"
              },
              "zones": {
                "description": "The available zone of the SKU.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "zoneDetails": {
                "description": "Gets details of capabilities available to a SKU in specific zones.",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "array",
                      "readOnly": true,
                      "items": {
                        "type": "string"
                      },
                      "description": "The set of zones that the SKU is available in with the specified capabilities."
                    },
                    "capabilities": {
                      "type": "array",
                      "readOnly": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "readOnly": true,
                            "description": "An invariant to describe the feature."
                          },
                          "value": {
                            "type": "string",
                            "readOnly": true,
                            "description": "An invariant if the feature is measured by quantity."
                          }
                        },
                        "description": "Describes The SKU capabilities object."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "A list of capabilities that are available for the SKU in the specified list of zones."
                    }
                  },
                  "description": "Describes The zonal capabilities of a SKU."
                },
                "x-ms-identifiers": [
                  "name"
                ]
              }
            }
          },
          "readOnly": true
        },
        "restrictions": {
          "description": "The restrictions because of which SKU cannot be used",
          "type": "array",
          "items": {
            "type": "object"
          },
          "readOnly": true
        }
      }
    },
    "SkuLocationInfoItem": {
      "description": "The locations and zones info for SKU.",
      "type": "object",
      "required": [
        "location"
      ],
      "properties": {
        "location": {
          "description": "The available location of the SKU.",
          "type": "string"
        },
        "zones": {
          "description": "The available zone of the SKU.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "zoneDetails": {
          "description": "Gets details of capabilities available to a SKU in specific zones.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "array",
                "readOnly": true,
                "items": {
                  "type": "string"
                },
                "description": "The set of zones that the SKU is available in with the specified capabilities."
              },
              "capabilities": {
                "type": "array",
                "readOnly": true,
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "readOnly": true,
                      "description": "An invariant to describe the feature."
                    },
                    "value": {
                      "type": "string",
                      "readOnly": true,
                      "description": "An invariant if the feature is measured by quantity."
                    }
                  },
                  "description": "Describes The SKU capabilities object."
                },
                "x-ms-identifiers": [
                  "name"
                ],
                "description": "A list of capabilities that are available for the SKU in the specified list of zones."
              }
            },
            "description": "Describes The zonal capabilities of a SKU."
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "AzureSku": {
      "type": "object",
      "required": [
        "name",
        "tier"
      ],
      "properties": {
        "name": {
          "description": "SKU name.",
          "type": "string",
          "enum": [
            "Dev(No SLA)_Standard_D11_v2",
            "Dev(No SLA)_Standard_E2a_v4",
            "Standard_D11_v2",
            "Standard_D12_v2",
            "Standard_D13_v2",
            "Standard_D14_v2",
            "Standard_D32d_v4",
            "Standard_D16d_v5",
            "Standard_D32d_v5",
            "Standard_DS13_v2+1TB_PS",
            "Standard_DS13_v2+2TB_PS",
            "Standard_DS14_v2+3TB_PS",
            "Standard_DS14_v2+4TB_PS",
            "Standard_L4s",
            "Standard_L8s",
            "Standard_L16s",
            "Standard_L8s_v2",
            "Standard_L16s_v2",
            "Standard_L8s_v3",
            "Standard_L16s_v3",
            "Standard_L32s_v3",
            "Standard_L8as_v3",
            "Standard_L16as_v3",
            "Standard_L32as_v3",
            "Standard_E64i_v3",
            "Standard_E80ids_v4",
            "Standard_E2a_v4",
            "Standard_E4a_v4",
            "Standard_E8a_v4",
            "Standard_E16a_v4",
            "Standard_E8as_v4+1TB_PS",
            "Standard_E8as_v4+2TB_PS",
            "Standard_E16as_v4+3TB_PS",
            "Standard_E16as_v4+4TB_PS",
            "Standard_E8as_v5+1TB_PS",
            "Standard_E8as_v5+2TB_PS",
            "Standard_E16as_v5+3TB_PS",
            "Standard_E16as_v5+4TB_PS",
            "Standard_E2ads_v5",
            "Standard_E4ads_v5",
            "Standard_E8ads_v5",
            "Standard_E16ads_v5",
            "Standard_EC8as_v5+1TB_PS",
            "Standard_EC8as_v5+2TB_PS",
            "Standard_EC16as_v5+3TB_PS",
            "Standard_EC16as_v5+4TB_PS",
            "Standard_EC8ads_v5",
            "Standard_EC16ads_v5",
            "Standard_E8s_v4+1TB_PS",
            "Standard_E8s_v4+2TB_PS",
            "Standard_E16s_v4+3TB_PS",
            "Standard_E16s_v4+4TB_PS",
            "Standard_E8s_v5+1TB_PS",
            "Standard_E8s_v5+2TB_PS",
            "Standard_E16s_v5+3TB_PS",
            "Standard_E16s_v5+4TB_PS",
            "Standard_E2d_v4",
            "Standard_E4d_v4",
            "Standard_E8d_v4",
            "Standard_E16d_v4",
            "Standard_E2d_v5",
            "Standard_E4d_v5",
            "Standard_E8d_v5",
            "Standard_E16d_v5"
          ],
          "x-ms-enum": {
            "name": "AzureSkuName",
            "modelAsString": true
          }
        },
        "capacity": {
          "description": "The number of instances of the cluster.",
          "type": "integer",
          "format": "int32"
        },
        "tier": {
          "description": "SKU tier.",
          "type": "string",
          "enum": [
            "Basic",
            "Standard"
          ],
          "x-ms-enum": {
            "name": "AzureSkuTier",
            "modelAsString": true
          }
        }
      },
      "description": "Azure SKU definition."
    },
    "Zones": {
      "description": "An array represents the availability zones of the cluster.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "OptimizedAutoscale": {
      "type": "object",
      "required": [
        "version",
        "isEnabled",
        "minimum",
        "maximum"
      ],
      "properties": {
        "version": {
          "description": "The version of the template defined, for instance 1.",
          "type": "integer",
          "format": "int32"
        },
        "isEnabled": {
          "description": "A boolean value that indicate if the optimized autoscale feature is enabled or not.",
          "type": "boolean"
        },
        "minimum": {
          "description": "Minimum allowed instances count.",
          "type": "integer",
          "format": "int32"
        },
        "maximum": {
          "description": "Maximum allowed instances count.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "A class that contains the optimized auto scale definition."
    },
    "VirtualNetworkConfiguration": {
      "type": "object",
      "required": [
        "subnetId",
        "enginePublicIpId",
        "dataManagementPublicIpId"
      ],
      "properties": {
        "subnetId": {
          "description": "The subnet resource id.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "enginePublicIpId": {
          "description": "Engine service's public IP address resource id.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "dataManagementPublicIpId": {
          "description": "Data management's service public IP address resource id.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "state": {
          "type": "string",
          "description": "When enabled, the cluster is deployed into the configured subnet, when disabled it will be removed from the subnet.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "VnetState",
            "modelAsString": true
          },
          "default": "Enabled"
        }
      },
      "description": "A class that contains virtual network definition."
    },
    "DatabaseStatistics": {
      "type": "object",
      "readOnly": true,
      "properties": {
        "size": {
          "type": "number",
          "description": "The database size - the total size of compressed data and index in bytes."
        }
      },
      "description": "A class that contains database statistics information."
    },
    "AttachedDatabaseConfigurationProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "description": "The provisioned state of the resource.",
          "type": "string",
          "enum": [
            "Running",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Moving",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "databaseName": {
          "type": "string",
          "description": "The name of the database which you would like to attach, use * if you want to follow all current and future databases."
        },
        "clusterResourceId": {
          "type": "string",
          "description": "The resource id of the cluster where the databases you would like to attach reside."
        },
        "attachedDatabaseNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "The list of databases from the clusterResourceId which are currently attached to the cluster."
        },
        "defaultPrincipalsModificationKind": {
          "type": "string",
          "enum": [
            "Union",
            "Replace",
            "None"
          ],
          "x-ms-enum": {
            "name": "DefaultPrincipalsModificationKind",
            "modelAsString": true
          },
          "description": "The default principals modification kind"
        },
        "tableLevelSharingProperties": {
          "type": "object",
          "description": "Table level sharing specifications",
          "properties": {
            "tablesToInclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of tables to include in the follower database"
            },
            "tablesToExclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of tables to exclude from the follower database"
            },
            "externalTablesToInclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of external tables to include in the follower database"
            },
            "externalTablesToExclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of external tables to exclude from the follower database"
            },
            "materializedViewsToInclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of materialized views to include in the follower database"
            },
            "materializedViewsToExclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of materialized views to exclude from the follower database"
            },
            "functionsToInclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of functions to include in the follower database"
            },
            "functionsToExclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of functions to exclude from the follower database"
            }
          }
        },
        "databaseNameOverride": {
          "type": "string",
          "description": "Overrides the original database name. Relevant only when attaching to a specific database."
        },
        "databaseNamePrefix": {
          "type": "string",
          "description": "Adds a prefix to the attached databases name. When following an entire cluster, that prefix would be added to all of the databases original names from leader cluster."
        }
      },
      "description": "Class representing the an attached database configuration properties of kind specific.",
      "required": [
        "databaseName",
        "clusterResourceId",
        "defaultPrincipalsModificationKind"
      ]
    },
    "ReadWriteDatabaseProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "description": "The provisioned state of the resource.",
          "type": "string",
          "enum": [
            "Running",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Moving",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "softDeletePeriod": {
          "type": "string",
          "format": "duration",
          "description": "The time the data should be kept before it stops being accessible to queries in TimeSpan."
        },
        "hotCachePeriod": {
          "type": "string",
          "format": "duration",
          "description": "The time the data should be kept in cache for fast queries in TimeSpan."
        },
        "statistics": {
          "readOnly": true,
          "description": "The statistics of the database.",
          "type": "object",
          "properties": {
            "size": {
              "type": "number",
              "description": "The database size - the total size of compressed data and index in bytes."
            }
          }
        },
        "isFollowed": {
          "type": "boolean",
          "readOnly": true,
          "description": "Indicates whether the database is followed."
        },
        "keyVaultProperties": {
          "type": "object",
          "description": "KeyVault properties for the database encryption.",
          "properties": {
            "keyName": {
              "type": "string",
              "description": "The name of the key vault key.",
              "x-ms-client-name": "KeyName"
            },
            "keyVersion": {
              "type": "string",
              "description": "The version of the key vault key.",
              "x-ms-client-name": "KeyVersion"
            },
            "keyVaultUri": {
              "type": "string",
              "description": "The Uri of the key vault.",
              "x-ms-client-name": "KeyVaultUri"
            },
            "userIdentity": {
              "type": "string",
              "description": "The user assigned identity (ARM resource id) that has access to the key.",
              "x-ms-client-name": "UserIdentity"
            }
          }
        },
        "suspensionDetails": {
          "type": "object",
          "readOnly": true,
          "description": "The database suspension details. If the database is suspended, this object contains information related to the database's suspension state.",
          "properties": {
            "suspensionStartDate": {
              "description": "The starting date and time of the suspension state.",
              "type": "string",
              "format": "date-time"
            }
          }
        }
      },
      "description": "Class representing the Kusto database properties."
    },
    "ReadOnlyFollowingDatabaseProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "description": "The provisioned state of the resource.",
          "type": "string",
          "enum": [
            "Running",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Moving",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "softDeletePeriod": {
          "type": "string",
          "readOnly": true,
          "format": "duration",
          "description": "The time the data should be kept before it stops being accessible to queries in TimeSpan."
        },
        "hotCachePeriod": {
          "type": "string",
          "format": "duration",
          "description": "The time the data should be kept in cache for fast queries in TimeSpan."
        },
        "statistics": {
          "readOnly": true,
          "description": "The statistics of the database.",
          "type": "object",
          "properties": {
            "size": {
              "type": "number",
              "description": "The database size - the total size of compressed data and index in bytes."
            }
          }
        },
        "leaderClusterResourceId": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the leader cluster"
        },
        "attachedDatabaseConfigurationName": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the attached database configuration cluster"
        },
        "principalsModificationKind": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Union",
            "Replace",
            "None"
          ],
          "x-ms-enum": {
            "name": "PrincipalsModificationKind",
            "modelAsString": true
          },
          "description": "The principals modification kind of the database"
        },
        "tableLevelSharingProperties": {
          "type": "object",
          "readOnly": true,
          "description": "Table level sharing specifications",
          "properties": {
            "tablesToInclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of tables to include in the follower database"
            },
            "tablesToExclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of tables to exclude from the follower database"
            },
            "externalTablesToInclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of external tables to include in the follower database"
            },
            "externalTablesToExclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of external tables to exclude from the follower database"
            },
            "materializedViewsToInclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of materialized views to include in the follower database"
            },
            "materializedViewsToExclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of materialized views to exclude from the follower database"
            },
            "functionsToInclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of functions to include in the follower database"
            },
            "functionsToExclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of functions to exclude from the follower database"
            }
          }
        },
        "originalDatabaseName": {
          "type": "string",
          "readOnly": true,
          "description": "The original database name, before databaseNameOverride or databaseNamePrefix where applied."
        },
        "databaseShareOrigin": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Direct",
            "DataShare",
            "Other"
          ],
          "x-ms-enum": {
            "name": "DatabaseShareOrigin",
            "modelAsString": true
          },
          "description": "The origin of the following setup."
        },
        "suspensionDetails": {
          "type": "object",
          "readOnly": true,
          "description": "The database suspension details. If the database is suspended, this object contains information related to the database's suspension state.",
          "properties": {
            "suspensionStartDate": {
              "description": "The starting date and time of the suspension state.",
              "type": "string",
              "format": "date-time"
            }
          }
        }
      },
      "description": "Class representing the Kusto database properties."
    },
    "EventHubConnectionProperties": {
      "type": "object",
      "properties": {
        "eventHubResourceId": {
          "type": "string",
          "description": "The resource ID of the event hub to be used to create a data connection."
        },
        "consumerGroup": {
          "type": "string",
          "description": "The event hub consumer group."
        },
        "tableName": {
          "type": "string",
          "description": "The table where the data should be ingested. Optionally the table information can be added to each message."
        },
        "mappingRuleName": {
          "type": "string",
          "description": "The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message."
        },
        "dataFormat": {
          "description": "The data format of the message. Optionally the data format can be added to each message.",
          "type": "string",
          "enum": [
            "MULTIJSON",
            "JSON",
            "CSV",
            "TSV",
            "SCSV",
            "SOHSV",
            "PSV",
            "TXT",
            "RAW",
            "SINGLEJSON",
            "AVRO",
            "TSVE",
            "PARQUET",
            "ORC",
            "APACHEAVRO",
            "W3CLOGFILE"
          ],
          "x-ms-enum": {
            "name": "eventHubDataFormat",
            "modelAsString": true
          }
        },
        "eventSystemProperties": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "System properties of the event hub"
        },
        "compression": {
          "description": "The event hub messages compression type",
          "type": "string",
          "enum": [
            "None",
            "GZip"
          ],
          "x-ms-enum": {
            "name": "compression",
            "modelAsString": true
          },
          "default": "None"
        },
        "provisioningState": {
          "readOnly": true,
          "description": "The provisioned state of the resource.",
          "type": "string",
          "enum": [
            "Running",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Moving",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "managedIdentityResourceId": {
          "type": "string",
          "description": "The resource ID of a managed identity (system or user assigned) to be used to authenticate with event hub."
        },
        "managedIdentityObjectId": {
          "type": "string",
          "readOnly": true,
          "description": "The object ID of the managedIdentityResourceId"
        },
        "databaseRouting": {
          "type": "string",
          "description": "Indication for database routing information from the data connection, by default only database routing information is allowed",
          "enum": [
            "Single",
            "Multi"
          ],
          "x-ms-enum": {
            "name": "DatabaseRouting",
            "modelAsString": true
          },
          "default": "Single"
        },
        "retrievalStartDate": {
          "description": "When defined, the data connection retrieves existing Event hub events created since the Retrieval start date. It can only retrieve events retained by the Event hub, based on its retention period.",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "eventHubResourceId",
        "consumerGroup"
      ],
      "description": "Class representing the Kusto event hub connection properties."
    },
    "IotHubConnectionProperties": {
      "type": "object",
      "properties": {
        "iotHubResourceId": {
          "type": "string",
          "description": "The resource ID of the Iot hub to be used to create a data connection."
        },
        "consumerGroup": {
          "type": "string",
          "description": "The iot hub consumer group."
        },
        "tableName": {
          "type": "string",
          "description": "The table where the data should be ingested. Optionally the table information can be added to each message."
        },
        "mappingRuleName": {
          "type": "string",
          "description": "The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message."
        },
        "dataFormat": {
          "description": "The data format of the message. Optionally the data format can be added to each message.",
          "type": "string",
          "enum": [
            "MULTIJSON",
            "JSON",
            "CSV",
            "TSV",
            "SCSV",
            "SOHSV",
            "PSV",
            "TXT",
            "RAW",
            "SINGLEJSON",
            "AVRO",
            "TSVE",
            "PARQUET",
            "ORC",
            "APACHEAVRO",
            "W3CLOGFILE"
          ],
          "x-ms-enum": {
            "name": "iotHubDataFormat",
            "modelAsString": true
          }
        },
        "eventSystemProperties": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "System properties of the iot hub"
        },
        "sharedAccessPolicyName": {
          "type": "string",
          "description": "The name of the share access policy"
        },
        "databaseRouting": {
          "type": "string",
          "description": "Indication for database routing information from the data connection, by default only database routing information is allowed",
          "enum": [
            "Single",
            "Multi"
          ],
          "x-ms-enum": {
            "name": "DatabaseRouting",
            "modelAsString": true
          },
          "default": "Single"
        },
        "retrievalStartDate": {
          "description": "When defined, the data connection retrieves existing Event hub events created since the Retrieval start date. It can only retrieve events retained by the Event hub, based on its retention period.",
          "type": "string",
          "format": "date-time"
        },
        "provisioningState": {
          "readOnly": true,
          "description": "The provisioned state of the resource.",
          "type": "string",
          "enum": [
            "Running",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Moving",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        }
      },
      "required": [
        "iotHubResourceId",
        "consumerGroup",
        "sharedAccessPolicyName"
      ],
      "description": "Class representing the Kusto Iot hub connection properties."
    },
    "EventHubDataFormat": {
      "description": "The data format of the message. Optionally the data format can be added to each message.",
      "type": "string",
      "enum": [
        "MULTIJSON",
        "JSON",
        "CSV",
        "TSV",
        "SCSV",
        "SOHSV",
        "PSV",
        "TXT",
        "RAW",
        "SINGLEJSON",
        "AVRO",
        "TSVE",
        "PARQUET",
        "ORC",
        "APACHEAVRO",
        "W3CLOGFILE"
      ],
      "x-ms-enum": {
        "name": "eventHubDataFormat",
        "modelAsString": true
      }
    },
    "IotHubDataFormat": {
      "description": "The data format of the message. Optionally the data format can be added to each message.",
      "type": "string",
      "enum": [
        "MULTIJSON",
        "JSON",
        "CSV",
        "TSV",
        "SCSV",
        "SOHSV",
        "PSV",
        "TXT",
        "RAW",
        "SINGLEJSON",
        "AVRO",
        "TSVE",
        "PARQUET",
        "ORC",
        "APACHEAVRO",
        "W3CLOGFILE"
      ],
      "x-ms-enum": {
        "name": "iotHubDataFormat",
        "modelAsString": true
      }
    },
    "EventGridDataFormat": {
      "description": "The data format of the message. Optionally the data format can be added to each message.",
      "type": "string",
      "enum": [
        "MULTIJSON",
        "JSON",
        "CSV",
        "TSV",
        "SCSV",
        "SOHSV",
        "PSV",
        "TXT",
        "RAW",
        "SINGLEJSON",
        "AVRO",
        "TSVE",
        "PARQUET",
        "ORC",
        "APACHEAVRO",
        "W3CLOGFILE"
      ],
      "x-ms-enum": {
        "name": "eventGridDataFormat",
        "modelAsString": true
      }
    },
    "BlobStorageEventType": {
      "description": "The name of blob storage event type to process.",
      "type": "string",
      "enum": [
        "Microsoft.Storage.BlobCreated",
        "Microsoft.Storage.BlobRenamed"
      ],
      "x-ms-enum": {
        "name": "blobStorageEventType",
        "modelAsString": true
      }
    },
    "Compression": {
      "description": "The compression type",
      "type": "string",
      "enum": [
        "None",
        "GZip"
      ],
      "x-ms-enum": {
        "name": "compression",
        "modelAsString": true
      },
      "default": "None"
    },
    "EventGridConnectionProperties": {
      "type": "object",
      "properties": {
        "storageAccountResourceId": {
          "type": "string",
          "description": "The resource ID of the storage account where the data resides."
        },
        "eventGridResourceId": {
          "type": "string",
          "description": "The resource ID of the event grid that is subscribed to the storage account events."
        },
        "eventHubResourceId": {
          "type": "string",
          "description": "The resource ID where the event grid is configured to send events."
        },
        "consumerGroup": {
          "type": "string",
          "description": "The event hub consumer group."
        },
        "tableName": {
          "type": "string",
          "description": "The table where the data should be ingested. Optionally the table information can be added to each message."
        },
        "mappingRuleName": {
          "type": "string",
          "description": "The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message."
        },
        "dataFormat": {
          "description": "The data format of the message. Optionally the data format can be added to each message.",
          "type": "string",
          "enum": [
            "MULTIJSON",
            "JSON",
            "CSV",
            "TSV",
            "SCSV",
            "SOHSV",
            "PSV",
            "TXT",
            "RAW",
            "SINGLEJSON",
            "AVRO",
            "TSVE",
            "PARQUET",
            "ORC",
            "APACHEAVRO",
            "W3CLOGFILE"
          ],
          "x-ms-enum": {
            "name": "eventGridDataFormat",
            "modelAsString": true
          }
        },
        "ignoreFirstRecord": {
          "type": "boolean",
          "description": "A Boolean value that, if set to true, indicates that ingestion should ignore the first record of every file"
        },
        "blobStorageEventType": {
          "description": "The name of blob storage event type to process.",
          "type": "string",
          "enum": [
            "Microsoft.Storage.BlobCreated",
            "Microsoft.Storage.BlobRenamed"
          ],
          "x-ms-enum": {
            "name": "blobStorageEventType",
            "modelAsString": true
          }
        },
        "managedIdentityResourceId": {
          "type": "string",
          "description": "The resource ID of a managed identity (system or user assigned) to be used to authenticate with event hub and storage account."
        },
        "managedIdentityObjectId": {
          "type": "string",
          "readOnly": true,
          "description": "The object ID of managedIdentityResourceId"
        },
        "databaseRouting": {
          "type": "string",
          "description": "Indication for database routing information from the data connection, by default only database routing information is allowed",
          "enum": [
            "Single",
            "Multi"
          ],
          "x-ms-enum": {
            "name": "DatabaseRouting",
            "modelAsString": true
          },
          "default": "Single"
        },
        "provisioningState": {
          "readOnly": true,
          "description": "The provisioned state of the resource.",
          "type": "string",
          "enum": [
            "Running",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Moving",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        }
      },
      "required": [
        "storageAccountResourceId",
        "eventHubResourceId",
        "consumerGroup"
      ],
      "description": "Class representing the Kusto event grid connection properties."
    },
    "CosmosDbDataConnectionProperties": {
      "type": "object",
      "properties": {
        "tableName": {
          "type": "string",
          "description": "The case-sensitive name of the existing target table in your cluster. Retrieved data is ingested into this table."
        },
        "mappingRuleName": {
          "type": "string",
          "description": "The name of an existing mapping rule to use when ingesting the retrieved data."
        },
        "managedIdentityResourceId": {
          "type": "string",
          "description": "The resource ID of a managed system or user-assigned identity. The identity is used to authenticate with Cosmos DB."
        },
        "managedIdentityObjectId": {
          "type": "string",
          "readOnly": true,
          "description": "The object ID of the managed identity resource."
        },
        "cosmosDbAccountResourceId": {
          "type": "string",
          "description": "The resource ID of the Cosmos DB account used to create the data connection."
        },
        "cosmosDbDatabase": {
          "type": "string",
          "description": "The name of an existing database in the Cosmos DB account."
        },
        "cosmosDbContainer": {
          "type": "string",
          "description": "The name of an existing container in the Cosmos DB database."
        },
        "retrievalStartDate": {
          "description": "Optional. If defined, the data connection retrieves Cosmos DB documents created or updated after the specified retrieval start date.",
          "type": "string",
          "format": "date-time"
        },
        "provisioningState": {
          "readOnly": true,
          "description": "The provisioned state of the resource.",
          "type": "string",
          "enum": [
            "Running",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Moving",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        }
      },
      "required": [
        "tableName",
        "managedIdentityResourceId",
        "cosmosDbAccountResourceId",
        "cosmosDbDatabase",
        "cosmosDbContainer"
      ],
      "description": "Class representing the Kusto CosmosDb data connection properties."
    },
    "Cluster": {
      "type": "object",
      "required": [
        "sku"
      ],
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        },
        "sku": {
          "description": "The SKU of the cluster.",
          "type": "object",
          "required": [
            "name",
            "tier"
          ],
          "properties": {
            "name": {
              "description": "SKU name.",
              "type": "string",
              "enum": [
                "Dev(No SLA)_Standard_D11_v2",
                "Dev(No SLA)_Standard_E2a_v4",
                "Standard_D11_v2",
                "Standard_D12_v2",
                "Standard_D13_v2",
                "Standard_D14_v2",
                "Standard_D32d_v4",
                "Standard_D16d_v5",
                "Standard_D32d_v5",
                "Standard_DS13_v2+1TB_PS",
                "Standard_DS13_v2+2TB_PS",
                "Standard_DS14_v2+3TB_PS",
                "Standard_DS14_v2+4TB_PS",
                "Standard_L4s",
                "Standard_L8s",
                "Standard_L16s",
                "Standard_L8s_v2",
                "Standard_L16s_v2",
                "Standard_L8s_v3",
                "Standard_L16s_v3",
                "Standard_L32s_v3",
                "Standard_L8as_v3",
                "Standard_L16as_v3",
                "Standard_L32as_v3",
                "Standard_E64i_v3",
                "Standard_E80ids_v4",
                "Standard_E2a_v4",
                "Standard_E4a_v4",
                "Standard_E8a_v4",
                "Standard_E16a_v4",
                "Standard_E8as_v4+1TB_PS",
                "Standard_E8as_v4+2TB_PS",
                "Standard_E16as_v4+3TB_PS",
                "Standard_E16as_v4+4TB_PS",
                "Standard_E8as_v5+1TB_PS",
                "Standard_E8as_v5+2TB_PS",
                "Standard_E16as_v5+3TB_PS",
                "Standard_E16as_v5+4TB_PS",
                "Standard_E2ads_v5",
                "Standard_E4ads_v5",
                "Standard_E8ads_v5",
                "Standard_E16ads_v5",
                "Standard_EC8as_v5+1TB_PS",
                "Standard_EC8as_v5+2TB_PS",
                "Standard_EC16as_v5+3TB_PS",
                "Standard_EC16as_v5+4TB_PS",
                "Standard_EC8ads_v5",
                "Standard_EC16ads_v5",
                "Standard_E8s_v4+1TB_PS",
                "Standard_E8s_v4+2TB_PS",
                "Standard_E16s_v4+3TB_PS",
                "Standard_E16s_v4+4TB_PS",
                "Standard_E8s_v5+1TB_PS",
                "Standard_E8s_v5+2TB_PS",
                "Standard_E16s_v5+3TB_PS",
                "Standard_E16s_v5+4TB_PS",
                "Standard_E2d_v4",
                "Standard_E4d_v4",
                "Standard_E8d_v4",
                "Standard_E16d_v4",
                "Standard_E2d_v5",
                "Standard_E4d_v5",
                "Standard_E8d_v5",
                "Standard_E16d_v5"
              ],
              "x-ms-enum": {
                "name": "AzureSkuName",
                "modelAsString": true
              }
            },
            "capacity": {
              "description": "The number of instances of the cluster.",
              "type": "integer",
              "format": "int32"
            },
            "tier": {
              "description": "SKU tier.",
              "type": "string",
              "enum": [
                "Basic",
                "Standard"
              ],
              "x-ms-enum": {
                "name": "AzureSkuTier",
                "modelAsString": true
              }
            }
          }
        },
        "systemData": {
          "readOnly": true,
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "zones": {
          "description": "The availability zones of the cluster.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "identity": {
          "description": "The identity of the cluster, if configured.",
          "type": "object",
          "properties": {
            "principalId": {
              "readOnly": true,
              "type": "string",
              "description": "The principal ID of resource identity."
            },
            "tenantId": {
              "readOnly": true,
              "type": "string",
              "description": "The tenant ID of resource."
            },
            "type": {
              "type": "string",
              "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove all identities.",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned"
              ],
              "x-ms-enum": {
                "name": "IdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "principalId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The principal id of user assigned identity."
                  },
                  "clientId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The client id of user assigned identity."
                  }
                }
              },
              "description": "The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
            }
          },
          "required": [
            "type"
          ]
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The cluster properties.",
          "type": "object",
          "properties": {
            "state": {
              "type": "string",
              "readOnly": true,
              "description": "The state of the resource.",
              "enum": [
                "Creating",
                "Unavailable",
                "Running",
                "Deleting",
                "Deleted",
                "Stopping",
                "Stopped",
                "Starting",
                "Updating",
                "Migrated"
              ],
              "x-ms-enum": {
                "name": "State",
                "modelAsString": true
              }
            },
            "provisioningState": {
              "readOnly": true,
              "description": "The provisioned state of the resource.",
              "type": "string",
              "enum": [
                "Running",
                "Creating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Moving",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            },
            "uri": {
              "type": "string",
              "readOnly": true,
              "description": "The cluster URI."
            },
            "dataIngestionUri": {
              "type": "string",
              "readOnly": true,
              "description": "The cluster data ingestion URI."
            },
            "stateReason": {
              "type": "string",
              "readOnly": true,
              "description": "The reason for the cluster's current state."
            },
            "trustedExternalTenants": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "GUID representing an external tenant."
                  }
                },
                "description": "Represents a tenant ID that is trusted by the cluster."
              },
              "description": "The cluster's external tenants."
            },
            "optimizedAutoscale": {
              "type": "object",
              "description": "Optimized auto scale definition.",
              "required": [
                "version",
                "isEnabled",
                "minimum",
                "maximum"
              ],
              "properties": {
                "version": {
                  "description": "The version of the template defined, for instance 1.",
                  "type": "integer",
                  "format": "int32"
                },
                "isEnabled": {
                  "description": "A boolean value that indicate if the optimized autoscale feature is enabled or not.",
                  "type": "boolean"
                },
                "minimum": {
                  "description": "Minimum allowed instances count.",
                  "type": "integer",
                  "format": "int32"
                },
                "maximum": {
                  "description": "Maximum allowed instances count.",
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "enableDiskEncryption": {
              "description": "A boolean value that indicates if the cluster's disks are encrypted.",
              "default": false,
              "type": "boolean"
            },
            "enableStreamingIngest": {
              "description": "A boolean value that indicates if the streaming ingest is enabled.",
              "default": false,
              "type": "boolean"
            },
            "virtualNetworkConfiguration": {
              "type": "object",
              "description": "Virtual network definition.",
              "required": [
                "subnetId",
                "enginePublicIpId",
                "dataManagementPublicIpId"
              ],
              "properties": {
                "subnetId": {
                  "description": "The subnet resource id.",
                  "type": "string",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "enginePublicIpId": {
                  "description": "Engine service's public IP address resource id.",
                  "type": "string",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "dataManagementPublicIpId": {
                  "description": "Data management's service public IP address resource id.",
                  "type": "string",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "state": {
                  "type": "string",
                  "description": "When enabled, the cluster is deployed into the configured subnet, when disabled it will be removed from the subnet.",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "VnetState",
                    "modelAsString": true
                  },
                  "default": "Enabled"
                }
              }
            },
            "keyVaultProperties": {
              "type": "object",
              "description": "KeyVault properties for the cluster encryption.",
              "properties": {
                "keyName": {
                  "type": "string",
                  "description": "The name of the key vault key.",
                  "x-ms-client-name": "KeyName"
                },
                "keyVersion": {
                  "type": "string",
                  "description": "The version of the key vault key.",
                  "x-ms-client-name": "KeyVersion"
                },
                "keyVaultUri": {
                  "type": "string",
                  "description": "The Uri of the key vault.",
                  "x-ms-client-name": "KeyVaultUri"
                },
                "userIdentity": {
                  "type": "string",
                  "description": "The user assigned identity (ARM resource id) that has access to the key.",
                  "x-ms-client-name": "UserIdentity"
                }
              }
            },
            "enablePurge": {
              "description": "A boolean value that indicates if the purge operations are enabled.",
              "default": false,
              "type": "boolean"
            },
            "languageExtensions": {
              "type": "object",
              "description": "List of the cluster's language extensions.",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "The language extension object.",
                    "properties": {
                      "languageExtensionName": {
                        "description": "The language extension name.",
                        "type": "string",
                        "enum": [
                          "PYTHON",
                          "R"
                        ],
                        "x-ms-enum": {
                          "name": "languageExtensionName",
                          "modelAsString": true
                        }
                      },
                      "languageExtensionImageName": {
                        "description": "The language extension image name.",
                        "type": "string",
                        "enum": [
                          "R",
                          "Python3_6_5",
                          "Python3_10_8",
                          "Python3_10_8_DL",
                          "PythonCustomImage",
                          "Python3_11_7",
                          "Python3_11_7_DL"
                        ],
                        "x-ms-enum": {
                          "name": "languageExtensionImageName",
                          "modelAsString": true
                        }
                      },
                      "languageExtensionCustomImageName": {
                        "description": "The language extension custom image name.",
                        "type": "string"
                      }
                    }
                  },
                  "description": "The list of language extensions."
                }
              }
            },
            "enableDoubleEncryption": {
              "description": "A boolean value that indicates if double encryption is enabled.",
              "default": false,
              "type": "boolean"
            },
            "publicNetworkAccess": {
              "type": "string",
              "description": "Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true
              },
              "default": "Enabled"
            },
            "allowedIpRangeList": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The list of ips in the format of CIDR allowed to connect to the cluster."
            },
            "engineType": {
              "type": "string",
              "description": "The engine type",
              "enum": [
                "V2",
                "V3"
              ],
              "x-ms-enum": {
                "name": "EngineType",
                "modelAsString": true
              },
              "default": "V3"
            },
            "acceptedAudiences": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "GUID or valid URL representing an accepted audience."
                  }
                },
                "description": "Represents an accepted audience trusted by the cluster."
              },
              "description": "The cluster's accepted audiences."
            },
            "enableAutoStop": {
              "description": "A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days).",
              "default": true,
              "type": "boolean"
            },
            "restrictOutboundNetworkAccess": {
              "description": "Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ClusterNetworkAccessFlag",
                "modelAsString": true
              },
              "default": "Disabled"
            },
            "allowedFqdnList": {
              "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.",
              "type": "array",
              "items": {
                "description": "FQDN to be allowed for egress. Example: my-storageaccount.blob.core.windows.net",
                "type": "string"
              }
            },
            "calloutPolicies": {
              "description": "List of callout policies for egress from Cluster.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "calloutUriRegex": {
                    "type": "string",
                    "description": "Regular expression or FQDN pattern for the callout URI."
                  },
                  "calloutType": {
                    "type": "string",
                    "enum": [
                      "kusto",
                      "sql",
                      "cosmosdb",
                      "external_data",
                      "azure_digital_twins",
                      "sandbox_artifacts",
                      "webapi",
                      "mysql",
                      "postgresql",
                      "genevametrics",
                      "azure_openai"
                    ],
                    "x-ms-enum": {
                      "name": "calloutType",
                      "modelAsString": true
                    },
                    "description": "Type of the callout service, specifying the kind of external resource or service being accessed."
                  },
                  "outboundAccess": {
                    "type": "string",
                    "enum": [
                      "Allow",
                      "Deny"
                    ],
                    "x-ms-enum": {
                      "name": "outboundAccess",
                      "modelAsString": true
                    },
                    "description": "Indicates whether outbound access is permitted for the specified URI pattern."
                  },
                  "calloutId": {
                    "type": "string",
                    "description": "Unique identifier for the callout configuration.",
                    "readOnly": true
                  }
                },
                "description": "Configuration for external callout policies, including URI patterns, access types, and service types."
              }
            },
            "publicIPType": {
              "description": "Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6)",
              "enum": [
                "IPv4",
                "DualStack"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "publicIPType",
                "modelAsString": true
              },
              "default": "IPv4"
            },
            "virtualClusterGraduationProperties": {
              "description": "Virtual Cluster graduation properties",
              "type": "string",
              "x-ms-mutability": [
                "create"
              ],
              "x-ms-secret": true
            },
            "privateEndpointConnections": {
              "type": "array",
              "items": {
                "description": "A private endpoint connection",
                "type": "object",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                  },
                  "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The name of the resource"
                  },
                  "type": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                  },
                  "properties": {
                    "description": "Resource properties.",
                    "x-ms-client-flatten": true,
                    "required": [
                      "privateLinkServiceConnectionState"
                    ],
                    "type": "object",
                    "properties": {
                      "privateEndpoint": {
                        "description": "Private endpoint which the connection belongs to.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Resource id of the private endpoint.",
                            "readOnly": true
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "Connection State of the Private Endpoint Connection.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "description": "The private link service connection status."
                          },
                          "description": {
                            "type": "string",
                            "description": "The private link service connection description."
                          },
                          "actionsRequired": {
                            "type": "string",
                            "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                            "readOnly": true
                          }
                        }
                      },
                      "groupId": {
                        "type": "string",
                        "description": "Group id of the private endpoint.",
                        "readOnly": true
                      },
                      "provisioningState": {
                        "type": "string",
                        "description": "Provisioning state of the private endpoint.",
                        "readOnly": true
                      }
                    }
                  },
                  "systemData": {
                    "readOnly": true,
                    "description": "Metadata pertaining to creation and last modification of the resource.",
                    "type": "object",
                    "properties": {
                      "createdBy": {
                        "type": "string",
                        "description": "The identity that created the resource."
                      },
                      "createdByType": {
                        "type": "string",
                        "description": "The type of identity that created the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource creation (UTC)."
                      },
                      "lastModifiedBy": {
                        "type": "string",
                        "description": "The identity that last modified the resource."
                      },
                      "lastModifiedByType": {
                        "type": "string",
                        "description": "The type of identity that last modified the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "lastModifiedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource last modification (UTC)"
                      }
                    }
                  }
                }
              },
              "readOnly": true,
              "description": "A list of private endpoint connections."
            },
            "migrationCluster": {
              "description": "Properties of the peer cluster involved in a migration to/from this cluster.",
              "type": "object",
              "readOnly": true,
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource ID of the cluster.",
                  "readOnly": true
                },
                "uri": {
                  "type": "string",
                  "description": "The public URL of the cluster.",
                  "readOnly": true
                },
                "dataIngestionUri": {
                  "type": "string",
                  "description": "The public data ingestion URL of the cluster.",
                  "readOnly": true
                },
                "role": {
                  "type": "string",
                  "description": "The role of the cluster in the migration process.",
                  "readOnly": true,
                  "enum": [
                    "Source",
                    "Destination"
                  ],
                  "x-ms-enum": {
                    "name": "MigrationClusterRole",
                    "modelAsString": true
                  }
                }
              }
            },
            "zoneStatus": {
              "type": "string",
              "readOnly": true,
              "description": "Indicates whether the cluster is zonal or non-zonal.",
              "enum": [
                "NonZonal",
                "ZonalInconsistency",
                "Zonal"
              ],
              "x-ms-enum": {
                "name": "ZoneStatus",
                "modelAsString": true
              }
            }
          }
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "description": "Class representing a Kusto cluster."
    },
    "ClusterUpdate": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "sku": {
          "description": "The SKU of the cluster.",
          "type": "object",
          "required": [
            "name",
            "tier"
          ],
          "properties": {
            "name": {
              "description": "SKU name.",
              "type": "string",
              "enum": [
                "Dev(No SLA)_Standard_D11_v2",
                "Dev(No SLA)_Standard_E2a_v4",
                "Standard_D11_v2",
                "Standard_D12_v2",
                "Standard_D13_v2",
                "Standard_D14_v2",
                "Standard_D32d_v4",
                "Standard_D16d_v5",
                "Standard_D32d_v5",
                "Standard_DS13_v2+1TB_PS",
                "Standard_DS13_v2+2TB_PS",
                "Standard_DS14_v2+3TB_PS",
                "Standard_DS14_v2+4TB_PS",
                "Standard_L4s",
                "Standard_L8s",
                "Standard_L16s",
                "Standard_L8s_v2",
                "Standard_L16s_v2",
                "Standard_L8s_v3",
                "Standard_L16s_v3",
                "Standard_L32s_v3",
                "Standard_L8as_v3",
                "Standard_L16as_v3",
                "Standard_L32as_v3",
                "Standard_E64i_v3",
                "Standard_E80ids_v4",
                "Standard_E2a_v4",
                "Standard_E4a_v4",
                "Standard_E8a_v4",
                "Standard_E16a_v4",
                "Standard_E8as_v4+1TB_PS",
                "Standard_E8as_v4+2TB_PS",
                "Standard_E16as_v4+3TB_PS",
                "Standard_E16as_v4+4TB_PS",
                "Standard_E8as_v5+1TB_PS",
                "Standard_E8as_v5+2TB_PS",
                "Standard_E16as_v5+3TB_PS",
                "Standard_E16as_v5+4TB_PS",
                "Standard_E2ads_v5",
                "Standard_E4ads_v5",
                "Standard_E8ads_v5",
                "Standard_E16ads_v5",
                "Standard_EC8as_v5+1TB_PS",
                "Standard_EC8as_v5+2TB_PS",
                "Standard_EC16as_v5+3TB_PS",
                "Standard_EC16as_v5+4TB_PS",
                "Standard_EC8ads_v5",
                "Standard_EC16ads_v5",
                "Standard_E8s_v4+1TB_PS",
                "Standard_E8s_v4+2TB_PS",
                "Standard_E16s_v4+3TB_PS",
                "Standard_E16s_v4+4TB_PS",
                "Standard_E8s_v5+1TB_PS",
                "Standard_E8s_v5+2TB_PS",
                "Standard_E16s_v5+3TB_PS",
                "Standard_E16s_v5+4TB_PS",
                "Standard_E2d_v4",
                "Standard_E4d_v4",
                "Standard_E8d_v4",
                "Standard_E16d_v4",
                "Standard_E2d_v5",
                "Standard_E4d_v5",
                "Standard_E8d_v5",
                "Standard_E16d_v5"
              ],
              "x-ms-enum": {
                "name": "AzureSkuName",
                "modelAsString": true
              }
            },
            "capacity": {
              "description": "The number of instances of the cluster.",
              "type": "integer",
              "format": "int32"
            },
            "tier": {
              "description": "SKU tier.",
              "type": "string",
              "enum": [
                "Basic",
                "Standard"
              ],
              "x-ms-enum": {
                "name": "AzureSkuTier",
                "modelAsString": true
              }
            }
          }
        },
        "zones": {
          "description": "The availability zones of the cluster.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "identity": {
          "description": "The identity of the cluster, if configured.",
          "type": "object",
          "properties": {
            "principalId": {
              "readOnly": true,
              "type": "string",
              "description": "The principal ID of resource identity."
            },
            "tenantId": {
              "readOnly": true,
              "type": "string",
              "description": "The tenant ID of resource."
            },
            "type": {
              "type": "string",
              "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove all identities.",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned"
              ],
              "x-ms-enum": {
                "name": "IdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "principalId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The principal id of user assigned identity."
                  },
                  "clientId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The client id of user assigned identity."
                  }
                }
              },
              "description": "The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
            }
          },
          "required": [
            "type"
          ]
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The cluster properties.",
          "type": "object",
          "properties": {
            "state": {
              "type": "string",
              "readOnly": true,
              "description": "The state of the resource.",
              "enum": [
                "Creating",
                "Unavailable",
                "Running",
                "Deleting",
                "Deleted",
                "Stopping",
                "Stopped",
                "Starting",
                "Updating",
                "Migrated"
              ],
              "x-ms-enum": {
                "name": "State",
                "modelAsString": true
              }
            },
            "provisioningState": {
              "readOnly": true,
              "description": "The provisioned state of the resource.",
              "type": "string",
              "enum": [
                "Running",
                "Creating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Moving",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            },
            "uri": {
              "type": "string",
              "readOnly": true,
              "description": "The cluster URI."
            },
            "dataIngestionUri": {
              "type": "string",
              "readOnly": true,
              "description": "The cluster data ingestion URI."
            },
            "stateReason": {
              "type": "string",
              "readOnly": true,
              "description": "The reason for the cluster's current state."
            },
            "trustedExternalTenants": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "GUID representing an external tenant."
                  }
                },
                "description": "Represents a tenant ID that is trusted by the cluster."
              },
              "description": "The cluster's external tenants."
            },
            "optimizedAutoscale": {
              "type": "object",
              "description": "Optimized auto scale definition.",
              "required": [
                "version",
                "isEnabled",
                "minimum",
                "maximum"
              ],
              "properties": {
                "version": {
                  "description": "The version of the template defined, for instance 1.",
                  "type": "integer",
                  "format": "int32"
                },
                "isEnabled": {
                  "description": "A boolean value that indicate if the optimized autoscale feature is enabled or not.",
                  "type": "boolean"
                },
                "minimum": {
                  "description": "Minimum allowed instances count.",
                  "type": "integer",
                  "format": "int32"
                },
                "maximum": {
                  "description": "Maximum allowed instances count.",
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "enableDiskEncryption": {
              "description": "A boolean value that indicates if the cluster's disks are encrypted.",
              "default": false,
              "type": "boolean"
            },
            "enableStreamingIngest": {
              "description": "A boolean value that indicates if the streaming ingest is enabled.",
              "default": false,
              "type": "boolean"
            },
            "virtualNetworkConfiguration": {
              "type": "object",
              "description": "Virtual network definition.",
              "required": [
                "subnetId",
                "enginePublicIpId",
                "dataManagementPublicIpId"
              ],
              "properties": {
                "subnetId": {
                  "description": "The subnet resource id.",
                  "type": "string",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "enginePublicIpId": {
                  "description": "Engine service's public IP address resource id.",
                  "type": "string",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "dataManagementPublicIpId": {
                  "description": "Data management's service public IP address resource id.",
                  "type": "string",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "state": {
                  "type": "string",
                  "description": "When enabled, the cluster is deployed into the configured subnet, when disabled it will be removed from the subnet.",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "VnetState",
                    "modelAsString": true
                  },
                  "default": "Enabled"
                }
              }
            },
            "keyVaultProperties": {
              "type": "object",
              "description": "KeyVault properties for the cluster encryption.",
              "properties": {
                "keyName": {
                  "type": "string",
                  "description": "The name of the key vault key.",
                  "x-ms-client-name": "KeyName"
                },
                "keyVersion": {
                  "type": "string",
                  "description": "The version of the key vault key.",
                  "x-ms-client-name": "KeyVersion"
                },
                "keyVaultUri": {
                  "type": "string",
                  "description": "The Uri of the key vault.",
                  "x-ms-client-name": "KeyVaultUri"
                },
                "userIdentity": {
                  "type": "string",
                  "description": "The user assigned identity (ARM resource id) that has access to the key.",
                  "x-ms-client-name": "UserIdentity"
                }
              }
            },
            "enablePurge": {
              "description": "A boolean value that indicates if the purge operations are enabled.",
              "default": false,
              "type": "boolean"
            },
            "languageExtensions": {
              "type": "object",
              "description": "List of the cluster's language extensions.",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "The language extension object.",
                    "properties": {
                      "languageExtensionName": {
                        "description": "The language extension name.",
                        "type": "string",
                        "enum": [
                          "PYTHON",
                          "R"
                        ],
                        "x-ms-enum": {
                          "name": "languageExtensionName",
                          "modelAsString": true
                        }
                      },
                      "languageExtensionImageName": {
                        "description": "The language extension image name.",
                        "type": "string",
                        "enum": [
                          "R",
                          "Python3_6_5",
                          "Python3_10_8",
                          "Python3_10_8_DL",
                          "PythonCustomImage",
                          "Python3_11_7",
                          "Python3_11_7_DL"
                        ],
                        "x-ms-enum": {
                          "name": "languageExtensionImageName",
                          "modelAsString": true
                        }
                      },
                      "languageExtensionCustomImageName": {
                        "description": "The language extension custom image name.",
                        "type": "string"
                      }
                    }
                  },
                  "description": "The list of language extensions."
                }
              }
            },
            "enableDoubleEncryption": {
              "description": "A boolean value that indicates if double encryption is enabled.",
              "default": false,
              "type": "boolean"
            },
            "publicNetworkAccess": {
              "type": "string",
              "description": "Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true
              },
              "default": "Enabled"
            },
            "allowedIpRangeList": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The list of ips in the format of CIDR allowed to connect to the cluster."
            },
            "engineType": {
              "type": "string",
              "description": "The engine type",
              "enum": [
                "V2",
                "V3"
              ],
              "x-ms-enum": {
                "name": "EngineType",
                "modelAsString": true
              },
              "default": "V3"
            },
            "acceptedAudiences": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "GUID or valid URL representing an accepted audience."
                  }
                },
                "description": "Represents an accepted audience trusted by the cluster."
              },
              "description": "The cluster's accepted audiences."
            },
            "enableAutoStop": {
              "description": "A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days).",
              "default": true,
              "type": "boolean"
            },
            "restrictOutboundNetworkAccess": {
              "description": "Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ClusterNetworkAccessFlag",
                "modelAsString": true
              },
              "default": "Disabled"
            },
            "allowedFqdnList": {
              "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.",
              "type": "array",
              "items": {
                "description": "FQDN to be allowed for egress. Example: my-storageaccount.blob.core.windows.net",
                "type": "string"
              }
            },
            "calloutPolicies": {
              "description": "List of callout policies for egress from Cluster.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "calloutUriRegex": {
                    "type": "string",
                    "description": "Regular expression or FQDN pattern for the callout URI."
                  },
                  "calloutType": {
                    "type": "string",
                    "enum": [
                      "kusto",
                      "sql",
                      "cosmosdb",
                      "external_data",
                      "azure_digital_twins",
                      "sandbox_artifacts",
                      "webapi",
                      "mysql",
                      "postgresql",
                      "genevametrics",
                      "azure_openai"
                    ],
                    "x-ms-enum": {
                      "name": "calloutType",
                      "modelAsString": true
                    },
                    "description": "Type of the callout service, specifying the kind of external resource or service being accessed."
                  },
                  "outboundAccess": {
                    "type": "string",
                    "enum": [
                      "Allow",
                      "Deny"
                    ],
                    "x-ms-enum": {
                      "name": "outboundAccess",
                      "modelAsString": true
                    },
                    "description": "Indicates whether outbound access is permitted for the specified URI pattern."
                  },
                  "calloutId": {
                    "type": "string",
                    "description": "Unique identifier for the callout configuration.",
                    "readOnly": true
                  }
                },
                "description": "Configuration for external callout policies, including URI patterns, access types, and service types."
              }
            },
            "publicIPType": {
              "description": "Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6)",
              "enum": [
                "IPv4",
                "DualStack"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "publicIPType",
                "modelAsString": true
              },
              "default": "IPv4"
            },
            "virtualClusterGraduationProperties": {
              "description": "Virtual Cluster graduation properties",
              "type": "string",
              "x-ms-mutability": [
                "create"
              ],
              "x-ms-secret": true
            },
            "privateEndpointConnections": {
              "type": "array",
              "items": {
                "description": "A private endpoint connection",
                "type": "object",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                  },
                  "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The name of the resource"
                  },
                  "type": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                  },
                  "properties": {
                    "description": "Resource properties.",
                    "x-ms-client-flatten": true,
                    "required": [
                      "privateLinkServiceConnectionState"
                    ],
                    "type": "object",
                    "properties": {
                      "privateEndpoint": {
                        "description": "Private endpoint which the connection belongs to.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Resource id of the private endpoint.",
                            "readOnly": true
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "Connection State of the Private Endpoint Connection.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "description": "The private link service connection status."
                          },
                          "description": {
                            "type": "string",
                            "description": "The private link service connection description."
                          },
                          "actionsRequired": {
                            "type": "string",
                            "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                            "readOnly": true
                          }
                        }
                      },
                      "groupId": {
                        "type": "string",
                        "description": "Group id of the private endpoint.",
                        "readOnly": true
                      },
                      "provisioningState": {
                        "type": "string",
                        "description": "Provisioning state of the private endpoint.",
                        "readOnly": true
                      }
                    }
                  },
                  "systemData": {
                    "readOnly": true,
                    "description": "Metadata pertaining to creation and last modification of the resource.",
                    "type": "object",
                    "properties": {
                      "createdBy": {
                        "type": "string",
                        "description": "The identity that created the resource."
                      },
                      "createdByType": {
                        "type": "string",
                        "description": "The type of identity that created the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource creation (UTC)."
                      },
                      "lastModifiedBy": {
                        "type": "string",
                        "description": "The identity that last modified the resource."
                      },
                      "lastModifiedByType": {
                        "type": "string",
                        "description": "The type of identity that last modified the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "lastModifiedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource last modification (UTC)"
                      }
                    }
                  }
                }
              },
              "readOnly": true,
              "description": "A list of private endpoint connections."
            },
            "migrationCluster": {
              "description": "Properties of the peer cluster involved in a migration to/from this cluster.",
              "type": "object",
              "readOnly": true,
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The resource ID of the cluster.",
                  "readOnly": true
                },
                "uri": {
                  "type": "string",
                  "description": "The public URL of the cluster.",
                  "readOnly": true
                },
                "dataIngestionUri": {
                  "type": "string",
                  "description": "The public data ingestion URL of the cluster.",
                  "readOnly": true
                },
                "role": {
                  "type": "string",
                  "description": "The role of the cluster in the migration process.",
                  "readOnly": true,
                  "enum": [
                    "Source",
                    "Destination"
                  ],
                  "x-ms-enum": {
                    "name": "MigrationClusterRole",
                    "modelAsString": true
                  }
                }
              }
            },
            "zoneStatus": {
              "type": "string",
              "readOnly": true,
              "description": "Indicates whether the cluster is zonal or non-zonal.",
              "enum": [
                "NonZonal",
                "ZonalInconsistency",
                "Zonal"
              ],
              "x-ms-enum": {
                "name": "ZoneStatus",
                "modelAsString": true
              }
            }
          }
        }
      },
      "description": "Class representing an update to a Kusto cluster."
    },
    "AttachedDatabaseConfigurationListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "location": {
                "type": "string",
                "description": "Resource location."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The properties of the attached database configuration.",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "readOnly": true,
                    "description": "The provisioned state of the resource.",
                    "type": "string",
                    "enum": [
                      "Running",
                      "Creating",
                      "Deleting",
                      "Succeeded",
                      "Failed",
                      "Moving",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "databaseName": {
                    "type": "string",
                    "description": "The name of the database which you would like to attach, use * if you want to follow all current and future databases."
                  },
                  "clusterResourceId": {
                    "type": "string",
                    "description": "The resource id of the cluster where the databases you would like to attach reside."
                  },
                  "attachedDatabaseNames": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true,
                    "description": "The list of databases from the clusterResourceId which are currently attached to the cluster."
                  },
                  "defaultPrincipalsModificationKind": {
                    "type": "string",
                    "enum": [
                      "Union",
                      "Replace",
                      "None"
                    ],
                    "x-ms-enum": {
                      "name": "DefaultPrincipalsModificationKind",
                      "modelAsString": true
                    },
                    "description": "The default principals modification kind"
                  },
                  "tableLevelSharingProperties": {
                    "type": "object",
                    "description": "Table level sharing specifications",
                    "properties": {
                      "tablesToInclude": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of tables to include in the follower database"
                      },
                      "tablesToExclude": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of tables to exclude from the follower database"
                      },
                      "externalTablesToInclude": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of external tables to include in the follower database"
                      },
                      "externalTablesToExclude": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of external tables to exclude from the follower database"
                      },
                      "materializedViewsToInclude": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of materialized views to include in the follower database"
                      },
                      "materializedViewsToExclude": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of materialized views to exclude from the follower database"
                      },
                      "functionsToInclude": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of functions to include in the follower database"
                      },
                      "functionsToExclude": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of functions to exclude from the follower database"
                      }
                    }
                  },
                  "databaseNameOverride": {
                    "type": "string",
                    "description": "Overrides the original database name. Relevant only when attaching to a specific database."
                  },
                  "databaseNamePrefix": {
                    "type": "string",
                    "description": "Adds a prefix to the attached databases name. When following an entire cluster, that prefix would be added to all of the databases original names from leader cluster."
                  }
                },
                "required": [
                  "databaseName",
                  "clusterResourceId",
                  "defaultPrincipalsModificationKind"
                ]
              }
            },
            "description": "Class representing an attached database configuration."
          },
          "description": "The list of attached database configurations."
        }
      },
      "description": "The list attached database configurations operation response."
    },
    "AttachedDatabaseConfiguration": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The properties of the attached database configuration.",
          "type": "object",
          "properties": {
            "provisioningState": {
              "readOnly": true,
              "description": "The provisioned state of the resource.",
              "type": "string",
              "enum": [
                "Running",
                "Creating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Moving",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            },
            "databaseName": {
              "type": "string",
              "description": "The name of the database which you would like to attach, use * if you want to follow all current and future databases."
            },
            "clusterResourceId": {
              "type": "string",
              "description": "The resource id of the cluster where the databases you would like to attach reside."
            },
            "attachedDatabaseNames": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true,
              "description": "The list of databases from the clusterResourceId which are currently attached to the cluster."
            },
            "defaultPrincipalsModificationKind": {
              "type": "string",
              "enum": [
                "Union",
                "Replace",
                "None"
              ],
              "x-ms-enum": {
                "name": "DefaultPrincipalsModificationKind",
                "modelAsString": true
              },
              "description": "The default principals modification kind"
            },
            "tableLevelSharingProperties": {
              "type": "object",
              "description": "Table level sharing specifications",
              "properties": {
                "tablesToInclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of tables to include in the follower database"
                },
                "tablesToExclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of tables to exclude from the follower database"
                },
                "externalTablesToInclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of external tables to include in the follower database"
                },
                "externalTablesToExclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of external tables to exclude from the follower database"
                },
                "materializedViewsToInclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of materialized views to include in the follower database"
                },
                "materializedViewsToExclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of materialized views to exclude from the follower database"
                },
                "functionsToInclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of functions to include in the follower database"
                },
                "functionsToExclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of functions to exclude from the follower database"
                }
              }
            },
            "databaseNameOverride": {
              "type": "string",
              "description": "Overrides the original database name. Relevant only when attaching to a specific database."
            },
            "databaseNamePrefix": {
              "type": "string",
              "description": "Adds a prefix to the attached databases name. When following an entire cluster, that prefix would be added to all of the databases original names from leader cluster."
            }
          },
          "required": [
            "databaseName",
            "clusterResourceId",
            "defaultPrincipalsModificationKind"
          ]
        }
      },
      "description": "Class representing an attached database configuration."
    },
    "Database": {
      "type": "object",
      "required": [
        "kind"
      ],
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "kind": {
          "description": "Kind of the database",
          "enum": [
            "ReadWrite",
            "ReadOnlyFollowing"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "Kind",
            "modelAsString": true
          }
        }
      },
      "description": "Class representing a Kusto database.",
      "discriminator": "kind"
    },
    "ReadWriteDatabase": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The database properties.",
          "type": "object",
          "properties": {
            "provisioningState": {
              "readOnly": true,
              "description": "The provisioned state of the resource.",
              "type": "string",
              "enum": [
                "Running",
                "Creating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Moving",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            },
            "softDeletePeriod": {
              "type": "string",
              "format": "duration",
              "description": "The time the data should be kept before it stops being accessible to queries in TimeSpan."
            },
            "hotCachePeriod": {
              "type": "string",
              "format": "duration",
              "description": "The time the data should be kept in cache for fast queries in TimeSpan."
            },
            "statistics": {
              "readOnly": true,
              "description": "The statistics of the database.",
              "type": "object",
              "properties": {
                "size": {
                  "type": "number",
                  "description": "The database size - the total size of compressed data and index in bytes."
                }
              }
            },
            "isFollowed": {
              "type": "boolean",
              "readOnly": true,
              "description": "Indicates whether the database is followed."
            },
            "keyVaultProperties": {
              "type": "object",
              "description": "KeyVault properties for the database encryption.",
              "properties": {
                "keyName": {
                  "type": "string",
                  "description": "The name of the key vault key.",
                  "x-ms-client-name": "KeyName"
                },
                "keyVersion": {
                  "type": "string",
                  "description": "The version of the key vault key.",
                  "x-ms-client-name": "KeyVersion"
                },
                "keyVaultUri": {
                  "type": "string",
                  "description": "The Uri of the key vault.",
                  "x-ms-client-name": "KeyVaultUri"
                },
                "userIdentity": {
                  "type": "string",
                  "description": "The user assigned identity (ARM resource id) that has access to the key.",
                  "x-ms-client-name": "UserIdentity"
                }
              }
            },
            "suspensionDetails": {
              "type": "object",
              "readOnly": true,
              "description": "The database suspension details. If the database is suspended, this object contains information related to the database's suspension state.",
              "properties": {
                "suspensionStartDate": {
                  "description": "The starting date and time of the suspension state.",
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "required": [
            "kind"
          ],
          "properties": {
            "id": {
              "readOnly": true,
              "type": "string",
              "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
            },
            "name": {
              "readOnly": true,
              "type": "string",
              "description": "The name of the resource"
            },
            "type": {
              "readOnly": true,
              "type": "string",
              "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
            },
            "location": {
              "type": "string",
              "description": "Resource location."
            },
            "kind": {
              "description": "Kind of the database",
              "enum": [
                "ReadWrite",
                "ReadOnlyFollowing"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "Kind",
                "modelAsString": true
              }
            }
          },
          "description": "Class representing a Kusto database.",
          "discriminator": "kind"
        }
      ],
      "description": "Class representing a read write database.",
      "x-ms-discriminator-value": "ReadWrite"
    },
    "ReadOnlyFollowingDatabase": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The database properties.",
          "type": "object",
          "properties": {
            "provisioningState": {
              "readOnly": true,
              "description": "The provisioned state of the resource.",
              "type": "string",
              "enum": [
                "Running",
                "Creating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Moving",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            },
            "softDeletePeriod": {
              "type": "string",
              "readOnly": true,
              "format": "duration",
              "description": "The time the data should be kept before it stops being accessible to queries in TimeSpan."
            },
            "hotCachePeriod": {
              "type": "string",
              "format": "duration",
              "description": "The time the data should be kept in cache for fast queries in TimeSpan."
            },
            "statistics": {
              "readOnly": true,
              "description": "The statistics of the database.",
              "type": "object",
              "properties": {
                "size": {
                  "type": "number",
                  "description": "The database size - the total size of compressed data and index in bytes."
                }
              }
            },
            "leaderClusterResourceId": {
              "type": "string",
              "readOnly": true,
              "description": "The name of the leader cluster"
            },
            "attachedDatabaseConfigurationName": {
              "type": "string",
              "readOnly": true,
              "description": "The name of the attached database configuration cluster"
            },
            "principalsModificationKind": {
              "type": "string",
              "readOnly": true,
              "enum": [
                "Union",
                "Replace",
                "None"
              ],
              "x-ms-enum": {
                "name": "PrincipalsModificationKind",
                "modelAsString": true
              },
              "description": "The principals modification kind of the database"
            },
            "tableLevelSharingProperties": {
              "type": "object",
              "readOnly": true,
              "description": "Table level sharing specifications",
              "properties": {
                "tablesToInclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of tables to include in the follower database"
                },
                "tablesToExclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of tables to exclude from the follower database"
                },
                "externalTablesToInclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of external tables to include in the follower database"
                },
                "externalTablesToExclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of external tables to exclude from the follower database"
                },
                "materializedViewsToInclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of materialized views to include in the follower database"
                },
                "materializedViewsToExclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of materialized views to exclude from the follower database"
                },
                "functionsToInclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of functions to include in the follower database"
                },
                "functionsToExclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of functions to exclude from the follower database"
                }
              }
            },
            "originalDatabaseName": {
              "type": "string",
              "readOnly": true,
              "description": "The original database name, before databaseNameOverride or databaseNamePrefix where applied."
            },
            "databaseShareOrigin": {
              "type": "string",
              "readOnly": true,
              "enum": [
                "Direct",
                "DataShare",
                "Other"
              ],
              "x-ms-enum": {
                "name": "DatabaseShareOrigin",
                "modelAsString": true
              },
              "description": "The origin of the following setup."
            },
            "suspensionDetails": {
              "type": "object",
              "readOnly": true,
              "description": "The database suspension details. If the database is suspended, this object contains information related to the database's suspension state.",
              "properties": {
                "suspensionStartDate": {
                  "description": "The starting date and time of the suspension state.",
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "required": [
            "kind"
          ],
          "properties": {
            "id": {
              "readOnly": true,
              "type": "string",
              "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
            },
            "name": {
              "readOnly": true,
              "type": "string",
              "description": "The name of the resource"
            },
            "type": {
              "readOnly": true,
              "type": "string",
              "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
            },
            "location": {
              "type": "string",
              "description": "Resource location."
            },
            "kind": {
              "description": "Kind of the database",
              "enum": [
                "ReadWrite",
                "ReadOnlyFollowing"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "Kind",
                "modelAsString": true
              }
            }
          },
          "description": "Class representing a Kusto database.",
          "discriminator": "kind"
        }
      ],
      "description": "Class representing a read only following database.",
      "x-ms-discriminator-value": "ReadOnlyFollowing"
    },
    "DatabasePrincipal": {
      "type": "object",
      "required": [
        "name",
        "role",
        "type"
      ],
      "properties": {
        "role": {
          "description": "Database principal role.",
          "type": "string",
          "enum": [
            "Admin",
            "Ingestor",
            "Monitor",
            "User",
            "UnrestrictedViewer",
            "Viewer"
          ],
          "x-ms-enum": {
            "name": "DatabasePrincipalRole",
            "modelAsString": true
          }
        },
        "name": {
          "description": "Database principal name.",
          "type": "string"
        },
        "type": {
          "description": "Database principal type.",
          "type": "string",
          "enum": [
            "App",
            "Group",
            "User"
          ],
          "x-ms-enum": {
            "name": "DatabasePrincipalType",
            "modelAsString": true
          }
        },
        "fqn": {
          "description": "Database principal fully qualified name.",
          "type": "string"
        },
        "email": {
          "description": "Database principal email if exists.",
          "type": "string"
        },
        "appId": {
          "description": "Application id - relevant only for application principal type.",
          "type": "string"
        },
        "tenantName": {
          "type": "string",
          "readOnly": true,
          "description": "The tenant name of the principal"
        }
      },
      "description": "A class representing database principal entity."
    },
    "DatabasePrincipalProperties": {
      "type": "object",
      "required": [
        "principalId",
        "role",
        "principalType"
      ],
      "properties": {
        "principalId": {
          "description": "The principal ID assigned to the database principal. It can be a user email, application ID, or security group name.",
          "type": "string"
        },
        "role": {
          "description": "Database principal role.",
          "type": "string",
          "enum": [
            "Admin",
            "Ingestor",
            "Monitor",
            "User",
            "UnrestrictedViewer",
            "Viewer"
          ],
          "x-ms-enum": {
            "name": "DatabasePrincipalRole",
            "modelAsString": true
          }
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant id of the principal"
        },
        "principalType": {
          "description": "Principal type.",
          "type": "string",
          "enum": [
            "App",
            "Group",
            "User"
          ],
          "x-ms-enum": {
            "name": "PrincipalType",
            "modelAsString": true
          }
        },
        "tenantName": {
          "type": "string",
          "readOnly": true,
          "description": "The tenant name of the principal"
        },
        "principalName": {
          "type": "string",
          "readOnly": true,
          "description": "The principal name"
        },
        "provisioningState": {
          "readOnly": true,
          "description": "The provisioned state of the resource.",
          "type": "string",
          "enum": [
            "Running",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Moving",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "aadObjectId": {
          "type": "string",
          "readOnly": true,
          "description": "The service principal object id in AAD (Azure active directory)"
        }
      },
      "description": "A class representing database principal property."
    },
    "ClusterPrincipalProperties": {
      "type": "object",
      "required": [
        "principalId",
        "role",
        "principalType"
      ],
      "properties": {
        "principalId": {
          "description": "The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name.",
          "type": "string"
        },
        "role": {
          "description": "Cluster principal role.",
          "type": "string",
          "enum": [
            "AllDatabasesAdmin",
            "AllDatabasesViewer",
            "AllDatabasesMonitor"
          ],
          "x-ms-enum": {
            "name": "ClusterPrincipalRole",
            "modelAsString": true
          }
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant id of the principal"
        },
        "principalType": {
          "description": "Principal type.",
          "type": "string",
          "enum": [
            "App",
            "Group",
            "User"
          ],
          "x-ms-enum": {
            "name": "PrincipalType",
            "modelAsString": true
          }
        },
        "tenantName": {
          "type": "string",
          "readOnly": true,
          "description": "The tenant name of the principal"
        },
        "principalName": {
          "type": "string",
          "readOnly": true,
          "description": "The principal name"
        },
        "provisioningState": {
          "readOnly": true,
          "description": "The provisioned state of the resource.",
          "type": "string",
          "enum": [
            "Running",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Moving",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "aadObjectId": {
          "type": "string",
          "readOnly": true,
          "description": "The service principal object id in AAD (Azure active directory)"
        }
      },
      "description": "A class representing cluster principal property."
    },
    "ScriptProperties": {
      "type": "object",
      "properties": {
        "scriptUrl": {
          "description": "The url to the KQL script blob file. Must not be used together with scriptContent property",
          "type": "string"
        },
        "scriptUrlSasToken": {
          "description": "The SaS token that provide read access to the file which contain the script. Must be provided when using scriptUrl property.",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ],
          "x-ms-secret": true
        },
        "scriptContent": {
          "description": "The script content. This property should be used when the script is provide inline and not through file in a SA. Must not be used together with scriptUrl and scriptUrlSasToken properties.",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ],
          "x-ms-secret": true
        },
        "forceUpdateTag": {
          "description": "A unique string. If changed the script will be applied again.",
          "type": "string"
        },
        "continueOnErrors": {
          "description": "Flag that indicates whether to continue if one of the command fails.",
          "type": "boolean",
          "default": false
        },
        "provisioningState": {
          "readOnly": true,
          "description": "The provisioned state of the resource.",
          "type": "string",
          "enum": [
            "Running",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Moving",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "scriptLevel": {
          "type": "string",
          "description": "Differentiates between the type of script commands included - Database or Cluster. The default is Database.",
          "enum": [
            "Database",
            "Cluster"
          ],
          "x-ms-enum": {
            "name": "ScriptLevel",
            "modelAsString": true
          }
        },
        "principalPermissionsAction": {
          "type": "string",
          "description": "Indicates if the permissions for the script caller are kept following completion of the script.",
          "enum": [
            "RetainPermissionOnScriptCompletion",
            "RemovePermissionOnScriptCompletion"
          ],
          "x-ms-enum": {
            "name": "PrincipalPermissionsAction",
            "modelAsString": true
          }
        }
      },
      "description": "A class representing database script property."
    },
    "ManagedPrivateEndpointProperties": {
      "type": "object",
      "required": [
        "privateLinkResourceId",
        "groupId"
      ],
      "properties": {
        "privateLinkResourceId": {
          "description": "The ARM resource ID of the resource for which the managed private endpoint is created.",
          "type": "string"
        },
        "privateLinkResourceRegion": {
          "description": "The region of the resource to which the managed private endpoint is created.",
          "type": "string"
        },
        "groupId": {
          "description": "The groupId in which the managed private endpoint is created.",
          "type": "string"
        },
        "requestMessage": {
          "description": "The user request message.",
          "type": "string"
        },
        "provisioningState": {
          "readOnly": true,
          "description": "The provisioned state of the resource.",
          "type": "string",
          "enum": [
            "Running",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Moving",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        }
      },
      "description": "A class representing the properties of a managed private endpoint object."
    },
    "SandboxCustomImageProperties": {
      "type": "object",
      "required": [
        "language"
      ],
      "properties": {
        "language": {
          "description": "The language name, for example Python.",
          "type": "string",
          "enum": [
            "Python"
          ],
          "x-ms-enum": {
            "name": "language",
            "modelAsString": true
          }
        },
        "languageVersion": {
          "description": "The version of the language. Either this property or baseImageName should be specified.",
          "type": "string"
        },
        "baseImageName": {
          "description": "The base image name on which the custom image is built on top of. It can be one of the LanguageExtensionImageName (e.g.: 'Python3_10_8', 'Python3_10_8_DL') or the name of an existing custom image. Either this property or languageVersion should be specified.",
          "type": "string"
        },
        "requirementsFileContent": {
          "description": "The requirements file content.",
          "type": "string"
        },
        "provisioningState": {
          "readOnly": true,
          "description": "The provisioned state of the resource.",
          "type": "string",
          "enum": [
            "Running",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Moving",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        }
      },
      "description": "A class representing the properties of a sandbox custom image object."
    },
    "DatabasePrincipalAssignment": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The database principal.",
          "type": "object",
          "required": [
            "principalId",
            "role",
            "principalType"
          ],
          "properties": {
            "principalId": {
              "description": "The principal ID assigned to the database principal. It can be a user email, application ID, or security group name.",
              "type": "string"
            },
            "role": {
              "description": "Database principal role.",
              "type": "string",
              "enum": [
                "Admin",
                "Ingestor",
                "Monitor",
                "User",
                "UnrestrictedViewer",
                "Viewer"
              ],
              "x-ms-enum": {
                "name": "DatabasePrincipalRole",
                "modelAsString": true
              }
            },
            "tenantId": {
              "type": "string",
              "description": "The tenant id of the principal"
            },
            "principalType": {
              "description": "Principal type.",
              "type": "string",
              "enum": [
                "App",
                "Group",
                "User"
              ],
              "x-ms-enum": {
                "name": "PrincipalType",
                "modelAsString": true
              }
            },
            "tenantName": {
              "type": "string",
              "readOnly": true,
              "description": "The tenant name of the principal"
            },
            "principalName": {
              "type": "string",
              "readOnly": true,
              "description": "The principal name"
            },
            "provisioningState": {
              "readOnly": true,
              "description": "The provisioned state of the resource.",
              "type": "string",
              "enum": [
                "Running",
                "Creating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Moving",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            },
            "aadObjectId": {
              "type": "string",
              "readOnly": true,
              "description": "The service principal object id in AAD (Azure active directory)"
            }
          }
        }
      },
      "description": "Class representing a database principal assignment."
    },
    "ClusterPrincipalAssignment": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The cluster principal.",
          "type": "object",
          "required": [
            "principalId",
            "role",
            "principalType"
          ],
          "properties": {
            "principalId": {
              "description": "The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name.",
              "type": "string"
            },
            "role": {
              "description": "Cluster principal role.",
              "type": "string",
              "enum": [
                "AllDatabasesAdmin",
                "AllDatabasesViewer",
                "AllDatabasesMonitor"
              ],
              "x-ms-enum": {
                "name": "ClusterPrincipalRole",
                "modelAsString": true
              }
            },
            "tenantId": {
              "type": "string",
              "description": "The tenant id of the principal"
            },
            "principalType": {
              "description": "Principal type.",
              "type": "string",
              "enum": [
                "App",
                "Group",
                "User"
              ],
              "x-ms-enum": {
                "name": "PrincipalType",
                "modelAsString": true
              }
            },
            "tenantName": {
              "type": "string",
              "readOnly": true,
              "description": "The tenant name of the principal"
            },
            "principalName": {
              "type": "string",
              "readOnly": true,
              "description": "The principal name"
            },
            "provisioningState": {
              "readOnly": true,
              "description": "The provisioned state of the resource.",
              "type": "string",
              "enum": [
                "Running",
                "Creating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Moving",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            },
            "aadObjectId": {
              "type": "string",
              "readOnly": true,
              "description": "The service principal object id in AAD (Azure active directory)"
            }
          }
        }
      },
      "description": "Class representing a cluster principal assignment."
    },
    "ScriptListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The database script.",
                "type": "object",
                "properties": {
                  "scriptUrl": {
                    "description": "The url to the KQL script blob file. Must not be used together with scriptContent property",
                    "type": "string"
                  },
                  "scriptUrlSasToken": {
                    "description": "The SaS token that provide read access to the file which contain the script. Must be provided when using scriptUrl property.",
                    "type": "string",
                    "x-ms-mutability": [
                      "create"
                    ],
                    "x-ms-secret": true
                  },
                  "scriptContent": {
                    "description": "The script content. This property should be used when the script is provide inline and not through file in a SA. Must not be used together with scriptUrl and scriptUrlSasToken properties.",
                    "type": "string",
                    "x-ms-mutability": [
                      "create"
                    ],
                    "x-ms-secret": true
                  },
                  "forceUpdateTag": {
                    "description": "A unique string. If changed the script will be applied again.",
                    "type": "string"
                  },
                  "continueOnErrors": {
                    "description": "Flag that indicates whether to continue if one of the command fails.",
                    "type": "boolean",
                    "default": false
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "description": "The provisioned state of the resource.",
                    "type": "string",
                    "enum": [
                      "Running",
                      "Creating",
                      "Deleting",
                      "Succeeded",
                      "Failed",
                      "Moving",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "scriptLevel": {
                    "type": "string",
                    "description": "Differentiates between the type of script commands included - Database or Cluster. The default is Database.",
                    "enum": [
                      "Database",
                      "Cluster"
                    ],
                    "x-ms-enum": {
                      "name": "ScriptLevel",
                      "modelAsString": true
                    }
                  },
                  "principalPermissionsAction": {
                    "type": "string",
                    "description": "Indicates if the permissions for the script caller are kept following completion of the script.",
                    "enum": [
                      "RetainPermissionOnScriptCompletion",
                      "RemovePermissionOnScriptCompletion"
                    ],
                    "x-ms-enum": {
                      "name": "PrincipalPermissionsAction",
                      "modelAsString": true
                    }
                  }
                }
              },
              "systemData": {
                "readOnly": true,
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            },
            "description": "Class representing a database script."
          },
          "description": "The list of Kusto scripts."
        }
      },
      "description": "The list Kusto database script operation response."
    },
    "Script": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The database script.",
          "type": "object",
          "properties": {
            "scriptUrl": {
              "description": "The url to the KQL script blob file. Must not be used together with scriptContent property",
              "type": "string"
            },
            "scriptUrlSasToken": {
              "description": "The SaS token that provide read access to the file which contain the script. Must be provided when using scriptUrl property.",
              "type": "string",
              "x-ms-mutability": [
                "create"
              ],
              "x-ms-secret": true
            },
            "scriptContent": {
              "description": "The script content. This property should be used when the script is provide inline and not through file in a SA. Must not be used together with scriptUrl and scriptUrlSasToken properties.",
              "type": "string",
              "x-ms-mutability": [
                "create"
              ],
              "x-ms-secret": true
            },
            "forceUpdateTag": {
              "description": "A unique string. If changed the script will be applied again.",
              "type": "string"
            },
            "continueOnErrors": {
              "description": "Flag that indicates whether to continue if one of the command fails.",
              "type": "boolean",
              "default": false
            },
            "provisioningState": {
              "readOnly": true,
              "description": "The provisioned state of the resource.",
              "type": "string",
              "enum": [
                "Running",
                "Creating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Moving",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            },
            "scriptLevel": {
              "type": "string",
              "description": "Differentiates between the type of script commands included - Database or Cluster. The default is Database.",
              "enum": [
                "Database",
                "Cluster"
              ],
              "x-ms-enum": {
                "name": "ScriptLevel",
                "modelAsString": true
              }
            },
            "principalPermissionsAction": {
              "type": "string",
              "description": "Indicates if the permissions for the script caller are kept following completion of the script.",
              "enum": [
                "RetainPermissionOnScriptCompletion",
                "RemovePermissionOnScriptCompletion"
              ],
              "x-ms-enum": {
                "name": "PrincipalPermissionsAction",
                "modelAsString": true
              }
            }
          }
        },
        "systemData": {
          "readOnly": true,
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      },
      "description": "Class representing a database script."
    },
    "SandboxCustomImagesListResult": {
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Link to the next page of results",
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "A sandbox custom image.",
                "type": "object",
                "required": [
                  "language"
                ],
                "properties": {
                  "language": {
                    "description": "The language name, for example Python.",
                    "type": "string",
                    "enum": [
                      "Python"
                    ],
                    "x-ms-enum": {
                      "name": "language",
                      "modelAsString": true
                    }
                  },
                  "languageVersion": {
                    "description": "The version of the language. Either this property or baseImageName should be specified.",
                    "type": "string"
                  },
                  "baseImageName": {
                    "description": "The base image name on which the custom image is built on top of. It can be one of the LanguageExtensionImageName (e.g.: 'Python3_10_8', 'Python3_10_8_DL') or the name of an existing custom image. Either this property or languageVersion should be specified.",
                    "type": "string"
                  },
                  "requirementsFileContent": {
                    "description": "The requirements file content.",
                    "type": "string"
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "description": "The provisioned state of the resource.",
                    "type": "string",
                    "enum": [
                      "Running",
                      "Creating",
                      "Deleting",
                      "Succeeded",
                      "Failed",
                      "Moving",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              }
            },
            "description": "Class representing a Kusto sandbox custom image."
          },
          "description": "The list of Kusto sandbox custom images."
        }
      },
      "description": "The list Kusto sandbox custom images operation response."
    },
    "SandboxCustomImage": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "A sandbox custom image.",
          "type": "object",
          "required": [
            "language"
          ],
          "properties": {
            "language": {
              "description": "The language name, for example Python.",
              "type": "string",
              "enum": [
                "Python"
              ],
              "x-ms-enum": {
                "name": "language",
                "modelAsString": true
              }
            },
            "languageVersion": {
              "description": "The version of the language. Either this property or baseImageName should be specified.",
              "type": "string"
            },
            "baseImageName": {
              "description": "The base image name on which the custom image is built on top of. It can be one of the LanguageExtensionImageName (e.g.: 'Python3_10_8', 'Python3_10_8_DL') or the name of an existing custom image. Either this property or languageVersion should be specified.",
              "type": "string"
            },
            "requirementsFileContent": {
              "description": "The requirements file content.",
              "type": "string"
            },
            "provisioningState": {
              "readOnly": true,
              "description": "The provisioned state of the resource.",
              "type": "string",
              "enum": [
                "Running",
                "Creating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Moving",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            }
          }
        }
      },
      "description": "Class representing a Kusto sandbox custom image."
    },
    "ManagedPrivateEndpointListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "A managed private endpoint.",
                "type": "object",
                "required": [
                  "privateLinkResourceId",
                  "groupId"
                ],
                "properties": {
                  "privateLinkResourceId": {
                    "description": "The ARM resource ID of the resource for which the managed private endpoint is created.",
                    "type": "string"
                  },
                  "privateLinkResourceRegion": {
                    "description": "The region of the resource to which the managed private endpoint is created.",
                    "type": "string"
                  },
                  "groupId": {
                    "description": "The groupId in which the managed private endpoint is created.",
                    "type": "string"
                  },
                  "requestMessage": {
                    "description": "The user request message.",
                    "type": "string"
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "description": "The provisioned state of the resource.",
                    "type": "string",
                    "enum": [
                      "Running",
                      "Creating",
                      "Deleting",
                      "Succeeded",
                      "Failed",
                      "Moving",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              },
              "systemData": {
                "readOnly": true,
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            },
            "description": "Class representing a managed private endpoint."
          },
          "description": "The list of managed private endpoints."
        }
      },
      "description": "The list managed private endpoints operation response."
    },
    "ManagedPrivateEndpoint": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "A managed private endpoint.",
          "type": "object",
          "required": [
            "privateLinkResourceId",
            "groupId"
          ],
          "properties": {
            "privateLinkResourceId": {
              "description": "The ARM resource ID of the resource for which the managed private endpoint is created.",
              "type": "string"
            },
            "privateLinkResourceRegion": {
              "description": "The region of the resource to which the managed private endpoint is created.",
              "type": "string"
            },
            "groupId": {
              "description": "The groupId in which the managed private endpoint is created.",
              "type": "string"
            },
            "requestMessage": {
              "description": "The user request message.",
              "type": "string"
            },
            "provisioningState": {
              "readOnly": true,
              "description": "The provisioned state of the resource.",
              "type": "string",
              "enum": [
                "Running",
                "Creating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Moving",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            }
          }
        },
        "systemData": {
          "readOnly": true,
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      },
      "description": "Class representing a managed private endpoint."
    },
    "PrivateEndpointConnectionListResult": {
      "description": "A list of private endpoint connections",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private endpoint connections",
          "items": {
            "description": "A private endpoint connection",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "required": [
                  "privateLinkServiceConnectionState"
                ],
                "type": "object",
                "properties": {
                  "privateEndpoint": {
                    "description": "Private endpoint which the connection belongs to.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource id of the private endpoint.",
                        "readOnly": true
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "Connection State of the Private Endpoint Connection.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "The private link service connection status."
                      },
                      "description": {
                        "type": "string",
                        "description": "The private link service connection description."
                      },
                      "actionsRequired": {
                        "type": "string",
                        "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                        "readOnly": true
                      }
                    }
                  },
                  "groupId": {
                    "type": "string",
                    "description": "Group id of the private endpoint.",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "Provisioning state of the private endpoint.",
                    "readOnly": true
                  }
                }
              },
              "systemData": {
                "readOnly": true,
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            }
          }
        }
      }
    },
    "PrivateEndpointConnection": {
      "description": "A private endpoint connection",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "required": [
            "privateLinkServiceConnectionState"
          ],
          "type": "object",
          "properties": {
            "privateEndpoint": {
              "description": "Private endpoint which the connection belongs to.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Resource id of the private endpoint.",
                  "readOnly": true
                }
              }
            },
            "privateLinkServiceConnectionState": {
              "description": "Connection State of the Private Endpoint Connection.",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "The private link service connection status."
                },
                "description": {
                  "type": "string",
                  "description": "The private link service connection description."
                },
                "actionsRequired": {
                  "type": "string",
                  "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                  "readOnly": true
                }
              }
            },
            "groupId": {
              "type": "string",
              "description": "Group id of the private endpoint.",
              "readOnly": true
            },
            "provisioningState": {
              "type": "string",
              "description": "Provisioning state of the private endpoint.",
              "readOnly": true
            }
          }
        },
        "systemData": {
          "readOnly": true,
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "PrivateEndpointConnectionProperties": {
      "description": "Properties of a private endpoint connection.",
      "required": [
        "privateLinkServiceConnectionState"
      ],
      "type": "object",
      "properties": {
        "privateEndpoint": {
          "description": "Private endpoint which the connection belongs to.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Resource id of the private endpoint.",
              "readOnly": true
            }
          }
        },
        "privateLinkServiceConnectionState": {
          "description": "Connection State of the Private Endpoint Connection.",
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "The private link service connection status."
            },
            "description": {
              "type": "string",
              "description": "The private link service connection description."
            },
            "actionsRequired": {
              "type": "string",
              "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
              "readOnly": true
            }
          }
        },
        "groupId": {
          "type": "string",
          "description": "Group id of the private endpoint.",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the private endpoint.",
          "readOnly": true
        }
      }
    },
    "PrivateEndpointProperty": {
      "type": "object",
      "description": "Private endpoint which the connection belongs to.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource id of the private endpoint.",
          "readOnly": true
        }
      }
    },
    "PrivateLinkServiceConnectionStateProperty": {
      "type": "object",
      "description": "Connection State of the Private Endpoint Connection.",
      "properties": {
        "status": {
          "type": "string",
          "description": "The private link service connection status."
        },
        "description": {
          "type": "string",
          "description": "The private link service connection description."
        },
        "actionsRequired": {
          "type": "string",
          "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
          "readOnly": true
        }
      }
    },
    "PrivateLinkResourceListResult": {
      "description": "A list of private link resources",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private link resources",
          "items": {
            "description": "A private link resource",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "groupId": {
                    "description": "The private link resource group id.",
                    "type": "string",
                    "readOnly": true
                  },
                  "requiredMembers": {
                    "description": "The private link resource required member names.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "requiredZoneNames": {
                    "description": "The private link resource required zone names.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  }
                }
              },
              "systemData": {
                "readOnly": true,
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            }
          }
        }
      }
    },
    "PrivateLinkResource": {
      "description": "A private link resource",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "groupId": {
              "description": "The private link resource group id.",
              "type": "string",
              "readOnly": true
            },
            "requiredMembers": {
              "description": "The private link resource required member names.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "requiredZoneNames": {
              "description": "The private link resource required zone names.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            }
          }
        },
        "systemData": {
          "readOnly": true,
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "description": "Properties of a private link resource.",
      "type": "object",
      "properties": {
        "groupId": {
          "description": "The private link resource group id.",
          "type": "string",
          "readOnly": true
        },
        "requiredMembers": {
          "description": "The private link resource required member names.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "description": "The private link resource required zone names.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "OutboundNetworkDependenciesEndpointListResult": {
      "description": "Collection of Outbound Environment Endpoints",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "description": "Endpoints accessed for a common purpose that the Kusto Service Environment requires outbound network access to.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The outbound environment endpoint properties.",
                "type": "object",
                "properties": {
                  "category": {
                    "description": "The type of service accessed by the Kusto Service Environment, e.g., Azure Storage, Azure SQL Database, and Azure Active Directory.",
                    "type": "string"
                  },
                  "endpoints": {
                    "description": "The endpoints that the Kusto Service Environment reaches the service at.",
                    "type": "array",
                    "items": {
                      "description": "A domain name that a service is reached at, including details of the current connection status.",
                      "type": "object",
                      "properties": {
                        "domainName": {
                          "description": "The domain name of the dependency.",
                          "type": "string"
                        },
                        "endpointDetails": {
                          "description": "The ports used when connecting to DomainName.",
                          "type": "array",
                          "items": {
                            "description": "Current TCP connectivity information from the Kusto cluster to a single endpoint.",
                            "type": "object",
                            "properties": {
                              "port": {
                                "format": "int32",
                                "description": "The port an endpoint is connected to.",
                                "type": "integer"
                              },
                              "ipAddress": {
                                "description": "The ip address of the endpoint.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "description": "The provisioned state of the resource.",
                    "type": "string",
                    "enum": [
                      "Running",
                      "Creating",
                      "Deleting",
                      "Succeeded",
                      "Failed",
                      "Moving",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              },
              "etag": {
                "type": "string",
                "readOnly": true,
                "description": "A unique read-only string that changes whenever the resource is updated."
              }
            }
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OutboundNetworkDependenciesEndpoint": {
      "description": "Endpoints accessed for a common purpose that the Kusto Service Environment requires outbound network access to.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The outbound environment endpoint properties.",
          "type": "object",
          "properties": {
            "category": {
              "description": "The type of service accessed by the Kusto Service Environment, e.g., Azure Storage, Azure SQL Database, and Azure Active Directory.",
              "type": "string"
            },
            "endpoints": {
              "description": "The endpoints that the Kusto Service Environment reaches the service at.",
              "type": "array",
              "items": {
                "description": "A domain name that a service is reached at, including details of the current connection status.",
                "type": "object",
                "properties": {
                  "domainName": {
                    "description": "The domain name of the dependency.",
                    "type": "string"
                  },
                  "endpointDetails": {
                    "description": "The ports used when connecting to DomainName.",
                    "type": "array",
                    "items": {
                      "description": "Current TCP connectivity information from the Kusto cluster to a single endpoint.",
                      "type": "object",
                      "properties": {
                        "port": {
                          "format": "int32",
                          "description": "The port an endpoint is connected to.",
                          "type": "integer"
                        },
                        "ipAddress": {
                          "description": "The ip address of the endpoint.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "provisioningState": {
              "readOnly": true,
              "description": "The provisioned state of the resource.",
              "type": "string",
              "enum": [
                "Running",
                "Creating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Moving",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            }
          }
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      }
    },
    "OutboundNetworkDependenciesEndpointProperties": {
      "description": "Endpoints accessed for a common purpose that the Kusto Service Environment requires outbound network access to.",
      "type": "object",
      "properties": {
        "category": {
          "description": "The type of service accessed by the Kusto Service Environment, e.g., Azure Storage, Azure SQL Database, and Azure Active Directory.",
          "type": "string"
        },
        "endpoints": {
          "description": "The endpoints that the Kusto Service Environment reaches the service at.",
          "type": "array",
          "items": {
            "description": "A domain name that a service is reached at, including details of the current connection status.",
            "type": "object",
            "properties": {
              "domainName": {
                "description": "The domain name of the dependency.",
                "type": "string"
              },
              "endpointDetails": {
                "description": "The ports used when connecting to DomainName.",
                "type": "array",
                "items": {
                  "description": "Current TCP connectivity information from the Kusto cluster to a single endpoint.",
                  "type": "object",
                  "properties": {
                    "port": {
                      "format": "int32",
                      "description": "The port an endpoint is connected to.",
                      "type": "integer"
                    },
                    "ipAddress": {
                      "description": "The ip address of the endpoint.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "provisioningState": {
          "readOnly": true,
          "description": "The provisioned state of the resource.",
          "type": "string",
          "enum": [
            "Running",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Moving",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "EndpointDependency": {
      "description": "A domain name that a service is reached at, including details of the current connection status.",
      "type": "object",
      "properties": {
        "domainName": {
          "description": "The domain name of the dependency.",
          "type": "string"
        },
        "endpointDetails": {
          "description": "The ports used when connecting to DomainName.",
          "type": "array",
          "items": {
            "description": "Current TCP connectivity information from the Kusto cluster to a single endpoint.",
            "type": "object",
            "properties": {
              "port": {
                "format": "int32",
                "description": "The port an endpoint is connected to.",
                "type": "integer"
              },
              "ipAddress": {
                "description": "The ip address of the endpoint.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "EndpointDetail": {
      "description": "Current TCP connectivity information from the Kusto cluster to a single endpoint.",
      "type": "object",
      "properties": {
        "port": {
          "format": "int32",
          "description": "The port an endpoint is connected to.",
          "type": "integer"
        },
        "ipAddress": {
          "description": "The ip address of the endpoint.",
          "type": "string"
        }
      }
    },
    "ClusterListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "sku"
            ],
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ],
                "description": "Resource tags."
              },
              "location": {
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "description": "The geo-location where the resource lives"
              },
              "sku": {
                "description": "The SKU of the cluster.",
                "type": "object",
                "required": [
                  "name",
                  "tier"
                ],
                "properties": {
                  "name": {
                    "description": "SKU name.",
                    "type": "string",
                    "enum": [
                      "Dev(No SLA)_Standard_D11_v2",
                      "Dev(No SLA)_Standard_E2a_v4",
                      "Standard_D11_v2",
                      "Standard_D12_v2",
                      "Standard_D13_v2",
                      "Standard_D14_v2",
                      "Standard_D32d_v4",
                      "Standard_D16d_v5",
                      "Standard_D32d_v5",
                      "Standard_DS13_v2+1TB_PS",
                      "Standard_DS13_v2+2TB_PS",
                      "Standard_DS14_v2+3TB_PS",
                      "Standard_DS14_v2+4TB_PS",
                      "Standard_L4s",
                      "Standard_L8s",
                      "Standard_L16s",
                      "Standard_L8s_v2",
                      "Standard_L16s_v2",
                      "Standard_L8s_v3",
                      "Standard_L16s_v3",
                      "Standard_L32s_v3",
                      "Standard_L8as_v3",
                      "Standard_L16as_v3",
                      "Standard_L32as_v3",
                      "Standard_E64i_v3",
                      "Standard_E80ids_v4",
                      "Standard_E2a_v4",
                      "Standard_E4a_v4",
                      "Standard_E8a_v4",
                      "Standard_E16a_v4",
                      "Standard_E8as_v4+1TB_PS",
                      "Standard_E8as_v4+2TB_PS",
                      "Standard_E16as_v4+3TB_PS",
                      "Standard_E16as_v4+4TB_PS",
                      "Standard_E8as_v5+1TB_PS",
                      "Standard_E8as_v5+2TB_PS",
                      "Standard_E16as_v5+3TB_PS",
                      "Standard_E16as_v5+4TB_PS",
                      "Standard_E2ads_v5",
                      "Standard_E4ads_v5",
                      "Standard_E8ads_v5",
                      "Standard_E16ads_v5",
                      "Standard_EC8as_v5+1TB_PS",
                      "Standard_EC8as_v5+2TB_PS",
                      "Standard_EC16as_v5+3TB_PS",
                      "Standard_EC16as_v5+4TB_PS",
                      "Standard_EC8ads_v5",
                      "Standard_EC16ads_v5",
                      "Standard_E8s_v4+1TB_PS",
                      "Standard_E8s_v4+2TB_PS",
                      "Standard_E16s_v4+3TB_PS",
                      "Standard_E16s_v4+4TB_PS",
                      "Standard_E8s_v5+1TB_PS",
                      "Standard_E8s_v5+2TB_PS",
                      "Standard_E16s_v5+3TB_PS",
                      "Standard_E16s_v5+4TB_PS",
                      "Standard_E2d_v4",
                      "Standard_E4d_v4",
                      "Standard_E8d_v4",
                      "Standard_E16d_v4",
                      "Standard_E2d_v5",
                      "Standard_E4d_v5",
                      "Standard_E8d_v5",
                      "Standard_E16d_v5"
                    ],
                    "x-ms-enum": {
                      "name": "AzureSkuName",
                      "modelAsString": true
                    }
                  },
                  "capacity": {
                    "description": "The number of instances of the cluster.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "tier": {
                    "description": "SKU tier.",
                    "type": "string",
                    "enum": [
                      "Basic",
                      "Standard"
                    ],
                    "x-ms-enum": {
                      "name": "AzureSkuTier",
                      "modelAsString": true
                    }
                  }
                }
              },
              "systemData": {
                "readOnly": true,
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "zones": {
                "description": "The availability zones of the cluster.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "identity": {
                "description": "The identity of the cluster, if configured.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The principal ID of resource identity."
                  },
                  "tenantId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The tenant ID of resource."
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove all identities.",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned, UserAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "IdentityType",
                      "modelAsString": true
                    }
                  },
                  "userAssignedIdentities": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "principalId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The principal id of user assigned identity."
                        },
                        "clientId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The client id of user assigned identity."
                        }
                      }
                    },
                    "description": "The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                  }
                },
                "required": [
                  "type"
                ]
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The cluster properties.",
                "type": "object",
                "properties": {
                  "state": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The state of the resource.",
                    "enum": [
                      "Creating",
                      "Unavailable",
                      "Running",
                      "Deleting",
                      "Deleted",
                      "Stopping",
                      "Stopped",
                      "Starting",
                      "Updating",
                      "Migrated"
                    ],
                    "x-ms-enum": {
                      "name": "State",
                      "modelAsString": true
                    }
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "description": "The provisioned state of the resource.",
                    "type": "string",
                    "enum": [
                      "Running",
                      "Creating",
                      "Deleting",
                      "Succeeded",
                      "Failed",
                      "Moving",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "uri": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The cluster URI."
                  },
                  "dataIngestionUri": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The cluster data ingestion URI."
                  },
                  "stateReason": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The reason for the cluster's current state."
                  },
                  "trustedExternalTenants": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "GUID representing an external tenant."
                        }
                      },
                      "description": "Represents a tenant ID that is trusted by the cluster."
                    },
                    "description": "The cluster's external tenants."
                  },
                  "optimizedAutoscale": {
                    "type": "object",
                    "description": "Optimized auto scale definition.",
                    "required": [
                      "version",
                      "isEnabled",
                      "minimum",
                      "maximum"
                    ],
                    "properties": {
                      "version": {
                        "description": "The version of the template defined, for instance 1.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "isEnabled": {
                        "description": "A boolean value that indicate if the optimized autoscale feature is enabled or not.",
                        "type": "boolean"
                      },
                      "minimum": {
                        "description": "Minimum allowed instances count.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "maximum": {
                        "description": "Maximum allowed instances count.",
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  },
                  "enableDiskEncryption": {
                    "description": "A boolean value that indicates if the cluster's disks are encrypted.",
                    "default": false,
                    "type": "boolean"
                  },
                  "enableStreamingIngest": {
                    "description": "A boolean value that indicates if the streaming ingest is enabled.",
                    "default": false,
                    "type": "boolean"
                  },
                  "virtualNetworkConfiguration": {
                    "type": "object",
                    "description": "Virtual network definition.",
                    "required": [
                      "subnetId",
                      "enginePublicIpId",
                      "dataManagementPublicIpId"
                    ],
                    "properties": {
                      "subnetId": {
                        "description": "The subnet resource id.",
                        "type": "string",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "enginePublicIpId": {
                        "description": "Engine service's public IP address resource id.",
                        "type": "string",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "dataManagementPublicIpId": {
                        "description": "Data management's service public IP address resource id.",
                        "type": "string",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "state": {
                        "type": "string",
                        "description": "When enabled, the cluster is deployed into the configured subnet, when disabled it will be removed from the subnet.",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "VnetState",
                          "modelAsString": true
                        },
                        "default": "Enabled"
                      }
                    }
                  },
                  "keyVaultProperties": {
                    "type": "object",
                    "description": "KeyVault properties for the cluster encryption.",
                    "properties": {
                      "keyName": {
                        "type": "string",
                        "description": "The name of the key vault key.",
                        "x-ms-client-name": "KeyName"
                      },
                      "keyVersion": {
                        "type": "string",
                        "description": "The version of the key vault key.",
                        "x-ms-client-name": "KeyVersion"
                      },
                      "keyVaultUri": {
                        "type": "string",
                        "description": "The Uri of the key vault.",
                        "x-ms-client-name": "KeyVaultUri"
                      },
                      "userIdentity": {
                        "type": "string",
                        "description": "The user assigned identity (ARM resource id) that has access to the key.",
                        "x-ms-client-name": "UserIdentity"
                      }
                    }
                  },
                  "enablePurge": {
                    "description": "A boolean value that indicates if the purge operations are enabled.",
                    "default": false,
                    "type": "boolean"
                  },
                  "languageExtensions": {
                    "type": "object",
                    "description": "List of the cluster's language extensions.",
                    "properties": {
                      "value": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "The language extension object.",
                          "properties": {
                            "languageExtensionName": {
                              "description": "The language extension name.",
                              "type": "string",
                              "enum": [
                                "PYTHON",
                                "R"
                              ],
                              "x-ms-enum": {
                                "name": "languageExtensionName",
                                "modelAsString": true
                              }
                            },
                            "languageExtensionImageName": {
                              "description": "The language extension image name.",
                              "type": "string",
                              "enum": [
                                "R",
                                "Python3_6_5",
                                "Python3_10_8",
                                "Python3_10_8_DL",
                                "PythonCustomImage",
                                "Python3_11_7",
                                "Python3_11_7_DL"
                              ],
                              "x-ms-enum": {
                                "name": "languageExtensionImageName",
                                "modelAsString": true
                              }
                            },
                            "languageExtensionCustomImageName": {
                              "description": "The language extension custom image name.",
                              "type": "string"
                            }
                          }
                        },
                        "description": "The list of language extensions."
                      }
                    }
                  },
                  "enableDoubleEncryption": {
                    "description": "A boolean value that indicates if double encryption is enabled.",
                    "default": false,
                    "type": "boolean"
                  },
                  "publicNetworkAccess": {
                    "type": "string",
                    "description": "Public network access to the cluster is enabled by default. When disabled, only private endpoint connection to the cluster is allowed",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "PublicNetworkAccess",
                      "modelAsString": true
                    },
                    "default": "Enabled"
                  },
                  "allowedIpRangeList": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of ips in the format of CIDR allowed to connect to the cluster."
                  },
                  "engineType": {
                    "type": "string",
                    "description": "The engine type",
                    "enum": [
                      "V2",
                      "V3"
                    ],
                    "x-ms-enum": {
                      "name": "EngineType",
                      "modelAsString": true
                    },
                    "default": "V3"
                  },
                  "acceptedAudiences": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "GUID or valid URL representing an accepted audience."
                        }
                      },
                      "description": "Represents an accepted audience trusted by the cluster."
                    },
                    "description": "The cluster's accepted audiences."
                  },
                  "enableAutoStop": {
                    "description": "A boolean value that indicates if the cluster could be automatically stopped (due to lack of data or no activity for many days).",
                    "default": true,
                    "type": "boolean"
                  },
                  "restrictOutboundNetworkAccess": {
                    "description": "Whether or not to restrict outbound network access.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "ClusterNetworkAccessFlag",
                      "modelAsString": true
                    },
                    "default": "Disabled"
                  },
                  "allowedFqdnList": {
                    "description": "List of allowed FQDNs(Fully Qualified Domain Name) for egress from Cluster.",
                    "type": "array",
                    "items": {
                      "description": "FQDN to be allowed for egress. Example: my-storageaccount.blob.core.windows.net",
                      "type": "string"
                    }
                  },
                  "calloutPolicies": {
                    "description": "List of callout policies for egress from Cluster.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "calloutUriRegex": {
                          "type": "string",
                          "description": "Regular expression or FQDN pattern for the callout URI."
                        },
                        "calloutType": {
                          "type": "string",
                          "enum": [
                            "kusto",
                            "sql",
                            "cosmosdb",
                            "external_data",
                            "azure_digital_twins",
                            "sandbox_artifacts",
                            "webapi",
                            "mysql",
                            "postgresql",
                            "genevametrics",
                            "azure_openai"
                          ],
                          "x-ms-enum": {
                            "name": "calloutType",
                            "modelAsString": true
                          },
                          "description": "Type of the callout service, specifying the kind of external resource or service being accessed."
                        },
                        "outboundAccess": {
                          "type": "string",
                          "enum": [
                            "Allow",
                            "Deny"
                          ],
                          "x-ms-enum": {
                            "name": "outboundAccess",
                            "modelAsString": true
                          },
                          "description": "Indicates whether outbound access is permitted for the specified URI pattern."
                        },
                        "calloutId": {
                          "type": "string",
                          "description": "Unique identifier for the callout configuration.",
                          "readOnly": true
                        }
                      },
                      "description": "Configuration for external callout policies, including URI patterns, access types, and service types."
                    }
                  },
                  "publicIPType": {
                    "description": "Indicates what public IP type to create - IPv4 (default), or DualStack (both IPv4 and IPv6)",
                    "enum": [
                      "IPv4",
                      "DualStack"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "publicIPType",
                      "modelAsString": true
                    },
                    "default": "IPv4"
                  },
                  "virtualClusterGraduationProperties": {
                    "description": "Virtual Cluster graduation properties",
                    "type": "string",
                    "x-ms-mutability": [
                      "create"
                    ],
                    "x-ms-secret": true
                  },
                  "privateEndpointConnections": {
                    "type": "array",
                    "items": {
                      "description": "A private endpoint connection",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                        },
                        "name": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The name of the resource"
                        },
                        "type": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                        },
                        "properties": {
                          "description": "Resource properties.",
                          "x-ms-client-flatten": true,
                          "required": [
                            "privateLinkServiceConnectionState"
                          ],
                          "type": "object",
                          "properties": {
                            "privateEndpoint": {
                              "description": "Private endpoint which the connection belongs to.",
                              "readOnly": true,
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Resource id of the private endpoint.",
                                  "readOnly": true
                                }
                              }
                            },
                            "privateLinkServiceConnectionState": {
                              "description": "Connection State of the Private Endpoint Connection.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "description": "The private link service connection status."
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The private link service connection description."
                                },
                                "actionsRequired": {
                                  "type": "string",
                                  "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                                  "readOnly": true
                                }
                              }
                            },
                            "groupId": {
                              "type": "string",
                              "description": "Group id of the private endpoint.",
                              "readOnly": true
                            },
                            "provisioningState": {
                              "type": "string",
                              "description": "Provisioning state of the private endpoint.",
                              "readOnly": true
                            }
                          }
                        },
                        "systemData": {
                          "readOnly": true,
                          "description": "Metadata pertaining to creation and last modification of the resource.",
                          "type": "object",
                          "properties": {
                            "createdBy": {
                              "type": "string",
                              "description": "The identity that created the resource."
                            },
                            "createdByType": {
                              "type": "string",
                              "description": "The type of identity that created the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "x-ms-enum": {
                                "name": "createdByType",
                                "modelAsString": true
                              }
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp of resource creation (UTC)."
                            },
                            "lastModifiedBy": {
                              "type": "string",
                              "description": "The identity that last modified the resource."
                            },
                            "lastModifiedByType": {
                              "type": "string",
                              "description": "The type of identity that last modified the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "x-ms-enum": {
                                "name": "createdByType",
                                "modelAsString": true
                              }
                            },
                            "lastModifiedAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp of resource last modification (UTC)"
                            }
                          }
                        }
                      }
                    },
                    "readOnly": true,
                    "description": "A list of private endpoint connections."
                  },
                  "migrationCluster": {
                    "description": "Properties of the peer cluster involved in a migration to/from this cluster.",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The resource ID of the cluster.",
                        "readOnly": true
                      },
                      "uri": {
                        "type": "string",
                        "description": "The public URL of the cluster.",
                        "readOnly": true
                      },
                      "dataIngestionUri": {
                        "type": "string",
                        "description": "The public data ingestion URL of the cluster.",
                        "readOnly": true
                      },
                      "role": {
                        "type": "string",
                        "description": "The role of the cluster in the migration process.",
                        "readOnly": true,
                        "enum": [
                          "Source",
                          "Destination"
                        ],
                        "x-ms-enum": {
                          "name": "MigrationClusterRole",
                          "modelAsString": true
                        }
                      }
                    }
                  },
                  "zoneStatus": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Indicates whether the cluster is zonal or non-zonal.",
                    "enum": [
                      "NonZonal",
                      "ZonalInconsistency",
                      "Zonal"
                    ],
                    "x-ms-enum": {
                      "name": "ZoneStatus",
                      "modelAsString": true
                    }
                  }
                }
              },
              "etag": {
                "type": "string",
                "readOnly": true,
                "description": "A unique read-only string that changes whenever the resource is updated."
              }
            },
            "description": "Class representing a Kusto cluster."
          },
          "description": "The list of Kusto clusters."
        }
      },
      "description": "The list Kusto clusters operation response."
    },
    "DatabaseListResult": {
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Link to the next page of results",
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "kind"
            ],
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "location": {
                "type": "string",
                "description": "Resource location."
              },
              "kind": {
                "description": "Kind of the database",
                "enum": [
                  "ReadWrite",
                  "ReadOnlyFollowing"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "Kind",
                  "modelAsString": true
                }
              }
            },
            "description": "Class representing a Kusto database.",
            "discriminator": "kind"
          },
          "description": "The list of Kusto databases."
        }
      },
      "description": "The list Kusto databases operation response."
    },
    "DatabasePrincipalAssignmentListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The database principal.",
                "type": "object",
                "required": [
                  "principalId",
                  "role",
                  "principalType"
                ],
                "properties": {
                  "principalId": {
                    "description": "The principal ID assigned to the database principal. It can be a user email, application ID, or security group name.",
                    "type": "string"
                  },
                  "role": {
                    "description": "Database principal role.",
                    "type": "string",
                    "enum": [
                      "Admin",
                      "Ingestor",
                      "Monitor",
                      "User",
                      "UnrestrictedViewer",
                      "Viewer"
                    ],
                    "x-ms-enum": {
                      "name": "DatabasePrincipalRole",
                      "modelAsString": true
                    }
                  },
                  "tenantId": {
                    "type": "string",
                    "description": "The tenant id of the principal"
                  },
                  "principalType": {
                    "description": "Principal type.",
                    "type": "string",
                    "enum": [
                      "App",
                      "Group",
                      "User"
                    ],
                    "x-ms-enum": {
                      "name": "PrincipalType",
                      "modelAsString": true
                    }
                  },
                  "tenantName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The tenant name of the principal"
                  },
                  "principalName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The principal name"
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "description": "The provisioned state of the resource.",
                    "type": "string",
                    "enum": [
                      "Running",
                      "Creating",
                      "Deleting",
                      "Succeeded",
                      "Failed",
                      "Moving",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "aadObjectId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The service principal object id in AAD (Azure active directory)"
                  }
                }
              }
            },
            "description": "Class representing a database principal assignment."
          },
          "description": "The list of Kusto database principal assignments."
        }
      },
      "description": "The list Kusto database principal assignments operation response."
    },
    "ClusterPrincipalAssignmentListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The cluster principal.",
                "type": "object",
                "required": [
                  "principalId",
                  "role",
                  "principalType"
                ],
                "properties": {
                  "principalId": {
                    "description": "The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name.",
                    "type": "string"
                  },
                  "role": {
                    "description": "Cluster principal role.",
                    "type": "string",
                    "enum": [
                      "AllDatabasesAdmin",
                      "AllDatabasesViewer",
                      "AllDatabasesMonitor"
                    ],
                    "x-ms-enum": {
                      "name": "ClusterPrincipalRole",
                      "modelAsString": true
                    }
                  },
                  "tenantId": {
                    "type": "string",
                    "description": "The tenant id of the principal"
                  },
                  "principalType": {
                    "description": "Principal type.",
                    "type": "string",
                    "enum": [
                      "App",
                      "Group",
                      "User"
                    ],
                    "x-ms-enum": {
                      "name": "PrincipalType",
                      "modelAsString": true
                    }
                  },
                  "tenantName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The tenant name of the principal"
                  },
                  "principalName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The principal name"
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "description": "The provisioned state of the resource.",
                    "type": "string",
                    "enum": [
                      "Running",
                      "Creating",
                      "Deleting",
                      "Succeeded",
                      "Failed",
                      "Moving",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "aadObjectId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The service principal object id in AAD (Azure active directory)"
                  }
                }
              }
            },
            "description": "Class representing a cluster principal assignment."
          },
          "description": "The list of Kusto cluster principal assignments."
        }
      },
      "description": "The list Kusto cluster principal assignments operation response."
    },
    "DatabasePrincipalListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name",
              "role",
              "type"
            ],
            "properties": {
              "role": {
                "description": "Database principal role.",
                "type": "string",
                "enum": [
                  "Admin",
                  "Ingestor",
                  "Monitor",
                  "User",
                  "UnrestrictedViewer",
                  "Viewer"
                ],
                "x-ms-enum": {
                  "name": "DatabasePrincipalRole",
                  "modelAsString": true
                }
              },
              "name": {
                "description": "Database principal name.",
                "type": "string"
              },
              "type": {
                "description": "Database principal type.",
                "type": "string",
                "enum": [
                  "App",
                  "Group",
                  "User"
                ],
                "x-ms-enum": {
                  "name": "DatabasePrincipalType",
                  "modelAsString": true
                }
              },
              "fqn": {
                "description": "Database principal fully qualified name.",
                "type": "string"
              },
              "email": {
                "description": "Database principal email if exists.",
                "type": "string"
              },
              "appId": {
                "description": "Application id - relevant only for application principal type.",
                "type": "string"
              },
              "tenantName": {
                "type": "string",
                "readOnly": true,
                "description": "The tenant name of the principal"
              }
            },
            "description": "A class representing database principal entity."
          },
          "description": "The list of Kusto database principals."
        }
      },
      "description": "The list Kusto database principals operation response."
    },
    "FollowerDatabaseListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "clusterResourceId",
              "attachedDatabaseConfigurationName"
            ],
            "properties": {
              "clusterResourceId": {
                "type": "string",
                "description": "Resource id of the cluster that follows a database owned by this cluster."
              },
              "attachedDatabaseConfigurationName": {
                "type": "string",
                "description": "Resource name of the attached database configuration in the follower cluster."
              },
              "databaseName": {
                "type": "string",
                "readOnly": true,
                "description": "The database name owned by this cluster that was followed. * in case following all databases."
              },
              "tableLevelSharingProperties": {
                "type": "object",
                "readOnly": true,
                "description": "Table level sharing specifications",
                "properties": {
                  "tablesToInclude": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of tables to include in the follower database"
                  },
                  "tablesToExclude": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of tables to exclude from the follower database"
                  },
                  "externalTablesToInclude": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of external tables to include in the follower database"
                  },
                  "externalTablesToExclude": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of external tables to exclude from the follower database"
                  },
                  "materializedViewsToInclude": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of materialized views to include in the follower database"
                  },
                  "materializedViewsToExclude": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of materialized views to exclude from the follower database"
                  },
                  "functionsToInclude": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of functions to include in the follower database"
                  },
                  "functionsToExclude": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of functions to exclude from the follower database"
                  }
                }
              },
              "databaseShareOrigin": {
                "type": "string",
                "readOnly": true,
                "enum": [
                  "Direct",
                  "DataShare",
                  "Other"
                ],
                "x-ms-enum": {
                  "name": "DatabaseShareOrigin",
                  "modelAsString": true
                },
                "description": "The origin of the following setup."
              }
            },
            "description": "A class representing follower database request."
          },
          "description": "The list of follower database result."
        }
      },
      "description": "The list Kusto database principals operation response."
    },
    "FollowerDatabaseListResultGet": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Follower database definition.",
                "type": "object",
                "required": [
                  "clusterResourceId",
                  "attachedDatabaseConfigurationName"
                ],
                "properties": {
                  "clusterResourceId": {
                    "type": "string",
                    "description": "Resource id of the cluster that follows a database owned by this cluster."
                  },
                  "attachedDatabaseConfigurationName": {
                    "type": "string",
                    "description": "Resource name of the attached database configuration in the follower cluster."
                  },
                  "databaseName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The database name owned by this cluster that was followed. * in case following all databases."
                  },
                  "tableLevelSharingProperties": {
                    "type": "object",
                    "readOnly": true,
                    "description": "Table level sharing specifications",
                    "properties": {
                      "tablesToInclude": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of tables to include in the follower database"
                      },
                      "tablesToExclude": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of tables to exclude from the follower database"
                      },
                      "externalTablesToInclude": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of external tables to include in the follower database"
                      },
                      "externalTablesToExclude": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of external tables to exclude from the follower database"
                      },
                      "materializedViewsToInclude": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of materialized views to include in the follower database"
                      },
                      "materializedViewsToExclude": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of materialized views to exclude from the follower database"
                      },
                      "functionsToInclude": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of functions to include in the follower database"
                      },
                      "functionsToExclude": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of functions to exclude from the follower database"
                      }
                    }
                  },
                  "databaseShareOrigin": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                      "Direct",
                      "DataShare",
                      "Other"
                    ],
                    "x-ms-enum": {
                      "name": "DatabaseShareOrigin",
                      "modelAsString": true
                    },
                    "description": "The origin of the following setup."
                  }
                }
              }
            },
            "description": "A class representing follower database object."
          },
          "description": "The list of follower database result."
        },
        "nextLink": {
          "type": "string",
          "title": "The URL to get the next set of follower databases list results if there are any."
        }
      },
      "description": "The list Kusto database principals operation response."
    },
    "DataConnection": {
      "type": "object",
      "required": [
        "kind"
      ],
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "kind": {
          "description": "Kind of the endpoint for the data connection",
          "enum": [
            "EventHub",
            "EventGrid",
            "IotHub",
            "CosmosDb"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataConnectionKind",
            "modelAsString": true
          }
        }
      },
      "description": "Class representing an data connection.",
      "discriminator": "kind"
    },
    "DataConnectionValidationResult": {
      "type": "object",
      "properties": {
        "errorMessage": {
          "type": "string",
          "description": "A message which indicates a problem in data connection validation."
        }
      },
      "description": "The result returned from a data connection validation request."
    },
    "DatabasePrincipalListRequest": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name",
              "role",
              "type"
            ],
            "properties": {
              "role": {
                "description": "Database principal role.",
                "type": "string",
                "enum": [
                  "Admin",
                  "Ingestor",
                  "Monitor",
                  "User",
                  "UnrestrictedViewer",
                  "Viewer"
                ],
                "x-ms-enum": {
                  "name": "DatabasePrincipalRole",
                  "modelAsString": true
                }
              },
              "name": {
                "description": "Database principal name.",
                "type": "string"
              },
              "type": {
                "description": "Database principal type.",
                "type": "string",
                "enum": [
                  "App",
                  "Group",
                  "User"
                ],
                "x-ms-enum": {
                  "name": "DatabasePrincipalType",
                  "modelAsString": true
                }
              },
              "fqn": {
                "description": "Database principal fully qualified name.",
                "type": "string"
              },
              "email": {
                "description": "Database principal email if exists.",
                "type": "string"
              },
              "appId": {
                "description": "Application id - relevant only for application principal type.",
                "type": "string"
              },
              "tenantName": {
                "type": "string",
                "readOnly": true,
                "description": "The tenant name of the principal"
              }
            },
            "description": "A class representing database principal entity."
          },
          "description": "The list of Kusto database principals."
        }
      },
      "description": "The list Kusto database principals operation request."
    },
    "FollowerDatabaseDefinition": {
      "type": "object",
      "required": [
        "clusterResourceId",
        "attachedDatabaseConfigurationName"
      ],
      "properties": {
        "clusterResourceId": {
          "type": "string",
          "description": "Resource id of the cluster that follows a database owned by this cluster."
        },
        "attachedDatabaseConfigurationName": {
          "type": "string",
          "description": "Resource name of the attached database configuration in the follower cluster."
        },
        "databaseName": {
          "type": "string",
          "readOnly": true,
          "description": "The database name owned by this cluster that was followed. * in case following all databases."
        },
        "tableLevelSharingProperties": {
          "type": "object",
          "readOnly": true,
          "description": "Table level sharing specifications",
          "properties": {
            "tablesToInclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of tables to include in the follower database"
            },
            "tablesToExclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of tables to exclude from the follower database"
            },
            "externalTablesToInclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of external tables to include in the follower database"
            },
            "externalTablesToExclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of external tables to exclude from the follower database"
            },
            "materializedViewsToInclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of materialized views to include in the follower database"
            },
            "materializedViewsToExclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of materialized views to exclude from the follower database"
            },
            "functionsToInclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of functions to include in the follower database"
            },
            "functionsToExclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of functions to exclude from the follower database"
            }
          }
        },
        "databaseShareOrigin": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Direct",
            "DataShare",
            "Other"
          ],
          "x-ms-enum": {
            "name": "DatabaseShareOrigin",
            "modelAsString": true
          },
          "description": "The origin of the following setup."
        }
      },
      "description": "A class representing follower database request."
    },
    "FollowerDatabaseDefinitionGet": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Follower database definition.",
          "type": "object",
          "required": [
            "clusterResourceId",
            "attachedDatabaseConfigurationName"
          ],
          "properties": {
            "clusterResourceId": {
              "type": "string",
              "description": "Resource id of the cluster that follows a database owned by this cluster."
            },
            "attachedDatabaseConfigurationName": {
              "type": "string",
              "description": "Resource name of the attached database configuration in the follower cluster."
            },
            "databaseName": {
              "type": "string",
              "readOnly": true,
              "description": "The database name owned by this cluster that was followed. * in case following all databases."
            },
            "tableLevelSharingProperties": {
              "type": "object",
              "readOnly": true,
              "description": "Table level sharing specifications",
              "properties": {
                "tablesToInclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of tables to include in the follower database"
                },
                "tablesToExclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of tables to exclude from the follower database"
                },
                "externalTablesToInclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of external tables to include in the follower database"
                },
                "externalTablesToExclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of external tables to exclude from the follower database"
                },
                "materializedViewsToInclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of materialized views to include in the follower database"
                },
                "materializedViewsToExclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of materialized views to exclude from the follower database"
                },
                "functionsToInclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of functions to include in the follower database"
                },
                "functionsToExclude": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of functions to exclude from the follower database"
                }
              }
            },
            "databaseShareOrigin": {
              "type": "string",
              "readOnly": true,
              "enum": [
                "Direct",
                "DataShare",
                "Other"
              ],
              "x-ms-enum": {
                "name": "DatabaseShareOrigin",
                "modelAsString": true
              },
              "description": "The origin of the following setup."
            }
          }
        }
      },
      "description": "A class representing follower database object."
    },
    "FollowerDatabaseProperties": {
      "type": "object",
      "required": [
        "clusterResourceId",
        "attachedDatabaseConfigurationName"
      ],
      "properties": {
        "clusterResourceId": {
          "type": "string",
          "description": "Resource id of the cluster that follows a database owned by this cluster."
        },
        "attachedDatabaseConfigurationName": {
          "type": "string",
          "description": "Resource name of the attached database configuration in the follower cluster."
        },
        "databaseName": {
          "type": "string",
          "readOnly": true,
          "description": "The database name owned by this cluster that was followed. * in case following all databases."
        },
        "tableLevelSharingProperties": {
          "type": "object",
          "readOnly": true,
          "description": "Table level sharing specifications",
          "properties": {
            "tablesToInclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of tables to include in the follower database"
            },
            "tablesToExclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of tables to exclude from the follower database"
            },
            "externalTablesToInclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of external tables to include in the follower database"
            },
            "externalTablesToExclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of external tables to exclude from the follower database"
            },
            "materializedViewsToInclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of materialized views to include in the follower database"
            },
            "materializedViewsToExclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of materialized views to exclude from the follower database"
            },
            "functionsToInclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of functions to include in the follower database"
            },
            "functionsToExclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of functions to exclude from the follower database"
            }
          }
        },
        "databaseShareOrigin": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "Direct",
            "DataShare",
            "Other"
          ],
          "x-ms-enum": {
            "name": "DatabaseShareOrigin",
            "modelAsString": true
          },
          "description": "The origin of the following setup."
        }
      },
      "description": "A class representing the properties of a follower database object."
    },
    "DiagnoseVirtualNetworkResult": {
      "type": "object",
      "properties": {
        "findings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of network connectivity diagnostic finding"
        }
      }
    },
    "DataConnectionValidation": {
      "type": "object",
      "properties": {
        "dataConnectionName": {
          "type": "string",
          "description": "The name of the data connection."
        },
        "properties": {
          "type": "object",
          "required": [
            "kind"
          ],
          "properties": {
            "id": {
              "readOnly": true,
              "type": "string",
              "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
            },
            "name": {
              "readOnly": true,
              "type": "string",
              "description": "The name of the resource"
            },
            "type": {
              "readOnly": true,
              "type": "string",
              "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
            },
            "location": {
              "type": "string",
              "description": "Resource location."
            },
            "kind": {
              "description": "Kind of the endpoint for the data connection",
              "enum": [
                "EventHub",
                "EventGrid",
                "IotHub",
                "CosmosDb"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DataConnectionKind",
                "modelAsString": true
              }
            }
          },
          "description": "Class representing an data connection.",
          "discriminator": "kind"
        }
      },
      "description": "Class representing an data connection validation."
    },
    "EventHubDataConnection": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The Event Hub data connection properties to validate.",
          "type": "object",
          "properties": {
            "eventHubResourceId": {
              "type": "string",
              "description": "The resource ID of the event hub to be used to create a data connection."
            },
            "consumerGroup": {
              "type": "string",
              "description": "The event hub consumer group."
            },
            "tableName": {
              "type": "string",
              "description": "The table where the data should be ingested. Optionally the table information can be added to each message."
            },
            "mappingRuleName": {
              "type": "string",
              "description": "The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message."
            },
            "dataFormat": {
              "description": "The data format of the message. Optionally the data format can be added to each message.",
              "type": "string",
              "enum": [
                "MULTIJSON",
                "JSON",
                "CSV",
                "TSV",
                "SCSV",
                "SOHSV",
                "PSV",
                "TXT",
                "RAW",
                "SINGLEJSON",
                "AVRO",
                "TSVE",
                "PARQUET",
                "ORC",
                "APACHEAVRO",
                "W3CLOGFILE"
              ],
              "x-ms-enum": {
                "name": "eventHubDataFormat",
                "modelAsString": true
              }
            },
            "eventSystemProperties": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "System properties of the event hub"
            },
            "compression": {
              "description": "The event hub messages compression type",
              "type": "string",
              "enum": [
                "None",
                "GZip"
              ],
              "x-ms-enum": {
                "name": "compression",
                "modelAsString": true
              },
              "default": "None"
            },
            "provisioningState": {
              "readOnly": true,
              "description": "The provisioned state of the resource.",
              "type": "string",
              "enum": [
                "Running",
                "Creating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Moving",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            },
            "managedIdentityResourceId": {
              "type": "string",
              "description": "The resource ID of a managed identity (system or user assigned) to be used to authenticate with event hub."
            },
            "managedIdentityObjectId": {
              "type": "string",
              "readOnly": true,
              "description": "The object ID of the managedIdentityResourceId"
            },
            "databaseRouting": {
              "type": "string",
              "description": "Indication for database routing information from the data connection, by default only database routing information is allowed",
              "enum": [
                "Single",
                "Multi"
              ],
              "x-ms-enum": {
                "name": "DatabaseRouting",
                "modelAsString": true
              },
              "default": "Single"
            },
            "retrievalStartDate": {
              "description": "When defined, the data connection retrieves existing Event hub events created since the Retrieval start date. It can only retrieve events retained by the Event hub, based on its retention period.",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "eventHubResourceId",
            "consumerGroup"
          ]
        }
      },
      "allOf": [
        {
          "type": "object",
          "required": [
            "kind"
          ],
          "properties": {
            "id": {
              "readOnly": true,
              "type": "string",
              "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
            },
            "name": {
              "readOnly": true,
              "type": "string",
              "description": "The name of the resource"
            },
            "type": {
              "readOnly": true,
              "type": "string",
              "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
            },
            "location": {
              "type": "string",
              "description": "Resource location."
            },
            "kind": {
              "description": "Kind of the endpoint for the data connection",
              "enum": [
                "EventHub",
                "EventGrid",
                "IotHub",
                "CosmosDb"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DataConnectionKind",
                "modelAsString": true
              }
            }
          },
          "description": "Class representing an data connection.",
          "discriminator": "kind"
        }
      ],
      "description": "Class representing an event hub data connection.",
      "x-ms-discriminator-value": "EventHub"
    },
    "IotHubDataConnection": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The Iot Hub data connection properties.",
          "type": "object",
          "properties": {
            "iotHubResourceId": {
              "type": "string",
              "description": "The resource ID of the Iot hub to be used to create a data connection."
            },
            "consumerGroup": {
              "type": "string",
              "description": "The iot hub consumer group."
            },
            "tableName": {
              "type": "string",
              "description": "The table where the data should be ingested. Optionally the table information can be added to each message."
            },
            "mappingRuleName": {
              "type": "string",
              "description": "The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message."
            },
            "dataFormat": {
              "description": "The data format of the message. Optionally the data format can be added to each message.",
              "type": "string",
              "enum": [
                "MULTIJSON",
                "JSON",
                "CSV",
                "TSV",
                "SCSV",
                "SOHSV",
                "PSV",
                "TXT",
                "RAW",
                "SINGLEJSON",
                "AVRO",
                "TSVE",
                "PARQUET",
                "ORC",
                "APACHEAVRO",
                "W3CLOGFILE"
              ],
              "x-ms-enum": {
                "name": "iotHubDataFormat",
                "modelAsString": true
              }
            },
            "eventSystemProperties": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "System properties of the iot hub"
            },
            "sharedAccessPolicyName": {
              "type": "string",
              "description": "The name of the share access policy"
            },
            "databaseRouting": {
              "type": "string",
              "description": "Indication for database routing information from the data connection, by default only database routing information is allowed",
              "enum": [
                "Single",
                "Multi"
              ],
              "x-ms-enum": {
                "name": "DatabaseRouting",
                "modelAsString": true
              },
              "default": "Single"
            },
            "retrievalStartDate": {
              "description": "When defined, the data connection retrieves existing Event hub events created since the Retrieval start date. It can only retrieve events retained by the Event hub, based on its retention period.",
              "type": "string",
              "format": "date-time"
            },
            "provisioningState": {
              "readOnly": true,
              "description": "The provisioned state of the resource.",
              "type": "string",
              "enum": [
                "Running",
                "Creating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Moving",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            }
          },
          "required": [
            "iotHubResourceId",
            "consumerGroup",
            "sharedAccessPolicyName"
          ]
        }
      },
      "allOf": [
        {
          "type": "object",
          "required": [
            "kind"
          ],
          "properties": {
            "id": {
              "readOnly": true,
              "type": "string",
              "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
            },
            "name": {
              "readOnly": true,
              "type": "string",
              "description": "The name of the resource"
            },
            "type": {
              "readOnly": true,
              "type": "string",
              "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
            },
            "location": {
              "type": "string",
              "description": "Resource location."
            },
            "kind": {
              "description": "Kind of the endpoint for the data connection",
              "enum": [
                "EventHub",
                "EventGrid",
                "IotHub",
                "CosmosDb"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DataConnectionKind",
                "modelAsString": true
              }
            }
          },
          "description": "Class representing an data connection.",
          "discriminator": "kind"
        }
      ],
      "description": "Class representing an iot hub data connection.",
      "x-ms-discriminator-value": "IotHub"
    },
    "EventGridDataConnection": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The properties of the Event Grid data connection.",
          "type": "object",
          "properties": {
            "storageAccountResourceId": {
              "type": "string",
              "description": "The resource ID of the storage account where the data resides."
            },
            "eventGridResourceId": {
              "type": "string",
              "description": "The resource ID of the event grid that is subscribed to the storage account events."
            },
            "eventHubResourceId": {
              "type": "string",
              "description": "The resource ID where the event grid is configured to send events."
            },
            "consumerGroup": {
              "type": "string",
              "description": "The event hub consumer group."
            },
            "tableName": {
              "type": "string",
              "description": "The table where the data should be ingested. Optionally the table information can be added to each message."
            },
            "mappingRuleName": {
              "type": "string",
              "description": "The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message."
            },
            "dataFormat": {
              "description": "The data format of the message. Optionally the data format can be added to each message.",
              "type": "string",
              "enum": [
                "MULTIJSON",
                "JSON",
                "CSV",
                "TSV",
                "SCSV",
                "SOHSV",
                "PSV",
                "TXT",
                "RAW",
                "SINGLEJSON",
                "AVRO",
                "TSVE",
                "PARQUET",
                "ORC",
                "APACHEAVRO",
                "W3CLOGFILE"
              ],
              "x-ms-enum": {
                "name": "eventGridDataFormat",
                "modelAsString": true
              }
            },
            "ignoreFirstRecord": {
              "type": "boolean",
              "description": "A Boolean value that, if set to true, indicates that ingestion should ignore the first record of every file"
            },
            "blobStorageEventType": {
              "description": "The name of blob storage event type to process.",
              "type": "string",
              "enum": [
                "Microsoft.Storage.BlobCreated",
                "Microsoft.Storage.BlobRenamed"
              ],
              "x-ms-enum": {
                "name": "blobStorageEventType",
                "modelAsString": true
              }
            },
            "managedIdentityResourceId": {
              "type": "string",
              "description": "The resource ID of a managed identity (system or user assigned) to be used to authenticate with event hub and storage account."
            },
            "managedIdentityObjectId": {
              "type": "string",
              "readOnly": true,
              "description": "The object ID of managedIdentityResourceId"
            },
            "databaseRouting": {
              "type": "string",
              "description": "Indication for database routing information from the data connection, by default only database routing information is allowed",
              "enum": [
                "Single",
                "Multi"
              ],
              "x-ms-enum": {
                "name": "DatabaseRouting",
                "modelAsString": true
              },
              "default": "Single"
            },
            "provisioningState": {
              "readOnly": true,
              "description": "The provisioned state of the resource.",
              "type": "string",
              "enum": [
                "Running",
                "Creating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Moving",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            }
          },
          "required": [
            "storageAccountResourceId",
            "eventHubResourceId",
            "consumerGroup"
          ]
        }
      },
      "allOf": [
        {
          "type": "object",
          "required": [
            "kind"
          ],
          "properties": {
            "id": {
              "readOnly": true,
              "type": "string",
              "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
            },
            "name": {
              "readOnly": true,
              "type": "string",
              "description": "The name of the resource"
            },
            "type": {
              "readOnly": true,
              "type": "string",
              "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
            },
            "location": {
              "type": "string",
              "description": "Resource location."
            },
            "kind": {
              "description": "Kind of the endpoint for the data connection",
              "enum": [
                "EventHub",
                "EventGrid",
                "IotHub",
                "CosmosDb"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DataConnectionKind",
                "modelAsString": true
              }
            }
          },
          "description": "Class representing an data connection.",
          "discriminator": "kind"
        }
      ],
      "description": "Class representing an Event Grid data connection.",
      "x-ms-discriminator-value": "EventGrid"
    },
    "CosmosDbDataConnection": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The properties of the CosmosDb data connection.",
          "type": "object",
          "properties": {
            "tableName": {
              "type": "string",
              "description": "The case-sensitive name of the existing target table in your cluster. Retrieved data is ingested into this table."
            },
            "mappingRuleName": {
              "type": "string",
              "description": "The name of an existing mapping rule to use when ingesting the retrieved data."
            },
            "managedIdentityResourceId": {
              "type": "string",
              "description": "The resource ID of a managed system or user-assigned identity. The identity is used to authenticate with Cosmos DB."
            },
            "managedIdentityObjectId": {
              "type": "string",
              "readOnly": true,
              "description": "The object ID of the managed identity resource."
            },
            "cosmosDbAccountResourceId": {
              "type": "string",
              "description": "The resource ID of the Cosmos DB account used to create the data connection."
            },
            "cosmosDbDatabase": {
              "type": "string",
              "description": "The name of an existing database in the Cosmos DB account."
            },
            "cosmosDbContainer": {
              "type": "string",
              "description": "The name of an existing container in the Cosmos DB database."
            },
            "retrievalStartDate": {
              "description": "Optional. If defined, the data connection retrieves Cosmos DB documents created or updated after the specified retrieval start date.",
              "type": "string",
              "format": "date-time"
            },
            "provisioningState": {
              "readOnly": true,
              "description": "The provisioned state of the resource.",
              "type": "string",
              "enum": [
                "Running",
                "Creating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Moving",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            }
          },
          "required": [
            "tableName",
            "managedIdentityResourceId",
            "cosmosDbAccountResourceId",
            "cosmosDbDatabase",
            "cosmosDbContainer"
          ]
        }
      },
      "allOf": [
        {
          "type": "object",
          "required": [
            "kind"
          ],
          "properties": {
            "id": {
              "readOnly": true,
              "type": "string",
              "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
            },
            "name": {
              "readOnly": true,
              "type": "string",
              "description": "The name of the resource"
            },
            "type": {
              "readOnly": true,
              "type": "string",
              "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
            },
            "location": {
              "type": "string",
              "description": "Resource location."
            },
            "kind": {
              "description": "Kind of the endpoint for the data connection",
              "enum": [
                "EventHub",
                "EventGrid",
                "IotHub",
                "CosmosDb"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DataConnectionKind",
                "modelAsString": true
              }
            }
          },
          "description": "Class representing an data connection.",
          "discriminator": "kind"
        }
      ],
      "description": "Class representing a CosmosDb data connection.",
      "x-ms-discriminator-value": "CosmosDb"
    },
    "DataConnectionValidationListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "errorMessage": {
                "type": "string",
                "description": "A message which indicates a problem in data connection validation."
              }
            },
            "description": "The result returned from a data connection validation request."
          },
          "description": "The list of Kusto data connection validation errors."
        }
      },
      "description": "The list Kusto data connection validation result."
    },
    "DataConnectionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "kind"
            ],
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "location": {
                "type": "string",
                "description": "Resource location."
              },
              "kind": {
                "description": "Kind of the endpoint for the data connection",
                "enum": [
                  "EventHub",
                  "EventGrid",
                  "IotHub",
                  "CosmosDb"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "DataConnectionKind",
                  "modelAsString": true
                }
              }
            },
            "description": "Class representing an data connection.",
            "discriminator": "kind"
          },
          "description": "The list of Kusto data connections."
        }
      },
      "description": "The list Kusto data connections operation response."
    },
    "ClusterCheckNameRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Cluster name."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Kusto/clusters"
          ],
          "x-ms-enum": {
            "name": "ClusterType",
            "modelAsString": false
          },
          "description": "The type of resource, Microsoft.Kusto/clusters."
        }
      },
      "required": [
        "name",
        "type"
      ],
      "description": "The result returned from a cluster check name availability request."
    },
    "CheckNameRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Kusto/clusters/databases",
            "Microsoft.Kusto/clusters/attachedDatabaseConfigurations"
          ],
          "x-ms-enum": {
            "name": "Type",
            "modelAsString": false
          },
          "description": "The type of resource, for instance Microsoft.Kusto/clusters/databases."
        }
      },
      "required": [
        "name",
        "type"
      ],
      "description": "The result returned from a database check name availability request."
    },
    "AttachedDatabaseConfigurationsCheckNameRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Attached database resource name."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Kusto/clusters/attachedDatabaseConfigurations"
          ],
          "x-ms-enum": {
            "name": "AttachedDatabaseType",
            "modelAsString": false
          },
          "description": "The type of resource, for instance Microsoft.Kusto/clusters/attachedDatabaseConfigurations."
        }
      },
      "required": [
        "name",
        "type"
      ],
      "description": "The result returned from a AttachedDatabaseConfigurations check name availability request."
    },
    "ManagedPrivateEndpointsCheckNameRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Managed private endpoint resource name."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Kusto/clusters/managedPrivateEndpoints"
          ],
          "x-ms-enum": {
            "name": "ManagedPrivateEndpointsType",
            "modelAsString": false
          },
          "description": "The type of resource, for instance Microsoft.Kusto/clusters/managedPrivateEndpoints."
        }
      },
      "required": [
        "name",
        "type"
      ],
      "description": "The result returned from a managedPrivateEndpoints check name availability request."
    },
    "SandboxCustomImagesCheckNameRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Sandbox custom image resource name."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Kusto/clusters/sandboxCustomImages"
          ],
          "x-ms-enum": {
            "name": "SandboxCustomImageType",
            "modelAsString": false
          },
          "description": "The type of resource, for instance Microsoft.Kusto/clusters/sandboxCustomImages."
        }
      },
      "required": [
        "name",
        "type"
      ],
      "description": "The result returned from a sandboxCustomImage check name availability request."
    },
    "ClusterPrincipalAssignmentCheckNameRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Principal Assignment resource name."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Kusto/clusters/principalAssignments"
          ],
          "x-ms-enum": {
            "name": "PrincipalAssignmentType",
            "modelAsString": false
          },
          "description": "The type of resource, Microsoft.Kusto/clusters/principalAssignments."
        }
      },
      "required": [
        "name",
        "type"
      ],
      "description": "A principal assignment check name availability request."
    },
    "ClusterMigrateRequest": {
      "type": "object",
      "properties": {
        "clusterResourceId": {
          "type": "string",
          "description": "Resource ID of the destination cluster or kusto pool."
        }
      },
      "required": [
        "clusterResourceId"
      ],
      "description": "A cluster migrate request."
    },
    "DataConnectionCheckNameRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Data Connection name."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Kusto/clusters/databases/dataConnections"
          ],
          "x-ms-enum": {
            "name": "DataConnectionType",
            "modelAsString": false
          },
          "description": "The type of resource, Microsoft.Kusto/clusters/databases/dataConnections."
        }
      },
      "required": [
        "name",
        "type"
      ],
      "description": "A data connection check name availability request."
    },
    "ScriptCheckNameRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Script name."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Kusto/clusters/databases/scripts"
          ],
          "x-ms-enum": {
            "name": "ScriptType",
            "modelAsString": false
          },
          "description": "The type of resource, Microsoft.Kusto/clusters/databases/scripts."
        }
      },
      "required": [
        "name",
        "type"
      ],
      "description": "A script name availability request."
    },
    "DatabasePrincipalAssignmentCheckNameRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Principal Assignment resource name."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Kusto/clusters/databases/principalAssignments"
          ],
          "x-ms-enum": {
            "name": "DatabasePrincipalAssignmentType",
            "modelAsString": false
          },
          "description": "The type of resource, Microsoft.Kusto/clusters/databases/principalAssignments."
        }
      },
      "required": [
        "name",
        "type"
      ],
      "description": "A principal assignment check name availability request."
    },
    "CheckNameResult": {
      "type": "object",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Specifies a Boolean value that indicates if the name is available."
        },
        "name": {
          "type": "string",
          "description": "The name that was checked."
        },
        "message": {
          "type": "string",
          "description": "Message indicating an unavailable name due to a conflict, or a description of the naming rules that are violated."
        },
        "reason": {
          "type": "string",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "reason",
            "modelAsString": true
          },
          "description": "Message providing the reason why the given name is invalid."
        }
      },
      "description": "The result returned from a check name availability request."
    },
    "DatabaseInviteFollowerRequest": {
      "type": "object",
      "properties": {
        "inviteeEmail": {
          "type": "string",
          "description": "The email of the invited user for which the follower invitation is generated."
        },
        "tableLevelSharingProperties": {
          "type": "object",
          "description": "Table level sharing specifications",
          "properties": {
            "tablesToInclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of tables to include in the follower database"
            },
            "tablesToExclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of tables to exclude from the follower database"
            },
            "externalTablesToInclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of external tables to include in the follower database"
            },
            "externalTablesToExclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of external tables to exclude from the follower database"
            },
            "materializedViewsToInclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of materialized views to include in the follower database"
            },
            "materializedViewsToExclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of materialized views to exclude from the follower database"
            },
            "functionsToInclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of functions to include in the follower database"
            },
            "functionsToExclude": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of functions to exclude from the follower database"
            }
          }
        }
      },
      "required": [
        "inviteeEmail"
      ],
      "description": "The request to invite a follower to a database."
    },
    "DatabaseInviteFollowerResult": {
      "type": "object",
      "properties": {
        "generatedInvitation": {
          "type": "string",
          "description": "The generated invitation token."
        }
      },
      "description": "The result returned from a follower invitation generation request."
    },
    "ListResourceSkusResult": {
      "description": "List of available SKUs for a Kusto Cluster.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "resourceType": {
                "type": "string",
                "description": "Resource Namespace and Type."
              },
              "sku": {
                "description": "The SKU details.",
                "type": "object",
                "required": [
                  "name",
                  "tier"
                ],
                "properties": {
                  "name": {
                    "description": "SKU name.",
                    "type": "string",
                    "enum": [
                      "Dev(No SLA)_Standard_D11_v2",
                      "Dev(No SLA)_Standard_E2a_v4",
                      "Standard_D11_v2",
                      "Standard_D12_v2",
                      "Standard_D13_v2",
                      "Standard_D14_v2",
                      "Standard_D32d_v4",
                      "Standard_D16d_v5",
                      "Standard_D32d_v5",
                      "Standard_DS13_v2+1TB_PS",
                      "Standard_DS13_v2+2TB_PS",
                      "Standard_DS14_v2+3TB_PS",
                      "Standard_DS14_v2+4TB_PS",
                      "Standard_L4s",
                      "Standard_L8s",
                      "Standard_L16s",
                      "Standard_L8s_v2",
                      "Standard_L16s_v2",
                      "Standard_L8s_v3",
                      "Standard_L16s_v3",
                      "Standard_L32s_v3",
                      "Standard_L8as_v3",
                      "Standard_L16as_v3",
                      "Standard_L32as_v3",
                      "Standard_E64i_v3",
                      "Standard_E80ids_v4",
                      "Standard_E2a_v4",
                      "Standard_E4a_v4",
                      "Standard_E8a_v4",
                      "Standard_E16a_v4",
                      "Standard_E8as_v4+1TB_PS",
                      "Standard_E8as_v4+2TB_PS",
                      "Standard_E16as_v4+3TB_PS",
                      "Standard_E16as_v4+4TB_PS",
                      "Standard_E8as_v5+1TB_PS",
                      "Standard_E8as_v5+2TB_PS",
                      "Standard_E16as_v5+3TB_PS",
                      "Standard_E16as_v5+4TB_PS",
                      "Standard_E2ads_v5",
                      "Standard_E4ads_v5",
                      "Standard_E8ads_v5",
                      "Standard_E16ads_v5",
                      "Standard_EC8as_v5+1TB_PS",
                      "Standard_EC8as_v5+2TB_PS",
                      "Standard_EC16as_v5+3TB_PS",
                      "Standard_EC16as_v5+4TB_PS",
                      "Standard_EC8ads_v5",
                      "Standard_EC16ads_v5",
                      "Standard_E8s_v4+1TB_PS",
                      "Standard_E8s_v4+2TB_PS",
                      "Standard_E16s_v4+3TB_PS",
                      "Standard_E16s_v4+4TB_PS",
                      "Standard_E8s_v5+1TB_PS",
                      "Standard_E8s_v5+2TB_PS",
                      "Standard_E16s_v5+3TB_PS",
                      "Standard_E16s_v5+4TB_PS",
                      "Standard_E2d_v4",
                      "Standard_E4d_v4",
                      "Standard_E8d_v4",
                      "Standard_E16d_v4",
                      "Standard_E2d_v5",
                      "Standard_E4d_v5",
                      "Standard_E8d_v5",
                      "Standard_E16d_v5"
                    ],
                    "x-ms-enum": {
                      "name": "AzureSkuName",
                      "modelAsString": true
                    }
                  },
                  "capacity": {
                    "description": "The number of instances of the cluster.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "tier": {
                    "description": "SKU tier.",
                    "type": "string",
                    "enum": [
                      "Basic",
                      "Standard"
                    ],
                    "x-ms-enum": {
                      "name": "AzureSkuTier",
                      "modelAsString": true
                    }
                  }
                }
              },
              "capacity": {
                "description": "The number of instances of the cluster.",
                "type": "object",
                "required": [
                  "minimum",
                  "maximum",
                  "default",
                  "scaleType"
                ],
                "properties": {
                  "scaleType": {
                    "description": "Scale type.",
                    "type": "string",
                    "enum": [
                      "automatic",
                      "manual",
                      "none"
                    ],
                    "x-ms-enum": {
                      "name": "AzureScaleType",
                      "modelAsString": true
                    }
                  },
                  "minimum": {
                    "description": "Minimum allowed capacity.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "maximum": {
                    "description": "Maximum allowed capacity.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "default": {
                    "description": "The default capacity that would be used.",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            },
            "description": "Azure resource SKU definition."
          },
          "description": "The collection of available SKUs for an existing resource."
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "title": "Result of the request to list REST API operations. It contains a list of operations and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "title": "A REST API operation",
            "type": "object",
            "properties": {
              "name": {
                "title": "The operation name.",
                "description": "This is of the format {provider}/{resource}/{operation}.",
                "type": "string"
              },
              "display": {
                "type": "object",
                "title": "The object that describes the operation.",
                "properties": {
                  "provider": {
                    "title": "Friendly name of the resource provider.",
                    "type": "string"
                  },
                  "operation": {
                    "title": "The operation type.",
                    "description": "For example: read, write, delete.",
                    "type": "string"
                  },
                  "resource": {
                    "title": "The resource type on which the operation is performed.",
                    "type": "string"
                  },
                  "description": {
                    "title": "The friendly name of the operation.",
                    "type": "string"
                  }
                }
              },
              "origin": {
                "title": "The intended executor of the operation.",
                "type": "string"
              },
              "properties": {
                "title": "Properties of the operation.",
                "type": "object",
                "x-ms-client-flatten": true
              }
            }
          },
          "title": "The list of operations supported by the resource provider."
        },
        "nextLink": {
          "type": "string",
          "title": "The URL to get the next set of operation list results if there are any."
        }
      }
    },
    "Operation": {
      "title": "A REST API operation",
      "type": "object",
      "properties": {
        "name": {
          "title": "The operation name.",
          "description": "This is of the format {provider}/{resource}/{operation}.",
          "type": "string"
        },
        "display": {
          "type": "object",
          "title": "The object that describes the operation.",
          "properties": {
            "provider": {
              "title": "Friendly name of the resource provider.",
              "type": "string"
            },
            "operation": {
              "title": "The operation type.",
              "description": "For example: read, write, delete.",
              "type": "string"
            },
            "resource": {
              "title": "The resource type on which the operation is performed.",
              "type": "string"
            },
            "description": {
              "title": "The friendly name of the operation.",
              "type": "string"
            }
          }
        },
        "origin": {
          "title": "The intended executor of the operation.",
          "type": "string"
        },
        "properties": {
          "title": "Properties of the operation.",
          "type": "object",
          "x-ms-client-flatten": true
        }
      }
    },
    "Identity": {
      "type": "object",
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal ID of resource identity."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant ID of resource."
        },
        "type": {
          "type": "string",
          "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove all identities.",
          "enum": [
            "None",
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned, UserAssigned"
          ],
          "x-ms-enum": {
            "name": "IdentityType",
            "modelAsString": true
          }
        },
        "userAssignedIdentities": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "principalId": {
                "readOnly": true,
                "type": "string",
                "description": "The principal id of user assigned identity."
              },
              "clientId": {
                "readOnly": true,
                "type": "string",
                "description": "The client id of user assigned identity."
              }
            }
          },
          "description": "The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
        }
      },
      "required": [
        "type"
      ],
      "description": "Identity for the resource."
    },
    "KeyVaultProperties": {
      "type": "object",
      "description": "Properties of the key vault.",
      "properties": {
        "keyName": {
          "type": "string",
          "description": "The name of the key vault key.",
          "x-ms-client-name": "KeyName"
        },
        "keyVersion": {
          "type": "string",
          "description": "The version of the key vault key.",
          "x-ms-client-name": "KeyVersion"
        },
        "keyVaultUri": {
          "type": "string",
          "description": "The Uri of the key vault.",
          "x-ms-client-name": "KeyVaultUri"
        },
        "userIdentity": {
          "type": "string",
          "description": "The user assigned identity (ARM resource id) that has access to the key.",
          "x-ms-client-name": "UserIdentity"
        }
      }
    },
    "SuspensionDetails": {
      "description": "The database suspension details. If the database is suspended, this object contains information related to the database's suspension state.",
      "type": "object",
      "properties": {
        "suspensionStartDate": {
          "description": "The starting date and time of the suspension state.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "LanguageExtensionName": {
      "description": "Language extension that can run within KQL query.",
      "type": "string",
      "enum": [
        "PYTHON",
        "R"
      ],
      "x-ms-enum": {
        "name": "languageExtensionName",
        "modelAsString": true
      }
    },
    "LanguageExtensionImageName": {
      "description": "Language extension image name.",
      "type": "string",
      "enum": [
        "R",
        "Python3_6_5",
        "Python3_10_8",
        "Python3_10_8_DL",
        "PythonCustomImage",
        "Python3_11_7",
        "Python3_11_7_DL"
      ],
      "x-ms-enum": {
        "name": "languageExtensionImageName",
        "modelAsString": true
      }
    },
    "LanguageExtensionCustomImageName": {
      "description": "The sandbox custom image name that should be enabled as the active language extension. Sandbox custom image is a cluster sub resource. When this property is set, LanguageExtensionImageName should be set to 'PythonCustomImage'.",
      "type": "string"
    },
    "LanguageExtension": {
      "type": "object",
      "description": "The language extension object.",
      "properties": {
        "languageExtensionName": {
          "description": "The language extension name.",
          "type": "string",
          "enum": [
            "PYTHON",
            "R"
          ],
          "x-ms-enum": {
            "name": "languageExtensionName",
            "modelAsString": true
          }
        },
        "languageExtensionImageName": {
          "description": "The language extension image name.",
          "type": "string",
          "enum": [
            "R",
            "Python3_6_5",
            "Python3_10_8",
            "Python3_10_8_DL",
            "PythonCustomImage",
            "Python3_11_7",
            "Python3_11_7_DL"
          ],
          "x-ms-enum": {
            "name": "languageExtensionImageName",
            "modelAsString": true
          }
        },
        "languageExtensionCustomImageName": {
          "description": "The language extension custom image name.",
          "type": "string"
        }
      }
    },
    "LanguageExtensionsList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "The language extension object.",
            "properties": {
              "languageExtensionName": {
                "description": "The language extension name.",
                "type": "string",
                "enum": [
                  "PYTHON",
                  "R"
                ],
                "x-ms-enum": {
                  "name": "languageExtensionName",
                  "modelAsString": true
                }
              },
              "languageExtensionImageName": {
                "description": "The language extension image name.",
                "type": "string",
                "enum": [
                  "R",
                  "Python3_6_5",
                  "Python3_10_8",
                  "Python3_10_8_DL",
                  "PythonCustomImage",
                  "Python3_11_7",
                  "Python3_11_7_DL"
                ],
                "x-ms-enum": {
                  "name": "languageExtensionImageName",
                  "modelAsString": true
                }
              },
              "languageExtensionCustomImageName": {
                "description": "The language extension custom image name.",
                "type": "string"
              }
            }
          },
          "description": "The list of language extensions."
        }
      },
      "description": "The list of language extension objects."
    },
    "CalloutPoliciesList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "calloutUriRegex": {
                "type": "string",
                "description": "Regular expression or FQDN pattern for the callout URI."
              },
              "calloutType": {
                "type": "string",
                "enum": [
                  "kusto",
                  "sql",
                  "cosmosdb",
                  "external_data",
                  "azure_digital_twins",
                  "sandbox_artifacts",
                  "webapi",
                  "mysql",
                  "postgresql",
                  "genevametrics",
                  "azure_openai"
                ],
                "x-ms-enum": {
                  "name": "calloutType",
                  "modelAsString": true
                },
                "description": "Type of the callout service, specifying the kind of external resource or service being accessed."
              },
              "outboundAccess": {
                "type": "string",
                "enum": [
                  "Allow",
                  "Deny"
                ],
                "x-ms-enum": {
                  "name": "outboundAccess",
                  "modelAsString": true
                },
                "description": "Indicates whether outbound access is permitted for the specified URI pattern."
              },
              "calloutId": {
                "type": "string",
                "description": "Unique identifier for the callout configuration.",
                "readOnly": true
              }
            },
            "description": "Configuration for external callout policies, including URI patterns, access types, and service types."
          },
          "description": "A list of the service's callout policies."
        },
        "nextLink": {
          "type": "string",
          "title": "The URL to get the next set of callout policies list results if there are any."
        }
      },
      "description": "A list of the service's callout policy objects."
    },
    "ProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The provisioned state of the resource.",
      "enum": [
        "Running",
        "Creating",
        "Deleting",
        "Succeeded",
        "Failed",
        "Moving",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "OperationResult": {
      "description": "Operation Result Entity.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "description": "ID of the resource.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Name of the resource.",
          "type": "string"
        },
        "status": {
          "description": "status of the Operation result.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Canceled",
            "Failed",
            "Running"
          ],
          "x-ms-enum": {
            "name": "Status",
            "modelAsString": true
          }
        },
        "startTime": {
          "description": "The operation start time",
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "description": "The operation end time",
          "type": "string",
          "format": "date-time"
        },
        "percentComplete": {
          "type": "number",
          "format": "double",
          "minimum": 0,
          "maximum": 100,
          "description": "Percentage completed."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of the operation results",
          "type": "object",
          "properties": {
            "operationKind": {
              "type": "string",
              "description": "The kind of the operation."
            },
            "provisioningState": {
              "readOnly": true,
              "description": "The provisioned state of the resource.",
              "type": "string",
              "enum": [
                "Running",
                "Creating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Moving",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            },
            "operationState": {
              "type": "string",
              "description": "The state of the operation."
            }
          }
        },
        "error": {
          "x-ms-client-flatten": true,
          "description": "Object that contains the error code and message if the operation failed.",
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "The code of the error."
            },
            "message": {
              "type": "string",
              "description": "The error message."
            }
          }
        }
      }
    },
    "Status": {
      "readOnly": true,
      "description": "The status of operation.",
      "type": "string",
      "enum": [
        "Succeeded",
        "Canceled",
        "Failed",
        "Running"
      ],
      "x-ms-enum": {
        "name": "Status",
        "modelAsString": true
      }
    },
    "OperationResultProperties": {
      "type": "object",
      "properties": {
        "operationKind": {
          "type": "string",
          "description": "The kind of the operation."
        },
        "provisioningState": {
          "readOnly": true,
          "description": "The provisioned state of the resource.",
          "type": "string",
          "enum": [
            "Running",
            "Creating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Moving",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "operationState": {
          "type": "string",
          "description": "The state of the operation."
        }
      },
      "description": "Operation result properties"
    },
    "OperationResultErrorProperties": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "The code of the error."
        },
        "message": {
          "type": "string",
          "description": "The error message."
        }
      },
      "description": "Operation result error properties"
    },
    "TableLevelSharingProperties": {
      "type": "object",
      "properties": {
        "tablesToInclude": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of tables to include in the follower database"
        },
        "tablesToExclude": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of tables to exclude from the follower database"
        },
        "externalTablesToInclude": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of external tables to include in the follower database"
        },
        "externalTablesToExclude": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of external tables to exclude from the follower database"
        },
        "materializedViewsToInclude": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of materialized views to include in the follower database"
        },
        "materializedViewsToExclude": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of materialized views to exclude from the follower database"
        },
        "functionsToInclude": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of functions to include in the follower database"
        },
        "functionsToExclude": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of functions to exclude from the follower database"
        }
      },
      "description": "Tables that will be included and excluded in the follower database"
    },
    "AcceptedAudiences": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "GUID or valid URL representing an accepted audience."
        }
      },
      "description": "Represents an accepted audience trusted by the cluster."
    },
    "DatabaseShareOrigin": {
      "type": "string",
      "readOnly": true,
      "enum": [
        "Direct",
        "DataShare",
        "Other"
      ],
      "x-ms-enum": {
        "name": "DatabaseShareOrigin",
        "modelAsString": true
      },
      "description": "The origin of the following setup."
    },
    "ResourceSkuCapabilities": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "An invariant to describe the feature."
        },
        "value": {
          "type": "string",
          "readOnly": true,
          "description": "An invariant if the feature is measured by quantity."
        }
      },
      "description": "Describes The SKU capabilities object."
    },
    "ResourceSkuZoneDetails": {
      "type": "object",
      "properties": {
        "name": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "description": "The set of zones that the SKU is available in with the specified capabilities."
        },
        "capabilities": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "readOnly": true,
                "description": "An invariant to describe the feature."
              },
              "value": {
                "type": "string",
                "readOnly": true,
                "description": "An invariant if the feature is measured by quantity."
              }
            },
            "description": "Describes The SKU capabilities object."
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "A list of capabilities that are available for the SKU in the specified list of zones."
        }
      },
      "description": "Describes The zonal capabilities of a SKU."
    }
  },
  "parameters": {
    "ClusterNameParameter": {
      "name": "clusterName",
      "in": "path",
      "description": "The name of the Kusto cluster.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "pattern": "^.*$"
    },
    "AttachedDatabaseConfigurationNameParameter": {
      "name": "attachedDatabaseConfigurationName",
      "in": "path",
      "description": "The name of the attached database configuration.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "pattern": "^.*$"
    },
    "DatabaseNameParameter": {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database in the Kusto cluster.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "pattern": "^.*$"
    },
    "DataConnectionNameParameter": {
      "name": "dataConnectionName",
      "in": "path",
      "description": "The name of the data connection.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "pattern": "^.*$"
    },
    "PrincipalAssignmentNameParameter": {
      "name": "principalAssignmentName",
      "in": "path",
      "description": "The name of the Kusto principalAssignment.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "pattern": "^.*$"
    },
    "ScriptNameParameter": {
      "name": "scriptName",
      "in": "path",
      "description": "The name of the Kusto database script.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "pattern": "^.*$"
    },
    "SandboxCustomImageNameParameter": {
      "name": "sandboxCustomImageName",
      "in": "path",
      "description": "The name of the sandbox custom image.",
      "required": true,
      "x-ms-parameter-location": "method",
      "type": "string",
      "pattern": "^.*$"
    },
    "PrivateEndpointConnectionNameParameter": {
      "name": "privateEndpointConnectionName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The name of the private endpoint connection.",
      "pattern": "^.*$"
    },
    "PrivateLinkResourceNameParameter": {
      "name": "privateLinkResourceName",
      "in": "path",
      "description": "The name of the private link resource.",
      "required": true,
      "x-ms-parameter-location": "method",
      "type": "string",
      "pattern": "^.*$"
    },
    "ManagedPrivateEndpointNameParameter": {
      "name": "managedPrivateEndpointName",
      "in": "path",
      "description": "The name of the managed private endpoint.",
      "required": true,
      "x-ms-parameter-location": "method",
      "type": "string",
      "pattern": "^.*$"
    },
    "callerRoleParameter": {
      "name": "callerRole",
      "in": "query",
      "required": false,
      "type": "string",
      "enum": [
        "Admin",
        "None"
      ],
      "x-ms-enum": {
        "name": "callerRole",
        "modelAsString": true
      },
      "default": "Admin",
      "x-ms-parameter-location": "method",
      "description": "By default, any user who run operation on a database become an Admin on it. This property allows the caller to exclude the caller from Admins list."
    }
  }
}