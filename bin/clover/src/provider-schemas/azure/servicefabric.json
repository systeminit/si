{
  "swagger": "2.0",
  "info": {
    "title": "Azure servicefabric",
    "version": "2024-04-01",
    "description": "Azure servicefabric service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applicationTypes/{applicationTypeName}": {
      "get": {
        "tags": [
          "ApplicationType"
        ],
        "operationId": "ApplicationTypes_Get",
        "summary": "Gets a Service Fabric application type name resource.",
        "description": "Get a Service Fabric application type name resource created or in the process of being created in the Service Fabric cluster resource.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2021-06-01\" for this specification.",
            "required": true,
            "type": "string",
            "enum": [
              "2021-06-01"
            ],
            "default": "2021-06-01",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The application type name resource",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "It will be deprecated in New API, resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Azure resource etag.",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "The application type name properties",
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationType"
        ],
        "operationId": "ApplicationTypes_CreateOrUpdate",
        "summary": "Creates or updates a Service Fabric application type name resource.",
        "description": "Create or update a Service Fabric application type name resource with the specified name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2021-06-01\" for this specification.",
            "required": true,
            "type": "string",
            "enum": [
              "2021-06-01"
            ],
            "default": "2021-06-01",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The application type name resource.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The application type name resource",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "It will be deprecated in New API, resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Azure resource etag.",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "The application type name properties",
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response."
                    }
                  }
                }
              }
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The application type name resource",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "It will be deprecated in New API, resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Azure resource etag.",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "The application type name properties",
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationType"
        ],
        "operationId": "ApplicationTypes_Delete",
        "summary": "Deletes a Service Fabric application type name resource.",
        "description": "Delete a Service Fabric application type name resource with the specified name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2021-06-01\" for this specification.",
            "required": true,
            "type": "string",
            "enum": [
              "2021-06-01"
            ],
            "default": "2021-06-01",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "202": {
            "description": "The request was accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "The resource was not found."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applicationTypes": {
      "get": {
        "tags": [
          "ApplicationType"
        ],
        "operationId": "ApplicationTypes_List",
        "summary": "Gets the list of application type name resources created in the specified Service Fabric cluster resource.",
        "description": "Gets all application type name resources created or in the process of being created in the Service Fabric cluster resource.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2021-06-01\" for this specification.",
            "required": true,
            "type": "string",
            "enum": [
              "2021-06-01"
            ],
            "default": "2021-06-01",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The list of application type names.",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "The application type name resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Azure resource identifier.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "Azure resource name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "Azure resource type.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "It will be deprecated in New API, resource location depends on the parent resource.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Azure resource tags.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "etag": {
                        "type": "string",
                        "description": "Azure resource etag.",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource."
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource."
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)."
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "description": "The application type name properties",
                        "properties": {
                          "provisioningState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The current deployment or provisioning state, which only appears in the response."
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of application type list results if there are any.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applicationTypes/{applicationTypeName}/versions/{version}": {
      "get": {
        "tags": [
          "ApplicationTypeVersion"
        ],
        "operationId": "ApplicationTypeVersions_Get",
        "summary": "Gets a Service Fabric application type version resource.",
        "description": "Get a Service Fabric application type version resource created or in the process of being created in the Service Fabric application type name resource.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The application type version.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2021-06-01\" for this specification.",
            "required": true,
            "type": "string",
            "enum": [
              "2021-06-01"
            ],
            "default": "2021-06-01",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "An application type version resource for the specified application type name resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "It will be deprecated in New API, resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Azure resource etag.",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "The properties of the application type version resource.",
                  "required": [
                    "appPackageUrl"
                  ],
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response"
                    },
                    "appPackageUrl": {
                      "type": "string",
                      "description": "The URL to the application package"
                    },
                    "defaultParameterList": {
                      "readOnly": true,
                      "type": "object",
                      "description": "List of application type parameters that can be overridden when creating or updating the application.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationTypeVersion"
        ],
        "operationId": "ApplicationTypeVersions_CreateOrUpdate",
        "summary": "Creates or updates a Service Fabric application type version resource.",
        "description": "Create or update a Service Fabric application type version resource with the specified name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The application type version.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2021-06-01\" for this specification.",
            "required": true,
            "type": "string",
            "enum": [
              "2021-06-01"
            ],
            "default": "2021-06-01",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The application type version resource.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "An application type version resource for the specified application type name resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "It will be deprecated in New API, resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Azure resource etag.",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "The properties of the application type version resource.",
                  "required": [
                    "appPackageUrl"
                  ],
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response"
                    },
                    "appPackageUrl": {
                      "type": "string",
                      "description": "The URL to the application package"
                    },
                    "defaultParameterList": {
                      "readOnly": true,
                      "type": "object",
                      "description": "List of application type parameters that can be overridden when creating or updating the application.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "The request was accepted and the operation will complete asynchronously.",
            "schema": {
              "type": "object",
              "description": "An application type version resource for the specified application type name resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "It will be deprecated in New API, resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Azure resource etag.",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "The properties of the application type version resource.",
                  "required": [
                    "appPackageUrl"
                  ],
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response"
                    },
                    "appPackageUrl": {
                      "type": "string",
                      "description": "The URL to the application package"
                    },
                    "defaultParameterList": {
                      "readOnly": true,
                      "type": "object",
                      "description": "List of application type parameters that can be overridden when creating or updating the application.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationTypeVersion"
        ],
        "operationId": "ApplicationTypeVersions_Delete",
        "summary": "Deletes a Service Fabric application type version resource.",
        "description": "Delete a Service Fabric application type version resource with the specified name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The application type version.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2021-06-01\" for this specification.",
            "required": true,
            "type": "string",
            "enum": [
              "2021-06-01"
            ],
            "default": "2021-06-01",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "202": {
            "description": "The request was accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "The resource was not found."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applicationTypes/{applicationTypeName}/versions": {
      "get": {
        "tags": [
          "ApplicationTypeVersion"
        ],
        "operationId": "ApplicationTypeVersions_List",
        "summary": "Gets the list of application type version resources created in the specified Service Fabric application type name resource.",
        "description": "Gets all application type version resources created or in the process of being created in the Service Fabric application type name resource.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2021-06-01\" for this specification.",
            "required": true,
            "type": "string",
            "enum": [
              "2021-06-01"
            ],
            "default": "2021-06-01",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The list of application type version resources for the specified application type name resource.",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "An application type version resource for the specified application type name resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Azure resource identifier.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "Azure resource name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "Azure resource type.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "It will be deprecated in New API, resource location depends on the parent resource.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Azure resource tags.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "etag": {
                        "type": "string",
                        "description": "Azure resource etag.",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource."
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource."
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)."
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "description": "The properties of the application type version resource.",
                        "required": [
                          "appPackageUrl"
                        ],
                        "properties": {
                          "provisioningState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The current deployment or provisioning state, which only appears in the response"
                          },
                          "appPackageUrl": {
                            "type": "string",
                            "description": "The URL to the application package"
                          },
                          "defaultParameterList": {
                            "readOnly": true,
                            "type": "object",
                            "description": "List of application type parameters that can be overridden when creating or updating the application.",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of application type version list results if there are any.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applications/{applicationName}": {
      "get": {
        "tags": [
          "Application"
        ],
        "operationId": "Applications_Get",
        "summary": "Gets a Service Fabric application resource.",
        "description": "Get a Service Fabric application resource created or in the process of being created in the Service Fabric cluster resource.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2021-06-01\" for this specification.",
            "required": true,
            "type": "string",
            "enum": [
              "2021-06-01"
            ],
            "default": "2021-06-01",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The application resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "It will be deprecated in New API, resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Azure resource etag.",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "identity": {
                  "type": "object",
                  "description": "Describes the managed identities for an Azure resource.",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The principal id of the managed identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The tenant id of the managed identity. This property will only be provided for a system assigned identity."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of managed identity for the resource.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedIdentityType",
                        "modelAsString": false,
                        "values": [
                          {
                            "value": "SystemAssigned",
                            "description": "Indicates that system assigned identity is associated with the resource."
                          },
                          {
                            "value": "UserAssigned",
                            "description": "Indicates that user assigned identity is associated with the resource."
                          },
                          {
                            "value": "SystemAssigned, UserAssigned",
                            "description": "Indicates that both system assigned and user assigned identity are associated with the resource."
                          },
                          {
                            "value": "None",
                            "description": "Indicates that no identity is associated with the resource."
                          }
                        ]
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\n",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The principal id of user assigned identity."
                          },
                          "clientId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The client id of user assigned identity."
                          }
                        }
                      }
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "The application resource properties.",
                  "properties": {
                    "typeVersion": {
                      "type": "string",
                      "description": "The version of the application type as defined in the application manifest."
                    },
                    "parameters": {
                      "type": "object",
                      "description": "List of application parameters with overridden values from their default values specified in the application manifest.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "upgradePolicy": {
                      "type": "object",
                      "description": "Describes the policy for a monitored application upgrade.",
                      "properties": {
                        "upgradeReplicaSetCheckTimeout": {
                          "type": "string",
                          "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer)."
                        },
                        "forceRestart": {
                          "type": "boolean",
                          "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).",
                          "default": false
                        },
                        "rollingUpgradeMonitoringPolicy": {
                          "type": "object",
                          "description": "The policy used for monitoring the application upgrade",
                          "properties": {
                            "failureAction": {
                              "type": "string",
                              "description": "The activation Mode of the service package",
                              "enum": [
                                "Rollback",
                                "Manual"
                              ],
                              "x-ms-enum": {
                                "name": "ArmUpgradeFailureAction",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "Rollback",
                                    "description": "Indicates that a rollback of the upgrade will be performed by Service Fabric if the upgrade fails."
                                  },
                                  {
                                    "value": "Manual",
                                    "description": "Indicates that a manual repair will need to be performed by the administrator if the upgrade fails. Service Fabric will not proceed to the next upgrade domain automatically."
                                  }
                                ]
                              }
                            },
                            "healthCheckWaitDuration": {
                              "type": "string",
                              "description": "The amount of time to wait after completing an upgrade domain before applying health policies. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                              "default": "0"
                            },
                            "healthCheckStableDuration": {
                              "type": "string",
                              "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                              "default": "PT0H2M0S"
                            },
                            "healthCheckRetryTimeout": {
                              "type": "string",
                              "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                              "default": "PT0H10M0S"
                            },
                            "upgradeTimeout": {
                              "type": "string",
                              "description": "The amount of time the overall upgrade has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                              "default": "P10675199DT02H48M05.4775807S"
                            },
                            "upgradeDomainTimeout": {
                              "type": "string",
                              "description": "The amount of time each upgrade domain has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                              "default": "P10675199DT02H48M05.4775807S"
                            }
                          }
                        },
                        "applicationHealthPolicy": {
                          "type": "object",
                          "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
                          "properties": {
                            "considerWarningAsError": {
                              "type": "boolean",
                              "description": "Indicates whether warnings are treated with the same severity as errors.",
                              "default": false
                            },
                            "maxPercentUnhealthyDeployedApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.\nThe percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.\nThis is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n",
                              "default": 0
                            },
                            "defaultServiceTypeHealthPolicy": {
                              "description": "The health policy used by default to evaluate the health of a service type.",
                              "type": "object",
                              "properties": {
                                "maxPercentUnhealthyServices": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                  "default": 0,
                                  "minimum": 0,
                                  "maximum": 100
                                },
                                "maxPercentUnhealthyPartitionsPerService": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.\n",
                                  "default": 0,
                                  "minimum": 0,
                                  "maximum": 100
                                },
                                "maxPercentUnhealthyReplicasPerPartition": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.\n",
                                  "default": 0,
                                  "minimum": 0,
                                  "maximum": 100
                                }
                              }
                            },
                            "serviceTypeHealthPolicyMap": {
                              "description": "The map with service type health policy per service type name. The map is empty by default.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                                "properties": {
                                  "maxPercentUnhealthyServices": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                    "default": 0,
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentUnhealthyPartitionsPerService": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.\n",
                                    "default": 0,
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentUnhealthyReplicasPerPartition": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.\n",
                                    "default": 0,
                                    "minimum": 0,
                                    "maximum": 100
                                  }
                                }
                              }
                            }
                          }
                        },
                        "upgradeMode": {
                          "type": "string",
                          "description": "The mode used to monitor health during a rolling upgrade. The values are UnmonitoredAuto, UnmonitoredManual, and Monitored.",
                          "enum": [
                            "Invalid",
                            "UnmonitoredAuto",
                            "UnmonitoredManual",
                            "Monitored"
                          ],
                          "default": "Monitored",
                          "x-ms-enum": {
                            "name": "RollingUpgradeMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Invalid",
                                "description": "Indicates the upgrade mode is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                              },
                              {
                                "value": "UnmonitoredAuto",
                                "description": "The upgrade will proceed automatically without performing any health monitoring. The value is 1"
                              },
                              {
                                "value": "UnmonitoredManual",
                                "description": "The upgrade will stop after completing each upgrade domain, giving the opportunity to manually monitor health before proceeding. The value is 2"
                              },
                              {
                                "value": "Monitored",
                                "description": "The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 3"
                              }
                            ]
                          }
                        },
                        "recreateApplication": {
                          "type": "boolean",
                          "description": "Determines whether the application should be recreated on update. If value=true, the rest of the upgrade policy parameters are not allowed and it will result in availability loss."
                        }
                      }
                    },
                    "minimumNodes": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.",
                      "minimum": 0
                    },
                    "maximumNodes": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.",
                      "minimum": 0,
                      "default": 0
                    },
                    "removeApplicationCapacity": {
                      "type": "boolean",
                      "description": "Remove the current application capacity settings."
                    },
                    "metrics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Describes capacity information for a custom resource balancing metric. This can be used to limit the total consumption of this metric by the services of this application.\n",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the metric."
                          },
                          "maximumCapacity": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The maximum node capacity for Service Fabric application.\nThis is the maximum Load for an instance of this application on a single node. Even if the capacity of node is greater than this value, Service Fabric will limit the total load of services within the application on each node to this value.\nIf set to zero, capacity for this metric is unlimited on each node.\nWhen creating a new application with application capacity defined, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.\nWhen updating existing application with application capacity, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.\n"
                          },
                          "reservationCapacity": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The node reservation capacity for Service Fabric application.\nThis is the amount of load which is reserved on nodes which have instances of this application.\nIf MinimumNodes is specified, then the product of these values will be the capacity reserved in the cluster for the application.\nIf set to zero, no capacity is reserved for this metric.\nWhen setting application capacity or when updating application capacity; this value must be smaller than or equal to MaximumCapacity for each metric.\n"
                          },
                          "totalApplicationCapacity": {
                            "description": "The total metric capacity for Service Fabric application.\nThis is the total metric capacity for this application in the cluster. Service Fabric will try to limit the sum of loads of services within the application to this value.\nWhen creating a new application with application capacity defined, the product of MaximumNodes and MaximumCapacity must always be smaller than or equal to this value.\n",
                            "type": "integer",
                            "format": "int64"
                          }
                        }
                      },
                      "description": "List of application capacity metric description."
                    },
                    "managedIdentities": {
                      "description": "List of user assigned identities for the application, each mapped to a friendly name.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "principalId"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The friendly name of user assigned identity."
                          },
                          "principalId": {
                            "type": "string",
                            "description": "The principal id of user assigned identity."
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response"
                    },
                    "typeName": {
                      "type": "string",
                      "description": "The application type name as defined in the application manifest."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Application"
        ],
        "operationId": "Applications_CreateOrUpdate",
        "summary": "Creates or updates a Service Fabric application resource.",
        "description": "Create or update a Service Fabric application resource with the specified name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2021-06-01\" for this specification.",
            "required": true,
            "type": "string",
            "enum": [
              "2021-06-01"
            ],
            "default": "2021-06-01",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The application resource.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The application resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "It will be deprecated in New API, resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Azure resource etag.",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "identity": {
                  "type": "object",
                  "description": "Describes the managed identities for an Azure resource.",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The principal id of the managed identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The tenant id of the managed identity. This property will only be provided for a system assigned identity."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of managed identity for the resource.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedIdentityType",
                        "modelAsString": false,
                        "values": [
                          {
                            "value": "SystemAssigned",
                            "description": "Indicates that system assigned identity is associated with the resource."
                          },
                          {
                            "value": "UserAssigned",
                            "description": "Indicates that user assigned identity is associated with the resource."
                          },
                          {
                            "value": "SystemAssigned, UserAssigned",
                            "description": "Indicates that both system assigned and user assigned identity are associated with the resource."
                          },
                          {
                            "value": "None",
                            "description": "Indicates that no identity is associated with the resource."
                          }
                        ]
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\n",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The principal id of user assigned identity."
                          },
                          "clientId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The client id of user assigned identity."
                          }
                        }
                      }
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "The application resource properties.",
                  "properties": {
                    "typeVersion": {
                      "type": "string",
                      "description": "The version of the application type as defined in the application manifest."
                    },
                    "parameters": {
                      "type": "object",
                      "description": "List of application parameters with overridden values from their default values specified in the application manifest.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "upgradePolicy": {
                      "type": "object",
                      "description": "Describes the policy for a monitored application upgrade.",
                      "properties": {
                        "upgradeReplicaSetCheckTimeout": {
                          "type": "string",
                          "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer)."
                        },
                        "forceRestart": {
                          "type": "boolean",
                          "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).",
                          "default": false
                        },
                        "rollingUpgradeMonitoringPolicy": {
                          "type": "object",
                          "description": "The policy used for monitoring the application upgrade",
                          "properties": {
                            "failureAction": {
                              "type": "string",
                              "description": "The activation Mode of the service package",
                              "enum": [
                                "Rollback",
                                "Manual"
                              ],
                              "x-ms-enum": {
                                "name": "ArmUpgradeFailureAction",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "Rollback",
                                    "description": "Indicates that a rollback of the upgrade will be performed by Service Fabric if the upgrade fails."
                                  },
                                  {
                                    "value": "Manual",
                                    "description": "Indicates that a manual repair will need to be performed by the administrator if the upgrade fails. Service Fabric will not proceed to the next upgrade domain automatically."
                                  }
                                ]
                              }
                            },
                            "healthCheckWaitDuration": {
                              "type": "string",
                              "description": "The amount of time to wait after completing an upgrade domain before applying health policies. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                              "default": "0"
                            },
                            "healthCheckStableDuration": {
                              "type": "string",
                              "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                              "default": "PT0H2M0S"
                            },
                            "healthCheckRetryTimeout": {
                              "type": "string",
                              "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                              "default": "PT0H10M0S"
                            },
                            "upgradeTimeout": {
                              "type": "string",
                              "description": "The amount of time the overall upgrade has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                              "default": "P10675199DT02H48M05.4775807S"
                            },
                            "upgradeDomainTimeout": {
                              "type": "string",
                              "description": "The amount of time each upgrade domain has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                              "default": "P10675199DT02H48M05.4775807S"
                            }
                          }
                        },
                        "applicationHealthPolicy": {
                          "type": "object",
                          "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
                          "properties": {
                            "considerWarningAsError": {
                              "type": "boolean",
                              "description": "Indicates whether warnings are treated with the same severity as errors.",
                              "default": false
                            },
                            "maxPercentUnhealthyDeployedApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.\nThe percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.\nThis is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n",
                              "default": 0
                            },
                            "defaultServiceTypeHealthPolicy": {
                              "description": "The health policy used by default to evaluate the health of a service type.",
                              "type": "object",
                              "properties": {
                                "maxPercentUnhealthyServices": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                  "default": 0,
                                  "minimum": 0,
                                  "maximum": 100
                                },
                                "maxPercentUnhealthyPartitionsPerService": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.\n",
                                  "default": 0,
                                  "minimum": 0,
                                  "maximum": 100
                                },
                                "maxPercentUnhealthyReplicasPerPartition": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.\n",
                                  "default": 0,
                                  "minimum": 0,
                                  "maximum": 100
                                }
                              }
                            },
                            "serviceTypeHealthPolicyMap": {
                              "description": "The map with service type health policy per service type name. The map is empty by default.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                                "properties": {
                                  "maxPercentUnhealthyServices": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                    "default": 0,
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentUnhealthyPartitionsPerService": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.\n",
                                    "default": 0,
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentUnhealthyReplicasPerPartition": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.\n",
                                    "default": 0,
                                    "minimum": 0,
                                    "maximum": 100
                                  }
                                }
                              }
                            }
                          }
                        },
                        "upgradeMode": {
                          "type": "string",
                          "description": "The mode used to monitor health during a rolling upgrade. The values are UnmonitoredAuto, UnmonitoredManual, and Monitored.",
                          "enum": [
                            "Invalid",
                            "UnmonitoredAuto",
                            "UnmonitoredManual",
                            "Monitored"
                          ],
                          "default": "Monitored",
                          "x-ms-enum": {
                            "name": "RollingUpgradeMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Invalid",
                                "description": "Indicates the upgrade mode is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                              },
                              {
                                "value": "UnmonitoredAuto",
                                "description": "The upgrade will proceed automatically without performing any health monitoring. The value is 1"
                              },
                              {
                                "value": "UnmonitoredManual",
                                "description": "The upgrade will stop after completing each upgrade domain, giving the opportunity to manually monitor health before proceeding. The value is 2"
                              },
                              {
                                "value": "Monitored",
                                "description": "The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 3"
                              }
                            ]
                          }
                        },
                        "recreateApplication": {
                          "type": "boolean",
                          "description": "Determines whether the application should be recreated on update. If value=true, the rest of the upgrade policy parameters are not allowed and it will result in availability loss."
                        }
                      }
                    },
                    "minimumNodes": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.",
                      "minimum": 0
                    },
                    "maximumNodes": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.",
                      "minimum": 0,
                      "default": 0
                    },
                    "removeApplicationCapacity": {
                      "type": "boolean",
                      "description": "Remove the current application capacity settings."
                    },
                    "metrics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Describes capacity information for a custom resource balancing metric. This can be used to limit the total consumption of this metric by the services of this application.\n",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the metric."
                          },
                          "maximumCapacity": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The maximum node capacity for Service Fabric application.\nThis is the maximum Load for an instance of this application on a single node. Even if the capacity of node is greater than this value, Service Fabric will limit the total load of services within the application on each node to this value.\nIf set to zero, capacity for this metric is unlimited on each node.\nWhen creating a new application with application capacity defined, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.\nWhen updating existing application with application capacity, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.\n"
                          },
                          "reservationCapacity": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The node reservation capacity for Service Fabric application.\nThis is the amount of load which is reserved on nodes which have instances of this application.\nIf MinimumNodes is specified, then the product of these values will be the capacity reserved in the cluster for the application.\nIf set to zero, no capacity is reserved for this metric.\nWhen setting application capacity or when updating application capacity; this value must be smaller than or equal to MaximumCapacity for each metric.\n"
                          },
                          "totalApplicationCapacity": {
                            "description": "The total metric capacity for Service Fabric application.\nThis is the total metric capacity for this application in the cluster. Service Fabric will try to limit the sum of loads of services within the application to this value.\nWhen creating a new application with application capacity defined, the product of MaximumNodes and MaximumCapacity must always be smaller than or equal to this value.\n",
                            "type": "integer",
                            "format": "int64"
                          }
                        }
                      },
                      "description": "List of application capacity metric description."
                    },
                    "managedIdentities": {
                      "description": "List of user assigned identities for the application, each mapped to a friendly name.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "principalId"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The friendly name of user assigned identity."
                          },
                          "principalId": {
                            "type": "string",
                            "description": "The principal id of user assigned identity."
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response"
                    },
                    "typeName": {
                      "type": "string",
                      "description": "The application type name as defined in the application manifest."
                    }
                  }
                }
              }
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "The request was accepted and the operation will complete asynchronously.",
            "schema": {
              "type": "object",
              "description": "The application resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "It will be deprecated in New API, resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Azure resource etag.",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "identity": {
                  "type": "object",
                  "description": "Describes the managed identities for an Azure resource.",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The principal id of the managed identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The tenant id of the managed identity. This property will only be provided for a system assigned identity."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of managed identity for the resource.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedIdentityType",
                        "modelAsString": false,
                        "values": [
                          {
                            "value": "SystemAssigned",
                            "description": "Indicates that system assigned identity is associated with the resource."
                          },
                          {
                            "value": "UserAssigned",
                            "description": "Indicates that user assigned identity is associated with the resource."
                          },
                          {
                            "value": "SystemAssigned, UserAssigned",
                            "description": "Indicates that both system assigned and user assigned identity are associated with the resource."
                          },
                          {
                            "value": "None",
                            "description": "Indicates that no identity is associated with the resource."
                          }
                        ]
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\n",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The principal id of user assigned identity."
                          },
                          "clientId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The client id of user assigned identity."
                          }
                        }
                      }
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "The application resource properties.",
                  "properties": {
                    "typeVersion": {
                      "type": "string",
                      "description": "The version of the application type as defined in the application manifest."
                    },
                    "parameters": {
                      "type": "object",
                      "description": "List of application parameters with overridden values from their default values specified in the application manifest.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "upgradePolicy": {
                      "type": "object",
                      "description": "Describes the policy for a monitored application upgrade.",
                      "properties": {
                        "upgradeReplicaSetCheckTimeout": {
                          "type": "string",
                          "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer)."
                        },
                        "forceRestart": {
                          "type": "boolean",
                          "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).",
                          "default": false
                        },
                        "rollingUpgradeMonitoringPolicy": {
                          "type": "object",
                          "description": "The policy used for monitoring the application upgrade",
                          "properties": {
                            "failureAction": {
                              "type": "string",
                              "description": "The activation Mode of the service package",
                              "enum": [
                                "Rollback",
                                "Manual"
                              ],
                              "x-ms-enum": {
                                "name": "ArmUpgradeFailureAction",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "Rollback",
                                    "description": "Indicates that a rollback of the upgrade will be performed by Service Fabric if the upgrade fails."
                                  },
                                  {
                                    "value": "Manual",
                                    "description": "Indicates that a manual repair will need to be performed by the administrator if the upgrade fails. Service Fabric will not proceed to the next upgrade domain automatically."
                                  }
                                ]
                              }
                            },
                            "healthCheckWaitDuration": {
                              "type": "string",
                              "description": "The amount of time to wait after completing an upgrade domain before applying health policies. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                              "default": "0"
                            },
                            "healthCheckStableDuration": {
                              "type": "string",
                              "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                              "default": "PT0H2M0S"
                            },
                            "healthCheckRetryTimeout": {
                              "type": "string",
                              "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                              "default": "PT0H10M0S"
                            },
                            "upgradeTimeout": {
                              "type": "string",
                              "description": "The amount of time the overall upgrade has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                              "default": "P10675199DT02H48M05.4775807S"
                            },
                            "upgradeDomainTimeout": {
                              "type": "string",
                              "description": "The amount of time each upgrade domain has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                              "default": "P10675199DT02H48M05.4775807S"
                            }
                          }
                        },
                        "applicationHealthPolicy": {
                          "type": "object",
                          "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
                          "properties": {
                            "considerWarningAsError": {
                              "type": "boolean",
                              "description": "Indicates whether warnings are treated with the same severity as errors.",
                              "default": false
                            },
                            "maxPercentUnhealthyDeployedApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.\nThe percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.\nThis is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n",
                              "default": 0
                            },
                            "defaultServiceTypeHealthPolicy": {
                              "description": "The health policy used by default to evaluate the health of a service type.",
                              "type": "object",
                              "properties": {
                                "maxPercentUnhealthyServices": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                  "default": 0,
                                  "minimum": 0,
                                  "maximum": 100
                                },
                                "maxPercentUnhealthyPartitionsPerService": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.\n",
                                  "default": 0,
                                  "minimum": 0,
                                  "maximum": 100
                                },
                                "maxPercentUnhealthyReplicasPerPartition": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.\n",
                                  "default": 0,
                                  "minimum": 0,
                                  "maximum": 100
                                }
                              }
                            },
                            "serviceTypeHealthPolicyMap": {
                              "description": "The map with service type health policy per service type name. The map is empty by default.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                                "properties": {
                                  "maxPercentUnhealthyServices": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                    "default": 0,
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentUnhealthyPartitionsPerService": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.\n",
                                    "default": 0,
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentUnhealthyReplicasPerPartition": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.\n",
                                    "default": 0,
                                    "minimum": 0,
                                    "maximum": 100
                                  }
                                }
                              }
                            }
                          }
                        },
                        "upgradeMode": {
                          "type": "string",
                          "description": "The mode used to monitor health during a rolling upgrade. The values are UnmonitoredAuto, UnmonitoredManual, and Monitored.",
                          "enum": [
                            "Invalid",
                            "UnmonitoredAuto",
                            "UnmonitoredManual",
                            "Monitored"
                          ],
                          "default": "Monitored",
                          "x-ms-enum": {
                            "name": "RollingUpgradeMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Invalid",
                                "description": "Indicates the upgrade mode is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                              },
                              {
                                "value": "UnmonitoredAuto",
                                "description": "The upgrade will proceed automatically without performing any health monitoring. The value is 1"
                              },
                              {
                                "value": "UnmonitoredManual",
                                "description": "The upgrade will stop after completing each upgrade domain, giving the opportunity to manually monitor health before proceeding. The value is 2"
                              },
                              {
                                "value": "Monitored",
                                "description": "The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 3"
                              }
                            ]
                          }
                        },
                        "recreateApplication": {
                          "type": "boolean",
                          "description": "Determines whether the application should be recreated on update. If value=true, the rest of the upgrade policy parameters are not allowed and it will result in availability loss."
                        }
                      }
                    },
                    "minimumNodes": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.",
                      "minimum": 0
                    },
                    "maximumNodes": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.",
                      "minimum": 0,
                      "default": 0
                    },
                    "removeApplicationCapacity": {
                      "type": "boolean",
                      "description": "Remove the current application capacity settings."
                    },
                    "metrics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Describes capacity information for a custom resource balancing metric. This can be used to limit the total consumption of this metric by the services of this application.\n",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the metric."
                          },
                          "maximumCapacity": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The maximum node capacity for Service Fabric application.\nThis is the maximum Load for an instance of this application on a single node. Even if the capacity of node is greater than this value, Service Fabric will limit the total load of services within the application on each node to this value.\nIf set to zero, capacity for this metric is unlimited on each node.\nWhen creating a new application with application capacity defined, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.\nWhen updating existing application with application capacity, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.\n"
                          },
                          "reservationCapacity": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The node reservation capacity for Service Fabric application.\nThis is the amount of load which is reserved on nodes which have instances of this application.\nIf MinimumNodes is specified, then the product of these values will be the capacity reserved in the cluster for the application.\nIf set to zero, no capacity is reserved for this metric.\nWhen setting application capacity or when updating application capacity; this value must be smaller than or equal to MaximumCapacity for each metric.\n"
                          },
                          "totalApplicationCapacity": {
                            "description": "The total metric capacity for Service Fabric application.\nThis is the total metric capacity for this application in the cluster. Service Fabric will try to limit the sum of loads of services within the application to this value.\nWhen creating a new application with application capacity defined, the product of MaximumNodes and MaximumCapacity must always be smaller than or equal to this value.\n",
                            "type": "integer",
                            "format": "int64"
                          }
                        }
                      },
                      "description": "List of application capacity metric description."
                    },
                    "managedIdentities": {
                      "description": "List of user assigned identities for the application, each mapped to a friendly name.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "principalId"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The friendly name of user assigned identity."
                          },
                          "principalId": {
                            "type": "string",
                            "description": "The principal id of user assigned identity."
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response"
                    },
                    "typeName": {
                      "type": "string",
                      "description": "The application type name as defined in the application manifest."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Application"
        ],
        "operationId": "Applications_Update",
        "summary": "Updates a Service Fabric application resource.",
        "description": "Update a Service Fabric application resource with the specified name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2021-06-01\" for this specification.",
            "required": true,
            "type": "string",
            "enum": [
              "2021-06-01"
            ],
            "default": "2021-06-01",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The application resource for patch operations.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The application resource for patch operations.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "It will be deprecated in New API, resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Azure resource etag.",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "The application resource properties for patch operations.",
                  "properties": {
                    "typeVersion": {
                      "type": "string",
                      "description": "The version of the application type as defined in the application manifest."
                    },
                    "parameters": {
                      "type": "object",
                      "description": "List of application parameters with overridden values from their default values specified in the application manifest.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "upgradePolicy": {
                      "type": "object",
                      "description": "Describes the policy for a monitored application upgrade.",
                      "properties": {
                        "upgradeReplicaSetCheckTimeout": {
                          "type": "string",
                          "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer)."
                        },
                        "forceRestart": {
                          "type": "boolean",
                          "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).",
                          "default": false
                        },
                        "rollingUpgradeMonitoringPolicy": {
                          "type": "object",
                          "description": "The policy used for monitoring the application upgrade",
                          "properties": {
                            "failureAction": {
                              "type": "string",
                              "description": "The activation Mode of the service package",
                              "enum": [
                                "Rollback",
                                "Manual"
                              ],
                              "x-ms-enum": {
                                "name": "ArmUpgradeFailureAction",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "Rollback",
                                    "description": "Indicates that a rollback of the upgrade will be performed by Service Fabric if the upgrade fails."
                                  },
                                  {
                                    "value": "Manual",
                                    "description": "Indicates that a manual repair will need to be performed by the administrator if the upgrade fails. Service Fabric will not proceed to the next upgrade domain automatically."
                                  }
                                ]
                              }
                            },
                            "healthCheckWaitDuration": {
                              "type": "string",
                              "description": "The amount of time to wait after completing an upgrade domain before applying health policies. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                              "default": "0"
                            },
                            "healthCheckStableDuration": {
                              "type": "string",
                              "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                              "default": "PT0H2M0S"
                            },
                            "healthCheckRetryTimeout": {
                              "type": "string",
                              "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                              "default": "PT0H10M0S"
                            },
                            "upgradeTimeout": {
                              "type": "string",
                              "description": "The amount of time the overall upgrade has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                              "default": "P10675199DT02H48M05.4775807S"
                            },
                            "upgradeDomainTimeout": {
                              "type": "string",
                              "description": "The amount of time each upgrade domain has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                              "default": "P10675199DT02H48M05.4775807S"
                            }
                          }
                        },
                        "applicationHealthPolicy": {
                          "type": "object",
                          "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
                          "properties": {
                            "considerWarningAsError": {
                              "type": "boolean",
                              "description": "Indicates whether warnings are treated with the same severity as errors.",
                              "default": false
                            },
                            "maxPercentUnhealthyDeployedApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.\nThe percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.\nThis is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n",
                              "default": 0
                            },
                            "defaultServiceTypeHealthPolicy": {
                              "description": "The health policy used by default to evaluate the health of a service type.",
                              "type": "object",
                              "properties": {
                                "maxPercentUnhealthyServices": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                  "default": 0,
                                  "minimum": 0,
                                  "maximum": 100
                                },
                                "maxPercentUnhealthyPartitionsPerService": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.\n",
                                  "default": 0,
                                  "minimum": 0,
                                  "maximum": 100
                                },
                                "maxPercentUnhealthyReplicasPerPartition": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.\n",
                                  "default": 0,
                                  "minimum": 0,
                                  "maximum": 100
                                }
                              }
                            },
                            "serviceTypeHealthPolicyMap": {
                              "description": "The map with service type health policy per service type name. The map is empty by default.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                                "properties": {
                                  "maxPercentUnhealthyServices": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                    "default": 0,
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentUnhealthyPartitionsPerService": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.\n",
                                    "default": 0,
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentUnhealthyReplicasPerPartition": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.\n",
                                    "default": 0,
                                    "minimum": 0,
                                    "maximum": 100
                                  }
                                }
                              }
                            }
                          }
                        },
                        "upgradeMode": {
                          "type": "string",
                          "description": "The mode used to monitor health during a rolling upgrade. The values are UnmonitoredAuto, UnmonitoredManual, and Monitored.",
                          "enum": [
                            "Invalid",
                            "UnmonitoredAuto",
                            "UnmonitoredManual",
                            "Monitored"
                          ],
                          "default": "Monitored",
                          "x-ms-enum": {
                            "name": "RollingUpgradeMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Invalid",
                                "description": "Indicates the upgrade mode is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                              },
                              {
                                "value": "UnmonitoredAuto",
                                "description": "The upgrade will proceed automatically without performing any health monitoring. The value is 1"
                              },
                              {
                                "value": "UnmonitoredManual",
                                "description": "The upgrade will stop after completing each upgrade domain, giving the opportunity to manually monitor health before proceeding. The value is 2"
                              },
                              {
                                "value": "Monitored",
                                "description": "The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 3"
                              }
                            ]
                          }
                        },
                        "recreateApplication": {
                          "type": "boolean",
                          "description": "Determines whether the application should be recreated on update. If value=true, the rest of the upgrade policy parameters are not allowed and it will result in availability loss."
                        }
                      }
                    },
                    "minimumNodes": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.",
                      "minimum": 0
                    },
                    "maximumNodes": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.",
                      "minimum": 0,
                      "default": 0
                    },
                    "removeApplicationCapacity": {
                      "type": "boolean",
                      "description": "Remove the current application capacity settings."
                    },
                    "metrics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Describes capacity information for a custom resource balancing metric. This can be used to limit the total consumption of this metric by the services of this application.\n",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the metric."
                          },
                          "maximumCapacity": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The maximum node capacity for Service Fabric application.\nThis is the maximum Load for an instance of this application on a single node. Even if the capacity of node is greater than this value, Service Fabric will limit the total load of services within the application on each node to this value.\nIf set to zero, capacity for this metric is unlimited on each node.\nWhen creating a new application with application capacity defined, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.\nWhen updating existing application with application capacity, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.\n"
                          },
                          "reservationCapacity": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The node reservation capacity for Service Fabric application.\nThis is the amount of load which is reserved on nodes which have instances of this application.\nIf MinimumNodes is specified, then the product of these values will be the capacity reserved in the cluster for the application.\nIf set to zero, no capacity is reserved for this metric.\nWhen setting application capacity or when updating application capacity; this value must be smaller than or equal to MaximumCapacity for each metric.\n"
                          },
                          "totalApplicationCapacity": {
                            "description": "The total metric capacity for Service Fabric application.\nThis is the total metric capacity for this application in the cluster. Service Fabric will try to limit the sum of loads of services within the application to this value.\nWhen creating a new application with application capacity defined, the product of MaximumNodes and MaximumCapacity must always be smaller than or equal to this value.\n",
                            "type": "integer",
                            "format": "int64"
                          }
                        }
                      },
                      "description": "List of application capacity metric description."
                    },
                    "managedIdentities": {
                      "description": "List of user assigned identities for the application, each mapped to a friendly name.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "principalId"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The friendly name of user assigned identity."
                          },
                          "principalId": {
                            "type": "string",
                            "description": "The principal id of user assigned identity."
                          }
                        }
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "The request was accepted and the operation will complete asynchronously.",
            "schema": {
              "type": "object",
              "description": "The application resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "It will be deprecated in New API, resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Azure resource etag.",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "identity": {
                  "type": "object",
                  "description": "Describes the managed identities for an Azure resource.",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The principal id of the managed identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The tenant id of the managed identity. This property will only be provided for a system assigned identity."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of managed identity for the resource.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedIdentityType",
                        "modelAsString": false,
                        "values": [
                          {
                            "value": "SystemAssigned",
                            "description": "Indicates that system assigned identity is associated with the resource."
                          },
                          {
                            "value": "UserAssigned",
                            "description": "Indicates that user assigned identity is associated with the resource."
                          },
                          {
                            "value": "SystemAssigned, UserAssigned",
                            "description": "Indicates that both system assigned and user assigned identity are associated with the resource."
                          },
                          {
                            "value": "None",
                            "description": "Indicates that no identity is associated with the resource."
                          }
                        ]
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\n",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The principal id of user assigned identity."
                          },
                          "clientId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The client id of user assigned identity."
                          }
                        }
                      }
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "The application resource properties.",
                  "properties": {
                    "typeVersion": {
                      "type": "string",
                      "description": "The version of the application type as defined in the application manifest."
                    },
                    "parameters": {
                      "type": "object",
                      "description": "List of application parameters with overridden values from their default values specified in the application manifest.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "upgradePolicy": {
                      "type": "object",
                      "description": "Describes the policy for a monitored application upgrade.",
                      "properties": {
                        "upgradeReplicaSetCheckTimeout": {
                          "type": "string",
                          "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer)."
                        },
                        "forceRestart": {
                          "type": "boolean",
                          "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).",
                          "default": false
                        },
                        "rollingUpgradeMonitoringPolicy": {
                          "type": "object",
                          "description": "The policy used for monitoring the application upgrade",
                          "properties": {
                            "failureAction": {
                              "type": "string",
                              "description": "The activation Mode of the service package",
                              "enum": [
                                "Rollback",
                                "Manual"
                              ],
                              "x-ms-enum": {
                                "name": "ArmUpgradeFailureAction",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "Rollback",
                                    "description": "Indicates that a rollback of the upgrade will be performed by Service Fabric if the upgrade fails."
                                  },
                                  {
                                    "value": "Manual",
                                    "description": "Indicates that a manual repair will need to be performed by the administrator if the upgrade fails. Service Fabric will not proceed to the next upgrade domain automatically."
                                  }
                                ]
                              }
                            },
                            "healthCheckWaitDuration": {
                              "type": "string",
                              "description": "The amount of time to wait after completing an upgrade domain before applying health policies. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                              "default": "0"
                            },
                            "healthCheckStableDuration": {
                              "type": "string",
                              "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                              "default": "PT0H2M0S"
                            },
                            "healthCheckRetryTimeout": {
                              "type": "string",
                              "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                              "default": "PT0H10M0S"
                            },
                            "upgradeTimeout": {
                              "type": "string",
                              "description": "The amount of time the overall upgrade has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                              "default": "P10675199DT02H48M05.4775807S"
                            },
                            "upgradeDomainTimeout": {
                              "type": "string",
                              "description": "The amount of time each upgrade domain has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                              "default": "P10675199DT02H48M05.4775807S"
                            }
                          }
                        },
                        "applicationHealthPolicy": {
                          "type": "object",
                          "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
                          "properties": {
                            "considerWarningAsError": {
                              "type": "boolean",
                              "description": "Indicates whether warnings are treated with the same severity as errors.",
                              "default": false
                            },
                            "maxPercentUnhealthyDeployedApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.\nThe percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.\nThis is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n",
                              "default": 0
                            },
                            "defaultServiceTypeHealthPolicy": {
                              "description": "The health policy used by default to evaluate the health of a service type.",
                              "type": "object",
                              "properties": {
                                "maxPercentUnhealthyServices": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                  "default": 0,
                                  "minimum": 0,
                                  "maximum": 100
                                },
                                "maxPercentUnhealthyPartitionsPerService": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.\n",
                                  "default": 0,
                                  "minimum": 0,
                                  "maximum": 100
                                },
                                "maxPercentUnhealthyReplicasPerPartition": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.\n",
                                  "default": 0,
                                  "minimum": 0,
                                  "maximum": 100
                                }
                              }
                            },
                            "serviceTypeHealthPolicyMap": {
                              "description": "The map with service type health policy per service type name. The map is empty by default.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                                "properties": {
                                  "maxPercentUnhealthyServices": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                    "default": 0,
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentUnhealthyPartitionsPerService": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.\n",
                                    "default": 0,
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentUnhealthyReplicasPerPartition": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.\n",
                                    "default": 0,
                                    "minimum": 0,
                                    "maximum": 100
                                  }
                                }
                              }
                            }
                          }
                        },
                        "upgradeMode": {
                          "type": "string",
                          "description": "The mode used to monitor health during a rolling upgrade. The values are UnmonitoredAuto, UnmonitoredManual, and Monitored.",
                          "enum": [
                            "Invalid",
                            "UnmonitoredAuto",
                            "UnmonitoredManual",
                            "Monitored"
                          ],
                          "default": "Monitored",
                          "x-ms-enum": {
                            "name": "RollingUpgradeMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Invalid",
                                "description": "Indicates the upgrade mode is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                              },
                              {
                                "value": "UnmonitoredAuto",
                                "description": "The upgrade will proceed automatically without performing any health monitoring. The value is 1"
                              },
                              {
                                "value": "UnmonitoredManual",
                                "description": "The upgrade will stop after completing each upgrade domain, giving the opportunity to manually monitor health before proceeding. The value is 2"
                              },
                              {
                                "value": "Monitored",
                                "description": "The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 3"
                              }
                            ]
                          }
                        },
                        "recreateApplication": {
                          "type": "boolean",
                          "description": "Determines whether the application should be recreated on update. If value=true, the rest of the upgrade policy parameters are not allowed and it will result in availability loss."
                        }
                      }
                    },
                    "minimumNodes": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.",
                      "minimum": 0
                    },
                    "maximumNodes": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.",
                      "minimum": 0,
                      "default": 0
                    },
                    "removeApplicationCapacity": {
                      "type": "boolean",
                      "description": "Remove the current application capacity settings."
                    },
                    "metrics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Describes capacity information for a custom resource balancing metric. This can be used to limit the total consumption of this metric by the services of this application.\n",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the metric."
                          },
                          "maximumCapacity": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The maximum node capacity for Service Fabric application.\nThis is the maximum Load for an instance of this application on a single node. Even if the capacity of node is greater than this value, Service Fabric will limit the total load of services within the application on each node to this value.\nIf set to zero, capacity for this metric is unlimited on each node.\nWhen creating a new application with application capacity defined, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.\nWhen updating existing application with application capacity, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.\n"
                          },
                          "reservationCapacity": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The node reservation capacity for Service Fabric application.\nThis is the amount of load which is reserved on nodes which have instances of this application.\nIf MinimumNodes is specified, then the product of these values will be the capacity reserved in the cluster for the application.\nIf set to zero, no capacity is reserved for this metric.\nWhen setting application capacity or when updating application capacity; this value must be smaller than or equal to MaximumCapacity for each metric.\n"
                          },
                          "totalApplicationCapacity": {
                            "description": "The total metric capacity for Service Fabric application.\nThis is the total metric capacity for this application in the cluster. Service Fabric will try to limit the sum of loads of services within the application to this value.\nWhen creating a new application with application capacity defined, the product of MaximumNodes and MaximumCapacity must always be smaller than or equal to this value.\n",
                            "type": "integer",
                            "format": "int64"
                          }
                        }
                      },
                      "description": "List of application capacity metric description."
                    },
                    "managedIdentities": {
                      "description": "List of user assigned identities for the application, each mapped to a friendly name.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "principalId"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The friendly name of user assigned identity."
                          },
                          "principalId": {
                            "type": "string",
                            "description": "The principal id of user assigned identity."
                          }
                        }
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response"
                    },
                    "typeName": {
                      "type": "string",
                      "description": "The application type name as defined in the application manifest."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Application"
        ],
        "operationId": "Applications_Delete",
        "summary": "Deletes a Service Fabric application resource.",
        "description": "Delete a Service Fabric application resource with the specified name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2021-06-01\" for this specification.",
            "required": true,
            "type": "string",
            "enum": [
              "2021-06-01"
            ],
            "default": "2021-06-01",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "202": {
            "description": "The request was accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "The resource was not found."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applications": {
      "get": {
        "tags": [
          "Application"
        ],
        "operationId": "Applications_List",
        "summary": "Gets the list of application resources created in the specified Service Fabric cluster resource.",
        "description": "Gets all application resources created or in the process of being created in the Service Fabric cluster resource.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2021-06-01\" for this specification.",
            "required": true,
            "type": "string",
            "enum": [
              "2021-06-01"
            ],
            "default": "2021-06-01",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The list of application resources.",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "The application resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Azure resource identifier.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "Azure resource name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "Azure resource type.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "It will be deprecated in New API, resource location depends on the parent resource.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Azure resource tags.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "etag": {
                        "type": "string",
                        "description": "Azure resource etag.",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource."
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource."
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)."
                          }
                        }
                      },
                      "identity": {
                        "type": "object",
                        "description": "Describes the managed identities for an Azure resource.",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The principal id of the managed identity. This property will only be provided for a system assigned identity."
                          },
                          "tenantId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The tenant id of the managed identity. This property will only be provided for a system assigned identity."
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of managed identity for the resource.",
                            "enum": [
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned, UserAssigned",
                              "None"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedIdentityType",
                              "modelAsString": false,
                              "values": [
                                {
                                  "value": "SystemAssigned",
                                  "description": "Indicates that system assigned identity is associated with the resource."
                                },
                                {
                                  "value": "UserAssigned",
                                  "description": "Indicates that user assigned identity is associated with the resource."
                                },
                                {
                                  "value": "SystemAssigned, UserAssigned",
                                  "description": "Indicates that both system assigned and user assigned identity are associated with the resource."
                                },
                                {
                                  "value": "None",
                                  "description": "Indicates that no identity is associated with the resource."
                                }
                              ]
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\n",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The principal id of user assigned identity."
                                },
                                "clientId": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The client id of user assigned identity."
                                }
                              }
                            }
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "description": "The application resource properties.",
                        "properties": {
                          "typeVersion": {
                            "type": "string",
                            "description": "The version of the application type as defined in the application manifest."
                          },
                          "parameters": {
                            "type": "object",
                            "description": "List of application parameters with overridden values from their default values specified in the application manifest.",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "upgradePolicy": {
                            "type": "object",
                            "description": "Describes the policy for a monitored application upgrade.",
                            "properties": {
                              "upgradeReplicaSetCheckTimeout": {
                                "type": "string",
                                "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer)."
                              },
                              "forceRestart": {
                                "type": "boolean",
                                "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).",
                                "default": false
                              },
                              "rollingUpgradeMonitoringPolicy": {
                                "type": "object",
                                "description": "The policy used for monitoring the application upgrade",
                                "properties": {
                                  "failureAction": {
                                    "type": "string",
                                    "description": "The activation Mode of the service package",
                                    "enum": [
                                      "Rollback",
                                      "Manual"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ArmUpgradeFailureAction",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "value": "Rollback",
                                          "description": "Indicates that a rollback of the upgrade will be performed by Service Fabric if the upgrade fails."
                                        },
                                        {
                                          "value": "Manual",
                                          "description": "Indicates that a manual repair will need to be performed by the administrator if the upgrade fails. Service Fabric will not proceed to the next upgrade domain automatically."
                                        }
                                      ]
                                    }
                                  },
                                  "healthCheckWaitDuration": {
                                    "type": "string",
                                    "description": "The amount of time to wait after completing an upgrade domain before applying health policies. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                                    "default": "0"
                                  },
                                  "healthCheckStableDuration": {
                                    "type": "string",
                                    "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                                    "default": "PT0H2M0S"
                                  },
                                  "healthCheckRetryTimeout": {
                                    "type": "string",
                                    "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                                    "default": "PT0H10M0S"
                                  },
                                  "upgradeTimeout": {
                                    "type": "string",
                                    "description": "The amount of time the overall upgrade has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                                    "default": "P10675199DT02H48M05.4775807S"
                                  },
                                  "upgradeDomainTimeout": {
                                    "type": "string",
                                    "description": "The amount of time each upgrade domain has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                                    "default": "P10675199DT02H48M05.4775807S"
                                  }
                                }
                              },
                              "applicationHealthPolicy": {
                                "type": "object",
                                "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
                                "properties": {
                                  "considerWarningAsError": {
                                    "type": "boolean",
                                    "description": "Indicates whether warnings are treated with the same severity as errors.",
                                    "default": false
                                  },
                                  "maxPercentUnhealthyDeployedApplications": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.\nThe percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.\nThis is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n",
                                    "default": 0
                                  },
                                  "defaultServiceTypeHealthPolicy": {
                                    "description": "The health policy used by default to evaluate the health of a service type.",
                                    "type": "object",
                                    "properties": {
                                      "maxPercentUnhealthyServices": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                        "default": 0,
                                        "minimum": 0,
                                        "maximum": 100
                                      },
                                      "maxPercentUnhealthyPartitionsPerService": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.\n",
                                        "default": 0,
                                        "minimum": 0,
                                        "maximum": 100
                                      },
                                      "maxPercentUnhealthyReplicasPerPartition": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.\n",
                                        "default": 0,
                                        "minimum": 0,
                                        "maximum": 100
                                      }
                                    }
                                  },
                                  "serviceTypeHealthPolicyMap": {
                                    "description": "The map with service type health policy per service type name. The map is empty by default.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object",
                                      "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                                      "properties": {
                                        "maxPercentUnhealthyServices": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                          "default": 0,
                                          "minimum": 0,
                                          "maximum": 100
                                        },
                                        "maxPercentUnhealthyPartitionsPerService": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.\n",
                                          "default": 0,
                                          "minimum": 0,
                                          "maximum": 100
                                        },
                                        "maxPercentUnhealthyReplicasPerPartition": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.\n",
                                          "default": 0,
                                          "minimum": 0,
                                          "maximum": 100
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "upgradeMode": {
                                "type": "string",
                                "description": "The mode used to monitor health during a rolling upgrade. The values are UnmonitoredAuto, UnmonitoredManual, and Monitored.",
                                "enum": [
                                  "Invalid",
                                  "UnmonitoredAuto",
                                  "UnmonitoredManual",
                                  "Monitored"
                                ],
                                "default": "Monitored",
                                "x-ms-enum": {
                                  "name": "RollingUpgradeMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Invalid",
                                      "description": "Indicates the upgrade mode is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                                    },
                                    {
                                      "value": "UnmonitoredAuto",
                                      "description": "The upgrade will proceed automatically without performing any health monitoring. The value is 1"
                                    },
                                    {
                                      "value": "UnmonitoredManual",
                                      "description": "The upgrade will stop after completing each upgrade domain, giving the opportunity to manually monitor health before proceeding. The value is 2"
                                    },
                                    {
                                      "value": "Monitored",
                                      "description": "The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 3"
                                    }
                                  ]
                                }
                              },
                              "recreateApplication": {
                                "type": "boolean",
                                "description": "Determines whether the application should be recreated on update. If value=true, the rest of the upgrade policy parameters are not allowed and it will result in availability loss."
                              }
                            }
                          },
                          "minimumNodes": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.",
                            "minimum": 0
                          },
                          "maximumNodes": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.",
                            "minimum": 0,
                            "default": 0
                          },
                          "removeApplicationCapacity": {
                            "type": "boolean",
                            "description": "Remove the current application capacity settings."
                          },
                          "metrics": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Describes capacity information for a custom resource balancing metric. This can be used to limit the total consumption of this metric by the services of this application.\n",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the metric."
                                },
                                "maximumCapacity": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The maximum node capacity for Service Fabric application.\nThis is the maximum Load for an instance of this application on a single node. Even if the capacity of node is greater than this value, Service Fabric will limit the total load of services within the application on each node to this value.\nIf set to zero, capacity for this metric is unlimited on each node.\nWhen creating a new application with application capacity defined, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.\nWhen updating existing application with application capacity, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.\n"
                                },
                                "reservationCapacity": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The node reservation capacity for Service Fabric application.\nThis is the amount of load which is reserved on nodes which have instances of this application.\nIf MinimumNodes is specified, then the product of these values will be the capacity reserved in the cluster for the application.\nIf set to zero, no capacity is reserved for this metric.\nWhen setting application capacity or when updating application capacity; this value must be smaller than or equal to MaximumCapacity for each metric.\n"
                                },
                                "totalApplicationCapacity": {
                                  "description": "The total metric capacity for Service Fabric application.\nThis is the total metric capacity for this application in the cluster. Service Fabric will try to limit the sum of loads of services within the application to this value.\nWhen creating a new application with application capacity defined, the product of MaximumNodes and MaximumCapacity must always be smaller than or equal to this value.\n",
                                  "type": "integer",
                                  "format": "int64"
                                }
                              }
                            },
                            "description": "List of application capacity metric description."
                          },
                          "managedIdentities": {
                            "description": "List of user assigned identities for the application, each mapped to a friendly name.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "name",
                                "principalId"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The friendly name of user assigned identity."
                                },
                                "principalId": {
                                  "type": "string",
                                  "description": "The principal id of user assigned identity."
                                }
                              }
                            }
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The current deployment or provisioning state, which only appears in the response"
                          },
                          "typeName": {
                            "type": "string",
                            "description": "The application type name as defined in the application manifest."
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of application list results if there are any.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applications/{applicationName}/services/{serviceName}": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Services_Get",
        "summary": "Gets a Service Fabric service resource.",
        "description": "Get a Service Fabric service resource created or in the process of being created in the Service Fabric application resource.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the service resource in the format of {applicationName}~{serviceName}.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2021-06-01\" for this specification.",
            "required": true,
            "type": "string",
            "enum": [
              "2021-06-01"
            ],
            "default": "2021-06-01",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The service resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "It will be deprecated in New API, resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Azure resource etag.",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "The service resource properties.",
                  "required": [
                    "serviceKind"
                  ],
                  "discriminator": "serviceKind",
                  "properties": {
                    "placementConstraints": {
                      "type": "string",
                      "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\"."
                    },
                    "correlationScheme": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Creates a particular correlation between services.",
                        "required": [
                          "scheme",
                          "serviceName"
                        ],
                        "properties": {
                          "scheme": {
                            "description": "The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.",
                            "type": "string",
                            "enum": [
                              "Invalid",
                              "Affinity",
                              "AlignedAffinity",
                              "NonAlignedAffinity"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceCorrelationScheme",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Invalid",
                                  "description": "An invalid correlation scheme. Cannot be used. The value is zero."
                                },
                                {
                                  "value": "Affinity",
                                  "description": "Indicates that this service has an affinity relationship with another service. Provided for backwards compatibility, consider preferring the Aligned or NonAlignedAffinity options. The value is 1."
                                },
                                {
                                  "value": "AlignedAffinity",
                                  "description": "Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 2."
                                },
                                {
                                  "value": "NonAlignedAffinity",
                                  "description": "Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 3."
                                }
                              ]
                            }
                          },
                          "serviceName": {
                            "description": "The name of the service that the correlation relationship is established with.",
                            "type": "string"
                          }
                        }
                      },
                      "description": "A list that describes the correlation of the service with other services."
                    },
                    "serviceLoadMetrics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Specifies a metric to load balance a service during runtime.",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive."
                          },
                          "weight": {
                            "description": "The service load metric relative weight, compared to other metrics configured for this service, as a number.",
                            "type": "string",
                            "enum": [
                              "Zero",
                              "Low",
                              "Medium",
                              "High"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceLoadMetricWeight",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Zero",
                                  "description": "Disables resource balancing for this metric. This value is zero."
                                },
                                {
                                  "value": "Low",
                                  "description": "Specifies the metric weight of the service load as Low. The value is 1."
                                },
                                {
                                  "value": "Medium",
                                  "description": "Specifies the metric weight of the service load as Medium. The value is 2."
                                },
                                {
                                  "value": "High",
                                  "description": "Specifies the metric weight of the service load as High. The value is 3."
                                }
                              ]
                            }
                          },
                          "primaryDefaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica."
                          },
                          "secondaryDefaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica."
                          },
                          "defaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric."
                          }
                        }
                      },
                      "description": "The service load metrics is given as an array of ServiceLoadMetricDescription objects."
                    },
                    "servicePlacementPolicies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "discriminator": "type",
                        "description": "Describes the policy to be used for placement of a Service Fabric service.",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The type of placement policy for a service fabric service. Following are the possible values.",
                            "enum": [
                              "Invalid",
                              "InvalidDomain",
                              "RequiredDomain",
                              "PreferredPrimaryDomain",
                              "RequiredDomainDistribution",
                              "NonPartiallyPlaceService"
                            ],
                            "x-ms-enum": {
                              "name": "ServicePlacementPolicyType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Invalid",
                                  "description": "Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                                },
                                {
                                  "value": "InvalidDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1."
                                },
                                {
                                  "value": "RequiredDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2."
                                },
                                {
                                  "value": "PreferredPrimaryDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3."
                                },
                                {
                                  "value": "RequiredDomainDistribution",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4."
                                },
                                {
                                  "value": "NonPartiallyPlaceService",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "description": "A list that describes the correlation of the service with other services."
                    },
                    "defaultMoveCost": {
                      "type": "string",
                      "description": "Specifies the move cost for the service.",
                      "enum": [
                        "Zero",
                        "Low",
                        "Medium",
                        "High"
                      ],
                      "x-ms-enum": {
                        "name": "MoveCost",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Zero",
                            "description": "Zero move cost. This value is zero."
                          },
                          {
                            "value": "Low",
                            "description": "Specifies the move cost of the service as Low. The value is 1."
                          },
                          {
                            "value": "Medium",
                            "description": "Specifies the move cost of the service as Medium. The value is 2."
                          },
                          {
                            "value": "High",
                            "description": "Specifies the move cost of the service as High. The value is 3."
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response"
                    },
                    "serviceKind": {
                      "type": "string",
                      "description": "The kind of service (Stateless or Stateful).",
                      "enum": [
                        "Invalid",
                        "Stateless",
                        "Stateful"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceKind",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Invalid",
                            "description": "Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                          },
                          {
                            "value": "Stateless",
                            "description": "Does not use Service Fabric to make its state highly available or reliable. The value is 1."
                          },
                          {
                            "value": "Stateful",
                            "description": "Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2."
                          }
                        ]
                      }
                    },
                    "serviceTypeName": {
                      "type": "string",
                      "description": "The name of the service type"
                    },
                    "partitionDescription": {
                      "type": "object",
                      "discriminator": "partitionScheme",
                      "description": "Describes how the service is partitioned.",
                      "required": [
                        "partitionScheme"
                      ],
                      "properties": {
                        "partitionScheme": {
                          "description": "Specifies how the service is partitioned.",
                          "type": "string",
                          "enum": [
                            "Invalid",
                            "Singleton",
                            "UniformInt64Range",
                            "Named"
                          ],
                          "x-ms-enum": {
                            "name": "PartitionScheme",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Invalid",
                                "description": "Indicates the partition kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                              },
                              {
                                "value": "Singleton",
                                "description": "Indicates that the partition is based on string names, and is a SingletonPartitionSchemeDescription object, The value is 1."
                              },
                              {
                                "value": "UniformInt64Range",
                                "description": "Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionSchemeDescription object. The value is 2."
                              },
                              {
                                "value": "Named",
                                "description": "Indicates that the partition is based on string names, and is a NamedPartitionSchemeDescription object. The value is 3"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "servicePackageActivationMode": {
                      "type": "string",
                      "description": "The activation Mode of the service package",
                      "enum": [
                        "SharedProcess",
                        "ExclusiveProcess"
                      ],
                      "x-ms-enum": {
                        "name": "ArmServicePackageActivationMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "SharedProcess",
                            "description": "Indicates the application package activation mode will use shared process."
                          },
                          {
                            "value": "ExclusiveProcess",
                            "description": "Indicates the application package activation mode will use exclusive process."
                          }
                        ]
                      }
                    },
                    "serviceDnsName": {
                      "type": "string",
                      "description": "Dns name used for the service. If this is specified, then the service can be accessed via its DNS name instead of service name."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Service"
        ],
        "operationId": "Services_CreateOrUpdate",
        "summary": "Creates or updates a Service Fabric service resource.",
        "description": "Create or update a Service Fabric service resource with the specified name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the service resource in the format of {applicationName}~{serviceName}.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2021-06-01\" for this specification.",
            "required": true,
            "type": "string",
            "enum": [
              "2021-06-01"
            ],
            "default": "2021-06-01",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The service resource.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The service resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "It will be deprecated in New API, resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Azure resource etag.",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "The service resource properties.",
                  "required": [
                    "serviceKind"
                  ],
                  "discriminator": "serviceKind",
                  "properties": {
                    "placementConstraints": {
                      "type": "string",
                      "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\"."
                    },
                    "correlationScheme": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Creates a particular correlation between services.",
                        "required": [
                          "scheme",
                          "serviceName"
                        ],
                        "properties": {
                          "scheme": {
                            "description": "The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.",
                            "type": "string",
                            "enum": [
                              "Invalid",
                              "Affinity",
                              "AlignedAffinity",
                              "NonAlignedAffinity"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceCorrelationScheme",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Invalid",
                                  "description": "An invalid correlation scheme. Cannot be used. The value is zero."
                                },
                                {
                                  "value": "Affinity",
                                  "description": "Indicates that this service has an affinity relationship with another service. Provided for backwards compatibility, consider preferring the Aligned or NonAlignedAffinity options. The value is 1."
                                },
                                {
                                  "value": "AlignedAffinity",
                                  "description": "Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 2."
                                },
                                {
                                  "value": "NonAlignedAffinity",
                                  "description": "Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 3."
                                }
                              ]
                            }
                          },
                          "serviceName": {
                            "description": "The name of the service that the correlation relationship is established with.",
                            "type": "string"
                          }
                        }
                      },
                      "description": "A list that describes the correlation of the service with other services."
                    },
                    "serviceLoadMetrics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Specifies a metric to load balance a service during runtime.",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive."
                          },
                          "weight": {
                            "description": "The service load metric relative weight, compared to other metrics configured for this service, as a number.",
                            "type": "string",
                            "enum": [
                              "Zero",
                              "Low",
                              "Medium",
                              "High"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceLoadMetricWeight",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Zero",
                                  "description": "Disables resource balancing for this metric. This value is zero."
                                },
                                {
                                  "value": "Low",
                                  "description": "Specifies the metric weight of the service load as Low. The value is 1."
                                },
                                {
                                  "value": "Medium",
                                  "description": "Specifies the metric weight of the service load as Medium. The value is 2."
                                },
                                {
                                  "value": "High",
                                  "description": "Specifies the metric weight of the service load as High. The value is 3."
                                }
                              ]
                            }
                          },
                          "primaryDefaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica."
                          },
                          "secondaryDefaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica."
                          },
                          "defaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric."
                          }
                        }
                      },
                      "description": "The service load metrics is given as an array of ServiceLoadMetricDescription objects."
                    },
                    "servicePlacementPolicies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "discriminator": "type",
                        "description": "Describes the policy to be used for placement of a Service Fabric service.",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The type of placement policy for a service fabric service. Following are the possible values.",
                            "enum": [
                              "Invalid",
                              "InvalidDomain",
                              "RequiredDomain",
                              "PreferredPrimaryDomain",
                              "RequiredDomainDistribution",
                              "NonPartiallyPlaceService"
                            ],
                            "x-ms-enum": {
                              "name": "ServicePlacementPolicyType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Invalid",
                                  "description": "Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                                },
                                {
                                  "value": "InvalidDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1."
                                },
                                {
                                  "value": "RequiredDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2."
                                },
                                {
                                  "value": "PreferredPrimaryDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3."
                                },
                                {
                                  "value": "RequiredDomainDistribution",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4."
                                },
                                {
                                  "value": "NonPartiallyPlaceService",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "description": "A list that describes the correlation of the service with other services."
                    },
                    "defaultMoveCost": {
                      "type": "string",
                      "description": "Specifies the move cost for the service.",
                      "enum": [
                        "Zero",
                        "Low",
                        "Medium",
                        "High"
                      ],
                      "x-ms-enum": {
                        "name": "MoveCost",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Zero",
                            "description": "Zero move cost. This value is zero."
                          },
                          {
                            "value": "Low",
                            "description": "Specifies the move cost of the service as Low. The value is 1."
                          },
                          {
                            "value": "Medium",
                            "description": "Specifies the move cost of the service as Medium. The value is 2."
                          },
                          {
                            "value": "High",
                            "description": "Specifies the move cost of the service as High. The value is 3."
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response"
                    },
                    "serviceKind": {
                      "type": "string",
                      "description": "The kind of service (Stateless or Stateful).",
                      "enum": [
                        "Invalid",
                        "Stateless",
                        "Stateful"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceKind",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Invalid",
                            "description": "Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                          },
                          {
                            "value": "Stateless",
                            "description": "Does not use Service Fabric to make its state highly available or reliable. The value is 1."
                          },
                          {
                            "value": "Stateful",
                            "description": "Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2."
                          }
                        ]
                      }
                    },
                    "serviceTypeName": {
                      "type": "string",
                      "description": "The name of the service type"
                    },
                    "partitionDescription": {
                      "type": "object",
                      "discriminator": "partitionScheme",
                      "description": "Describes how the service is partitioned.",
                      "required": [
                        "partitionScheme"
                      ],
                      "properties": {
                        "partitionScheme": {
                          "description": "Specifies how the service is partitioned.",
                          "type": "string",
                          "enum": [
                            "Invalid",
                            "Singleton",
                            "UniformInt64Range",
                            "Named"
                          ],
                          "x-ms-enum": {
                            "name": "PartitionScheme",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Invalid",
                                "description": "Indicates the partition kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                              },
                              {
                                "value": "Singleton",
                                "description": "Indicates that the partition is based on string names, and is a SingletonPartitionSchemeDescription object, The value is 1."
                              },
                              {
                                "value": "UniformInt64Range",
                                "description": "Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionSchemeDescription object. The value is 2."
                              },
                              {
                                "value": "Named",
                                "description": "Indicates that the partition is based on string names, and is a NamedPartitionSchemeDescription object. The value is 3"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "servicePackageActivationMode": {
                      "type": "string",
                      "description": "The activation Mode of the service package",
                      "enum": [
                        "SharedProcess",
                        "ExclusiveProcess"
                      ],
                      "x-ms-enum": {
                        "name": "ArmServicePackageActivationMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "SharedProcess",
                            "description": "Indicates the application package activation mode will use shared process."
                          },
                          {
                            "value": "ExclusiveProcess",
                            "description": "Indicates the application package activation mode will use exclusive process."
                          }
                        ]
                      }
                    },
                    "serviceDnsName": {
                      "type": "string",
                      "description": "Dns name used for the service. If this is specified, then the service can be accessed via its DNS name instead of service name."
                    }
                  }
                }
              }
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "The request was accepted and the operation will complete asynchronously.",
            "schema": {
              "type": "object",
              "description": "The service resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "It will be deprecated in New API, resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Azure resource etag.",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "The service resource properties.",
                  "required": [
                    "serviceKind"
                  ],
                  "discriminator": "serviceKind",
                  "properties": {
                    "placementConstraints": {
                      "type": "string",
                      "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\"."
                    },
                    "correlationScheme": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Creates a particular correlation between services.",
                        "required": [
                          "scheme",
                          "serviceName"
                        ],
                        "properties": {
                          "scheme": {
                            "description": "The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.",
                            "type": "string",
                            "enum": [
                              "Invalid",
                              "Affinity",
                              "AlignedAffinity",
                              "NonAlignedAffinity"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceCorrelationScheme",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Invalid",
                                  "description": "An invalid correlation scheme. Cannot be used. The value is zero."
                                },
                                {
                                  "value": "Affinity",
                                  "description": "Indicates that this service has an affinity relationship with another service. Provided for backwards compatibility, consider preferring the Aligned or NonAlignedAffinity options. The value is 1."
                                },
                                {
                                  "value": "AlignedAffinity",
                                  "description": "Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 2."
                                },
                                {
                                  "value": "NonAlignedAffinity",
                                  "description": "Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 3."
                                }
                              ]
                            }
                          },
                          "serviceName": {
                            "description": "The name of the service that the correlation relationship is established with.",
                            "type": "string"
                          }
                        }
                      },
                      "description": "A list that describes the correlation of the service with other services."
                    },
                    "serviceLoadMetrics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Specifies a metric to load balance a service during runtime.",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive."
                          },
                          "weight": {
                            "description": "The service load metric relative weight, compared to other metrics configured for this service, as a number.",
                            "type": "string",
                            "enum": [
                              "Zero",
                              "Low",
                              "Medium",
                              "High"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceLoadMetricWeight",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Zero",
                                  "description": "Disables resource balancing for this metric. This value is zero."
                                },
                                {
                                  "value": "Low",
                                  "description": "Specifies the metric weight of the service load as Low. The value is 1."
                                },
                                {
                                  "value": "Medium",
                                  "description": "Specifies the metric weight of the service load as Medium. The value is 2."
                                },
                                {
                                  "value": "High",
                                  "description": "Specifies the metric weight of the service load as High. The value is 3."
                                }
                              ]
                            }
                          },
                          "primaryDefaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica."
                          },
                          "secondaryDefaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica."
                          },
                          "defaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric."
                          }
                        }
                      },
                      "description": "The service load metrics is given as an array of ServiceLoadMetricDescription objects."
                    },
                    "servicePlacementPolicies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "discriminator": "type",
                        "description": "Describes the policy to be used for placement of a Service Fabric service.",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The type of placement policy for a service fabric service. Following are the possible values.",
                            "enum": [
                              "Invalid",
                              "InvalidDomain",
                              "RequiredDomain",
                              "PreferredPrimaryDomain",
                              "RequiredDomainDistribution",
                              "NonPartiallyPlaceService"
                            ],
                            "x-ms-enum": {
                              "name": "ServicePlacementPolicyType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Invalid",
                                  "description": "Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                                },
                                {
                                  "value": "InvalidDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1."
                                },
                                {
                                  "value": "RequiredDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2."
                                },
                                {
                                  "value": "PreferredPrimaryDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3."
                                },
                                {
                                  "value": "RequiredDomainDistribution",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4."
                                },
                                {
                                  "value": "NonPartiallyPlaceService",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "description": "A list that describes the correlation of the service with other services."
                    },
                    "defaultMoveCost": {
                      "type": "string",
                      "description": "Specifies the move cost for the service.",
                      "enum": [
                        "Zero",
                        "Low",
                        "Medium",
                        "High"
                      ],
                      "x-ms-enum": {
                        "name": "MoveCost",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Zero",
                            "description": "Zero move cost. This value is zero."
                          },
                          {
                            "value": "Low",
                            "description": "Specifies the move cost of the service as Low. The value is 1."
                          },
                          {
                            "value": "Medium",
                            "description": "Specifies the move cost of the service as Medium. The value is 2."
                          },
                          {
                            "value": "High",
                            "description": "Specifies the move cost of the service as High. The value is 3."
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response"
                    },
                    "serviceKind": {
                      "type": "string",
                      "description": "The kind of service (Stateless or Stateful).",
                      "enum": [
                        "Invalid",
                        "Stateless",
                        "Stateful"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceKind",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Invalid",
                            "description": "Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                          },
                          {
                            "value": "Stateless",
                            "description": "Does not use Service Fabric to make its state highly available or reliable. The value is 1."
                          },
                          {
                            "value": "Stateful",
                            "description": "Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2."
                          }
                        ]
                      }
                    },
                    "serviceTypeName": {
                      "type": "string",
                      "description": "The name of the service type"
                    },
                    "partitionDescription": {
                      "type": "object",
                      "discriminator": "partitionScheme",
                      "description": "Describes how the service is partitioned.",
                      "required": [
                        "partitionScheme"
                      ],
                      "properties": {
                        "partitionScheme": {
                          "description": "Specifies how the service is partitioned.",
                          "type": "string",
                          "enum": [
                            "Invalid",
                            "Singleton",
                            "UniformInt64Range",
                            "Named"
                          ],
                          "x-ms-enum": {
                            "name": "PartitionScheme",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Invalid",
                                "description": "Indicates the partition kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                              },
                              {
                                "value": "Singleton",
                                "description": "Indicates that the partition is based on string names, and is a SingletonPartitionSchemeDescription object, The value is 1."
                              },
                              {
                                "value": "UniformInt64Range",
                                "description": "Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionSchemeDescription object. The value is 2."
                              },
                              {
                                "value": "Named",
                                "description": "Indicates that the partition is based on string names, and is a NamedPartitionSchemeDescription object. The value is 3"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "servicePackageActivationMode": {
                      "type": "string",
                      "description": "The activation Mode of the service package",
                      "enum": [
                        "SharedProcess",
                        "ExclusiveProcess"
                      ],
                      "x-ms-enum": {
                        "name": "ArmServicePackageActivationMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "SharedProcess",
                            "description": "Indicates the application package activation mode will use shared process."
                          },
                          {
                            "value": "ExclusiveProcess",
                            "description": "Indicates the application package activation mode will use exclusive process."
                          }
                        ]
                      }
                    },
                    "serviceDnsName": {
                      "type": "string",
                      "description": "Dns name used for the service. If this is specified, then the service can be accessed via its DNS name instead of service name."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Service"
        ],
        "operationId": "Services_Update",
        "summary": "Updates a Service Fabric service resource.",
        "description": "Update a Service Fabric service resource with the specified name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the service resource in the format of {applicationName}~{serviceName}.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2021-06-01\" for this specification.",
            "required": true,
            "type": "string",
            "enum": [
              "2021-06-01"
            ],
            "default": "2021-06-01",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The service resource for patch operations.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The service resource for patch operations.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "It will be deprecated in New API, resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Azure resource etag.",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "The service resource properties for patch operations.",
                  "required": [
                    "serviceKind"
                  ],
                  "discriminator": "serviceKind",
                  "properties": {
                    "placementConstraints": {
                      "type": "string",
                      "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\"."
                    },
                    "correlationScheme": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Creates a particular correlation between services.",
                        "required": [
                          "scheme",
                          "serviceName"
                        ],
                        "properties": {
                          "scheme": {
                            "description": "The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.",
                            "type": "string",
                            "enum": [
                              "Invalid",
                              "Affinity",
                              "AlignedAffinity",
                              "NonAlignedAffinity"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceCorrelationScheme",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Invalid",
                                  "description": "An invalid correlation scheme. Cannot be used. The value is zero."
                                },
                                {
                                  "value": "Affinity",
                                  "description": "Indicates that this service has an affinity relationship with another service. Provided for backwards compatibility, consider preferring the Aligned or NonAlignedAffinity options. The value is 1."
                                },
                                {
                                  "value": "AlignedAffinity",
                                  "description": "Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 2."
                                },
                                {
                                  "value": "NonAlignedAffinity",
                                  "description": "Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 3."
                                }
                              ]
                            }
                          },
                          "serviceName": {
                            "description": "The name of the service that the correlation relationship is established with.",
                            "type": "string"
                          }
                        }
                      },
                      "description": "A list that describes the correlation of the service with other services."
                    },
                    "serviceLoadMetrics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Specifies a metric to load balance a service during runtime.",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive."
                          },
                          "weight": {
                            "description": "The service load metric relative weight, compared to other metrics configured for this service, as a number.",
                            "type": "string",
                            "enum": [
                              "Zero",
                              "Low",
                              "Medium",
                              "High"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceLoadMetricWeight",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Zero",
                                  "description": "Disables resource balancing for this metric. This value is zero."
                                },
                                {
                                  "value": "Low",
                                  "description": "Specifies the metric weight of the service load as Low. The value is 1."
                                },
                                {
                                  "value": "Medium",
                                  "description": "Specifies the metric weight of the service load as Medium. The value is 2."
                                },
                                {
                                  "value": "High",
                                  "description": "Specifies the metric weight of the service load as High. The value is 3."
                                }
                              ]
                            }
                          },
                          "primaryDefaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica."
                          },
                          "secondaryDefaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica."
                          },
                          "defaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric."
                          }
                        }
                      },
                      "description": "The service load metrics is given as an array of ServiceLoadMetricDescription objects."
                    },
                    "servicePlacementPolicies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "discriminator": "type",
                        "description": "Describes the policy to be used for placement of a Service Fabric service.",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The type of placement policy for a service fabric service. Following are the possible values.",
                            "enum": [
                              "Invalid",
                              "InvalidDomain",
                              "RequiredDomain",
                              "PreferredPrimaryDomain",
                              "RequiredDomainDistribution",
                              "NonPartiallyPlaceService"
                            ],
                            "x-ms-enum": {
                              "name": "ServicePlacementPolicyType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Invalid",
                                  "description": "Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                                },
                                {
                                  "value": "InvalidDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1."
                                },
                                {
                                  "value": "RequiredDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2."
                                },
                                {
                                  "value": "PreferredPrimaryDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3."
                                },
                                {
                                  "value": "RequiredDomainDistribution",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4."
                                },
                                {
                                  "value": "NonPartiallyPlaceService",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "description": "A list that describes the correlation of the service with other services."
                    },
                    "defaultMoveCost": {
                      "type": "string",
                      "description": "Specifies the move cost for the service.",
                      "enum": [
                        "Zero",
                        "Low",
                        "Medium",
                        "High"
                      ],
                      "x-ms-enum": {
                        "name": "MoveCost",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Zero",
                            "description": "Zero move cost. This value is zero."
                          },
                          {
                            "value": "Low",
                            "description": "Specifies the move cost of the service as Low. The value is 1."
                          },
                          {
                            "value": "Medium",
                            "description": "Specifies the move cost of the service as Medium. The value is 2."
                          },
                          {
                            "value": "High",
                            "description": "Specifies the move cost of the service as High. The value is 3."
                          }
                        ]
                      }
                    },
                    "serviceKind": {
                      "type": "string",
                      "description": "The kind of service (Stateless or Stateful).",
                      "enum": [
                        "Invalid",
                        "Stateless",
                        "Stateful"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceKind",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Invalid",
                            "description": "Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                          },
                          {
                            "value": "Stateless",
                            "description": "Does not use Service Fabric to make its state highly available or reliable. The value is 1."
                          },
                          {
                            "value": "Stateful",
                            "description": "Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "The request was accepted and the operation will complete asynchronously.",
            "schema": {
              "type": "object",
              "description": "The service resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "It will be deprecated in New API, resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "Azure resource etag.",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "The service resource properties.",
                  "required": [
                    "serviceKind"
                  ],
                  "discriminator": "serviceKind",
                  "properties": {
                    "placementConstraints": {
                      "type": "string",
                      "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\"."
                    },
                    "correlationScheme": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Creates a particular correlation between services.",
                        "required": [
                          "scheme",
                          "serviceName"
                        ],
                        "properties": {
                          "scheme": {
                            "description": "The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.",
                            "type": "string",
                            "enum": [
                              "Invalid",
                              "Affinity",
                              "AlignedAffinity",
                              "NonAlignedAffinity"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceCorrelationScheme",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Invalid",
                                  "description": "An invalid correlation scheme. Cannot be used. The value is zero."
                                },
                                {
                                  "value": "Affinity",
                                  "description": "Indicates that this service has an affinity relationship with another service. Provided for backwards compatibility, consider preferring the Aligned or NonAlignedAffinity options. The value is 1."
                                },
                                {
                                  "value": "AlignedAffinity",
                                  "description": "Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 2."
                                },
                                {
                                  "value": "NonAlignedAffinity",
                                  "description": "Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 3."
                                }
                              ]
                            }
                          },
                          "serviceName": {
                            "description": "The name of the service that the correlation relationship is established with.",
                            "type": "string"
                          }
                        }
                      },
                      "description": "A list that describes the correlation of the service with other services."
                    },
                    "serviceLoadMetrics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Specifies a metric to load balance a service during runtime.",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive."
                          },
                          "weight": {
                            "description": "The service load metric relative weight, compared to other metrics configured for this service, as a number.",
                            "type": "string",
                            "enum": [
                              "Zero",
                              "Low",
                              "Medium",
                              "High"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceLoadMetricWeight",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Zero",
                                  "description": "Disables resource balancing for this metric. This value is zero."
                                },
                                {
                                  "value": "Low",
                                  "description": "Specifies the metric weight of the service load as Low. The value is 1."
                                },
                                {
                                  "value": "Medium",
                                  "description": "Specifies the metric weight of the service load as Medium. The value is 2."
                                },
                                {
                                  "value": "High",
                                  "description": "Specifies the metric weight of the service load as High. The value is 3."
                                }
                              ]
                            }
                          },
                          "primaryDefaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica."
                          },
                          "secondaryDefaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica."
                          },
                          "defaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric."
                          }
                        }
                      },
                      "description": "The service load metrics is given as an array of ServiceLoadMetricDescription objects."
                    },
                    "servicePlacementPolicies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "discriminator": "type",
                        "description": "Describes the policy to be used for placement of a Service Fabric service.",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The type of placement policy for a service fabric service. Following are the possible values.",
                            "enum": [
                              "Invalid",
                              "InvalidDomain",
                              "RequiredDomain",
                              "PreferredPrimaryDomain",
                              "RequiredDomainDistribution",
                              "NonPartiallyPlaceService"
                            ],
                            "x-ms-enum": {
                              "name": "ServicePlacementPolicyType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Invalid",
                                  "description": "Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                                },
                                {
                                  "value": "InvalidDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1."
                                },
                                {
                                  "value": "RequiredDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2."
                                },
                                {
                                  "value": "PreferredPrimaryDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3."
                                },
                                {
                                  "value": "RequiredDomainDistribution",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4."
                                },
                                {
                                  "value": "NonPartiallyPlaceService",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "description": "A list that describes the correlation of the service with other services."
                    },
                    "defaultMoveCost": {
                      "type": "string",
                      "description": "Specifies the move cost for the service.",
                      "enum": [
                        "Zero",
                        "Low",
                        "Medium",
                        "High"
                      ],
                      "x-ms-enum": {
                        "name": "MoveCost",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Zero",
                            "description": "Zero move cost. This value is zero."
                          },
                          {
                            "value": "Low",
                            "description": "Specifies the move cost of the service as Low. The value is 1."
                          },
                          {
                            "value": "Medium",
                            "description": "Specifies the move cost of the service as Medium. The value is 2."
                          },
                          {
                            "value": "High",
                            "description": "Specifies the move cost of the service as High. The value is 3."
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response"
                    },
                    "serviceKind": {
                      "type": "string",
                      "description": "The kind of service (Stateless or Stateful).",
                      "enum": [
                        "Invalid",
                        "Stateless",
                        "Stateful"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceKind",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Invalid",
                            "description": "Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                          },
                          {
                            "value": "Stateless",
                            "description": "Does not use Service Fabric to make its state highly available or reliable. The value is 1."
                          },
                          {
                            "value": "Stateful",
                            "description": "Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2."
                          }
                        ]
                      }
                    },
                    "serviceTypeName": {
                      "type": "string",
                      "description": "The name of the service type"
                    },
                    "partitionDescription": {
                      "type": "object",
                      "discriminator": "partitionScheme",
                      "description": "Describes how the service is partitioned.",
                      "required": [
                        "partitionScheme"
                      ],
                      "properties": {
                        "partitionScheme": {
                          "description": "Specifies how the service is partitioned.",
                          "type": "string",
                          "enum": [
                            "Invalid",
                            "Singleton",
                            "UniformInt64Range",
                            "Named"
                          ],
                          "x-ms-enum": {
                            "name": "PartitionScheme",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Invalid",
                                "description": "Indicates the partition kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                              },
                              {
                                "value": "Singleton",
                                "description": "Indicates that the partition is based on string names, and is a SingletonPartitionSchemeDescription object, The value is 1."
                              },
                              {
                                "value": "UniformInt64Range",
                                "description": "Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionSchemeDescription object. The value is 2."
                              },
                              {
                                "value": "Named",
                                "description": "Indicates that the partition is based on string names, and is a NamedPartitionSchemeDescription object. The value is 3"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "servicePackageActivationMode": {
                      "type": "string",
                      "description": "The activation Mode of the service package",
                      "enum": [
                        "SharedProcess",
                        "ExclusiveProcess"
                      ],
                      "x-ms-enum": {
                        "name": "ArmServicePackageActivationMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "SharedProcess",
                            "description": "Indicates the application package activation mode will use shared process."
                          },
                          {
                            "value": "ExclusiveProcess",
                            "description": "Indicates the application package activation mode will use exclusive process."
                          }
                        ]
                      }
                    },
                    "serviceDnsName": {
                      "type": "string",
                      "description": "Dns name used for the service. If this is specified, then the service can be accessed via its DNS name instead of service name."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Service"
        ],
        "operationId": "Services_Delete",
        "summary": "Deletes a Service Fabric service resource.",
        "description": "Delete a Service Fabric service resource with the specified name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the service resource in the format of {applicationName}~{serviceName}.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2021-06-01\" for this specification.",
            "required": true,
            "type": "string",
            "enum": [
              "2021-06-01"
            ],
            "default": "2021-06-01",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "202": {
            "description": "The request was accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "The resource was not found."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applications/{applicationName}/services": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Services_List",
        "summary": "Gets the list of service resources created in the specified Service Fabric application resource.",
        "description": "Gets all service resources created or in the process of being created in the Service Fabric application resource.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2021-06-01\" for this specification.",
            "required": true,
            "type": "string",
            "enum": [
              "2021-06-01"
            ],
            "default": "2021-06-01",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The list of service resources.",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "The service resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Azure resource identifier.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "Azure resource name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "Azure resource type.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "It will be deprecated in New API, resource location depends on the parent resource.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Azure resource tags.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "etag": {
                        "type": "string",
                        "description": "Azure resource etag.",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource."
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource."
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)."
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "description": "The service resource properties.",
                        "required": [
                          "serviceKind"
                        ],
                        "discriminator": "serviceKind",
                        "properties": {
                          "placementConstraints": {
                            "type": "string",
                            "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\"."
                          },
                          "correlationScheme": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Creates a particular correlation between services.",
                              "required": [
                                "scheme",
                                "serviceName"
                              ],
                              "properties": {
                                "scheme": {
                                  "description": "The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.",
                                  "type": "string",
                                  "enum": [
                                    "Invalid",
                                    "Affinity",
                                    "AlignedAffinity",
                                    "NonAlignedAffinity"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ServiceCorrelationScheme",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "Invalid",
                                        "description": "An invalid correlation scheme. Cannot be used. The value is zero."
                                      },
                                      {
                                        "value": "Affinity",
                                        "description": "Indicates that this service has an affinity relationship with another service. Provided for backwards compatibility, consider preferring the Aligned or NonAlignedAffinity options. The value is 1."
                                      },
                                      {
                                        "value": "AlignedAffinity",
                                        "description": "Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 2."
                                      },
                                      {
                                        "value": "NonAlignedAffinity",
                                        "description": "Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 3."
                                      }
                                    ]
                                  }
                                },
                                "serviceName": {
                                  "description": "The name of the service that the correlation relationship is established with.",
                                  "type": "string"
                                }
                              }
                            },
                            "description": "A list that describes the correlation of the service with other services."
                          },
                          "serviceLoadMetrics": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Specifies a metric to load balance a service during runtime.",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive."
                                },
                                "weight": {
                                  "description": "The service load metric relative weight, compared to other metrics configured for this service, as a number.",
                                  "type": "string",
                                  "enum": [
                                    "Zero",
                                    "Low",
                                    "Medium",
                                    "High"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ServiceLoadMetricWeight",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "Zero",
                                        "description": "Disables resource balancing for this metric. This value is zero."
                                      },
                                      {
                                        "value": "Low",
                                        "description": "Specifies the metric weight of the service load as Low. The value is 1."
                                      },
                                      {
                                        "value": "Medium",
                                        "description": "Specifies the metric weight of the service load as Medium. The value is 2."
                                      },
                                      {
                                        "value": "High",
                                        "description": "Specifies the metric weight of the service load as High. The value is 3."
                                      }
                                    ]
                                  }
                                },
                                "primaryDefaultLoad": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica."
                                },
                                "secondaryDefaultLoad": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica."
                                },
                                "defaultLoad": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric."
                                }
                              }
                            },
                            "description": "The service load metrics is given as an array of ServiceLoadMetricDescription objects."
                          },
                          "servicePlacementPolicies": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "discriminator": "type",
                              "description": "Describes the policy to be used for placement of a Service Fabric service.",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "The type of placement policy for a service fabric service. Following are the possible values.",
                                  "enum": [
                                    "Invalid",
                                    "InvalidDomain",
                                    "RequiredDomain",
                                    "PreferredPrimaryDomain",
                                    "RequiredDomainDistribution",
                                    "NonPartiallyPlaceService"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ServicePlacementPolicyType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "Invalid",
                                        "description": "Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                                      },
                                      {
                                        "value": "InvalidDomain",
                                        "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1."
                                      },
                                      {
                                        "value": "RequiredDomain",
                                        "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2."
                                      },
                                      {
                                        "value": "PreferredPrimaryDomain",
                                        "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3."
                                      },
                                      {
                                        "value": "RequiredDomainDistribution",
                                        "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4."
                                      },
                                      {
                                        "value": "NonPartiallyPlaceService",
                                        "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5."
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "description": "A list that describes the correlation of the service with other services."
                          },
                          "defaultMoveCost": {
                            "type": "string",
                            "description": "Specifies the move cost for the service.",
                            "enum": [
                              "Zero",
                              "Low",
                              "Medium",
                              "High"
                            ],
                            "x-ms-enum": {
                              "name": "MoveCost",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Zero",
                                  "description": "Zero move cost. This value is zero."
                                },
                                {
                                  "value": "Low",
                                  "description": "Specifies the move cost of the service as Low. The value is 1."
                                },
                                {
                                  "value": "Medium",
                                  "description": "Specifies the move cost of the service as Medium. The value is 2."
                                },
                                {
                                  "value": "High",
                                  "description": "Specifies the move cost of the service as High. The value is 3."
                                }
                              ]
                            }
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The current deployment or provisioning state, which only appears in the response"
                          },
                          "serviceKind": {
                            "type": "string",
                            "description": "The kind of service (Stateless or Stateful).",
                            "enum": [
                              "Invalid",
                              "Stateless",
                              "Stateful"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceKind",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Invalid",
                                  "description": "Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                                },
                                {
                                  "value": "Stateless",
                                  "description": "Does not use Service Fabric to make its state highly available or reliable. The value is 1."
                                },
                                {
                                  "value": "Stateful",
                                  "description": "Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2."
                                }
                              ]
                            }
                          },
                          "serviceTypeName": {
                            "type": "string",
                            "description": "The name of the service type"
                          },
                          "partitionDescription": {
                            "type": "object",
                            "discriminator": "partitionScheme",
                            "description": "Describes how the service is partitioned.",
                            "required": [
                              "partitionScheme"
                            ],
                            "properties": {
                              "partitionScheme": {
                                "description": "Specifies how the service is partitioned.",
                                "type": "string",
                                "enum": [
                                  "Invalid",
                                  "Singleton",
                                  "UniformInt64Range",
                                  "Named"
                                ],
                                "x-ms-enum": {
                                  "name": "PartitionScheme",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Invalid",
                                      "description": "Indicates the partition kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                                    },
                                    {
                                      "value": "Singleton",
                                      "description": "Indicates that the partition is based on string names, and is a SingletonPartitionSchemeDescription object, The value is 1."
                                    },
                                    {
                                      "value": "UniformInt64Range",
                                      "description": "Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionSchemeDescription object. The value is 2."
                                    },
                                    {
                                      "value": "Named",
                                      "description": "Indicates that the partition is based on string names, and is a NamedPartitionSchemeDescription object. The value is 3"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "servicePackageActivationMode": {
                            "type": "string",
                            "description": "The activation Mode of the service package",
                            "enum": [
                              "SharedProcess",
                              "ExclusiveProcess"
                            ],
                            "x-ms-enum": {
                              "name": "ArmServicePackageActivationMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "SharedProcess",
                                  "description": "Indicates the application package activation mode will use shared process."
                                },
                                {
                                  "value": "ExclusiveProcess",
                                  "description": "Indicates the application package activation mode will use exclusive process."
                                }
                              ]
                            }
                          },
                          "serviceDnsName": {
                            "type": "string",
                            "description": "Dns name used for the service. If this is specified, then the service can be accessed via its DNS name instead of service name."
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of service list results if there are any.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}": {
      "get": {
        "tags": [
          "Cluster"
        ],
        "operationId": "Clusters_Get",
        "summary": "Gets a Service Fabric cluster resource.",
        "description": "Get a Service Fabric cluster resource created or in the process of being created in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2021-06-01\" for this specification.",
            "required": true,
            "type": "string",
            "enum": [
              "2021-06-01"
            ],
            "default": "2021-06-01",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The cluster resource\n",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Azure resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Azure resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "Azure resource etag.",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The cluster resource properties",
                  "type": "object",
                  "required": [
                    "managementEndpoint",
                    "nodeTypes"
                  ],
                  "properties": {
                    "addOnFeatures": {
                      "type": "array",
                      "description": "The list of add-on features to enable in the cluster.",
                      "items": {
                        "type": "string",
                        "description": "Available cluster add-on features",
                        "enum": [
                          "RepairManager",
                          "DnsService",
                          "BackupRestoreService",
                          "ResourceMonitorService"
                        ]
                      }
                    },
                    "availableClusterVersions": {
                      "type": "array",
                      "description": "The Service Fabric runtime versions available for this cluster.",
                      "readOnly": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "codeVersion": {
                            "type": "string",
                            "description": "The Service Fabric runtime version of the cluster."
                          },
                          "supportExpiryUtc": {
                            "type": "string",
                            "description": "The date of expiry of support of the version."
                          },
                          "environment": {
                            "description": "Indicates if this version is for Windows or Linux operating system.",
                            "type": "string",
                            "enum": [
                              "Windows",
                              "Linux"
                            ]
                          }
                        },
                        "description": "The detail of the Service Fabric runtime version result"
                      }
                    },
                    "azureActiveDirectory": {
                      "description": "The AAD authentication settings of the cluster.",
                      "type": "object",
                      "properties": {
                        "tenantId": {
                          "type": "string",
                          "description": "Azure active directory tenant id."
                        },
                        "clusterApplication": {
                          "type": "string",
                          "description": "Azure active directory cluster application id."
                        },
                        "clientApplication": {
                          "type": "string",
                          "description": "Azure active directory client application id."
                        }
                      }
                    },
                    "certificate": {
                      "description": "The certificate to use for securing the cluster. The certificate provided will be used for node to node security within the cluster, SSL certificate for cluster management endpoint and default admin client.",
                      "type": "object",
                      "required": [
                        "thumbprint"
                      ],
                      "properties": {
                        "thumbprint": {
                          "type": "string",
                          "description": "Thumbprint of the primary certificate."
                        },
                        "thumbprintSecondary": {
                          "type": "string",
                          "description": "Thumbprint of the secondary certificate."
                        },
                        "x509StoreName": {
                          "type": "string",
                          "description": "The local certificate store location.",
                          "enum": [
                            "AddressBook",
                            "AuthRoot",
                            "CertificateAuthority",
                            "Disallowed",
                            "My",
                            "Root",
                            "TrustedPeople",
                            "TrustedPublisher"
                          ]
                        }
                      }
                    },
                    "certificateCommonNames": {
                      "type": "object",
                      "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
                      "properties": {
                        "commonNames": {
                          "type": "array",
                          "description": "The list of server certificates referenced by common name that are used to secure the cluster.",
                          "items": {
                            "type": "object",
                            "description": "Describes the server certificate details using common name.",
                            "required": [
                              "certificateCommonName",
                              "certificateIssuerThumbprint"
                            ],
                            "properties": {
                              "certificateCommonName": {
                                "type": "string",
                                "description": "The common name of the server certificate."
                              },
                              "certificateIssuerThumbprint": {
                                "type": "string",
                                "description": "The issuer thumbprint of the server certificate."
                              }
                            }
                          }
                        },
                        "x509StoreName": {
                          "type": "string",
                          "description": "The local certificate store location.",
                          "enum": [
                            "AddressBook",
                            "AuthRoot",
                            "CertificateAuthority",
                            "Disallowed",
                            "My",
                            "Root",
                            "TrustedPeople",
                            "TrustedPublisher"
                          ]
                        }
                      }
                    },
                    "clientCertificateCommonNames": {
                      "type": "array",
                      "description": "The list of client certificates referenced by common name that are allowed to manage the cluster.",
                      "items": {
                        "type": "object",
                        "required": [
                          "certificateCommonName",
                          "isAdmin",
                          "certificateIssuerThumbprint"
                        ],
                        "properties": {
                          "isAdmin": {
                            "type": "boolean",
                            "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                          },
                          "certificateCommonName": {
                            "type": "string",
                            "description": "The common name of the client certificate."
                          },
                          "certificateIssuerThumbprint": {
                            "type": "string",
                            "description": "The issuer thumbprint of the client certificate."
                          }
                        },
                        "description": "Describes the client certificate details using common name."
                      }
                    },
                    "clientCertificateThumbprints": {
                      "type": "array",
                      "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster.",
                      "items": {
                        "type": "object",
                        "required": [
                          "certificateThumbprint",
                          "isAdmin"
                        ],
                        "properties": {
                          "isAdmin": {
                            "type": "boolean",
                            "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                          },
                          "certificateThumbprint": {
                            "type": "string",
                            "description": "The thumbprint of the client certificate."
                          }
                        },
                        "description": "Describes the client certificate details using thumbprint."
                      }
                    },
                    "clusterCodeVersion": {
                      "type": "string",
                      "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](https://learn.microsoft.com/rest/api/servicefabric/cluster-versions/list). To get the list of available version for existing clusters use **availableClusterVersions**."
                    },
                    "clusterEndpoint": {
                      "type": "string",
                      "description": "The Azure Resource Provider endpoint. A system service in the cluster connects to this  endpoint.",
                      "readOnly": true
                    },
                    "clusterId": {
                      "type": "string",
                      "description": "A service generated unique identifier for the cluster resource.",
                      "readOnly": true
                    },
                    "clusterState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current state of the cluster.\n\n  - WaitingForNodes - Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it.\n  - Deploying - Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up.\n  - BaselineUpgrade - Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time.\n  - UpdatingUserConfiguration - Indicates that the cluster is being upgraded with the user provided configuration.\n  - UpdatingUserCertificate - Indicates that the cluster is being upgraded with the user provided certificate.\n  - UpdatingInfrastructure - Indicates that the cluster is being upgraded with the latest Service Fabric runtime version. This happens only when the **upgradeMode** is set to 'Automatic'.\n  - EnforcingClusterVersion - Indicates that cluster is on a different version than expected and the cluster is being upgraded to the expected version.\n  - UpgradeServiceUnreachable - Indicates that the system service in the cluster is no longer polling the Resource Provider. Clusters in this state cannot be managed by the Resource Provider.\n  - AutoScale - Indicates that the ReliabilityLevel of the cluster is being adjusted.\n  - Ready - Indicates that the cluster is in a stable state.\n",
                      "enum": [
                        "WaitingForNodes",
                        "Deploying",
                        "BaselineUpgrade",
                        "UpdatingUserConfiguration",
                        "UpdatingUserCertificate",
                        "UpdatingInfrastructure",
                        "EnforcingClusterVersion",
                        "UpgradeServiceUnreachable",
                        "AutoScale",
                        "Ready"
                      ]
                    },
                    "diagnosticsStorageAccountConfig": {
                      "description": "The storage account information for storing Service Fabric diagnostic logs.",
                      "type": "object",
                      "required": [
                        "blobEndpoint",
                        "protectedAccountKeyName",
                        "queueEndpoint",
                        "storageAccountName",
                        "tableEndpoint"
                      ],
                      "properties": {
                        "storageAccountName": {
                          "type": "string",
                          "description": "The Azure storage account name."
                        },
                        "protectedAccountKeyName": {
                          "type": "string",
                          "description": "The protected diagnostics storage key name."
                        },
                        "protectedAccountKeyName2": {
                          "type": "string",
                          "description": "The secondary protected diagnostics storage key name. If one of the storage account keys is rotated the cluster will fallback to using the other."
                        },
                        "blobEndpoint": {
                          "type": "string",
                          "description": "The blob endpoint of the azure storage account."
                        },
                        "queueEndpoint": {
                          "type": "string",
                          "description": "The queue endpoint of the azure storage account."
                        },
                        "tableEndpoint": {
                          "type": "string",
                          "description": "The table endpoint of the azure storage account."
                        }
                      }
                    },
                    "eventStoreServiceEnabled": {
                      "type": "boolean",
                      "description": "Indicates if the event store service is enabled."
                    },
                    "fabricSettings": {
                      "type": "array",
                      "description": "The list of custom fabric settings to configure the cluster.",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "parameters"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The section name of the fabric settings."
                          },
                          "parameters": {
                            "type": "array",
                            "description": "The collection of parameters in the section.",
                            "items": {
                              "type": "object",
                              "required": [
                                "name",
                                "value"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The parameter name of fabric setting."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The parameter value of fabric setting."
                                }
                              },
                              "description": "Describes a parameter in fabric settings of the cluster."
                            }
                          }
                        },
                        "description": "Describes a section in the fabric settings of the cluster."
                      }
                    },
                    "managementEndpoint": {
                      "type": "string",
                      "description": "The http management endpoint of the cluster."
                    },
                    "nodeTypes": {
                      "type": "array",
                      "description": "The list of node types in the cluster.",
                      "items": {
                        "type": "object",
                        "required": [
                          "clientConnectionEndpointPort",
                          "httpGatewayEndpointPort",
                          "isPrimary",
                          "name",
                          "vmInstanceCount"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the node type."
                          },
                          "placementProperties": {
                            "type": "object",
                            "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
                            "additionalProperties": {
                              "type": "string",
                              "description": "Placement tag value"
                            }
                          },
                          "capacities": {
                            "type": "object",
                            "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
                            "additionalProperties": {
                              "type": "string",
                              "description": "Capacity tag value"
                            }
                          },
                          "clientConnectionEndpointPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The TCP cluster management endpoint port."
                          },
                          "httpGatewayEndpointPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The HTTP cluster management endpoint port."
                          },
                          "durabilityLevel": {
                            "type": "string",
                            "description": "The durability level of the node type. Learn about [DurabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - Bronze - No privileges. This is the default.\n  - Silver - The infrastructure jobs can be paused for a duration of 10 minutes per UD.\n  - Gold - The infrastructure jobs can be paused for a duration of 2 hours per UD. Gold durability can be enabled only on full node VM skus like D15_V2, G5 etc.\n",
                            "enum": [
                              "Bronze",
                              "Silver",
                              "Gold"
                            ]
                          },
                          "applicationPorts": {
                            "description": "The range of ports from which cluster assigned port to Service Fabric applications.",
                            "type": "object",
                            "required": [
                              "endPort",
                              "startPort"
                            ],
                            "properties": {
                              "startPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Starting port of a range of ports"
                              },
                              "endPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "End port of a range of ports"
                              }
                            }
                          },
                          "ephemeralPorts": {
                            "description": "The range of ephemeral ports that nodes in this node type should be configured with.",
                            "type": "object",
                            "required": [
                              "endPort",
                              "startPort"
                            ],
                            "properties": {
                              "startPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Starting port of a range of ports"
                              },
                              "endPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "End port of a range of ports"
                              }
                            }
                          },
                          "isPrimary": {
                            "type": "boolean",
                            "description": "The node type on which system services will run. Only one node type should be marked as primary. Primary node type cannot be deleted or changed for existing clusters."
                          },
                          "vmInstanceCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "VMInstanceCount should be 1 to n, where n indicates the number of VM instances corresponding to this nodeType. VMInstanceCount = 0 can be done only in these scenarios: NodeType is a secondary nodeType. Durability = Bronze or Durability >= Bronze and InfrastructureServiceManager = true. If VMInstanceCount = 0, implies the VMs for this nodeType will not be used for the initial cluster size computation.",
                            "minimum": 0,
                            "maximum": 2147483647
                          },
                          "reverseProxyEndpointPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The endpoint used by reverse proxy."
                          },
                          "isStateless": {
                            "type": "boolean",
                            "description": "Indicates if the node type can only host Stateless workloads."
                          },
                          "multipleAvailabilityZones": {
                            "type": "boolean",
                            "description": "Indicates if the node type is enabled to support multiple zones."
                          }
                        },
                        "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning state of the cluster resource.",
                      "readOnly": true,
                      "enum": [
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "reliabilityLevel": {
                      "type": "string",
                      "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n",
                      "enum": [
                        "None",
                        "Bronze",
                        "Silver",
                        "Gold",
                        "Platinum"
                      ]
                    },
                    "reverseProxyCertificate": {
                      "description": "The server certificate used by reverse proxy.",
                      "type": "object",
                      "required": [
                        "thumbprint"
                      ],
                      "properties": {
                        "thumbprint": {
                          "type": "string",
                          "description": "Thumbprint of the primary certificate."
                        },
                        "thumbprintSecondary": {
                          "type": "string",
                          "description": "Thumbprint of the secondary certificate."
                        },
                        "x509StoreName": {
                          "type": "string",
                          "description": "The local certificate store location.",
                          "enum": [
                            "AddressBook",
                            "AuthRoot",
                            "CertificateAuthority",
                            "Disallowed",
                            "My",
                            "Root",
                            "TrustedPeople",
                            "TrustedPublisher"
                          ]
                        }
                      }
                    },
                    "reverseProxyCertificateCommonNames": {
                      "type": "object",
                      "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
                      "properties": {
                        "commonNames": {
                          "type": "array",
                          "description": "The list of server certificates referenced by common name that are used to secure the cluster.",
                          "items": {
                            "type": "object",
                            "description": "Describes the server certificate details using common name.",
                            "required": [
                              "certificateCommonName",
                              "certificateIssuerThumbprint"
                            ],
                            "properties": {
                              "certificateCommonName": {
                                "type": "string",
                                "description": "The common name of the server certificate."
                              },
                              "certificateIssuerThumbprint": {
                                "type": "string",
                                "description": "The issuer thumbprint of the server certificate."
                              }
                            }
                          }
                        },
                        "x509StoreName": {
                          "type": "string",
                          "description": "The local certificate store location.",
                          "enum": [
                            "AddressBook",
                            "AuthRoot",
                            "CertificateAuthority",
                            "Disallowed",
                            "My",
                            "Root",
                            "TrustedPeople",
                            "TrustedPublisher"
                          ]
                        }
                      }
                    },
                    "upgradeDescription": {
                      "description": "The policy to use when upgrading the cluster.",
                      "type": "object",
                      "required": [
                        "healthCheckRetryTimeout",
                        "healthCheckStableDuration",
                        "healthCheckWaitDuration",
                        "healthPolicy",
                        "upgradeDomainTimeout",
                        "upgradeReplicaSetCheckTimeout",
                        "upgradeTimeout"
                      ],
                      "properties": {
                        "forceRestart": {
                          "type": "boolean",
                          "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data)."
                        },
                        "upgradeReplicaSetCheckTimeout": {
                          "type": "string",
                          "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "healthCheckWaitDuration": {
                          "type": "string",
                          "description": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "healthCheckStableDuration": {
                          "type": "string",
                          "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "healthCheckRetryTimeout": {
                          "type": "string",
                          "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "upgradeTimeout": {
                          "type": "string",
                          "description": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "upgradeDomainTimeout": {
                          "type": "string",
                          "description": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "healthPolicy": {
                          "description": "The cluster health policy used when upgrading the cluster.",
                          "type": "object",
                          "properties": {
                            "maxPercentUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.\n",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentUnhealthyApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.\nThe computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.\n",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 100
                            },
                            "applicationHealthPolicies": {
                              "description": "Defines the application health policy map used to evaluate the health of an application or one of its children entities.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
                                "properties": {
                                  "defaultServiceTypeHealthPolicy": {
                                    "description": "The health policy used by default to evaluate the health of a service type.",
                                    "type": "object",
                                    "properties": {
                                      "maxPercentUnhealthyServices": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                        "default": 0,
                                        "minimum": 0,
                                        "maximum": 100
                                      }
                                    }
                                  },
                                  "serviceTypeHealthPolicies": {
                                    "description": "The map with service type health policy per service type name. The map is empty by default.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object",
                                      "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                                      "properties": {
                                        "maxPercentUnhealthyServices": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                          "default": 0,
                                          "minimum": 0,
                                          "maximum": 100
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "deltaHealthPolicy": {
                          "description": "The cluster delta health policy used when upgrading the cluster.",
                          "type": "object",
                          "required": [
                            "maxPercentDeltaUnhealthyApplications",
                            "maxPercentDeltaUnhealthyNodes",
                            "maxPercentUpgradeDomainDeltaUnhealthyNodes"
                          ],
                          "properties": {
                            "maxPercentDeltaUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentDeltaUnhealthyApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "applicationDeltaHealthPolicies": {
                              "description": "Defines the application delta health policy map used to evaluate the health of an application or one of its child entities when upgrading the cluster.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Defines a delta health policy used to evaluate the health of an application or one of its child entities when upgrading the cluster.\n",
                                "properties": {
                                  "defaultServiceTypeDeltaHealthPolicy": {
                                    "description": "The delta health policy used by default to evaluate the health of a service type when upgrading the cluster.",
                                    "type": "object",
                                    "properties": {
                                      "maxPercentDeltaUnhealthyServices": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                                        "default": 0,
                                        "minimum": 0,
                                        "maximum": 100
                                      }
                                    }
                                  },
                                  "serviceTypeDeltaHealthPolicies": {
                                    "description": "The map with service type delta health policy per service type name. The map is empty by default.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object",
                                      "description": "Represents the delta health policy used to evaluate the health of services belonging to a service type when upgrading the cluster.\n",
                                      "properties": {
                                        "maxPercentDeltaUnhealthyServices": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                                          "default": 0,
                                          "minimum": 0,
                                          "maximum": 100
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "upgradeMode": {
                      "type": "string",
                      "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.",
                      "enum": [
                        "Automatic",
                        "Manual"
                      ],
                      "default": "Automatic",
                      "x-ms-enum": {
                        "name": "UpgradeMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Automatic",
                            "description": "The cluster will be automatically upgraded to the latest Service Fabric runtime version, **upgradeWave** will determine when the upgrade starts after the new version becomes available."
                          },
                          {
                            "value": "Manual",
                            "description": "The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource."
                          }
                        ]
                      }
                    },
                    "applicationTypeVersionsCleanupPolicy": {
                      "description": "The policy used to clean up unused versions.",
                      "type": "object",
                      "required": [
                        "maxUnusedVersionsToKeep"
                      ],
                      "properties": {
                        "maxUnusedVersionsToKeep": {
                          "type": "integer",
                          "format": "int64",
                          "minimum": 0,
                          "description": "Number of unused versions per application type to keep."
                        }
                      }
                    },
                    "vmImage": {
                      "type": "string",
                      "description": "The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used."
                    },
                    "sfZonalUpgradeMode": {
                      "type": "string",
                      "enum": [
                        "Parallel",
                        "Hierarchical"
                      ],
                      "x-ms-enum": {
                        "name": "sfZonalUpgradeMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Parallel",
                            "description": "VMs under the node type are grouped into UDs and ignore the zone info in five UDs. This setting causes UDs across all zones to be upgraded at the same time. This deployment mode is faster for upgrades, we don't recommend it because it goes against the SDP guidelines, which state that the updates should be applied to one zone at a time."
                          },
                          {
                            "value": "Hierarchical",
                            "description": "If this value is omitted or set to Hierarchical, VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone. This update process is safer for the cluster and the user application."
                          }
                        ]
                      },
                      "description": "This property controls the logical grouping of VMs in upgrade domains (UDs). This property can't be modified if a node type with multiple Availability Zones is already present in the cluster."
                    },
                    "vmssZonalUpgradeMode": {
                      "type": "string",
                      "enum": [
                        "Parallel",
                        "Hierarchical"
                      ],
                      "x-ms-enum": {
                        "name": "vmssZonalUpgradeMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Parallel",
                            "description": "Updates will happen in all Availability Zones at once for the virtual machine scale sets."
                          },
                          {
                            "value": "Hierarchical",
                            "description": "VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone."
                          }
                        ]
                      },
                      "description": "This property defines the upgrade mode for the virtual machine scale set, it is mandatory if a node type with multiple Availability Zones is added."
                    },
                    "infrastructureServiceManager": {
                      "type": "boolean",
                      "description": "Indicates if infrastructure service manager is enabled."
                    },
                    "upgradeWave": {
                      "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **upgradeMode** is set to 'Automatic'.",
                      "type": "string",
                      "enum": [
                        "Wave0",
                        "Wave1",
                        "Wave2"
                      ],
                      "x-ms-enum": {
                        "name": "clusterUpgradeCadence",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Wave0",
                            "description": "Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters."
                          },
                          {
                            "value": "Wave1",
                            "description": "Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters."
                          },
                          {
                            "value": "Wave2",
                            "description": "Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters."
                          }
                        ]
                      }
                    },
                    "upgradePauseStartTimestampUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Indicates the start date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC)."
                    },
                    "upgradePauseEndTimestampUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Indicates the end date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC)."
                    },
                    "waveUpgradePaused": {
                      "type": "boolean",
                      "description": "Boolean to pause automatic runtime version upgrades to the cluster."
                    },
                    "notifications": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "notificationCategory",
                          "notificationLevel",
                          "notificationTargets"
                        ],
                        "properties": {
                          "isEnabled": {
                            "type": "boolean",
                            "description": "Indicates if the notification is enabled."
                          },
                          "notificationCategory": {
                            "type": "string",
                            "description": "The category of notification.",
                            "enum": [
                              "WaveProgress"
                            ],
                            "x-ms-enum": {
                              "name": "notificationCategory",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "WaveProgress",
                                  "description": "Notification will be regarding wave progress."
                                }
                              ]
                            }
                          },
                          "notificationLevel": {
                            "type": "string",
                            "description": "The level of notification.",
                            "enum": [
                              "Critical",
                              "All"
                            ],
                            "x-ms-enum": {
                              "name": "notificationLevel",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Critical",
                                  "description": "Receive only critical notifications."
                                },
                                {
                                  "value": "All",
                                  "description": "Receive all notifications."
                                }
                              ]
                            }
                          },
                          "notificationTargets": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "notificationChannel",
                                "receivers"
                              ],
                              "properties": {
                                "notificationChannel": {
                                  "type": "string",
                                  "description": "The notification channel indicates the type of receivers subscribed to the notification, either user or subscription.",
                                  "enum": [
                                    "EmailUser",
                                    "EmailSubscription"
                                  ],
                                  "x-ms-enum": {
                                    "name": "notificationChannel",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "EmailUser",
                                        "description": "For email user receivers. In this case, the parameter receivers should be a list of email addresses that will receive the notifications."
                                      },
                                      {
                                        "value": "EmailSubscription",
                                        "description": "For subscription receivers. In this case, the parameter receivers should be a list of roles of the subscription for the cluster (eg. Owner, AccountAdmin, etc) that will receive the notifications."
                                      }
                                    ]
                                  }
                                },
                                "receivers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "List of targets that subscribe to the notification."
                                }
                              },
                              "description": "Describes the notification target properties."
                            },
                            "description": "List of targets that subscribe to the notification."
                          }
                        },
                        "description": "Describes the notification channel for cluster events."
                      },
                      "description": "Indicates a list of notification channels for cluster events."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cluster"
        ],
        "operationId": "Clusters_CreateOrUpdate",
        "summary": "Creates or updates a Service Fabric cluster resource.",
        "description": "Create or update a Service Fabric cluster resource with the specified name.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2021-06-01\" for this specification.",
            "required": true,
            "type": "string",
            "enum": [
              "2021-06-01"
            ],
            "default": "2021-06-01",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The cluster resource.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The cluster resource\n",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Azure resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Azure resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "Azure resource etag.",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The cluster resource properties",
                  "type": "object",
                  "required": [
                    "managementEndpoint",
                    "nodeTypes"
                  ],
                  "properties": {
                    "addOnFeatures": {
                      "type": "array",
                      "description": "The list of add-on features to enable in the cluster.",
                      "items": {
                        "type": "string",
                        "description": "Available cluster add-on features",
                        "enum": [
                          "RepairManager",
                          "DnsService",
                          "BackupRestoreService",
                          "ResourceMonitorService"
                        ]
                      }
                    },
                    "availableClusterVersions": {
                      "type": "array",
                      "description": "The Service Fabric runtime versions available for this cluster.",
                      "readOnly": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "codeVersion": {
                            "type": "string",
                            "description": "The Service Fabric runtime version of the cluster."
                          },
                          "supportExpiryUtc": {
                            "type": "string",
                            "description": "The date of expiry of support of the version."
                          },
                          "environment": {
                            "description": "Indicates if this version is for Windows or Linux operating system.",
                            "type": "string",
                            "enum": [
                              "Windows",
                              "Linux"
                            ]
                          }
                        },
                        "description": "The detail of the Service Fabric runtime version result"
                      }
                    },
                    "azureActiveDirectory": {
                      "description": "The AAD authentication settings of the cluster.",
                      "type": "object",
                      "properties": {
                        "tenantId": {
                          "type": "string",
                          "description": "Azure active directory tenant id."
                        },
                        "clusterApplication": {
                          "type": "string",
                          "description": "Azure active directory cluster application id."
                        },
                        "clientApplication": {
                          "type": "string",
                          "description": "Azure active directory client application id."
                        }
                      }
                    },
                    "certificate": {
                      "description": "The certificate to use for securing the cluster. The certificate provided will be used for node to node security within the cluster, SSL certificate for cluster management endpoint and default admin client.",
                      "type": "object",
                      "required": [
                        "thumbprint"
                      ],
                      "properties": {
                        "thumbprint": {
                          "type": "string",
                          "description": "Thumbprint of the primary certificate."
                        },
                        "thumbprintSecondary": {
                          "type": "string",
                          "description": "Thumbprint of the secondary certificate."
                        },
                        "x509StoreName": {
                          "type": "string",
                          "description": "The local certificate store location.",
                          "enum": [
                            "AddressBook",
                            "AuthRoot",
                            "CertificateAuthority",
                            "Disallowed",
                            "My",
                            "Root",
                            "TrustedPeople",
                            "TrustedPublisher"
                          ]
                        }
                      }
                    },
                    "certificateCommonNames": {
                      "type": "object",
                      "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
                      "properties": {
                        "commonNames": {
                          "type": "array",
                          "description": "The list of server certificates referenced by common name that are used to secure the cluster.",
                          "items": {
                            "type": "object",
                            "description": "Describes the server certificate details using common name.",
                            "required": [
                              "certificateCommonName",
                              "certificateIssuerThumbprint"
                            ],
                            "properties": {
                              "certificateCommonName": {
                                "type": "string",
                                "description": "The common name of the server certificate."
                              },
                              "certificateIssuerThumbprint": {
                                "type": "string",
                                "description": "The issuer thumbprint of the server certificate."
                              }
                            }
                          }
                        },
                        "x509StoreName": {
                          "type": "string",
                          "description": "The local certificate store location.",
                          "enum": [
                            "AddressBook",
                            "AuthRoot",
                            "CertificateAuthority",
                            "Disallowed",
                            "My",
                            "Root",
                            "TrustedPeople",
                            "TrustedPublisher"
                          ]
                        }
                      }
                    },
                    "clientCertificateCommonNames": {
                      "type": "array",
                      "description": "The list of client certificates referenced by common name that are allowed to manage the cluster.",
                      "items": {
                        "type": "object",
                        "required": [
                          "certificateCommonName",
                          "isAdmin",
                          "certificateIssuerThumbprint"
                        ],
                        "properties": {
                          "isAdmin": {
                            "type": "boolean",
                            "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                          },
                          "certificateCommonName": {
                            "type": "string",
                            "description": "The common name of the client certificate."
                          },
                          "certificateIssuerThumbprint": {
                            "type": "string",
                            "description": "The issuer thumbprint of the client certificate."
                          }
                        },
                        "description": "Describes the client certificate details using common name."
                      }
                    },
                    "clientCertificateThumbprints": {
                      "type": "array",
                      "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster.",
                      "items": {
                        "type": "object",
                        "required": [
                          "certificateThumbprint",
                          "isAdmin"
                        ],
                        "properties": {
                          "isAdmin": {
                            "type": "boolean",
                            "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                          },
                          "certificateThumbprint": {
                            "type": "string",
                            "description": "The thumbprint of the client certificate."
                          }
                        },
                        "description": "Describes the client certificate details using thumbprint."
                      }
                    },
                    "clusterCodeVersion": {
                      "type": "string",
                      "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](https://learn.microsoft.com/rest/api/servicefabric/cluster-versions/list). To get the list of available version for existing clusters use **availableClusterVersions**."
                    },
                    "clusterEndpoint": {
                      "type": "string",
                      "description": "The Azure Resource Provider endpoint. A system service in the cluster connects to this  endpoint.",
                      "readOnly": true
                    },
                    "clusterId": {
                      "type": "string",
                      "description": "A service generated unique identifier for the cluster resource.",
                      "readOnly": true
                    },
                    "clusterState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current state of the cluster.\n\n  - WaitingForNodes - Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it.\n  - Deploying - Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up.\n  - BaselineUpgrade - Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time.\n  - UpdatingUserConfiguration - Indicates that the cluster is being upgraded with the user provided configuration.\n  - UpdatingUserCertificate - Indicates that the cluster is being upgraded with the user provided certificate.\n  - UpdatingInfrastructure - Indicates that the cluster is being upgraded with the latest Service Fabric runtime version. This happens only when the **upgradeMode** is set to 'Automatic'.\n  - EnforcingClusterVersion - Indicates that cluster is on a different version than expected and the cluster is being upgraded to the expected version.\n  - UpgradeServiceUnreachable - Indicates that the system service in the cluster is no longer polling the Resource Provider. Clusters in this state cannot be managed by the Resource Provider.\n  - AutoScale - Indicates that the ReliabilityLevel of the cluster is being adjusted.\n  - Ready - Indicates that the cluster is in a stable state.\n",
                      "enum": [
                        "WaitingForNodes",
                        "Deploying",
                        "BaselineUpgrade",
                        "UpdatingUserConfiguration",
                        "UpdatingUserCertificate",
                        "UpdatingInfrastructure",
                        "EnforcingClusterVersion",
                        "UpgradeServiceUnreachable",
                        "AutoScale",
                        "Ready"
                      ]
                    },
                    "diagnosticsStorageAccountConfig": {
                      "description": "The storage account information for storing Service Fabric diagnostic logs.",
                      "type": "object",
                      "required": [
                        "blobEndpoint",
                        "protectedAccountKeyName",
                        "queueEndpoint",
                        "storageAccountName",
                        "tableEndpoint"
                      ],
                      "properties": {
                        "storageAccountName": {
                          "type": "string",
                          "description": "The Azure storage account name."
                        },
                        "protectedAccountKeyName": {
                          "type": "string",
                          "description": "The protected diagnostics storage key name."
                        },
                        "protectedAccountKeyName2": {
                          "type": "string",
                          "description": "The secondary protected diagnostics storage key name. If one of the storage account keys is rotated the cluster will fallback to using the other."
                        },
                        "blobEndpoint": {
                          "type": "string",
                          "description": "The blob endpoint of the azure storage account."
                        },
                        "queueEndpoint": {
                          "type": "string",
                          "description": "The queue endpoint of the azure storage account."
                        },
                        "tableEndpoint": {
                          "type": "string",
                          "description": "The table endpoint of the azure storage account."
                        }
                      }
                    },
                    "eventStoreServiceEnabled": {
                      "type": "boolean",
                      "description": "Indicates if the event store service is enabled."
                    },
                    "fabricSettings": {
                      "type": "array",
                      "description": "The list of custom fabric settings to configure the cluster.",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "parameters"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The section name of the fabric settings."
                          },
                          "parameters": {
                            "type": "array",
                            "description": "The collection of parameters in the section.",
                            "items": {
                              "type": "object",
                              "required": [
                                "name",
                                "value"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The parameter name of fabric setting."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The parameter value of fabric setting."
                                }
                              },
                              "description": "Describes a parameter in fabric settings of the cluster."
                            }
                          }
                        },
                        "description": "Describes a section in the fabric settings of the cluster."
                      }
                    },
                    "managementEndpoint": {
                      "type": "string",
                      "description": "The http management endpoint of the cluster."
                    },
                    "nodeTypes": {
                      "type": "array",
                      "description": "The list of node types in the cluster.",
                      "items": {
                        "type": "object",
                        "required": [
                          "clientConnectionEndpointPort",
                          "httpGatewayEndpointPort",
                          "isPrimary",
                          "name",
                          "vmInstanceCount"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the node type."
                          },
                          "placementProperties": {
                            "type": "object",
                            "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
                            "additionalProperties": {
                              "type": "string",
                              "description": "Placement tag value"
                            }
                          },
                          "capacities": {
                            "type": "object",
                            "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
                            "additionalProperties": {
                              "type": "string",
                              "description": "Capacity tag value"
                            }
                          },
                          "clientConnectionEndpointPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The TCP cluster management endpoint port."
                          },
                          "httpGatewayEndpointPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The HTTP cluster management endpoint port."
                          },
                          "durabilityLevel": {
                            "type": "string",
                            "description": "The durability level of the node type. Learn about [DurabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - Bronze - No privileges. This is the default.\n  - Silver - The infrastructure jobs can be paused for a duration of 10 minutes per UD.\n  - Gold - The infrastructure jobs can be paused for a duration of 2 hours per UD. Gold durability can be enabled only on full node VM skus like D15_V2, G5 etc.\n",
                            "enum": [
                              "Bronze",
                              "Silver",
                              "Gold"
                            ]
                          },
                          "applicationPorts": {
                            "description": "The range of ports from which cluster assigned port to Service Fabric applications.",
                            "type": "object",
                            "required": [
                              "endPort",
                              "startPort"
                            ],
                            "properties": {
                              "startPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Starting port of a range of ports"
                              },
                              "endPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "End port of a range of ports"
                              }
                            }
                          },
                          "ephemeralPorts": {
                            "description": "The range of ephemeral ports that nodes in this node type should be configured with.",
                            "type": "object",
                            "required": [
                              "endPort",
                              "startPort"
                            ],
                            "properties": {
                              "startPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Starting port of a range of ports"
                              },
                              "endPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "End port of a range of ports"
                              }
                            }
                          },
                          "isPrimary": {
                            "type": "boolean",
                            "description": "The node type on which system services will run. Only one node type should be marked as primary. Primary node type cannot be deleted or changed for existing clusters."
                          },
                          "vmInstanceCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "VMInstanceCount should be 1 to n, where n indicates the number of VM instances corresponding to this nodeType. VMInstanceCount = 0 can be done only in these scenarios: NodeType is a secondary nodeType. Durability = Bronze or Durability >= Bronze and InfrastructureServiceManager = true. If VMInstanceCount = 0, implies the VMs for this nodeType will not be used for the initial cluster size computation.",
                            "minimum": 0,
                            "maximum": 2147483647
                          },
                          "reverseProxyEndpointPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The endpoint used by reverse proxy."
                          },
                          "isStateless": {
                            "type": "boolean",
                            "description": "Indicates if the node type can only host Stateless workloads."
                          },
                          "multipleAvailabilityZones": {
                            "type": "boolean",
                            "description": "Indicates if the node type is enabled to support multiple zones."
                          }
                        },
                        "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning state of the cluster resource.",
                      "readOnly": true,
                      "enum": [
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "reliabilityLevel": {
                      "type": "string",
                      "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n",
                      "enum": [
                        "None",
                        "Bronze",
                        "Silver",
                        "Gold",
                        "Platinum"
                      ]
                    },
                    "reverseProxyCertificate": {
                      "description": "The server certificate used by reverse proxy.",
                      "type": "object",
                      "required": [
                        "thumbprint"
                      ],
                      "properties": {
                        "thumbprint": {
                          "type": "string",
                          "description": "Thumbprint of the primary certificate."
                        },
                        "thumbprintSecondary": {
                          "type": "string",
                          "description": "Thumbprint of the secondary certificate."
                        },
                        "x509StoreName": {
                          "type": "string",
                          "description": "The local certificate store location.",
                          "enum": [
                            "AddressBook",
                            "AuthRoot",
                            "CertificateAuthority",
                            "Disallowed",
                            "My",
                            "Root",
                            "TrustedPeople",
                            "TrustedPublisher"
                          ]
                        }
                      }
                    },
                    "reverseProxyCertificateCommonNames": {
                      "type": "object",
                      "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
                      "properties": {
                        "commonNames": {
                          "type": "array",
                          "description": "The list of server certificates referenced by common name that are used to secure the cluster.",
                          "items": {
                            "type": "object",
                            "description": "Describes the server certificate details using common name.",
                            "required": [
                              "certificateCommonName",
                              "certificateIssuerThumbprint"
                            ],
                            "properties": {
                              "certificateCommonName": {
                                "type": "string",
                                "description": "The common name of the server certificate."
                              },
                              "certificateIssuerThumbprint": {
                                "type": "string",
                                "description": "The issuer thumbprint of the server certificate."
                              }
                            }
                          }
                        },
                        "x509StoreName": {
                          "type": "string",
                          "description": "The local certificate store location.",
                          "enum": [
                            "AddressBook",
                            "AuthRoot",
                            "CertificateAuthority",
                            "Disallowed",
                            "My",
                            "Root",
                            "TrustedPeople",
                            "TrustedPublisher"
                          ]
                        }
                      }
                    },
                    "upgradeDescription": {
                      "description": "The policy to use when upgrading the cluster.",
                      "type": "object",
                      "required": [
                        "healthCheckRetryTimeout",
                        "healthCheckStableDuration",
                        "healthCheckWaitDuration",
                        "healthPolicy",
                        "upgradeDomainTimeout",
                        "upgradeReplicaSetCheckTimeout",
                        "upgradeTimeout"
                      ],
                      "properties": {
                        "forceRestart": {
                          "type": "boolean",
                          "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data)."
                        },
                        "upgradeReplicaSetCheckTimeout": {
                          "type": "string",
                          "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "healthCheckWaitDuration": {
                          "type": "string",
                          "description": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "healthCheckStableDuration": {
                          "type": "string",
                          "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "healthCheckRetryTimeout": {
                          "type": "string",
                          "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "upgradeTimeout": {
                          "type": "string",
                          "description": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "upgradeDomainTimeout": {
                          "type": "string",
                          "description": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "healthPolicy": {
                          "description": "The cluster health policy used when upgrading the cluster.",
                          "type": "object",
                          "properties": {
                            "maxPercentUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.\n",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentUnhealthyApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.\nThe computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.\n",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 100
                            },
                            "applicationHealthPolicies": {
                              "description": "Defines the application health policy map used to evaluate the health of an application or one of its children entities.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
                                "properties": {
                                  "defaultServiceTypeHealthPolicy": {
                                    "description": "The health policy used by default to evaluate the health of a service type.",
                                    "type": "object",
                                    "properties": {
                                      "maxPercentUnhealthyServices": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                        "default": 0,
                                        "minimum": 0,
                                        "maximum": 100
                                      }
                                    }
                                  },
                                  "serviceTypeHealthPolicies": {
                                    "description": "The map with service type health policy per service type name. The map is empty by default.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object",
                                      "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                                      "properties": {
                                        "maxPercentUnhealthyServices": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                          "default": 0,
                                          "minimum": 0,
                                          "maximum": 100
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "deltaHealthPolicy": {
                          "description": "The cluster delta health policy used when upgrading the cluster.",
                          "type": "object",
                          "required": [
                            "maxPercentDeltaUnhealthyApplications",
                            "maxPercentDeltaUnhealthyNodes",
                            "maxPercentUpgradeDomainDeltaUnhealthyNodes"
                          ],
                          "properties": {
                            "maxPercentDeltaUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentDeltaUnhealthyApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "applicationDeltaHealthPolicies": {
                              "description": "Defines the application delta health policy map used to evaluate the health of an application or one of its child entities when upgrading the cluster.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Defines a delta health policy used to evaluate the health of an application or one of its child entities when upgrading the cluster.\n",
                                "properties": {
                                  "defaultServiceTypeDeltaHealthPolicy": {
                                    "description": "The delta health policy used by default to evaluate the health of a service type when upgrading the cluster.",
                                    "type": "object",
                                    "properties": {
                                      "maxPercentDeltaUnhealthyServices": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                                        "default": 0,
                                        "minimum": 0,
                                        "maximum": 100
                                      }
                                    }
                                  },
                                  "serviceTypeDeltaHealthPolicies": {
                                    "description": "The map with service type delta health policy per service type name. The map is empty by default.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object",
                                      "description": "Represents the delta health policy used to evaluate the health of services belonging to a service type when upgrading the cluster.\n",
                                      "properties": {
                                        "maxPercentDeltaUnhealthyServices": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                                          "default": 0,
                                          "minimum": 0,
                                          "maximum": 100
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "upgradeMode": {
                      "type": "string",
                      "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.",
                      "enum": [
                        "Automatic",
                        "Manual"
                      ],
                      "default": "Automatic",
                      "x-ms-enum": {
                        "name": "UpgradeMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Automatic",
                            "description": "The cluster will be automatically upgraded to the latest Service Fabric runtime version, **upgradeWave** will determine when the upgrade starts after the new version becomes available."
                          },
                          {
                            "value": "Manual",
                            "description": "The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource."
                          }
                        ]
                      }
                    },
                    "applicationTypeVersionsCleanupPolicy": {
                      "description": "The policy used to clean up unused versions.",
                      "type": "object",
                      "required": [
                        "maxUnusedVersionsToKeep"
                      ],
                      "properties": {
                        "maxUnusedVersionsToKeep": {
                          "type": "integer",
                          "format": "int64",
                          "minimum": 0,
                          "description": "Number of unused versions per application type to keep."
                        }
                      }
                    },
                    "vmImage": {
                      "type": "string",
                      "description": "The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used."
                    },
                    "sfZonalUpgradeMode": {
                      "type": "string",
                      "enum": [
                        "Parallel",
                        "Hierarchical"
                      ],
                      "x-ms-enum": {
                        "name": "sfZonalUpgradeMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Parallel",
                            "description": "VMs under the node type are grouped into UDs and ignore the zone info in five UDs. This setting causes UDs across all zones to be upgraded at the same time. This deployment mode is faster for upgrades, we don't recommend it because it goes against the SDP guidelines, which state that the updates should be applied to one zone at a time."
                          },
                          {
                            "value": "Hierarchical",
                            "description": "If this value is omitted or set to Hierarchical, VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone. This update process is safer for the cluster and the user application."
                          }
                        ]
                      },
                      "description": "This property controls the logical grouping of VMs in upgrade domains (UDs). This property can't be modified if a node type with multiple Availability Zones is already present in the cluster."
                    },
                    "vmssZonalUpgradeMode": {
                      "type": "string",
                      "enum": [
                        "Parallel",
                        "Hierarchical"
                      ],
                      "x-ms-enum": {
                        "name": "vmssZonalUpgradeMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Parallel",
                            "description": "Updates will happen in all Availability Zones at once for the virtual machine scale sets."
                          },
                          {
                            "value": "Hierarchical",
                            "description": "VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone."
                          }
                        ]
                      },
                      "description": "This property defines the upgrade mode for the virtual machine scale set, it is mandatory if a node type with multiple Availability Zones is added."
                    },
                    "infrastructureServiceManager": {
                      "type": "boolean",
                      "description": "Indicates if infrastructure service manager is enabled."
                    },
                    "upgradeWave": {
                      "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **upgradeMode** is set to 'Automatic'.",
                      "type": "string",
                      "enum": [
                        "Wave0",
                        "Wave1",
                        "Wave2"
                      ],
                      "x-ms-enum": {
                        "name": "clusterUpgradeCadence",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Wave0",
                            "description": "Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters."
                          },
                          {
                            "value": "Wave1",
                            "description": "Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters."
                          },
                          {
                            "value": "Wave2",
                            "description": "Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters."
                          }
                        ]
                      }
                    },
                    "upgradePauseStartTimestampUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Indicates the start date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC)."
                    },
                    "upgradePauseEndTimestampUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Indicates the end date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC)."
                    },
                    "waveUpgradePaused": {
                      "type": "boolean",
                      "description": "Boolean to pause automatic runtime version upgrades to the cluster."
                    },
                    "notifications": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "notificationCategory",
                          "notificationLevel",
                          "notificationTargets"
                        ],
                        "properties": {
                          "isEnabled": {
                            "type": "boolean",
                            "description": "Indicates if the notification is enabled."
                          },
                          "notificationCategory": {
                            "type": "string",
                            "description": "The category of notification.",
                            "enum": [
                              "WaveProgress"
                            ],
                            "x-ms-enum": {
                              "name": "notificationCategory",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "WaveProgress",
                                  "description": "Notification will be regarding wave progress."
                                }
                              ]
                            }
                          },
                          "notificationLevel": {
                            "type": "string",
                            "description": "The level of notification.",
                            "enum": [
                              "Critical",
                              "All"
                            ],
                            "x-ms-enum": {
                              "name": "notificationLevel",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Critical",
                                  "description": "Receive only critical notifications."
                                },
                                {
                                  "value": "All",
                                  "description": "Receive all notifications."
                                }
                              ]
                            }
                          },
                          "notificationTargets": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "notificationChannel",
                                "receivers"
                              ],
                              "properties": {
                                "notificationChannel": {
                                  "type": "string",
                                  "description": "The notification channel indicates the type of receivers subscribed to the notification, either user or subscription.",
                                  "enum": [
                                    "EmailUser",
                                    "EmailSubscription"
                                  ],
                                  "x-ms-enum": {
                                    "name": "notificationChannel",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "EmailUser",
                                        "description": "For email user receivers. In this case, the parameter receivers should be a list of email addresses that will receive the notifications."
                                      },
                                      {
                                        "value": "EmailSubscription",
                                        "description": "For subscription receivers. In this case, the parameter receivers should be a list of roles of the subscription for the cluster (eg. Owner, AccountAdmin, etc) that will receive the notifications."
                                      }
                                    ]
                                  }
                                },
                                "receivers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "List of targets that subscribe to the notification."
                                }
                              },
                              "description": "Describes the notification target properties."
                            },
                            "description": "List of targets that subscribe to the notification."
                          }
                        },
                        "description": "Describes the notification channel for cluster events."
                      },
                      "description": "Indicates a list of notification channels for cluster events."
                    }
                  }
                }
              }
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The cluster resource\n",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Azure resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Azure resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "Azure resource etag.",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The cluster resource properties",
                  "type": "object",
                  "required": [
                    "managementEndpoint",
                    "nodeTypes"
                  ],
                  "properties": {
                    "addOnFeatures": {
                      "type": "array",
                      "description": "The list of add-on features to enable in the cluster.",
                      "items": {
                        "type": "string",
                        "description": "Available cluster add-on features",
                        "enum": [
                          "RepairManager",
                          "DnsService",
                          "BackupRestoreService",
                          "ResourceMonitorService"
                        ]
                      }
                    },
                    "availableClusterVersions": {
                      "type": "array",
                      "description": "The Service Fabric runtime versions available for this cluster.",
                      "readOnly": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "codeVersion": {
                            "type": "string",
                            "description": "The Service Fabric runtime version of the cluster."
                          },
                          "supportExpiryUtc": {
                            "type": "string",
                            "description": "The date of expiry of support of the version."
                          },
                          "environment": {
                            "description": "Indicates if this version is for Windows or Linux operating system.",
                            "type": "string",
                            "enum": [
                              "Windows",
                              "Linux"
                            ]
                          }
                        },
                        "description": "The detail of the Service Fabric runtime version result"
                      }
                    },
                    "azureActiveDirectory": {
                      "description": "The AAD authentication settings of the cluster.",
                      "type": "object",
                      "properties": {
                        "tenantId": {
                          "type": "string",
                          "description": "Azure active directory tenant id."
                        },
                        "clusterApplication": {
                          "type": "string",
                          "description": "Azure active directory cluster application id."
                        },
                        "clientApplication": {
                          "type": "string",
                          "description": "Azure active directory client application id."
                        }
                      }
                    },
                    "certificate": {
                      "description": "The certificate to use for securing the cluster. The certificate provided will be used for node to node security within the cluster, SSL certificate for cluster management endpoint and default admin client.",
                      "type": "object",
                      "required": [
                        "thumbprint"
                      ],
                      "properties": {
                        "thumbprint": {
                          "type": "string",
                          "description": "Thumbprint of the primary certificate."
                        },
                        "thumbprintSecondary": {
                          "type": "string",
                          "description": "Thumbprint of the secondary certificate."
                        },
                        "x509StoreName": {
                          "type": "string",
                          "description": "The local certificate store location.",
                          "enum": [
                            "AddressBook",
                            "AuthRoot",
                            "CertificateAuthority",
                            "Disallowed",
                            "My",
                            "Root",
                            "TrustedPeople",
                            "TrustedPublisher"
                          ]
                        }
                      }
                    },
                    "certificateCommonNames": {
                      "type": "object",
                      "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
                      "properties": {
                        "commonNames": {
                          "type": "array",
                          "description": "The list of server certificates referenced by common name that are used to secure the cluster.",
                          "items": {
                            "type": "object",
                            "description": "Describes the server certificate details using common name.",
                            "required": [
                              "certificateCommonName",
                              "certificateIssuerThumbprint"
                            ],
                            "properties": {
                              "certificateCommonName": {
                                "type": "string",
                                "description": "The common name of the server certificate."
                              },
                              "certificateIssuerThumbprint": {
                                "type": "string",
                                "description": "The issuer thumbprint of the server certificate."
                              }
                            }
                          }
                        },
                        "x509StoreName": {
                          "type": "string",
                          "description": "The local certificate store location.",
                          "enum": [
                            "AddressBook",
                            "AuthRoot",
                            "CertificateAuthority",
                            "Disallowed",
                            "My",
                            "Root",
                            "TrustedPeople",
                            "TrustedPublisher"
                          ]
                        }
                      }
                    },
                    "clientCertificateCommonNames": {
                      "type": "array",
                      "description": "The list of client certificates referenced by common name that are allowed to manage the cluster.",
                      "items": {
                        "type": "object",
                        "required": [
                          "certificateCommonName",
                          "isAdmin",
                          "certificateIssuerThumbprint"
                        ],
                        "properties": {
                          "isAdmin": {
                            "type": "boolean",
                            "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                          },
                          "certificateCommonName": {
                            "type": "string",
                            "description": "The common name of the client certificate."
                          },
                          "certificateIssuerThumbprint": {
                            "type": "string",
                            "description": "The issuer thumbprint of the client certificate."
                          }
                        },
                        "description": "Describes the client certificate details using common name."
                      }
                    },
                    "clientCertificateThumbprints": {
                      "type": "array",
                      "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster.",
                      "items": {
                        "type": "object",
                        "required": [
                          "certificateThumbprint",
                          "isAdmin"
                        ],
                        "properties": {
                          "isAdmin": {
                            "type": "boolean",
                            "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                          },
                          "certificateThumbprint": {
                            "type": "string",
                            "description": "The thumbprint of the client certificate."
                          }
                        },
                        "description": "Describes the client certificate details using thumbprint."
                      }
                    },
                    "clusterCodeVersion": {
                      "type": "string",
                      "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](https://learn.microsoft.com/rest/api/servicefabric/cluster-versions/list). To get the list of available version for existing clusters use **availableClusterVersions**."
                    },
                    "clusterEndpoint": {
                      "type": "string",
                      "description": "The Azure Resource Provider endpoint. A system service in the cluster connects to this  endpoint.",
                      "readOnly": true
                    },
                    "clusterId": {
                      "type": "string",
                      "description": "A service generated unique identifier for the cluster resource.",
                      "readOnly": true
                    },
                    "clusterState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current state of the cluster.\n\n  - WaitingForNodes - Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it.\n  - Deploying - Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up.\n  - BaselineUpgrade - Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time.\n  - UpdatingUserConfiguration - Indicates that the cluster is being upgraded with the user provided configuration.\n  - UpdatingUserCertificate - Indicates that the cluster is being upgraded with the user provided certificate.\n  - UpdatingInfrastructure - Indicates that the cluster is being upgraded with the latest Service Fabric runtime version. This happens only when the **upgradeMode** is set to 'Automatic'.\n  - EnforcingClusterVersion - Indicates that cluster is on a different version than expected and the cluster is being upgraded to the expected version.\n  - UpgradeServiceUnreachable - Indicates that the system service in the cluster is no longer polling the Resource Provider. Clusters in this state cannot be managed by the Resource Provider.\n  - AutoScale - Indicates that the ReliabilityLevel of the cluster is being adjusted.\n  - Ready - Indicates that the cluster is in a stable state.\n",
                      "enum": [
                        "WaitingForNodes",
                        "Deploying",
                        "BaselineUpgrade",
                        "UpdatingUserConfiguration",
                        "UpdatingUserCertificate",
                        "UpdatingInfrastructure",
                        "EnforcingClusterVersion",
                        "UpgradeServiceUnreachable",
                        "AutoScale",
                        "Ready"
                      ]
                    },
                    "diagnosticsStorageAccountConfig": {
                      "description": "The storage account information for storing Service Fabric diagnostic logs.",
                      "type": "object",
                      "required": [
                        "blobEndpoint",
                        "protectedAccountKeyName",
                        "queueEndpoint",
                        "storageAccountName",
                        "tableEndpoint"
                      ],
                      "properties": {
                        "storageAccountName": {
                          "type": "string",
                          "description": "The Azure storage account name."
                        },
                        "protectedAccountKeyName": {
                          "type": "string",
                          "description": "The protected diagnostics storage key name."
                        },
                        "protectedAccountKeyName2": {
                          "type": "string",
                          "description": "The secondary protected diagnostics storage key name. If one of the storage account keys is rotated the cluster will fallback to using the other."
                        },
                        "blobEndpoint": {
                          "type": "string",
                          "description": "The blob endpoint of the azure storage account."
                        },
                        "queueEndpoint": {
                          "type": "string",
                          "description": "The queue endpoint of the azure storage account."
                        },
                        "tableEndpoint": {
                          "type": "string",
                          "description": "The table endpoint of the azure storage account."
                        }
                      }
                    },
                    "eventStoreServiceEnabled": {
                      "type": "boolean",
                      "description": "Indicates if the event store service is enabled."
                    },
                    "fabricSettings": {
                      "type": "array",
                      "description": "The list of custom fabric settings to configure the cluster.",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "parameters"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The section name of the fabric settings."
                          },
                          "parameters": {
                            "type": "array",
                            "description": "The collection of parameters in the section.",
                            "items": {
                              "type": "object",
                              "required": [
                                "name",
                                "value"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The parameter name of fabric setting."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The parameter value of fabric setting."
                                }
                              },
                              "description": "Describes a parameter in fabric settings of the cluster."
                            }
                          }
                        },
                        "description": "Describes a section in the fabric settings of the cluster."
                      }
                    },
                    "managementEndpoint": {
                      "type": "string",
                      "description": "The http management endpoint of the cluster."
                    },
                    "nodeTypes": {
                      "type": "array",
                      "description": "The list of node types in the cluster.",
                      "items": {
                        "type": "object",
                        "required": [
                          "clientConnectionEndpointPort",
                          "httpGatewayEndpointPort",
                          "isPrimary",
                          "name",
                          "vmInstanceCount"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the node type."
                          },
                          "placementProperties": {
                            "type": "object",
                            "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
                            "additionalProperties": {
                              "type": "string",
                              "description": "Placement tag value"
                            }
                          },
                          "capacities": {
                            "type": "object",
                            "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
                            "additionalProperties": {
                              "type": "string",
                              "description": "Capacity tag value"
                            }
                          },
                          "clientConnectionEndpointPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The TCP cluster management endpoint port."
                          },
                          "httpGatewayEndpointPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The HTTP cluster management endpoint port."
                          },
                          "durabilityLevel": {
                            "type": "string",
                            "description": "The durability level of the node type. Learn about [DurabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - Bronze - No privileges. This is the default.\n  - Silver - The infrastructure jobs can be paused for a duration of 10 minutes per UD.\n  - Gold - The infrastructure jobs can be paused for a duration of 2 hours per UD. Gold durability can be enabled only on full node VM skus like D15_V2, G5 etc.\n",
                            "enum": [
                              "Bronze",
                              "Silver",
                              "Gold"
                            ]
                          },
                          "applicationPorts": {
                            "description": "The range of ports from which cluster assigned port to Service Fabric applications.",
                            "type": "object",
                            "required": [
                              "endPort",
                              "startPort"
                            ],
                            "properties": {
                              "startPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Starting port of a range of ports"
                              },
                              "endPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "End port of a range of ports"
                              }
                            }
                          },
                          "ephemeralPorts": {
                            "description": "The range of ephemeral ports that nodes in this node type should be configured with.",
                            "type": "object",
                            "required": [
                              "endPort",
                              "startPort"
                            ],
                            "properties": {
                              "startPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Starting port of a range of ports"
                              },
                              "endPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "End port of a range of ports"
                              }
                            }
                          },
                          "isPrimary": {
                            "type": "boolean",
                            "description": "The node type on which system services will run. Only one node type should be marked as primary. Primary node type cannot be deleted or changed for existing clusters."
                          },
                          "vmInstanceCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "VMInstanceCount should be 1 to n, where n indicates the number of VM instances corresponding to this nodeType. VMInstanceCount = 0 can be done only in these scenarios: NodeType is a secondary nodeType. Durability = Bronze or Durability >= Bronze and InfrastructureServiceManager = true. If VMInstanceCount = 0, implies the VMs for this nodeType will not be used for the initial cluster size computation.",
                            "minimum": 0,
                            "maximum": 2147483647
                          },
                          "reverseProxyEndpointPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The endpoint used by reverse proxy."
                          },
                          "isStateless": {
                            "type": "boolean",
                            "description": "Indicates if the node type can only host Stateless workloads."
                          },
                          "multipleAvailabilityZones": {
                            "type": "boolean",
                            "description": "Indicates if the node type is enabled to support multiple zones."
                          }
                        },
                        "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning state of the cluster resource.",
                      "readOnly": true,
                      "enum": [
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "reliabilityLevel": {
                      "type": "string",
                      "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n",
                      "enum": [
                        "None",
                        "Bronze",
                        "Silver",
                        "Gold",
                        "Platinum"
                      ]
                    },
                    "reverseProxyCertificate": {
                      "description": "The server certificate used by reverse proxy.",
                      "type": "object",
                      "required": [
                        "thumbprint"
                      ],
                      "properties": {
                        "thumbprint": {
                          "type": "string",
                          "description": "Thumbprint of the primary certificate."
                        },
                        "thumbprintSecondary": {
                          "type": "string",
                          "description": "Thumbprint of the secondary certificate."
                        },
                        "x509StoreName": {
                          "type": "string",
                          "description": "The local certificate store location.",
                          "enum": [
                            "AddressBook",
                            "AuthRoot",
                            "CertificateAuthority",
                            "Disallowed",
                            "My",
                            "Root",
                            "TrustedPeople",
                            "TrustedPublisher"
                          ]
                        }
                      }
                    },
                    "reverseProxyCertificateCommonNames": {
                      "type": "object",
                      "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
                      "properties": {
                        "commonNames": {
                          "type": "array",
                          "description": "The list of server certificates referenced by common name that are used to secure the cluster.",
                          "items": {
                            "type": "object",
                            "description": "Describes the server certificate details using common name.",
                            "required": [
                              "certificateCommonName",
                              "certificateIssuerThumbprint"
                            ],
                            "properties": {
                              "certificateCommonName": {
                                "type": "string",
                                "description": "The common name of the server certificate."
                              },
                              "certificateIssuerThumbprint": {
                                "type": "string",
                                "description": "The issuer thumbprint of the server certificate."
                              }
                            }
                          }
                        },
                        "x509StoreName": {
                          "type": "string",
                          "description": "The local certificate store location.",
                          "enum": [
                            "AddressBook",
                            "AuthRoot",
                            "CertificateAuthority",
                            "Disallowed",
                            "My",
                            "Root",
                            "TrustedPeople",
                            "TrustedPublisher"
                          ]
                        }
                      }
                    },
                    "upgradeDescription": {
                      "description": "The policy to use when upgrading the cluster.",
                      "type": "object",
                      "required": [
                        "healthCheckRetryTimeout",
                        "healthCheckStableDuration",
                        "healthCheckWaitDuration",
                        "healthPolicy",
                        "upgradeDomainTimeout",
                        "upgradeReplicaSetCheckTimeout",
                        "upgradeTimeout"
                      ],
                      "properties": {
                        "forceRestart": {
                          "type": "boolean",
                          "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data)."
                        },
                        "upgradeReplicaSetCheckTimeout": {
                          "type": "string",
                          "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "healthCheckWaitDuration": {
                          "type": "string",
                          "description": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "healthCheckStableDuration": {
                          "type": "string",
                          "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "healthCheckRetryTimeout": {
                          "type": "string",
                          "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "upgradeTimeout": {
                          "type": "string",
                          "description": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "upgradeDomainTimeout": {
                          "type": "string",
                          "description": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "healthPolicy": {
                          "description": "The cluster health policy used when upgrading the cluster.",
                          "type": "object",
                          "properties": {
                            "maxPercentUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.\n",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentUnhealthyApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.\nThe computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.\n",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 100
                            },
                            "applicationHealthPolicies": {
                              "description": "Defines the application health policy map used to evaluate the health of an application or one of its children entities.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
                                "properties": {
                                  "defaultServiceTypeHealthPolicy": {
                                    "description": "The health policy used by default to evaluate the health of a service type.",
                                    "type": "object",
                                    "properties": {
                                      "maxPercentUnhealthyServices": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                        "default": 0,
                                        "minimum": 0,
                                        "maximum": 100
                                      }
                                    }
                                  },
                                  "serviceTypeHealthPolicies": {
                                    "description": "The map with service type health policy per service type name. The map is empty by default.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object",
                                      "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                                      "properties": {
                                        "maxPercentUnhealthyServices": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                          "default": 0,
                                          "minimum": 0,
                                          "maximum": 100
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "deltaHealthPolicy": {
                          "description": "The cluster delta health policy used when upgrading the cluster.",
                          "type": "object",
                          "required": [
                            "maxPercentDeltaUnhealthyApplications",
                            "maxPercentDeltaUnhealthyNodes",
                            "maxPercentUpgradeDomainDeltaUnhealthyNodes"
                          ],
                          "properties": {
                            "maxPercentDeltaUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentDeltaUnhealthyApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "applicationDeltaHealthPolicies": {
                              "description": "Defines the application delta health policy map used to evaluate the health of an application or one of its child entities when upgrading the cluster.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Defines a delta health policy used to evaluate the health of an application or one of its child entities when upgrading the cluster.\n",
                                "properties": {
                                  "defaultServiceTypeDeltaHealthPolicy": {
                                    "description": "The delta health policy used by default to evaluate the health of a service type when upgrading the cluster.",
                                    "type": "object",
                                    "properties": {
                                      "maxPercentDeltaUnhealthyServices": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                                        "default": 0,
                                        "minimum": 0,
                                        "maximum": 100
                                      }
                                    }
                                  },
                                  "serviceTypeDeltaHealthPolicies": {
                                    "description": "The map with service type delta health policy per service type name. The map is empty by default.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object",
                                      "description": "Represents the delta health policy used to evaluate the health of services belonging to a service type when upgrading the cluster.\n",
                                      "properties": {
                                        "maxPercentDeltaUnhealthyServices": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                                          "default": 0,
                                          "minimum": 0,
                                          "maximum": 100
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "upgradeMode": {
                      "type": "string",
                      "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.",
                      "enum": [
                        "Automatic",
                        "Manual"
                      ],
                      "default": "Automatic",
                      "x-ms-enum": {
                        "name": "UpgradeMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Automatic",
                            "description": "The cluster will be automatically upgraded to the latest Service Fabric runtime version, **upgradeWave** will determine when the upgrade starts after the new version becomes available."
                          },
                          {
                            "value": "Manual",
                            "description": "The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource."
                          }
                        ]
                      }
                    },
                    "applicationTypeVersionsCleanupPolicy": {
                      "description": "The policy used to clean up unused versions.",
                      "type": "object",
                      "required": [
                        "maxUnusedVersionsToKeep"
                      ],
                      "properties": {
                        "maxUnusedVersionsToKeep": {
                          "type": "integer",
                          "format": "int64",
                          "minimum": 0,
                          "description": "Number of unused versions per application type to keep."
                        }
                      }
                    },
                    "vmImage": {
                      "type": "string",
                      "description": "The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used."
                    },
                    "sfZonalUpgradeMode": {
                      "type": "string",
                      "enum": [
                        "Parallel",
                        "Hierarchical"
                      ],
                      "x-ms-enum": {
                        "name": "sfZonalUpgradeMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Parallel",
                            "description": "VMs under the node type are grouped into UDs and ignore the zone info in five UDs. This setting causes UDs across all zones to be upgraded at the same time. This deployment mode is faster for upgrades, we don't recommend it because it goes against the SDP guidelines, which state that the updates should be applied to one zone at a time."
                          },
                          {
                            "value": "Hierarchical",
                            "description": "If this value is omitted or set to Hierarchical, VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone. This update process is safer for the cluster and the user application."
                          }
                        ]
                      },
                      "description": "This property controls the logical grouping of VMs in upgrade domains (UDs). This property can't be modified if a node type with multiple Availability Zones is already present in the cluster."
                    },
                    "vmssZonalUpgradeMode": {
                      "type": "string",
                      "enum": [
                        "Parallel",
                        "Hierarchical"
                      ],
                      "x-ms-enum": {
                        "name": "vmssZonalUpgradeMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Parallel",
                            "description": "Updates will happen in all Availability Zones at once for the virtual machine scale sets."
                          },
                          {
                            "value": "Hierarchical",
                            "description": "VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone."
                          }
                        ]
                      },
                      "description": "This property defines the upgrade mode for the virtual machine scale set, it is mandatory if a node type with multiple Availability Zones is added."
                    },
                    "infrastructureServiceManager": {
                      "type": "boolean",
                      "description": "Indicates if infrastructure service manager is enabled."
                    },
                    "upgradeWave": {
                      "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **upgradeMode** is set to 'Automatic'.",
                      "type": "string",
                      "enum": [
                        "Wave0",
                        "Wave1",
                        "Wave2"
                      ],
                      "x-ms-enum": {
                        "name": "clusterUpgradeCadence",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Wave0",
                            "description": "Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters."
                          },
                          {
                            "value": "Wave1",
                            "description": "Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters."
                          },
                          {
                            "value": "Wave2",
                            "description": "Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters."
                          }
                        ]
                      }
                    },
                    "upgradePauseStartTimestampUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Indicates the start date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC)."
                    },
                    "upgradePauseEndTimestampUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Indicates the end date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC)."
                    },
                    "waveUpgradePaused": {
                      "type": "boolean",
                      "description": "Boolean to pause automatic runtime version upgrades to the cluster."
                    },
                    "notifications": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "notificationCategory",
                          "notificationLevel",
                          "notificationTargets"
                        ],
                        "properties": {
                          "isEnabled": {
                            "type": "boolean",
                            "description": "Indicates if the notification is enabled."
                          },
                          "notificationCategory": {
                            "type": "string",
                            "description": "The category of notification.",
                            "enum": [
                              "WaveProgress"
                            ],
                            "x-ms-enum": {
                              "name": "notificationCategory",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "WaveProgress",
                                  "description": "Notification will be regarding wave progress."
                                }
                              ]
                            }
                          },
                          "notificationLevel": {
                            "type": "string",
                            "description": "The level of notification.",
                            "enum": [
                              "Critical",
                              "All"
                            ],
                            "x-ms-enum": {
                              "name": "notificationLevel",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Critical",
                                  "description": "Receive only critical notifications."
                                },
                                {
                                  "value": "All",
                                  "description": "Receive all notifications."
                                }
                              ]
                            }
                          },
                          "notificationTargets": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "notificationChannel",
                                "receivers"
                              ],
                              "properties": {
                                "notificationChannel": {
                                  "type": "string",
                                  "description": "The notification channel indicates the type of receivers subscribed to the notification, either user or subscription.",
                                  "enum": [
                                    "EmailUser",
                                    "EmailSubscription"
                                  ],
                                  "x-ms-enum": {
                                    "name": "notificationChannel",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "EmailUser",
                                        "description": "For email user receivers. In this case, the parameter receivers should be a list of email addresses that will receive the notifications."
                                      },
                                      {
                                        "value": "EmailSubscription",
                                        "description": "For subscription receivers. In this case, the parameter receivers should be a list of roles of the subscription for the cluster (eg. Owner, AccountAdmin, etc) that will receive the notifications."
                                      }
                                    ]
                                  }
                                },
                                "receivers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "List of targets that subscribe to the notification."
                                }
                              },
                              "description": "Describes the notification target properties."
                            },
                            "description": "List of targets that subscribe to the notification."
                          }
                        },
                        "description": "Describes the notification channel for cluster events."
                      },
                      "description": "Indicates a list of notification channels for cluster events."
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The request was accepted and the operation will complete asynchronously.",
            "schema": {
              "type": "object",
              "description": "The cluster resource\n",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Azure resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Azure resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "Azure resource etag.",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The cluster resource properties",
                  "type": "object",
                  "required": [
                    "managementEndpoint",
                    "nodeTypes"
                  ],
                  "properties": {
                    "addOnFeatures": {
                      "type": "array",
                      "description": "The list of add-on features to enable in the cluster.",
                      "items": {
                        "type": "string",
                        "description": "Available cluster add-on features",
                        "enum": [
                          "RepairManager",
                          "DnsService",
                          "BackupRestoreService",
                          "ResourceMonitorService"
                        ]
                      }
                    },
                    "availableClusterVersions": {
                      "type": "array",
                      "description": "The Service Fabric runtime versions available for this cluster.",
                      "readOnly": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "codeVersion": {
                            "type": "string",
                            "description": "The Service Fabric runtime version of the cluster."
                          },
                          "supportExpiryUtc": {
                            "type": "string",
                            "description": "The date of expiry of support of the version."
                          },
                          "environment": {
                            "description": "Indicates if this version is for Windows or Linux operating system.",
                            "type": "string",
                            "enum": [
                              "Windows",
                              "Linux"
                            ]
                          }
                        },
                        "description": "The detail of the Service Fabric runtime version result"
                      }
                    },
                    "azureActiveDirectory": {
                      "description": "The AAD authentication settings of the cluster.",
                      "type": "object",
                      "properties": {
                        "tenantId": {
                          "type": "string",
                          "description": "Azure active directory tenant id."
                        },
                        "clusterApplication": {
                          "type": "string",
                          "description": "Azure active directory cluster application id."
                        },
                        "clientApplication": {
                          "type": "string",
                          "description": "Azure active directory client application id."
                        }
                      }
                    },
                    "certificate": {
                      "description": "The certificate to use for securing the cluster. The certificate provided will be used for node to node security within the cluster, SSL certificate for cluster management endpoint and default admin client.",
                      "type": "object",
                      "required": [
                        "thumbprint"
                      ],
                      "properties": {
                        "thumbprint": {
                          "type": "string",
                          "description": "Thumbprint of the primary certificate."
                        },
                        "thumbprintSecondary": {
                          "type": "string",
                          "description": "Thumbprint of the secondary certificate."
                        },
                        "x509StoreName": {
                          "type": "string",
                          "description": "The local certificate store location.",
                          "enum": [
                            "AddressBook",
                            "AuthRoot",
                            "CertificateAuthority",
                            "Disallowed",
                            "My",
                            "Root",
                            "TrustedPeople",
                            "TrustedPublisher"
                          ]
                        }
                      }
                    },
                    "certificateCommonNames": {
                      "type": "object",
                      "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
                      "properties": {
                        "commonNames": {
                          "type": "array",
                          "description": "The list of server certificates referenced by common name that are used to secure the cluster.",
                          "items": {
                            "type": "object",
                            "description": "Describes the server certificate details using common name.",
                            "required": [
                              "certificateCommonName",
                              "certificateIssuerThumbprint"
                            ],
                            "properties": {
                              "certificateCommonName": {
                                "type": "string",
                                "description": "The common name of the server certificate."
                              },
                              "certificateIssuerThumbprint": {
                                "type": "string",
                                "description": "The issuer thumbprint of the server certificate."
                              }
                            }
                          }
                        },
                        "x509StoreName": {
                          "type": "string",
                          "description": "The local certificate store location.",
                          "enum": [
                            "AddressBook",
                            "AuthRoot",
                            "CertificateAuthority",
                            "Disallowed",
                            "My",
                            "Root",
                            "TrustedPeople",
                            "TrustedPublisher"
                          ]
                        }
                      }
                    },
                    "clientCertificateCommonNames": {
                      "type": "array",
                      "description": "The list of client certificates referenced by common name that are allowed to manage the cluster.",
                      "items": {
                        "type": "object",
                        "required": [
                          "certificateCommonName",
                          "isAdmin",
                          "certificateIssuerThumbprint"
                        ],
                        "properties": {
                          "isAdmin": {
                            "type": "boolean",
                            "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                          },
                          "certificateCommonName": {
                            "type": "string",
                            "description": "The common name of the client certificate."
                          },
                          "certificateIssuerThumbprint": {
                            "type": "string",
                            "description": "The issuer thumbprint of the client certificate."
                          }
                        },
                        "description": "Describes the client certificate details using common name."
                      }
                    },
                    "clientCertificateThumbprints": {
                      "type": "array",
                      "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster.",
                      "items": {
                        "type": "object",
                        "required": [
                          "certificateThumbprint",
                          "isAdmin"
                        ],
                        "properties": {
                          "isAdmin": {
                            "type": "boolean",
                            "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                          },
                          "certificateThumbprint": {
                            "type": "string",
                            "description": "The thumbprint of the client certificate."
                          }
                        },
                        "description": "Describes the client certificate details using thumbprint."
                      }
                    },
                    "clusterCodeVersion": {
                      "type": "string",
                      "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](https://learn.microsoft.com/rest/api/servicefabric/cluster-versions/list). To get the list of available version for existing clusters use **availableClusterVersions**."
                    },
                    "clusterEndpoint": {
                      "type": "string",
                      "description": "The Azure Resource Provider endpoint. A system service in the cluster connects to this  endpoint.",
                      "readOnly": true
                    },
                    "clusterId": {
                      "type": "string",
                      "description": "A service generated unique identifier for the cluster resource.",
                      "readOnly": true
                    },
                    "clusterState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current state of the cluster.\n\n  - WaitingForNodes - Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it.\n  - Deploying - Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up.\n  - BaselineUpgrade - Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time.\n  - UpdatingUserConfiguration - Indicates that the cluster is being upgraded with the user provided configuration.\n  - UpdatingUserCertificate - Indicates that the cluster is being upgraded with the user provided certificate.\n  - UpdatingInfrastructure - Indicates that the cluster is being upgraded with the latest Service Fabric runtime version. This happens only when the **upgradeMode** is set to 'Automatic'.\n  - EnforcingClusterVersion - Indicates that cluster is on a different version than expected and the cluster is being upgraded to the expected version.\n  - UpgradeServiceUnreachable - Indicates that the system service in the cluster is no longer polling the Resource Provider. Clusters in this state cannot be managed by the Resource Provider.\n  - AutoScale - Indicates that the ReliabilityLevel of the cluster is being adjusted.\n  - Ready - Indicates that the cluster is in a stable state.\n",
                      "enum": [
                        "WaitingForNodes",
                        "Deploying",
                        "BaselineUpgrade",
                        "UpdatingUserConfiguration",
                        "UpdatingUserCertificate",
                        "UpdatingInfrastructure",
                        "EnforcingClusterVersion",
                        "UpgradeServiceUnreachable",
                        "AutoScale",
                        "Ready"
                      ]
                    },
                    "diagnosticsStorageAccountConfig": {
                      "description": "The storage account information for storing Service Fabric diagnostic logs.",
                      "type": "object",
                      "required": [
                        "blobEndpoint",
                        "protectedAccountKeyName",
                        "queueEndpoint",
                        "storageAccountName",
                        "tableEndpoint"
                      ],
                      "properties": {
                        "storageAccountName": {
                          "type": "string",
                          "description": "The Azure storage account name."
                        },
                        "protectedAccountKeyName": {
                          "type": "string",
                          "description": "The protected diagnostics storage key name."
                        },
                        "protectedAccountKeyName2": {
                          "type": "string",
                          "description": "The secondary protected diagnostics storage key name. If one of the storage account keys is rotated the cluster will fallback to using the other."
                        },
                        "blobEndpoint": {
                          "type": "string",
                          "description": "The blob endpoint of the azure storage account."
                        },
                        "queueEndpoint": {
                          "type": "string",
                          "description": "The queue endpoint of the azure storage account."
                        },
                        "tableEndpoint": {
                          "type": "string",
                          "description": "The table endpoint of the azure storage account."
                        }
                      }
                    },
                    "eventStoreServiceEnabled": {
                      "type": "boolean",
                      "description": "Indicates if the event store service is enabled."
                    },
                    "fabricSettings": {
                      "type": "array",
                      "description": "The list of custom fabric settings to configure the cluster.",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "parameters"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The section name of the fabric settings."
                          },
                          "parameters": {
                            "type": "array",
                            "description": "The collection of parameters in the section.",
                            "items": {
                              "type": "object",
                              "required": [
                                "name",
                                "value"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The parameter name of fabric setting."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The parameter value of fabric setting."
                                }
                              },
                              "description": "Describes a parameter in fabric settings of the cluster."
                            }
                          }
                        },
                        "description": "Describes a section in the fabric settings of the cluster."
                      }
                    },
                    "managementEndpoint": {
                      "type": "string",
                      "description": "The http management endpoint of the cluster."
                    },
                    "nodeTypes": {
                      "type": "array",
                      "description": "The list of node types in the cluster.",
                      "items": {
                        "type": "object",
                        "required": [
                          "clientConnectionEndpointPort",
                          "httpGatewayEndpointPort",
                          "isPrimary",
                          "name",
                          "vmInstanceCount"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the node type."
                          },
                          "placementProperties": {
                            "type": "object",
                            "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
                            "additionalProperties": {
                              "type": "string",
                              "description": "Placement tag value"
                            }
                          },
                          "capacities": {
                            "type": "object",
                            "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
                            "additionalProperties": {
                              "type": "string",
                              "description": "Capacity tag value"
                            }
                          },
                          "clientConnectionEndpointPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The TCP cluster management endpoint port."
                          },
                          "httpGatewayEndpointPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The HTTP cluster management endpoint port."
                          },
                          "durabilityLevel": {
                            "type": "string",
                            "description": "The durability level of the node type. Learn about [DurabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - Bronze - No privileges. This is the default.\n  - Silver - The infrastructure jobs can be paused for a duration of 10 minutes per UD.\n  - Gold - The infrastructure jobs can be paused for a duration of 2 hours per UD. Gold durability can be enabled only on full node VM skus like D15_V2, G5 etc.\n",
                            "enum": [
                              "Bronze",
                              "Silver",
                              "Gold"
                            ]
                          },
                          "applicationPorts": {
                            "description": "The range of ports from which cluster assigned port to Service Fabric applications.",
                            "type": "object",
                            "required": [
                              "endPort",
                              "startPort"
                            ],
                            "properties": {
                              "startPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Starting port of a range of ports"
                              },
                              "endPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "End port of a range of ports"
                              }
                            }
                          },
                          "ephemeralPorts": {
                            "description": "The range of ephemeral ports that nodes in this node type should be configured with.",
                            "type": "object",
                            "required": [
                              "endPort",
                              "startPort"
                            ],
                            "properties": {
                              "startPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Starting port of a range of ports"
                              },
                              "endPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "End port of a range of ports"
                              }
                            }
                          },
                          "isPrimary": {
                            "type": "boolean",
                            "description": "The node type on which system services will run. Only one node type should be marked as primary. Primary node type cannot be deleted or changed for existing clusters."
                          },
                          "vmInstanceCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "VMInstanceCount should be 1 to n, where n indicates the number of VM instances corresponding to this nodeType. VMInstanceCount = 0 can be done only in these scenarios: NodeType is a secondary nodeType. Durability = Bronze or Durability >= Bronze and InfrastructureServiceManager = true. If VMInstanceCount = 0, implies the VMs for this nodeType will not be used for the initial cluster size computation.",
                            "minimum": 0,
                            "maximum": 2147483647
                          },
                          "reverseProxyEndpointPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The endpoint used by reverse proxy."
                          },
                          "isStateless": {
                            "type": "boolean",
                            "description": "Indicates if the node type can only host Stateless workloads."
                          },
                          "multipleAvailabilityZones": {
                            "type": "boolean",
                            "description": "Indicates if the node type is enabled to support multiple zones."
                          }
                        },
                        "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning state of the cluster resource.",
                      "readOnly": true,
                      "enum": [
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "reliabilityLevel": {
                      "type": "string",
                      "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n",
                      "enum": [
                        "None",
                        "Bronze",
                        "Silver",
                        "Gold",
                        "Platinum"
                      ]
                    },
                    "reverseProxyCertificate": {
                      "description": "The server certificate used by reverse proxy.",
                      "type": "object",
                      "required": [
                        "thumbprint"
                      ],
                      "properties": {
                        "thumbprint": {
                          "type": "string",
                          "description": "Thumbprint of the primary certificate."
                        },
                        "thumbprintSecondary": {
                          "type": "string",
                          "description": "Thumbprint of the secondary certificate."
                        },
                        "x509StoreName": {
                          "type": "string",
                          "description": "The local certificate store location.",
                          "enum": [
                            "AddressBook",
                            "AuthRoot",
                            "CertificateAuthority",
                            "Disallowed",
                            "My",
                            "Root",
                            "TrustedPeople",
                            "TrustedPublisher"
                          ]
                        }
                      }
                    },
                    "reverseProxyCertificateCommonNames": {
                      "type": "object",
                      "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
                      "properties": {
                        "commonNames": {
                          "type": "array",
                          "description": "The list of server certificates referenced by common name that are used to secure the cluster.",
                          "items": {
                            "type": "object",
                            "description": "Describes the server certificate details using common name.",
                            "required": [
                              "certificateCommonName",
                              "certificateIssuerThumbprint"
                            ],
                            "properties": {
                              "certificateCommonName": {
                                "type": "string",
                                "description": "The common name of the server certificate."
                              },
                              "certificateIssuerThumbprint": {
                                "type": "string",
                                "description": "The issuer thumbprint of the server certificate."
                              }
                            }
                          }
                        },
                        "x509StoreName": {
                          "type": "string",
                          "description": "The local certificate store location.",
                          "enum": [
                            "AddressBook",
                            "AuthRoot",
                            "CertificateAuthority",
                            "Disallowed",
                            "My",
                            "Root",
                            "TrustedPeople",
                            "TrustedPublisher"
                          ]
                        }
                      }
                    },
                    "upgradeDescription": {
                      "description": "The policy to use when upgrading the cluster.",
                      "type": "object",
                      "required": [
                        "healthCheckRetryTimeout",
                        "healthCheckStableDuration",
                        "healthCheckWaitDuration",
                        "healthPolicy",
                        "upgradeDomainTimeout",
                        "upgradeReplicaSetCheckTimeout",
                        "upgradeTimeout"
                      ],
                      "properties": {
                        "forceRestart": {
                          "type": "boolean",
                          "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data)."
                        },
                        "upgradeReplicaSetCheckTimeout": {
                          "type": "string",
                          "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "healthCheckWaitDuration": {
                          "type": "string",
                          "description": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "healthCheckStableDuration": {
                          "type": "string",
                          "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "healthCheckRetryTimeout": {
                          "type": "string",
                          "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "upgradeTimeout": {
                          "type": "string",
                          "description": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "upgradeDomainTimeout": {
                          "type": "string",
                          "description": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "healthPolicy": {
                          "description": "The cluster health policy used when upgrading the cluster.",
                          "type": "object",
                          "properties": {
                            "maxPercentUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.\n",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentUnhealthyApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.\nThe computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.\n",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 100
                            },
                            "applicationHealthPolicies": {
                              "description": "Defines the application health policy map used to evaluate the health of an application or one of its children entities.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
                                "properties": {
                                  "defaultServiceTypeHealthPolicy": {
                                    "description": "The health policy used by default to evaluate the health of a service type.",
                                    "type": "object",
                                    "properties": {
                                      "maxPercentUnhealthyServices": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                        "default": 0,
                                        "minimum": 0,
                                        "maximum": 100
                                      }
                                    }
                                  },
                                  "serviceTypeHealthPolicies": {
                                    "description": "The map with service type health policy per service type name. The map is empty by default.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object",
                                      "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                                      "properties": {
                                        "maxPercentUnhealthyServices": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                          "default": 0,
                                          "minimum": 0,
                                          "maximum": 100
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "deltaHealthPolicy": {
                          "description": "The cluster delta health policy used when upgrading the cluster.",
                          "type": "object",
                          "required": [
                            "maxPercentDeltaUnhealthyApplications",
                            "maxPercentDeltaUnhealthyNodes",
                            "maxPercentUpgradeDomainDeltaUnhealthyNodes"
                          ],
                          "properties": {
                            "maxPercentDeltaUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentDeltaUnhealthyApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "applicationDeltaHealthPolicies": {
                              "description": "Defines the application delta health policy map used to evaluate the health of an application or one of its child entities when upgrading the cluster.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Defines a delta health policy used to evaluate the health of an application or one of its child entities when upgrading the cluster.\n",
                                "properties": {
                                  "defaultServiceTypeDeltaHealthPolicy": {
                                    "description": "The delta health policy used by default to evaluate the health of a service type when upgrading the cluster.",
                                    "type": "object",
                                    "properties": {
                                      "maxPercentDeltaUnhealthyServices": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                                        "default": 0,
                                        "minimum": 0,
                                        "maximum": 100
                                      }
                                    }
                                  },
                                  "serviceTypeDeltaHealthPolicies": {
                                    "description": "The map with service type delta health policy per service type name. The map is empty by default.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object",
                                      "description": "Represents the delta health policy used to evaluate the health of services belonging to a service type when upgrading the cluster.\n",
                                      "properties": {
                                        "maxPercentDeltaUnhealthyServices": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                                          "default": 0,
                                          "minimum": 0,
                                          "maximum": 100
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "upgradeMode": {
                      "type": "string",
                      "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.",
                      "enum": [
                        "Automatic",
                        "Manual"
                      ],
                      "default": "Automatic",
                      "x-ms-enum": {
                        "name": "UpgradeMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Automatic",
                            "description": "The cluster will be automatically upgraded to the latest Service Fabric runtime version, **upgradeWave** will determine when the upgrade starts after the new version becomes available."
                          },
                          {
                            "value": "Manual",
                            "description": "The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource."
                          }
                        ]
                      }
                    },
                    "applicationTypeVersionsCleanupPolicy": {
                      "description": "The policy used to clean up unused versions.",
                      "type": "object",
                      "required": [
                        "maxUnusedVersionsToKeep"
                      ],
                      "properties": {
                        "maxUnusedVersionsToKeep": {
                          "type": "integer",
                          "format": "int64",
                          "minimum": 0,
                          "description": "Number of unused versions per application type to keep."
                        }
                      }
                    },
                    "vmImage": {
                      "type": "string",
                      "description": "The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used."
                    },
                    "sfZonalUpgradeMode": {
                      "type": "string",
                      "enum": [
                        "Parallel",
                        "Hierarchical"
                      ],
                      "x-ms-enum": {
                        "name": "sfZonalUpgradeMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Parallel",
                            "description": "VMs under the node type are grouped into UDs and ignore the zone info in five UDs. This setting causes UDs across all zones to be upgraded at the same time. This deployment mode is faster for upgrades, we don't recommend it because it goes against the SDP guidelines, which state that the updates should be applied to one zone at a time."
                          },
                          {
                            "value": "Hierarchical",
                            "description": "If this value is omitted or set to Hierarchical, VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone. This update process is safer for the cluster and the user application."
                          }
                        ]
                      },
                      "description": "This property controls the logical grouping of VMs in upgrade domains (UDs). This property can't be modified if a node type with multiple Availability Zones is already present in the cluster."
                    },
                    "vmssZonalUpgradeMode": {
                      "type": "string",
                      "enum": [
                        "Parallel",
                        "Hierarchical"
                      ],
                      "x-ms-enum": {
                        "name": "vmssZonalUpgradeMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Parallel",
                            "description": "Updates will happen in all Availability Zones at once for the virtual machine scale sets."
                          },
                          {
                            "value": "Hierarchical",
                            "description": "VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone."
                          }
                        ]
                      },
                      "description": "This property defines the upgrade mode for the virtual machine scale set, it is mandatory if a node type with multiple Availability Zones is added."
                    },
                    "infrastructureServiceManager": {
                      "type": "boolean",
                      "description": "Indicates if infrastructure service manager is enabled."
                    },
                    "upgradeWave": {
                      "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **upgradeMode** is set to 'Automatic'.",
                      "type": "string",
                      "enum": [
                        "Wave0",
                        "Wave1",
                        "Wave2"
                      ],
                      "x-ms-enum": {
                        "name": "clusterUpgradeCadence",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Wave0",
                            "description": "Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters."
                          },
                          {
                            "value": "Wave1",
                            "description": "Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters."
                          },
                          {
                            "value": "Wave2",
                            "description": "Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters."
                          }
                        ]
                      }
                    },
                    "upgradePauseStartTimestampUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Indicates the start date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC)."
                    },
                    "upgradePauseEndTimestampUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Indicates the end date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC)."
                    },
                    "waveUpgradePaused": {
                      "type": "boolean",
                      "description": "Boolean to pause automatic runtime version upgrades to the cluster."
                    },
                    "notifications": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "notificationCategory",
                          "notificationLevel",
                          "notificationTargets"
                        ],
                        "properties": {
                          "isEnabled": {
                            "type": "boolean",
                            "description": "Indicates if the notification is enabled."
                          },
                          "notificationCategory": {
                            "type": "string",
                            "description": "The category of notification.",
                            "enum": [
                              "WaveProgress"
                            ],
                            "x-ms-enum": {
                              "name": "notificationCategory",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "WaveProgress",
                                  "description": "Notification will be regarding wave progress."
                                }
                              ]
                            }
                          },
                          "notificationLevel": {
                            "type": "string",
                            "description": "The level of notification.",
                            "enum": [
                              "Critical",
                              "All"
                            ],
                            "x-ms-enum": {
                              "name": "notificationLevel",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Critical",
                                  "description": "Receive only critical notifications."
                                },
                                {
                                  "value": "All",
                                  "description": "Receive all notifications."
                                }
                              ]
                            }
                          },
                          "notificationTargets": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "notificationChannel",
                                "receivers"
                              ],
                              "properties": {
                                "notificationChannel": {
                                  "type": "string",
                                  "description": "The notification channel indicates the type of receivers subscribed to the notification, either user or subscription.",
                                  "enum": [
                                    "EmailUser",
                                    "EmailSubscription"
                                  ],
                                  "x-ms-enum": {
                                    "name": "notificationChannel",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "EmailUser",
                                        "description": "For email user receivers. In this case, the parameter receivers should be a list of email addresses that will receive the notifications."
                                      },
                                      {
                                        "value": "EmailSubscription",
                                        "description": "For subscription receivers. In this case, the parameter receivers should be a list of roles of the subscription for the cluster (eg. Owner, AccountAdmin, etc) that will receive the notifications."
                                      }
                                    ]
                                  }
                                },
                                "receivers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "List of targets that subscribe to the notification."
                                }
                              },
                              "description": "Describes the notification target properties."
                            },
                            "description": "List of targets that subscribe to the notification."
                          }
                        },
                        "description": "Describes the notification channel for cluster events."
                      },
                      "description": "Indicates a list of notification channels for cluster events."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Cluster"
        ],
        "operationId": "Clusters_Update",
        "summary": "Updates the configuration of a Service Fabric cluster resource.",
        "description": "Update the configuration of a Service Fabric cluster resource with the specified name.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2021-06-01\" for this specification.",
            "required": true,
            "type": "string",
            "enum": [
              "2021-06-01"
            ],
            "default": "2021-06-01",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The parameters which contains the property value and property name which used to update the cluster configuration.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "addOnFeatures": {
                      "type": "array",
                      "description": "The list of add-on features to enable in the cluster.",
                      "items": {
                        "type": "string",
                        "description": "Available cluster add-on features",
                        "enum": [
                          "RepairManager",
                          "DnsService",
                          "BackupRestoreService",
                          "ResourceMonitorService"
                        ]
                      }
                    },
                    "certificate": {
                      "description": "The certificate to use for securing the cluster. The certificate provided will be used for  node to node security within the cluster, SSL certificate for cluster management endpoint and default  admin client.",
                      "type": "object",
                      "required": [
                        "thumbprint"
                      ],
                      "properties": {
                        "thumbprint": {
                          "type": "string",
                          "description": "Thumbprint of the primary certificate."
                        },
                        "thumbprintSecondary": {
                          "type": "string",
                          "description": "Thumbprint of the secondary certificate."
                        },
                        "x509StoreName": {
                          "type": "string",
                          "description": "The local certificate store location.",
                          "enum": [
                            "AddressBook",
                            "AuthRoot",
                            "CertificateAuthority",
                            "Disallowed",
                            "My",
                            "Root",
                            "TrustedPeople",
                            "TrustedPublisher"
                          ]
                        }
                      }
                    },
                    "certificateCommonNames": {
                      "type": "object",
                      "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
                      "properties": {
                        "commonNames": {
                          "type": "array",
                          "description": "The list of server certificates referenced by common name that are used to secure the cluster.",
                          "items": {
                            "type": "object",
                            "description": "Describes the server certificate details using common name.",
                            "required": [
                              "certificateCommonName",
                              "certificateIssuerThumbprint"
                            ],
                            "properties": {
                              "certificateCommonName": {
                                "type": "string",
                                "description": "The common name of the server certificate."
                              },
                              "certificateIssuerThumbprint": {
                                "type": "string",
                                "description": "The issuer thumbprint of the server certificate."
                              }
                            }
                          }
                        },
                        "x509StoreName": {
                          "type": "string",
                          "description": "The local certificate store location.",
                          "enum": [
                            "AddressBook",
                            "AuthRoot",
                            "CertificateAuthority",
                            "Disallowed",
                            "My",
                            "Root",
                            "TrustedPeople",
                            "TrustedPublisher"
                          ]
                        }
                      }
                    },
                    "clientCertificateCommonNames": {
                      "type": "array",
                      "description": "The list of client certificates referenced by common name that are allowed to manage the cluster. This will overwrite the existing list.",
                      "items": {
                        "type": "object",
                        "required": [
                          "certificateCommonName",
                          "isAdmin",
                          "certificateIssuerThumbprint"
                        ],
                        "properties": {
                          "isAdmin": {
                            "type": "boolean",
                            "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                          },
                          "certificateCommonName": {
                            "type": "string",
                            "description": "The common name of the client certificate."
                          },
                          "certificateIssuerThumbprint": {
                            "type": "string",
                            "description": "The issuer thumbprint of the client certificate."
                          }
                        },
                        "description": "Describes the client certificate details using common name."
                      }
                    },
                    "clientCertificateThumbprints": {
                      "type": "array",
                      "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster. This will overwrite the existing list.",
                      "items": {
                        "type": "object",
                        "required": [
                          "certificateThumbprint",
                          "isAdmin"
                        ],
                        "properties": {
                          "isAdmin": {
                            "type": "boolean",
                            "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                          },
                          "certificateThumbprint": {
                            "type": "string",
                            "description": "The thumbprint of the client certificate."
                          }
                        },
                        "description": "Describes the client certificate details using thumbprint."
                      }
                    },
                    "clusterCodeVersion": {
                      "type": "string",
                      "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](https://learn.microsoft.com/rest/api/servicefabric/cluster-versions/list). To get the list of available version for existing clusters use **availableClusterVersions**."
                    },
                    "eventStoreServiceEnabled": {
                      "type": "boolean",
                      "description": "Indicates if the event store service is enabled."
                    },
                    "fabricSettings": {
                      "type": "array",
                      "description": "The list of custom fabric settings to configure the cluster. This will overwrite the existing list.",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "parameters"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The section name of the fabric settings."
                          },
                          "parameters": {
                            "type": "array",
                            "description": "The collection of parameters in the section.",
                            "items": {
                              "type": "object",
                              "required": [
                                "name",
                                "value"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The parameter name of fabric setting."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The parameter value of fabric setting."
                                }
                              },
                              "description": "Describes a parameter in fabric settings of the cluster."
                            }
                          }
                        },
                        "description": "Describes a section in the fabric settings of the cluster."
                      }
                    },
                    "nodeTypes": {
                      "type": "array",
                      "description": "The list of node types in the cluster. This will overwrite the existing list.",
                      "items": {
                        "type": "object",
                        "required": [
                          "clientConnectionEndpointPort",
                          "httpGatewayEndpointPort",
                          "isPrimary",
                          "name",
                          "vmInstanceCount"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the node type."
                          },
                          "placementProperties": {
                            "type": "object",
                            "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
                            "additionalProperties": {
                              "type": "string",
                              "description": "Placement tag value"
                            }
                          },
                          "capacities": {
                            "type": "object",
                            "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
                            "additionalProperties": {
                              "type": "string",
                              "description": "Capacity tag value"
                            }
                          },
                          "clientConnectionEndpointPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The TCP cluster management endpoint port."
                          },
                          "httpGatewayEndpointPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The HTTP cluster management endpoint port."
                          },
                          "durabilityLevel": {
                            "type": "string",
                            "description": "The durability level of the node type. Learn about [DurabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - Bronze - No privileges. This is the default.\n  - Silver - The infrastructure jobs can be paused for a duration of 10 minutes per UD.\n  - Gold - The infrastructure jobs can be paused for a duration of 2 hours per UD. Gold durability can be enabled only on full node VM skus like D15_V2, G5 etc.\n",
                            "enum": [
                              "Bronze",
                              "Silver",
                              "Gold"
                            ]
                          },
                          "applicationPorts": {
                            "description": "The range of ports from which cluster assigned port to Service Fabric applications.",
                            "type": "object",
                            "required": [
                              "endPort",
                              "startPort"
                            ],
                            "properties": {
                              "startPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Starting port of a range of ports"
                              },
                              "endPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "End port of a range of ports"
                              }
                            }
                          },
                          "ephemeralPorts": {
                            "description": "The range of ephemeral ports that nodes in this node type should be configured with.",
                            "type": "object",
                            "required": [
                              "endPort",
                              "startPort"
                            ],
                            "properties": {
                              "startPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Starting port of a range of ports"
                              },
                              "endPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "End port of a range of ports"
                              }
                            }
                          },
                          "isPrimary": {
                            "type": "boolean",
                            "description": "The node type on which system services will run. Only one node type should be marked as primary. Primary node type cannot be deleted or changed for existing clusters."
                          },
                          "vmInstanceCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "VMInstanceCount should be 1 to n, where n indicates the number of VM instances corresponding to this nodeType. VMInstanceCount = 0 can be done only in these scenarios: NodeType is a secondary nodeType. Durability = Bronze or Durability >= Bronze and InfrastructureServiceManager = true. If VMInstanceCount = 0, implies the VMs for this nodeType will not be used for the initial cluster size computation.",
                            "minimum": 0,
                            "maximum": 2147483647
                          },
                          "reverseProxyEndpointPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The endpoint used by reverse proxy."
                          },
                          "isStateless": {
                            "type": "boolean",
                            "description": "Indicates if the node type can only host Stateless workloads."
                          },
                          "multipleAvailabilityZones": {
                            "type": "boolean",
                            "description": "Indicates if the node type is enabled to support multiple zones."
                          }
                        },
                        "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
                      }
                    },
                    "reliabilityLevel": {
                      "type": "string",
                      "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n",
                      "enum": [
                        "None",
                        "Bronze",
                        "Silver",
                        "Gold",
                        "Platinum"
                      ]
                    },
                    "reverseProxyCertificate": {
                      "description": "The server certificate used by reverse proxy.",
                      "type": "object",
                      "required": [
                        "thumbprint"
                      ],
                      "properties": {
                        "thumbprint": {
                          "type": "string",
                          "description": "Thumbprint of the primary certificate."
                        },
                        "thumbprintSecondary": {
                          "type": "string",
                          "description": "Thumbprint of the secondary certificate."
                        },
                        "x509StoreName": {
                          "type": "string",
                          "description": "The local certificate store location.",
                          "enum": [
                            "AddressBook",
                            "AuthRoot",
                            "CertificateAuthority",
                            "Disallowed",
                            "My",
                            "Root",
                            "TrustedPeople",
                            "TrustedPublisher"
                          ]
                        }
                      }
                    },
                    "upgradeDescription": {
                      "description": "The policy to use when upgrading the cluster.",
                      "type": "object",
                      "required": [
                        "healthCheckRetryTimeout",
                        "healthCheckStableDuration",
                        "healthCheckWaitDuration",
                        "healthPolicy",
                        "upgradeDomainTimeout",
                        "upgradeReplicaSetCheckTimeout",
                        "upgradeTimeout"
                      ],
                      "properties": {
                        "forceRestart": {
                          "type": "boolean",
                          "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data)."
                        },
                        "upgradeReplicaSetCheckTimeout": {
                          "type": "string",
                          "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "healthCheckWaitDuration": {
                          "type": "string",
                          "description": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "healthCheckStableDuration": {
                          "type": "string",
                          "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "healthCheckRetryTimeout": {
                          "type": "string",
                          "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "upgradeTimeout": {
                          "type": "string",
                          "description": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "upgradeDomainTimeout": {
                          "type": "string",
                          "description": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "healthPolicy": {
                          "description": "The cluster health policy used when upgrading the cluster.",
                          "type": "object",
                          "properties": {
                            "maxPercentUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.\n",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentUnhealthyApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.\nThe computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.\n",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 100
                            },
                            "applicationHealthPolicies": {
                              "description": "Defines the application health policy map used to evaluate the health of an application or one of its children entities.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
                                "properties": {
                                  "defaultServiceTypeHealthPolicy": {
                                    "description": "The health policy used by default to evaluate the health of a service type.",
                                    "type": "object",
                                    "properties": {
                                      "maxPercentUnhealthyServices": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                        "default": 0,
                                        "minimum": 0,
                                        "maximum": 100
                                      }
                                    }
                                  },
                                  "serviceTypeHealthPolicies": {
                                    "description": "The map with service type health policy per service type name. The map is empty by default.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object",
                                      "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                                      "properties": {
                                        "maxPercentUnhealthyServices": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                          "default": 0,
                                          "minimum": 0,
                                          "maximum": 100
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "deltaHealthPolicy": {
                          "description": "The cluster delta health policy used when upgrading the cluster.",
                          "type": "object",
                          "required": [
                            "maxPercentDeltaUnhealthyApplications",
                            "maxPercentDeltaUnhealthyNodes",
                            "maxPercentUpgradeDomainDeltaUnhealthyNodes"
                          ],
                          "properties": {
                            "maxPercentDeltaUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentDeltaUnhealthyApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "applicationDeltaHealthPolicies": {
                              "description": "Defines the application delta health policy map used to evaluate the health of an application or one of its child entities when upgrading the cluster.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Defines a delta health policy used to evaluate the health of an application or one of its child entities when upgrading the cluster.\n",
                                "properties": {
                                  "defaultServiceTypeDeltaHealthPolicy": {
                                    "description": "The delta health policy used by default to evaluate the health of a service type when upgrading the cluster.",
                                    "type": "object",
                                    "properties": {
                                      "maxPercentDeltaUnhealthyServices": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                                        "default": 0,
                                        "minimum": 0,
                                        "maximum": 100
                                      }
                                    }
                                  },
                                  "serviceTypeDeltaHealthPolicies": {
                                    "description": "The map with service type delta health policy per service type name. The map is empty by default.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object",
                                      "description": "Represents the delta health policy used to evaluate the health of services belonging to a service type when upgrading the cluster.\n",
                                      "properties": {
                                        "maxPercentDeltaUnhealthyServices": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                                          "default": 0,
                                          "minimum": 0,
                                          "maximum": 100
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "applicationTypeVersionsCleanupPolicy": {
                      "description": "The policy used to clean up unused versions.",
                      "type": "object",
                      "required": [
                        "maxUnusedVersionsToKeep"
                      ],
                      "properties": {
                        "maxUnusedVersionsToKeep": {
                          "type": "integer",
                          "format": "int64",
                          "minimum": 0,
                          "description": "Number of unused versions per application type to keep."
                        }
                      }
                    },
                    "upgradeMode": {
                      "type": "string",
                      "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.",
                      "enum": [
                        "Automatic",
                        "Manual"
                      ],
                      "default": "Automatic",
                      "x-ms-enum": {
                        "name": "UpgradeMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Automatic",
                            "description": "The cluster will be automatically upgraded to the latest Service Fabric runtime version, **upgradeWave** will determine when the upgrade starts after the new version becomes available."
                          },
                          {
                            "value": "Manual",
                            "description": "The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource."
                          }
                        ]
                      }
                    },
                    "sfZonalUpgradeMode": {
                      "type": "string",
                      "enum": [
                        "Parallel",
                        "Hierarchical"
                      ],
                      "x-ms-enum": {
                        "name": "sfZonalUpgradeMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Parallel",
                            "description": "VMs under the node type are grouped into UDs and ignore the zone info in five UDs. This setting causes UDs across all zones to be upgraded at the same time. This deployment mode is faster for upgrades, we don't recommend it because it goes against the SDP guidelines, which state that the updates should be applied to one zone at a time."
                          },
                          {
                            "value": "Hierarchical",
                            "description": "If this value is omitted or set to Hierarchical, VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone. This update process is safer for the cluster and the user application."
                          }
                        ]
                      },
                      "description": "This property controls the logical grouping of VMs in upgrade domains (UDs). This property can't be modified if a node type with multiple Availability Zones is already present in the cluster."
                    },
                    "vmssZonalUpgradeMode": {
                      "type": "string",
                      "enum": [
                        "Parallel",
                        "Hierarchical"
                      ],
                      "x-ms-enum": {
                        "name": "vmssZonalUpgradeMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Parallel",
                            "description": "Updates will happen in all Availability Zones at once for the virtual machine scale sets."
                          },
                          {
                            "value": "Hierarchical",
                            "description": "VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone."
                          }
                        ]
                      },
                      "description": "This property defines the upgrade mode for the virtual machine scale set, it is mandatory if a node type with multiple Availability Zones is added."
                    },
                    "infrastructureServiceManager": {
                      "type": "boolean",
                      "description": "Indicates if infrastructure service manager is enabled."
                    },
                    "upgradeWave": {
                      "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **upgradeMode** is set to 'Automatic'.",
                      "type": "string",
                      "enum": [
                        "Wave0",
                        "Wave1",
                        "Wave2"
                      ],
                      "x-ms-enum": {
                        "name": "clusterUpgradeCadence",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Wave0",
                            "description": "Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters."
                          },
                          {
                            "value": "Wave1",
                            "description": "Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters."
                          },
                          {
                            "value": "Wave2",
                            "description": "Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters."
                          }
                        ]
                      }
                    },
                    "upgradePauseStartTimestampUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The start timestamp to pause runtime version upgrades on the cluster (UTC)."
                    },
                    "upgradePauseEndTimestampUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The end timestamp of pause runtime version upgrades on the cluster (UTC)."
                    },
                    "waveUpgradePaused": {
                      "type": "boolean",
                      "description": "Boolean to pause automatic runtime version upgrades to the cluster."
                    },
                    "notifications": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "notificationCategory",
                          "notificationLevel",
                          "notificationTargets"
                        ],
                        "properties": {
                          "isEnabled": {
                            "type": "boolean",
                            "description": "Indicates if the notification is enabled."
                          },
                          "notificationCategory": {
                            "type": "string",
                            "description": "The category of notification.",
                            "enum": [
                              "WaveProgress"
                            ],
                            "x-ms-enum": {
                              "name": "notificationCategory",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "WaveProgress",
                                  "description": "Notification will be regarding wave progress."
                                }
                              ]
                            }
                          },
                          "notificationLevel": {
                            "type": "string",
                            "description": "The level of notification.",
                            "enum": [
                              "Critical",
                              "All"
                            ],
                            "x-ms-enum": {
                              "name": "notificationLevel",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Critical",
                                  "description": "Receive only critical notifications."
                                },
                                {
                                  "value": "All",
                                  "description": "Receive all notifications."
                                }
                              ]
                            }
                          },
                          "notificationTargets": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "notificationChannel",
                                "receivers"
                              ],
                              "properties": {
                                "notificationChannel": {
                                  "type": "string",
                                  "description": "The notification channel indicates the type of receivers subscribed to the notification, either user or subscription.",
                                  "enum": [
                                    "EmailUser",
                                    "EmailSubscription"
                                  ],
                                  "x-ms-enum": {
                                    "name": "notificationChannel",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "EmailUser",
                                        "description": "For email user receivers. In this case, the parameter receivers should be a list of email addresses that will receive the notifications."
                                      },
                                      {
                                        "value": "EmailSubscription",
                                        "description": "For subscription receivers. In this case, the parameter receivers should be a list of roles of the subscription for the cluster (eg. Owner, AccountAdmin, etc) that will receive the notifications."
                                      }
                                    ]
                                  }
                                },
                                "receivers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "List of targets that subscribe to the notification."
                                }
                              },
                              "description": "Describes the notification target properties."
                            },
                            "description": "List of targets that subscribe to the notification."
                          }
                        },
                        "description": "Describes the notification channel for cluster events."
                      },
                      "description": "Indicates a list of notification channels for cluster events."
                    }
                  },
                  "description": "Describes the cluster resource properties that can be updated during PATCH operation."
                },
                "tags": {
                  "type": "object",
                  "description": "Cluster update parameters",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "description": "Cluster update request"
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The cluster resource\n",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Azure resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Azure resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "Azure resource etag.",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The cluster resource properties",
                  "type": "object",
                  "required": [
                    "managementEndpoint",
                    "nodeTypes"
                  ],
                  "properties": {
                    "addOnFeatures": {
                      "type": "array",
                      "description": "The list of add-on features to enable in the cluster.",
                      "items": {
                        "type": "string",
                        "description": "Available cluster add-on features",
                        "enum": [
                          "RepairManager",
                          "DnsService",
                          "BackupRestoreService",
                          "ResourceMonitorService"
                        ]
                      }
                    },
                    "availableClusterVersions": {
                      "type": "array",
                      "description": "The Service Fabric runtime versions available for this cluster.",
                      "readOnly": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "codeVersion": {
                            "type": "string",
                            "description": "The Service Fabric runtime version of the cluster."
                          },
                          "supportExpiryUtc": {
                            "type": "string",
                            "description": "The date of expiry of support of the version."
                          },
                          "environment": {
                            "description": "Indicates if this version is for Windows or Linux operating system.",
                            "type": "string",
                            "enum": [
                              "Windows",
                              "Linux"
                            ]
                          }
                        },
                        "description": "The detail of the Service Fabric runtime version result"
                      }
                    },
                    "azureActiveDirectory": {
                      "description": "The AAD authentication settings of the cluster.",
                      "type": "object",
                      "properties": {
                        "tenantId": {
                          "type": "string",
                          "description": "Azure active directory tenant id."
                        },
                        "clusterApplication": {
                          "type": "string",
                          "description": "Azure active directory cluster application id."
                        },
                        "clientApplication": {
                          "type": "string",
                          "description": "Azure active directory client application id."
                        }
                      }
                    },
                    "certificate": {
                      "description": "The certificate to use for securing the cluster. The certificate provided will be used for node to node security within the cluster, SSL certificate for cluster management endpoint and default admin client.",
                      "type": "object",
                      "required": [
                        "thumbprint"
                      ],
                      "properties": {
                        "thumbprint": {
                          "type": "string",
                          "description": "Thumbprint of the primary certificate."
                        },
                        "thumbprintSecondary": {
                          "type": "string",
                          "description": "Thumbprint of the secondary certificate."
                        },
                        "x509StoreName": {
                          "type": "string",
                          "description": "The local certificate store location.",
                          "enum": [
                            "AddressBook",
                            "AuthRoot",
                            "CertificateAuthority",
                            "Disallowed",
                            "My",
                            "Root",
                            "TrustedPeople",
                            "TrustedPublisher"
                          ]
                        }
                      }
                    },
                    "certificateCommonNames": {
                      "type": "object",
                      "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
                      "properties": {
                        "commonNames": {
                          "type": "array",
                          "description": "The list of server certificates referenced by common name that are used to secure the cluster.",
                          "items": {
                            "type": "object",
                            "description": "Describes the server certificate details using common name.",
                            "required": [
                              "certificateCommonName",
                              "certificateIssuerThumbprint"
                            ],
                            "properties": {
                              "certificateCommonName": {
                                "type": "string",
                                "description": "The common name of the server certificate."
                              },
                              "certificateIssuerThumbprint": {
                                "type": "string",
                                "description": "The issuer thumbprint of the server certificate."
                              }
                            }
                          }
                        },
                        "x509StoreName": {
                          "type": "string",
                          "description": "The local certificate store location.",
                          "enum": [
                            "AddressBook",
                            "AuthRoot",
                            "CertificateAuthority",
                            "Disallowed",
                            "My",
                            "Root",
                            "TrustedPeople",
                            "TrustedPublisher"
                          ]
                        }
                      }
                    },
                    "clientCertificateCommonNames": {
                      "type": "array",
                      "description": "The list of client certificates referenced by common name that are allowed to manage the cluster.",
                      "items": {
                        "type": "object",
                        "required": [
                          "certificateCommonName",
                          "isAdmin",
                          "certificateIssuerThumbprint"
                        ],
                        "properties": {
                          "isAdmin": {
                            "type": "boolean",
                            "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                          },
                          "certificateCommonName": {
                            "type": "string",
                            "description": "The common name of the client certificate."
                          },
                          "certificateIssuerThumbprint": {
                            "type": "string",
                            "description": "The issuer thumbprint of the client certificate."
                          }
                        },
                        "description": "Describes the client certificate details using common name."
                      }
                    },
                    "clientCertificateThumbprints": {
                      "type": "array",
                      "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster.",
                      "items": {
                        "type": "object",
                        "required": [
                          "certificateThumbprint",
                          "isAdmin"
                        ],
                        "properties": {
                          "isAdmin": {
                            "type": "boolean",
                            "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                          },
                          "certificateThumbprint": {
                            "type": "string",
                            "description": "The thumbprint of the client certificate."
                          }
                        },
                        "description": "Describes the client certificate details using thumbprint."
                      }
                    },
                    "clusterCodeVersion": {
                      "type": "string",
                      "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](https://learn.microsoft.com/rest/api/servicefabric/cluster-versions/list). To get the list of available version for existing clusters use **availableClusterVersions**."
                    },
                    "clusterEndpoint": {
                      "type": "string",
                      "description": "The Azure Resource Provider endpoint. A system service in the cluster connects to this  endpoint.",
                      "readOnly": true
                    },
                    "clusterId": {
                      "type": "string",
                      "description": "A service generated unique identifier for the cluster resource.",
                      "readOnly": true
                    },
                    "clusterState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current state of the cluster.\n\n  - WaitingForNodes - Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it.\n  - Deploying - Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up.\n  - BaselineUpgrade - Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time.\n  - UpdatingUserConfiguration - Indicates that the cluster is being upgraded with the user provided configuration.\n  - UpdatingUserCertificate - Indicates that the cluster is being upgraded with the user provided certificate.\n  - UpdatingInfrastructure - Indicates that the cluster is being upgraded with the latest Service Fabric runtime version. This happens only when the **upgradeMode** is set to 'Automatic'.\n  - EnforcingClusterVersion - Indicates that cluster is on a different version than expected and the cluster is being upgraded to the expected version.\n  - UpgradeServiceUnreachable - Indicates that the system service in the cluster is no longer polling the Resource Provider. Clusters in this state cannot be managed by the Resource Provider.\n  - AutoScale - Indicates that the ReliabilityLevel of the cluster is being adjusted.\n  - Ready - Indicates that the cluster is in a stable state.\n",
                      "enum": [
                        "WaitingForNodes",
                        "Deploying",
                        "BaselineUpgrade",
                        "UpdatingUserConfiguration",
                        "UpdatingUserCertificate",
                        "UpdatingInfrastructure",
                        "EnforcingClusterVersion",
                        "UpgradeServiceUnreachable",
                        "AutoScale",
                        "Ready"
                      ]
                    },
                    "diagnosticsStorageAccountConfig": {
                      "description": "The storage account information for storing Service Fabric diagnostic logs.",
                      "type": "object",
                      "required": [
                        "blobEndpoint",
                        "protectedAccountKeyName",
                        "queueEndpoint",
                        "storageAccountName",
                        "tableEndpoint"
                      ],
                      "properties": {
                        "storageAccountName": {
                          "type": "string",
                          "description": "The Azure storage account name."
                        },
                        "protectedAccountKeyName": {
                          "type": "string",
                          "description": "The protected diagnostics storage key name."
                        },
                        "protectedAccountKeyName2": {
                          "type": "string",
                          "description": "The secondary protected diagnostics storage key name. If one of the storage account keys is rotated the cluster will fallback to using the other."
                        },
                        "blobEndpoint": {
                          "type": "string",
                          "description": "The blob endpoint of the azure storage account."
                        },
                        "queueEndpoint": {
                          "type": "string",
                          "description": "The queue endpoint of the azure storage account."
                        },
                        "tableEndpoint": {
                          "type": "string",
                          "description": "The table endpoint of the azure storage account."
                        }
                      }
                    },
                    "eventStoreServiceEnabled": {
                      "type": "boolean",
                      "description": "Indicates if the event store service is enabled."
                    },
                    "fabricSettings": {
                      "type": "array",
                      "description": "The list of custom fabric settings to configure the cluster.",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "parameters"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The section name of the fabric settings."
                          },
                          "parameters": {
                            "type": "array",
                            "description": "The collection of parameters in the section.",
                            "items": {
                              "type": "object",
                              "required": [
                                "name",
                                "value"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The parameter name of fabric setting."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The parameter value of fabric setting."
                                }
                              },
                              "description": "Describes a parameter in fabric settings of the cluster."
                            }
                          }
                        },
                        "description": "Describes a section in the fabric settings of the cluster."
                      }
                    },
                    "managementEndpoint": {
                      "type": "string",
                      "description": "The http management endpoint of the cluster."
                    },
                    "nodeTypes": {
                      "type": "array",
                      "description": "The list of node types in the cluster.",
                      "items": {
                        "type": "object",
                        "required": [
                          "clientConnectionEndpointPort",
                          "httpGatewayEndpointPort",
                          "isPrimary",
                          "name",
                          "vmInstanceCount"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the node type."
                          },
                          "placementProperties": {
                            "type": "object",
                            "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
                            "additionalProperties": {
                              "type": "string",
                              "description": "Placement tag value"
                            }
                          },
                          "capacities": {
                            "type": "object",
                            "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
                            "additionalProperties": {
                              "type": "string",
                              "description": "Capacity tag value"
                            }
                          },
                          "clientConnectionEndpointPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The TCP cluster management endpoint port."
                          },
                          "httpGatewayEndpointPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The HTTP cluster management endpoint port."
                          },
                          "durabilityLevel": {
                            "type": "string",
                            "description": "The durability level of the node type. Learn about [DurabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - Bronze - No privileges. This is the default.\n  - Silver - The infrastructure jobs can be paused for a duration of 10 minutes per UD.\n  - Gold - The infrastructure jobs can be paused for a duration of 2 hours per UD. Gold durability can be enabled only on full node VM skus like D15_V2, G5 etc.\n",
                            "enum": [
                              "Bronze",
                              "Silver",
                              "Gold"
                            ]
                          },
                          "applicationPorts": {
                            "description": "The range of ports from which cluster assigned port to Service Fabric applications.",
                            "type": "object",
                            "required": [
                              "endPort",
                              "startPort"
                            ],
                            "properties": {
                              "startPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Starting port of a range of ports"
                              },
                              "endPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "End port of a range of ports"
                              }
                            }
                          },
                          "ephemeralPorts": {
                            "description": "The range of ephemeral ports that nodes in this node type should be configured with.",
                            "type": "object",
                            "required": [
                              "endPort",
                              "startPort"
                            ],
                            "properties": {
                              "startPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Starting port of a range of ports"
                              },
                              "endPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "End port of a range of ports"
                              }
                            }
                          },
                          "isPrimary": {
                            "type": "boolean",
                            "description": "The node type on which system services will run. Only one node type should be marked as primary. Primary node type cannot be deleted or changed for existing clusters."
                          },
                          "vmInstanceCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "VMInstanceCount should be 1 to n, where n indicates the number of VM instances corresponding to this nodeType. VMInstanceCount = 0 can be done only in these scenarios: NodeType is a secondary nodeType. Durability = Bronze or Durability >= Bronze and InfrastructureServiceManager = true. If VMInstanceCount = 0, implies the VMs for this nodeType will not be used for the initial cluster size computation.",
                            "minimum": 0,
                            "maximum": 2147483647
                          },
                          "reverseProxyEndpointPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The endpoint used by reverse proxy."
                          },
                          "isStateless": {
                            "type": "boolean",
                            "description": "Indicates if the node type can only host Stateless workloads."
                          },
                          "multipleAvailabilityZones": {
                            "type": "boolean",
                            "description": "Indicates if the node type is enabled to support multiple zones."
                          }
                        },
                        "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning state of the cluster resource.",
                      "readOnly": true,
                      "enum": [
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "reliabilityLevel": {
                      "type": "string",
                      "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n",
                      "enum": [
                        "None",
                        "Bronze",
                        "Silver",
                        "Gold",
                        "Platinum"
                      ]
                    },
                    "reverseProxyCertificate": {
                      "description": "The server certificate used by reverse proxy.",
                      "type": "object",
                      "required": [
                        "thumbprint"
                      ],
                      "properties": {
                        "thumbprint": {
                          "type": "string",
                          "description": "Thumbprint of the primary certificate."
                        },
                        "thumbprintSecondary": {
                          "type": "string",
                          "description": "Thumbprint of the secondary certificate."
                        },
                        "x509StoreName": {
                          "type": "string",
                          "description": "The local certificate store location.",
                          "enum": [
                            "AddressBook",
                            "AuthRoot",
                            "CertificateAuthority",
                            "Disallowed",
                            "My",
                            "Root",
                            "TrustedPeople",
                            "TrustedPublisher"
                          ]
                        }
                      }
                    },
                    "reverseProxyCertificateCommonNames": {
                      "type": "object",
                      "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
                      "properties": {
                        "commonNames": {
                          "type": "array",
                          "description": "The list of server certificates referenced by common name that are used to secure the cluster.",
                          "items": {
                            "type": "object",
                            "description": "Describes the server certificate details using common name.",
                            "required": [
                              "certificateCommonName",
                              "certificateIssuerThumbprint"
                            ],
                            "properties": {
                              "certificateCommonName": {
                                "type": "string",
                                "description": "The common name of the server certificate."
                              },
                              "certificateIssuerThumbprint": {
                                "type": "string",
                                "description": "The issuer thumbprint of the server certificate."
                              }
                            }
                          }
                        },
                        "x509StoreName": {
                          "type": "string",
                          "description": "The local certificate store location.",
                          "enum": [
                            "AddressBook",
                            "AuthRoot",
                            "CertificateAuthority",
                            "Disallowed",
                            "My",
                            "Root",
                            "TrustedPeople",
                            "TrustedPublisher"
                          ]
                        }
                      }
                    },
                    "upgradeDescription": {
                      "description": "The policy to use when upgrading the cluster.",
                      "type": "object",
                      "required": [
                        "healthCheckRetryTimeout",
                        "healthCheckStableDuration",
                        "healthCheckWaitDuration",
                        "healthPolicy",
                        "upgradeDomainTimeout",
                        "upgradeReplicaSetCheckTimeout",
                        "upgradeTimeout"
                      ],
                      "properties": {
                        "forceRestart": {
                          "type": "boolean",
                          "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data)."
                        },
                        "upgradeReplicaSetCheckTimeout": {
                          "type": "string",
                          "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "healthCheckWaitDuration": {
                          "type": "string",
                          "description": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "healthCheckStableDuration": {
                          "type": "string",
                          "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "healthCheckRetryTimeout": {
                          "type": "string",
                          "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "upgradeTimeout": {
                          "type": "string",
                          "description": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "upgradeDomainTimeout": {
                          "type": "string",
                          "description": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "healthPolicy": {
                          "description": "The cluster health policy used when upgrading the cluster.",
                          "type": "object",
                          "properties": {
                            "maxPercentUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.\n",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentUnhealthyApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.\nThe computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.\n",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 100
                            },
                            "applicationHealthPolicies": {
                              "description": "Defines the application health policy map used to evaluate the health of an application or one of its children entities.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
                                "properties": {
                                  "defaultServiceTypeHealthPolicy": {
                                    "description": "The health policy used by default to evaluate the health of a service type.",
                                    "type": "object",
                                    "properties": {
                                      "maxPercentUnhealthyServices": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                        "default": 0,
                                        "minimum": 0,
                                        "maximum": 100
                                      }
                                    }
                                  },
                                  "serviceTypeHealthPolicies": {
                                    "description": "The map with service type health policy per service type name. The map is empty by default.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object",
                                      "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                                      "properties": {
                                        "maxPercentUnhealthyServices": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                          "default": 0,
                                          "minimum": 0,
                                          "maximum": 100
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "deltaHealthPolicy": {
                          "description": "The cluster delta health policy used when upgrading the cluster.",
                          "type": "object",
                          "required": [
                            "maxPercentDeltaUnhealthyApplications",
                            "maxPercentDeltaUnhealthyNodes",
                            "maxPercentUpgradeDomainDeltaUnhealthyNodes"
                          ],
                          "properties": {
                            "maxPercentDeltaUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentDeltaUnhealthyApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "applicationDeltaHealthPolicies": {
                              "description": "Defines the application delta health policy map used to evaluate the health of an application or one of its child entities when upgrading the cluster.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Defines a delta health policy used to evaluate the health of an application or one of its child entities when upgrading the cluster.\n",
                                "properties": {
                                  "defaultServiceTypeDeltaHealthPolicy": {
                                    "description": "The delta health policy used by default to evaluate the health of a service type when upgrading the cluster.",
                                    "type": "object",
                                    "properties": {
                                      "maxPercentDeltaUnhealthyServices": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                                        "default": 0,
                                        "minimum": 0,
                                        "maximum": 100
                                      }
                                    }
                                  },
                                  "serviceTypeDeltaHealthPolicies": {
                                    "description": "The map with service type delta health policy per service type name. The map is empty by default.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object",
                                      "description": "Represents the delta health policy used to evaluate the health of services belonging to a service type when upgrading the cluster.\n",
                                      "properties": {
                                        "maxPercentDeltaUnhealthyServices": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                                          "default": 0,
                                          "minimum": 0,
                                          "maximum": 100
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "upgradeMode": {
                      "type": "string",
                      "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.",
                      "enum": [
                        "Automatic",
                        "Manual"
                      ],
                      "default": "Automatic",
                      "x-ms-enum": {
                        "name": "UpgradeMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Automatic",
                            "description": "The cluster will be automatically upgraded to the latest Service Fabric runtime version, **upgradeWave** will determine when the upgrade starts after the new version becomes available."
                          },
                          {
                            "value": "Manual",
                            "description": "The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource."
                          }
                        ]
                      }
                    },
                    "applicationTypeVersionsCleanupPolicy": {
                      "description": "The policy used to clean up unused versions.",
                      "type": "object",
                      "required": [
                        "maxUnusedVersionsToKeep"
                      ],
                      "properties": {
                        "maxUnusedVersionsToKeep": {
                          "type": "integer",
                          "format": "int64",
                          "minimum": 0,
                          "description": "Number of unused versions per application type to keep."
                        }
                      }
                    },
                    "vmImage": {
                      "type": "string",
                      "description": "The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used."
                    },
                    "sfZonalUpgradeMode": {
                      "type": "string",
                      "enum": [
                        "Parallel",
                        "Hierarchical"
                      ],
                      "x-ms-enum": {
                        "name": "sfZonalUpgradeMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Parallel",
                            "description": "VMs under the node type are grouped into UDs and ignore the zone info in five UDs. This setting causes UDs across all zones to be upgraded at the same time. This deployment mode is faster for upgrades, we don't recommend it because it goes against the SDP guidelines, which state that the updates should be applied to one zone at a time."
                          },
                          {
                            "value": "Hierarchical",
                            "description": "If this value is omitted or set to Hierarchical, VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone. This update process is safer for the cluster and the user application."
                          }
                        ]
                      },
                      "description": "This property controls the logical grouping of VMs in upgrade domains (UDs). This property can't be modified if a node type with multiple Availability Zones is already present in the cluster."
                    },
                    "vmssZonalUpgradeMode": {
                      "type": "string",
                      "enum": [
                        "Parallel",
                        "Hierarchical"
                      ],
                      "x-ms-enum": {
                        "name": "vmssZonalUpgradeMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Parallel",
                            "description": "Updates will happen in all Availability Zones at once for the virtual machine scale sets."
                          },
                          {
                            "value": "Hierarchical",
                            "description": "VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone."
                          }
                        ]
                      },
                      "description": "This property defines the upgrade mode for the virtual machine scale set, it is mandatory if a node type with multiple Availability Zones is added."
                    },
                    "infrastructureServiceManager": {
                      "type": "boolean",
                      "description": "Indicates if infrastructure service manager is enabled."
                    },
                    "upgradeWave": {
                      "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **upgradeMode** is set to 'Automatic'.",
                      "type": "string",
                      "enum": [
                        "Wave0",
                        "Wave1",
                        "Wave2"
                      ],
                      "x-ms-enum": {
                        "name": "clusterUpgradeCadence",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Wave0",
                            "description": "Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters."
                          },
                          {
                            "value": "Wave1",
                            "description": "Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters."
                          },
                          {
                            "value": "Wave2",
                            "description": "Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters."
                          }
                        ]
                      }
                    },
                    "upgradePauseStartTimestampUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Indicates the start date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC)."
                    },
                    "upgradePauseEndTimestampUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Indicates the end date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC)."
                    },
                    "waveUpgradePaused": {
                      "type": "boolean",
                      "description": "Boolean to pause automatic runtime version upgrades to the cluster."
                    },
                    "notifications": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "notificationCategory",
                          "notificationLevel",
                          "notificationTargets"
                        ],
                        "properties": {
                          "isEnabled": {
                            "type": "boolean",
                            "description": "Indicates if the notification is enabled."
                          },
                          "notificationCategory": {
                            "type": "string",
                            "description": "The category of notification.",
                            "enum": [
                              "WaveProgress"
                            ],
                            "x-ms-enum": {
                              "name": "notificationCategory",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "WaveProgress",
                                  "description": "Notification will be regarding wave progress."
                                }
                              ]
                            }
                          },
                          "notificationLevel": {
                            "type": "string",
                            "description": "The level of notification.",
                            "enum": [
                              "Critical",
                              "All"
                            ],
                            "x-ms-enum": {
                              "name": "notificationLevel",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Critical",
                                  "description": "Receive only critical notifications."
                                },
                                {
                                  "value": "All",
                                  "description": "Receive all notifications."
                                }
                              ]
                            }
                          },
                          "notificationTargets": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "notificationChannel",
                                "receivers"
                              ],
                              "properties": {
                                "notificationChannel": {
                                  "type": "string",
                                  "description": "The notification channel indicates the type of receivers subscribed to the notification, either user or subscription.",
                                  "enum": [
                                    "EmailUser",
                                    "EmailSubscription"
                                  ],
                                  "x-ms-enum": {
                                    "name": "notificationChannel",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "EmailUser",
                                        "description": "For email user receivers. In this case, the parameter receivers should be a list of email addresses that will receive the notifications."
                                      },
                                      {
                                        "value": "EmailSubscription",
                                        "description": "For subscription receivers. In this case, the parameter receivers should be a list of roles of the subscription for the cluster (eg. Owner, AccountAdmin, etc) that will receive the notifications."
                                      }
                                    ]
                                  }
                                },
                                "receivers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "List of targets that subscribe to the notification."
                                }
                              },
                              "description": "Describes the notification target properties."
                            },
                            "description": "List of targets that subscribe to the notification."
                          }
                        },
                        "description": "Describes the notification channel for cluster events."
                      },
                      "description": "Indicates a list of notification channels for cluster events."
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The request was accepted and the operation will complete asynchronously.",
            "schema": {
              "type": "object",
              "description": "The cluster resource\n",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Azure resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Azure resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "Azure resource etag.",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The cluster resource properties",
                  "type": "object",
                  "required": [
                    "managementEndpoint",
                    "nodeTypes"
                  ],
                  "properties": {
                    "addOnFeatures": {
                      "type": "array",
                      "description": "The list of add-on features to enable in the cluster.",
                      "items": {
                        "type": "string",
                        "description": "Available cluster add-on features",
                        "enum": [
                          "RepairManager",
                          "DnsService",
                          "BackupRestoreService",
                          "ResourceMonitorService"
                        ]
                      }
                    },
                    "availableClusterVersions": {
                      "type": "array",
                      "description": "The Service Fabric runtime versions available for this cluster.",
                      "readOnly": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "codeVersion": {
                            "type": "string",
                            "description": "The Service Fabric runtime version of the cluster."
                          },
                          "supportExpiryUtc": {
                            "type": "string",
                            "description": "The date of expiry of support of the version."
                          },
                          "environment": {
                            "description": "Indicates if this version is for Windows or Linux operating system.",
                            "type": "string",
                            "enum": [
                              "Windows",
                              "Linux"
                            ]
                          }
                        },
                        "description": "The detail of the Service Fabric runtime version result"
                      }
                    },
                    "azureActiveDirectory": {
                      "description": "The AAD authentication settings of the cluster.",
                      "type": "object",
                      "properties": {
                        "tenantId": {
                          "type": "string",
                          "description": "Azure active directory tenant id."
                        },
                        "clusterApplication": {
                          "type": "string",
                          "description": "Azure active directory cluster application id."
                        },
                        "clientApplication": {
                          "type": "string",
                          "description": "Azure active directory client application id."
                        }
                      }
                    },
                    "certificate": {
                      "description": "The certificate to use for securing the cluster. The certificate provided will be used for node to node security within the cluster, SSL certificate for cluster management endpoint and default admin client.",
                      "type": "object",
                      "required": [
                        "thumbprint"
                      ],
                      "properties": {
                        "thumbprint": {
                          "type": "string",
                          "description": "Thumbprint of the primary certificate."
                        },
                        "thumbprintSecondary": {
                          "type": "string",
                          "description": "Thumbprint of the secondary certificate."
                        },
                        "x509StoreName": {
                          "type": "string",
                          "description": "The local certificate store location.",
                          "enum": [
                            "AddressBook",
                            "AuthRoot",
                            "CertificateAuthority",
                            "Disallowed",
                            "My",
                            "Root",
                            "TrustedPeople",
                            "TrustedPublisher"
                          ]
                        }
                      }
                    },
                    "certificateCommonNames": {
                      "type": "object",
                      "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
                      "properties": {
                        "commonNames": {
                          "type": "array",
                          "description": "The list of server certificates referenced by common name that are used to secure the cluster.",
                          "items": {
                            "type": "object",
                            "description": "Describes the server certificate details using common name.",
                            "required": [
                              "certificateCommonName",
                              "certificateIssuerThumbprint"
                            ],
                            "properties": {
                              "certificateCommonName": {
                                "type": "string",
                                "description": "The common name of the server certificate."
                              },
                              "certificateIssuerThumbprint": {
                                "type": "string",
                                "description": "The issuer thumbprint of the server certificate."
                              }
                            }
                          }
                        },
                        "x509StoreName": {
                          "type": "string",
                          "description": "The local certificate store location.",
                          "enum": [
                            "AddressBook",
                            "AuthRoot",
                            "CertificateAuthority",
                            "Disallowed",
                            "My",
                            "Root",
                            "TrustedPeople",
                            "TrustedPublisher"
                          ]
                        }
                      }
                    },
                    "clientCertificateCommonNames": {
                      "type": "array",
                      "description": "The list of client certificates referenced by common name that are allowed to manage the cluster.",
                      "items": {
                        "type": "object",
                        "required": [
                          "certificateCommonName",
                          "isAdmin",
                          "certificateIssuerThumbprint"
                        ],
                        "properties": {
                          "isAdmin": {
                            "type": "boolean",
                            "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                          },
                          "certificateCommonName": {
                            "type": "string",
                            "description": "The common name of the client certificate."
                          },
                          "certificateIssuerThumbprint": {
                            "type": "string",
                            "description": "The issuer thumbprint of the client certificate."
                          }
                        },
                        "description": "Describes the client certificate details using common name."
                      }
                    },
                    "clientCertificateThumbprints": {
                      "type": "array",
                      "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster.",
                      "items": {
                        "type": "object",
                        "required": [
                          "certificateThumbprint",
                          "isAdmin"
                        ],
                        "properties": {
                          "isAdmin": {
                            "type": "boolean",
                            "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                          },
                          "certificateThumbprint": {
                            "type": "string",
                            "description": "The thumbprint of the client certificate."
                          }
                        },
                        "description": "Describes the client certificate details using thumbprint."
                      }
                    },
                    "clusterCodeVersion": {
                      "type": "string",
                      "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](https://learn.microsoft.com/rest/api/servicefabric/cluster-versions/list). To get the list of available version for existing clusters use **availableClusterVersions**."
                    },
                    "clusterEndpoint": {
                      "type": "string",
                      "description": "The Azure Resource Provider endpoint. A system service in the cluster connects to this  endpoint.",
                      "readOnly": true
                    },
                    "clusterId": {
                      "type": "string",
                      "description": "A service generated unique identifier for the cluster resource.",
                      "readOnly": true
                    },
                    "clusterState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current state of the cluster.\n\n  - WaitingForNodes - Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it.\n  - Deploying - Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up.\n  - BaselineUpgrade - Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time.\n  - UpdatingUserConfiguration - Indicates that the cluster is being upgraded with the user provided configuration.\n  - UpdatingUserCertificate - Indicates that the cluster is being upgraded with the user provided certificate.\n  - UpdatingInfrastructure - Indicates that the cluster is being upgraded with the latest Service Fabric runtime version. This happens only when the **upgradeMode** is set to 'Automatic'.\n  - EnforcingClusterVersion - Indicates that cluster is on a different version than expected and the cluster is being upgraded to the expected version.\n  - UpgradeServiceUnreachable - Indicates that the system service in the cluster is no longer polling the Resource Provider. Clusters in this state cannot be managed by the Resource Provider.\n  - AutoScale - Indicates that the ReliabilityLevel of the cluster is being adjusted.\n  - Ready - Indicates that the cluster is in a stable state.\n",
                      "enum": [
                        "WaitingForNodes",
                        "Deploying",
                        "BaselineUpgrade",
                        "UpdatingUserConfiguration",
                        "UpdatingUserCertificate",
                        "UpdatingInfrastructure",
                        "EnforcingClusterVersion",
                        "UpgradeServiceUnreachable",
                        "AutoScale",
                        "Ready"
                      ]
                    },
                    "diagnosticsStorageAccountConfig": {
                      "description": "The storage account information for storing Service Fabric diagnostic logs.",
                      "type": "object",
                      "required": [
                        "blobEndpoint",
                        "protectedAccountKeyName",
                        "queueEndpoint",
                        "storageAccountName",
                        "tableEndpoint"
                      ],
                      "properties": {
                        "storageAccountName": {
                          "type": "string",
                          "description": "The Azure storage account name."
                        },
                        "protectedAccountKeyName": {
                          "type": "string",
                          "description": "The protected diagnostics storage key name."
                        },
                        "protectedAccountKeyName2": {
                          "type": "string",
                          "description": "The secondary protected diagnostics storage key name. If one of the storage account keys is rotated the cluster will fallback to using the other."
                        },
                        "blobEndpoint": {
                          "type": "string",
                          "description": "The blob endpoint of the azure storage account."
                        },
                        "queueEndpoint": {
                          "type": "string",
                          "description": "The queue endpoint of the azure storage account."
                        },
                        "tableEndpoint": {
                          "type": "string",
                          "description": "The table endpoint of the azure storage account."
                        }
                      }
                    },
                    "eventStoreServiceEnabled": {
                      "type": "boolean",
                      "description": "Indicates if the event store service is enabled."
                    },
                    "fabricSettings": {
                      "type": "array",
                      "description": "The list of custom fabric settings to configure the cluster.",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "parameters"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The section name of the fabric settings."
                          },
                          "parameters": {
                            "type": "array",
                            "description": "The collection of parameters in the section.",
                            "items": {
                              "type": "object",
                              "required": [
                                "name",
                                "value"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The parameter name of fabric setting."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The parameter value of fabric setting."
                                }
                              },
                              "description": "Describes a parameter in fabric settings of the cluster."
                            }
                          }
                        },
                        "description": "Describes a section in the fabric settings of the cluster."
                      }
                    },
                    "managementEndpoint": {
                      "type": "string",
                      "description": "The http management endpoint of the cluster."
                    },
                    "nodeTypes": {
                      "type": "array",
                      "description": "The list of node types in the cluster.",
                      "items": {
                        "type": "object",
                        "required": [
                          "clientConnectionEndpointPort",
                          "httpGatewayEndpointPort",
                          "isPrimary",
                          "name",
                          "vmInstanceCount"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the node type."
                          },
                          "placementProperties": {
                            "type": "object",
                            "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
                            "additionalProperties": {
                              "type": "string",
                              "description": "Placement tag value"
                            }
                          },
                          "capacities": {
                            "type": "object",
                            "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
                            "additionalProperties": {
                              "type": "string",
                              "description": "Capacity tag value"
                            }
                          },
                          "clientConnectionEndpointPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The TCP cluster management endpoint port."
                          },
                          "httpGatewayEndpointPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The HTTP cluster management endpoint port."
                          },
                          "durabilityLevel": {
                            "type": "string",
                            "description": "The durability level of the node type. Learn about [DurabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - Bronze - No privileges. This is the default.\n  - Silver - The infrastructure jobs can be paused for a duration of 10 minutes per UD.\n  - Gold - The infrastructure jobs can be paused for a duration of 2 hours per UD. Gold durability can be enabled only on full node VM skus like D15_V2, G5 etc.\n",
                            "enum": [
                              "Bronze",
                              "Silver",
                              "Gold"
                            ]
                          },
                          "applicationPorts": {
                            "description": "The range of ports from which cluster assigned port to Service Fabric applications.",
                            "type": "object",
                            "required": [
                              "endPort",
                              "startPort"
                            ],
                            "properties": {
                              "startPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Starting port of a range of ports"
                              },
                              "endPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "End port of a range of ports"
                              }
                            }
                          },
                          "ephemeralPorts": {
                            "description": "The range of ephemeral ports that nodes in this node type should be configured with.",
                            "type": "object",
                            "required": [
                              "endPort",
                              "startPort"
                            ],
                            "properties": {
                              "startPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Starting port of a range of ports"
                              },
                              "endPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "End port of a range of ports"
                              }
                            }
                          },
                          "isPrimary": {
                            "type": "boolean",
                            "description": "The node type on which system services will run. Only one node type should be marked as primary. Primary node type cannot be deleted or changed for existing clusters."
                          },
                          "vmInstanceCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "VMInstanceCount should be 1 to n, where n indicates the number of VM instances corresponding to this nodeType. VMInstanceCount = 0 can be done only in these scenarios: NodeType is a secondary nodeType. Durability = Bronze or Durability >= Bronze and InfrastructureServiceManager = true. If VMInstanceCount = 0, implies the VMs for this nodeType will not be used for the initial cluster size computation.",
                            "minimum": 0,
                            "maximum": 2147483647
                          },
                          "reverseProxyEndpointPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The endpoint used by reverse proxy."
                          },
                          "isStateless": {
                            "type": "boolean",
                            "description": "Indicates if the node type can only host Stateless workloads."
                          },
                          "multipleAvailabilityZones": {
                            "type": "boolean",
                            "description": "Indicates if the node type is enabled to support multiple zones."
                          }
                        },
                        "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning state of the cluster resource.",
                      "readOnly": true,
                      "enum": [
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "reliabilityLevel": {
                      "type": "string",
                      "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n",
                      "enum": [
                        "None",
                        "Bronze",
                        "Silver",
                        "Gold",
                        "Platinum"
                      ]
                    },
                    "reverseProxyCertificate": {
                      "description": "The server certificate used by reverse proxy.",
                      "type": "object",
                      "required": [
                        "thumbprint"
                      ],
                      "properties": {
                        "thumbprint": {
                          "type": "string",
                          "description": "Thumbprint of the primary certificate."
                        },
                        "thumbprintSecondary": {
                          "type": "string",
                          "description": "Thumbprint of the secondary certificate."
                        },
                        "x509StoreName": {
                          "type": "string",
                          "description": "The local certificate store location.",
                          "enum": [
                            "AddressBook",
                            "AuthRoot",
                            "CertificateAuthority",
                            "Disallowed",
                            "My",
                            "Root",
                            "TrustedPeople",
                            "TrustedPublisher"
                          ]
                        }
                      }
                    },
                    "reverseProxyCertificateCommonNames": {
                      "type": "object",
                      "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
                      "properties": {
                        "commonNames": {
                          "type": "array",
                          "description": "The list of server certificates referenced by common name that are used to secure the cluster.",
                          "items": {
                            "type": "object",
                            "description": "Describes the server certificate details using common name.",
                            "required": [
                              "certificateCommonName",
                              "certificateIssuerThumbprint"
                            ],
                            "properties": {
                              "certificateCommonName": {
                                "type": "string",
                                "description": "The common name of the server certificate."
                              },
                              "certificateIssuerThumbprint": {
                                "type": "string",
                                "description": "The issuer thumbprint of the server certificate."
                              }
                            }
                          }
                        },
                        "x509StoreName": {
                          "type": "string",
                          "description": "The local certificate store location.",
                          "enum": [
                            "AddressBook",
                            "AuthRoot",
                            "CertificateAuthority",
                            "Disallowed",
                            "My",
                            "Root",
                            "TrustedPeople",
                            "TrustedPublisher"
                          ]
                        }
                      }
                    },
                    "upgradeDescription": {
                      "description": "The policy to use when upgrading the cluster.",
                      "type": "object",
                      "required": [
                        "healthCheckRetryTimeout",
                        "healthCheckStableDuration",
                        "healthCheckWaitDuration",
                        "healthPolicy",
                        "upgradeDomainTimeout",
                        "upgradeReplicaSetCheckTimeout",
                        "upgradeTimeout"
                      ],
                      "properties": {
                        "forceRestart": {
                          "type": "boolean",
                          "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data)."
                        },
                        "upgradeReplicaSetCheckTimeout": {
                          "type": "string",
                          "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "healthCheckWaitDuration": {
                          "type": "string",
                          "description": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "healthCheckStableDuration": {
                          "type": "string",
                          "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "healthCheckRetryTimeout": {
                          "type": "string",
                          "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "upgradeTimeout": {
                          "type": "string",
                          "description": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "upgradeDomainTimeout": {
                          "type": "string",
                          "description": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                        },
                        "healthPolicy": {
                          "description": "The cluster health policy used when upgrading the cluster.",
                          "type": "object",
                          "properties": {
                            "maxPercentUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.\n",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentUnhealthyApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.\nThe computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.\n",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 100
                            },
                            "applicationHealthPolicies": {
                              "description": "Defines the application health policy map used to evaluate the health of an application or one of its children entities.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
                                "properties": {
                                  "defaultServiceTypeHealthPolicy": {
                                    "description": "The health policy used by default to evaluate the health of a service type.",
                                    "type": "object",
                                    "properties": {
                                      "maxPercentUnhealthyServices": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                        "default": 0,
                                        "minimum": 0,
                                        "maximum": 100
                                      }
                                    }
                                  },
                                  "serviceTypeHealthPolicies": {
                                    "description": "The map with service type health policy per service type name. The map is empty by default.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object",
                                      "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                                      "properties": {
                                        "maxPercentUnhealthyServices": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                          "default": 0,
                                          "minimum": 0,
                                          "maximum": 100
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "deltaHealthPolicy": {
                          "description": "The cluster delta health policy used when upgrading the cluster.",
                          "type": "object",
                          "required": [
                            "maxPercentDeltaUnhealthyApplications",
                            "maxPercentDeltaUnhealthyNodes",
                            "maxPercentUpgradeDomainDeltaUnhealthyNodes"
                          ],
                          "properties": {
                            "maxPercentDeltaUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentDeltaUnhealthyApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "applicationDeltaHealthPolicies": {
                              "description": "Defines the application delta health policy map used to evaluate the health of an application or one of its child entities when upgrading the cluster.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Defines a delta health policy used to evaluate the health of an application or one of its child entities when upgrading the cluster.\n",
                                "properties": {
                                  "defaultServiceTypeDeltaHealthPolicy": {
                                    "description": "The delta health policy used by default to evaluate the health of a service type when upgrading the cluster.",
                                    "type": "object",
                                    "properties": {
                                      "maxPercentDeltaUnhealthyServices": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                                        "default": 0,
                                        "minimum": 0,
                                        "maximum": 100
                                      }
                                    }
                                  },
                                  "serviceTypeDeltaHealthPolicies": {
                                    "description": "The map with service type delta health policy per service type name. The map is empty by default.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object",
                                      "description": "Represents the delta health policy used to evaluate the health of services belonging to a service type when upgrading the cluster.\n",
                                      "properties": {
                                        "maxPercentDeltaUnhealthyServices": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                                          "default": 0,
                                          "minimum": 0,
                                          "maximum": 100
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "upgradeMode": {
                      "type": "string",
                      "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.",
                      "enum": [
                        "Automatic",
                        "Manual"
                      ],
                      "default": "Automatic",
                      "x-ms-enum": {
                        "name": "UpgradeMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Automatic",
                            "description": "The cluster will be automatically upgraded to the latest Service Fabric runtime version, **upgradeWave** will determine when the upgrade starts after the new version becomes available."
                          },
                          {
                            "value": "Manual",
                            "description": "The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource."
                          }
                        ]
                      }
                    },
                    "applicationTypeVersionsCleanupPolicy": {
                      "description": "The policy used to clean up unused versions.",
                      "type": "object",
                      "required": [
                        "maxUnusedVersionsToKeep"
                      ],
                      "properties": {
                        "maxUnusedVersionsToKeep": {
                          "type": "integer",
                          "format": "int64",
                          "minimum": 0,
                          "description": "Number of unused versions per application type to keep."
                        }
                      }
                    },
                    "vmImage": {
                      "type": "string",
                      "description": "The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used."
                    },
                    "sfZonalUpgradeMode": {
                      "type": "string",
                      "enum": [
                        "Parallel",
                        "Hierarchical"
                      ],
                      "x-ms-enum": {
                        "name": "sfZonalUpgradeMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Parallel",
                            "description": "VMs under the node type are grouped into UDs and ignore the zone info in five UDs. This setting causes UDs across all zones to be upgraded at the same time. This deployment mode is faster for upgrades, we don't recommend it because it goes against the SDP guidelines, which state that the updates should be applied to one zone at a time."
                          },
                          {
                            "value": "Hierarchical",
                            "description": "If this value is omitted or set to Hierarchical, VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone. This update process is safer for the cluster and the user application."
                          }
                        ]
                      },
                      "description": "This property controls the logical grouping of VMs in upgrade domains (UDs). This property can't be modified if a node type with multiple Availability Zones is already present in the cluster."
                    },
                    "vmssZonalUpgradeMode": {
                      "type": "string",
                      "enum": [
                        "Parallel",
                        "Hierarchical"
                      ],
                      "x-ms-enum": {
                        "name": "vmssZonalUpgradeMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Parallel",
                            "description": "Updates will happen in all Availability Zones at once for the virtual machine scale sets."
                          },
                          {
                            "value": "Hierarchical",
                            "description": "VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone."
                          }
                        ]
                      },
                      "description": "This property defines the upgrade mode for the virtual machine scale set, it is mandatory if a node type with multiple Availability Zones is added."
                    },
                    "infrastructureServiceManager": {
                      "type": "boolean",
                      "description": "Indicates if infrastructure service manager is enabled."
                    },
                    "upgradeWave": {
                      "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **upgradeMode** is set to 'Automatic'.",
                      "type": "string",
                      "enum": [
                        "Wave0",
                        "Wave1",
                        "Wave2"
                      ],
                      "x-ms-enum": {
                        "name": "clusterUpgradeCadence",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Wave0",
                            "description": "Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters."
                          },
                          {
                            "value": "Wave1",
                            "description": "Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters."
                          },
                          {
                            "value": "Wave2",
                            "description": "Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters."
                          }
                        ]
                      }
                    },
                    "upgradePauseStartTimestampUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Indicates the start date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC)."
                    },
                    "upgradePauseEndTimestampUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Indicates the end date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC)."
                    },
                    "waveUpgradePaused": {
                      "type": "boolean",
                      "description": "Boolean to pause automatic runtime version upgrades to the cluster."
                    },
                    "notifications": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "notificationCategory",
                          "notificationLevel",
                          "notificationTargets"
                        ],
                        "properties": {
                          "isEnabled": {
                            "type": "boolean",
                            "description": "Indicates if the notification is enabled."
                          },
                          "notificationCategory": {
                            "type": "string",
                            "description": "The category of notification.",
                            "enum": [
                              "WaveProgress"
                            ],
                            "x-ms-enum": {
                              "name": "notificationCategory",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "WaveProgress",
                                  "description": "Notification will be regarding wave progress."
                                }
                              ]
                            }
                          },
                          "notificationLevel": {
                            "type": "string",
                            "description": "The level of notification.",
                            "enum": [
                              "Critical",
                              "All"
                            ],
                            "x-ms-enum": {
                              "name": "notificationLevel",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Critical",
                                  "description": "Receive only critical notifications."
                                },
                                {
                                  "value": "All",
                                  "description": "Receive all notifications."
                                }
                              ]
                            }
                          },
                          "notificationTargets": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "notificationChannel",
                                "receivers"
                              ],
                              "properties": {
                                "notificationChannel": {
                                  "type": "string",
                                  "description": "The notification channel indicates the type of receivers subscribed to the notification, either user or subscription.",
                                  "enum": [
                                    "EmailUser",
                                    "EmailSubscription"
                                  ],
                                  "x-ms-enum": {
                                    "name": "notificationChannel",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "EmailUser",
                                        "description": "For email user receivers. In this case, the parameter receivers should be a list of email addresses that will receive the notifications."
                                      },
                                      {
                                        "value": "EmailSubscription",
                                        "description": "For subscription receivers. In this case, the parameter receivers should be a list of roles of the subscription for the cluster (eg. Owner, AccountAdmin, etc) that will receive the notifications."
                                      }
                                    ]
                                  }
                                },
                                "receivers": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "List of targets that subscribe to the notification."
                                }
                              },
                              "description": "Describes the notification target properties."
                            },
                            "description": "List of targets that subscribe to the notification."
                          }
                        },
                        "description": "Describes the notification channel for cluster events."
                      },
                      "description": "Indicates a list of notification channels for cluster events."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Cluster"
        ],
        "operationId": "Clusters_Delete",
        "summary": "Deletes a Service Fabric cluster resource.",
        "description": "Delete a Service Fabric cluster resource with the specified name.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2021-06-01\" for this specification.",
            "required": true,
            "type": "string",
            "enum": [
              "2021-06-01"
            ],
            "default": "2021-06-01",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully."
          },
          "204": {
            "description": "The resource was not found."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters": {
      "get": {
        "operationId": "Clusters_ListByResourceGroup",
        "summary": "Gets the list of Service Fabric cluster resources created in the specified resource group.",
        "description": "Gets all Service Fabric cluster resources created or in the process of being created in the resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2021-06-01\" for this specification.",
            "required": true,
            "type": "string",
            "enum": [
              "2021-06-01"
            ],
            "default": "2021-06-01",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "The cluster resource\n",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Azure resource identifier.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "Azure resource name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "Azure resource type.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "Azure resource location.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "description": "Azure resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "etag": {
                        "type": "string",
                        "description": "Azure resource etag.",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource."
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource."
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)."
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The cluster resource properties",
                        "type": "object",
                        "required": [
                          "managementEndpoint",
                          "nodeTypes"
                        ],
                        "properties": {
                          "addOnFeatures": {
                            "type": "array",
                            "description": "The list of add-on features to enable in the cluster.",
                            "items": {
                              "type": "string",
                              "description": "Available cluster add-on features",
                              "enum": [
                                "RepairManager",
                                "DnsService",
                                "BackupRestoreService",
                                "ResourceMonitorService"
                              ]
                            }
                          },
                          "availableClusterVersions": {
                            "type": "array",
                            "description": "The Service Fabric runtime versions available for this cluster.",
                            "readOnly": true,
                            "items": {
                              "type": "object",
                              "properties": {
                                "codeVersion": {
                                  "type": "string",
                                  "description": "The Service Fabric runtime version of the cluster."
                                },
                                "supportExpiryUtc": {
                                  "type": "string",
                                  "description": "The date of expiry of support of the version."
                                },
                                "environment": {
                                  "description": "Indicates if this version is for Windows or Linux operating system.",
                                  "type": "string",
                                  "enum": [
                                    "Windows",
                                    "Linux"
                                  ]
                                }
                              },
                              "description": "The detail of the Service Fabric runtime version result"
                            }
                          },
                          "azureActiveDirectory": {
                            "description": "The AAD authentication settings of the cluster.",
                            "type": "object",
                            "properties": {
                              "tenantId": {
                                "type": "string",
                                "description": "Azure active directory tenant id."
                              },
                              "clusterApplication": {
                                "type": "string",
                                "description": "Azure active directory cluster application id."
                              },
                              "clientApplication": {
                                "type": "string",
                                "description": "Azure active directory client application id."
                              }
                            }
                          },
                          "certificate": {
                            "description": "The certificate to use for securing the cluster. The certificate provided will be used for node to node security within the cluster, SSL certificate for cluster management endpoint and default admin client.",
                            "type": "object",
                            "required": [
                              "thumbprint"
                            ],
                            "properties": {
                              "thumbprint": {
                                "type": "string",
                                "description": "Thumbprint of the primary certificate."
                              },
                              "thumbprintSecondary": {
                                "type": "string",
                                "description": "Thumbprint of the secondary certificate."
                              },
                              "x509StoreName": {
                                "type": "string",
                                "description": "The local certificate store location.",
                                "enum": [
                                  "AddressBook",
                                  "AuthRoot",
                                  "CertificateAuthority",
                                  "Disallowed",
                                  "My",
                                  "Root",
                                  "TrustedPeople",
                                  "TrustedPublisher"
                                ]
                              }
                            }
                          },
                          "certificateCommonNames": {
                            "type": "object",
                            "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
                            "properties": {
                              "commonNames": {
                                "type": "array",
                                "description": "The list of server certificates referenced by common name that are used to secure the cluster.",
                                "items": {
                                  "type": "object",
                                  "description": "Describes the server certificate details using common name.",
                                  "required": [
                                    "certificateCommonName",
                                    "certificateIssuerThumbprint"
                                  ],
                                  "properties": {
                                    "certificateCommonName": {
                                      "type": "string",
                                      "description": "The common name of the server certificate."
                                    },
                                    "certificateIssuerThumbprint": {
                                      "type": "string",
                                      "description": "The issuer thumbprint of the server certificate."
                                    }
                                  }
                                }
                              },
                              "x509StoreName": {
                                "type": "string",
                                "description": "The local certificate store location.",
                                "enum": [
                                  "AddressBook",
                                  "AuthRoot",
                                  "CertificateAuthority",
                                  "Disallowed",
                                  "My",
                                  "Root",
                                  "TrustedPeople",
                                  "TrustedPublisher"
                                ]
                              }
                            }
                          },
                          "clientCertificateCommonNames": {
                            "type": "array",
                            "description": "The list of client certificates referenced by common name that are allowed to manage the cluster.",
                            "items": {
                              "type": "object",
                              "required": [
                                "certificateCommonName",
                                "isAdmin",
                                "certificateIssuerThumbprint"
                              ],
                              "properties": {
                                "isAdmin": {
                                  "type": "boolean",
                                  "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                                },
                                "certificateCommonName": {
                                  "type": "string",
                                  "description": "The common name of the client certificate."
                                },
                                "certificateIssuerThumbprint": {
                                  "type": "string",
                                  "description": "The issuer thumbprint of the client certificate."
                                }
                              },
                              "description": "Describes the client certificate details using common name."
                            }
                          },
                          "clientCertificateThumbprints": {
                            "type": "array",
                            "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster.",
                            "items": {
                              "type": "object",
                              "required": [
                                "certificateThumbprint",
                                "isAdmin"
                              ],
                              "properties": {
                                "isAdmin": {
                                  "type": "boolean",
                                  "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                                },
                                "certificateThumbprint": {
                                  "type": "string",
                                  "description": "The thumbprint of the client certificate."
                                }
                              },
                              "description": "Describes the client certificate details using thumbprint."
                            }
                          },
                          "clusterCodeVersion": {
                            "type": "string",
                            "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](https://learn.microsoft.com/rest/api/servicefabric/cluster-versions/list). To get the list of available version for existing clusters use **availableClusterVersions**."
                          },
                          "clusterEndpoint": {
                            "type": "string",
                            "description": "The Azure Resource Provider endpoint. A system service in the cluster connects to this  endpoint.",
                            "readOnly": true
                          },
                          "clusterId": {
                            "type": "string",
                            "description": "A service generated unique identifier for the cluster resource.",
                            "readOnly": true
                          },
                          "clusterState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The current state of the cluster.\n\n  - WaitingForNodes - Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it.\n  - Deploying - Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up.\n  - BaselineUpgrade - Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time.\n  - UpdatingUserConfiguration - Indicates that the cluster is being upgraded with the user provided configuration.\n  - UpdatingUserCertificate - Indicates that the cluster is being upgraded with the user provided certificate.\n  - UpdatingInfrastructure - Indicates that the cluster is being upgraded with the latest Service Fabric runtime version. This happens only when the **upgradeMode** is set to 'Automatic'.\n  - EnforcingClusterVersion - Indicates that cluster is on a different version than expected and the cluster is being upgraded to the expected version.\n  - UpgradeServiceUnreachable - Indicates that the system service in the cluster is no longer polling the Resource Provider. Clusters in this state cannot be managed by the Resource Provider.\n  - AutoScale - Indicates that the ReliabilityLevel of the cluster is being adjusted.\n  - Ready - Indicates that the cluster is in a stable state.\n",
                            "enum": [
                              "WaitingForNodes",
                              "Deploying",
                              "BaselineUpgrade",
                              "UpdatingUserConfiguration",
                              "UpdatingUserCertificate",
                              "UpdatingInfrastructure",
                              "EnforcingClusterVersion",
                              "UpgradeServiceUnreachable",
                              "AutoScale",
                              "Ready"
                            ]
                          },
                          "diagnosticsStorageAccountConfig": {
                            "description": "The storage account information for storing Service Fabric diagnostic logs.",
                            "type": "object",
                            "required": [
                              "blobEndpoint",
                              "protectedAccountKeyName",
                              "queueEndpoint",
                              "storageAccountName",
                              "tableEndpoint"
                            ],
                            "properties": {
                              "storageAccountName": {
                                "type": "string",
                                "description": "The Azure storage account name."
                              },
                              "protectedAccountKeyName": {
                                "type": "string",
                                "description": "The protected diagnostics storage key name."
                              },
                              "protectedAccountKeyName2": {
                                "type": "string",
                                "description": "The secondary protected diagnostics storage key name. If one of the storage account keys is rotated the cluster will fallback to using the other."
                              },
                              "blobEndpoint": {
                                "type": "string",
                                "description": "The blob endpoint of the azure storage account."
                              },
                              "queueEndpoint": {
                                "type": "string",
                                "description": "The queue endpoint of the azure storage account."
                              },
                              "tableEndpoint": {
                                "type": "string",
                                "description": "The table endpoint of the azure storage account."
                              }
                            }
                          },
                          "eventStoreServiceEnabled": {
                            "type": "boolean",
                            "description": "Indicates if the event store service is enabled."
                          },
                          "fabricSettings": {
                            "type": "array",
                            "description": "The list of custom fabric settings to configure the cluster.",
                            "items": {
                              "type": "object",
                              "required": [
                                "name",
                                "parameters"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The section name of the fabric settings."
                                },
                                "parameters": {
                                  "type": "array",
                                  "description": "The collection of parameters in the section.",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "value"
                                    ],
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The parameter name of fabric setting."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "The parameter value of fabric setting."
                                      }
                                    },
                                    "description": "Describes a parameter in fabric settings of the cluster."
                                  }
                                }
                              },
                              "description": "Describes a section in the fabric settings of the cluster."
                            }
                          },
                          "managementEndpoint": {
                            "type": "string",
                            "description": "The http management endpoint of the cluster."
                          },
                          "nodeTypes": {
                            "type": "array",
                            "description": "The list of node types in the cluster.",
                            "items": {
                              "type": "object",
                              "required": [
                                "clientConnectionEndpointPort",
                                "httpGatewayEndpointPort",
                                "isPrimary",
                                "name",
                                "vmInstanceCount"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the node type."
                                },
                                "placementProperties": {
                                  "type": "object",
                                  "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
                                  "additionalProperties": {
                                    "type": "string",
                                    "description": "Placement tag value"
                                  }
                                },
                                "capacities": {
                                  "type": "object",
                                  "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
                                  "additionalProperties": {
                                    "type": "string",
                                    "description": "Capacity tag value"
                                  }
                                },
                                "clientConnectionEndpointPort": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The TCP cluster management endpoint port."
                                },
                                "httpGatewayEndpointPort": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The HTTP cluster management endpoint port."
                                },
                                "durabilityLevel": {
                                  "type": "string",
                                  "description": "The durability level of the node type. Learn about [DurabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - Bronze - No privileges. This is the default.\n  - Silver - The infrastructure jobs can be paused for a duration of 10 minutes per UD.\n  - Gold - The infrastructure jobs can be paused for a duration of 2 hours per UD. Gold durability can be enabled only on full node VM skus like D15_V2, G5 etc.\n",
                                  "enum": [
                                    "Bronze",
                                    "Silver",
                                    "Gold"
                                  ]
                                },
                                "applicationPorts": {
                                  "description": "The range of ports from which cluster assigned port to Service Fabric applications.",
                                  "type": "object",
                                  "required": [
                                    "endPort",
                                    "startPort"
                                  ],
                                  "properties": {
                                    "startPort": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Starting port of a range of ports"
                                    },
                                    "endPort": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "End port of a range of ports"
                                    }
                                  }
                                },
                                "ephemeralPorts": {
                                  "description": "The range of ephemeral ports that nodes in this node type should be configured with.",
                                  "type": "object",
                                  "required": [
                                    "endPort",
                                    "startPort"
                                  ],
                                  "properties": {
                                    "startPort": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Starting port of a range of ports"
                                    },
                                    "endPort": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "End port of a range of ports"
                                    }
                                  }
                                },
                                "isPrimary": {
                                  "type": "boolean",
                                  "description": "The node type on which system services will run. Only one node type should be marked as primary. Primary node type cannot be deleted or changed for existing clusters."
                                },
                                "vmInstanceCount": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "VMInstanceCount should be 1 to n, where n indicates the number of VM instances corresponding to this nodeType. VMInstanceCount = 0 can be done only in these scenarios: NodeType is a secondary nodeType. Durability = Bronze or Durability >= Bronze and InfrastructureServiceManager = true. If VMInstanceCount = 0, implies the VMs for this nodeType will not be used for the initial cluster size computation.",
                                  "minimum": 0,
                                  "maximum": 2147483647
                                },
                                "reverseProxyEndpointPort": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The endpoint used by reverse proxy."
                                },
                                "isStateless": {
                                  "type": "boolean",
                                  "description": "Indicates if the node type can only host Stateless workloads."
                                },
                                "multipleAvailabilityZones": {
                                  "type": "boolean",
                                  "description": "Indicates if the node type is enabled to support multiple zones."
                                }
                              },
                              "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
                            }
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "The provisioning state of the cluster resource.",
                            "readOnly": true,
                            "enum": [
                              "Updating",
                              "Succeeded",
                              "Failed",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "reliabilityLevel": {
                            "type": "string",
                            "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n",
                            "enum": [
                              "None",
                              "Bronze",
                              "Silver",
                              "Gold",
                              "Platinum"
                            ]
                          },
                          "reverseProxyCertificate": {
                            "description": "The server certificate used by reverse proxy.",
                            "type": "object",
                            "required": [
                              "thumbprint"
                            ],
                            "properties": {
                              "thumbprint": {
                                "type": "string",
                                "description": "Thumbprint of the primary certificate."
                              },
                              "thumbprintSecondary": {
                                "type": "string",
                                "description": "Thumbprint of the secondary certificate."
                              },
                              "x509StoreName": {
                                "type": "string",
                                "description": "The local certificate store location.",
                                "enum": [
                                  "AddressBook",
                                  "AuthRoot",
                                  "CertificateAuthority",
                                  "Disallowed",
                                  "My",
                                  "Root",
                                  "TrustedPeople",
                                  "TrustedPublisher"
                                ]
                              }
                            }
                          },
                          "reverseProxyCertificateCommonNames": {
                            "type": "object",
                            "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
                            "properties": {
                              "commonNames": {
                                "type": "array",
                                "description": "The list of server certificates referenced by common name that are used to secure the cluster.",
                                "items": {
                                  "type": "object",
                                  "description": "Describes the server certificate details using common name.",
                                  "required": [
                                    "certificateCommonName",
                                    "certificateIssuerThumbprint"
                                  ],
                                  "properties": {
                                    "certificateCommonName": {
                                      "type": "string",
                                      "description": "The common name of the server certificate."
                                    },
                                    "certificateIssuerThumbprint": {
                                      "type": "string",
                                      "description": "The issuer thumbprint of the server certificate."
                                    }
                                  }
                                }
                              },
                              "x509StoreName": {
                                "type": "string",
                                "description": "The local certificate store location.",
                                "enum": [
                                  "AddressBook",
                                  "AuthRoot",
                                  "CertificateAuthority",
                                  "Disallowed",
                                  "My",
                                  "Root",
                                  "TrustedPeople",
                                  "TrustedPublisher"
                                ]
                              }
                            }
                          },
                          "upgradeDescription": {
                            "description": "The policy to use when upgrading the cluster.",
                            "type": "object",
                            "required": [
                              "healthCheckRetryTimeout",
                              "healthCheckStableDuration",
                              "healthCheckWaitDuration",
                              "healthPolicy",
                              "upgradeDomainTimeout",
                              "upgradeReplicaSetCheckTimeout",
                              "upgradeTimeout"
                            ],
                            "properties": {
                              "forceRestart": {
                                "type": "boolean",
                                "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data)."
                              },
                              "upgradeReplicaSetCheckTimeout": {
                                "type": "string",
                                "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                              },
                              "healthCheckWaitDuration": {
                                "type": "string",
                                "description": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                              },
                              "healthCheckStableDuration": {
                                "type": "string",
                                "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                              },
                              "healthCheckRetryTimeout": {
                                "type": "string",
                                "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                              },
                              "upgradeTimeout": {
                                "type": "string",
                                "description": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                              },
                              "upgradeDomainTimeout": {
                                "type": "string",
                                "description": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                              },
                              "healthPolicy": {
                                "description": "The cluster health policy used when upgrading the cluster.",
                                "type": "object",
                                "properties": {
                                  "maxPercentUnhealthyNodes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.\n",
                                    "default": 0,
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentUnhealthyApplications": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.\nThe computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.\n",
                                    "default": 0,
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "applicationHealthPolicies": {
                                    "description": "Defines the application health policy map used to evaluate the health of an application or one of its children entities.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object",
                                      "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
                                      "properties": {
                                        "defaultServiceTypeHealthPolicy": {
                                          "description": "The health policy used by default to evaluate the health of a service type.",
                                          "type": "object",
                                          "properties": {
                                            "maxPercentUnhealthyServices": {
                                              "type": "integer",
                                              "format": "int32",
                                              "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                              "default": 0,
                                              "minimum": 0,
                                              "maximum": 100
                                            }
                                          }
                                        },
                                        "serviceTypeHealthPolicies": {
                                          "description": "The map with service type health policy per service type name. The map is empty by default.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "object",
                                            "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                                            "properties": {
                                              "maxPercentUnhealthyServices": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                                "default": 0,
                                                "minimum": 0,
                                                "maximum": 100
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "deltaHealthPolicy": {
                                "description": "The cluster delta health policy used when upgrading the cluster.",
                                "type": "object",
                                "required": [
                                  "maxPercentDeltaUnhealthyApplications",
                                  "maxPercentDeltaUnhealthyNodes",
                                  "maxPercentUpgradeDomainDeltaUnhealthyNodes"
                                ],
                                "properties": {
                                  "maxPercentDeltaUnhealthyNodes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentDeltaUnhealthyApplications": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "applicationDeltaHealthPolicies": {
                                    "description": "Defines the application delta health policy map used to evaluate the health of an application or one of its child entities when upgrading the cluster.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object",
                                      "description": "Defines a delta health policy used to evaluate the health of an application or one of its child entities when upgrading the cluster.\n",
                                      "properties": {
                                        "defaultServiceTypeDeltaHealthPolicy": {
                                          "description": "The delta health policy used by default to evaluate the health of a service type when upgrading the cluster.",
                                          "type": "object",
                                          "properties": {
                                            "maxPercentDeltaUnhealthyServices": {
                                              "type": "integer",
                                              "format": "int32",
                                              "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                                              "default": 0,
                                              "minimum": 0,
                                              "maximum": 100
                                            }
                                          }
                                        },
                                        "serviceTypeDeltaHealthPolicies": {
                                          "description": "The map with service type delta health policy per service type name. The map is empty by default.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "object",
                                            "description": "Represents the delta health policy used to evaluate the health of services belonging to a service type when upgrading the cluster.\n",
                                            "properties": {
                                              "maxPercentDeltaUnhealthyServices": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                                                "default": 0,
                                                "minimum": 0,
                                                "maximum": 100
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "upgradeMode": {
                            "type": "string",
                            "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.",
                            "enum": [
                              "Automatic",
                              "Manual"
                            ],
                            "default": "Automatic",
                            "x-ms-enum": {
                              "name": "UpgradeMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Automatic",
                                  "description": "The cluster will be automatically upgraded to the latest Service Fabric runtime version, **upgradeWave** will determine when the upgrade starts after the new version becomes available."
                                },
                                {
                                  "value": "Manual",
                                  "description": "The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource."
                                }
                              ]
                            }
                          },
                          "applicationTypeVersionsCleanupPolicy": {
                            "description": "The policy used to clean up unused versions.",
                            "type": "object",
                            "required": [
                              "maxUnusedVersionsToKeep"
                            ],
                            "properties": {
                              "maxUnusedVersionsToKeep": {
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "description": "Number of unused versions per application type to keep."
                              }
                            }
                          },
                          "vmImage": {
                            "type": "string",
                            "description": "The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used."
                          },
                          "sfZonalUpgradeMode": {
                            "type": "string",
                            "enum": [
                              "Parallel",
                              "Hierarchical"
                            ],
                            "x-ms-enum": {
                              "name": "sfZonalUpgradeMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Parallel",
                                  "description": "VMs under the node type are grouped into UDs and ignore the zone info in five UDs. This setting causes UDs across all zones to be upgraded at the same time. This deployment mode is faster for upgrades, we don't recommend it because it goes against the SDP guidelines, which state that the updates should be applied to one zone at a time."
                                },
                                {
                                  "value": "Hierarchical",
                                  "description": "If this value is omitted or set to Hierarchical, VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone. This update process is safer for the cluster and the user application."
                                }
                              ]
                            },
                            "description": "This property controls the logical grouping of VMs in upgrade domains (UDs). This property can't be modified if a node type with multiple Availability Zones is already present in the cluster."
                          },
                          "vmssZonalUpgradeMode": {
                            "type": "string",
                            "enum": [
                              "Parallel",
                              "Hierarchical"
                            ],
                            "x-ms-enum": {
                              "name": "vmssZonalUpgradeMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Parallel",
                                  "description": "Updates will happen in all Availability Zones at once for the virtual machine scale sets."
                                },
                                {
                                  "value": "Hierarchical",
                                  "description": "VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone."
                                }
                              ]
                            },
                            "description": "This property defines the upgrade mode for the virtual machine scale set, it is mandatory if a node type with multiple Availability Zones is added."
                          },
                          "infrastructureServiceManager": {
                            "type": "boolean",
                            "description": "Indicates if infrastructure service manager is enabled."
                          },
                          "upgradeWave": {
                            "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **upgradeMode** is set to 'Automatic'.",
                            "type": "string",
                            "enum": [
                              "Wave0",
                              "Wave1",
                              "Wave2"
                            ],
                            "x-ms-enum": {
                              "name": "clusterUpgradeCadence",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Wave0",
                                  "description": "Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters."
                                },
                                {
                                  "value": "Wave1",
                                  "description": "Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters."
                                },
                                {
                                  "value": "Wave2",
                                  "description": "Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters."
                                }
                              ]
                            }
                          },
                          "upgradePauseStartTimestampUtc": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Indicates the start date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC)."
                          },
                          "upgradePauseEndTimestampUtc": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Indicates the end date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC)."
                          },
                          "waveUpgradePaused": {
                            "type": "boolean",
                            "description": "Boolean to pause automatic runtime version upgrades to the cluster."
                          },
                          "notifications": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "isEnabled",
                                "notificationCategory",
                                "notificationLevel",
                                "notificationTargets"
                              ],
                              "properties": {
                                "isEnabled": {
                                  "type": "boolean",
                                  "description": "Indicates if the notification is enabled."
                                },
                                "notificationCategory": {
                                  "type": "string",
                                  "description": "The category of notification.",
                                  "enum": [
                                    "WaveProgress"
                                  ],
                                  "x-ms-enum": {
                                    "name": "notificationCategory",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "WaveProgress",
                                        "description": "Notification will be regarding wave progress."
                                      }
                                    ]
                                  }
                                },
                                "notificationLevel": {
                                  "type": "string",
                                  "description": "The level of notification.",
                                  "enum": [
                                    "Critical",
                                    "All"
                                  ],
                                  "x-ms-enum": {
                                    "name": "notificationLevel",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "Critical",
                                        "description": "Receive only critical notifications."
                                      },
                                      {
                                        "value": "All",
                                        "description": "Receive all notifications."
                                      }
                                    ]
                                  }
                                },
                                "notificationTargets": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "notificationChannel",
                                      "receivers"
                                    ],
                                    "properties": {
                                      "notificationChannel": {
                                        "type": "string",
                                        "description": "The notification channel indicates the type of receivers subscribed to the notification, either user or subscription.",
                                        "enum": [
                                          "EmailUser",
                                          "EmailSubscription"
                                        ],
                                        "x-ms-enum": {
                                          "name": "notificationChannel",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "value": "EmailUser",
                                              "description": "For email user receivers. In this case, the parameter receivers should be a list of email addresses that will receive the notifications."
                                            },
                                            {
                                              "value": "EmailSubscription",
                                              "description": "For subscription receivers. In this case, the parameter receivers should be a list of roles of the subscription for the cluster (eg. Owner, AccountAdmin, etc) that will receive the notifications."
                                            }
                                          ]
                                        }
                                      },
                                      "receivers": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "description": "List of targets that subscribe to the notification."
                                      }
                                    },
                                    "description": "Describes the notification target properties."
                                  },
                                  "description": "List of targets that subscribe to the notification."
                                }
                              },
                              "description": "Describes the notification channel for cluster events."
                            },
                            "description": "Indicates a list of notification channels for cluster events."
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to use for getting the next set of results."
                }
              },
              "description": "Cluster list results"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/clusters": {
      "get": {
        "operationId": "Clusters_List",
        "summary": "Gets the list of Service Fabric cluster resources created in the specified subscription.",
        "description": "Gets all Service Fabric cluster resources created or in the process of being created in the subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2021-06-01\" for this specification.",
            "required": true,
            "type": "string",
            "enum": [
              "2021-06-01"
            ],
            "default": "2021-06-01",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "tags": [
          "Cluster"
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "The cluster resource\n",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Azure resource identifier.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "Azure resource name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "Azure resource type.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "Azure resource location.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "description": "Azure resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "etag": {
                        "type": "string",
                        "description": "Azure resource etag.",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource."
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource."
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)."
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The cluster resource properties",
                        "type": "object",
                        "required": [
                          "managementEndpoint",
                          "nodeTypes"
                        ],
                        "properties": {
                          "addOnFeatures": {
                            "type": "array",
                            "description": "The list of add-on features to enable in the cluster.",
                            "items": {
                              "type": "string",
                              "description": "Available cluster add-on features",
                              "enum": [
                                "RepairManager",
                                "DnsService",
                                "BackupRestoreService",
                                "ResourceMonitorService"
                              ]
                            }
                          },
                          "availableClusterVersions": {
                            "type": "array",
                            "description": "The Service Fabric runtime versions available for this cluster.",
                            "readOnly": true,
                            "items": {
                              "type": "object",
                              "properties": {
                                "codeVersion": {
                                  "type": "string",
                                  "description": "The Service Fabric runtime version of the cluster."
                                },
                                "supportExpiryUtc": {
                                  "type": "string",
                                  "description": "The date of expiry of support of the version."
                                },
                                "environment": {
                                  "description": "Indicates if this version is for Windows or Linux operating system.",
                                  "type": "string",
                                  "enum": [
                                    "Windows",
                                    "Linux"
                                  ]
                                }
                              },
                              "description": "The detail of the Service Fabric runtime version result"
                            }
                          },
                          "azureActiveDirectory": {
                            "description": "The AAD authentication settings of the cluster.",
                            "type": "object",
                            "properties": {
                              "tenantId": {
                                "type": "string",
                                "description": "Azure active directory tenant id."
                              },
                              "clusterApplication": {
                                "type": "string",
                                "description": "Azure active directory cluster application id."
                              },
                              "clientApplication": {
                                "type": "string",
                                "description": "Azure active directory client application id."
                              }
                            }
                          },
                          "certificate": {
                            "description": "The certificate to use for securing the cluster. The certificate provided will be used for node to node security within the cluster, SSL certificate for cluster management endpoint and default admin client.",
                            "type": "object",
                            "required": [
                              "thumbprint"
                            ],
                            "properties": {
                              "thumbprint": {
                                "type": "string",
                                "description": "Thumbprint of the primary certificate."
                              },
                              "thumbprintSecondary": {
                                "type": "string",
                                "description": "Thumbprint of the secondary certificate."
                              },
                              "x509StoreName": {
                                "type": "string",
                                "description": "The local certificate store location.",
                                "enum": [
                                  "AddressBook",
                                  "AuthRoot",
                                  "CertificateAuthority",
                                  "Disallowed",
                                  "My",
                                  "Root",
                                  "TrustedPeople",
                                  "TrustedPublisher"
                                ]
                              }
                            }
                          },
                          "certificateCommonNames": {
                            "type": "object",
                            "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
                            "properties": {
                              "commonNames": {
                                "type": "array",
                                "description": "The list of server certificates referenced by common name that are used to secure the cluster.",
                                "items": {
                                  "type": "object",
                                  "description": "Describes the server certificate details using common name.",
                                  "required": [
                                    "certificateCommonName",
                                    "certificateIssuerThumbprint"
                                  ],
                                  "properties": {
                                    "certificateCommonName": {
                                      "type": "string",
                                      "description": "The common name of the server certificate."
                                    },
                                    "certificateIssuerThumbprint": {
                                      "type": "string",
                                      "description": "The issuer thumbprint of the server certificate."
                                    }
                                  }
                                }
                              },
                              "x509StoreName": {
                                "type": "string",
                                "description": "The local certificate store location.",
                                "enum": [
                                  "AddressBook",
                                  "AuthRoot",
                                  "CertificateAuthority",
                                  "Disallowed",
                                  "My",
                                  "Root",
                                  "TrustedPeople",
                                  "TrustedPublisher"
                                ]
                              }
                            }
                          },
                          "clientCertificateCommonNames": {
                            "type": "array",
                            "description": "The list of client certificates referenced by common name that are allowed to manage the cluster.",
                            "items": {
                              "type": "object",
                              "required": [
                                "certificateCommonName",
                                "isAdmin",
                                "certificateIssuerThumbprint"
                              ],
                              "properties": {
                                "isAdmin": {
                                  "type": "boolean",
                                  "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                                },
                                "certificateCommonName": {
                                  "type": "string",
                                  "description": "The common name of the client certificate."
                                },
                                "certificateIssuerThumbprint": {
                                  "type": "string",
                                  "description": "The issuer thumbprint of the client certificate."
                                }
                              },
                              "description": "Describes the client certificate details using common name."
                            }
                          },
                          "clientCertificateThumbprints": {
                            "type": "array",
                            "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster.",
                            "items": {
                              "type": "object",
                              "required": [
                                "certificateThumbprint",
                                "isAdmin"
                              ],
                              "properties": {
                                "isAdmin": {
                                  "type": "boolean",
                                  "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                                },
                                "certificateThumbprint": {
                                  "type": "string",
                                  "description": "The thumbprint of the client certificate."
                                }
                              },
                              "description": "Describes the client certificate details using thumbprint."
                            }
                          },
                          "clusterCodeVersion": {
                            "type": "string",
                            "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](https://learn.microsoft.com/rest/api/servicefabric/cluster-versions/list). To get the list of available version for existing clusters use **availableClusterVersions**."
                          },
                          "clusterEndpoint": {
                            "type": "string",
                            "description": "The Azure Resource Provider endpoint. A system service in the cluster connects to this  endpoint.",
                            "readOnly": true
                          },
                          "clusterId": {
                            "type": "string",
                            "description": "A service generated unique identifier for the cluster resource.",
                            "readOnly": true
                          },
                          "clusterState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The current state of the cluster.\n\n  - WaitingForNodes - Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it.\n  - Deploying - Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up.\n  - BaselineUpgrade - Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time.\n  - UpdatingUserConfiguration - Indicates that the cluster is being upgraded with the user provided configuration.\n  - UpdatingUserCertificate - Indicates that the cluster is being upgraded with the user provided certificate.\n  - UpdatingInfrastructure - Indicates that the cluster is being upgraded with the latest Service Fabric runtime version. This happens only when the **upgradeMode** is set to 'Automatic'.\n  - EnforcingClusterVersion - Indicates that cluster is on a different version than expected and the cluster is being upgraded to the expected version.\n  - UpgradeServiceUnreachable - Indicates that the system service in the cluster is no longer polling the Resource Provider. Clusters in this state cannot be managed by the Resource Provider.\n  - AutoScale - Indicates that the ReliabilityLevel of the cluster is being adjusted.\n  - Ready - Indicates that the cluster is in a stable state.\n",
                            "enum": [
                              "WaitingForNodes",
                              "Deploying",
                              "BaselineUpgrade",
                              "UpdatingUserConfiguration",
                              "UpdatingUserCertificate",
                              "UpdatingInfrastructure",
                              "EnforcingClusterVersion",
                              "UpgradeServiceUnreachable",
                              "AutoScale",
                              "Ready"
                            ]
                          },
                          "diagnosticsStorageAccountConfig": {
                            "description": "The storage account information for storing Service Fabric diagnostic logs.",
                            "type": "object",
                            "required": [
                              "blobEndpoint",
                              "protectedAccountKeyName",
                              "queueEndpoint",
                              "storageAccountName",
                              "tableEndpoint"
                            ],
                            "properties": {
                              "storageAccountName": {
                                "type": "string",
                                "description": "The Azure storage account name."
                              },
                              "protectedAccountKeyName": {
                                "type": "string",
                                "description": "The protected diagnostics storage key name."
                              },
                              "protectedAccountKeyName2": {
                                "type": "string",
                                "description": "The secondary protected diagnostics storage key name. If one of the storage account keys is rotated the cluster will fallback to using the other."
                              },
                              "blobEndpoint": {
                                "type": "string",
                                "description": "The blob endpoint of the azure storage account."
                              },
                              "queueEndpoint": {
                                "type": "string",
                                "description": "The queue endpoint of the azure storage account."
                              },
                              "tableEndpoint": {
                                "type": "string",
                                "description": "The table endpoint of the azure storage account."
                              }
                            }
                          },
                          "eventStoreServiceEnabled": {
                            "type": "boolean",
                            "description": "Indicates if the event store service is enabled."
                          },
                          "fabricSettings": {
                            "type": "array",
                            "description": "The list of custom fabric settings to configure the cluster.",
                            "items": {
                              "type": "object",
                              "required": [
                                "name",
                                "parameters"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The section name of the fabric settings."
                                },
                                "parameters": {
                                  "type": "array",
                                  "description": "The collection of parameters in the section.",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "value"
                                    ],
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The parameter name of fabric setting."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "The parameter value of fabric setting."
                                      }
                                    },
                                    "description": "Describes a parameter in fabric settings of the cluster."
                                  }
                                }
                              },
                              "description": "Describes a section in the fabric settings of the cluster."
                            }
                          },
                          "managementEndpoint": {
                            "type": "string",
                            "description": "The http management endpoint of the cluster."
                          },
                          "nodeTypes": {
                            "type": "array",
                            "description": "The list of node types in the cluster.",
                            "items": {
                              "type": "object",
                              "required": [
                                "clientConnectionEndpointPort",
                                "httpGatewayEndpointPort",
                                "isPrimary",
                                "name",
                                "vmInstanceCount"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the node type."
                                },
                                "placementProperties": {
                                  "type": "object",
                                  "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
                                  "additionalProperties": {
                                    "type": "string",
                                    "description": "Placement tag value"
                                  }
                                },
                                "capacities": {
                                  "type": "object",
                                  "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
                                  "additionalProperties": {
                                    "type": "string",
                                    "description": "Capacity tag value"
                                  }
                                },
                                "clientConnectionEndpointPort": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The TCP cluster management endpoint port."
                                },
                                "httpGatewayEndpointPort": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The HTTP cluster management endpoint port."
                                },
                                "durabilityLevel": {
                                  "type": "string",
                                  "description": "The durability level of the node type. Learn about [DurabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - Bronze - No privileges. This is the default.\n  - Silver - The infrastructure jobs can be paused for a duration of 10 minutes per UD.\n  - Gold - The infrastructure jobs can be paused for a duration of 2 hours per UD. Gold durability can be enabled only on full node VM skus like D15_V2, G5 etc.\n",
                                  "enum": [
                                    "Bronze",
                                    "Silver",
                                    "Gold"
                                  ]
                                },
                                "applicationPorts": {
                                  "description": "The range of ports from which cluster assigned port to Service Fabric applications.",
                                  "type": "object",
                                  "required": [
                                    "endPort",
                                    "startPort"
                                  ],
                                  "properties": {
                                    "startPort": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Starting port of a range of ports"
                                    },
                                    "endPort": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "End port of a range of ports"
                                    }
                                  }
                                },
                                "ephemeralPorts": {
                                  "description": "The range of ephemeral ports that nodes in this node type should be configured with.",
                                  "type": "object",
                                  "required": [
                                    "endPort",
                                    "startPort"
                                  ],
                                  "properties": {
                                    "startPort": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Starting port of a range of ports"
                                    },
                                    "endPort": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "End port of a range of ports"
                                    }
                                  }
                                },
                                "isPrimary": {
                                  "type": "boolean",
                                  "description": "The node type on which system services will run. Only one node type should be marked as primary. Primary node type cannot be deleted or changed for existing clusters."
                                },
                                "vmInstanceCount": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "VMInstanceCount should be 1 to n, where n indicates the number of VM instances corresponding to this nodeType. VMInstanceCount = 0 can be done only in these scenarios: NodeType is a secondary nodeType. Durability = Bronze or Durability >= Bronze and InfrastructureServiceManager = true. If VMInstanceCount = 0, implies the VMs for this nodeType will not be used for the initial cluster size computation.",
                                  "minimum": 0,
                                  "maximum": 2147483647
                                },
                                "reverseProxyEndpointPort": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The endpoint used by reverse proxy."
                                },
                                "isStateless": {
                                  "type": "boolean",
                                  "description": "Indicates if the node type can only host Stateless workloads."
                                },
                                "multipleAvailabilityZones": {
                                  "type": "boolean",
                                  "description": "Indicates if the node type is enabled to support multiple zones."
                                }
                              },
                              "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
                            }
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "The provisioning state of the cluster resource.",
                            "readOnly": true,
                            "enum": [
                              "Updating",
                              "Succeeded",
                              "Failed",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "reliabilityLevel": {
                            "type": "string",
                            "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n",
                            "enum": [
                              "None",
                              "Bronze",
                              "Silver",
                              "Gold",
                              "Platinum"
                            ]
                          },
                          "reverseProxyCertificate": {
                            "description": "The server certificate used by reverse proxy.",
                            "type": "object",
                            "required": [
                              "thumbprint"
                            ],
                            "properties": {
                              "thumbprint": {
                                "type": "string",
                                "description": "Thumbprint of the primary certificate."
                              },
                              "thumbprintSecondary": {
                                "type": "string",
                                "description": "Thumbprint of the secondary certificate."
                              },
                              "x509StoreName": {
                                "type": "string",
                                "description": "The local certificate store location.",
                                "enum": [
                                  "AddressBook",
                                  "AuthRoot",
                                  "CertificateAuthority",
                                  "Disallowed",
                                  "My",
                                  "Root",
                                  "TrustedPeople",
                                  "TrustedPublisher"
                                ]
                              }
                            }
                          },
                          "reverseProxyCertificateCommonNames": {
                            "type": "object",
                            "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
                            "properties": {
                              "commonNames": {
                                "type": "array",
                                "description": "The list of server certificates referenced by common name that are used to secure the cluster.",
                                "items": {
                                  "type": "object",
                                  "description": "Describes the server certificate details using common name.",
                                  "required": [
                                    "certificateCommonName",
                                    "certificateIssuerThumbprint"
                                  ],
                                  "properties": {
                                    "certificateCommonName": {
                                      "type": "string",
                                      "description": "The common name of the server certificate."
                                    },
                                    "certificateIssuerThumbprint": {
                                      "type": "string",
                                      "description": "The issuer thumbprint of the server certificate."
                                    }
                                  }
                                }
                              },
                              "x509StoreName": {
                                "type": "string",
                                "description": "The local certificate store location.",
                                "enum": [
                                  "AddressBook",
                                  "AuthRoot",
                                  "CertificateAuthority",
                                  "Disallowed",
                                  "My",
                                  "Root",
                                  "TrustedPeople",
                                  "TrustedPublisher"
                                ]
                              }
                            }
                          },
                          "upgradeDescription": {
                            "description": "The policy to use when upgrading the cluster.",
                            "type": "object",
                            "required": [
                              "healthCheckRetryTimeout",
                              "healthCheckStableDuration",
                              "healthCheckWaitDuration",
                              "healthPolicy",
                              "upgradeDomainTimeout",
                              "upgradeReplicaSetCheckTimeout",
                              "upgradeTimeout"
                            ],
                            "properties": {
                              "forceRestart": {
                                "type": "boolean",
                                "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data)."
                              },
                              "upgradeReplicaSetCheckTimeout": {
                                "type": "string",
                                "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                              },
                              "healthCheckWaitDuration": {
                                "type": "string",
                                "description": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                              },
                              "healthCheckStableDuration": {
                                "type": "string",
                                "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                              },
                              "healthCheckRetryTimeout": {
                                "type": "string",
                                "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                              },
                              "upgradeTimeout": {
                                "type": "string",
                                "description": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                              },
                              "upgradeDomainTimeout": {
                                "type": "string",
                                "description": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                              },
                              "healthPolicy": {
                                "description": "The cluster health policy used when upgrading the cluster.",
                                "type": "object",
                                "properties": {
                                  "maxPercentUnhealthyNodes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.\n",
                                    "default": 0,
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentUnhealthyApplications": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.\nThe computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.\n",
                                    "default": 0,
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "applicationHealthPolicies": {
                                    "description": "Defines the application health policy map used to evaluate the health of an application or one of its children entities.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object",
                                      "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
                                      "properties": {
                                        "defaultServiceTypeHealthPolicy": {
                                          "description": "The health policy used by default to evaluate the health of a service type.",
                                          "type": "object",
                                          "properties": {
                                            "maxPercentUnhealthyServices": {
                                              "type": "integer",
                                              "format": "int32",
                                              "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                              "default": 0,
                                              "minimum": 0,
                                              "maximum": 100
                                            }
                                          }
                                        },
                                        "serviceTypeHealthPolicies": {
                                          "description": "The map with service type health policy per service type name. The map is empty by default.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "object",
                                            "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                                            "properties": {
                                              "maxPercentUnhealthyServices": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                                "default": 0,
                                                "minimum": 0,
                                                "maximum": 100
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "deltaHealthPolicy": {
                                "description": "The cluster delta health policy used when upgrading the cluster.",
                                "type": "object",
                                "required": [
                                  "maxPercentDeltaUnhealthyApplications",
                                  "maxPercentDeltaUnhealthyNodes",
                                  "maxPercentUpgradeDomainDeltaUnhealthyNodes"
                                ],
                                "properties": {
                                  "maxPercentDeltaUnhealthyNodes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentDeltaUnhealthyApplications": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "applicationDeltaHealthPolicies": {
                                    "description": "Defines the application delta health policy map used to evaluate the health of an application or one of its child entities when upgrading the cluster.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object",
                                      "description": "Defines a delta health policy used to evaluate the health of an application or one of its child entities when upgrading the cluster.\n",
                                      "properties": {
                                        "defaultServiceTypeDeltaHealthPolicy": {
                                          "description": "The delta health policy used by default to evaluate the health of a service type when upgrading the cluster.",
                                          "type": "object",
                                          "properties": {
                                            "maxPercentDeltaUnhealthyServices": {
                                              "type": "integer",
                                              "format": "int32",
                                              "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                                              "default": 0,
                                              "minimum": 0,
                                              "maximum": 100
                                            }
                                          }
                                        },
                                        "serviceTypeDeltaHealthPolicies": {
                                          "description": "The map with service type delta health policy per service type name. The map is empty by default.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "object",
                                            "description": "Represents the delta health policy used to evaluate the health of services belonging to a service type when upgrading the cluster.\n",
                                            "properties": {
                                              "maxPercentDeltaUnhealthyServices": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                                                "default": 0,
                                                "minimum": 0,
                                                "maximum": 100
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "upgradeMode": {
                            "type": "string",
                            "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.",
                            "enum": [
                              "Automatic",
                              "Manual"
                            ],
                            "default": "Automatic",
                            "x-ms-enum": {
                              "name": "UpgradeMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Automatic",
                                  "description": "The cluster will be automatically upgraded to the latest Service Fabric runtime version, **upgradeWave** will determine when the upgrade starts after the new version becomes available."
                                },
                                {
                                  "value": "Manual",
                                  "description": "The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource."
                                }
                              ]
                            }
                          },
                          "applicationTypeVersionsCleanupPolicy": {
                            "description": "The policy used to clean up unused versions.",
                            "type": "object",
                            "required": [
                              "maxUnusedVersionsToKeep"
                            ],
                            "properties": {
                              "maxUnusedVersionsToKeep": {
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0,
                                "description": "Number of unused versions per application type to keep."
                              }
                            }
                          },
                          "vmImage": {
                            "type": "string",
                            "description": "The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used."
                          },
                          "sfZonalUpgradeMode": {
                            "type": "string",
                            "enum": [
                              "Parallel",
                              "Hierarchical"
                            ],
                            "x-ms-enum": {
                              "name": "sfZonalUpgradeMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Parallel",
                                  "description": "VMs under the node type are grouped into UDs and ignore the zone info in five UDs. This setting causes UDs across all zones to be upgraded at the same time. This deployment mode is faster for upgrades, we don't recommend it because it goes against the SDP guidelines, which state that the updates should be applied to one zone at a time."
                                },
                                {
                                  "value": "Hierarchical",
                                  "description": "If this value is omitted or set to Hierarchical, VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone. This update process is safer for the cluster and the user application."
                                }
                              ]
                            },
                            "description": "This property controls the logical grouping of VMs in upgrade domains (UDs). This property can't be modified if a node type with multiple Availability Zones is already present in the cluster."
                          },
                          "vmssZonalUpgradeMode": {
                            "type": "string",
                            "enum": [
                              "Parallel",
                              "Hierarchical"
                            ],
                            "x-ms-enum": {
                              "name": "vmssZonalUpgradeMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Parallel",
                                  "description": "Updates will happen in all Availability Zones at once for the virtual machine scale sets."
                                },
                                {
                                  "value": "Hierarchical",
                                  "description": "VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone."
                                }
                              ]
                            },
                            "description": "This property defines the upgrade mode for the virtual machine scale set, it is mandatory if a node type with multiple Availability Zones is added."
                          },
                          "infrastructureServiceManager": {
                            "type": "boolean",
                            "description": "Indicates if infrastructure service manager is enabled."
                          },
                          "upgradeWave": {
                            "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **upgradeMode** is set to 'Automatic'.",
                            "type": "string",
                            "enum": [
                              "Wave0",
                              "Wave1",
                              "Wave2"
                            ],
                            "x-ms-enum": {
                              "name": "clusterUpgradeCadence",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Wave0",
                                  "description": "Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters."
                                },
                                {
                                  "value": "Wave1",
                                  "description": "Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters."
                                },
                                {
                                  "value": "Wave2",
                                  "description": "Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters."
                                }
                              ]
                            }
                          },
                          "upgradePauseStartTimestampUtc": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Indicates the start date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC)."
                          },
                          "upgradePauseEndTimestampUtc": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Indicates the end date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC)."
                          },
                          "waveUpgradePaused": {
                            "type": "boolean",
                            "description": "Boolean to pause automatic runtime version upgrades to the cluster."
                          },
                          "notifications": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "isEnabled",
                                "notificationCategory",
                                "notificationLevel",
                                "notificationTargets"
                              ],
                              "properties": {
                                "isEnabled": {
                                  "type": "boolean",
                                  "description": "Indicates if the notification is enabled."
                                },
                                "notificationCategory": {
                                  "type": "string",
                                  "description": "The category of notification.",
                                  "enum": [
                                    "WaveProgress"
                                  ],
                                  "x-ms-enum": {
                                    "name": "notificationCategory",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "WaveProgress",
                                        "description": "Notification will be regarding wave progress."
                                      }
                                    ]
                                  }
                                },
                                "notificationLevel": {
                                  "type": "string",
                                  "description": "The level of notification.",
                                  "enum": [
                                    "Critical",
                                    "All"
                                  ],
                                  "x-ms-enum": {
                                    "name": "notificationLevel",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "Critical",
                                        "description": "Receive only critical notifications."
                                      },
                                      {
                                        "value": "All",
                                        "description": "Receive all notifications."
                                      }
                                    ]
                                  }
                                },
                                "notificationTargets": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "notificationChannel",
                                      "receivers"
                                    ],
                                    "properties": {
                                      "notificationChannel": {
                                        "type": "string",
                                        "description": "The notification channel indicates the type of receivers subscribed to the notification, either user or subscription.",
                                        "enum": [
                                          "EmailUser",
                                          "EmailSubscription"
                                        ],
                                        "x-ms-enum": {
                                          "name": "notificationChannel",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "value": "EmailUser",
                                              "description": "For email user receivers. In this case, the parameter receivers should be a list of email addresses that will receive the notifications."
                                            },
                                            {
                                              "value": "EmailSubscription",
                                              "description": "For subscription receivers. In this case, the parameter receivers should be a list of roles of the subscription for the cluster (eg. Owner, AccountAdmin, etc) that will receive the notifications."
                                            }
                                          ]
                                        }
                                      },
                                      "receivers": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "description": "List of targets that subscribe to the notification."
                                      }
                                    },
                                    "description": "Describes the notification target properties."
                                  },
                                  "description": "List of targets that subscribe to the notification."
                                }
                              },
                              "description": "Describes the notification channel for cluster events."
                            },
                            "description": "Indicates a list of notification channels for cluster events."
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to use for getting the next set of results."
                }
              },
              "description": "Cluster list results"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/clusterVersions/{clusterVersion}": {
      "get": {
        "operationId": "ClusterVersions_Get",
        "summary": "Gets information about a Service Fabric cluster code version available in the specified location.",
        "description": "Gets information about an available Service Fabric cluster code version.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "The location for the cluster code versions. This is different from cluster location.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2021-06-01\" for this specification.",
            "required": true,
            "type": "string",
            "enum": [
              "2021-06-01"
            ],
            "default": "2021-06-01",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "clusterVersion",
            "in": "path",
            "description": "The cluster code version.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "tags": [
          "ClusterVersion"
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identification of the result"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the result"
                      },
                      "type": {
                        "type": "string",
                        "description": "The result resource type"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {
                          "codeVersion": {
                            "type": "string",
                            "description": "The Service Fabric runtime version of the cluster."
                          },
                          "supportExpiryUtc": {
                            "type": "string",
                            "description": "The date of expiry of support of the version."
                          },
                          "environment": {
                            "description": "Indicates if this version is for Windows or Linux operating system.",
                            "type": "string",
                            "enum": [
                              "Windows",
                              "Linux"
                            ]
                          }
                        },
                        "description": "The detail of the Service Fabric runtime version result",
                        "x-ms-client-flatten": true
                      }
                    },
                    "description": "The result of the Service Fabric runtime versions"
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to use for getting the next set of results."
                }
              },
              "description": "The list results of the Service Fabric runtime versions."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/clusterVersions/{clusterVersion}": {
      "get": {
        "operationId": "ClusterVersions_GetByEnvironment",
        "summary": "Gets information about a Service Fabric cluster code version available for the specified environment.",
        "description": "Gets information about an available Service Fabric cluster code version by environment.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "The location for the cluster code versions. This is different from cluster location.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environment",
            "in": "path",
            "description": "The operating system of the cluster. The default means all.",
            "required": true,
            "type": "string",
            "enum": [
              "Windows",
              "Linux"
            ],
            "x-ms-enum": {
              "name": "ClusterVersionsEnvironment",
              "modelAsString": true
            },
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2021-06-01\" for this specification.",
            "required": true,
            "type": "string",
            "enum": [
              "2021-06-01"
            ],
            "default": "2021-06-01",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "clusterVersion",
            "in": "path",
            "description": "The cluster code version.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "tags": [
          "ClusterVersion"
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identification of the result"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the result"
                      },
                      "type": {
                        "type": "string",
                        "description": "The result resource type"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {
                          "codeVersion": {
                            "type": "string",
                            "description": "The Service Fabric runtime version of the cluster."
                          },
                          "supportExpiryUtc": {
                            "type": "string",
                            "description": "The date of expiry of support of the version."
                          },
                          "environment": {
                            "description": "Indicates if this version is for Windows or Linux operating system.",
                            "type": "string",
                            "enum": [
                              "Windows",
                              "Linux"
                            ]
                          }
                        },
                        "description": "The detail of the Service Fabric runtime version result",
                        "x-ms-client-flatten": true
                      }
                    },
                    "description": "The result of the Service Fabric runtime versions"
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to use for getting the next set of results."
                }
              },
              "description": "The list results of the Service Fabric runtime versions."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/clusterVersions": {
      "get": {
        "operationId": "ClusterVersions_List",
        "summary": "Gets the list of Service Fabric cluster code versions available for the specified location.",
        "description": "Gets all available code versions for Service Fabric cluster resources by location.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "The location for the cluster code versions. This is different from cluster location.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2021-06-01\" for this specification.",
            "required": true,
            "type": "string",
            "enum": [
              "2021-06-01"
            ],
            "default": "2021-06-01",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "tags": [
          "ClusterVersion"
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identification of the result"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the result"
                      },
                      "type": {
                        "type": "string",
                        "description": "The result resource type"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {
                          "codeVersion": {
                            "type": "string",
                            "description": "The Service Fabric runtime version of the cluster."
                          },
                          "supportExpiryUtc": {
                            "type": "string",
                            "description": "The date of expiry of support of the version."
                          },
                          "environment": {
                            "description": "Indicates if this version is for Windows or Linux operating system.",
                            "type": "string",
                            "enum": [
                              "Windows",
                              "Linux"
                            ]
                          }
                        },
                        "description": "The detail of the Service Fabric runtime version result",
                        "x-ms-client-flatten": true
                      }
                    },
                    "description": "The result of the Service Fabric runtime versions"
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to use for getting the next set of results."
                }
              },
              "description": "The list results of the Service Fabric runtime versions."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/clusterVersions": {
      "get": {
        "operationId": "ClusterVersions_ListByEnvironment",
        "summary": "Gets the list of Service Fabric cluster code versions available for the specified environment.",
        "description": "Gets all available code versions for Service Fabric cluster resources by environment.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "The location for the cluster code versions. This is different from cluster location.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environment",
            "in": "path",
            "description": "The operating system of the cluster. The default means all.",
            "required": true,
            "type": "string",
            "enum": [
              "Windows",
              "Linux"
            ],
            "x-ms-enum": {
              "name": "ClusterVersionsEnvironment",
              "modelAsString": true
            },
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2021-06-01\" for this specification.",
            "required": true,
            "type": "string",
            "enum": [
              "2021-06-01"
            ],
            "default": "2021-06-01",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "tags": [
          "ClusterVersion"
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identification of the result"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the result"
                      },
                      "type": {
                        "type": "string",
                        "description": "The result resource type"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {
                          "codeVersion": {
                            "type": "string",
                            "description": "The Service Fabric runtime version of the cluster."
                          },
                          "supportExpiryUtc": {
                            "type": "string",
                            "description": "The date of expiry of support of the version."
                          },
                          "environment": {
                            "description": "Indicates if this version is for Windows or Linux operating system.",
                            "type": "string",
                            "enum": [
                              "Windows",
                              "Linux"
                            ]
                          }
                        },
                        "description": "The detail of the Service Fabric runtime version result",
                        "x-ms-client-flatten": true
                      }
                    },
                    "description": "The result of the Service Fabric runtime versions"
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to use for getting the next set of results."
                }
              },
              "description": "The list results of the Service Fabric runtime versions."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/listUpgradableVersions": {
      "post": {
        "operationId": "Clusters_ListUpgradableVersions",
        "summary": "Operation to get the minimum and maximum upgradable version from the current cluster version, or the required path to get to the an specific target version.",
        "description": "If a target is not provided, it will get the minimum and maximum versions available from the current cluster version. If a target is given, it will provide the required path to get from the current cluster version to the target version.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2021-06-01\" for this specification.",
            "required": true,
            "type": "string",
            "enum": [
              "2021-06-01"
            ],
            "default": "2021-06-01",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "versionsDescription",
            "in": "body",
            "description": "The upgrade path description with target version.",
            "schema": {
              "type": "object",
              "required": [
                "targetVersion"
              ],
              "properties": {
                "targetVersion": {
                  "type": "string",
                  "description": "The target code version."
                }
              }
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "tags": [
          "ListUpgradableVersions"
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "supportedPath": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The cluster code version."
                  }
                }
              },
              "description": "The list of intermediate cluster code versions for an upgrade or downgrade. Or minimum and maximum upgradable version if no target was given"
            }
          }
        }
      }
    },
    "/providers/Microsoft.ServiceFabric/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "summary": "Lists all of the available Service Fabric resource provider API operations.",
        "description": "Get the list of available Service Fabric resource provider API operations.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of operations supported by the Service Fabric resource provider.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the operation."
                      },
                      "isDataAction": {
                        "type": "boolean",
                        "description": "Indicates whether the operation is a data action"
                      },
                      "display": {
                        "description": "The object that represents the operation.",
                        "type": "object",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "description": "The name of the provider."
                          },
                          "resource": {
                            "type": "string",
                            "description": "The resource on which the operation is performed"
                          },
                          "operation": {
                            "type": "string",
                            "description": "The operation that can be performed."
                          },
                          "description": {
                            "type": "string",
                            "description": "Operation description"
                          }
                        }
                      },
                      "origin": {
                        "type": "string",
                        "description": "Origin result"
                      },
                      "nextLink": {
                        "type": "string",
                        "description": "The URL to use for getting the next set of results."
                      }
                    },
                    "description": "Available operation list result"
                  },
                  "x-ms-identifiers": []
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of operation list results if there are any.",
                  "readOnly": true
                }
              },
              "description": "Describes the result of the request to list Service Fabric resource provider operations."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedclusters/{clusterName}/applicationTypes/{applicationTypeName}": {
      "get": {
        "tags": [
          "ApplicationType"
        ],
        "operationId": "ApplicationTypes_Get",
        "summary": "Gets a Service Fabric managed application type name resource.",
        "description": "Get a Service Fabric application type name resource created or in the process of being created in the Service Fabric managed cluster resource.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The application type name resource",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "The application type name properties",
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationType"
        ],
        "operationId": "ApplicationTypes_CreateOrUpdate",
        "summary": "Creates or updates a Service Fabric managed application type name resource.",
        "description": "Create or update a Service Fabric managed application type name resource with the specified name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The application type name resource.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The application type name resource",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "The application type name properties",
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response."
                    }
                  }
                }
              }
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The application type name resource",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "The application type name properties",
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ApplicationType"
        ],
        "operationId": "ApplicationTypes_Update",
        "summary": "Updates the tags of an application type resource of a given managed cluster.",
        "description": "Updates the tags of an application type resource of a given managed cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The application type resource updated tags.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "Application type update parameters",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "description": "Application type update request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The application type name resource",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "The application type name properties",
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationType"
        ],
        "operationId": "ApplicationTypes_Delete",
        "summary": "Deletes a Service Fabric managed application type name resource.",
        "description": "Delete a Service Fabric managed application type name resource with the specified name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully."
          },
          "202": {
            "description": "The request was accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "The resource was not found."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedclusters/{clusterName}/applicationTypes": {
      "get": {
        "tags": [
          "ApplicationType"
        ],
        "operationId": "ApplicationTypes_List",
        "summary": "Gets the list of application type name resources created in the specified Service Fabric managed cluster resource.",
        "description": "Gets all application type name resources created or in the process of being created in the Service Fabric managed cluster resource.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The list of application type names.",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "The application type name resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Azure resource identifier.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "Azure resource name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "Azure resource type.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "Resource location depends on the parent resource.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Azure resource tags.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource."
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource."
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)."
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "description": "The application type name properties",
                        "properties": {
                          "provisioningState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The current deployment or provisioning state, which only appears in the response."
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of application type list results if there are any.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedclusters/{clusterName}/applicationTypes/{applicationTypeName}/versions/{version}": {
      "get": {
        "tags": [
          "ApplicationTypeVersion"
        ],
        "operationId": "ApplicationTypeVersions_Get",
        "summary": "Gets a Service Fabric managed application type version resource.",
        "description": "Get a Service Fabric managed application type version resource created or in the process of being created in the Service Fabric managed application type name resource.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The application type version.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "An application type version resource for the specified application type name resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "The properties of the application type version resource.",
                  "required": [
                    "appPackageUrl"
                  ],
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response"
                    },
                    "appPackageUrl": {
                      "type": "string",
                      "description": "The URL to the application package"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationTypeVersion"
        ],
        "operationId": "ApplicationTypeVersions_CreateOrUpdate",
        "summary": "Creates or updates a Service Fabric managed application type version resource.",
        "description": "Create or update a Service Fabric managed application type version resource with the specified name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The application type version.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The application type version resource.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "An application type version resource for the specified application type name resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "The properties of the application type version resource.",
                  "required": [
                    "appPackageUrl"
                  ],
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response"
                    },
                    "appPackageUrl": {
                      "type": "string",
                      "description": "The URL to the application package"
                    }
                  }
                }
              }
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "An application type version resource for the specified application type name resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "The properties of the application type version resource.",
                  "required": [
                    "appPackageUrl"
                  ],
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response"
                    },
                    "appPackageUrl": {
                      "type": "string",
                      "description": "The URL to the application package"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The request was accepted and the operation will complete asynchronously.",
            "schema": {
              "type": "object",
              "description": "An application type version resource for the specified application type name resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "The properties of the application type version resource.",
                  "required": [
                    "appPackageUrl"
                  ],
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response"
                    },
                    "appPackageUrl": {
                      "type": "string",
                      "description": "The URL to the application package"
                    }
                  }
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "description": "The URL to get the status of an ongoing long-running operation.",
                "type": "string"
              },
              "Location": {
                "description": "The URL to get the status of a completed long-running operation.",
                "type": "string"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ApplicationTypeVersion"
        ],
        "operationId": "ApplicationTypeVersions_Update",
        "summary": "Updates the tags of an application type version resource of a given managed cluster.",
        "description": "Updates the tags of an application type version resource of a given managed cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The application type version.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The application type version resource updated tags.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "Application type version update parameters",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "description": "Application type version update request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "An application type version resource for the specified application type name resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "The properties of the application type version resource.",
                  "required": [
                    "appPackageUrl"
                  ],
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response"
                    },
                    "appPackageUrl": {
                      "type": "string",
                      "description": "The URL to the application package"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationTypeVersion"
        ],
        "operationId": "ApplicationTypeVersions_Delete",
        "summary": "Deletes a Service Fabric managed application type version resource.",
        "description": "Delete a Service Fabric managed application type version resource with the specified name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The application type version.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully."
          },
          "202": {
            "description": "The request was accepted and the operation will complete asynchronously.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "The URL to get the status of an ongoing long-running operation.",
                "type": "string"
              },
              "Location": {
                "description": "The URL to get the status of a completed long-running operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The resource was not found."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedclusters/{clusterName}/applicationTypes/{applicationTypeName}/versions": {
      "get": {
        "tags": [
          "ApplicationTypeVersion"
        ],
        "operationId": "ApplicationTypeVersions_ListByApplicationTypes",
        "summary": "Gets the list of application type version resources created in the specified Service Fabric managed application type name resource.",
        "description": "Gets all application type version resources created or in the process of being created in the Service Fabric managed application type name resource.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationTypeName",
            "in": "path",
            "description": "The name of the application type name resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The list of application type version resources for the specified application type name resource.",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "An application type version resource for the specified application type name resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Azure resource identifier.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "Azure resource name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "Azure resource type.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "Resource location depends on the parent resource.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Azure resource tags.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource."
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource."
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)."
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "description": "The properties of the application type version resource.",
                        "required": [
                          "appPackageUrl"
                        ],
                        "properties": {
                          "provisioningState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The current deployment or provisioning state, which only appears in the response"
                          },
                          "appPackageUrl": {
                            "type": "string",
                            "description": "The URL to the application package"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of application type version list results if there are any.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applications/{applicationName}/fetchUpgradeStatus": {
      "post": {
        "tags": [
          "Application"
        ],
        "operationId": "Applications_ReadUpgrade",
        "summary": "Get the status of the latest application upgrade.",
        "description": "Get the status of the latest application upgrade. It will query the cluster to find the status of the latest application upgrade.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "202": {
            "description": "The operation was accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "The URL to get the status of an ongoing long-running operation.",
                "type": "string"
              },
              "Location": {
                "description": "The URL to get the status of a completed long-running operation.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applications/{applicationName}/startRollback": {
      "post": {
        "tags": [
          "Application"
        ],
        "operationId": "Applications_StartRollback",
        "summary": "Send a request to start a rollback of the current application upgrade.",
        "description": "Send a request to start a rollback of the current application upgrade. This will start rolling back the application to the previous version.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "202": {
            "description": "The operation was accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "The URL to get the status of an ongoing long-running operation.",
                "type": "string"
              },
              "Location": {
                "description": "The URL to get the status of a completed long-running operation.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applications/{applicationName}/resumeUpgrade": {
      "post": {
        "tags": [
          "Application"
        ],
        "operationId": "Applications_ResumeUpgrade",
        "summary": "Send a request to resume the current application upgrade.",
        "description": "Send a request to resume the current application upgrade. This will resume the application upgrade from where it was paused.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The parameters for resuming an application upgrade.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "upgradeDomainName": {
                  "description": "The upgrade domain name. Expected to be the next upgrade domain if the application is upgrading.",
                  "type": "string"
                }
              },
              "description": "Parameters for Resume Upgrade action. The upgrade domain name must be specified."
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "The operation was accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "The URL to get the status of an ongoing long-running operation.",
                "type": "string"
              },
              "Location": {
                "description": "The URL to get the status of a completed long-running operation.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedclusters/{clusterName}/applications/{applicationName}": {
      "get": {
        "tags": [
          "Application"
        ],
        "operationId": "Applications_Get",
        "summary": "Gets a Service Fabric managed application resource.",
        "description": "Get a Service Fabric managed application resource created or in the process of being created in the Service Fabric cluster resource.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The application resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "identity": {
                  "type": "object",
                  "description": "Describes the managed identities for an Azure resource.",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The principal id of the managed identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The tenant id of the managed identity. This property will only be provided for a system assigned identity."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of managed identity for the resource.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedIdentityType",
                        "modelAsString": false,
                        "values": [
                          {
                            "value": "None",
                            "description": "Indicates that no identity is associated with the resource."
                          },
                          {
                            "value": "SystemAssigned",
                            "description": "Indicates that system assigned identity is associated with the resource."
                          },
                          {
                            "value": "UserAssigned",
                            "description": "Indicates that user assigned identity is associated with the resource."
                          },
                          {
                            "value": "SystemAssigned, UserAssigned",
                            "description": "Indicates that both system assigned and user assigned identity are associated with the resource."
                          }
                        ]
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\n",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The principal id of user assigned identity."
                          },
                          "clientId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The client id of user assigned identity."
                          }
                        }
                      }
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "The application resource properties.",
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response"
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of the application type as defined in the application manifest.\nThis name must be the full Arm Resource ID for the referenced application type version.\n"
                    },
                    "parameters": {
                      "type": "object",
                      "description": "List of application parameters with overridden values from their default values specified in the application manifest.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "upgradePolicy": {
                      "type": "object",
                      "description": "Describes the policy for a monitored application upgrade.",
                      "properties": {
                        "applicationHealthPolicy": {
                          "type": "object",
                          "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
                          "required": [
                            "considerWarningAsError",
                            "maxPercentUnhealthyDeployedApplications"
                          ],
                          "properties": {
                            "considerWarningAsError": {
                              "type": "boolean",
                              "description": "Indicates whether warnings are treated with the same severity as errors."
                            },
                            "maxPercentUnhealthyDeployedApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.\nThe percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.\nThis is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n"
                            },
                            "defaultServiceTypeHealthPolicy": {
                              "description": "The health policy used by default to evaluate the health of a service type.",
                              "type": "object",
                              "required": [
                                "maxPercentUnhealthyServices",
                                "maxPercentUnhealthyPartitionsPerService",
                                "maxPercentUnhealthyReplicasPerPartition"
                              ],
                              "properties": {
                                "maxPercentUnhealthyServices": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum allowed percentage of unhealthy services.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services.\n",
                                  "minimum": 0,
                                  "maximum": 100
                                },
                                "maxPercentUnhealthyPartitionsPerService": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum allowed percentage of unhealthy partitions per service.\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions.\n",
                                  "minimum": 0,
                                  "maximum": 100
                                },
                                "maxPercentUnhealthyReplicasPerPartition": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum allowed percentage of unhealthy replicas per partition.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas.\n",
                                  "minimum": 0,
                                  "maximum": 100
                                }
                              }
                            },
                            "serviceTypeHealthPolicyMap": {
                              "description": "The map with service type health policy per service type name. The map is empty by default.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                                "required": [
                                  "maxPercentUnhealthyServices",
                                  "maxPercentUnhealthyPartitionsPerService",
                                  "maxPercentUnhealthyReplicasPerPartition"
                                ],
                                "properties": {
                                  "maxPercentUnhealthyServices": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of unhealthy services.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services.\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentUnhealthyPartitionsPerService": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of unhealthy partitions per service.\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions.\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentUnhealthyReplicasPerPartition": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of unhealthy replicas per partition.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas.\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  }
                                }
                              }
                            }
                          }
                        },
                        "forceRestart": {
                          "type": "boolean",
                          "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).",
                          "default": false
                        },
                        "rollingUpgradeMonitoringPolicy": {
                          "type": "object",
                          "description": "The policy used for monitoring the application upgrade",
                          "required": [
                            "failureAction",
                            "healthCheckWaitDuration",
                            "healthCheckStableDuration",
                            "healthCheckRetryTimeout",
                            "upgradeTimeout",
                            "upgradeDomainTimeout"
                          ],
                          "properties": {
                            "failureAction": {
                              "type": "string",
                              "description": "The compensating action to perform when a Monitored upgrade encounters monitoring policy or health policy violations. Invalid indicates the failure action is invalid. Rollback specifies that the upgrade will start rolling back automatically. Manual indicates that the upgrade will switch to UnmonitoredManual upgrade mode.",
                              "enum": [
                                "Rollback",
                                "Manual"
                              ],
                              "x-ms-enum": {
                                "name": "FailureAction",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "Rollback",
                                    "description": "Indicates that a rollback of the upgrade will be performed by Service Fabric if the upgrade fails."
                                  },
                                  {
                                    "value": "Manual",
                                    "description": "Indicates that a manual repair will need to be performed by the administrator if the upgrade fails. Service Fabric will not proceed to the next upgrade domain automatically."
                                  }
                                ]
                              }
                            },
                            "healthCheckWaitDuration": {
                              "type": "string",
                              "x-ms-format": "duration-constant",
                              "description": "The amount of time to wait after completing an upgrade domain before applying health policies. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                            },
                            "healthCheckStableDuration": {
                              "type": "string",
                              "x-ms-format": "duration-constant",
                              "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                            },
                            "healthCheckRetryTimeout": {
                              "type": "string",
                              "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                            },
                            "upgradeTimeout": {
                              "type": "string",
                              "description": "The amount of time the overall upgrade has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                            },
                            "upgradeDomainTimeout": {
                              "type": "string",
                              "description": "The amount of time each upgrade domain has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                            }
                          }
                        },
                        "instanceCloseDelayDuration": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Duration in seconds, to wait before a stateless instance is closed, to allow the active requests to drain gracefully. This would be effective when the instance is closing during the application/cluster upgrade, only for those instances which have a non-zero delay duration configured in the service description."
                        },
                        "upgradeMode": {
                          "type": "string",
                          "description": "The mode used to monitor health during a rolling upgrade. The values are Monitored, and UnmonitoredAuto.",
                          "enum": [
                            "Monitored",
                            "UnmonitoredAuto"
                          ],
                          "x-ms-enum": {
                            "name": "RollingUpgradeMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Monitored",
                                "description": "The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 0."
                              },
                              {
                                "value": "UnmonitoredAuto",
                                "description": "The upgrade will proceed automatically without performing any health monitoring. The value is 1."
                              }
                            ]
                          }
                        },
                        "upgradeReplicaSetCheckTimeout": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer)."
                        },
                        "recreateApplication": {
                          "type": "boolean",
                          "description": "Determines whether the application should be recreated on update. If value=true, the rest of the upgrade policy parameters are not allowed."
                        }
                      }
                    },
                    "managedIdentities": {
                      "description": "List of user assigned identities for the application, each mapped to a friendly name.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "principalId"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The friendly name of user assigned identity."
                          },
                          "principalId": {
                            "type": "string",
                            "description": "The principal id of user assigned identity."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Application"
        ],
        "operationId": "Applications_CreateOrUpdate",
        "summary": "Creates or updates a Service Fabric managed application resource.",
        "description": "Create or update a Service Fabric managed application resource with the specified name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The application resource.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The application resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "identity": {
                  "type": "object",
                  "description": "Describes the managed identities for an Azure resource.",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The principal id of the managed identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The tenant id of the managed identity. This property will only be provided for a system assigned identity."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of managed identity for the resource.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedIdentityType",
                        "modelAsString": false,
                        "values": [
                          {
                            "value": "None",
                            "description": "Indicates that no identity is associated with the resource."
                          },
                          {
                            "value": "SystemAssigned",
                            "description": "Indicates that system assigned identity is associated with the resource."
                          },
                          {
                            "value": "UserAssigned",
                            "description": "Indicates that user assigned identity is associated with the resource."
                          },
                          {
                            "value": "SystemAssigned, UserAssigned",
                            "description": "Indicates that both system assigned and user assigned identity are associated with the resource."
                          }
                        ]
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\n",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The principal id of user assigned identity."
                          },
                          "clientId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The client id of user assigned identity."
                          }
                        }
                      }
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "The application resource properties.",
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response"
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of the application type as defined in the application manifest.\nThis name must be the full Arm Resource ID for the referenced application type version.\n"
                    },
                    "parameters": {
                      "type": "object",
                      "description": "List of application parameters with overridden values from their default values specified in the application manifest.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "upgradePolicy": {
                      "type": "object",
                      "description": "Describes the policy for a monitored application upgrade.",
                      "properties": {
                        "applicationHealthPolicy": {
                          "type": "object",
                          "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
                          "required": [
                            "considerWarningAsError",
                            "maxPercentUnhealthyDeployedApplications"
                          ],
                          "properties": {
                            "considerWarningAsError": {
                              "type": "boolean",
                              "description": "Indicates whether warnings are treated with the same severity as errors."
                            },
                            "maxPercentUnhealthyDeployedApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.\nThe percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.\nThis is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n"
                            },
                            "defaultServiceTypeHealthPolicy": {
                              "description": "The health policy used by default to evaluate the health of a service type.",
                              "type": "object",
                              "required": [
                                "maxPercentUnhealthyServices",
                                "maxPercentUnhealthyPartitionsPerService",
                                "maxPercentUnhealthyReplicasPerPartition"
                              ],
                              "properties": {
                                "maxPercentUnhealthyServices": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum allowed percentage of unhealthy services.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services.\n",
                                  "minimum": 0,
                                  "maximum": 100
                                },
                                "maxPercentUnhealthyPartitionsPerService": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum allowed percentage of unhealthy partitions per service.\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions.\n",
                                  "minimum": 0,
                                  "maximum": 100
                                },
                                "maxPercentUnhealthyReplicasPerPartition": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum allowed percentage of unhealthy replicas per partition.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas.\n",
                                  "minimum": 0,
                                  "maximum": 100
                                }
                              }
                            },
                            "serviceTypeHealthPolicyMap": {
                              "description": "The map with service type health policy per service type name. The map is empty by default.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                                "required": [
                                  "maxPercentUnhealthyServices",
                                  "maxPercentUnhealthyPartitionsPerService",
                                  "maxPercentUnhealthyReplicasPerPartition"
                                ],
                                "properties": {
                                  "maxPercentUnhealthyServices": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of unhealthy services.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services.\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentUnhealthyPartitionsPerService": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of unhealthy partitions per service.\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions.\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentUnhealthyReplicasPerPartition": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of unhealthy replicas per partition.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas.\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  }
                                }
                              }
                            }
                          }
                        },
                        "forceRestart": {
                          "type": "boolean",
                          "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).",
                          "default": false
                        },
                        "rollingUpgradeMonitoringPolicy": {
                          "type": "object",
                          "description": "The policy used for monitoring the application upgrade",
                          "required": [
                            "failureAction",
                            "healthCheckWaitDuration",
                            "healthCheckStableDuration",
                            "healthCheckRetryTimeout",
                            "upgradeTimeout",
                            "upgradeDomainTimeout"
                          ],
                          "properties": {
                            "failureAction": {
                              "type": "string",
                              "description": "The compensating action to perform when a Monitored upgrade encounters monitoring policy or health policy violations. Invalid indicates the failure action is invalid. Rollback specifies that the upgrade will start rolling back automatically. Manual indicates that the upgrade will switch to UnmonitoredManual upgrade mode.",
                              "enum": [
                                "Rollback",
                                "Manual"
                              ],
                              "x-ms-enum": {
                                "name": "FailureAction",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "Rollback",
                                    "description": "Indicates that a rollback of the upgrade will be performed by Service Fabric if the upgrade fails."
                                  },
                                  {
                                    "value": "Manual",
                                    "description": "Indicates that a manual repair will need to be performed by the administrator if the upgrade fails. Service Fabric will not proceed to the next upgrade domain automatically."
                                  }
                                ]
                              }
                            },
                            "healthCheckWaitDuration": {
                              "type": "string",
                              "x-ms-format": "duration-constant",
                              "description": "The amount of time to wait after completing an upgrade domain before applying health policies. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                            },
                            "healthCheckStableDuration": {
                              "type": "string",
                              "x-ms-format": "duration-constant",
                              "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                            },
                            "healthCheckRetryTimeout": {
                              "type": "string",
                              "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                            },
                            "upgradeTimeout": {
                              "type": "string",
                              "description": "The amount of time the overall upgrade has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                            },
                            "upgradeDomainTimeout": {
                              "type": "string",
                              "description": "The amount of time each upgrade domain has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                            }
                          }
                        },
                        "instanceCloseDelayDuration": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Duration in seconds, to wait before a stateless instance is closed, to allow the active requests to drain gracefully. This would be effective when the instance is closing during the application/cluster upgrade, only for those instances which have a non-zero delay duration configured in the service description."
                        },
                        "upgradeMode": {
                          "type": "string",
                          "description": "The mode used to monitor health during a rolling upgrade. The values are Monitored, and UnmonitoredAuto.",
                          "enum": [
                            "Monitored",
                            "UnmonitoredAuto"
                          ],
                          "x-ms-enum": {
                            "name": "RollingUpgradeMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Monitored",
                                "description": "The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 0."
                              },
                              {
                                "value": "UnmonitoredAuto",
                                "description": "The upgrade will proceed automatically without performing any health monitoring. The value is 1."
                              }
                            ]
                          }
                        },
                        "upgradeReplicaSetCheckTimeout": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer)."
                        },
                        "recreateApplication": {
                          "type": "boolean",
                          "description": "Determines whether the application should be recreated on update. If value=true, the rest of the upgrade policy parameters are not allowed."
                        }
                      }
                    },
                    "managedIdentities": {
                      "description": "List of user assigned identities for the application, each mapped to a friendly name.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "principalId"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The friendly name of user assigned identity."
                          },
                          "principalId": {
                            "type": "string",
                            "description": "The principal id of user assigned identity."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The application resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "identity": {
                  "type": "object",
                  "description": "Describes the managed identities for an Azure resource.",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The principal id of the managed identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The tenant id of the managed identity. This property will only be provided for a system assigned identity."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of managed identity for the resource.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedIdentityType",
                        "modelAsString": false,
                        "values": [
                          {
                            "value": "None",
                            "description": "Indicates that no identity is associated with the resource."
                          },
                          {
                            "value": "SystemAssigned",
                            "description": "Indicates that system assigned identity is associated with the resource."
                          },
                          {
                            "value": "UserAssigned",
                            "description": "Indicates that user assigned identity is associated with the resource."
                          },
                          {
                            "value": "SystemAssigned, UserAssigned",
                            "description": "Indicates that both system assigned and user assigned identity are associated with the resource."
                          }
                        ]
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\n",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The principal id of user assigned identity."
                          },
                          "clientId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The client id of user assigned identity."
                          }
                        }
                      }
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "The application resource properties.",
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response"
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of the application type as defined in the application manifest.\nThis name must be the full Arm Resource ID for the referenced application type version.\n"
                    },
                    "parameters": {
                      "type": "object",
                      "description": "List of application parameters with overridden values from their default values specified in the application manifest.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "upgradePolicy": {
                      "type": "object",
                      "description": "Describes the policy for a monitored application upgrade.",
                      "properties": {
                        "applicationHealthPolicy": {
                          "type": "object",
                          "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
                          "required": [
                            "considerWarningAsError",
                            "maxPercentUnhealthyDeployedApplications"
                          ],
                          "properties": {
                            "considerWarningAsError": {
                              "type": "boolean",
                              "description": "Indicates whether warnings are treated with the same severity as errors."
                            },
                            "maxPercentUnhealthyDeployedApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.\nThe percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.\nThis is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n"
                            },
                            "defaultServiceTypeHealthPolicy": {
                              "description": "The health policy used by default to evaluate the health of a service type.",
                              "type": "object",
                              "required": [
                                "maxPercentUnhealthyServices",
                                "maxPercentUnhealthyPartitionsPerService",
                                "maxPercentUnhealthyReplicasPerPartition"
                              ],
                              "properties": {
                                "maxPercentUnhealthyServices": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum allowed percentage of unhealthy services.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services.\n",
                                  "minimum": 0,
                                  "maximum": 100
                                },
                                "maxPercentUnhealthyPartitionsPerService": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum allowed percentage of unhealthy partitions per service.\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions.\n",
                                  "minimum": 0,
                                  "maximum": 100
                                },
                                "maxPercentUnhealthyReplicasPerPartition": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum allowed percentage of unhealthy replicas per partition.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas.\n",
                                  "minimum": 0,
                                  "maximum": 100
                                }
                              }
                            },
                            "serviceTypeHealthPolicyMap": {
                              "description": "The map with service type health policy per service type name. The map is empty by default.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                                "required": [
                                  "maxPercentUnhealthyServices",
                                  "maxPercentUnhealthyPartitionsPerService",
                                  "maxPercentUnhealthyReplicasPerPartition"
                                ],
                                "properties": {
                                  "maxPercentUnhealthyServices": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of unhealthy services.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services.\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentUnhealthyPartitionsPerService": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of unhealthy partitions per service.\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions.\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentUnhealthyReplicasPerPartition": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of unhealthy replicas per partition.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas.\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  }
                                }
                              }
                            }
                          }
                        },
                        "forceRestart": {
                          "type": "boolean",
                          "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).",
                          "default": false
                        },
                        "rollingUpgradeMonitoringPolicy": {
                          "type": "object",
                          "description": "The policy used for monitoring the application upgrade",
                          "required": [
                            "failureAction",
                            "healthCheckWaitDuration",
                            "healthCheckStableDuration",
                            "healthCheckRetryTimeout",
                            "upgradeTimeout",
                            "upgradeDomainTimeout"
                          ],
                          "properties": {
                            "failureAction": {
                              "type": "string",
                              "description": "The compensating action to perform when a Monitored upgrade encounters monitoring policy or health policy violations. Invalid indicates the failure action is invalid. Rollback specifies that the upgrade will start rolling back automatically. Manual indicates that the upgrade will switch to UnmonitoredManual upgrade mode.",
                              "enum": [
                                "Rollback",
                                "Manual"
                              ],
                              "x-ms-enum": {
                                "name": "FailureAction",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "Rollback",
                                    "description": "Indicates that a rollback of the upgrade will be performed by Service Fabric if the upgrade fails."
                                  },
                                  {
                                    "value": "Manual",
                                    "description": "Indicates that a manual repair will need to be performed by the administrator if the upgrade fails. Service Fabric will not proceed to the next upgrade domain automatically."
                                  }
                                ]
                              }
                            },
                            "healthCheckWaitDuration": {
                              "type": "string",
                              "x-ms-format": "duration-constant",
                              "description": "The amount of time to wait after completing an upgrade domain before applying health policies. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                            },
                            "healthCheckStableDuration": {
                              "type": "string",
                              "x-ms-format": "duration-constant",
                              "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                            },
                            "healthCheckRetryTimeout": {
                              "type": "string",
                              "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                            },
                            "upgradeTimeout": {
                              "type": "string",
                              "description": "The amount of time the overall upgrade has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                            },
                            "upgradeDomainTimeout": {
                              "type": "string",
                              "description": "The amount of time each upgrade domain has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                            }
                          }
                        },
                        "instanceCloseDelayDuration": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Duration in seconds, to wait before a stateless instance is closed, to allow the active requests to drain gracefully. This would be effective when the instance is closing during the application/cluster upgrade, only for those instances which have a non-zero delay duration configured in the service description."
                        },
                        "upgradeMode": {
                          "type": "string",
                          "description": "The mode used to monitor health during a rolling upgrade. The values are Monitored, and UnmonitoredAuto.",
                          "enum": [
                            "Monitored",
                            "UnmonitoredAuto"
                          ],
                          "x-ms-enum": {
                            "name": "RollingUpgradeMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Monitored",
                                "description": "The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 0."
                              },
                              {
                                "value": "UnmonitoredAuto",
                                "description": "The upgrade will proceed automatically without performing any health monitoring. The value is 1."
                              }
                            ]
                          }
                        },
                        "upgradeReplicaSetCheckTimeout": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer)."
                        },
                        "recreateApplication": {
                          "type": "boolean",
                          "description": "Determines whether the application should be recreated on update. If value=true, the rest of the upgrade policy parameters are not allowed."
                        }
                      }
                    },
                    "managedIdentities": {
                      "description": "List of user assigned identities for the application, each mapped to a friendly name.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "principalId"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The friendly name of user assigned identity."
                          },
                          "principalId": {
                            "type": "string",
                            "description": "The principal id of user assigned identity."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The request was accepted and the operation will complete asynchronously.",
            "schema": {
              "type": "object",
              "description": "The application resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "identity": {
                  "type": "object",
                  "description": "Describes the managed identities for an Azure resource.",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The principal id of the managed identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The tenant id of the managed identity. This property will only be provided for a system assigned identity."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of managed identity for the resource.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedIdentityType",
                        "modelAsString": false,
                        "values": [
                          {
                            "value": "None",
                            "description": "Indicates that no identity is associated with the resource."
                          },
                          {
                            "value": "SystemAssigned",
                            "description": "Indicates that system assigned identity is associated with the resource."
                          },
                          {
                            "value": "UserAssigned",
                            "description": "Indicates that user assigned identity is associated with the resource."
                          },
                          {
                            "value": "SystemAssigned, UserAssigned",
                            "description": "Indicates that both system assigned and user assigned identity are associated with the resource."
                          }
                        ]
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\n",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The principal id of user assigned identity."
                          },
                          "clientId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The client id of user assigned identity."
                          }
                        }
                      }
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "The application resource properties.",
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response"
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of the application type as defined in the application manifest.\nThis name must be the full Arm Resource ID for the referenced application type version.\n"
                    },
                    "parameters": {
                      "type": "object",
                      "description": "List of application parameters with overridden values from their default values specified in the application manifest.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "upgradePolicy": {
                      "type": "object",
                      "description": "Describes the policy for a monitored application upgrade.",
                      "properties": {
                        "applicationHealthPolicy": {
                          "type": "object",
                          "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
                          "required": [
                            "considerWarningAsError",
                            "maxPercentUnhealthyDeployedApplications"
                          ],
                          "properties": {
                            "considerWarningAsError": {
                              "type": "boolean",
                              "description": "Indicates whether warnings are treated with the same severity as errors."
                            },
                            "maxPercentUnhealthyDeployedApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.\nThe percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.\nThis is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n"
                            },
                            "defaultServiceTypeHealthPolicy": {
                              "description": "The health policy used by default to evaluate the health of a service type.",
                              "type": "object",
                              "required": [
                                "maxPercentUnhealthyServices",
                                "maxPercentUnhealthyPartitionsPerService",
                                "maxPercentUnhealthyReplicasPerPartition"
                              ],
                              "properties": {
                                "maxPercentUnhealthyServices": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum allowed percentage of unhealthy services.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services.\n",
                                  "minimum": 0,
                                  "maximum": 100
                                },
                                "maxPercentUnhealthyPartitionsPerService": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum allowed percentage of unhealthy partitions per service.\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions.\n",
                                  "minimum": 0,
                                  "maximum": 100
                                },
                                "maxPercentUnhealthyReplicasPerPartition": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum allowed percentage of unhealthy replicas per partition.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas.\n",
                                  "minimum": 0,
                                  "maximum": 100
                                }
                              }
                            },
                            "serviceTypeHealthPolicyMap": {
                              "description": "The map with service type health policy per service type name. The map is empty by default.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                                "required": [
                                  "maxPercentUnhealthyServices",
                                  "maxPercentUnhealthyPartitionsPerService",
                                  "maxPercentUnhealthyReplicasPerPartition"
                                ],
                                "properties": {
                                  "maxPercentUnhealthyServices": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of unhealthy services.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services.\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentUnhealthyPartitionsPerService": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of unhealthy partitions per service.\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions.\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentUnhealthyReplicasPerPartition": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of unhealthy replicas per partition.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas.\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  }
                                }
                              }
                            }
                          }
                        },
                        "forceRestart": {
                          "type": "boolean",
                          "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).",
                          "default": false
                        },
                        "rollingUpgradeMonitoringPolicy": {
                          "type": "object",
                          "description": "The policy used for monitoring the application upgrade",
                          "required": [
                            "failureAction",
                            "healthCheckWaitDuration",
                            "healthCheckStableDuration",
                            "healthCheckRetryTimeout",
                            "upgradeTimeout",
                            "upgradeDomainTimeout"
                          ],
                          "properties": {
                            "failureAction": {
                              "type": "string",
                              "description": "The compensating action to perform when a Monitored upgrade encounters monitoring policy or health policy violations. Invalid indicates the failure action is invalid. Rollback specifies that the upgrade will start rolling back automatically. Manual indicates that the upgrade will switch to UnmonitoredManual upgrade mode.",
                              "enum": [
                                "Rollback",
                                "Manual"
                              ],
                              "x-ms-enum": {
                                "name": "FailureAction",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "Rollback",
                                    "description": "Indicates that a rollback of the upgrade will be performed by Service Fabric if the upgrade fails."
                                  },
                                  {
                                    "value": "Manual",
                                    "description": "Indicates that a manual repair will need to be performed by the administrator if the upgrade fails. Service Fabric will not proceed to the next upgrade domain automatically."
                                  }
                                ]
                              }
                            },
                            "healthCheckWaitDuration": {
                              "type": "string",
                              "x-ms-format": "duration-constant",
                              "description": "The amount of time to wait after completing an upgrade domain before applying health policies. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                            },
                            "healthCheckStableDuration": {
                              "type": "string",
                              "x-ms-format": "duration-constant",
                              "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                            },
                            "healthCheckRetryTimeout": {
                              "type": "string",
                              "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                            },
                            "upgradeTimeout": {
                              "type": "string",
                              "description": "The amount of time the overall upgrade has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                            },
                            "upgradeDomainTimeout": {
                              "type": "string",
                              "description": "The amount of time each upgrade domain has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                            }
                          }
                        },
                        "instanceCloseDelayDuration": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Duration in seconds, to wait before a stateless instance is closed, to allow the active requests to drain gracefully. This would be effective when the instance is closing during the application/cluster upgrade, only for those instances which have a non-zero delay duration configured in the service description."
                        },
                        "upgradeMode": {
                          "type": "string",
                          "description": "The mode used to monitor health during a rolling upgrade. The values are Monitored, and UnmonitoredAuto.",
                          "enum": [
                            "Monitored",
                            "UnmonitoredAuto"
                          ],
                          "x-ms-enum": {
                            "name": "RollingUpgradeMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Monitored",
                                "description": "The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 0."
                              },
                              {
                                "value": "UnmonitoredAuto",
                                "description": "The upgrade will proceed automatically without performing any health monitoring. The value is 1."
                              }
                            ]
                          }
                        },
                        "upgradeReplicaSetCheckTimeout": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer)."
                        },
                        "recreateApplication": {
                          "type": "boolean",
                          "description": "Determines whether the application should be recreated on update. If value=true, the rest of the upgrade policy parameters are not allowed."
                        }
                      }
                    },
                    "managedIdentities": {
                      "description": "List of user assigned identities for the application, each mapped to a friendly name.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "principalId"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The friendly name of user assigned identity."
                          },
                          "principalId": {
                            "type": "string",
                            "description": "The principal id of user assigned identity."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "description": "The URL to get the status of an ongoing long-running operation.",
                "type": "string"
              },
              "Location": {
                "description": "The URL to get the status of a completed long-running operation.",
                "type": "string"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Application"
        ],
        "operationId": "Applications_Update",
        "summary": "Updates the tags of an application resource of a given managed cluster.",
        "description": "Updates the tags of an application resource of a given managed cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The application resource updated tags.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "Application update parameters",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "description": "Application update request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The application resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "identity": {
                  "type": "object",
                  "description": "Describes the managed identities for an Azure resource.",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The principal id of the managed identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The tenant id of the managed identity. This property will only be provided for a system assigned identity."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of managed identity for the resource.",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedIdentityType",
                        "modelAsString": false,
                        "values": [
                          {
                            "value": "None",
                            "description": "Indicates that no identity is associated with the resource."
                          },
                          {
                            "value": "SystemAssigned",
                            "description": "Indicates that system assigned identity is associated with the resource."
                          },
                          {
                            "value": "UserAssigned",
                            "description": "Indicates that user assigned identity is associated with the resource."
                          },
                          {
                            "value": "SystemAssigned, UserAssigned",
                            "description": "Indicates that both system assigned and user assigned identity are associated with the resource."
                          }
                        ]
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\n",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The principal id of user assigned identity."
                          },
                          "clientId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The client id of user assigned identity."
                          }
                        }
                      }
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "description": "The application resource properties.",
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response"
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of the application type as defined in the application manifest.\nThis name must be the full Arm Resource ID for the referenced application type version.\n"
                    },
                    "parameters": {
                      "type": "object",
                      "description": "List of application parameters with overridden values from their default values specified in the application manifest.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "upgradePolicy": {
                      "type": "object",
                      "description": "Describes the policy for a monitored application upgrade.",
                      "properties": {
                        "applicationHealthPolicy": {
                          "type": "object",
                          "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
                          "required": [
                            "considerWarningAsError",
                            "maxPercentUnhealthyDeployedApplications"
                          ],
                          "properties": {
                            "considerWarningAsError": {
                              "type": "boolean",
                              "description": "Indicates whether warnings are treated with the same severity as errors."
                            },
                            "maxPercentUnhealthyDeployedApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.\nThe percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.\nThis is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n"
                            },
                            "defaultServiceTypeHealthPolicy": {
                              "description": "The health policy used by default to evaluate the health of a service type.",
                              "type": "object",
                              "required": [
                                "maxPercentUnhealthyServices",
                                "maxPercentUnhealthyPartitionsPerService",
                                "maxPercentUnhealthyReplicasPerPartition"
                              ],
                              "properties": {
                                "maxPercentUnhealthyServices": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum allowed percentage of unhealthy services.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services.\n",
                                  "minimum": 0,
                                  "maximum": 100
                                },
                                "maxPercentUnhealthyPartitionsPerService": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum allowed percentage of unhealthy partitions per service.\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions.\n",
                                  "minimum": 0,
                                  "maximum": 100
                                },
                                "maxPercentUnhealthyReplicasPerPartition": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum allowed percentage of unhealthy replicas per partition.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas.\n",
                                  "minimum": 0,
                                  "maximum": 100
                                }
                              }
                            },
                            "serviceTypeHealthPolicyMap": {
                              "description": "The map with service type health policy per service type name. The map is empty by default.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                                "required": [
                                  "maxPercentUnhealthyServices",
                                  "maxPercentUnhealthyPartitionsPerService",
                                  "maxPercentUnhealthyReplicasPerPartition"
                                ],
                                "properties": {
                                  "maxPercentUnhealthyServices": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of unhealthy services.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services.\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentUnhealthyPartitionsPerService": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of unhealthy partitions per service.\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions.\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentUnhealthyReplicasPerPartition": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of unhealthy replicas per partition.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas.\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  }
                                }
                              }
                            }
                          }
                        },
                        "forceRestart": {
                          "type": "boolean",
                          "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).",
                          "default": false
                        },
                        "rollingUpgradeMonitoringPolicy": {
                          "type": "object",
                          "description": "The policy used for monitoring the application upgrade",
                          "required": [
                            "failureAction",
                            "healthCheckWaitDuration",
                            "healthCheckStableDuration",
                            "healthCheckRetryTimeout",
                            "upgradeTimeout",
                            "upgradeDomainTimeout"
                          ],
                          "properties": {
                            "failureAction": {
                              "type": "string",
                              "description": "The compensating action to perform when a Monitored upgrade encounters monitoring policy or health policy violations. Invalid indicates the failure action is invalid. Rollback specifies that the upgrade will start rolling back automatically. Manual indicates that the upgrade will switch to UnmonitoredManual upgrade mode.",
                              "enum": [
                                "Rollback",
                                "Manual"
                              ],
                              "x-ms-enum": {
                                "name": "FailureAction",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "Rollback",
                                    "description": "Indicates that a rollback of the upgrade will be performed by Service Fabric if the upgrade fails."
                                  },
                                  {
                                    "value": "Manual",
                                    "description": "Indicates that a manual repair will need to be performed by the administrator if the upgrade fails. Service Fabric will not proceed to the next upgrade domain automatically."
                                  }
                                ]
                              }
                            },
                            "healthCheckWaitDuration": {
                              "type": "string",
                              "x-ms-format": "duration-constant",
                              "description": "The amount of time to wait after completing an upgrade domain before applying health policies. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                            },
                            "healthCheckStableDuration": {
                              "type": "string",
                              "x-ms-format": "duration-constant",
                              "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                            },
                            "healthCheckRetryTimeout": {
                              "type": "string",
                              "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                            },
                            "upgradeTimeout": {
                              "type": "string",
                              "description": "The amount of time the overall upgrade has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                            },
                            "upgradeDomainTimeout": {
                              "type": "string",
                              "description": "The amount of time each upgrade domain has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                            }
                          }
                        },
                        "instanceCloseDelayDuration": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Duration in seconds, to wait before a stateless instance is closed, to allow the active requests to drain gracefully. This would be effective when the instance is closing during the application/cluster upgrade, only for those instances which have a non-zero delay duration configured in the service description."
                        },
                        "upgradeMode": {
                          "type": "string",
                          "description": "The mode used to monitor health during a rolling upgrade. The values are Monitored, and UnmonitoredAuto.",
                          "enum": [
                            "Monitored",
                            "UnmonitoredAuto"
                          ],
                          "x-ms-enum": {
                            "name": "RollingUpgradeMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Monitored",
                                "description": "The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 0."
                              },
                              {
                                "value": "UnmonitoredAuto",
                                "description": "The upgrade will proceed automatically without performing any health monitoring. The value is 1."
                              }
                            ]
                          }
                        },
                        "upgradeReplicaSetCheckTimeout": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer)."
                        },
                        "recreateApplication": {
                          "type": "boolean",
                          "description": "Determines whether the application should be recreated on update. If value=true, the rest of the upgrade policy parameters are not allowed."
                        }
                      }
                    },
                    "managedIdentities": {
                      "description": "List of user assigned identities for the application, each mapped to a friendly name.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "principalId"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The friendly name of user assigned identity."
                          },
                          "principalId": {
                            "type": "string",
                            "description": "The principal id of user assigned identity."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Application"
        ],
        "operationId": "Applications_Delete",
        "summary": "Deletes a Service Fabric managed application resource.",
        "description": "Delete a Service Fabric managed application resource with the specified name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully."
          },
          "202": {
            "description": "The request was accepted and the operation will complete asynchronously.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "The URL to get the status of an ongoing long-running operation.",
                "type": "string"
              },
              "Location": {
                "description": "The URL to get the status of a completed long-running operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The resource was not found."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedclusters/{clusterName}/applications": {
      "get": {
        "tags": [
          "Application"
        ],
        "operationId": "Applications_List",
        "summary": "Gets the list of managed application resources created in the specified Service Fabric cluster resource.",
        "description": "Gets all managed application resources created or in the process of being created in the Service Fabric cluster resource.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The list of application resources.",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "The application resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Azure resource identifier.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "Azure resource name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "Azure resource type.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "Resource location depends on the parent resource.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Azure resource tags.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource."
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource."
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)."
                          }
                        }
                      },
                      "identity": {
                        "type": "object",
                        "description": "Describes the managed identities for an Azure resource.",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The principal id of the managed identity. This property will only be provided for a system assigned identity."
                          },
                          "tenantId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The tenant id of the managed identity. This property will only be provided for a system assigned identity."
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of managed identity for the resource.",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned, UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedIdentityType",
                              "modelAsString": false,
                              "values": [
                                {
                                  "value": "None",
                                  "description": "Indicates that no identity is associated with the resource."
                                },
                                {
                                  "value": "SystemAssigned",
                                  "description": "Indicates that system assigned identity is associated with the resource."
                                },
                                {
                                  "value": "UserAssigned",
                                  "description": "Indicates that user assigned identity is associated with the resource."
                                },
                                {
                                  "value": "SystemAssigned, UserAssigned",
                                  "description": "Indicates that both system assigned and user assigned identity are associated with the resource."
                                }
                              ]
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\n",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The principal id of user assigned identity."
                                },
                                "clientId": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The client id of user assigned identity."
                                }
                              }
                            }
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "description": "The application resource properties.",
                        "properties": {
                          "provisioningState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The current deployment or provisioning state, which only appears in the response"
                          },
                          "version": {
                            "type": "string",
                            "description": "The version of the application type as defined in the application manifest.\nThis name must be the full Arm Resource ID for the referenced application type version.\n"
                          },
                          "parameters": {
                            "type": "object",
                            "description": "List of application parameters with overridden values from their default values specified in the application manifest.",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "upgradePolicy": {
                            "type": "object",
                            "description": "Describes the policy for a monitored application upgrade.",
                            "properties": {
                              "applicationHealthPolicy": {
                                "type": "object",
                                "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
                                "required": [
                                  "considerWarningAsError",
                                  "maxPercentUnhealthyDeployedApplications"
                                ],
                                "properties": {
                                  "considerWarningAsError": {
                                    "type": "boolean",
                                    "description": "Indicates whether warnings are treated with the same severity as errors."
                                  },
                                  "maxPercentUnhealthyDeployedApplications": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.\nThe percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.\nThis is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n"
                                  },
                                  "defaultServiceTypeHealthPolicy": {
                                    "description": "The health policy used by default to evaluate the health of a service type.",
                                    "type": "object",
                                    "required": [
                                      "maxPercentUnhealthyServices",
                                      "maxPercentUnhealthyPartitionsPerService",
                                      "maxPercentUnhealthyReplicasPerPartition"
                                    ],
                                    "properties": {
                                      "maxPercentUnhealthyServices": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The maximum allowed percentage of unhealthy services.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services.\n",
                                        "minimum": 0,
                                        "maximum": 100
                                      },
                                      "maxPercentUnhealthyPartitionsPerService": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The maximum allowed percentage of unhealthy partitions per service.\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions.\n",
                                        "minimum": 0,
                                        "maximum": 100
                                      },
                                      "maxPercentUnhealthyReplicasPerPartition": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The maximum allowed percentage of unhealthy replicas per partition.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas.\n",
                                        "minimum": 0,
                                        "maximum": 100
                                      }
                                    }
                                  },
                                  "serviceTypeHealthPolicyMap": {
                                    "description": "The map with service type health policy per service type name. The map is empty by default.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object",
                                      "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                                      "required": [
                                        "maxPercentUnhealthyServices",
                                        "maxPercentUnhealthyPartitionsPerService",
                                        "maxPercentUnhealthyReplicasPerPartition"
                                      ],
                                      "properties": {
                                        "maxPercentUnhealthyServices": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "The maximum allowed percentage of unhealthy services.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services.\n",
                                          "minimum": 0,
                                          "maximum": 100
                                        },
                                        "maxPercentUnhealthyPartitionsPerService": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "The maximum allowed percentage of unhealthy partitions per service.\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions.\n",
                                          "minimum": 0,
                                          "maximum": 100
                                        },
                                        "maxPercentUnhealthyReplicasPerPartition": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "The maximum allowed percentage of unhealthy replicas per partition.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas.\n",
                                          "minimum": 0,
                                          "maximum": 100
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "forceRestart": {
                                "type": "boolean",
                                "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).",
                                "default": false
                              },
                              "rollingUpgradeMonitoringPolicy": {
                                "type": "object",
                                "description": "The policy used for monitoring the application upgrade",
                                "required": [
                                  "failureAction",
                                  "healthCheckWaitDuration",
                                  "healthCheckStableDuration",
                                  "healthCheckRetryTimeout",
                                  "upgradeTimeout",
                                  "upgradeDomainTimeout"
                                ],
                                "properties": {
                                  "failureAction": {
                                    "type": "string",
                                    "description": "The compensating action to perform when a Monitored upgrade encounters monitoring policy or health policy violations. Invalid indicates the failure action is invalid. Rollback specifies that the upgrade will start rolling back automatically. Manual indicates that the upgrade will switch to UnmonitoredManual upgrade mode.",
                                    "enum": [
                                      "Rollback",
                                      "Manual"
                                    ],
                                    "x-ms-enum": {
                                      "name": "FailureAction",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "value": "Rollback",
                                          "description": "Indicates that a rollback of the upgrade will be performed by Service Fabric if the upgrade fails."
                                        },
                                        {
                                          "value": "Manual",
                                          "description": "Indicates that a manual repair will need to be performed by the administrator if the upgrade fails. Service Fabric will not proceed to the next upgrade domain automatically."
                                        }
                                      ]
                                    }
                                  },
                                  "healthCheckWaitDuration": {
                                    "type": "string",
                                    "x-ms-format": "duration-constant",
                                    "description": "The amount of time to wait after completing an upgrade domain before applying health policies. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                                  },
                                  "healthCheckStableDuration": {
                                    "type": "string",
                                    "x-ms-format": "duration-constant",
                                    "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                                  },
                                  "healthCheckRetryTimeout": {
                                    "type": "string",
                                    "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                                  },
                                  "upgradeTimeout": {
                                    "type": "string",
                                    "description": "The amount of time the overall upgrade has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                                  },
                                  "upgradeDomainTimeout": {
                                    "type": "string",
                                    "description": "The amount of time each upgrade domain has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                                  }
                                }
                              },
                              "instanceCloseDelayDuration": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Duration in seconds, to wait before a stateless instance is closed, to allow the active requests to drain gracefully. This would be effective when the instance is closing during the application/cluster upgrade, only for those instances which have a non-zero delay duration configured in the service description."
                              },
                              "upgradeMode": {
                                "type": "string",
                                "description": "The mode used to monitor health during a rolling upgrade. The values are Monitored, and UnmonitoredAuto.",
                                "enum": [
                                  "Monitored",
                                  "UnmonitoredAuto"
                                ],
                                "x-ms-enum": {
                                  "name": "RollingUpgradeMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Monitored",
                                      "description": "The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 0."
                                    },
                                    {
                                      "value": "UnmonitoredAuto",
                                      "description": "The upgrade will proceed automatically without performing any health monitoring. The value is 1."
                                    }
                                  ]
                                }
                              },
                              "upgradeReplicaSetCheckTimeout": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer)."
                              },
                              "recreateApplication": {
                                "type": "boolean",
                                "description": "Determines whether the application should be recreated on update. If value=true, the rest of the upgrade policy parameters are not allowed."
                              }
                            }
                          },
                          "managedIdentities": {
                            "description": "List of user assigned identities for the application, each mapped to a friendly name.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "name",
                                "principalId"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The friendly name of user assigned identity."
                                },
                                "principalId": {
                                  "type": "string",
                                  "description": "The principal id of user assigned identity."
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of application list results if there are any.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedclusters/{clusterName}/applications/{applicationName}/services/{serviceName}": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Services_Get",
        "summary": "Gets a Service Fabric managed service resource.",
        "description": "Get a Service Fabric service resource created or in the process of being created in the Service Fabric managed application resource.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the service resource in the format of {applicationName}~{serviceName}.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The service resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "The service resource properties.",
                  "required": [
                    "serviceKind",
                    "serviceTypeName",
                    "partitionDescription"
                  ],
                  "discriminator": "serviceKind",
                  "properties": {
                    "placementConstraints": {
                      "type": "string",
                      "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\"."
                    },
                    "correlationScheme": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Creates a particular correlation between services.",
                        "required": [
                          "scheme",
                          "serviceName"
                        ],
                        "properties": {
                          "scheme": {
                            "description": "The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.",
                            "type": "string",
                            "enum": [
                              "AlignedAffinity",
                              "NonAlignedAffinity"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceCorrelationScheme",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "AlignedAffinity",
                                  "description": "Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 0."
                                },
                                {
                                  "value": "NonAlignedAffinity",
                                  "description": "Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 1."
                                }
                              ]
                            }
                          },
                          "serviceName": {
                            "description": "The Arm Resource ID of the service that the correlation relationship is established with.",
                            "type": "string",
                            "x-sf-clientlib": {
                              "typeName": "ServiceName"
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "serviceName"
                      ],
                      "description": "A list that describes the correlation of the service with other services."
                    },
                    "serviceLoadMetrics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Specifies a metric to load balance a service during runtime.",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive."
                          },
                          "weight": {
                            "description": "The service load metric relative weight, compared to other metrics configured for this service, as a number.",
                            "type": "string",
                            "enum": [
                              "Zero",
                              "Low",
                              "Medium",
                              "High"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceLoadMetricWeight",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Zero",
                                  "description": "Disables resource balancing for this metric. This value is zero."
                                },
                                {
                                  "value": "Low",
                                  "description": "Specifies the metric weight of the service load as Low. The value is 1."
                                },
                                {
                                  "value": "Medium",
                                  "description": "Specifies the metric weight of the service load as Medium. The value is 2."
                                },
                                {
                                  "value": "High",
                                  "description": "Specifies the metric weight of the service load as High. The value is 3."
                                }
                              ]
                            }
                          },
                          "primaryDefaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica."
                          },
                          "secondaryDefaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica."
                          },
                          "defaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric."
                          }
                        }
                      },
                      "x-ms-identifiers": [],
                      "description": "The service load metrics is given as an array of ServiceLoadMetric objects."
                    },
                    "servicePlacementPolicies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "discriminator": "type",
                        "description": "Describes the policy to be used for placement of a Service Fabric service.",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The type of placement policy for a service fabric service. Following are the possible values.",
                            "enum": [
                              "InvalidDomain",
                              "RequiredDomain",
                              "PreferredPrimaryDomain",
                              "RequiredDomainDistribution",
                              "NonPartiallyPlaceService"
                            ],
                            "x-ms-enum": {
                              "name": "ServicePlacementPolicyType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "InvalidDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 0."
                                },
                                {
                                  "value": "RequiredDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 1."
                                },
                                {
                                  "value": "PreferredPrimaryDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 2."
                                },
                                {
                                  "value": "RequiredDomainDistribution",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 3."
                                },
                                {
                                  "value": "NonPartiallyPlaceService",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 4."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [],
                      "description": "A list that describes the correlation of the service with other services."
                    },
                    "defaultMoveCost": {
                      "type": "string",
                      "description": "Specifies the move cost for the service.",
                      "enum": [
                        "Zero",
                        "Low",
                        "Medium",
                        "High"
                      ],
                      "x-ms-enum": {
                        "name": "MoveCost",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Zero",
                            "description": "Zero move cost. This value is zero."
                          },
                          {
                            "value": "Low",
                            "description": "Specifies the move cost of the service as Low. The value is 1."
                          },
                          {
                            "value": "Medium",
                            "description": "Specifies the move cost of the service as Medium. The value is 2."
                          },
                          {
                            "value": "High",
                            "description": "Specifies the move cost of the service as High. The value is 3."
                          }
                        ]
                      }
                    },
                    "scalingPolicies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Specifies a metric to load balance a service during runtime.",
                        "required": [
                          "scalingMechanism",
                          "scalingTrigger"
                        ],
                        "properties": {
                          "scalingMechanism": {
                            "description": "Specifies the mechanism associated with this scaling policy",
                            "type": "object",
                            "discriminator": "kind",
                            "required": [
                              "kind"
                            ],
                            "properties": {
                              "kind": {
                                "description": "Specifies the mechanism associated with this scaling policy.",
                                "type": "string",
                                "enum": [
                                  "ScalePartitionInstanceCount",
                                  "AddRemoveIncrementalNamedPartition"
                                ],
                                "x-ms-enum": {
                                  "name": "ServiceScalingMechanismKind",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "ScalePartitionInstanceCount",
                                      "description": "Represents a scaling mechanism for adding or removing instances of stateless service partition. The value is 0."
                                    },
                                    {
                                      "value": "AddRemoveIncrementalNamedPartition",
                                      "description": "Represents a scaling mechanism for adding or removing named partitions of a stateless service. The value is 1."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "scalingTrigger": {
                            "description": "Specifies the trigger associated with this scaling policy.",
                            "type": "object",
                            "discriminator": "kind",
                            "required": [
                              "kind"
                            ],
                            "properties": {
                              "kind": {
                                "description": "Specifies the trigger associated with this scaling policy.",
                                "type": "string",
                                "enum": [
                                  "AveragePartitionLoadTrigger",
                                  "AverageServiceLoadTrigger"
                                ],
                                "x-ms-enum": {
                                  "name": "ServiceScalingTriggerKind",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "AveragePartitionLoadTrigger",
                                      "description": "Represents a scaling trigger related to an average load of a metric/resource of a partition. The value is 0."
                                    },
                                    {
                                      "value": "AverageServiceLoadTrigger",
                                      "description": "Represents a scaling policy related to an average load of a metric/resource of a service. The value is 1."
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [],
                      "description": "Scaling policies for this service."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response"
                    },
                    "serviceKind": {
                      "type": "string",
                      "description": "The kind of service (Stateless or Stateful).",
                      "enum": [
                        "Stateless",
                        "Stateful"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceKind",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Stateless",
                            "description": "Does not use Service Fabric to make its state highly available or reliable. The value is 0."
                          },
                          {
                            "value": "Stateful",
                            "description": "Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 1."
                          }
                        ]
                      }
                    },
                    "serviceTypeName": {
                      "type": "string",
                      "description": "The name of the service type"
                    },
                    "partitionDescription": {
                      "type": "object",
                      "discriminator": "partitionScheme",
                      "description": "Describes how the service is partitioned.",
                      "required": [
                        "partitionScheme"
                      ],
                      "properties": {
                        "partitionScheme": {
                          "description": "Specifies how the service is partitioned.",
                          "type": "string",
                          "enum": [
                            "Singleton",
                            "UniformInt64Range",
                            "Named"
                          ],
                          "x-ms-enum": {
                            "name": "PartitionScheme",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Singleton",
                                "description": "Indicates that the partition is based on string names, and is a SingletonPartitionScheme object, The value is 0."
                              },
                              {
                                "value": "UniformInt64Range",
                                "description": "Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionScheme object. The value is 1."
                              },
                              {
                                "value": "Named",
                                "description": "Indicates that the partition is based on string names, and is a NamedPartitionScheme object. The value is 2."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "servicePackageActivationMode": {
                      "type": "string",
                      "description": "The activation Mode of the service package",
                      "enum": [
                        "SharedProcess",
                        "ExclusiveProcess"
                      ],
                      "x-ms-enum": {
                        "name": "ServicePackageActivationMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "SharedProcess",
                            "description": "Indicates the application package activation mode will use shared process."
                          },
                          {
                            "value": "ExclusiveProcess",
                            "description": "Indicates the application package activation mode will use exclusive process."
                          }
                        ]
                      }
                    },
                    "serviceDnsName": {
                      "type": "string",
                      "description": "Dns name used for the service. If this is specified, then the DNS name can be used to return the IP addresses of service endpoints for application layer protocols (e.g., HTTP).\nWhen updating serviceDnsName, old name may be temporarily resolvable. However, rely on new name.\nWhen removing serviceDnsName, removed name may temporarily be resolvable. Do not rely on the name being unresolvable.\n"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Service"
        ],
        "operationId": "Services_CreateOrUpdate",
        "summary": "Creates or updates a Service Fabric managed service resource.",
        "description": "Create or update a Service Fabric managed service resource with the specified name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the service resource in the format of {applicationName}~{serviceName}.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The service resource.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The service resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "The service resource properties.",
                  "required": [
                    "serviceKind",
                    "serviceTypeName",
                    "partitionDescription"
                  ],
                  "discriminator": "serviceKind",
                  "properties": {
                    "placementConstraints": {
                      "type": "string",
                      "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\"."
                    },
                    "correlationScheme": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Creates a particular correlation between services.",
                        "required": [
                          "scheme",
                          "serviceName"
                        ],
                        "properties": {
                          "scheme": {
                            "description": "The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.",
                            "type": "string",
                            "enum": [
                              "AlignedAffinity",
                              "NonAlignedAffinity"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceCorrelationScheme",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "AlignedAffinity",
                                  "description": "Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 0."
                                },
                                {
                                  "value": "NonAlignedAffinity",
                                  "description": "Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 1."
                                }
                              ]
                            }
                          },
                          "serviceName": {
                            "description": "The Arm Resource ID of the service that the correlation relationship is established with.",
                            "type": "string",
                            "x-sf-clientlib": {
                              "typeName": "ServiceName"
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "serviceName"
                      ],
                      "description": "A list that describes the correlation of the service with other services."
                    },
                    "serviceLoadMetrics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Specifies a metric to load balance a service during runtime.",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive."
                          },
                          "weight": {
                            "description": "The service load metric relative weight, compared to other metrics configured for this service, as a number.",
                            "type": "string",
                            "enum": [
                              "Zero",
                              "Low",
                              "Medium",
                              "High"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceLoadMetricWeight",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Zero",
                                  "description": "Disables resource balancing for this metric. This value is zero."
                                },
                                {
                                  "value": "Low",
                                  "description": "Specifies the metric weight of the service load as Low. The value is 1."
                                },
                                {
                                  "value": "Medium",
                                  "description": "Specifies the metric weight of the service load as Medium. The value is 2."
                                },
                                {
                                  "value": "High",
                                  "description": "Specifies the metric weight of the service load as High. The value is 3."
                                }
                              ]
                            }
                          },
                          "primaryDefaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica."
                          },
                          "secondaryDefaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica."
                          },
                          "defaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric."
                          }
                        }
                      },
                      "x-ms-identifiers": [],
                      "description": "The service load metrics is given as an array of ServiceLoadMetric objects."
                    },
                    "servicePlacementPolicies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "discriminator": "type",
                        "description": "Describes the policy to be used for placement of a Service Fabric service.",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The type of placement policy for a service fabric service. Following are the possible values.",
                            "enum": [
                              "InvalidDomain",
                              "RequiredDomain",
                              "PreferredPrimaryDomain",
                              "RequiredDomainDistribution",
                              "NonPartiallyPlaceService"
                            ],
                            "x-ms-enum": {
                              "name": "ServicePlacementPolicyType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "InvalidDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 0."
                                },
                                {
                                  "value": "RequiredDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 1."
                                },
                                {
                                  "value": "PreferredPrimaryDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 2."
                                },
                                {
                                  "value": "RequiredDomainDistribution",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 3."
                                },
                                {
                                  "value": "NonPartiallyPlaceService",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 4."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [],
                      "description": "A list that describes the correlation of the service with other services."
                    },
                    "defaultMoveCost": {
                      "type": "string",
                      "description": "Specifies the move cost for the service.",
                      "enum": [
                        "Zero",
                        "Low",
                        "Medium",
                        "High"
                      ],
                      "x-ms-enum": {
                        "name": "MoveCost",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Zero",
                            "description": "Zero move cost. This value is zero."
                          },
                          {
                            "value": "Low",
                            "description": "Specifies the move cost of the service as Low. The value is 1."
                          },
                          {
                            "value": "Medium",
                            "description": "Specifies the move cost of the service as Medium. The value is 2."
                          },
                          {
                            "value": "High",
                            "description": "Specifies the move cost of the service as High. The value is 3."
                          }
                        ]
                      }
                    },
                    "scalingPolicies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Specifies a metric to load balance a service during runtime.",
                        "required": [
                          "scalingMechanism",
                          "scalingTrigger"
                        ],
                        "properties": {
                          "scalingMechanism": {
                            "description": "Specifies the mechanism associated with this scaling policy",
                            "type": "object",
                            "discriminator": "kind",
                            "required": [
                              "kind"
                            ],
                            "properties": {
                              "kind": {
                                "description": "Specifies the mechanism associated with this scaling policy.",
                                "type": "string",
                                "enum": [
                                  "ScalePartitionInstanceCount",
                                  "AddRemoveIncrementalNamedPartition"
                                ],
                                "x-ms-enum": {
                                  "name": "ServiceScalingMechanismKind",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "ScalePartitionInstanceCount",
                                      "description": "Represents a scaling mechanism for adding or removing instances of stateless service partition. The value is 0."
                                    },
                                    {
                                      "value": "AddRemoveIncrementalNamedPartition",
                                      "description": "Represents a scaling mechanism for adding or removing named partitions of a stateless service. The value is 1."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "scalingTrigger": {
                            "description": "Specifies the trigger associated with this scaling policy.",
                            "type": "object",
                            "discriminator": "kind",
                            "required": [
                              "kind"
                            ],
                            "properties": {
                              "kind": {
                                "description": "Specifies the trigger associated with this scaling policy.",
                                "type": "string",
                                "enum": [
                                  "AveragePartitionLoadTrigger",
                                  "AverageServiceLoadTrigger"
                                ],
                                "x-ms-enum": {
                                  "name": "ServiceScalingTriggerKind",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "AveragePartitionLoadTrigger",
                                      "description": "Represents a scaling trigger related to an average load of a metric/resource of a partition. The value is 0."
                                    },
                                    {
                                      "value": "AverageServiceLoadTrigger",
                                      "description": "Represents a scaling policy related to an average load of a metric/resource of a service. The value is 1."
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [],
                      "description": "Scaling policies for this service."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response"
                    },
                    "serviceKind": {
                      "type": "string",
                      "description": "The kind of service (Stateless or Stateful).",
                      "enum": [
                        "Stateless",
                        "Stateful"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceKind",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Stateless",
                            "description": "Does not use Service Fabric to make its state highly available or reliable. The value is 0."
                          },
                          {
                            "value": "Stateful",
                            "description": "Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 1."
                          }
                        ]
                      }
                    },
                    "serviceTypeName": {
                      "type": "string",
                      "description": "The name of the service type"
                    },
                    "partitionDescription": {
                      "type": "object",
                      "discriminator": "partitionScheme",
                      "description": "Describes how the service is partitioned.",
                      "required": [
                        "partitionScheme"
                      ],
                      "properties": {
                        "partitionScheme": {
                          "description": "Specifies how the service is partitioned.",
                          "type": "string",
                          "enum": [
                            "Singleton",
                            "UniformInt64Range",
                            "Named"
                          ],
                          "x-ms-enum": {
                            "name": "PartitionScheme",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Singleton",
                                "description": "Indicates that the partition is based on string names, and is a SingletonPartitionScheme object, The value is 0."
                              },
                              {
                                "value": "UniformInt64Range",
                                "description": "Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionScheme object. The value is 1."
                              },
                              {
                                "value": "Named",
                                "description": "Indicates that the partition is based on string names, and is a NamedPartitionScheme object. The value is 2."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "servicePackageActivationMode": {
                      "type": "string",
                      "description": "The activation Mode of the service package",
                      "enum": [
                        "SharedProcess",
                        "ExclusiveProcess"
                      ],
                      "x-ms-enum": {
                        "name": "ServicePackageActivationMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "SharedProcess",
                            "description": "Indicates the application package activation mode will use shared process."
                          },
                          {
                            "value": "ExclusiveProcess",
                            "description": "Indicates the application package activation mode will use exclusive process."
                          }
                        ]
                      }
                    },
                    "serviceDnsName": {
                      "type": "string",
                      "description": "Dns name used for the service. If this is specified, then the DNS name can be used to return the IP addresses of service endpoints for application layer protocols (e.g., HTTP).\nWhen updating serviceDnsName, old name may be temporarily resolvable. However, rely on new name.\nWhen removing serviceDnsName, removed name may temporarily be resolvable. Do not rely on the name being unresolvable.\n"
                    }
                  }
                }
              }
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The service resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "The service resource properties.",
                  "required": [
                    "serviceKind",
                    "serviceTypeName",
                    "partitionDescription"
                  ],
                  "discriminator": "serviceKind",
                  "properties": {
                    "placementConstraints": {
                      "type": "string",
                      "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\"."
                    },
                    "correlationScheme": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Creates a particular correlation between services.",
                        "required": [
                          "scheme",
                          "serviceName"
                        ],
                        "properties": {
                          "scheme": {
                            "description": "The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.",
                            "type": "string",
                            "enum": [
                              "AlignedAffinity",
                              "NonAlignedAffinity"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceCorrelationScheme",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "AlignedAffinity",
                                  "description": "Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 0."
                                },
                                {
                                  "value": "NonAlignedAffinity",
                                  "description": "Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 1."
                                }
                              ]
                            }
                          },
                          "serviceName": {
                            "description": "The Arm Resource ID of the service that the correlation relationship is established with.",
                            "type": "string",
                            "x-sf-clientlib": {
                              "typeName": "ServiceName"
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "serviceName"
                      ],
                      "description": "A list that describes the correlation of the service with other services."
                    },
                    "serviceLoadMetrics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Specifies a metric to load balance a service during runtime.",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive."
                          },
                          "weight": {
                            "description": "The service load metric relative weight, compared to other metrics configured for this service, as a number.",
                            "type": "string",
                            "enum": [
                              "Zero",
                              "Low",
                              "Medium",
                              "High"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceLoadMetricWeight",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Zero",
                                  "description": "Disables resource balancing for this metric. This value is zero."
                                },
                                {
                                  "value": "Low",
                                  "description": "Specifies the metric weight of the service load as Low. The value is 1."
                                },
                                {
                                  "value": "Medium",
                                  "description": "Specifies the metric weight of the service load as Medium. The value is 2."
                                },
                                {
                                  "value": "High",
                                  "description": "Specifies the metric weight of the service load as High. The value is 3."
                                }
                              ]
                            }
                          },
                          "primaryDefaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica."
                          },
                          "secondaryDefaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica."
                          },
                          "defaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric."
                          }
                        }
                      },
                      "x-ms-identifiers": [],
                      "description": "The service load metrics is given as an array of ServiceLoadMetric objects."
                    },
                    "servicePlacementPolicies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "discriminator": "type",
                        "description": "Describes the policy to be used for placement of a Service Fabric service.",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The type of placement policy for a service fabric service. Following are the possible values.",
                            "enum": [
                              "InvalidDomain",
                              "RequiredDomain",
                              "PreferredPrimaryDomain",
                              "RequiredDomainDistribution",
                              "NonPartiallyPlaceService"
                            ],
                            "x-ms-enum": {
                              "name": "ServicePlacementPolicyType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "InvalidDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 0."
                                },
                                {
                                  "value": "RequiredDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 1."
                                },
                                {
                                  "value": "PreferredPrimaryDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 2."
                                },
                                {
                                  "value": "RequiredDomainDistribution",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 3."
                                },
                                {
                                  "value": "NonPartiallyPlaceService",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 4."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [],
                      "description": "A list that describes the correlation of the service with other services."
                    },
                    "defaultMoveCost": {
                      "type": "string",
                      "description": "Specifies the move cost for the service.",
                      "enum": [
                        "Zero",
                        "Low",
                        "Medium",
                        "High"
                      ],
                      "x-ms-enum": {
                        "name": "MoveCost",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Zero",
                            "description": "Zero move cost. This value is zero."
                          },
                          {
                            "value": "Low",
                            "description": "Specifies the move cost of the service as Low. The value is 1."
                          },
                          {
                            "value": "Medium",
                            "description": "Specifies the move cost of the service as Medium. The value is 2."
                          },
                          {
                            "value": "High",
                            "description": "Specifies the move cost of the service as High. The value is 3."
                          }
                        ]
                      }
                    },
                    "scalingPolicies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Specifies a metric to load balance a service during runtime.",
                        "required": [
                          "scalingMechanism",
                          "scalingTrigger"
                        ],
                        "properties": {
                          "scalingMechanism": {
                            "description": "Specifies the mechanism associated with this scaling policy",
                            "type": "object",
                            "discriminator": "kind",
                            "required": [
                              "kind"
                            ],
                            "properties": {
                              "kind": {
                                "description": "Specifies the mechanism associated with this scaling policy.",
                                "type": "string",
                                "enum": [
                                  "ScalePartitionInstanceCount",
                                  "AddRemoveIncrementalNamedPartition"
                                ],
                                "x-ms-enum": {
                                  "name": "ServiceScalingMechanismKind",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "ScalePartitionInstanceCount",
                                      "description": "Represents a scaling mechanism for adding or removing instances of stateless service partition. The value is 0."
                                    },
                                    {
                                      "value": "AddRemoveIncrementalNamedPartition",
                                      "description": "Represents a scaling mechanism for adding or removing named partitions of a stateless service. The value is 1."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "scalingTrigger": {
                            "description": "Specifies the trigger associated with this scaling policy.",
                            "type": "object",
                            "discriminator": "kind",
                            "required": [
                              "kind"
                            ],
                            "properties": {
                              "kind": {
                                "description": "Specifies the trigger associated with this scaling policy.",
                                "type": "string",
                                "enum": [
                                  "AveragePartitionLoadTrigger",
                                  "AverageServiceLoadTrigger"
                                ],
                                "x-ms-enum": {
                                  "name": "ServiceScalingTriggerKind",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "AveragePartitionLoadTrigger",
                                      "description": "Represents a scaling trigger related to an average load of a metric/resource of a partition. The value is 0."
                                    },
                                    {
                                      "value": "AverageServiceLoadTrigger",
                                      "description": "Represents a scaling policy related to an average load of a metric/resource of a service. The value is 1."
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [],
                      "description": "Scaling policies for this service."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response"
                    },
                    "serviceKind": {
                      "type": "string",
                      "description": "The kind of service (Stateless or Stateful).",
                      "enum": [
                        "Stateless",
                        "Stateful"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceKind",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Stateless",
                            "description": "Does not use Service Fabric to make its state highly available or reliable. The value is 0."
                          },
                          {
                            "value": "Stateful",
                            "description": "Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 1."
                          }
                        ]
                      }
                    },
                    "serviceTypeName": {
                      "type": "string",
                      "description": "The name of the service type"
                    },
                    "partitionDescription": {
                      "type": "object",
                      "discriminator": "partitionScheme",
                      "description": "Describes how the service is partitioned.",
                      "required": [
                        "partitionScheme"
                      ],
                      "properties": {
                        "partitionScheme": {
                          "description": "Specifies how the service is partitioned.",
                          "type": "string",
                          "enum": [
                            "Singleton",
                            "UniformInt64Range",
                            "Named"
                          ],
                          "x-ms-enum": {
                            "name": "PartitionScheme",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Singleton",
                                "description": "Indicates that the partition is based on string names, and is a SingletonPartitionScheme object, The value is 0."
                              },
                              {
                                "value": "UniformInt64Range",
                                "description": "Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionScheme object. The value is 1."
                              },
                              {
                                "value": "Named",
                                "description": "Indicates that the partition is based on string names, and is a NamedPartitionScheme object. The value is 2."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "servicePackageActivationMode": {
                      "type": "string",
                      "description": "The activation Mode of the service package",
                      "enum": [
                        "SharedProcess",
                        "ExclusiveProcess"
                      ],
                      "x-ms-enum": {
                        "name": "ServicePackageActivationMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "SharedProcess",
                            "description": "Indicates the application package activation mode will use shared process."
                          },
                          {
                            "value": "ExclusiveProcess",
                            "description": "Indicates the application package activation mode will use exclusive process."
                          }
                        ]
                      }
                    },
                    "serviceDnsName": {
                      "type": "string",
                      "description": "Dns name used for the service. If this is specified, then the DNS name can be used to return the IP addresses of service endpoints for application layer protocols (e.g., HTTP).\nWhen updating serviceDnsName, old name may be temporarily resolvable. However, rely on new name.\nWhen removing serviceDnsName, removed name may temporarily be resolvable. Do not rely on the name being unresolvable.\n"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The request was accepted and the operation will complete asynchronously.",
            "schema": {
              "type": "object",
              "description": "The service resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "The service resource properties.",
                  "required": [
                    "serviceKind",
                    "serviceTypeName",
                    "partitionDescription"
                  ],
                  "discriminator": "serviceKind",
                  "properties": {
                    "placementConstraints": {
                      "type": "string",
                      "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\"."
                    },
                    "correlationScheme": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Creates a particular correlation between services.",
                        "required": [
                          "scheme",
                          "serviceName"
                        ],
                        "properties": {
                          "scheme": {
                            "description": "The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.",
                            "type": "string",
                            "enum": [
                              "AlignedAffinity",
                              "NonAlignedAffinity"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceCorrelationScheme",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "AlignedAffinity",
                                  "description": "Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 0."
                                },
                                {
                                  "value": "NonAlignedAffinity",
                                  "description": "Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 1."
                                }
                              ]
                            }
                          },
                          "serviceName": {
                            "description": "The Arm Resource ID of the service that the correlation relationship is established with.",
                            "type": "string",
                            "x-sf-clientlib": {
                              "typeName": "ServiceName"
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "serviceName"
                      ],
                      "description": "A list that describes the correlation of the service with other services."
                    },
                    "serviceLoadMetrics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Specifies a metric to load balance a service during runtime.",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive."
                          },
                          "weight": {
                            "description": "The service load metric relative weight, compared to other metrics configured for this service, as a number.",
                            "type": "string",
                            "enum": [
                              "Zero",
                              "Low",
                              "Medium",
                              "High"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceLoadMetricWeight",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Zero",
                                  "description": "Disables resource balancing for this metric. This value is zero."
                                },
                                {
                                  "value": "Low",
                                  "description": "Specifies the metric weight of the service load as Low. The value is 1."
                                },
                                {
                                  "value": "Medium",
                                  "description": "Specifies the metric weight of the service load as Medium. The value is 2."
                                },
                                {
                                  "value": "High",
                                  "description": "Specifies the metric weight of the service load as High. The value is 3."
                                }
                              ]
                            }
                          },
                          "primaryDefaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica."
                          },
                          "secondaryDefaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica."
                          },
                          "defaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric."
                          }
                        }
                      },
                      "x-ms-identifiers": [],
                      "description": "The service load metrics is given as an array of ServiceLoadMetric objects."
                    },
                    "servicePlacementPolicies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "discriminator": "type",
                        "description": "Describes the policy to be used for placement of a Service Fabric service.",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The type of placement policy for a service fabric service. Following are the possible values.",
                            "enum": [
                              "InvalidDomain",
                              "RequiredDomain",
                              "PreferredPrimaryDomain",
                              "RequiredDomainDistribution",
                              "NonPartiallyPlaceService"
                            ],
                            "x-ms-enum": {
                              "name": "ServicePlacementPolicyType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "InvalidDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 0."
                                },
                                {
                                  "value": "RequiredDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 1."
                                },
                                {
                                  "value": "PreferredPrimaryDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 2."
                                },
                                {
                                  "value": "RequiredDomainDistribution",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 3."
                                },
                                {
                                  "value": "NonPartiallyPlaceService",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 4."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [],
                      "description": "A list that describes the correlation of the service with other services."
                    },
                    "defaultMoveCost": {
                      "type": "string",
                      "description": "Specifies the move cost for the service.",
                      "enum": [
                        "Zero",
                        "Low",
                        "Medium",
                        "High"
                      ],
                      "x-ms-enum": {
                        "name": "MoveCost",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Zero",
                            "description": "Zero move cost. This value is zero."
                          },
                          {
                            "value": "Low",
                            "description": "Specifies the move cost of the service as Low. The value is 1."
                          },
                          {
                            "value": "Medium",
                            "description": "Specifies the move cost of the service as Medium. The value is 2."
                          },
                          {
                            "value": "High",
                            "description": "Specifies the move cost of the service as High. The value is 3."
                          }
                        ]
                      }
                    },
                    "scalingPolicies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Specifies a metric to load balance a service during runtime.",
                        "required": [
                          "scalingMechanism",
                          "scalingTrigger"
                        ],
                        "properties": {
                          "scalingMechanism": {
                            "description": "Specifies the mechanism associated with this scaling policy",
                            "type": "object",
                            "discriminator": "kind",
                            "required": [
                              "kind"
                            ],
                            "properties": {
                              "kind": {
                                "description": "Specifies the mechanism associated with this scaling policy.",
                                "type": "string",
                                "enum": [
                                  "ScalePartitionInstanceCount",
                                  "AddRemoveIncrementalNamedPartition"
                                ],
                                "x-ms-enum": {
                                  "name": "ServiceScalingMechanismKind",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "ScalePartitionInstanceCount",
                                      "description": "Represents a scaling mechanism for adding or removing instances of stateless service partition. The value is 0."
                                    },
                                    {
                                      "value": "AddRemoveIncrementalNamedPartition",
                                      "description": "Represents a scaling mechanism for adding or removing named partitions of a stateless service. The value is 1."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "scalingTrigger": {
                            "description": "Specifies the trigger associated with this scaling policy.",
                            "type": "object",
                            "discriminator": "kind",
                            "required": [
                              "kind"
                            ],
                            "properties": {
                              "kind": {
                                "description": "Specifies the trigger associated with this scaling policy.",
                                "type": "string",
                                "enum": [
                                  "AveragePartitionLoadTrigger",
                                  "AverageServiceLoadTrigger"
                                ],
                                "x-ms-enum": {
                                  "name": "ServiceScalingTriggerKind",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "AveragePartitionLoadTrigger",
                                      "description": "Represents a scaling trigger related to an average load of a metric/resource of a partition. The value is 0."
                                    },
                                    {
                                      "value": "AverageServiceLoadTrigger",
                                      "description": "Represents a scaling policy related to an average load of a metric/resource of a service. The value is 1."
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [],
                      "description": "Scaling policies for this service."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response"
                    },
                    "serviceKind": {
                      "type": "string",
                      "description": "The kind of service (Stateless or Stateful).",
                      "enum": [
                        "Stateless",
                        "Stateful"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceKind",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Stateless",
                            "description": "Does not use Service Fabric to make its state highly available or reliable. The value is 0."
                          },
                          {
                            "value": "Stateful",
                            "description": "Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 1."
                          }
                        ]
                      }
                    },
                    "serviceTypeName": {
                      "type": "string",
                      "description": "The name of the service type"
                    },
                    "partitionDescription": {
                      "type": "object",
                      "discriminator": "partitionScheme",
                      "description": "Describes how the service is partitioned.",
                      "required": [
                        "partitionScheme"
                      ],
                      "properties": {
                        "partitionScheme": {
                          "description": "Specifies how the service is partitioned.",
                          "type": "string",
                          "enum": [
                            "Singleton",
                            "UniformInt64Range",
                            "Named"
                          ],
                          "x-ms-enum": {
                            "name": "PartitionScheme",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Singleton",
                                "description": "Indicates that the partition is based on string names, and is a SingletonPartitionScheme object, The value is 0."
                              },
                              {
                                "value": "UniformInt64Range",
                                "description": "Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionScheme object. The value is 1."
                              },
                              {
                                "value": "Named",
                                "description": "Indicates that the partition is based on string names, and is a NamedPartitionScheme object. The value is 2."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "servicePackageActivationMode": {
                      "type": "string",
                      "description": "The activation Mode of the service package",
                      "enum": [
                        "SharedProcess",
                        "ExclusiveProcess"
                      ],
                      "x-ms-enum": {
                        "name": "ServicePackageActivationMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "SharedProcess",
                            "description": "Indicates the application package activation mode will use shared process."
                          },
                          {
                            "value": "ExclusiveProcess",
                            "description": "Indicates the application package activation mode will use exclusive process."
                          }
                        ]
                      }
                    },
                    "serviceDnsName": {
                      "type": "string",
                      "description": "Dns name used for the service. If this is specified, then the DNS name can be used to return the IP addresses of service endpoints for application layer protocols (e.g., HTTP).\nWhen updating serviceDnsName, old name may be temporarily resolvable. However, rely on new name.\nWhen removing serviceDnsName, removed name may temporarily be resolvable. Do not rely on the name being unresolvable.\n"
                    }
                  }
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "description": "The URL to get the status of an ongoing long-running operation.",
                "type": "string"
              },
              "Location": {
                "description": "The URL to get the status of a completed long-running operation.",
                "type": "string"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Services"
        ],
        "operationId": "Services_Update",
        "summary": "Updates the tags of a service resource of a given managed cluster.",
        "description": "Updates the tags of a service resource of a given managed cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the service resource in the format of {applicationName}~{serviceName}.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The service resource updated tags.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "Service update parameters",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "description": "Service update request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The service resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Resource location depends on the parent resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "The service resource properties.",
                  "required": [
                    "serviceKind",
                    "serviceTypeName",
                    "partitionDescription"
                  ],
                  "discriminator": "serviceKind",
                  "properties": {
                    "placementConstraints": {
                      "type": "string",
                      "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\"."
                    },
                    "correlationScheme": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Creates a particular correlation between services.",
                        "required": [
                          "scheme",
                          "serviceName"
                        ],
                        "properties": {
                          "scheme": {
                            "description": "The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.",
                            "type": "string",
                            "enum": [
                              "AlignedAffinity",
                              "NonAlignedAffinity"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceCorrelationScheme",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "AlignedAffinity",
                                  "description": "Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 0."
                                },
                                {
                                  "value": "NonAlignedAffinity",
                                  "description": "Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 1."
                                }
                              ]
                            }
                          },
                          "serviceName": {
                            "description": "The Arm Resource ID of the service that the correlation relationship is established with.",
                            "type": "string",
                            "x-sf-clientlib": {
                              "typeName": "ServiceName"
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "serviceName"
                      ],
                      "description": "A list that describes the correlation of the service with other services."
                    },
                    "serviceLoadMetrics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Specifies a metric to load balance a service during runtime.",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive."
                          },
                          "weight": {
                            "description": "The service load metric relative weight, compared to other metrics configured for this service, as a number.",
                            "type": "string",
                            "enum": [
                              "Zero",
                              "Low",
                              "Medium",
                              "High"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceLoadMetricWeight",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Zero",
                                  "description": "Disables resource balancing for this metric. This value is zero."
                                },
                                {
                                  "value": "Low",
                                  "description": "Specifies the metric weight of the service load as Low. The value is 1."
                                },
                                {
                                  "value": "Medium",
                                  "description": "Specifies the metric weight of the service load as Medium. The value is 2."
                                },
                                {
                                  "value": "High",
                                  "description": "Specifies the metric weight of the service load as High. The value is 3."
                                }
                              ]
                            }
                          },
                          "primaryDefaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica."
                          },
                          "secondaryDefaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica."
                          },
                          "defaultLoad": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric."
                          }
                        }
                      },
                      "x-ms-identifiers": [],
                      "description": "The service load metrics is given as an array of ServiceLoadMetric objects."
                    },
                    "servicePlacementPolicies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "discriminator": "type",
                        "description": "Describes the policy to be used for placement of a Service Fabric service.",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The type of placement policy for a service fabric service. Following are the possible values.",
                            "enum": [
                              "InvalidDomain",
                              "RequiredDomain",
                              "PreferredPrimaryDomain",
                              "RequiredDomainDistribution",
                              "NonPartiallyPlaceService"
                            ],
                            "x-ms-enum": {
                              "name": "ServicePlacementPolicyType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "InvalidDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 0."
                                },
                                {
                                  "value": "RequiredDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 1."
                                },
                                {
                                  "value": "PreferredPrimaryDomain",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 2."
                                },
                                {
                                  "value": "RequiredDomainDistribution",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 3."
                                },
                                {
                                  "value": "NonPartiallyPlaceService",
                                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 4."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [],
                      "description": "A list that describes the correlation of the service with other services."
                    },
                    "defaultMoveCost": {
                      "type": "string",
                      "description": "Specifies the move cost for the service.",
                      "enum": [
                        "Zero",
                        "Low",
                        "Medium",
                        "High"
                      ],
                      "x-ms-enum": {
                        "name": "MoveCost",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Zero",
                            "description": "Zero move cost. This value is zero."
                          },
                          {
                            "value": "Low",
                            "description": "Specifies the move cost of the service as Low. The value is 1."
                          },
                          {
                            "value": "Medium",
                            "description": "Specifies the move cost of the service as Medium. The value is 2."
                          },
                          {
                            "value": "High",
                            "description": "Specifies the move cost of the service as High. The value is 3."
                          }
                        ]
                      }
                    },
                    "scalingPolicies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Specifies a metric to load balance a service during runtime.",
                        "required": [
                          "scalingMechanism",
                          "scalingTrigger"
                        ],
                        "properties": {
                          "scalingMechanism": {
                            "description": "Specifies the mechanism associated with this scaling policy",
                            "type": "object",
                            "discriminator": "kind",
                            "required": [
                              "kind"
                            ],
                            "properties": {
                              "kind": {
                                "description": "Specifies the mechanism associated with this scaling policy.",
                                "type": "string",
                                "enum": [
                                  "ScalePartitionInstanceCount",
                                  "AddRemoveIncrementalNamedPartition"
                                ],
                                "x-ms-enum": {
                                  "name": "ServiceScalingMechanismKind",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "ScalePartitionInstanceCount",
                                      "description": "Represents a scaling mechanism for adding or removing instances of stateless service partition. The value is 0."
                                    },
                                    {
                                      "value": "AddRemoveIncrementalNamedPartition",
                                      "description": "Represents a scaling mechanism for adding or removing named partitions of a stateless service. The value is 1."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "scalingTrigger": {
                            "description": "Specifies the trigger associated with this scaling policy.",
                            "type": "object",
                            "discriminator": "kind",
                            "required": [
                              "kind"
                            ],
                            "properties": {
                              "kind": {
                                "description": "Specifies the trigger associated with this scaling policy.",
                                "type": "string",
                                "enum": [
                                  "AveragePartitionLoadTrigger",
                                  "AverageServiceLoadTrigger"
                                ],
                                "x-ms-enum": {
                                  "name": "ServiceScalingTriggerKind",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "AveragePartitionLoadTrigger",
                                      "description": "Represents a scaling trigger related to an average load of a metric/resource of a partition. The value is 0."
                                    },
                                    {
                                      "value": "AverageServiceLoadTrigger",
                                      "description": "Represents a scaling policy related to an average load of a metric/resource of a service. The value is 1."
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [],
                      "description": "Scaling policies for this service."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The current deployment or provisioning state, which only appears in the response"
                    },
                    "serviceKind": {
                      "type": "string",
                      "description": "The kind of service (Stateless or Stateful).",
                      "enum": [
                        "Stateless",
                        "Stateful"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceKind",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Stateless",
                            "description": "Does not use Service Fabric to make its state highly available or reliable. The value is 0."
                          },
                          {
                            "value": "Stateful",
                            "description": "Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 1."
                          }
                        ]
                      }
                    },
                    "serviceTypeName": {
                      "type": "string",
                      "description": "The name of the service type"
                    },
                    "partitionDescription": {
                      "type": "object",
                      "discriminator": "partitionScheme",
                      "description": "Describes how the service is partitioned.",
                      "required": [
                        "partitionScheme"
                      ],
                      "properties": {
                        "partitionScheme": {
                          "description": "Specifies how the service is partitioned.",
                          "type": "string",
                          "enum": [
                            "Singleton",
                            "UniformInt64Range",
                            "Named"
                          ],
                          "x-ms-enum": {
                            "name": "PartitionScheme",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Singleton",
                                "description": "Indicates that the partition is based on string names, and is a SingletonPartitionScheme object, The value is 0."
                              },
                              {
                                "value": "UniformInt64Range",
                                "description": "Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionScheme object. The value is 1."
                              },
                              {
                                "value": "Named",
                                "description": "Indicates that the partition is based on string names, and is a NamedPartitionScheme object. The value is 2."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "servicePackageActivationMode": {
                      "type": "string",
                      "description": "The activation Mode of the service package",
                      "enum": [
                        "SharedProcess",
                        "ExclusiveProcess"
                      ],
                      "x-ms-enum": {
                        "name": "ServicePackageActivationMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "SharedProcess",
                            "description": "Indicates the application package activation mode will use shared process."
                          },
                          {
                            "value": "ExclusiveProcess",
                            "description": "Indicates the application package activation mode will use exclusive process."
                          }
                        ]
                      }
                    },
                    "serviceDnsName": {
                      "type": "string",
                      "description": "Dns name used for the service. If this is specified, then the DNS name can be used to return the IP addresses of service endpoints for application layer protocols (e.g., HTTP).\nWhen updating serviceDnsName, old name may be temporarily resolvable. However, rely on new name.\nWhen removing serviceDnsName, removed name may temporarily be resolvable. Do not rely on the name being unresolvable.\n"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Service"
        ],
        "operationId": "Services_Delete",
        "summary": "Deletes a Service Fabric managed service resource.",
        "description": "Delete a Service Fabric managed service resource with the specified name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "The name of the service resource in the format of {applicationName}~{serviceName}.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully."
          },
          "202": {
            "description": "The request was accepted and the operation will complete asynchronously.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "The URL to get the status of an ongoing long-running operation.",
                "type": "string"
              },
              "Location": {
                "description": "The URL to get the status of a completed long-running operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The resource was not found."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedclusters/{clusterName}/applications/{applicationName}/services": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Services_ListByApplications",
        "summary": "Gets the list of service resources created in the specified Service Fabric managed application resource.",
        "description": "Gets all service resources created or in the process of being created in the Service Fabric managed application resource.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "applicationName",
            "in": "path",
            "description": "The name of the application resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The list of service resources.",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "The service resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Azure resource identifier.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "Azure resource name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "Azure resource type.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "Resource location depends on the parent resource.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Azure resource tags.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource."
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource."
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)."
                          }
                        }
                      },
                      "properties": {
                        "type": "object",
                        "description": "The service resource properties.",
                        "required": [
                          "serviceKind",
                          "serviceTypeName",
                          "partitionDescription"
                        ],
                        "discriminator": "serviceKind",
                        "properties": {
                          "placementConstraints": {
                            "type": "string",
                            "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\"."
                          },
                          "correlationScheme": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Creates a particular correlation between services.",
                              "required": [
                                "scheme",
                                "serviceName"
                              ],
                              "properties": {
                                "scheme": {
                                  "description": "The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.",
                                  "type": "string",
                                  "enum": [
                                    "AlignedAffinity",
                                    "NonAlignedAffinity"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ServiceCorrelationScheme",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "AlignedAffinity",
                                        "description": "Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 0."
                                      },
                                      {
                                        "value": "NonAlignedAffinity",
                                        "description": "Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 1."
                                      }
                                    ]
                                  }
                                },
                                "serviceName": {
                                  "description": "The Arm Resource ID of the service that the correlation relationship is established with.",
                                  "type": "string",
                                  "x-sf-clientlib": {
                                    "typeName": "ServiceName"
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "serviceName"
                            ],
                            "description": "A list that describes the correlation of the service with other services."
                          },
                          "serviceLoadMetrics": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Specifies a metric to load balance a service during runtime.",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive."
                                },
                                "weight": {
                                  "description": "The service load metric relative weight, compared to other metrics configured for this service, as a number.",
                                  "type": "string",
                                  "enum": [
                                    "Zero",
                                    "Low",
                                    "Medium",
                                    "High"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ServiceLoadMetricWeight",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "Zero",
                                        "description": "Disables resource balancing for this metric. This value is zero."
                                      },
                                      {
                                        "value": "Low",
                                        "description": "Specifies the metric weight of the service load as Low. The value is 1."
                                      },
                                      {
                                        "value": "Medium",
                                        "description": "Specifies the metric weight of the service load as Medium. The value is 2."
                                      },
                                      {
                                        "value": "High",
                                        "description": "Specifies the metric weight of the service load as High. The value is 3."
                                      }
                                    ]
                                  }
                                },
                                "primaryDefaultLoad": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica."
                                },
                                "secondaryDefaultLoad": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica."
                                },
                                "defaultLoad": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric."
                                }
                              }
                            },
                            "x-ms-identifiers": [],
                            "description": "The service load metrics is given as an array of ServiceLoadMetric objects."
                          },
                          "servicePlacementPolicies": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "discriminator": "type",
                              "description": "Describes the policy to be used for placement of a Service Fabric service.",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "The type of placement policy for a service fabric service. Following are the possible values.",
                                  "enum": [
                                    "InvalidDomain",
                                    "RequiredDomain",
                                    "PreferredPrimaryDomain",
                                    "RequiredDomainDistribution",
                                    "NonPartiallyPlaceService"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ServicePlacementPolicyType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "InvalidDomain",
                                        "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 0."
                                      },
                                      {
                                        "value": "RequiredDomain",
                                        "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 1."
                                      },
                                      {
                                        "value": "PreferredPrimaryDomain",
                                        "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 2."
                                      },
                                      {
                                        "value": "RequiredDomainDistribution",
                                        "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 3."
                                      },
                                      {
                                        "value": "NonPartiallyPlaceService",
                                        "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 4."
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [],
                            "description": "A list that describes the correlation of the service with other services."
                          },
                          "defaultMoveCost": {
                            "type": "string",
                            "description": "Specifies the move cost for the service.",
                            "enum": [
                              "Zero",
                              "Low",
                              "Medium",
                              "High"
                            ],
                            "x-ms-enum": {
                              "name": "MoveCost",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Zero",
                                  "description": "Zero move cost. This value is zero."
                                },
                                {
                                  "value": "Low",
                                  "description": "Specifies the move cost of the service as Low. The value is 1."
                                },
                                {
                                  "value": "Medium",
                                  "description": "Specifies the move cost of the service as Medium. The value is 2."
                                },
                                {
                                  "value": "High",
                                  "description": "Specifies the move cost of the service as High. The value is 3."
                                }
                              ]
                            }
                          },
                          "scalingPolicies": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Specifies a metric to load balance a service during runtime.",
                              "required": [
                                "scalingMechanism",
                                "scalingTrigger"
                              ],
                              "properties": {
                                "scalingMechanism": {
                                  "description": "Specifies the mechanism associated with this scaling policy",
                                  "type": "object",
                                  "discriminator": "kind",
                                  "required": [
                                    "kind"
                                  ],
                                  "properties": {
                                    "kind": {
                                      "description": "Specifies the mechanism associated with this scaling policy.",
                                      "type": "string",
                                      "enum": [
                                        "ScalePartitionInstanceCount",
                                        "AddRemoveIncrementalNamedPartition"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ServiceScalingMechanismKind",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "value": "ScalePartitionInstanceCount",
                                            "description": "Represents a scaling mechanism for adding or removing instances of stateless service partition. The value is 0."
                                          },
                                          {
                                            "value": "AddRemoveIncrementalNamedPartition",
                                            "description": "Represents a scaling mechanism for adding or removing named partitions of a stateless service. The value is 1."
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "scalingTrigger": {
                                  "description": "Specifies the trigger associated with this scaling policy.",
                                  "type": "object",
                                  "discriminator": "kind",
                                  "required": [
                                    "kind"
                                  ],
                                  "properties": {
                                    "kind": {
                                      "description": "Specifies the trigger associated with this scaling policy.",
                                      "type": "string",
                                      "enum": [
                                        "AveragePartitionLoadTrigger",
                                        "AverageServiceLoadTrigger"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ServiceScalingTriggerKind",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "value": "AveragePartitionLoadTrigger",
                                            "description": "Represents a scaling trigger related to an average load of a metric/resource of a partition. The value is 0."
                                          },
                                          {
                                            "value": "AverageServiceLoadTrigger",
                                            "description": "Represents a scaling policy related to an average load of a metric/resource of a service. The value is 1."
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [],
                            "description": "Scaling policies for this service."
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The current deployment or provisioning state, which only appears in the response"
                          },
                          "serviceKind": {
                            "type": "string",
                            "description": "The kind of service (Stateless or Stateful).",
                            "enum": [
                              "Stateless",
                              "Stateful"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceKind",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Stateless",
                                  "description": "Does not use Service Fabric to make its state highly available or reliable. The value is 0."
                                },
                                {
                                  "value": "Stateful",
                                  "description": "Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 1."
                                }
                              ]
                            }
                          },
                          "serviceTypeName": {
                            "type": "string",
                            "description": "The name of the service type"
                          },
                          "partitionDescription": {
                            "type": "object",
                            "discriminator": "partitionScheme",
                            "description": "Describes how the service is partitioned.",
                            "required": [
                              "partitionScheme"
                            ],
                            "properties": {
                              "partitionScheme": {
                                "description": "Specifies how the service is partitioned.",
                                "type": "string",
                                "enum": [
                                  "Singleton",
                                  "UniformInt64Range",
                                  "Named"
                                ],
                                "x-ms-enum": {
                                  "name": "PartitionScheme",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Singleton",
                                      "description": "Indicates that the partition is based on string names, and is a SingletonPartitionScheme object, The value is 0."
                                    },
                                    {
                                      "value": "UniformInt64Range",
                                      "description": "Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionScheme object. The value is 1."
                                    },
                                    {
                                      "value": "Named",
                                      "description": "Indicates that the partition is based on string names, and is a NamedPartitionScheme object. The value is 2."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "servicePackageActivationMode": {
                            "type": "string",
                            "description": "The activation Mode of the service package",
                            "enum": [
                              "SharedProcess",
                              "ExclusiveProcess"
                            ],
                            "x-ms-enum": {
                              "name": "ServicePackageActivationMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "SharedProcess",
                                  "description": "Indicates the application package activation mode will use shared process."
                                },
                                {
                                  "value": "ExclusiveProcess",
                                  "description": "Indicates the application package activation mode will use exclusive process."
                                }
                              ]
                            }
                          },
                          "serviceDnsName": {
                            "type": "string",
                            "description": "Dns name used for the service. If this is specified, then the DNS name can be used to return the IP addresses of service endpoints for application layer protocols (e.g., HTTP).\nWhen updating serviceDnsName, old name may be temporarily resolvable. However, rely on new name.\nWhen removing serviceDnsName, removed name may temporarily be resolvable. Do not rely on the name being unresolvable.\n"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of service list results if there are any.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters": {
      "get": {
        "operationId": "ManagedClusters_ListByResourceGroup",
        "summary": "Gets the list of Service Fabric cluster resources created in the specified resource group.",
        "description": "Gets all Service Fabric cluster resources created or in the process of being created in the resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "tags": [
          "ManagedCluster"
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "sku"
                    ],
                    "description": "The managed cluster resource\n",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Azure resource identifier.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "Azure resource name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "Azure resource type.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "Azure resource location.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "description": "Azure resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "etag": {
                        "type": "string",
                        "description": "Azure resource etag.",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource."
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource."
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)."
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The managed cluster resource properties",
                        "type": "object",
                        "required": [
                          "dnsName",
                          "adminUserName"
                        ],
                        "properties": {
                          "dnsName": {
                            "type": "string",
                            "description": "The cluster dns name."
                          },
                          "fqdn": {
                            "type": "string",
                            "description": "The fully qualified domain name associated with the public load balancer of the cluster.",
                            "readOnly": true
                          },
                          "ipv4Address": {
                            "type": "string",
                            "description": "The IPv4 address associated with the public load balancer of the cluster.",
                            "readOnly": true
                          },
                          "clusterId": {
                            "type": "string",
                            "description": "A service generated unique identifier for the cluster resource.",
                            "readOnly": true
                          },
                          "clusterState": {
                            "readOnly": true,
                            "description": "The current state of the cluster.",
                            "type": "string",
                            "enum": [
                              "WaitingForNodes",
                              "Deploying",
                              "BaselineUpgrade",
                              "Upgrading",
                              "UpgradeFailed",
                              "Ready"
                            ],
                            "x-ms-enum": {
                              "name": "ClusterState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "WaitingForNodes",
                                  "description": "Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it."
                                },
                                {
                                  "value": "Deploying",
                                  "description": "Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up."
                                },
                                {
                                  "value": "BaselineUpgrade",
                                  "description": "Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time."
                                },
                                {
                                  "value": "Upgrading",
                                  "description": "Indicates that the cluster is being upgraded with the user provided configuration."
                                },
                                {
                                  "value": "UpgradeFailed",
                                  "description": "Indicates that the last upgrade for the cluster has failed."
                                },
                                {
                                  "value": "Ready",
                                  "description": "Indicates that the cluster is in a stable state."
                                }
                              ]
                            }
                          },
                          "clusterCertificateThumbprints": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of thumbprints of the cluster certificates.",
                            "readOnly": true
                          },
                          "clientConnectionPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The port used for client connections to the cluster.",
                            "default": 19000
                          },
                          "httpGatewayConnectionPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The port used for HTTP connections to the cluster.",
                            "default": 19080
                          },
                          "adminUserName": {
                            "type": "string",
                            "description": "VM admin user name."
                          },
                          "adminPassword": {
                            "type": "string",
                            "x-ms-secret": true,
                            "format": "password",
                            "description": "VM admin user password."
                          },
                          "loadBalancingRules": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "frontendPort",
                                "backendPort",
                                "protocol",
                                "probeProtocol"
                              ],
                              "properties": {
                                "frontendPort": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 1 and 65534.",
                                  "minimum": 1,
                                  "maximum": 65534
                                },
                                "backendPort": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.",
                                  "minimum": 1,
                                  "maximum": 65534
                                },
                                "protocol": {
                                  "type": "string",
                                  "description": "The reference to the transport protocol used by the load balancing rule.",
                                  "enum": [
                                    "tcp",
                                    "udp"
                                  ],
                                  "x-ms-enum": {
                                    "name": "protocol",
                                    "modelAsString": true
                                  }
                                },
                                "probePort": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The prob port used by the load balancing rule. Acceptable values are between 1 and 65535.",
                                  "minimum": 1,
                                  "maximum": 65534
                                },
                                "probeProtocol": {
                                  "type": "string",
                                  "description": "the reference to the load balancer probe used by the load balancing rule.",
                                  "enum": [
                                    "tcp",
                                    "http",
                                    "https"
                                  ],
                                  "x-ms-enum": {
                                    "name": "probeProtocol",
                                    "modelAsString": true
                                  }
                                },
                                "probeRequestPath": {
                                  "type": "string",
                                  "description": "The probe request path. Only supported for HTTP/HTTPS probes."
                                },
                                "loadDistribution": {
                                  "type": "string",
                                  "description": "The load distribution policy for this rule."
                                }
                              },
                              "description": "Describes a load balancing rule."
                            },
                            "x-ms-identifiers": [],
                            "description": "Load balancing rules that are applied to the public load balancer of the cluster."
                          },
                          "allowRdpAccess": {
                            "type": "boolean",
                            "description": "Setting this to true enables RDP access to the VM. The default NSG rule opens RDP port to Internet which can be overridden with custom Network Security Rules. The default value for this setting is false."
                          },
                          "networkSecurityRules": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "name",
                                "protocol",
                                "access",
                                "priority",
                                "direction"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Network security rule name."
                                },
                                "description": {
                                  "type": "string",
                                  "description": "Network security rule description."
                                },
                                "protocol": {
                                  "type": "string",
                                  "description": "Network protocol this rule applies to.",
                                  "enum": [
                                    "http",
                                    "https",
                                    "tcp",
                                    "udp",
                                    "icmp",
                                    "ah",
                                    "esp"
                                  ],
                                  "x-ms-enum": {
                                    "name": "nsgProtocol",
                                    "modelAsString": true
                                  }
                                },
                                "sourceAddressPrefixes": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "The CIDR or source IP ranges."
                                },
                                "destinationAddressPrefixes": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "The destination address prefixes. CIDR or destination IP ranges."
                                },
                                "sourcePortRanges": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "The source port ranges."
                                },
                                "destinationPortRanges": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "The destination port ranges."
                                },
                                "sourceAddressPrefix": {
                                  "type": "string",
                                  "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from."
                                },
                                "destinationAddressPrefix": {
                                  "type": "string",
                                  "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."
                                },
                                "sourcePortRange": {
                                  "type": "string",
                                  "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                                },
                                "destinationPortRange": {
                                  "type": "string",
                                  "description": "he destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                                },
                                "access": {
                                  "type": "string",
                                  "description": "The network traffic is allowed or denied.",
                                  "enum": [
                                    "allow",
                                    "deny"
                                  ],
                                  "x-ms-enum": {
                                    "name": "access",
                                    "modelAsString": true
                                  }
                                },
                                "priority": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The priority of the rule. The value can be in the range 1000 to 3000. Values outside this range are reserved for Service Fabric ManagerCluster Resource Provider. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                                  "minimum": 1000,
                                  "maximum": 3000
                                },
                                "direction": {
                                  "type": "string",
                                  "description": "Network security rule direction.",
                                  "enum": [
                                    "inbound",
                                    "outbound"
                                  ],
                                  "x-ms-enum": {
                                    "name": "direction",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "description": "Describes a network security rule."
                            },
                            "x-ms-identifiers": [],
                            "description": "Custom Network Security Rules that are applied to the Virtual Network of the cluster."
                          },
                          "clients": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "isAdmin"
                              ],
                              "properties": {
                                "isAdmin": {
                                  "type": "boolean",
                                  "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                                },
                                "thumbprint": {
                                  "type": "string",
                                  "description": "Certificate thumbprint."
                                },
                                "commonName": {
                                  "type": "string",
                                  "description": "Certificate common name."
                                },
                                "issuerThumbprint": {
                                  "type": "string",
                                  "description": "Issuer thumbprint for the certificate. Only used together with CommonName."
                                }
                              },
                              "description": "Client certificate definition."
                            },
                            "x-ms-identifiers": [],
                            "description": "Client certificates that are allowed to manage the cluster."
                          },
                          "azureActiveDirectory": {
                            "description": "The AAD authentication settings of the cluster.",
                            "type": "object",
                            "properties": {
                              "tenantId": {
                                "type": "string",
                                "description": "Azure active directory tenant id."
                              },
                              "clusterApplication": {
                                "type": "string",
                                "description": "Azure active directory cluster application id."
                              },
                              "clientApplication": {
                                "type": "string",
                                "description": "Azure active directory client application id."
                              }
                            }
                          },
                          "fabricSettings": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "name",
                                "parameters"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The section name of the fabric settings."
                                },
                                "parameters": {
                                  "type": "array",
                                  "description": "The collection of parameters in the section.",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "value"
                                    ],
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The parameter name of fabric setting."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "The parameter value of fabric setting."
                                      }
                                    },
                                    "description": "Describes a parameter in fabric settings of the cluster."
                                  },
                                  "x-ms-identifiers": [
                                    "name"
                                  ]
                                }
                              },
                              "description": "Describes a section in the fabric settings of the cluster."
                            },
                            "x-ms-identifiers": [],
                            "description": "The list of custom fabric settings to configure the cluster."
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "description": "The provisioning state of the managed cluster resource.",
                            "type": "string",
                            "enum": [
                              "None",
                              "Creating",
                              "Created",
                              "Updating",
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Deleting",
                              "Deleted",
                              "Other"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedResourceProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "clusterCodeVersion": {
                            "type": "string",
                            "description": "The Service Fabric runtime version of the cluster. This property is required when **clusterUpgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**."
                          },
                          "clusterUpgradeMode": {
                            "type": "string",
                            "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.\n",
                            "enum": [
                              "Automatic",
                              "Manual"
                            ],
                            "default": "Automatic",
                            "x-ms-enum": {
                              "name": "ClusterUpgradeMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Automatic",
                                  "description": "The cluster will be automatically upgraded to the latest Service Fabric runtime version, **clusterUpgradeCadence** will determine when the upgrade starts after the new version becomes available."
                                },
                                {
                                  "value": "Manual",
                                  "description": "The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource."
                                }
                              ]
                            }
                          },
                          "clusterUpgradeCadence": {
                            "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **clusterUpgradeMode** is set to 'Automatic'.",
                            "type": "string",
                            "enum": [
                              "Wave0",
                              "Wave1",
                              "Wave2"
                            ],
                            "x-ms-enum": {
                              "name": "clusterUpgradeCadence",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Wave0",
                                  "description": "Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters."
                                },
                                {
                                  "value": "Wave1",
                                  "description": "Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters."
                                },
                                {
                                  "value": "Wave2",
                                  "description": "Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters."
                                }
                              ]
                            }
                          },
                          "addonFeatures": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "Available cluster add-on features",
                              "enum": [
                                "DnsService",
                                "BackupRestoreService",
                                "ResourceMonitorService"
                              ],
                              "x-ms-enum": {
                                "name": "ManagedClusterAddOnFeature",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "DnsService",
                                    "description": "Dns service"
                                  },
                                  {
                                    "value": "BackupRestoreService",
                                    "description": "Backup and restore service"
                                  },
                                  {
                                    "value": "ResourceMonitorService",
                                    "description": "Resource monitor service"
                                  }
                                ]
                              }
                            },
                            "description": "List of add-on features to enable on the cluster."
                          },
                          "enableAutoOSUpgrade": {
                            "type": "boolean",
                            "description": "Setting this to true enables automatic OS upgrade for the node types that are created using any platform OS image with version 'latest'. The default value for this setting is false."
                          },
                          "zonalResiliency": {
                            "type": "boolean",
                            "description": "Indicates if the cluster has zone resiliency.",
                            "default": false
                          },
                          "applicationTypeVersionsCleanupPolicy": {
                            "description": "The policy used to clean up unused versions.",
                            "type": "object",
                            "required": [
                              "maxUnusedVersionsToKeep"
                            ],
                            "properties": {
                              "maxUnusedVersionsToKeep": {
                                "type": "integer",
                                "format": "int32",
                                "minimum": 0,
                                "description": "Number of unused versions per application type to keep."
                              }
                            }
                          },
                          "enableIpv6": {
                            "type": "boolean",
                            "description": "Setting this to true creates IPv6 address space for the default VNet used by the cluster. This setting cannot be changed once the cluster is created. The default value for this setting is false."
                          },
                          "subnetId": {
                            "type": "string",
                            "description": "If specified, the node types for the cluster are created in this subnet instead of the default VNet. The **networkSecurityRules** specified for the cluster are also applied to this subnet. This setting cannot be changed once the cluster is created."
                          },
                          "ipTags": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "ipTagType",
                                "tag"
                              ],
                              "properties": {
                                "ipTagType": {
                                  "type": "string",
                                  "description": "IP tag type. Example: FirstPartyUsage."
                                },
                                "tag": {
                                  "type": "string",
                                  "description": "IP tag associated with the public IP. Example: SQL, Storage etc."
                                }
                              },
                              "description": "The IP tag associated with the public IP address."
                            },
                            "x-ms-identifiers": [],
                            "description": "The list of IP tags associated with the default public IP address of the cluster."
                          },
                          "ipv6Address": {
                            "type": "string",
                            "description": "IPv6 address for the cluster if IPv6 is enabled.",
                            "readOnly": true
                          },
                          "enableServicePublicIP": {
                            "type": "boolean",
                            "description": "Setting this to true will link the IPv4 address as the ServicePublicIP of the IPv6 address. It can only be set to True if IPv6 is enabled on the cluster."
                          },
                          "auxiliarySubnets": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Subnet name."
                                },
                                "enableIpv6": {
                                  "type": "boolean",
                                  "description": "Indicates wether to enable Ipv6 or not. If not provided, it will take the same configuration as the cluster."
                                },
                                "privateEndpointNetworkPolicies": {
                                  "type": "string",
                                  "description": "Enable or Disable apply network policies on private end point in the subnet.",
                                  "enum": [
                                    "enabled",
                                    "disabled"
                                  ],
                                  "x-ms-enum": {
                                    "name": "privateEndpointNetworkPolicies",
                                    "modelAsString": true
                                  }
                                },
                                "privateLinkServiceNetworkPolicies": {
                                  "type": "string",
                                  "description": "Enable or Disable apply network policies on private link service in the subnet.",
                                  "enum": [
                                    "enabled",
                                    "disabled"
                                  ],
                                  "x-ms-enum": {
                                    "name": "privateLinkServiceNetworkPolicies",
                                    "modelAsString": true
                                  }
                                },
                                "networkSecurityGroupId": {
                                  "type": "string",
                                  "description": "Full resource id for the network security group."
                                }
                              },
                              "description": "Describes a Subnet."
                            },
                            "x-ms-identifiers": [],
                            "description": "Auxiliary subnets for the cluster."
                          },
                          "serviceEndpoints": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "service"
                              ],
                              "properties": {
                                "service": {
                                  "type": "string",
                                  "description": "The type of the endpoint service."
                                },
                                "locations": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "A list of locations."
                                }
                              },
                              "description": "The service endpoint properties."
                            },
                            "x-ms-identifiers": [],
                            "description": "Service endpoints for subnets in the cluster."
                          },
                          "zonalUpdateMode": {
                            "description": "Indicates the update mode for Cross Az clusters.",
                            "type": "string",
                            "enum": [
                              "Standard",
                              "Fast"
                            ],
                            "x-ms-enum": {
                              "name": "ZonalUpdateMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Standard",
                                  "description": "The cluster will use 5 upgrade domains for Cross Az Node types."
                                },
                                {
                                  "value": "Fast",
                                  "description": "The cluster will use a maximum of 3 upgrade domains per zone instead of 5 for Cross Az Node types for faster deployments."
                                }
                              ]
                            }
                          },
                          "useCustomVnet": {
                            "type": "boolean",
                            "description": "For new clusters, this parameter indicates that it uses Bring your own VNet, but the subnet is specified at node type level; and for such clusters, the subnetId property is required for node types."
                          },
                          "publicIPPrefixId": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Network/publicIPPrefixes"
                                }
                              ]
                            },
                            "description": "Specify the resource id of a public IPv4 prefix that the load balancer will allocate a public IPv4 address from. This setting cannot be changed once the cluster is created."
                          },
                          "publicIPv6PrefixId": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Network/publicIPPrefixes"
                                }
                              ]
                            },
                            "description": "Specify the resource id of a public IPv6 prefix that the load balancer will allocate a public IPv6 address from. This setting cannot be changed once the cluster is created."
                          },
                          "ddosProtectionPlanId": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Network/ddosProtectionPlans"
                                }
                              ]
                            },
                            "description": "Specify the resource id of a DDoS network protection plan that will be associated with the virtual network of the cluster."
                          },
                          "upgradeDescription": {
                            "description": "The policy to use when upgrading the cluster.",
                            "type": "object",
                            "properties": {
                              "forceRestart": {
                                "type": "boolean",
                                "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data)."
                              },
                              "healthPolicy": {
                                "description": "The cluster health policy defines a health policy used to evaluate the health of the cluster during a cluster upgrade.",
                                "type": "object",
                                "required": [
                                  "maxPercentUnhealthyNodes",
                                  "maxPercentUnhealthyApplications"
                                ],
                                "properties": {
                                  "maxPercentUnhealthyNodes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.\n",
                                    "default": 0,
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentUnhealthyApplications": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.\nThe computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.\n",
                                    "default": 0,
                                    "minimum": 0,
                                    "maximum": 100
                                  }
                                }
                              },
                              "deltaHealthPolicy": {
                                "description": "The cluster delta health policy defines a health policy used to evaluate the health of the cluster during a cluster upgrade.",
                                "type": "object",
                                "required": [
                                  "maxPercentDeltaUnhealthyNodes"
                                ],
                                "properties": {
                                  "maxPercentDeltaUnhealthyNodes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentDeltaUnhealthyApplications": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.\nNOTE: This value will overwrite the value specified in properties.UpgradeDescription.HealthPolicy.MaxPercentUnhealthyApplications\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  }
                                }
                              },
                              "monitoringPolicy": {
                                "description": "The cluster monitoring policy describes the parameters for monitoring an upgrade in Monitored mode.",
                                "type": "object",
                                "required": [
                                  "healthCheckWaitDuration",
                                  "healthCheckStableDuration",
                                  "healthCheckRetryTimeout",
                                  "upgradeTimeout",
                                  "upgradeDomainTimeout"
                                ],
                                "properties": {
                                  "healthCheckWaitDuration": {
                                    "type": "string",
                                    "x-ms-format": "duration-constant",
                                    "description": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                                  },
                                  "healthCheckStableDuration": {
                                    "type": "string",
                                    "x-ms-format": "duration-constant",
                                    "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                                  },
                                  "healthCheckRetryTimeout": {
                                    "type": "string",
                                    "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                                  },
                                  "upgradeTimeout": {
                                    "type": "string",
                                    "description": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                                  },
                                  "upgradeDomainTimeout": {
                                    "type": "string",
                                    "description": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                                  }
                                }
                              },
                              "upgradeReplicaSetCheckTimeout": {
                                "type": "string",
                                "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues.\nWhen this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues.\nThe timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.\nThis value must be between 00:00:00 and 49710.06:28:15 (unsigned 32 bit integer for seconds)\n"
                              }
                            }
                          },
                          "httpGatewayTokenAuthConnectionPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The port used for token-auth based HTTPS connections to the cluster. Cannot be set to the same port as HttpGatewayEndpoint."
                          },
                          "enableHttpGatewayExclusiveAuthMode": {
                            "type": "boolean",
                            "description": "If true, token-based authentication is not allowed on the HttpGatewayEndpoint. This is required to support TLS versions 1.3 and above. If token-based authentication is used, HttpGatewayTokenAuthConnectionPort must be defined."
                          }
                        }
                      },
                      "sku": {
                        "description": "The sku of the managed cluster",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Sku Name.",
                            "type": "string",
                            "enum": [
                              "Basic",
                              "Standard"
                            ],
                            "x-ms-enum": {
                              "name": "SkuName",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Basic",
                                  "description": "Basic requires a minimum of 3 nodes and allows only 1 node type."
                                },
                                {
                                  "value": "Standard",
                                  "description": "Requires a minimum of 5 nodes and allows 1 or more node type."
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to use for getting the next set of results."
                }
              },
              "description": "Managed Cluster list results"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/managedClusters": {
      "get": {
        "operationId": "ManagedClusters_ListBySubscription",
        "summary": "Gets the list of Service Fabric cluster resources created in the specified subscription.",
        "description": "Gets all Service Fabric cluster resources created or in the process of being created in the subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "tags": [
          "ManagedCluster"
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "sku"
                    ],
                    "description": "The managed cluster resource\n",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Azure resource identifier.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "Azure resource name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "Azure resource type.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "Azure resource location.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "tags": {
                        "type": "object",
                        "description": "Azure resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "etag": {
                        "type": "string",
                        "description": "Azure resource etag.",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource."
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource."
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)."
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The managed cluster resource properties",
                        "type": "object",
                        "required": [
                          "dnsName",
                          "adminUserName"
                        ],
                        "properties": {
                          "dnsName": {
                            "type": "string",
                            "description": "The cluster dns name."
                          },
                          "fqdn": {
                            "type": "string",
                            "description": "The fully qualified domain name associated with the public load balancer of the cluster.",
                            "readOnly": true
                          },
                          "ipv4Address": {
                            "type": "string",
                            "description": "The IPv4 address associated with the public load balancer of the cluster.",
                            "readOnly": true
                          },
                          "clusterId": {
                            "type": "string",
                            "description": "A service generated unique identifier for the cluster resource.",
                            "readOnly": true
                          },
                          "clusterState": {
                            "readOnly": true,
                            "description": "The current state of the cluster.",
                            "type": "string",
                            "enum": [
                              "WaitingForNodes",
                              "Deploying",
                              "BaselineUpgrade",
                              "Upgrading",
                              "UpgradeFailed",
                              "Ready"
                            ],
                            "x-ms-enum": {
                              "name": "ClusterState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "WaitingForNodes",
                                  "description": "Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it."
                                },
                                {
                                  "value": "Deploying",
                                  "description": "Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up."
                                },
                                {
                                  "value": "BaselineUpgrade",
                                  "description": "Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time."
                                },
                                {
                                  "value": "Upgrading",
                                  "description": "Indicates that the cluster is being upgraded with the user provided configuration."
                                },
                                {
                                  "value": "UpgradeFailed",
                                  "description": "Indicates that the last upgrade for the cluster has failed."
                                },
                                {
                                  "value": "Ready",
                                  "description": "Indicates that the cluster is in a stable state."
                                }
                              ]
                            }
                          },
                          "clusterCertificateThumbprints": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of thumbprints of the cluster certificates.",
                            "readOnly": true
                          },
                          "clientConnectionPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The port used for client connections to the cluster.",
                            "default": 19000
                          },
                          "httpGatewayConnectionPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The port used for HTTP connections to the cluster.",
                            "default": 19080
                          },
                          "adminUserName": {
                            "type": "string",
                            "description": "VM admin user name."
                          },
                          "adminPassword": {
                            "type": "string",
                            "x-ms-secret": true,
                            "format": "password",
                            "description": "VM admin user password."
                          },
                          "loadBalancingRules": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "frontendPort",
                                "backendPort",
                                "protocol",
                                "probeProtocol"
                              ],
                              "properties": {
                                "frontendPort": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 1 and 65534.",
                                  "minimum": 1,
                                  "maximum": 65534
                                },
                                "backendPort": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.",
                                  "minimum": 1,
                                  "maximum": 65534
                                },
                                "protocol": {
                                  "type": "string",
                                  "description": "The reference to the transport protocol used by the load balancing rule.",
                                  "enum": [
                                    "tcp",
                                    "udp"
                                  ],
                                  "x-ms-enum": {
                                    "name": "protocol",
                                    "modelAsString": true
                                  }
                                },
                                "probePort": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The prob port used by the load balancing rule. Acceptable values are between 1 and 65535.",
                                  "minimum": 1,
                                  "maximum": 65534
                                },
                                "probeProtocol": {
                                  "type": "string",
                                  "description": "the reference to the load balancer probe used by the load balancing rule.",
                                  "enum": [
                                    "tcp",
                                    "http",
                                    "https"
                                  ],
                                  "x-ms-enum": {
                                    "name": "probeProtocol",
                                    "modelAsString": true
                                  }
                                },
                                "probeRequestPath": {
                                  "type": "string",
                                  "description": "The probe request path. Only supported for HTTP/HTTPS probes."
                                },
                                "loadDistribution": {
                                  "type": "string",
                                  "description": "The load distribution policy for this rule."
                                }
                              },
                              "description": "Describes a load balancing rule."
                            },
                            "x-ms-identifiers": [],
                            "description": "Load balancing rules that are applied to the public load balancer of the cluster."
                          },
                          "allowRdpAccess": {
                            "type": "boolean",
                            "description": "Setting this to true enables RDP access to the VM. The default NSG rule opens RDP port to Internet which can be overridden with custom Network Security Rules. The default value for this setting is false."
                          },
                          "networkSecurityRules": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "name",
                                "protocol",
                                "access",
                                "priority",
                                "direction"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Network security rule name."
                                },
                                "description": {
                                  "type": "string",
                                  "description": "Network security rule description."
                                },
                                "protocol": {
                                  "type": "string",
                                  "description": "Network protocol this rule applies to.",
                                  "enum": [
                                    "http",
                                    "https",
                                    "tcp",
                                    "udp",
                                    "icmp",
                                    "ah",
                                    "esp"
                                  ],
                                  "x-ms-enum": {
                                    "name": "nsgProtocol",
                                    "modelAsString": true
                                  }
                                },
                                "sourceAddressPrefixes": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "The CIDR or source IP ranges."
                                },
                                "destinationAddressPrefixes": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "The destination address prefixes. CIDR or destination IP ranges."
                                },
                                "sourcePortRanges": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "The source port ranges."
                                },
                                "destinationPortRanges": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "The destination port ranges."
                                },
                                "sourceAddressPrefix": {
                                  "type": "string",
                                  "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from."
                                },
                                "destinationAddressPrefix": {
                                  "type": "string",
                                  "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."
                                },
                                "sourcePortRange": {
                                  "type": "string",
                                  "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                                },
                                "destinationPortRange": {
                                  "type": "string",
                                  "description": "he destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                                },
                                "access": {
                                  "type": "string",
                                  "description": "The network traffic is allowed or denied.",
                                  "enum": [
                                    "allow",
                                    "deny"
                                  ],
                                  "x-ms-enum": {
                                    "name": "access",
                                    "modelAsString": true
                                  }
                                },
                                "priority": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The priority of the rule. The value can be in the range 1000 to 3000. Values outside this range are reserved for Service Fabric ManagerCluster Resource Provider. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                                  "minimum": 1000,
                                  "maximum": 3000
                                },
                                "direction": {
                                  "type": "string",
                                  "description": "Network security rule direction.",
                                  "enum": [
                                    "inbound",
                                    "outbound"
                                  ],
                                  "x-ms-enum": {
                                    "name": "direction",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "description": "Describes a network security rule."
                            },
                            "x-ms-identifiers": [],
                            "description": "Custom Network Security Rules that are applied to the Virtual Network of the cluster."
                          },
                          "clients": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "isAdmin"
                              ],
                              "properties": {
                                "isAdmin": {
                                  "type": "boolean",
                                  "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                                },
                                "thumbprint": {
                                  "type": "string",
                                  "description": "Certificate thumbprint."
                                },
                                "commonName": {
                                  "type": "string",
                                  "description": "Certificate common name."
                                },
                                "issuerThumbprint": {
                                  "type": "string",
                                  "description": "Issuer thumbprint for the certificate. Only used together with CommonName."
                                }
                              },
                              "description": "Client certificate definition."
                            },
                            "x-ms-identifiers": [],
                            "description": "Client certificates that are allowed to manage the cluster."
                          },
                          "azureActiveDirectory": {
                            "description": "The AAD authentication settings of the cluster.",
                            "type": "object",
                            "properties": {
                              "tenantId": {
                                "type": "string",
                                "description": "Azure active directory tenant id."
                              },
                              "clusterApplication": {
                                "type": "string",
                                "description": "Azure active directory cluster application id."
                              },
                              "clientApplication": {
                                "type": "string",
                                "description": "Azure active directory client application id."
                              }
                            }
                          },
                          "fabricSettings": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "name",
                                "parameters"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The section name of the fabric settings."
                                },
                                "parameters": {
                                  "type": "array",
                                  "description": "The collection of parameters in the section.",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "value"
                                    ],
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The parameter name of fabric setting."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "The parameter value of fabric setting."
                                      }
                                    },
                                    "description": "Describes a parameter in fabric settings of the cluster."
                                  },
                                  "x-ms-identifiers": [
                                    "name"
                                  ]
                                }
                              },
                              "description": "Describes a section in the fabric settings of the cluster."
                            },
                            "x-ms-identifiers": [],
                            "description": "The list of custom fabric settings to configure the cluster."
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "description": "The provisioning state of the managed cluster resource.",
                            "type": "string",
                            "enum": [
                              "None",
                              "Creating",
                              "Created",
                              "Updating",
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Deleting",
                              "Deleted",
                              "Other"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedResourceProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "clusterCodeVersion": {
                            "type": "string",
                            "description": "The Service Fabric runtime version of the cluster. This property is required when **clusterUpgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**."
                          },
                          "clusterUpgradeMode": {
                            "type": "string",
                            "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.\n",
                            "enum": [
                              "Automatic",
                              "Manual"
                            ],
                            "default": "Automatic",
                            "x-ms-enum": {
                              "name": "ClusterUpgradeMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Automatic",
                                  "description": "The cluster will be automatically upgraded to the latest Service Fabric runtime version, **clusterUpgradeCadence** will determine when the upgrade starts after the new version becomes available."
                                },
                                {
                                  "value": "Manual",
                                  "description": "The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource."
                                }
                              ]
                            }
                          },
                          "clusterUpgradeCadence": {
                            "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **clusterUpgradeMode** is set to 'Automatic'.",
                            "type": "string",
                            "enum": [
                              "Wave0",
                              "Wave1",
                              "Wave2"
                            ],
                            "x-ms-enum": {
                              "name": "clusterUpgradeCadence",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Wave0",
                                  "description": "Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters."
                                },
                                {
                                  "value": "Wave1",
                                  "description": "Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters."
                                },
                                {
                                  "value": "Wave2",
                                  "description": "Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters."
                                }
                              ]
                            }
                          },
                          "addonFeatures": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "Available cluster add-on features",
                              "enum": [
                                "DnsService",
                                "BackupRestoreService",
                                "ResourceMonitorService"
                              ],
                              "x-ms-enum": {
                                "name": "ManagedClusterAddOnFeature",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "DnsService",
                                    "description": "Dns service"
                                  },
                                  {
                                    "value": "BackupRestoreService",
                                    "description": "Backup and restore service"
                                  },
                                  {
                                    "value": "ResourceMonitorService",
                                    "description": "Resource monitor service"
                                  }
                                ]
                              }
                            },
                            "description": "List of add-on features to enable on the cluster."
                          },
                          "enableAutoOSUpgrade": {
                            "type": "boolean",
                            "description": "Setting this to true enables automatic OS upgrade for the node types that are created using any platform OS image with version 'latest'. The default value for this setting is false."
                          },
                          "zonalResiliency": {
                            "type": "boolean",
                            "description": "Indicates if the cluster has zone resiliency.",
                            "default": false
                          },
                          "applicationTypeVersionsCleanupPolicy": {
                            "description": "The policy used to clean up unused versions.",
                            "type": "object",
                            "required": [
                              "maxUnusedVersionsToKeep"
                            ],
                            "properties": {
                              "maxUnusedVersionsToKeep": {
                                "type": "integer",
                                "format": "int32",
                                "minimum": 0,
                                "description": "Number of unused versions per application type to keep."
                              }
                            }
                          },
                          "enableIpv6": {
                            "type": "boolean",
                            "description": "Setting this to true creates IPv6 address space for the default VNet used by the cluster. This setting cannot be changed once the cluster is created. The default value for this setting is false."
                          },
                          "subnetId": {
                            "type": "string",
                            "description": "If specified, the node types for the cluster are created in this subnet instead of the default VNet. The **networkSecurityRules** specified for the cluster are also applied to this subnet. This setting cannot be changed once the cluster is created."
                          },
                          "ipTags": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "ipTagType",
                                "tag"
                              ],
                              "properties": {
                                "ipTagType": {
                                  "type": "string",
                                  "description": "IP tag type. Example: FirstPartyUsage."
                                },
                                "tag": {
                                  "type": "string",
                                  "description": "IP tag associated with the public IP. Example: SQL, Storage etc."
                                }
                              },
                              "description": "The IP tag associated with the public IP address."
                            },
                            "x-ms-identifiers": [],
                            "description": "The list of IP tags associated with the default public IP address of the cluster."
                          },
                          "ipv6Address": {
                            "type": "string",
                            "description": "IPv6 address for the cluster if IPv6 is enabled.",
                            "readOnly": true
                          },
                          "enableServicePublicIP": {
                            "type": "boolean",
                            "description": "Setting this to true will link the IPv4 address as the ServicePublicIP of the IPv6 address. It can only be set to True if IPv6 is enabled on the cluster."
                          },
                          "auxiliarySubnets": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Subnet name."
                                },
                                "enableIpv6": {
                                  "type": "boolean",
                                  "description": "Indicates wether to enable Ipv6 or not. If not provided, it will take the same configuration as the cluster."
                                },
                                "privateEndpointNetworkPolicies": {
                                  "type": "string",
                                  "description": "Enable or Disable apply network policies on private end point in the subnet.",
                                  "enum": [
                                    "enabled",
                                    "disabled"
                                  ],
                                  "x-ms-enum": {
                                    "name": "privateEndpointNetworkPolicies",
                                    "modelAsString": true
                                  }
                                },
                                "privateLinkServiceNetworkPolicies": {
                                  "type": "string",
                                  "description": "Enable or Disable apply network policies on private link service in the subnet.",
                                  "enum": [
                                    "enabled",
                                    "disabled"
                                  ],
                                  "x-ms-enum": {
                                    "name": "privateLinkServiceNetworkPolicies",
                                    "modelAsString": true
                                  }
                                },
                                "networkSecurityGroupId": {
                                  "type": "string",
                                  "description": "Full resource id for the network security group."
                                }
                              },
                              "description": "Describes a Subnet."
                            },
                            "x-ms-identifiers": [],
                            "description": "Auxiliary subnets for the cluster."
                          },
                          "serviceEndpoints": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "service"
                              ],
                              "properties": {
                                "service": {
                                  "type": "string",
                                  "description": "The type of the endpoint service."
                                },
                                "locations": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "A list of locations."
                                }
                              },
                              "description": "The service endpoint properties."
                            },
                            "x-ms-identifiers": [],
                            "description": "Service endpoints for subnets in the cluster."
                          },
                          "zonalUpdateMode": {
                            "description": "Indicates the update mode for Cross Az clusters.",
                            "type": "string",
                            "enum": [
                              "Standard",
                              "Fast"
                            ],
                            "x-ms-enum": {
                              "name": "ZonalUpdateMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Standard",
                                  "description": "The cluster will use 5 upgrade domains for Cross Az Node types."
                                },
                                {
                                  "value": "Fast",
                                  "description": "The cluster will use a maximum of 3 upgrade domains per zone instead of 5 for Cross Az Node types for faster deployments."
                                }
                              ]
                            }
                          },
                          "useCustomVnet": {
                            "type": "boolean",
                            "description": "For new clusters, this parameter indicates that it uses Bring your own VNet, but the subnet is specified at node type level; and for such clusters, the subnetId property is required for node types."
                          },
                          "publicIPPrefixId": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Network/publicIPPrefixes"
                                }
                              ]
                            },
                            "description": "Specify the resource id of a public IPv4 prefix that the load balancer will allocate a public IPv4 address from. This setting cannot be changed once the cluster is created."
                          },
                          "publicIPv6PrefixId": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Network/publicIPPrefixes"
                                }
                              ]
                            },
                            "description": "Specify the resource id of a public IPv6 prefix that the load balancer will allocate a public IPv6 address from. This setting cannot be changed once the cluster is created."
                          },
                          "ddosProtectionPlanId": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Network/ddosProtectionPlans"
                                }
                              ]
                            },
                            "description": "Specify the resource id of a DDoS network protection plan that will be associated with the virtual network of the cluster."
                          },
                          "upgradeDescription": {
                            "description": "The policy to use when upgrading the cluster.",
                            "type": "object",
                            "properties": {
                              "forceRestart": {
                                "type": "boolean",
                                "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data)."
                              },
                              "healthPolicy": {
                                "description": "The cluster health policy defines a health policy used to evaluate the health of the cluster during a cluster upgrade.",
                                "type": "object",
                                "required": [
                                  "maxPercentUnhealthyNodes",
                                  "maxPercentUnhealthyApplications"
                                ],
                                "properties": {
                                  "maxPercentUnhealthyNodes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.\n",
                                    "default": 0,
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentUnhealthyApplications": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.\nThe computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.\n",
                                    "default": 0,
                                    "minimum": 0,
                                    "maximum": 100
                                  }
                                }
                              },
                              "deltaHealthPolicy": {
                                "description": "The cluster delta health policy defines a health policy used to evaluate the health of the cluster during a cluster upgrade.",
                                "type": "object",
                                "required": [
                                  "maxPercentDeltaUnhealthyNodes"
                                ],
                                "properties": {
                                  "maxPercentDeltaUnhealthyNodes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  },
                                  "maxPercentDeltaUnhealthyApplications": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.\nNOTE: This value will overwrite the value specified in properties.UpgradeDescription.HealthPolicy.MaxPercentUnhealthyApplications\n",
                                    "minimum": 0,
                                    "maximum": 100
                                  }
                                }
                              },
                              "monitoringPolicy": {
                                "description": "The cluster monitoring policy describes the parameters for monitoring an upgrade in Monitored mode.",
                                "type": "object",
                                "required": [
                                  "healthCheckWaitDuration",
                                  "healthCheckStableDuration",
                                  "healthCheckRetryTimeout",
                                  "upgradeTimeout",
                                  "upgradeDomainTimeout"
                                ],
                                "properties": {
                                  "healthCheckWaitDuration": {
                                    "type": "string",
                                    "x-ms-format": "duration-constant",
                                    "description": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                                  },
                                  "healthCheckStableDuration": {
                                    "type": "string",
                                    "x-ms-format": "duration-constant",
                                    "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                                  },
                                  "healthCheckRetryTimeout": {
                                    "type": "string",
                                    "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                                  },
                                  "upgradeTimeout": {
                                    "type": "string",
                                    "description": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                                  },
                                  "upgradeDomainTimeout": {
                                    "type": "string",
                                    "description": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                                  }
                                }
                              },
                              "upgradeReplicaSetCheckTimeout": {
                                "type": "string",
                                "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues.\nWhen this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues.\nThe timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.\nThis value must be between 00:00:00 and 49710.06:28:15 (unsigned 32 bit integer for seconds)\n"
                              }
                            }
                          },
                          "httpGatewayTokenAuthConnectionPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The port used for token-auth based HTTPS connections to the cluster. Cannot be set to the same port as HttpGatewayEndpoint."
                          },
                          "enableHttpGatewayExclusiveAuthMode": {
                            "type": "boolean",
                            "description": "If true, token-based authentication is not allowed on the HttpGatewayEndpoint. This is required to support TLS versions 1.3 and above. If token-based authentication is used, HttpGatewayTokenAuthConnectionPort must be defined."
                          }
                        }
                      },
                      "sku": {
                        "description": "The sku of the managed cluster",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Sku Name.",
                            "type": "string",
                            "enum": [
                              "Basic",
                              "Standard"
                            ],
                            "x-ms-enum": {
                              "name": "SkuName",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Basic",
                                  "description": "Basic requires a minimum of 3 nodes and allows only 1 node type."
                                },
                                {
                                  "value": "Standard",
                                  "description": "Requires a minimum of 5 nodes and allows 1 or more node type."
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to use for getting the next set of results."
                }
              },
              "description": "Managed Cluster list results"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}": {
      "get": {
        "tags": [
          "ManagedCluster"
        ],
        "operationId": "ManagedClusters_Get",
        "summary": "Gets a Service Fabric managed cluster resource.",
        "description": "Get a Service Fabric managed cluster resource created or in the process of being created in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "required": [
                "sku"
              ],
              "description": "The managed cluster resource\n",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Azure resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Azure resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "Azure resource etag.",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The managed cluster resource properties",
                  "type": "object",
                  "required": [
                    "dnsName",
                    "adminUserName"
                  ],
                  "properties": {
                    "dnsName": {
                      "type": "string",
                      "description": "The cluster dns name."
                    },
                    "fqdn": {
                      "type": "string",
                      "description": "The fully qualified domain name associated with the public load balancer of the cluster.",
                      "readOnly": true
                    },
                    "ipv4Address": {
                      "type": "string",
                      "description": "The IPv4 address associated with the public load balancer of the cluster.",
                      "readOnly": true
                    },
                    "clusterId": {
                      "type": "string",
                      "description": "A service generated unique identifier for the cluster resource.",
                      "readOnly": true
                    },
                    "clusterState": {
                      "readOnly": true,
                      "description": "The current state of the cluster.",
                      "type": "string",
                      "enum": [
                        "WaitingForNodes",
                        "Deploying",
                        "BaselineUpgrade",
                        "Upgrading",
                        "UpgradeFailed",
                        "Ready"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterState",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "WaitingForNodes",
                            "description": "Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it."
                          },
                          {
                            "value": "Deploying",
                            "description": "Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up."
                          },
                          {
                            "value": "BaselineUpgrade",
                            "description": "Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time."
                          },
                          {
                            "value": "Upgrading",
                            "description": "Indicates that the cluster is being upgraded with the user provided configuration."
                          },
                          {
                            "value": "UpgradeFailed",
                            "description": "Indicates that the last upgrade for the cluster has failed."
                          },
                          {
                            "value": "Ready",
                            "description": "Indicates that the cluster is in a stable state."
                          }
                        ]
                      }
                    },
                    "clusterCertificateThumbprints": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of thumbprints of the cluster certificates.",
                      "readOnly": true
                    },
                    "clientConnectionPort": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The port used for client connections to the cluster.",
                      "default": 19000
                    },
                    "httpGatewayConnectionPort": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The port used for HTTP connections to the cluster.",
                      "default": 19080
                    },
                    "adminUserName": {
                      "type": "string",
                      "description": "VM admin user name."
                    },
                    "adminPassword": {
                      "type": "string",
                      "x-ms-secret": true,
                      "format": "password",
                      "description": "VM admin user password."
                    },
                    "loadBalancingRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "frontendPort",
                          "backendPort",
                          "protocol",
                          "probeProtocol"
                        ],
                        "properties": {
                          "frontendPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 1 and 65534.",
                            "minimum": 1,
                            "maximum": 65534
                          },
                          "backendPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.",
                            "minimum": 1,
                            "maximum": 65534
                          },
                          "protocol": {
                            "type": "string",
                            "description": "The reference to the transport protocol used by the load balancing rule.",
                            "enum": [
                              "tcp",
                              "udp"
                            ],
                            "x-ms-enum": {
                              "name": "protocol",
                              "modelAsString": true
                            }
                          },
                          "probePort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The prob port used by the load balancing rule. Acceptable values are between 1 and 65535.",
                            "minimum": 1,
                            "maximum": 65534
                          },
                          "probeProtocol": {
                            "type": "string",
                            "description": "the reference to the load balancer probe used by the load balancing rule.",
                            "enum": [
                              "tcp",
                              "http",
                              "https"
                            ],
                            "x-ms-enum": {
                              "name": "probeProtocol",
                              "modelAsString": true
                            }
                          },
                          "probeRequestPath": {
                            "type": "string",
                            "description": "The probe request path. Only supported for HTTP/HTTPS probes."
                          },
                          "loadDistribution": {
                            "type": "string",
                            "description": "The load distribution policy for this rule."
                          }
                        },
                        "description": "Describes a load balancing rule."
                      },
                      "x-ms-identifiers": [],
                      "description": "Load balancing rules that are applied to the public load balancer of the cluster."
                    },
                    "allowRdpAccess": {
                      "type": "boolean",
                      "description": "Setting this to true enables RDP access to the VM. The default NSG rule opens RDP port to Internet which can be overridden with custom Network Security Rules. The default value for this setting is false."
                    },
                    "networkSecurityRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "protocol",
                          "access",
                          "priority",
                          "direction"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Network security rule name."
                          },
                          "description": {
                            "type": "string",
                            "description": "Network security rule description."
                          },
                          "protocol": {
                            "type": "string",
                            "description": "Network protocol this rule applies to.",
                            "enum": [
                              "http",
                              "https",
                              "tcp",
                              "udp",
                              "icmp",
                              "ah",
                              "esp"
                            ],
                            "x-ms-enum": {
                              "name": "nsgProtocol",
                              "modelAsString": true
                            }
                          },
                          "sourceAddressPrefixes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The CIDR or source IP ranges."
                          },
                          "destinationAddressPrefixes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The destination address prefixes. CIDR or destination IP ranges."
                          },
                          "sourcePortRanges": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The source port ranges."
                          },
                          "destinationPortRanges": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The destination port ranges."
                          },
                          "sourceAddressPrefix": {
                            "type": "string",
                            "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from."
                          },
                          "destinationAddressPrefix": {
                            "type": "string",
                            "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."
                          },
                          "sourcePortRange": {
                            "type": "string",
                            "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                          },
                          "destinationPortRange": {
                            "type": "string",
                            "description": "he destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                          },
                          "access": {
                            "type": "string",
                            "description": "The network traffic is allowed or denied.",
                            "enum": [
                              "allow",
                              "deny"
                            ],
                            "x-ms-enum": {
                              "name": "access",
                              "modelAsString": true
                            }
                          },
                          "priority": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The priority of the rule. The value can be in the range 1000 to 3000. Values outside this range are reserved for Service Fabric ManagerCluster Resource Provider. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                            "minimum": 1000,
                            "maximum": 3000
                          },
                          "direction": {
                            "type": "string",
                            "description": "Network security rule direction.",
                            "enum": [
                              "inbound",
                              "outbound"
                            ],
                            "x-ms-enum": {
                              "name": "direction",
                              "modelAsString": true
                            }
                          }
                        },
                        "description": "Describes a network security rule."
                      },
                      "x-ms-identifiers": [],
                      "description": "Custom Network Security Rules that are applied to the Virtual Network of the cluster."
                    },
                    "clients": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "isAdmin"
                        ],
                        "properties": {
                          "isAdmin": {
                            "type": "boolean",
                            "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                          },
                          "thumbprint": {
                            "type": "string",
                            "description": "Certificate thumbprint."
                          },
                          "commonName": {
                            "type": "string",
                            "description": "Certificate common name."
                          },
                          "issuerThumbprint": {
                            "type": "string",
                            "description": "Issuer thumbprint for the certificate. Only used together with CommonName."
                          }
                        },
                        "description": "Client certificate definition."
                      },
                      "x-ms-identifiers": [],
                      "description": "Client certificates that are allowed to manage the cluster."
                    },
                    "azureActiveDirectory": {
                      "description": "The AAD authentication settings of the cluster.",
                      "type": "object",
                      "properties": {
                        "tenantId": {
                          "type": "string",
                          "description": "Azure active directory tenant id."
                        },
                        "clusterApplication": {
                          "type": "string",
                          "description": "Azure active directory cluster application id."
                        },
                        "clientApplication": {
                          "type": "string",
                          "description": "Azure active directory client application id."
                        }
                      }
                    },
                    "fabricSettings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "parameters"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The section name of the fabric settings."
                          },
                          "parameters": {
                            "type": "array",
                            "description": "The collection of parameters in the section.",
                            "items": {
                              "type": "object",
                              "required": [
                                "name",
                                "value"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The parameter name of fabric setting."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The parameter value of fabric setting."
                                }
                              },
                              "description": "Describes a parameter in fabric settings of the cluster."
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          }
                        },
                        "description": "Describes a section in the fabric settings of the cluster."
                      },
                      "x-ms-identifiers": [],
                      "description": "The list of custom fabric settings to configure the cluster."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioning state of the managed cluster resource.",
                      "type": "string",
                      "enum": [
                        "None",
                        "Creating",
                        "Created",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting",
                        "Deleted",
                        "Other"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "clusterCodeVersion": {
                      "type": "string",
                      "description": "The Service Fabric runtime version of the cluster. This property is required when **clusterUpgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**."
                    },
                    "clusterUpgradeMode": {
                      "type": "string",
                      "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.\n",
                      "enum": [
                        "Automatic",
                        "Manual"
                      ],
                      "default": "Automatic",
                      "x-ms-enum": {
                        "name": "ClusterUpgradeMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Automatic",
                            "description": "The cluster will be automatically upgraded to the latest Service Fabric runtime version, **clusterUpgradeCadence** will determine when the upgrade starts after the new version becomes available."
                          },
                          {
                            "value": "Manual",
                            "description": "The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource."
                          }
                        ]
                      }
                    },
                    "clusterUpgradeCadence": {
                      "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **clusterUpgradeMode** is set to 'Automatic'.",
                      "type": "string",
                      "enum": [
                        "Wave0",
                        "Wave1",
                        "Wave2"
                      ],
                      "x-ms-enum": {
                        "name": "clusterUpgradeCadence",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Wave0",
                            "description": "Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters."
                          },
                          {
                            "value": "Wave1",
                            "description": "Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters."
                          },
                          {
                            "value": "Wave2",
                            "description": "Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters."
                          }
                        ]
                      }
                    },
                    "addonFeatures": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Available cluster add-on features",
                        "enum": [
                          "DnsService",
                          "BackupRestoreService",
                          "ResourceMonitorService"
                        ],
                        "x-ms-enum": {
                          "name": "ManagedClusterAddOnFeature",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "DnsService",
                              "description": "Dns service"
                            },
                            {
                              "value": "BackupRestoreService",
                              "description": "Backup and restore service"
                            },
                            {
                              "value": "ResourceMonitorService",
                              "description": "Resource monitor service"
                            }
                          ]
                        }
                      },
                      "description": "List of add-on features to enable on the cluster."
                    },
                    "enableAutoOSUpgrade": {
                      "type": "boolean",
                      "description": "Setting this to true enables automatic OS upgrade for the node types that are created using any platform OS image with version 'latest'. The default value for this setting is false."
                    },
                    "zonalResiliency": {
                      "type": "boolean",
                      "description": "Indicates if the cluster has zone resiliency.",
                      "default": false
                    },
                    "applicationTypeVersionsCleanupPolicy": {
                      "description": "The policy used to clean up unused versions.",
                      "type": "object",
                      "required": [
                        "maxUnusedVersionsToKeep"
                      ],
                      "properties": {
                        "maxUnusedVersionsToKeep": {
                          "type": "integer",
                          "format": "int32",
                          "minimum": 0,
                          "description": "Number of unused versions per application type to keep."
                        }
                      }
                    },
                    "enableIpv6": {
                      "type": "boolean",
                      "description": "Setting this to true creates IPv6 address space for the default VNet used by the cluster. This setting cannot be changed once the cluster is created. The default value for this setting is false."
                    },
                    "subnetId": {
                      "type": "string",
                      "description": "If specified, the node types for the cluster are created in this subnet instead of the default VNet. The **networkSecurityRules** specified for the cluster are also applied to this subnet. This setting cannot be changed once the cluster is created."
                    },
                    "ipTags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "ipTagType",
                          "tag"
                        ],
                        "properties": {
                          "ipTagType": {
                            "type": "string",
                            "description": "IP tag type. Example: FirstPartyUsage."
                          },
                          "tag": {
                            "type": "string",
                            "description": "IP tag associated with the public IP. Example: SQL, Storage etc."
                          }
                        },
                        "description": "The IP tag associated with the public IP address."
                      },
                      "x-ms-identifiers": [],
                      "description": "The list of IP tags associated with the default public IP address of the cluster."
                    },
                    "ipv6Address": {
                      "type": "string",
                      "description": "IPv6 address for the cluster if IPv6 is enabled.",
                      "readOnly": true
                    },
                    "enableServicePublicIP": {
                      "type": "boolean",
                      "description": "Setting this to true will link the IPv4 address as the ServicePublicIP of the IPv6 address. It can only be set to True if IPv6 is enabled on the cluster."
                    },
                    "auxiliarySubnets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Subnet name."
                          },
                          "enableIpv6": {
                            "type": "boolean",
                            "description": "Indicates wether to enable Ipv6 or not. If not provided, it will take the same configuration as the cluster."
                          },
                          "privateEndpointNetworkPolicies": {
                            "type": "string",
                            "description": "Enable or Disable apply network policies on private end point in the subnet.",
                            "enum": [
                              "enabled",
                              "disabled"
                            ],
                            "x-ms-enum": {
                              "name": "privateEndpointNetworkPolicies",
                              "modelAsString": true
                            }
                          },
                          "privateLinkServiceNetworkPolicies": {
                            "type": "string",
                            "description": "Enable or Disable apply network policies on private link service in the subnet.",
                            "enum": [
                              "enabled",
                              "disabled"
                            ],
                            "x-ms-enum": {
                              "name": "privateLinkServiceNetworkPolicies",
                              "modelAsString": true
                            }
                          },
                          "networkSecurityGroupId": {
                            "type": "string",
                            "description": "Full resource id for the network security group."
                          }
                        },
                        "description": "Describes a Subnet."
                      },
                      "x-ms-identifiers": [],
                      "description": "Auxiliary subnets for the cluster."
                    },
                    "serviceEndpoints": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "service"
                        ],
                        "properties": {
                          "service": {
                            "type": "string",
                            "description": "The type of the endpoint service."
                          },
                          "locations": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "A list of locations."
                          }
                        },
                        "description": "The service endpoint properties."
                      },
                      "x-ms-identifiers": [],
                      "description": "Service endpoints for subnets in the cluster."
                    },
                    "zonalUpdateMode": {
                      "description": "Indicates the update mode for Cross Az clusters.",
                      "type": "string",
                      "enum": [
                        "Standard",
                        "Fast"
                      ],
                      "x-ms-enum": {
                        "name": "ZonalUpdateMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Standard",
                            "description": "The cluster will use 5 upgrade domains for Cross Az Node types."
                          },
                          {
                            "value": "Fast",
                            "description": "The cluster will use a maximum of 3 upgrade domains per zone instead of 5 for Cross Az Node types for faster deployments."
                          }
                        ]
                      }
                    },
                    "useCustomVnet": {
                      "type": "boolean",
                      "description": "For new clusters, this parameter indicates that it uses Bring your own VNet, but the subnet is specified at node type level; and for such clusters, the subnetId property is required for node types."
                    },
                    "publicIPPrefixId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/publicIPPrefixes"
                          }
                        ]
                      },
                      "description": "Specify the resource id of a public IPv4 prefix that the load balancer will allocate a public IPv4 address from. This setting cannot be changed once the cluster is created."
                    },
                    "publicIPv6PrefixId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/publicIPPrefixes"
                          }
                        ]
                      },
                      "description": "Specify the resource id of a public IPv6 prefix that the load balancer will allocate a public IPv6 address from. This setting cannot be changed once the cluster is created."
                    },
                    "ddosProtectionPlanId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/ddosProtectionPlans"
                          }
                        ]
                      },
                      "description": "Specify the resource id of a DDoS network protection plan that will be associated with the virtual network of the cluster."
                    },
                    "upgradeDescription": {
                      "description": "The policy to use when upgrading the cluster.",
                      "type": "object",
                      "properties": {
                        "forceRestart": {
                          "type": "boolean",
                          "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data)."
                        },
                        "healthPolicy": {
                          "description": "The cluster health policy defines a health policy used to evaluate the health of the cluster during a cluster upgrade.",
                          "type": "object",
                          "required": [
                            "maxPercentUnhealthyNodes",
                            "maxPercentUnhealthyApplications"
                          ],
                          "properties": {
                            "maxPercentUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.\n",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentUnhealthyApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.\nThe computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.\n",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 100
                            }
                          }
                        },
                        "deltaHealthPolicy": {
                          "description": "The cluster delta health policy defines a health policy used to evaluate the health of the cluster during a cluster upgrade.",
                          "type": "object",
                          "required": [
                            "maxPercentDeltaUnhealthyNodes"
                          ],
                          "properties": {
                            "maxPercentDeltaUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentDeltaUnhealthyApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.\nNOTE: This value will overwrite the value specified in properties.UpgradeDescription.HealthPolicy.MaxPercentUnhealthyApplications\n",
                              "minimum": 0,
                              "maximum": 100
                            }
                          }
                        },
                        "monitoringPolicy": {
                          "description": "The cluster monitoring policy describes the parameters for monitoring an upgrade in Monitored mode.",
                          "type": "object",
                          "required": [
                            "healthCheckWaitDuration",
                            "healthCheckStableDuration",
                            "healthCheckRetryTimeout",
                            "upgradeTimeout",
                            "upgradeDomainTimeout"
                          ],
                          "properties": {
                            "healthCheckWaitDuration": {
                              "type": "string",
                              "x-ms-format": "duration-constant",
                              "description": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                            },
                            "healthCheckStableDuration": {
                              "type": "string",
                              "x-ms-format": "duration-constant",
                              "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                            },
                            "healthCheckRetryTimeout": {
                              "type": "string",
                              "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                            },
                            "upgradeTimeout": {
                              "type": "string",
                              "description": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                            },
                            "upgradeDomainTimeout": {
                              "type": "string",
                              "description": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                            }
                          }
                        },
                        "upgradeReplicaSetCheckTimeout": {
                          "type": "string",
                          "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues.\nWhen this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues.\nThe timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.\nThis value must be between 00:00:00 and 49710.06:28:15 (unsigned 32 bit integer for seconds)\n"
                        }
                      }
                    },
                    "httpGatewayTokenAuthConnectionPort": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The port used for token-auth based HTTPS connections to the cluster. Cannot be set to the same port as HttpGatewayEndpoint."
                    },
                    "enableHttpGatewayExclusiveAuthMode": {
                      "type": "boolean",
                      "description": "If true, token-based authentication is not allowed on the HttpGatewayEndpoint. This is required to support TLS versions 1.3 and above. If token-based authentication is used, HttpGatewayTokenAuthConnectionPort must be defined."
                    }
                  }
                },
                "sku": {
                  "description": "The sku of the managed cluster",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Sku Name.",
                      "type": "string",
                      "enum": [
                        "Basic",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Basic",
                            "description": "Basic requires a minimum of 3 nodes and allows only 1 node type."
                          },
                          {
                            "value": "Standard",
                            "description": "Requires a minimum of 5 nodes and allows 1 or more node type."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ManagedCluster"
        ],
        "operationId": "ManagedClusters_CreateOrUpdate",
        "summary": "Creates or updates a Service Fabric managed cluster resource.",
        "description": "Create or update a Service Fabric managed cluster resource with the specified name.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The cluster resource.",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "sku"
              ],
              "description": "The managed cluster resource\n",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Azure resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Azure resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "Azure resource etag.",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The managed cluster resource properties",
                  "type": "object",
                  "required": [
                    "dnsName",
                    "adminUserName"
                  ],
                  "properties": {
                    "dnsName": {
                      "type": "string",
                      "description": "The cluster dns name."
                    },
                    "fqdn": {
                      "type": "string",
                      "description": "The fully qualified domain name associated with the public load balancer of the cluster.",
                      "readOnly": true
                    },
                    "ipv4Address": {
                      "type": "string",
                      "description": "The IPv4 address associated with the public load balancer of the cluster.",
                      "readOnly": true
                    },
                    "clusterId": {
                      "type": "string",
                      "description": "A service generated unique identifier for the cluster resource.",
                      "readOnly": true
                    },
                    "clusterState": {
                      "readOnly": true,
                      "description": "The current state of the cluster.",
                      "type": "string",
                      "enum": [
                        "WaitingForNodes",
                        "Deploying",
                        "BaselineUpgrade",
                        "Upgrading",
                        "UpgradeFailed",
                        "Ready"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterState",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "WaitingForNodes",
                            "description": "Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it."
                          },
                          {
                            "value": "Deploying",
                            "description": "Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up."
                          },
                          {
                            "value": "BaselineUpgrade",
                            "description": "Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time."
                          },
                          {
                            "value": "Upgrading",
                            "description": "Indicates that the cluster is being upgraded with the user provided configuration."
                          },
                          {
                            "value": "UpgradeFailed",
                            "description": "Indicates that the last upgrade for the cluster has failed."
                          },
                          {
                            "value": "Ready",
                            "description": "Indicates that the cluster is in a stable state."
                          }
                        ]
                      }
                    },
                    "clusterCertificateThumbprints": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of thumbprints of the cluster certificates.",
                      "readOnly": true
                    },
                    "clientConnectionPort": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The port used for client connections to the cluster.",
                      "default": 19000
                    },
                    "httpGatewayConnectionPort": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The port used for HTTP connections to the cluster.",
                      "default": 19080
                    },
                    "adminUserName": {
                      "type": "string",
                      "description": "VM admin user name."
                    },
                    "adminPassword": {
                      "type": "string",
                      "x-ms-secret": true,
                      "format": "password",
                      "description": "VM admin user password."
                    },
                    "loadBalancingRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "frontendPort",
                          "backendPort",
                          "protocol",
                          "probeProtocol"
                        ],
                        "properties": {
                          "frontendPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 1 and 65534.",
                            "minimum": 1,
                            "maximum": 65534
                          },
                          "backendPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.",
                            "minimum": 1,
                            "maximum": 65534
                          },
                          "protocol": {
                            "type": "string",
                            "description": "The reference to the transport protocol used by the load balancing rule.",
                            "enum": [
                              "tcp",
                              "udp"
                            ],
                            "x-ms-enum": {
                              "name": "protocol",
                              "modelAsString": true
                            }
                          },
                          "probePort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The prob port used by the load balancing rule. Acceptable values are between 1 and 65535.",
                            "minimum": 1,
                            "maximum": 65534
                          },
                          "probeProtocol": {
                            "type": "string",
                            "description": "the reference to the load balancer probe used by the load balancing rule.",
                            "enum": [
                              "tcp",
                              "http",
                              "https"
                            ],
                            "x-ms-enum": {
                              "name": "probeProtocol",
                              "modelAsString": true
                            }
                          },
                          "probeRequestPath": {
                            "type": "string",
                            "description": "The probe request path. Only supported for HTTP/HTTPS probes."
                          },
                          "loadDistribution": {
                            "type": "string",
                            "description": "The load distribution policy for this rule."
                          }
                        },
                        "description": "Describes a load balancing rule."
                      },
                      "x-ms-identifiers": [],
                      "description": "Load balancing rules that are applied to the public load balancer of the cluster."
                    },
                    "allowRdpAccess": {
                      "type": "boolean",
                      "description": "Setting this to true enables RDP access to the VM. The default NSG rule opens RDP port to Internet which can be overridden with custom Network Security Rules. The default value for this setting is false."
                    },
                    "networkSecurityRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "protocol",
                          "access",
                          "priority",
                          "direction"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Network security rule name."
                          },
                          "description": {
                            "type": "string",
                            "description": "Network security rule description."
                          },
                          "protocol": {
                            "type": "string",
                            "description": "Network protocol this rule applies to.",
                            "enum": [
                              "http",
                              "https",
                              "tcp",
                              "udp",
                              "icmp",
                              "ah",
                              "esp"
                            ],
                            "x-ms-enum": {
                              "name": "nsgProtocol",
                              "modelAsString": true
                            }
                          },
                          "sourceAddressPrefixes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The CIDR or source IP ranges."
                          },
                          "destinationAddressPrefixes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The destination address prefixes. CIDR or destination IP ranges."
                          },
                          "sourcePortRanges": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The source port ranges."
                          },
                          "destinationPortRanges": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The destination port ranges."
                          },
                          "sourceAddressPrefix": {
                            "type": "string",
                            "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from."
                          },
                          "destinationAddressPrefix": {
                            "type": "string",
                            "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."
                          },
                          "sourcePortRange": {
                            "type": "string",
                            "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                          },
                          "destinationPortRange": {
                            "type": "string",
                            "description": "he destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                          },
                          "access": {
                            "type": "string",
                            "description": "The network traffic is allowed or denied.",
                            "enum": [
                              "allow",
                              "deny"
                            ],
                            "x-ms-enum": {
                              "name": "access",
                              "modelAsString": true
                            }
                          },
                          "priority": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The priority of the rule. The value can be in the range 1000 to 3000. Values outside this range are reserved for Service Fabric ManagerCluster Resource Provider. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                            "minimum": 1000,
                            "maximum": 3000
                          },
                          "direction": {
                            "type": "string",
                            "description": "Network security rule direction.",
                            "enum": [
                              "inbound",
                              "outbound"
                            ],
                            "x-ms-enum": {
                              "name": "direction",
                              "modelAsString": true
                            }
                          }
                        },
                        "description": "Describes a network security rule."
                      },
                      "x-ms-identifiers": [],
                      "description": "Custom Network Security Rules that are applied to the Virtual Network of the cluster."
                    },
                    "clients": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "isAdmin"
                        ],
                        "properties": {
                          "isAdmin": {
                            "type": "boolean",
                            "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                          },
                          "thumbprint": {
                            "type": "string",
                            "description": "Certificate thumbprint."
                          },
                          "commonName": {
                            "type": "string",
                            "description": "Certificate common name."
                          },
                          "issuerThumbprint": {
                            "type": "string",
                            "description": "Issuer thumbprint for the certificate. Only used together with CommonName."
                          }
                        },
                        "description": "Client certificate definition."
                      },
                      "x-ms-identifiers": [],
                      "description": "Client certificates that are allowed to manage the cluster."
                    },
                    "azureActiveDirectory": {
                      "description": "The AAD authentication settings of the cluster.",
                      "type": "object",
                      "properties": {
                        "tenantId": {
                          "type": "string",
                          "description": "Azure active directory tenant id."
                        },
                        "clusterApplication": {
                          "type": "string",
                          "description": "Azure active directory cluster application id."
                        },
                        "clientApplication": {
                          "type": "string",
                          "description": "Azure active directory client application id."
                        }
                      }
                    },
                    "fabricSettings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "parameters"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The section name of the fabric settings."
                          },
                          "parameters": {
                            "type": "array",
                            "description": "The collection of parameters in the section.",
                            "items": {
                              "type": "object",
                              "required": [
                                "name",
                                "value"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The parameter name of fabric setting."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The parameter value of fabric setting."
                                }
                              },
                              "description": "Describes a parameter in fabric settings of the cluster."
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          }
                        },
                        "description": "Describes a section in the fabric settings of the cluster."
                      },
                      "x-ms-identifiers": [],
                      "description": "The list of custom fabric settings to configure the cluster."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioning state of the managed cluster resource.",
                      "type": "string",
                      "enum": [
                        "None",
                        "Creating",
                        "Created",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting",
                        "Deleted",
                        "Other"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "clusterCodeVersion": {
                      "type": "string",
                      "description": "The Service Fabric runtime version of the cluster. This property is required when **clusterUpgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**."
                    },
                    "clusterUpgradeMode": {
                      "type": "string",
                      "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.\n",
                      "enum": [
                        "Automatic",
                        "Manual"
                      ],
                      "default": "Automatic",
                      "x-ms-enum": {
                        "name": "ClusterUpgradeMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Automatic",
                            "description": "The cluster will be automatically upgraded to the latest Service Fabric runtime version, **clusterUpgradeCadence** will determine when the upgrade starts after the new version becomes available."
                          },
                          {
                            "value": "Manual",
                            "description": "The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource."
                          }
                        ]
                      }
                    },
                    "clusterUpgradeCadence": {
                      "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **clusterUpgradeMode** is set to 'Automatic'.",
                      "type": "string",
                      "enum": [
                        "Wave0",
                        "Wave1",
                        "Wave2"
                      ],
                      "x-ms-enum": {
                        "name": "clusterUpgradeCadence",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Wave0",
                            "description": "Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters."
                          },
                          {
                            "value": "Wave1",
                            "description": "Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters."
                          },
                          {
                            "value": "Wave2",
                            "description": "Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters."
                          }
                        ]
                      }
                    },
                    "addonFeatures": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Available cluster add-on features",
                        "enum": [
                          "DnsService",
                          "BackupRestoreService",
                          "ResourceMonitorService"
                        ],
                        "x-ms-enum": {
                          "name": "ManagedClusterAddOnFeature",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "DnsService",
                              "description": "Dns service"
                            },
                            {
                              "value": "BackupRestoreService",
                              "description": "Backup and restore service"
                            },
                            {
                              "value": "ResourceMonitorService",
                              "description": "Resource monitor service"
                            }
                          ]
                        }
                      },
                      "description": "List of add-on features to enable on the cluster."
                    },
                    "enableAutoOSUpgrade": {
                      "type": "boolean",
                      "description": "Setting this to true enables automatic OS upgrade for the node types that are created using any platform OS image with version 'latest'. The default value for this setting is false."
                    },
                    "zonalResiliency": {
                      "type": "boolean",
                      "description": "Indicates if the cluster has zone resiliency.",
                      "default": false
                    },
                    "applicationTypeVersionsCleanupPolicy": {
                      "description": "The policy used to clean up unused versions.",
                      "type": "object",
                      "required": [
                        "maxUnusedVersionsToKeep"
                      ],
                      "properties": {
                        "maxUnusedVersionsToKeep": {
                          "type": "integer",
                          "format": "int32",
                          "minimum": 0,
                          "description": "Number of unused versions per application type to keep."
                        }
                      }
                    },
                    "enableIpv6": {
                      "type": "boolean",
                      "description": "Setting this to true creates IPv6 address space for the default VNet used by the cluster. This setting cannot be changed once the cluster is created. The default value for this setting is false."
                    },
                    "subnetId": {
                      "type": "string",
                      "description": "If specified, the node types for the cluster are created in this subnet instead of the default VNet. The **networkSecurityRules** specified for the cluster are also applied to this subnet. This setting cannot be changed once the cluster is created."
                    },
                    "ipTags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "ipTagType",
                          "tag"
                        ],
                        "properties": {
                          "ipTagType": {
                            "type": "string",
                            "description": "IP tag type. Example: FirstPartyUsage."
                          },
                          "tag": {
                            "type": "string",
                            "description": "IP tag associated with the public IP. Example: SQL, Storage etc."
                          }
                        },
                        "description": "The IP tag associated with the public IP address."
                      },
                      "x-ms-identifiers": [],
                      "description": "The list of IP tags associated with the default public IP address of the cluster."
                    },
                    "ipv6Address": {
                      "type": "string",
                      "description": "IPv6 address for the cluster if IPv6 is enabled.",
                      "readOnly": true
                    },
                    "enableServicePublicIP": {
                      "type": "boolean",
                      "description": "Setting this to true will link the IPv4 address as the ServicePublicIP of the IPv6 address. It can only be set to True if IPv6 is enabled on the cluster."
                    },
                    "auxiliarySubnets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Subnet name."
                          },
                          "enableIpv6": {
                            "type": "boolean",
                            "description": "Indicates wether to enable Ipv6 or not. If not provided, it will take the same configuration as the cluster."
                          },
                          "privateEndpointNetworkPolicies": {
                            "type": "string",
                            "description": "Enable or Disable apply network policies on private end point in the subnet.",
                            "enum": [
                              "enabled",
                              "disabled"
                            ],
                            "x-ms-enum": {
                              "name": "privateEndpointNetworkPolicies",
                              "modelAsString": true
                            }
                          },
                          "privateLinkServiceNetworkPolicies": {
                            "type": "string",
                            "description": "Enable or Disable apply network policies on private link service in the subnet.",
                            "enum": [
                              "enabled",
                              "disabled"
                            ],
                            "x-ms-enum": {
                              "name": "privateLinkServiceNetworkPolicies",
                              "modelAsString": true
                            }
                          },
                          "networkSecurityGroupId": {
                            "type": "string",
                            "description": "Full resource id for the network security group."
                          }
                        },
                        "description": "Describes a Subnet."
                      },
                      "x-ms-identifiers": [],
                      "description": "Auxiliary subnets for the cluster."
                    },
                    "serviceEndpoints": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "service"
                        ],
                        "properties": {
                          "service": {
                            "type": "string",
                            "description": "The type of the endpoint service."
                          },
                          "locations": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "A list of locations."
                          }
                        },
                        "description": "The service endpoint properties."
                      },
                      "x-ms-identifiers": [],
                      "description": "Service endpoints for subnets in the cluster."
                    },
                    "zonalUpdateMode": {
                      "description": "Indicates the update mode for Cross Az clusters.",
                      "type": "string",
                      "enum": [
                        "Standard",
                        "Fast"
                      ],
                      "x-ms-enum": {
                        "name": "ZonalUpdateMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Standard",
                            "description": "The cluster will use 5 upgrade domains for Cross Az Node types."
                          },
                          {
                            "value": "Fast",
                            "description": "The cluster will use a maximum of 3 upgrade domains per zone instead of 5 for Cross Az Node types for faster deployments."
                          }
                        ]
                      }
                    },
                    "useCustomVnet": {
                      "type": "boolean",
                      "description": "For new clusters, this parameter indicates that it uses Bring your own VNet, but the subnet is specified at node type level; and for such clusters, the subnetId property is required for node types."
                    },
                    "publicIPPrefixId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/publicIPPrefixes"
                          }
                        ]
                      },
                      "description": "Specify the resource id of a public IPv4 prefix that the load balancer will allocate a public IPv4 address from. This setting cannot be changed once the cluster is created."
                    },
                    "publicIPv6PrefixId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/publicIPPrefixes"
                          }
                        ]
                      },
                      "description": "Specify the resource id of a public IPv6 prefix that the load balancer will allocate a public IPv6 address from. This setting cannot be changed once the cluster is created."
                    },
                    "ddosProtectionPlanId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/ddosProtectionPlans"
                          }
                        ]
                      },
                      "description": "Specify the resource id of a DDoS network protection plan that will be associated with the virtual network of the cluster."
                    },
                    "upgradeDescription": {
                      "description": "The policy to use when upgrading the cluster.",
                      "type": "object",
                      "properties": {
                        "forceRestart": {
                          "type": "boolean",
                          "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data)."
                        },
                        "healthPolicy": {
                          "description": "The cluster health policy defines a health policy used to evaluate the health of the cluster during a cluster upgrade.",
                          "type": "object",
                          "required": [
                            "maxPercentUnhealthyNodes",
                            "maxPercentUnhealthyApplications"
                          ],
                          "properties": {
                            "maxPercentUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.\n",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentUnhealthyApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.\nThe computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.\n",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 100
                            }
                          }
                        },
                        "deltaHealthPolicy": {
                          "description": "The cluster delta health policy defines a health policy used to evaluate the health of the cluster during a cluster upgrade.",
                          "type": "object",
                          "required": [
                            "maxPercentDeltaUnhealthyNodes"
                          ],
                          "properties": {
                            "maxPercentDeltaUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentDeltaUnhealthyApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.\nNOTE: This value will overwrite the value specified in properties.UpgradeDescription.HealthPolicy.MaxPercentUnhealthyApplications\n",
                              "minimum": 0,
                              "maximum": 100
                            }
                          }
                        },
                        "monitoringPolicy": {
                          "description": "The cluster monitoring policy describes the parameters for monitoring an upgrade in Monitored mode.",
                          "type": "object",
                          "required": [
                            "healthCheckWaitDuration",
                            "healthCheckStableDuration",
                            "healthCheckRetryTimeout",
                            "upgradeTimeout",
                            "upgradeDomainTimeout"
                          ],
                          "properties": {
                            "healthCheckWaitDuration": {
                              "type": "string",
                              "x-ms-format": "duration-constant",
                              "description": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                            },
                            "healthCheckStableDuration": {
                              "type": "string",
                              "x-ms-format": "duration-constant",
                              "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                            },
                            "healthCheckRetryTimeout": {
                              "type": "string",
                              "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                            },
                            "upgradeTimeout": {
                              "type": "string",
                              "description": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                            },
                            "upgradeDomainTimeout": {
                              "type": "string",
                              "description": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                            }
                          }
                        },
                        "upgradeReplicaSetCheckTimeout": {
                          "type": "string",
                          "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues.\nWhen this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues.\nThe timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.\nThis value must be between 00:00:00 and 49710.06:28:15 (unsigned 32 bit integer for seconds)\n"
                        }
                      }
                    },
                    "httpGatewayTokenAuthConnectionPort": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The port used for token-auth based HTTPS connections to the cluster. Cannot be set to the same port as HttpGatewayEndpoint."
                    },
                    "enableHttpGatewayExclusiveAuthMode": {
                      "type": "boolean",
                      "description": "If true, token-based authentication is not allowed on the HttpGatewayEndpoint. This is required to support TLS versions 1.3 and above. If token-based authentication is used, HttpGatewayTokenAuthConnectionPort must be defined."
                    }
                  }
                },
                "sku": {
                  "description": "The sku of the managed cluster",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Sku Name.",
                      "type": "string",
                      "enum": [
                        "Basic",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Basic",
                            "description": "Basic requires a minimum of 3 nodes and allows only 1 node type."
                          },
                          {
                            "value": "Standard",
                            "description": "Requires a minimum of 5 nodes and allows 1 or more node type."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "required": [
                "sku"
              ],
              "description": "The managed cluster resource\n",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Azure resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Azure resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "Azure resource etag.",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The managed cluster resource properties",
                  "type": "object",
                  "required": [
                    "dnsName",
                    "adminUserName"
                  ],
                  "properties": {
                    "dnsName": {
                      "type": "string",
                      "description": "The cluster dns name."
                    },
                    "fqdn": {
                      "type": "string",
                      "description": "The fully qualified domain name associated with the public load balancer of the cluster.",
                      "readOnly": true
                    },
                    "ipv4Address": {
                      "type": "string",
                      "description": "The IPv4 address associated with the public load balancer of the cluster.",
                      "readOnly": true
                    },
                    "clusterId": {
                      "type": "string",
                      "description": "A service generated unique identifier for the cluster resource.",
                      "readOnly": true
                    },
                    "clusterState": {
                      "readOnly": true,
                      "description": "The current state of the cluster.",
                      "type": "string",
                      "enum": [
                        "WaitingForNodes",
                        "Deploying",
                        "BaselineUpgrade",
                        "Upgrading",
                        "UpgradeFailed",
                        "Ready"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterState",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "WaitingForNodes",
                            "description": "Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it."
                          },
                          {
                            "value": "Deploying",
                            "description": "Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up."
                          },
                          {
                            "value": "BaselineUpgrade",
                            "description": "Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time."
                          },
                          {
                            "value": "Upgrading",
                            "description": "Indicates that the cluster is being upgraded with the user provided configuration."
                          },
                          {
                            "value": "UpgradeFailed",
                            "description": "Indicates that the last upgrade for the cluster has failed."
                          },
                          {
                            "value": "Ready",
                            "description": "Indicates that the cluster is in a stable state."
                          }
                        ]
                      }
                    },
                    "clusterCertificateThumbprints": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of thumbprints of the cluster certificates.",
                      "readOnly": true
                    },
                    "clientConnectionPort": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The port used for client connections to the cluster.",
                      "default": 19000
                    },
                    "httpGatewayConnectionPort": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The port used for HTTP connections to the cluster.",
                      "default": 19080
                    },
                    "adminUserName": {
                      "type": "string",
                      "description": "VM admin user name."
                    },
                    "adminPassword": {
                      "type": "string",
                      "x-ms-secret": true,
                      "format": "password",
                      "description": "VM admin user password."
                    },
                    "loadBalancingRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "frontendPort",
                          "backendPort",
                          "protocol",
                          "probeProtocol"
                        ],
                        "properties": {
                          "frontendPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 1 and 65534.",
                            "minimum": 1,
                            "maximum": 65534
                          },
                          "backendPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.",
                            "minimum": 1,
                            "maximum": 65534
                          },
                          "protocol": {
                            "type": "string",
                            "description": "The reference to the transport protocol used by the load balancing rule.",
                            "enum": [
                              "tcp",
                              "udp"
                            ],
                            "x-ms-enum": {
                              "name": "protocol",
                              "modelAsString": true
                            }
                          },
                          "probePort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The prob port used by the load balancing rule. Acceptable values are between 1 and 65535.",
                            "minimum": 1,
                            "maximum": 65534
                          },
                          "probeProtocol": {
                            "type": "string",
                            "description": "the reference to the load balancer probe used by the load balancing rule.",
                            "enum": [
                              "tcp",
                              "http",
                              "https"
                            ],
                            "x-ms-enum": {
                              "name": "probeProtocol",
                              "modelAsString": true
                            }
                          },
                          "probeRequestPath": {
                            "type": "string",
                            "description": "The probe request path. Only supported for HTTP/HTTPS probes."
                          },
                          "loadDistribution": {
                            "type": "string",
                            "description": "The load distribution policy for this rule."
                          }
                        },
                        "description": "Describes a load balancing rule."
                      },
                      "x-ms-identifiers": [],
                      "description": "Load balancing rules that are applied to the public load balancer of the cluster."
                    },
                    "allowRdpAccess": {
                      "type": "boolean",
                      "description": "Setting this to true enables RDP access to the VM. The default NSG rule opens RDP port to Internet which can be overridden with custom Network Security Rules. The default value for this setting is false."
                    },
                    "networkSecurityRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "protocol",
                          "access",
                          "priority",
                          "direction"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Network security rule name."
                          },
                          "description": {
                            "type": "string",
                            "description": "Network security rule description."
                          },
                          "protocol": {
                            "type": "string",
                            "description": "Network protocol this rule applies to.",
                            "enum": [
                              "http",
                              "https",
                              "tcp",
                              "udp",
                              "icmp",
                              "ah",
                              "esp"
                            ],
                            "x-ms-enum": {
                              "name": "nsgProtocol",
                              "modelAsString": true
                            }
                          },
                          "sourceAddressPrefixes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The CIDR or source IP ranges."
                          },
                          "destinationAddressPrefixes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The destination address prefixes. CIDR or destination IP ranges."
                          },
                          "sourcePortRanges": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The source port ranges."
                          },
                          "destinationPortRanges": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The destination port ranges."
                          },
                          "sourceAddressPrefix": {
                            "type": "string",
                            "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from."
                          },
                          "destinationAddressPrefix": {
                            "type": "string",
                            "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."
                          },
                          "sourcePortRange": {
                            "type": "string",
                            "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                          },
                          "destinationPortRange": {
                            "type": "string",
                            "description": "he destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                          },
                          "access": {
                            "type": "string",
                            "description": "The network traffic is allowed or denied.",
                            "enum": [
                              "allow",
                              "deny"
                            ],
                            "x-ms-enum": {
                              "name": "access",
                              "modelAsString": true
                            }
                          },
                          "priority": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The priority of the rule. The value can be in the range 1000 to 3000. Values outside this range are reserved for Service Fabric ManagerCluster Resource Provider. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                            "minimum": 1000,
                            "maximum": 3000
                          },
                          "direction": {
                            "type": "string",
                            "description": "Network security rule direction.",
                            "enum": [
                              "inbound",
                              "outbound"
                            ],
                            "x-ms-enum": {
                              "name": "direction",
                              "modelAsString": true
                            }
                          }
                        },
                        "description": "Describes a network security rule."
                      },
                      "x-ms-identifiers": [],
                      "description": "Custom Network Security Rules that are applied to the Virtual Network of the cluster."
                    },
                    "clients": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "isAdmin"
                        ],
                        "properties": {
                          "isAdmin": {
                            "type": "boolean",
                            "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                          },
                          "thumbprint": {
                            "type": "string",
                            "description": "Certificate thumbprint."
                          },
                          "commonName": {
                            "type": "string",
                            "description": "Certificate common name."
                          },
                          "issuerThumbprint": {
                            "type": "string",
                            "description": "Issuer thumbprint for the certificate. Only used together with CommonName."
                          }
                        },
                        "description": "Client certificate definition."
                      },
                      "x-ms-identifiers": [],
                      "description": "Client certificates that are allowed to manage the cluster."
                    },
                    "azureActiveDirectory": {
                      "description": "The AAD authentication settings of the cluster.",
                      "type": "object",
                      "properties": {
                        "tenantId": {
                          "type": "string",
                          "description": "Azure active directory tenant id."
                        },
                        "clusterApplication": {
                          "type": "string",
                          "description": "Azure active directory cluster application id."
                        },
                        "clientApplication": {
                          "type": "string",
                          "description": "Azure active directory client application id."
                        }
                      }
                    },
                    "fabricSettings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "parameters"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The section name of the fabric settings."
                          },
                          "parameters": {
                            "type": "array",
                            "description": "The collection of parameters in the section.",
                            "items": {
                              "type": "object",
                              "required": [
                                "name",
                                "value"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The parameter name of fabric setting."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The parameter value of fabric setting."
                                }
                              },
                              "description": "Describes a parameter in fabric settings of the cluster."
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          }
                        },
                        "description": "Describes a section in the fabric settings of the cluster."
                      },
                      "x-ms-identifiers": [],
                      "description": "The list of custom fabric settings to configure the cluster."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioning state of the managed cluster resource.",
                      "type": "string",
                      "enum": [
                        "None",
                        "Creating",
                        "Created",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting",
                        "Deleted",
                        "Other"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "clusterCodeVersion": {
                      "type": "string",
                      "description": "The Service Fabric runtime version of the cluster. This property is required when **clusterUpgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**."
                    },
                    "clusterUpgradeMode": {
                      "type": "string",
                      "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.\n",
                      "enum": [
                        "Automatic",
                        "Manual"
                      ],
                      "default": "Automatic",
                      "x-ms-enum": {
                        "name": "ClusterUpgradeMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Automatic",
                            "description": "The cluster will be automatically upgraded to the latest Service Fabric runtime version, **clusterUpgradeCadence** will determine when the upgrade starts after the new version becomes available."
                          },
                          {
                            "value": "Manual",
                            "description": "The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource."
                          }
                        ]
                      }
                    },
                    "clusterUpgradeCadence": {
                      "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **clusterUpgradeMode** is set to 'Automatic'.",
                      "type": "string",
                      "enum": [
                        "Wave0",
                        "Wave1",
                        "Wave2"
                      ],
                      "x-ms-enum": {
                        "name": "clusterUpgradeCadence",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Wave0",
                            "description": "Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters."
                          },
                          {
                            "value": "Wave1",
                            "description": "Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters."
                          },
                          {
                            "value": "Wave2",
                            "description": "Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters."
                          }
                        ]
                      }
                    },
                    "addonFeatures": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Available cluster add-on features",
                        "enum": [
                          "DnsService",
                          "BackupRestoreService",
                          "ResourceMonitorService"
                        ],
                        "x-ms-enum": {
                          "name": "ManagedClusterAddOnFeature",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "DnsService",
                              "description": "Dns service"
                            },
                            {
                              "value": "BackupRestoreService",
                              "description": "Backup and restore service"
                            },
                            {
                              "value": "ResourceMonitorService",
                              "description": "Resource monitor service"
                            }
                          ]
                        }
                      },
                      "description": "List of add-on features to enable on the cluster."
                    },
                    "enableAutoOSUpgrade": {
                      "type": "boolean",
                      "description": "Setting this to true enables automatic OS upgrade for the node types that are created using any platform OS image with version 'latest'. The default value for this setting is false."
                    },
                    "zonalResiliency": {
                      "type": "boolean",
                      "description": "Indicates if the cluster has zone resiliency.",
                      "default": false
                    },
                    "applicationTypeVersionsCleanupPolicy": {
                      "description": "The policy used to clean up unused versions.",
                      "type": "object",
                      "required": [
                        "maxUnusedVersionsToKeep"
                      ],
                      "properties": {
                        "maxUnusedVersionsToKeep": {
                          "type": "integer",
                          "format": "int32",
                          "minimum": 0,
                          "description": "Number of unused versions per application type to keep."
                        }
                      }
                    },
                    "enableIpv6": {
                      "type": "boolean",
                      "description": "Setting this to true creates IPv6 address space for the default VNet used by the cluster. This setting cannot be changed once the cluster is created. The default value for this setting is false."
                    },
                    "subnetId": {
                      "type": "string",
                      "description": "If specified, the node types for the cluster are created in this subnet instead of the default VNet. The **networkSecurityRules** specified for the cluster are also applied to this subnet. This setting cannot be changed once the cluster is created."
                    },
                    "ipTags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "ipTagType",
                          "tag"
                        ],
                        "properties": {
                          "ipTagType": {
                            "type": "string",
                            "description": "IP tag type. Example: FirstPartyUsage."
                          },
                          "tag": {
                            "type": "string",
                            "description": "IP tag associated with the public IP. Example: SQL, Storage etc."
                          }
                        },
                        "description": "The IP tag associated with the public IP address."
                      },
                      "x-ms-identifiers": [],
                      "description": "The list of IP tags associated with the default public IP address of the cluster."
                    },
                    "ipv6Address": {
                      "type": "string",
                      "description": "IPv6 address for the cluster if IPv6 is enabled.",
                      "readOnly": true
                    },
                    "enableServicePublicIP": {
                      "type": "boolean",
                      "description": "Setting this to true will link the IPv4 address as the ServicePublicIP of the IPv6 address. It can only be set to True if IPv6 is enabled on the cluster."
                    },
                    "auxiliarySubnets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Subnet name."
                          },
                          "enableIpv6": {
                            "type": "boolean",
                            "description": "Indicates wether to enable Ipv6 or not. If not provided, it will take the same configuration as the cluster."
                          },
                          "privateEndpointNetworkPolicies": {
                            "type": "string",
                            "description": "Enable or Disable apply network policies on private end point in the subnet.",
                            "enum": [
                              "enabled",
                              "disabled"
                            ],
                            "x-ms-enum": {
                              "name": "privateEndpointNetworkPolicies",
                              "modelAsString": true
                            }
                          },
                          "privateLinkServiceNetworkPolicies": {
                            "type": "string",
                            "description": "Enable or Disable apply network policies on private link service in the subnet.",
                            "enum": [
                              "enabled",
                              "disabled"
                            ],
                            "x-ms-enum": {
                              "name": "privateLinkServiceNetworkPolicies",
                              "modelAsString": true
                            }
                          },
                          "networkSecurityGroupId": {
                            "type": "string",
                            "description": "Full resource id for the network security group."
                          }
                        },
                        "description": "Describes a Subnet."
                      },
                      "x-ms-identifiers": [],
                      "description": "Auxiliary subnets for the cluster."
                    },
                    "serviceEndpoints": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "service"
                        ],
                        "properties": {
                          "service": {
                            "type": "string",
                            "description": "The type of the endpoint service."
                          },
                          "locations": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "A list of locations."
                          }
                        },
                        "description": "The service endpoint properties."
                      },
                      "x-ms-identifiers": [],
                      "description": "Service endpoints for subnets in the cluster."
                    },
                    "zonalUpdateMode": {
                      "description": "Indicates the update mode for Cross Az clusters.",
                      "type": "string",
                      "enum": [
                        "Standard",
                        "Fast"
                      ],
                      "x-ms-enum": {
                        "name": "ZonalUpdateMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Standard",
                            "description": "The cluster will use 5 upgrade domains for Cross Az Node types."
                          },
                          {
                            "value": "Fast",
                            "description": "The cluster will use a maximum of 3 upgrade domains per zone instead of 5 for Cross Az Node types for faster deployments."
                          }
                        ]
                      }
                    },
                    "useCustomVnet": {
                      "type": "boolean",
                      "description": "For new clusters, this parameter indicates that it uses Bring your own VNet, but the subnet is specified at node type level; and for such clusters, the subnetId property is required for node types."
                    },
                    "publicIPPrefixId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/publicIPPrefixes"
                          }
                        ]
                      },
                      "description": "Specify the resource id of a public IPv4 prefix that the load balancer will allocate a public IPv4 address from. This setting cannot be changed once the cluster is created."
                    },
                    "publicIPv6PrefixId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/publicIPPrefixes"
                          }
                        ]
                      },
                      "description": "Specify the resource id of a public IPv6 prefix that the load balancer will allocate a public IPv6 address from. This setting cannot be changed once the cluster is created."
                    },
                    "ddosProtectionPlanId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/ddosProtectionPlans"
                          }
                        ]
                      },
                      "description": "Specify the resource id of a DDoS network protection plan that will be associated with the virtual network of the cluster."
                    },
                    "upgradeDescription": {
                      "description": "The policy to use when upgrading the cluster.",
                      "type": "object",
                      "properties": {
                        "forceRestart": {
                          "type": "boolean",
                          "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data)."
                        },
                        "healthPolicy": {
                          "description": "The cluster health policy defines a health policy used to evaluate the health of the cluster during a cluster upgrade.",
                          "type": "object",
                          "required": [
                            "maxPercentUnhealthyNodes",
                            "maxPercentUnhealthyApplications"
                          ],
                          "properties": {
                            "maxPercentUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.\n",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentUnhealthyApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.\nThe computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.\n",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 100
                            }
                          }
                        },
                        "deltaHealthPolicy": {
                          "description": "The cluster delta health policy defines a health policy used to evaluate the health of the cluster during a cluster upgrade.",
                          "type": "object",
                          "required": [
                            "maxPercentDeltaUnhealthyNodes"
                          ],
                          "properties": {
                            "maxPercentDeltaUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentDeltaUnhealthyApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.\nNOTE: This value will overwrite the value specified in properties.UpgradeDescription.HealthPolicy.MaxPercentUnhealthyApplications\n",
                              "minimum": 0,
                              "maximum": 100
                            }
                          }
                        },
                        "monitoringPolicy": {
                          "description": "The cluster monitoring policy describes the parameters for monitoring an upgrade in Monitored mode.",
                          "type": "object",
                          "required": [
                            "healthCheckWaitDuration",
                            "healthCheckStableDuration",
                            "healthCheckRetryTimeout",
                            "upgradeTimeout",
                            "upgradeDomainTimeout"
                          ],
                          "properties": {
                            "healthCheckWaitDuration": {
                              "type": "string",
                              "x-ms-format": "duration-constant",
                              "description": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                            },
                            "healthCheckStableDuration": {
                              "type": "string",
                              "x-ms-format": "duration-constant",
                              "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                            },
                            "healthCheckRetryTimeout": {
                              "type": "string",
                              "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                            },
                            "upgradeTimeout": {
                              "type": "string",
                              "description": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                            },
                            "upgradeDomainTimeout": {
                              "type": "string",
                              "description": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                            }
                          }
                        },
                        "upgradeReplicaSetCheckTimeout": {
                          "type": "string",
                          "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues.\nWhen this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues.\nThe timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.\nThis value must be between 00:00:00 and 49710.06:28:15 (unsigned 32 bit integer for seconds)\n"
                        }
                      }
                    },
                    "httpGatewayTokenAuthConnectionPort": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The port used for token-auth based HTTPS connections to the cluster. Cannot be set to the same port as HttpGatewayEndpoint."
                    },
                    "enableHttpGatewayExclusiveAuthMode": {
                      "type": "boolean",
                      "description": "If true, token-based authentication is not allowed on the HttpGatewayEndpoint. This is required to support TLS versions 1.3 and above. If token-based authentication is used, HttpGatewayTokenAuthConnectionPort must be defined."
                    }
                  }
                },
                "sku": {
                  "description": "The sku of the managed cluster",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Sku Name.",
                      "type": "string",
                      "enum": [
                        "Basic",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Basic",
                            "description": "Basic requires a minimum of 3 nodes and allows only 1 node type."
                          },
                          {
                            "value": "Standard",
                            "description": "Requires a minimum of 5 nodes and allows 1 or more node type."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The request was accepted and the operation will complete asynchronously.",
            "schema": {
              "type": "object",
              "required": [
                "sku"
              ],
              "description": "The managed cluster resource\n",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Azure resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Azure resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "Azure resource etag.",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The managed cluster resource properties",
                  "type": "object",
                  "required": [
                    "dnsName",
                    "adminUserName"
                  ],
                  "properties": {
                    "dnsName": {
                      "type": "string",
                      "description": "The cluster dns name."
                    },
                    "fqdn": {
                      "type": "string",
                      "description": "The fully qualified domain name associated with the public load balancer of the cluster.",
                      "readOnly": true
                    },
                    "ipv4Address": {
                      "type": "string",
                      "description": "The IPv4 address associated with the public load balancer of the cluster.",
                      "readOnly": true
                    },
                    "clusterId": {
                      "type": "string",
                      "description": "A service generated unique identifier for the cluster resource.",
                      "readOnly": true
                    },
                    "clusterState": {
                      "readOnly": true,
                      "description": "The current state of the cluster.",
                      "type": "string",
                      "enum": [
                        "WaitingForNodes",
                        "Deploying",
                        "BaselineUpgrade",
                        "Upgrading",
                        "UpgradeFailed",
                        "Ready"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterState",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "WaitingForNodes",
                            "description": "Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it."
                          },
                          {
                            "value": "Deploying",
                            "description": "Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up."
                          },
                          {
                            "value": "BaselineUpgrade",
                            "description": "Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time."
                          },
                          {
                            "value": "Upgrading",
                            "description": "Indicates that the cluster is being upgraded with the user provided configuration."
                          },
                          {
                            "value": "UpgradeFailed",
                            "description": "Indicates that the last upgrade for the cluster has failed."
                          },
                          {
                            "value": "Ready",
                            "description": "Indicates that the cluster is in a stable state."
                          }
                        ]
                      }
                    },
                    "clusterCertificateThumbprints": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of thumbprints of the cluster certificates.",
                      "readOnly": true
                    },
                    "clientConnectionPort": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The port used for client connections to the cluster.",
                      "default": 19000
                    },
                    "httpGatewayConnectionPort": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The port used for HTTP connections to the cluster.",
                      "default": 19080
                    },
                    "adminUserName": {
                      "type": "string",
                      "description": "VM admin user name."
                    },
                    "adminPassword": {
                      "type": "string",
                      "x-ms-secret": true,
                      "format": "password",
                      "description": "VM admin user password."
                    },
                    "loadBalancingRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "frontendPort",
                          "backendPort",
                          "protocol",
                          "probeProtocol"
                        ],
                        "properties": {
                          "frontendPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 1 and 65534.",
                            "minimum": 1,
                            "maximum": 65534
                          },
                          "backendPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.",
                            "minimum": 1,
                            "maximum": 65534
                          },
                          "protocol": {
                            "type": "string",
                            "description": "The reference to the transport protocol used by the load balancing rule.",
                            "enum": [
                              "tcp",
                              "udp"
                            ],
                            "x-ms-enum": {
                              "name": "protocol",
                              "modelAsString": true
                            }
                          },
                          "probePort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The prob port used by the load balancing rule. Acceptable values are between 1 and 65535.",
                            "minimum": 1,
                            "maximum": 65534
                          },
                          "probeProtocol": {
                            "type": "string",
                            "description": "the reference to the load balancer probe used by the load balancing rule.",
                            "enum": [
                              "tcp",
                              "http",
                              "https"
                            ],
                            "x-ms-enum": {
                              "name": "probeProtocol",
                              "modelAsString": true
                            }
                          },
                          "probeRequestPath": {
                            "type": "string",
                            "description": "The probe request path. Only supported for HTTP/HTTPS probes."
                          },
                          "loadDistribution": {
                            "type": "string",
                            "description": "The load distribution policy for this rule."
                          }
                        },
                        "description": "Describes a load balancing rule."
                      },
                      "x-ms-identifiers": [],
                      "description": "Load balancing rules that are applied to the public load balancer of the cluster."
                    },
                    "allowRdpAccess": {
                      "type": "boolean",
                      "description": "Setting this to true enables RDP access to the VM. The default NSG rule opens RDP port to Internet which can be overridden with custom Network Security Rules. The default value for this setting is false."
                    },
                    "networkSecurityRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "protocol",
                          "access",
                          "priority",
                          "direction"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Network security rule name."
                          },
                          "description": {
                            "type": "string",
                            "description": "Network security rule description."
                          },
                          "protocol": {
                            "type": "string",
                            "description": "Network protocol this rule applies to.",
                            "enum": [
                              "http",
                              "https",
                              "tcp",
                              "udp",
                              "icmp",
                              "ah",
                              "esp"
                            ],
                            "x-ms-enum": {
                              "name": "nsgProtocol",
                              "modelAsString": true
                            }
                          },
                          "sourceAddressPrefixes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The CIDR or source IP ranges."
                          },
                          "destinationAddressPrefixes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The destination address prefixes. CIDR or destination IP ranges."
                          },
                          "sourcePortRanges": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The source port ranges."
                          },
                          "destinationPortRanges": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The destination port ranges."
                          },
                          "sourceAddressPrefix": {
                            "type": "string",
                            "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from."
                          },
                          "destinationAddressPrefix": {
                            "type": "string",
                            "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."
                          },
                          "sourcePortRange": {
                            "type": "string",
                            "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                          },
                          "destinationPortRange": {
                            "type": "string",
                            "description": "he destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                          },
                          "access": {
                            "type": "string",
                            "description": "The network traffic is allowed or denied.",
                            "enum": [
                              "allow",
                              "deny"
                            ],
                            "x-ms-enum": {
                              "name": "access",
                              "modelAsString": true
                            }
                          },
                          "priority": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The priority of the rule. The value can be in the range 1000 to 3000. Values outside this range are reserved for Service Fabric ManagerCluster Resource Provider. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                            "minimum": 1000,
                            "maximum": 3000
                          },
                          "direction": {
                            "type": "string",
                            "description": "Network security rule direction.",
                            "enum": [
                              "inbound",
                              "outbound"
                            ],
                            "x-ms-enum": {
                              "name": "direction",
                              "modelAsString": true
                            }
                          }
                        },
                        "description": "Describes a network security rule."
                      },
                      "x-ms-identifiers": [],
                      "description": "Custom Network Security Rules that are applied to the Virtual Network of the cluster."
                    },
                    "clients": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "isAdmin"
                        ],
                        "properties": {
                          "isAdmin": {
                            "type": "boolean",
                            "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                          },
                          "thumbprint": {
                            "type": "string",
                            "description": "Certificate thumbprint."
                          },
                          "commonName": {
                            "type": "string",
                            "description": "Certificate common name."
                          },
                          "issuerThumbprint": {
                            "type": "string",
                            "description": "Issuer thumbprint for the certificate. Only used together with CommonName."
                          }
                        },
                        "description": "Client certificate definition."
                      },
                      "x-ms-identifiers": [],
                      "description": "Client certificates that are allowed to manage the cluster."
                    },
                    "azureActiveDirectory": {
                      "description": "The AAD authentication settings of the cluster.",
                      "type": "object",
                      "properties": {
                        "tenantId": {
                          "type": "string",
                          "description": "Azure active directory tenant id."
                        },
                        "clusterApplication": {
                          "type": "string",
                          "description": "Azure active directory cluster application id."
                        },
                        "clientApplication": {
                          "type": "string",
                          "description": "Azure active directory client application id."
                        }
                      }
                    },
                    "fabricSettings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "parameters"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The section name of the fabric settings."
                          },
                          "parameters": {
                            "type": "array",
                            "description": "The collection of parameters in the section.",
                            "items": {
                              "type": "object",
                              "required": [
                                "name",
                                "value"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The parameter name of fabric setting."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The parameter value of fabric setting."
                                }
                              },
                              "description": "Describes a parameter in fabric settings of the cluster."
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          }
                        },
                        "description": "Describes a section in the fabric settings of the cluster."
                      },
                      "x-ms-identifiers": [],
                      "description": "The list of custom fabric settings to configure the cluster."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioning state of the managed cluster resource.",
                      "type": "string",
                      "enum": [
                        "None",
                        "Creating",
                        "Created",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting",
                        "Deleted",
                        "Other"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "clusterCodeVersion": {
                      "type": "string",
                      "description": "The Service Fabric runtime version of the cluster. This property is required when **clusterUpgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**."
                    },
                    "clusterUpgradeMode": {
                      "type": "string",
                      "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.\n",
                      "enum": [
                        "Automatic",
                        "Manual"
                      ],
                      "default": "Automatic",
                      "x-ms-enum": {
                        "name": "ClusterUpgradeMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Automatic",
                            "description": "The cluster will be automatically upgraded to the latest Service Fabric runtime version, **clusterUpgradeCadence** will determine when the upgrade starts after the new version becomes available."
                          },
                          {
                            "value": "Manual",
                            "description": "The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource."
                          }
                        ]
                      }
                    },
                    "clusterUpgradeCadence": {
                      "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **clusterUpgradeMode** is set to 'Automatic'.",
                      "type": "string",
                      "enum": [
                        "Wave0",
                        "Wave1",
                        "Wave2"
                      ],
                      "x-ms-enum": {
                        "name": "clusterUpgradeCadence",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Wave0",
                            "description": "Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters."
                          },
                          {
                            "value": "Wave1",
                            "description": "Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters."
                          },
                          {
                            "value": "Wave2",
                            "description": "Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters."
                          }
                        ]
                      }
                    },
                    "addonFeatures": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Available cluster add-on features",
                        "enum": [
                          "DnsService",
                          "BackupRestoreService",
                          "ResourceMonitorService"
                        ],
                        "x-ms-enum": {
                          "name": "ManagedClusterAddOnFeature",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "DnsService",
                              "description": "Dns service"
                            },
                            {
                              "value": "BackupRestoreService",
                              "description": "Backup and restore service"
                            },
                            {
                              "value": "ResourceMonitorService",
                              "description": "Resource monitor service"
                            }
                          ]
                        }
                      },
                      "description": "List of add-on features to enable on the cluster."
                    },
                    "enableAutoOSUpgrade": {
                      "type": "boolean",
                      "description": "Setting this to true enables automatic OS upgrade for the node types that are created using any platform OS image with version 'latest'. The default value for this setting is false."
                    },
                    "zonalResiliency": {
                      "type": "boolean",
                      "description": "Indicates if the cluster has zone resiliency.",
                      "default": false
                    },
                    "applicationTypeVersionsCleanupPolicy": {
                      "description": "The policy used to clean up unused versions.",
                      "type": "object",
                      "required": [
                        "maxUnusedVersionsToKeep"
                      ],
                      "properties": {
                        "maxUnusedVersionsToKeep": {
                          "type": "integer",
                          "format": "int32",
                          "minimum": 0,
                          "description": "Number of unused versions per application type to keep."
                        }
                      }
                    },
                    "enableIpv6": {
                      "type": "boolean",
                      "description": "Setting this to true creates IPv6 address space for the default VNet used by the cluster. This setting cannot be changed once the cluster is created. The default value for this setting is false."
                    },
                    "subnetId": {
                      "type": "string",
                      "description": "If specified, the node types for the cluster are created in this subnet instead of the default VNet. The **networkSecurityRules** specified for the cluster are also applied to this subnet. This setting cannot be changed once the cluster is created."
                    },
                    "ipTags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "ipTagType",
                          "tag"
                        ],
                        "properties": {
                          "ipTagType": {
                            "type": "string",
                            "description": "IP tag type. Example: FirstPartyUsage."
                          },
                          "tag": {
                            "type": "string",
                            "description": "IP tag associated with the public IP. Example: SQL, Storage etc."
                          }
                        },
                        "description": "The IP tag associated with the public IP address."
                      },
                      "x-ms-identifiers": [],
                      "description": "The list of IP tags associated with the default public IP address of the cluster."
                    },
                    "ipv6Address": {
                      "type": "string",
                      "description": "IPv6 address for the cluster if IPv6 is enabled.",
                      "readOnly": true
                    },
                    "enableServicePublicIP": {
                      "type": "boolean",
                      "description": "Setting this to true will link the IPv4 address as the ServicePublicIP of the IPv6 address. It can only be set to True if IPv6 is enabled on the cluster."
                    },
                    "auxiliarySubnets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Subnet name."
                          },
                          "enableIpv6": {
                            "type": "boolean",
                            "description": "Indicates wether to enable Ipv6 or not. If not provided, it will take the same configuration as the cluster."
                          },
                          "privateEndpointNetworkPolicies": {
                            "type": "string",
                            "description": "Enable or Disable apply network policies on private end point in the subnet.",
                            "enum": [
                              "enabled",
                              "disabled"
                            ],
                            "x-ms-enum": {
                              "name": "privateEndpointNetworkPolicies",
                              "modelAsString": true
                            }
                          },
                          "privateLinkServiceNetworkPolicies": {
                            "type": "string",
                            "description": "Enable or Disable apply network policies on private link service in the subnet.",
                            "enum": [
                              "enabled",
                              "disabled"
                            ],
                            "x-ms-enum": {
                              "name": "privateLinkServiceNetworkPolicies",
                              "modelAsString": true
                            }
                          },
                          "networkSecurityGroupId": {
                            "type": "string",
                            "description": "Full resource id for the network security group."
                          }
                        },
                        "description": "Describes a Subnet."
                      },
                      "x-ms-identifiers": [],
                      "description": "Auxiliary subnets for the cluster."
                    },
                    "serviceEndpoints": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "service"
                        ],
                        "properties": {
                          "service": {
                            "type": "string",
                            "description": "The type of the endpoint service."
                          },
                          "locations": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "A list of locations."
                          }
                        },
                        "description": "The service endpoint properties."
                      },
                      "x-ms-identifiers": [],
                      "description": "Service endpoints for subnets in the cluster."
                    },
                    "zonalUpdateMode": {
                      "description": "Indicates the update mode for Cross Az clusters.",
                      "type": "string",
                      "enum": [
                        "Standard",
                        "Fast"
                      ],
                      "x-ms-enum": {
                        "name": "ZonalUpdateMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Standard",
                            "description": "The cluster will use 5 upgrade domains for Cross Az Node types."
                          },
                          {
                            "value": "Fast",
                            "description": "The cluster will use a maximum of 3 upgrade domains per zone instead of 5 for Cross Az Node types for faster deployments."
                          }
                        ]
                      }
                    },
                    "useCustomVnet": {
                      "type": "boolean",
                      "description": "For new clusters, this parameter indicates that it uses Bring your own VNet, but the subnet is specified at node type level; and for such clusters, the subnetId property is required for node types."
                    },
                    "publicIPPrefixId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/publicIPPrefixes"
                          }
                        ]
                      },
                      "description": "Specify the resource id of a public IPv4 prefix that the load balancer will allocate a public IPv4 address from. This setting cannot be changed once the cluster is created."
                    },
                    "publicIPv6PrefixId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/publicIPPrefixes"
                          }
                        ]
                      },
                      "description": "Specify the resource id of a public IPv6 prefix that the load balancer will allocate a public IPv6 address from. This setting cannot be changed once the cluster is created."
                    },
                    "ddosProtectionPlanId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/ddosProtectionPlans"
                          }
                        ]
                      },
                      "description": "Specify the resource id of a DDoS network protection plan that will be associated with the virtual network of the cluster."
                    },
                    "upgradeDescription": {
                      "description": "The policy to use when upgrading the cluster.",
                      "type": "object",
                      "properties": {
                        "forceRestart": {
                          "type": "boolean",
                          "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data)."
                        },
                        "healthPolicy": {
                          "description": "The cluster health policy defines a health policy used to evaluate the health of the cluster during a cluster upgrade.",
                          "type": "object",
                          "required": [
                            "maxPercentUnhealthyNodes",
                            "maxPercentUnhealthyApplications"
                          ],
                          "properties": {
                            "maxPercentUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.\n",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentUnhealthyApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.\nThe computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.\n",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 100
                            }
                          }
                        },
                        "deltaHealthPolicy": {
                          "description": "The cluster delta health policy defines a health policy used to evaluate the health of the cluster during a cluster upgrade.",
                          "type": "object",
                          "required": [
                            "maxPercentDeltaUnhealthyNodes"
                          ],
                          "properties": {
                            "maxPercentDeltaUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentDeltaUnhealthyApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.\nNOTE: This value will overwrite the value specified in properties.UpgradeDescription.HealthPolicy.MaxPercentUnhealthyApplications\n",
                              "minimum": 0,
                              "maximum": 100
                            }
                          }
                        },
                        "monitoringPolicy": {
                          "description": "The cluster monitoring policy describes the parameters for monitoring an upgrade in Monitored mode.",
                          "type": "object",
                          "required": [
                            "healthCheckWaitDuration",
                            "healthCheckStableDuration",
                            "healthCheckRetryTimeout",
                            "upgradeTimeout",
                            "upgradeDomainTimeout"
                          ],
                          "properties": {
                            "healthCheckWaitDuration": {
                              "type": "string",
                              "x-ms-format": "duration-constant",
                              "description": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                            },
                            "healthCheckStableDuration": {
                              "type": "string",
                              "x-ms-format": "duration-constant",
                              "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                            },
                            "healthCheckRetryTimeout": {
                              "type": "string",
                              "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                            },
                            "upgradeTimeout": {
                              "type": "string",
                              "description": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                            },
                            "upgradeDomainTimeout": {
                              "type": "string",
                              "description": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                            }
                          }
                        },
                        "upgradeReplicaSetCheckTimeout": {
                          "type": "string",
                          "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues.\nWhen this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues.\nThe timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.\nThis value must be between 00:00:00 and 49710.06:28:15 (unsigned 32 bit integer for seconds)\n"
                        }
                      }
                    },
                    "httpGatewayTokenAuthConnectionPort": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The port used for token-auth based HTTPS connections to the cluster. Cannot be set to the same port as HttpGatewayEndpoint."
                    },
                    "enableHttpGatewayExclusiveAuthMode": {
                      "type": "boolean",
                      "description": "If true, token-based authentication is not allowed on the HttpGatewayEndpoint. This is required to support TLS versions 1.3 and above. If token-based authentication is used, HttpGatewayTokenAuthConnectionPort must be defined."
                    }
                  }
                },
                "sku": {
                  "description": "The sku of the managed cluster",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Sku Name.",
                      "type": "string",
                      "enum": [
                        "Basic",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Basic",
                            "description": "Basic requires a minimum of 3 nodes and allows only 1 node type."
                          },
                          {
                            "value": "Standard",
                            "description": "Requires a minimum of 5 nodes and allows 1 or more node type."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "description": "The URL to get the status of an ongoing long-running operation.",
                "type": "string"
              },
              "Location": {
                "description": "The URL to get the status of a completed long-running operation.",
                "type": "string"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ManagedCluster"
        ],
        "operationId": "ManagedClusters_Update",
        "summary": "Updates the tags of of a Service Fabric managed cluster resource.",
        "description": "Update the tags of of a Service Fabric managed cluster resource with the specified name.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The managed cluster resource updated tags.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "Managed cluster update parameters",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "description": "Managed cluster update request"
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "required": [
                "sku"
              ],
              "description": "The managed cluster resource\n",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "Azure resource location.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "tags": {
                  "type": "object",
                  "description": "Azure resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "Azure resource etag.",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The managed cluster resource properties",
                  "type": "object",
                  "required": [
                    "dnsName",
                    "adminUserName"
                  ],
                  "properties": {
                    "dnsName": {
                      "type": "string",
                      "description": "The cluster dns name."
                    },
                    "fqdn": {
                      "type": "string",
                      "description": "The fully qualified domain name associated with the public load balancer of the cluster.",
                      "readOnly": true
                    },
                    "ipv4Address": {
                      "type": "string",
                      "description": "The IPv4 address associated with the public load balancer of the cluster.",
                      "readOnly": true
                    },
                    "clusterId": {
                      "type": "string",
                      "description": "A service generated unique identifier for the cluster resource.",
                      "readOnly": true
                    },
                    "clusterState": {
                      "readOnly": true,
                      "description": "The current state of the cluster.",
                      "type": "string",
                      "enum": [
                        "WaitingForNodes",
                        "Deploying",
                        "BaselineUpgrade",
                        "Upgrading",
                        "UpgradeFailed",
                        "Ready"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterState",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "WaitingForNodes",
                            "description": "Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it."
                          },
                          {
                            "value": "Deploying",
                            "description": "Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up."
                          },
                          {
                            "value": "BaselineUpgrade",
                            "description": "Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time."
                          },
                          {
                            "value": "Upgrading",
                            "description": "Indicates that the cluster is being upgraded with the user provided configuration."
                          },
                          {
                            "value": "UpgradeFailed",
                            "description": "Indicates that the last upgrade for the cluster has failed."
                          },
                          {
                            "value": "Ready",
                            "description": "Indicates that the cluster is in a stable state."
                          }
                        ]
                      }
                    },
                    "clusterCertificateThumbprints": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of thumbprints of the cluster certificates.",
                      "readOnly": true
                    },
                    "clientConnectionPort": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The port used for client connections to the cluster.",
                      "default": 19000
                    },
                    "httpGatewayConnectionPort": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The port used for HTTP connections to the cluster.",
                      "default": 19080
                    },
                    "adminUserName": {
                      "type": "string",
                      "description": "VM admin user name."
                    },
                    "adminPassword": {
                      "type": "string",
                      "x-ms-secret": true,
                      "format": "password",
                      "description": "VM admin user password."
                    },
                    "loadBalancingRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "frontendPort",
                          "backendPort",
                          "protocol",
                          "probeProtocol"
                        ],
                        "properties": {
                          "frontendPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 1 and 65534.",
                            "minimum": 1,
                            "maximum": 65534
                          },
                          "backendPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.",
                            "minimum": 1,
                            "maximum": 65534
                          },
                          "protocol": {
                            "type": "string",
                            "description": "The reference to the transport protocol used by the load balancing rule.",
                            "enum": [
                              "tcp",
                              "udp"
                            ],
                            "x-ms-enum": {
                              "name": "protocol",
                              "modelAsString": true
                            }
                          },
                          "probePort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The prob port used by the load balancing rule. Acceptable values are between 1 and 65535.",
                            "minimum": 1,
                            "maximum": 65534
                          },
                          "probeProtocol": {
                            "type": "string",
                            "description": "the reference to the load balancer probe used by the load balancing rule.",
                            "enum": [
                              "tcp",
                              "http",
                              "https"
                            ],
                            "x-ms-enum": {
                              "name": "probeProtocol",
                              "modelAsString": true
                            }
                          },
                          "probeRequestPath": {
                            "type": "string",
                            "description": "The probe request path. Only supported for HTTP/HTTPS probes."
                          },
                          "loadDistribution": {
                            "type": "string",
                            "description": "The load distribution policy for this rule."
                          }
                        },
                        "description": "Describes a load balancing rule."
                      },
                      "x-ms-identifiers": [],
                      "description": "Load balancing rules that are applied to the public load balancer of the cluster."
                    },
                    "allowRdpAccess": {
                      "type": "boolean",
                      "description": "Setting this to true enables RDP access to the VM. The default NSG rule opens RDP port to Internet which can be overridden with custom Network Security Rules. The default value for this setting is false."
                    },
                    "networkSecurityRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "protocol",
                          "access",
                          "priority",
                          "direction"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Network security rule name."
                          },
                          "description": {
                            "type": "string",
                            "description": "Network security rule description."
                          },
                          "protocol": {
                            "type": "string",
                            "description": "Network protocol this rule applies to.",
                            "enum": [
                              "http",
                              "https",
                              "tcp",
                              "udp",
                              "icmp",
                              "ah",
                              "esp"
                            ],
                            "x-ms-enum": {
                              "name": "nsgProtocol",
                              "modelAsString": true
                            }
                          },
                          "sourceAddressPrefixes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The CIDR or source IP ranges."
                          },
                          "destinationAddressPrefixes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The destination address prefixes. CIDR or destination IP ranges."
                          },
                          "sourcePortRanges": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The source port ranges."
                          },
                          "destinationPortRanges": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The destination port ranges."
                          },
                          "sourceAddressPrefix": {
                            "type": "string",
                            "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from."
                          },
                          "destinationAddressPrefix": {
                            "type": "string",
                            "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."
                          },
                          "sourcePortRange": {
                            "type": "string",
                            "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                          },
                          "destinationPortRange": {
                            "type": "string",
                            "description": "he destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                          },
                          "access": {
                            "type": "string",
                            "description": "The network traffic is allowed or denied.",
                            "enum": [
                              "allow",
                              "deny"
                            ],
                            "x-ms-enum": {
                              "name": "access",
                              "modelAsString": true
                            }
                          },
                          "priority": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The priority of the rule. The value can be in the range 1000 to 3000. Values outside this range are reserved for Service Fabric ManagerCluster Resource Provider. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                            "minimum": 1000,
                            "maximum": 3000
                          },
                          "direction": {
                            "type": "string",
                            "description": "Network security rule direction.",
                            "enum": [
                              "inbound",
                              "outbound"
                            ],
                            "x-ms-enum": {
                              "name": "direction",
                              "modelAsString": true
                            }
                          }
                        },
                        "description": "Describes a network security rule."
                      },
                      "x-ms-identifiers": [],
                      "description": "Custom Network Security Rules that are applied to the Virtual Network of the cluster."
                    },
                    "clients": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "isAdmin"
                        ],
                        "properties": {
                          "isAdmin": {
                            "type": "boolean",
                            "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                          },
                          "thumbprint": {
                            "type": "string",
                            "description": "Certificate thumbprint."
                          },
                          "commonName": {
                            "type": "string",
                            "description": "Certificate common name."
                          },
                          "issuerThumbprint": {
                            "type": "string",
                            "description": "Issuer thumbprint for the certificate. Only used together with CommonName."
                          }
                        },
                        "description": "Client certificate definition."
                      },
                      "x-ms-identifiers": [],
                      "description": "Client certificates that are allowed to manage the cluster."
                    },
                    "azureActiveDirectory": {
                      "description": "The AAD authentication settings of the cluster.",
                      "type": "object",
                      "properties": {
                        "tenantId": {
                          "type": "string",
                          "description": "Azure active directory tenant id."
                        },
                        "clusterApplication": {
                          "type": "string",
                          "description": "Azure active directory cluster application id."
                        },
                        "clientApplication": {
                          "type": "string",
                          "description": "Azure active directory client application id."
                        }
                      }
                    },
                    "fabricSettings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "parameters"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The section name of the fabric settings."
                          },
                          "parameters": {
                            "type": "array",
                            "description": "The collection of parameters in the section.",
                            "items": {
                              "type": "object",
                              "required": [
                                "name",
                                "value"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The parameter name of fabric setting."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The parameter value of fabric setting."
                                }
                              },
                              "description": "Describes a parameter in fabric settings of the cluster."
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          }
                        },
                        "description": "Describes a section in the fabric settings of the cluster."
                      },
                      "x-ms-identifiers": [],
                      "description": "The list of custom fabric settings to configure the cluster."
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioning state of the managed cluster resource.",
                      "type": "string",
                      "enum": [
                        "None",
                        "Creating",
                        "Created",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting",
                        "Deleted",
                        "Other"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "clusterCodeVersion": {
                      "type": "string",
                      "description": "The Service Fabric runtime version of the cluster. This property is required when **clusterUpgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**."
                    },
                    "clusterUpgradeMode": {
                      "type": "string",
                      "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.\n",
                      "enum": [
                        "Automatic",
                        "Manual"
                      ],
                      "default": "Automatic",
                      "x-ms-enum": {
                        "name": "ClusterUpgradeMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Automatic",
                            "description": "The cluster will be automatically upgraded to the latest Service Fabric runtime version, **clusterUpgradeCadence** will determine when the upgrade starts after the new version becomes available."
                          },
                          {
                            "value": "Manual",
                            "description": "The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource."
                          }
                        ]
                      }
                    },
                    "clusterUpgradeCadence": {
                      "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **clusterUpgradeMode** is set to 'Automatic'.",
                      "type": "string",
                      "enum": [
                        "Wave0",
                        "Wave1",
                        "Wave2"
                      ],
                      "x-ms-enum": {
                        "name": "clusterUpgradeCadence",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Wave0",
                            "description": "Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters."
                          },
                          {
                            "value": "Wave1",
                            "description": "Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters."
                          },
                          {
                            "value": "Wave2",
                            "description": "Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters."
                          }
                        ]
                      }
                    },
                    "addonFeatures": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Available cluster add-on features",
                        "enum": [
                          "DnsService",
                          "BackupRestoreService",
                          "ResourceMonitorService"
                        ],
                        "x-ms-enum": {
                          "name": "ManagedClusterAddOnFeature",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "DnsService",
                              "description": "Dns service"
                            },
                            {
                              "value": "BackupRestoreService",
                              "description": "Backup and restore service"
                            },
                            {
                              "value": "ResourceMonitorService",
                              "description": "Resource monitor service"
                            }
                          ]
                        }
                      },
                      "description": "List of add-on features to enable on the cluster."
                    },
                    "enableAutoOSUpgrade": {
                      "type": "boolean",
                      "description": "Setting this to true enables automatic OS upgrade for the node types that are created using any platform OS image with version 'latest'. The default value for this setting is false."
                    },
                    "zonalResiliency": {
                      "type": "boolean",
                      "description": "Indicates if the cluster has zone resiliency.",
                      "default": false
                    },
                    "applicationTypeVersionsCleanupPolicy": {
                      "description": "The policy used to clean up unused versions.",
                      "type": "object",
                      "required": [
                        "maxUnusedVersionsToKeep"
                      ],
                      "properties": {
                        "maxUnusedVersionsToKeep": {
                          "type": "integer",
                          "format": "int32",
                          "minimum": 0,
                          "description": "Number of unused versions per application type to keep."
                        }
                      }
                    },
                    "enableIpv6": {
                      "type": "boolean",
                      "description": "Setting this to true creates IPv6 address space for the default VNet used by the cluster. This setting cannot be changed once the cluster is created. The default value for this setting is false."
                    },
                    "subnetId": {
                      "type": "string",
                      "description": "If specified, the node types for the cluster are created in this subnet instead of the default VNet. The **networkSecurityRules** specified for the cluster are also applied to this subnet. This setting cannot be changed once the cluster is created."
                    },
                    "ipTags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "ipTagType",
                          "tag"
                        ],
                        "properties": {
                          "ipTagType": {
                            "type": "string",
                            "description": "IP tag type. Example: FirstPartyUsage."
                          },
                          "tag": {
                            "type": "string",
                            "description": "IP tag associated with the public IP. Example: SQL, Storage etc."
                          }
                        },
                        "description": "The IP tag associated with the public IP address."
                      },
                      "x-ms-identifiers": [],
                      "description": "The list of IP tags associated with the default public IP address of the cluster."
                    },
                    "ipv6Address": {
                      "type": "string",
                      "description": "IPv6 address for the cluster if IPv6 is enabled.",
                      "readOnly": true
                    },
                    "enableServicePublicIP": {
                      "type": "boolean",
                      "description": "Setting this to true will link the IPv4 address as the ServicePublicIP of the IPv6 address. It can only be set to True if IPv6 is enabled on the cluster."
                    },
                    "auxiliarySubnets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Subnet name."
                          },
                          "enableIpv6": {
                            "type": "boolean",
                            "description": "Indicates wether to enable Ipv6 or not. If not provided, it will take the same configuration as the cluster."
                          },
                          "privateEndpointNetworkPolicies": {
                            "type": "string",
                            "description": "Enable or Disable apply network policies on private end point in the subnet.",
                            "enum": [
                              "enabled",
                              "disabled"
                            ],
                            "x-ms-enum": {
                              "name": "privateEndpointNetworkPolicies",
                              "modelAsString": true
                            }
                          },
                          "privateLinkServiceNetworkPolicies": {
                            "type": "string",
                            "description": "Enable or Disable apply network policies on private link service in the subnet.",
                            "enum": [
                              "enabled",
                              "disabled"
                            ],
                            "x-ms-enum": {
                              "name": "privateLinkServiceNetworkPolicies",
                              "modelAsString": true
                            }
                          },
                          "networkSecurityGroupId": {
                            "type": "string",
                            "description": "Full resource id for the network security group."
                          }
                        },
                        "description": "Describes a Subnet."
                      },
                      "x-ms-identifiers": [],
                      "description": "Auxiliary subnets for the cluster."
                    },
                    "serviceEndpoints": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "service"
                        ],
                        "properties": {
                          "service": {
                            "type": "string",
                            "description": "The type of the endpoint service."
                          },
                          "locations": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "A list of locations."
                          }
                        },
                        "description": "The service endpoint properties."
                      },
                      "x-ms-identifiers": [],
                      "description": "Service endpoints for subnets in the cluster."
                    },
                    "zonalUpdateMode": {
                      "description": "Indicates the update mode for Cross Az clusters.",
                      "type": "string",
                      "enum": [
                        "Standard",
                        "Fast"
                      ],
                      "x-ms-enum": {
                        "name": "ZonalUpdateMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Standard",
                            "description": "The cluster will use 5 upgrade domains for Cross Az Node types."
                          },
                          {
                            "value": "Fast",
                            "description": "The cluster will use a maximum of 3 upgrade domains per zone instead of 5 for Cross Az Node types for faster deployments."
                          }
                        ]
                      }
                    },
                    "useCustomVnet": {
                      "type": "boolean",
                      "description": "For new clusters, this parameter indicates that it uses Bring your own VNet, but the subnet is specified at node type level; and for such clusters, the subnetId property is required for node types."
                    },
                    "publicIPPrefixId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/publicIPPrefixes"
                          }
                        ]
                      },
                      "description": "Specify the resource id of a public IPv4 prefix that the load balancer will allocate a public IPv4 address from. This setting cannot be changed once the cluster is created."
                    },
                    "publicIPv6PrefixId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/publicIPPrefixes"
                          }
                        ]
                      },
                      "description": "Specify the resource id of a public IPv6 prefix that the load balancer will allocate a public IPv6 address from. This setting cannot be changed once the cluster is created."
                    },
                    "ddosProtectionPlanId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/ddosProtectionPlans"
                          }
                        ]
                      },
                      "description": "Specify the resource id of a DDoS network protection plan that will be associated with the virtual network of the cluster."
                    },
                    "upgradeDescription": {
                      "description": "The policy to use when upgrading the cluster.",
                      "type": "object",
                      "properties": {
                        "forceRestart": {
                          "type": "boolean",
                          "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data)."
                        },
                        "healthPolicy": {
                          "description": "The cluster health policy defines a health policy used to evaluate the health of the cluster during a cluster upgrade.",
                          "type": "object",
                          "required": [
                            "maxPercentUnhealthyNodes",
                            "maxPercentUnhealthyApplications"
                          ],
                          "properties": {
                            "maxPercentUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.\n",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentUnhealthyApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.\nThe computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.\n",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 100
                            }
                          }
                        },
                        "deltaHealthPolicy": {
                          "description": "The cluster delta health policy defines a health policy used to evaluate the health of the cluster during a cluster upgrade.",
                          "type": "object",
                          "required": [
                            "maxPercentDeltaUnhealthyNodes"
                          ],
                          "properties": {
                            "maxPercentDeltaUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.\n",
                              "minimum": 0,
                              "maximum": 100
                            },
                            "maxPercentDeltaUnhealthyApplications": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.\nNOTE: This value will overwrite the value specified in properties.UpgradeDescription.HealthPolicy.MaxPercentUnhealthyApplications\n",
                              "minimum": 0,
                              "maximum": 100
                            }
                          }
                        },
                        "monitoringPolicy": {
                          "description": "The cluster monitoring policy describes the parameters for monitoring an upgrade in Monitored mode.",
                          "type": "object",
                          "required": [
                            "healthCheckWaitDuration",
                            "healthCheckStableDuration",
                            "healthCheckRetryTimeout",
                            "upgradeTimeout",
                            "upgradeDomainTimeout"
                          ],
                          "properties": {
                            "healthCheckWaitDuration": {
                              "type": "string",
                              "x-ms-format": "duration-constant",
                              "description": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                            },
                            "healthCheckStableDuration": {
                              "type": "string",
                              "x-ms-format": "duration-constant",
                              "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                            },
                            "healthCheckRetryTimeout": {
                              "type": "string",
                              "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                            },
                            "upgradeTimeout": {
                              "type": "string",
                              "description": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                            },
                            "upgradeDomainTimeout": {
                              "type": "string",
                              "description": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                            }
                          }
                        },
                        "upgradeReplicaSetCheckTimeout": {
                          "type": "string",
                          "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues.\nWhen this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues.\nThe timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.\nThis value must be between 00:00:00 and 49710.06:28:15 (unsigned 32 bit integer for seconds)\n"
                        }
                      }
                    },
                    "httpGatewayTokenAuthConnectionPort": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The port used for token-auth based HTTPS connections to the cluster. Cannot be set to the same port as HttpGatewayEndpoint."
                    },
                    "enableHttpGatewayExclusiveAuthMode": {
                      "type": "boolean",
                      "description": "If true, token-based authentication is not allowed on the HttpGatewayEndpoint. This is required to support TLS versions 1.3 and above. If token-based authentication is used, HttpGatewayTokenAuthConnectionPort must be defined."
                    }
                  }
                },
                "sku": {
                  "description": "The sku of the managed cluster",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Sku Name.",
                      "type": "string",
                      "enum": [
                        "Basic",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Basic",
                            "description": "Basic requires a minimum of 3 nodes and allows only 1 node type."
                          },
                          {
                            "value": "Standard",
                            "description": "Requires a minimum of 5 nodes and allows 1 or more node type."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ManagedCluster"
        ],
        "operationId": "ManagedClusters_Delete",
        "summary": "Deletes a Service Fabric managed cluster resource.",
        "description": "Delete a Service Fabric managed cluster resource with the specified name.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully."
          },
          "202": {
            "description": "The request was accepted and the operation will complete asynchronously.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "The URL to get the status of an ongoing long-running operation.",
                "type": "string"
              },
              "Location": {
                "description": "The URL to get the status of a completed long-running operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The resource was not found."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/getazresiliencystatus": {
      "post": {
        "tags": [
          "managedAzResiliencyStatus"
        ],
        "summary": "Action to get Az Resiliency Status of all the Base resources constituting Service Fabric Managed Clusters.",
        "description": "Action to get Az Resiliency Status of all the Base resources constituting Service Fabric Managed Clusters.",
        "operationId": "managedAzResiliencyStatus_Get",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "baseResourceStatus": {
                  "type": "array",
                  "description": "List of Managed VM Sizes for Service Fabric Managed Clusters.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "resourceName": {
                        "type": "string",
                        "description": "VM Size properties.",
                        "readOnly": true
                      },
                      "resourceType": {
                        "type": "string",
                        "description": "VM Size id.",
                        "readOnly": true
                      },
                      "isZoneResilient": {
                        "type": "boolean",
                        "description": "VM Size name.",
                        "readOnly": true
                      },
                      "details": {
                        "type": "string",
                        "description": "Zone resiliency status details for the resource.",
                        "readOnly": true
                      }
                    },
                    "description": "Describes Az Resiliency status of Base resources"
                  },
                  "x-ms-identifiers": []
                },
                "isClusterZoneResilient": {
                  "type": "boolean",
                  "description": "URL to get the next set of Managed VM Sizes if there are any.",
                  "readOnly": true
                }
              },
              "description": "Describes the result of the request to list Managed VM Sizes for Service Fabric Managed Clusters."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/getMaintenanceWindowStatus": {
      "post": {
        "tags": [
          "managedMaintenanceWindowStatus"
        ],
        "summary": "Action to get Maintenance Window Status of the Service Fabric Managed Clusters.",
        "description": "Action to get Maintenance Window Status of the Service Fabric Managed Clusters.",
        "operationId": "managedMaintenanceWindowStatus_Get",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "isWindowEnabled": {
                  "type": "boolean",
                  "description": "If maintenance window is enabled on this cluster.",
                  "readOnly": true
                },
                "isRegionReady": {
                  "type": "boolean",
                  "description": "Indicates if the region is ready to configure maintenance windows.",
                  "readOnly": true
                },
                "isWindowActive": {
                  "type": "boolean",
                  "description": "If maintenance window is active.",
                  "readOnly": true
                },
                "canApplyUpdates": {
                  "type": "boolean",
                  "description": "If updates can be applied.",
                  "readOnly": true
                },
                "lastWindowStatusUpdateAtUTC": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last window update time in UTC.",
                  "readOnly": true
                },
                "lastWindowStartTimeUTC": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last window start time in UTC.",
                  "readOnly": true
                },
                "lastWindowEndTimeUTC": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last window end time in UTC.",
                  "readOnly": true
                }
              },
              "description": "Describes the maintenance window status of the Service Fabric Managed Cluster."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applyMaintenanceWindow": {
      "post": {
        "tags": [
          "managedApplyMaintenanceWindow"
        ],
        "summary": "Action to Apply Maintenance window on the Service Fabric Managed Clusters, right now. Any pending update will be applied.",
        "description": "Action to Apply Maintenance window on the Service Fabric Managed Clusters, right now. Any pending update will be applied.",
        "operationId": "managedApplyMaintenanceWindow_Post",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedClusterVersions/{clusterVersion}": {
      "get": {
        "operationId": "ManagedClusterVersion_Get",
        "summary": "Gets information about a Service Fabric managed cluster code version available in the specified location.",
        "description": "Gets information about an available Service Fabric managed cluster code version.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "The location for the cluster code versions. This is different from cluster location.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "clusterVersion",
            "in": "path",
            "description": "The cluster code version.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "tags": [
          "ManagedClusterVersion"
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identification of the result"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the result"
                },
                "type": {
                  "type": "string",
                  "description": "The result resource type"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "clusterCodeVersion": {
                      "type": "string",
                      "description": "The Service Fabric runtime version of the cluster."
                    },
                    "supportExpiryUtc": {
                      "type": "string",
                      "description": "The date of expiry of support of the version."
                    },
                    "osType": {
                      "type": "string",
                      "description": "Cluster operating system, the default will be Windows",
                      "enum": [
                        "Windows"
                      ],
                      "x-ms-enum": {
                        "name": "OsType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Windows",
                            "description": "Indicates os is Windows."
                          }
                        ]
                      }
                    }
                  },
                  "description": "The detail of the Service Fabric runtime version result"
                }
              },
              "description": "The result of the Service Fabric runtime versions"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/managedClusterVersions/{clusterVersion}": {
      "get": {
        "operationId": "ManagedClusterVersion_GetByEnvironment",
        "summary": "Gets information about a Service Fabric cluster code version available for the specified environment.",
        "description": "Gets information about an available Service Fabric cluster code version by environment.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "The location for the cluster code versions. This is different from cluster location.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environment",
            "in": "path",
            "description": "The operating system of the cluster. The default means all.",
            "required": true,
            "type": "string",
            "enum": [
              "Windows"
            ],
            "x-ms-parameter-location": "method",
            "x-ms-enum": {
              "name": "ManagedClusterVersionEnvironment",
              "modelAsString": true,
              "values": [
                {
                  "value": "Windows",
                  "description": "Windows."
                }
              ]
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "clusterVersion",
            "in": "path",
            "description": "The cluster code version.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "tags": [
          "ManagedClusterVersion"
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identification of the result"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the result"
                },
                "type": {
                  "type": "string",
                  "description": "The result resource type"
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "clusterCodeVersion": {
                      "type": "string",
                      "description": "The Service Fabric runtime version of the cluster."
                    },
                    "supportExpiryUtc": {
                      "type": "string",
                      "description": "The date of expiry of support of the version."
                    },
                    "osType": {
                      "type": "string",
                      "description": "Cluster operating system, the default will be Windows",
                      "enum": [
                        "Windows"
                      ],
                      "x-ms-enum": {
                        "name": "OsType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Windows",
                            "description": "Indicates os is Windows."
                          }
                        ]
                      }
                    }
                  },
                  "description": "The detail of the Service Fabric runtime version result"
                }
              },
              "description": "The result of the Service Fabric runtime versions"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedClusterVersions": {
      "get": {
        "operationId": "ManagedClusterVersion_List",
        "summary": "Gets the list of Service Fabric cluster code versions available for the specified location.",
        "description": "Gets all available code versions for Service Fabric cluster resources by location.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "The location for the cluster code versions. This is different from cluster location.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "tags": [
          "ManagedClusterVersion"
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The identification of the result"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the result"
                  },
                  "type": {
                    "type": "string",
                    "description": "The result resource type"
                  },
                  "properties": {
                    "x-ms-client-flatten": true,
                    "type": "object",
                    "properties": {
                      "clusterCodeVersion": {
                        "type": "string",
                        "description": "The Service Fabric runtime version of the cluster."
                      },
                      "supportExpiryUtc": {
                        "type": "string",
                        "description": "The date of expiry of support of the version."
                      },
                      "osType": {
                        "type": "string",
                        "description": "Cluster operating system, the default will be Windows",
                        "enum": [
                          "Windows"
                        ],
                        "x-ms-enum": {
                          "name": "OsType",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Windows",
                              "description": "Indicates os is Windows."
                            }
                          ]
                        }
                      }
                    },
                    "description": "The detail of the Service Fabric runtime version result"
                  }
                },
                "description": "The result of the Service Fabric runtime versions"
              },
              "description": "The list results of the Service Fabric runtime versions."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/managedClusterVersions": {
      "get": {
        "operationId": "ManagedClusterVersion_ListByEnvironment",
        "summary": "Gets the list of Service Fabric cluster code versions available for the specified environment.",
        "description": "Gets all available code versions for Service Fabric cluster resources by environment.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "The location for the cluster code versions. This is different from cluster location.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environment",
            "in": "path",
            "description": "The operating system of the cluster. The default means all.",
            "required": true,
            "type": "string",
            "enum": [
              "Windows"
            ],
            "x-ms-parameter-location": "method",
            "x-ms-enum": {
              "name": "ManagedClusterVersionEnvironment",
              "modelAsString": true,
              "values": [
                {
                  "value": "Windows",
                  "description": "Windows."
                }
              ]
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "tags": [
          "ManagedClusterVersion"
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The identification of the result"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the result"
                  },
                  "type": {
                    "type": "string",
                    "description": "The result resource type"
                  },
                  "properties": {
                    "x-ms-client-flatten": true,
                    "type": "object",
                    "properties": {
                      "clusterCodeVersion": {
                        "type": "string",
                        "description": "The Service Fabric runtime version of the cluster."
                      },
                      "supportExpiryUtc": {
                        "type": "string",
                        "description": "The date of expiry of support of the version."
                      },
                      "osType": {
                        "type": "string",
                        "description": "Cluster operating system, the default will be Windows",
                        "enum": [
                          "Windows"
                        ],
                        "x-ms-enum": {
                          "name": "OsType",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Windows",
                              "description": "Indicates os is Windows."
                            }
                          ]
                        }
                      }
                    },
                    "description": "The detail of the Service Fabric runtime version result"
                  }
                },
                "description": "The result of the Service Fabric runtime versions"
              },
              "description": "The list results of the Service Fabric runtime versions."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedUnsupportedVMSizes": {
      "get": {
        "tags": [
          "managedVMSizes"
        ],
        "summary": "Get the lists of unsupported vm sizes for Service Fabric Managed Clusters.",
        "description": "Get the lists of unsupported vm sizes for Service Fabric Managed Clusters.",
        "operationId": "managedUnsupportedVMSizes_List",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "The location for the cluster code versions. This is different from cluster location.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of Managed VM Sizes for Service Fabric Managed Clusters.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "properties": {
                        "description": "VM Size properties.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "size": {
                            "type": "string",
                            "description": "VM Size name.",
                            "readOnly": true
                          }
                        }
                      },
                      "id": {
                        "type": "string",
                        "description": "VM Size id.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "VM Size name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "VM Size type.",
                        "readOnly": true
                      }
                    },
                    "description": "Describes a VM Sizes."
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of Managed VM Sizes if there are any.",
                  "readOnly": true
                }
              },
              "description": "Describes the result of the request to list Managed VM Sizes for Service Fabric Managed Clusters."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedUnsupportedVMSizes/{vmSize}": {
      "get": {
        "tags": [
          "managedVMSizes"
        ],
        "summary": "Get unsupported vm size for Service Fabric Managed Clusters.",
        "description": "Get unsupported vm size for Service Fabric Managed Clusters.",
        "operationId": "managedUnsupportedVMSizes_Get",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "The location for the cluster code versions. This is different from cluster location.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "vmSize",
            "in": "path",
            "description": "VM Size name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "properties": {
                  "description": "VM Size properties.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "size": {
                      "type": "string",
                      "description": "VM Size name.",
                      "readOnly": true
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "description": "VM Size id.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "VM Size name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "VM Size type.",
                  "readOnly": true
                }
              },
              "description": "Describes a VM Sizes."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedClusterOperations/{operationId}": {
      "get": {
        "tags": [
          "LongRunningOperations"
        ],
        "summary": "Get long running operation status.",
        "description": "Get long running operation status.",
        "operationId": "OperationStatus_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The location for the cluster code versions. This is different from cluster location.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "operation identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the operation."
                },
                "startTime": {
                  "type": "string",
                  "description": "The start time of the operation.",
                  "format": "date-time"
                },
                "endTime": {
                  "type": "string",
                  "description": "The end time of the operation.",
                  "format": "date-time"
                },
                "percentComplete": {
                  "type": "number",
                  "format": "double",
                  "description": "The completion percentage of the operation."
                },
                "status": {
                  "type": "string",
                  "description": "The status of the operation."
                },
                "error": {
                  "description": "The operation error.",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "The error code."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message."
                    }
                  }
                }
              },
              "description": "Long running operation result."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedClusterOperationResults/{operationId}": {
      "get": {
        "tags": [
          "LongRunningOperations"
        ],
        "summary": "Get long running operation result.",
        "description": "Get long running operation result.",
        "operationId": "OperationResults_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The location for the cluster code versions. This is different from cluster location.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "operation identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded."
          },
          "202": {
            "description": "Accepted. The request is still running.",
            "headers": {
              "Location": {
                "description": "The URL to get the status of a completed long-running operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content. For Delete operation results."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes": {
      "get": {
        "operationId": "NodeTypes_ListByManagedClusters",
        "summary": "Gets the list of Node types of the specified managed cluster.",
        "description": "Gets all Node types of the specified managed cluster.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "tags": [
          "NodeType"
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "title": "node type list value.",
                  "description": "The list of node types.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Azure resource identifier.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "Azure resource name.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "Azure resource type.",
                        "readOnly": true
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Azure resource tags.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource."
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource."
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)."
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The node type properties",
                        "type": "object",
                        "required": [
                          "isPrimary",
                          "vmInstanceCount"
                        ],
                        "properties": {
                          "isPrimary": {
                            "type": "boolean",
                            "description": "Indicates the Service Fabric system services for the cluster will run on this node type. This setting cannot be changed once the node type is created."
                          },
                          "vmInstanceCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The number of nodes in the node type. <br /><br />**Values:** <br />-1 - Use when auto scale rules are configured or sku.capacity is defined <br /> 0 - Not supported <br /> >0 - Use for manual scale.",
                            "minimum": -1,
                            "maximum": 2147483647
                          },
                          "dataDiskSizeGB": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Disk size for the managed disk attached to the vms on the node type in GBs."
                          },
                          "dataDiskType": {
                            "description": "Managed data disk type. Specifies the storage account type for the managed disk",
                            "type": "string",
                            "enum": [
                              "Standard_LRS",
                              "StandardSSD_LRS",
                              "Premium_LRS"
                            ],
                            "default": "StandardSSD_LRS",
                            "x-ms-enum": {
                              "name": "DiskType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Standard_LRS",
                                  "description": "Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access."
                                },
                                {
                                  "value": "StandardSSD_LRS",
                                  "description": "Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test."
                                },
                                {
                                  "value": "Premium_LRS",
                                  "description": "Premium SSD locally redundant storage. Best for production and performance sensitive workloads."
                                }
                              ]
                            }
                          },
                          "dataDiskLetter": {
                            "type": "string",
                            "pattern": "^[a-zA-Z]{1}$",
                            "description": "Managed data disk letter. It can not use the reserved letter C or D and it can not change after created."
                          },
                          "placementProperties": {
                            "type": "object",
                            "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
                            "additionalProperties": {
                              "type": "string",
                              "description": "Placement tag value"
                            }
                          },
                          "capacities": {
                            "type": "object",
                            "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
                            "additionalProperties": {
                              "type": "string",
                              "description": "Capacity tag value"
                            }
                          },
                          "applicationPorts": {
                            "description": "The range of ports from which cluster assigned port to Service Fabric applications.",
                            "type": "object",
                            "required": [
                              "endPort",
                              "startPort"
                            ],
                            "properties": {
                              "startPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Starting port of a range of ports"
                              },
                              "endPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "End port of a range of ports"
                              }
                            }
                          },
                          "ephemeralPorts": {
                            "description": "The range of ephemeral ports that nodes in this node type should be configured with.",
                            "type": "object",
                            "required": [
                              "endPort",
                              "startPort"
                            ],
                            "properties": {
                              "startPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Starting port of a range of ports"
                              },
                              "endPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "End port of a range of ports"
                              }
                            }
                          },
                          "vmSize": {
                            "type": "string",
                            "description": "The size of virtual machines in the pool. All virtual machines in a pool are the same size. For example, Standard_D3."
                          },
                          "vmImagePublisher": {
                            "type": "string",
                            "description": "The publisher of the Azure Virtual Machines Marketplace image. For example, Canonical or MicrosoftWindowsServer."
                          },
                          "vmImageOffer": {
                            "type": "string",
                            "description": "The offer type of the Azure Virtual Machines Marketplace image. For example, UbuntuServer or WindowsServer."
                          },
                          "vmImageSku": {
                            "type": "string",
                            "description": "The SKU of the Azure Virtual Machines Marketplace image. For example, 14.04.0-LTS or 2012-R2-Datacenter."
                          },
                          "vmImageVersion": {
                            "type": "string",
                            "description": "The version of the Azure Virtual Machines Marketplace image. A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'."
                          },
                          "vmSecrets": {
                            "type": "array",
                            "title": "virtual machine secretes.",
                            "description": "The secrets to install in the virtual machines.",
                            "items": {
                              "type": "object",
                              "required": [
                                "sourceVault",
                                "vaultCertificates"
                              ],
                              "properties": {
                                "sourceVault": {
                                  "description": "The relative URL of the Key Vault containing all of the certificates in VaultCertificates.",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Azure resource identifier."
                                    }
                                  },
                                  "x-ms-azure-resource": true
                                },
                                "vaultCertificates": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "certificateUrl",
                                      "certificateStore"
                                    ],
                                    "properties": {
                                      "certificateUrl": {
                                        "type": "string",
                                        "description": "This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  \"data\":\"<Base64-encoded-certificate>\",<br>  \"dataType\":\"pfx\",<br>  \"password\":\"<pfx-file-password>\"<br>}"
                                      },
                                      "certificateStore": {
                                        "type": "string",
                                        "description": "For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name <UppercaseThumbprint>.crt for the X509 certificate file and <UppercaseThumbprint>.prv for private key. Both of these files are .pem formatted."
                                      }
                                    },
                                    "description": "Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM."
                                  },
                                  "x-ms-identifiers": [],
                                  "description": "The list of key vault references in SourceVault which contain certificates."
                                }
                              },
                              "description": "Specifies set of certificates that should be installed onto the virtual machines."
                            },
                            "x-ms-identifiers": [
                              "sourceVault"
                            ]
                          },
                          "vmExtensions": {
                            "type": "array",
                            "title": "virtual machine extensions.",
                            "description": "Set of extensions that should be installed onto the virtual machines.",
                            "items": {
                              "type": "object",
                              "required": [
                                "name",
                                "properties"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the extension."
                                },
                                "properties": {
                                  "x-ms-client-flatten": true,
                                  "description": "Describes the properties of a Virtual Machine Scale Set Extension.",
                                  "type": "object",
                                  "required": [
                                    "publisher",
                                    "type",
                                    "typeHandlerVersion"
                                  ],
                                  "properties": {
                                    "publisher": {
                                      "type": "string",
                                      "description": "The name of the extension handler publisher."
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                                    },
                                    "typeHandlerVersion": {
                                      "type": "string",
                                      "description": "Specifies the version of the script handler."
                                    },
                                    "autoUpgradeMinorVersion": {
                                      "type": "boolean",
                                      "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
                                    },
                                    "settings": {
                                      "type": "object",
                                      "description": "Json formatted public settings for the extension."
                                    },
                                    "protectedSettings": {
                                      "type": "object",
                                      "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
                                    },
                                    "forceUpdateTag": {
                                      "type": "string",
                                      "description": "If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed."
                                    },
                                    "provisionAfterExtensions": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Collection of extension names after which this extension needs to be provisioned."
                                    },
                                    "provisioningState": {
                                      "readOnly": true,
                                      "type": "string",
                                      "description": "The provisioning state, which only appears in the response."
                                    },
                                    "enableAutomaticUpgrade": {
                                      "type": "boolean",
                                      "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available."
                                    },
                                    "setupOrder": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "Vm extension setup order.\n",
                                        "enum": [
                                          "BeforeSFRuntime"
                                        ],
                                        "x-ms-enum": {
                                          "name": "VmssExtensionSetupOrder",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "value": "BeforeSFRuntime",
                                              "description": "Indicates that the vm extension should run before the service fabric runtime starts."
                                            }
                                          ]
                                        }
                                      },
                                      "x-ms-identifiers": [],
                                      "description": "Indicates the setup order for the extension."
                                    }
                                  }
                                }
                              },
                              "description": "Specifies set of extensions that should be installed onto the virtual machines."
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "vmManagedIdentity": {
                            "description": "Identities to assign to the virtual machine scale set under the node type.",
                            "type": "object",
                            "properties": {
                              "userAssignedIdentities": {
                                "type": "array",
                                "description": "The list of user identities associated with the virtual machine scale set under the node type. Each entry will be an ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "isStateless": {
                            "type": "boolean",
                            "description": "Indicates if the node type can only host Stateless workloads.",
                            "default": false
                          },
                          "multiplePlacementGroups": {
                            "type": "boolean",
                            "description": "Indicates if scale set associated with the node type can be composed of multiple placement groups.",
                            "default": false
                          },
                          "frontendConfigurations": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ipAddressType": {
                                  "description": "The IP address type of this frontend configuration. If omitted the default value is IPv4.",
                                  "type": "string",
                                  "enum": [
                                    "IPv4",
                                    "IPv6"
                                  ],
                                  "default": "IPv4",
                                  "x-ms-enum": {
                                    "name": "IPAddressType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "IPv4",
                                        "description": "IPv4 address type."
                                      },
                                      {
                                        "value": "IPv6",
                                        "description": "IPv6 address type."
                                      }
                                    ]
                                  }
                                },
                                "loadBalancerBackendAddressPoolId": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "The resource Id of the Load Balancer backend address pool that the VM instances of the node type are associated with. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/loadBalancers/<loadBalancerName>/backendAddressPools/<backendAddressPoolName>'."
                                },
                                "loadBalancerInboundNatPoolId": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "The resource Id of the Load Balancer inbound NAT pool that the VM instances of the node type are associated with. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/loadBalancers/<loadBalancerName>/inboundNatPools/<inboundNatPoolName>'."
                                },
                                "applicationGatewayBackendAddressPoolId": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "x-ms-arm-id-details": {
                                    "allowedResources": [
                                      {
                                        "type": "Microsoft.Network/applicationGateways/backendAddressPools"
                                      }
                                    ]
                                  },
                                  "description": "The resource Id of application gateway backend address pool. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/applicationGateways/<applicationGatewayName>/backendAddressPools/<backendAddressPoolName>'."
                                }
                              },
                              "description": "Describes the frontend configurations for the node type."
                            },
                            "x-ms-identifiers": [],
                            "description": "Indicates the node type uses its own frontend configurations instead of the default one for the cluster. This setting can only be specified for non-primary node types and can not be added or removed after the node type is created."
                          },
                          "networkSecurityRules": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "name",
                                "protocol",
                                "access",
                                "priority",
                                "direction"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Network security rule name."
                                },
                                "description": {
                                  "type": "string",
                                  "description": "Network security rule description."
                                },
                                "protocol": {
                                  "type": "string",
                                  "description": "Network protocol this rule applies to.",
                                  "enum": [
                                    "http",
                                    "https",
                                    "tcp",
                                    "udp",
                                    "icmp",
                                    "ah",
                                    "esp"
                                  ],
                                  "x-ms-enum": {
                                    "name": "nsgProtocol",
                                    "modelAsString": true
                                  }
                                },
                                "sourceAddressPrefixes": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "The CIDR or source IP ranges."
                                },
                                "destinationAddressPrefixes": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "The destination address prefixes. CIDR or destination IP ranges."
                                },
                                "sourcePortRanges": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "The source port ranges."
                                },
                                "destinationPortRanges": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "The destination port ranges."
                                },
                                "sourceAddressPrefix": {
                                  "type": "string",
                                  "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from."
                                },
                                "destinationAddressPrefix": {
                                  "type": "string",
                                  "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."
                                },
                                "sourcePortRange": {
                                  "type": "string",
                                  "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                                },
                                "destinationPortRange": {
                                  "type": "string",
                                  "description": "he destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                                },
                                "access": {
                                  "type": "string",
                                  "description": "The network traffic is allowed or denied.",
                                  "enum": [
                                    "allow",
                                    "deny"
                                  ],
                                  "x-ms-enum": {
                                    "name": "access",
                                    "modelAsString": true
                                  }
                                },
                                "priority": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The priority of the rule. The value can be in the range 1000 to 3000. Values outside this range are reserved for Service Fabric ManagerCluster Resource Provider. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                                  "minimum": 1000,
                                  "maximum": 3000
                                },
                                "direction": {
                                  "type": "string",
                                  "description": "Network security rule direction.",
                                  "enum": [
                                    "inbound",
                                    "outbound"
                                  ],
                                  "x-ms-enum": {
                                    "name": "direction",
                                    "modelAsString": true
                                  }
                                }
                              },
                              "description": "Describes a network security rule."
                            },
                            "x-ms-identifiers": [],
                            "description": "The Network Security Rules for this node type. This setting can only be specified for node types that are configured with frontend configurations."
                          },
                          "additionalDataDisks": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "lun",
                                "diskSizeGB",
                                "diskType",
                                "diskLetter"
                              ],
                              "properties": {
                                "lun": {
                                  "type": "integer",
                                  "format": "int32",
                                  "minimum": 1,
                                  "description": "Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM. Lun 0 is reserved for the service fabric data disk."
                                },
                                "diskSizeGB": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Disk size for each vm in the node type in GBs."
                                },
                                "diskType": {
                                  "description": "Managed data disk type. Specifies the storage account type for the managed disk",
                                  "type": "string",
                                  "enum": [
                                    "Standard_LRS",
                                    "StandardSSD_LRS",
                                    "Premium_LRS"
                                  ],
                                  "default": "StandardSSD_LRS",
                                  "x-ms-enum": {
                                    "name": "DiskType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "Standard_LRS",
                                        "description": "Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access."
                                      },
                                      {
                                        "value": "StandardSSD_LRS",
                                        "description": "Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test."
                                      },
                                      {
                                        "value": "Premium_LRS",
                                        "description": "Premium SSD locally redundant storage. Best for production and performance sensitive workloads."
                                      }
                                    ]
                                  }
                                },
                                "diskLetter": {
                                  "type": "string",
                                  "pattern": "^[a-zA-Z]{1}$",
                                  "description": "Managed data disk letter. It can not use the reserved letter C or D and it can not change after created."
                                }
                              },
                              "description": "Managed data disk description."
                            },
                            "x-ms-identifiers": [
                              "lun"
                            ],
                            "description": "Additional managed data disks."
                          },
                          "enableEncryptionAtHost": {
                            "type": "boolean",
                            "description": "Enable or disable the Host Encryption for the virtual machines on the node type. This will enable the encryption for all the disks including Resource/Temp disk at host itself. Default: The Encryption at host will be disabled unless this property is set to true for the resource.",
                            "default": false
                          },
                          "provisioningState": {
                            "readOnly": true,
                            "description": "The provisioning state of the node type resource.",
                            "type": "string",
                            "enum": [
                              "None",
                              "Creating",
                              "Created",
                              "Updating",
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Deleting",
                              "Deleted",
                              "Other"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedResourceProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "enableAcceleratedNetworking": {
                            "type": "boolean",
                            "description": "Specifies whether the network interface is accelerated networking-enabled."
                          },
                          "useDefaultPublicLoadBalancer": {
                            "type": "boolean",
                            "description": "Specifies whether the use public load balancer. If not specified and the node type doesn't have its own frontend configuration, it will be attached to the default load balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is true, then the frontend has to be an Internal Load Balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is false or not set, then the custom load balancer must include a public load balancer to provide outbound connectivity."
                          },
                          "useTempDataDisk": {
                            "type": "boolean",
                            "description": "Specifies whether to use the temporary disk for the service fabric data root, in which case no managed data disk will be attached and the temporary disk will be used. It is only allowed for stateless node types."
                          },
                          "enableOverProvisioning": {
                            "type": "boolean",
                            "description": "Specifies whether the node type should be overprovisioned. It is only allowed for stateless node types."
                          },
                          "zones": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Specifies the availability zones where the node type would span across. If the cluster is not spanning across availability zones, initiates az migration for the cluster."
                          },
                          "isSpotVM": {
                            "type": "boolean",
                            "description": "Indicates whether the node type will be Spot Virtual Machines. Azure will allocate the VMs if there is capacity available and the VMs can be evicted at any time."
                          },
                          "hostGroupId": {
                            "type": "string",
                            "description": "Specifies the full host group resource Id. This property is used for deploying on azure dedicated hosts."
                          },
                          "useEphemeralOSDisk": {
                            "type": "boolean",
                            "description": "Indicates whether to use ephemeral os disk. The sku selected on the vmSize property needs to support this feature."
                          },
                          "spotRestoreTimeout": {
                            "type": "string",
                            "description": "Indicates the time duration after which the platform will not try to restore the VMSS SPOT instances specified as ISO 8601."
                          },
                          "evictionPolicy": {
                            "description": "Specifies the eviction policy for virtual machines in a SPOT node type. Default is Delete.",
                            "type": "string",
                            "enum": [
                              "Delete",
                              "Deallocate"
                            ],
                            "x-ms-enum": {
                              "name": "EvictionPolicyType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Delete",
                                  "description": "Eviction policy will be Delete for SPOT vms."
                                },
                                {
                                  "value": "Deallocate",
                                  "description": "Eviction policy will be Deallocate for SPOT vms."
                                }
                              ]
                            }
                          },
                          "vmImageResourceId": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Compute/images"
                                },
                                {
                                  "type": "Microsoft.Compute/galleries/images"
                                },
                                {
                                  "type": "Microsoft.Compute/galleries/images/versions"
                                }
                              ]
                            },
                            "description": "Indicates the resource id of the vm image. This parameter is used for custom vm image."
                          },
                          "subnetId": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Network/virtualNetworks/subnets"
                                }
                              ]
                            },
                            "description": "Indicates the resource id of the subnet for the node type."
                          },
                          "vmSetupActions": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "action to be performed on the vms before bootstrapping the service fabric runtime.",
                              "enum": [
                                "EnableContainers",
                                "EnableHyperV"
                              ],
                              "x-ms-enum": {
                                "name": "VmSetupAction",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "EnableContainers",
                                    "description": "Enable windows containers feature."
                                  },
                                  {
                                    "value": "EnableHyperV",
                                    "description": "Enables windows HyperV feature."
                                  }
                                ]
                              }
                            },
                            "description": "Specifies the actions to be performed on the vms before bootstrapping the service fabric runtime."
                          },
                          "securityType": {
                            "type": "string",
                            "description": "Specifies the security type of the nodeType. Only Standard and TrustedLaunch are currently supported",
                            "enum": [
                              "TrustedLaunch",
                              "Standard"
                            ],
                            "x-ms-enum": {
                              "name": "securityType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "TrustedLaunch",
                                  "description": "Trusted Launch is a security type that secures generation 2 virtual machines."
                                },
                                {
                                  "value": "Standard",
                                  "description": "Standard is the default security type for all machines."
                                }
                              ]
                            }
                          },
                          "secureBootEnabled": {
                            "type": "boolean",
                            "description": "Specifies whether secure boot should be enabled on the nodeType. Can only be used with TrustedLaunch SecurityType"
                          },
                          "enableNodePublicIP": {
                            "type": "boolean",
                            "description": "Specifies whether each node is allocated its own public IPv4 address. This is only supported on secondary node types with custom Load Balancers."
                          },
                          "enableNodePublicIPv6": {
                            "type": "boolean",
                            "description": "Specifies whether each node is allocated its own public IPv6 address. This is only supported on secondary node types with custom Load Balancers."
                          },
                          "vmSharedGalleryImageId": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Compute/sharedGalleries/images"
                                },
                                {
                                  "type": "Microsoft.Compute/sharedGalleries/images/versions"
                                }
                              ]
                            },
                            "description": "Indicates the resource id of the vm shared galleries image. This parameter is used for custom vm image."
                          },
                          "natGatewayId": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Network/natGateways"
                                }
                              ]
                            },
                            "description": "Specifies the resource id of a NAT Gateway to attach to the subnet of this node type. Node type must use custom load balancer."
                          },
                          "natConfigurations": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "backendPort": {
                                  "type": "integer",
                                  "format": "int32",
                                  "minimum": 1,
                                  "maximum": 65535,
                                  "description": "The internal port for the NAT configuration."
                                },
                                "frontendPortRangeStart": {
                                  "type": "integer",
                                  "format": "int32",
                                  "minimum": 1,
                                  "maximum": 65534,
                                  "description": "The port range start for the external endpoint."
                                },
                                "frontendPortRangeEnd": {
                                  "type": "integer",
                                  "format": "int32",
                                  "minimum": 1,
                                  "maximum": 65534,
                                  "description": "The port range end for the external endpoint."
                                }
                              },
                              "description": "Provides information about NAT configuration on the default public Load Balancer for the node type."
                            },
                            "x-ms-identifiers": [],
                            "description": "Specifies the NAT configuration on default public Load Balancer for the node type. This is only supported for node types use the default public Load Balancer."
                          },
                          "vmImagePlan": {
                            "description": "Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started ->. Enter any required information and then click Save.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The plan ID."
                              },
                              "product": {
                                "type": "string",
                                "description": "Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element."
                              },
                              "promotionCode": {
                                "type": "string",
                                "description": "The promotion code."
                              },
                              "publisher": {
                                "type": "string",
                                "description": "The publisher ID."
                              }
                            }
                          },
                          "serviceArtifactReferenceId": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Compute/galleries/serviceArtifacts/vmArtifactsProfiles"
                                }
                              ]
                            },
                            "description": "Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using 'latest' image version."
                          },
                          "dscpConfigurationId": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Network/dscpConfigurations"
                                }
                              ]
                            },
                            "description": "Specifies the resource id of the DSCP configuration to apply to the node type network interface."
                          },
                          "additionalNetworkInterfaceConfigurations": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "name",
                                "ipConfigurations"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the network interface."
                                },
                                "enableAcceleratedNetworking": {
                                  "type": "boolean",
                                  "description": "Specifies whether the network interface is accelerated networking-enabled."
                                },
                                "dscpConfiguration": {
                                  "description": "Specifies the DSCP configuration to apply to the network interface.",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Azure resource identifier."
                                    }
                                  },
                                  "x-ms-azure-resource": true
                                },
                                "ipConfigurations": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "name"
                                    ],
                                    "description": "Specifies an IP configuration of the network interface.",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the network interface."
                                      },
                                      "applicationGatewayBackendAddressPools": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Azure resource identifier."
                                            }
                                          },
                                          "description": "Azure resource identifier.",
                                          "x-ms-azure-resource": true
                                        },
                                        "description": "Specifies an array of references to backend address pools of application gateways. A node type can reference backend address pools of multiple application gateways. Multiple node types cannot use the same application gateway."
                                      },
                                      "loadBalancerBackendAddressPools": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Azure resource identifier."
                                            }
                                          },
                                          "description": "Azure resource identifier.",
                                          "x-ms-azure-resource": true
                                        },
                                        "description": "Specifies an array of references to backend address pools of load balancers. A node type can reference backend address pools of one public and one internal load balancer. Multiple node types cannot use the same basic sku load balancer.\t"
                                      },
                                      "loadBalancerInboundNatPools": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Azure resource identifier."
                                            }
                                          },
                                          "description": "Azure resource identifier.",
                                          "x-ms-azure-resource": true
                                        },
                                        "description": "Specifies an array of references to inbound Nat pools of the load balancers. A node type can reference inbound nat pools of one public and one internal load balancer. Multiple node types cannot use the same basic sku load balancer."
                                      },
                                      "subnet": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "Azure resource identifier."
                                          }
                                        },
                                        "description": "Azure resource identifier.",
                                        "x-ms-azure-resource": true
                                      },
                                      "privateIPAddressVersion": {
                                        "type": "string",
                                        "description": "Specifies whether the IP configuration's private IP is IPv4 or IPv6. Default is IPv4.",
                                        "enum": [
                                          "IPv4",
                                          "IPv6"
                                        ],
                                        "default": "IPv4",
                                        "x-ms-enum": {
                                          "name": "privateIPAddressVersion",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "value": "IPv4"
                                            },
                                            {
                                              "value": "IPv6"
                                            }
                                          ]
                                        }
                                      },
                                      "publicIPAddressConfiguration": {
                                        "type": "object",
                                        "required": [
                                          "name"
                                        ],
                                        "description": "The public IP address configuration of the network interface.",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the network interface."
                                          },
                                          "ipTags": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "required": [
                                                "ipTagType",
                                                "tag"
                                              ],
                                              "properties": {
                                                "ipTagType": {
                                                  "type": "string",
                                                  "description": "IP tag type. Example: FirstPartyUsage."
                                                },
                                                "tag": {
                                                  "type": "string",
                                                  "description": "IP tag associated with the public IP. Example: SQL, Storage etc."
                                                }
                                              },
                                              "description": "The IP tag associated with the public IP address."
                                            },
                                            "x-ms-identifiers": [],
                                            "description": "Specifies the list of IP tags associated with the public IP address."
                                          },
                                          "publicIPAddressVersion": {
                                            "type": "string",
                                            "description": "Specifies whether the IP configuration's public IP is IPv4 or IPv6. Default is IPv4.",
                                            "enum": [
                                              "IPv4",
                                              "IPv6"
                                            ],
                                            "default": "IPv4",
                                            "x-ms-enum": {
                                              "name": "publicIPAddressVersion",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "value": "IPv4"
                                                },
                                                {
                                                  "value": "IPv6"
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": [
                                    "name"
                                  ],
                                  "description": "Specifies the IP configurations of the network interface."
                                }
                              },
                              "description": "Specifies the settings for a network interface to attach to the node type."
                            },
                            "x-ms-identifiers": [
                              "name"
                            ],
                            "description": "Specifies the settings for any additional secondary network interfaces to attach to the node type."
                          },
                          "computerNamePrefix": {
                            "type": "string",
                            "description": "Specifies the computer name prefix. Limited to 9 characters. If specified, allows for a longer name to be specified for the node type name."
                          }
                        }
                      },
                      "sku": {
                        "description": "The node type sku.",
                        "type": "object",
                        "required": [
                          "capacity"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The sku name. <br /><br />Name is internally generated and is used in auto-scale scenarios.<br /> Property does not allow to be changed to other values than generated.<br /> To avoid deployment errors please omit the property."
                          },
                          "tier": {
                            "type": "string",
                            "description": "Specifies the tier of the node type. <br /><br /> Possible Values:<br /> **Standard**"
                          },
                          "capacity": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The number of nodes in the node type.<br /><br />If present in request it will override properties.vmInstanceCount.",
                            "minimum": 1,
                            "maximum": 2147483647
                          }
                        }
                      }
                    },
                    "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to use for getting the next set of results."
                }
              },
              "description": "Node type list results"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/restart": {
      "post": {
        "tags": [
          "NodeType"
        ],
        "operationId": "NodeTypes_Restart",
        "summary": "Restarts one or more nodes on the node type.",
        "description": "Restarts one or more nodes on the node type. It will disable the fabric nodes, trigger a restart on the VMs and activate the nodes back again.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "parameters for restart action.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "nodes": {
                  "description": "List of node names from the node type.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "force": {
                  "description": "Force the action to go through.",
                  "type": "boolean"
                },
                "updateType": {
                  "type": "string",
                  "description": "Specifies the way the operation will be performed.",
                  "enum": [
                    "Default",
                    "ByUpgradeDomain"
                  ],
                  "x-ms-enum": {
                    "name": "updateType",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Default",
                        "description": "The operation will proceed in all specified nodes at the same time."
                      },
                      {
                        "value": "ByUpgradeDomain",
                        "description": "The operation will proceed one upgrade domain at a time, checking the health in between each to continue."
                      }
                    ]
                  }
                }
              },
              "description": "Parameters for Node type action. If nodes are not specified on the parameters, the operation will be performed in all nodes of the node type one upgrade domain at a time."
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully."
          },
          "202": {
            "description": "The request was accepted and the operation will complete asynchronously.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "The URL to get the status of an ongoing long-running operation.",
                "type": "string"
              },
              "Location": {
                "description": "The URL to get the status of a completed long-running operation.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/reimage": {
      "post": {
        "tags": [
          "NodeType"
        ],
        "operationId": "NodeTypes_Reimage",
        "summary": "Reimages one or more nodes on the node type.",
        "description": "Reimages one or more nodes on the node type. It will disable the fabric nodes, trigger a reimage on the VMs and activate the nodes back again.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "parameters for reimage action.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "nodes": {
                  "description": "List of node names from the node type.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "force": {
                  "description": "Force the action to go through.",
                  "type": "boolean"
                },
                "updateType": {
                  "type": "string",
                  "description": "Specifies the way the operation will be performed.",
                  "enum": [
                    "Default",
                    "ByUpgradeDomain"
                  ],
                  "x-ms-enum": {
                    "name": "updateType",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Default",
                        "description": "The operation will proceed in all specified nodes at the same time."
                      },
                      {
                        "value": "ByUpgradeDomain",
                        "description": "The operation will proceed one upgrade domain at a time, checking the health in between each to continue."
                      }
                    ]
                  }
                }
              },
              "description": "Parameters for Node type action. If nodes are not specified on the parameters, the operation will be performed in all nodes of the node type one upgrade domain at a time."
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully."
          },
          "202": {
            "description": "The request was accepted and the operation will complete asynchronously.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "The URL to get the status of an ongoing long-running operation.",
                "type": "string"
              },
              "Location": {
                "description": "The URL to get the status of a completed long-running operation.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/deleteNode": {
      "post": {
        "tags": [
          "NodeType"
        ],
        "operationId": "NodeTypes_DeleteNode",
        "summary": "Deletes one or more nodes on the node type.",
        "description": "Deletes one or more nodes on the node type. It will disable the fabric nodes, trigger a delete on the VMs and removes the state from the cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "parameters for delete action.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "nodes": {
                  "description": "List of node names from the node type.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "force": {
                  "description": "Force the action to go through.",
                  "type": "boolean"
                },
                "updateType": {
                  "type": "string",
                  "description": "Specifies the way the operation will be performed.",
                  "enum": [
                    "Default",
                    "ByUpgradeDomain"
                  ],
                  "x-ms-enum": {
                    "name": "updateType",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Default",
                        "description": "The operation will proceed in all specified nodes at the same time."
                      },
                      {
                        "value": "ByUpgradeDomain",
                        "description": "The operation will proceed one upgrade domain at a time, checking the health in between each to continue."
                      }
                    ]
                  }
                }
              },
              "description": "Parameters for Node type action. If nodes are not specified on the parameters, the operation will be performed in all nodes of the node type one upgrade domain at a time."
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully."
          },
          "202": {
            "description": "The request was accepted and the operation will complete asynchronously.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "The URL to get the status of an ongoing long-running operation.",
                "type": "string"
              },
              "Location": {
                "description": "The URL to get the status of a completed long-running operation.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/skus": {
      "get": {
        "tags": [
          "NodeType"
        ],
        "operationId": "NodeTypeSkus_List",
        "summary": "Gets a Service Fabric node type SKUs.",
        "description": "Get a Service Fabric node type supported SKUs.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "title": "Node type sku list value.",
                  "description": "The list of available node type SKUs.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "resourceType": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The type of resource the sku applies to.  <br /><br />Value: Microsoft.ServiceFabric/managedClusters/nodeTypes."
                      },
                      "sku": {
                        "description": "The supported SKU for a for node type.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The sku name.",
                            "readOnly": true
                          },
                          "tier": {
                            "type": "string",
                            "description": "Specifies the tier of the node type. <br /><br /> Possible Values:<br /> **Standard**",
                            "readOnly": true
                          }
                        }
                      },
                      "capacity": {
                        "description": "Provides information about how the node count can be scaled.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "minimum": {
                            "type": "integer",
                            "format": "int32",
                            "readOnly": true,
                            "description": "Lowest permitted node count in a node type."
                          },
                          "maximum": {
                            "type": "integer",
                            "format": "int32",
                            "readOnly": true,
                            "description": "Highest permitted node count in a node type."
                          },
                          "default": {
                            "type": "integer",
                            "format": "int32",
                            "readOnly": true,
                            "description": "Default node count in a node type."
                          },
                          "scaleType": {
                            "readOnly": true,
                            "description": "Node type capacity scale type.",
                            "type": "string",
                            "enum": [
                              "None",
                              "Manual",
                              "Automatic"
                            ],
                            "default": "None",
                            "x-ms-enum": {
                              "name": "NodeTypeSkuScaleType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "None",
                                  "description": "Node count is not adjustable in any way (e.g. it is fixed)."
                                },
                                {
                                  "value": "Manual",
                                  "description": "The user must manually scale out/in."
                                },
                                {
                                  "value": "Automatic",
                                  "description": "Automatic scale is allowed."
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    "description": "Defines the type of sku available for a node type"
                  },
                  "x-ms-identifiers": []
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to use for getting the next set of results."
                }
              },
              "description": "Node type available sku list results"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}": {
      "get": {
        "tags": [
          "NodeType"
        ],
        "operationId": "NodeTypes_Get",
        "summary": "Gets a Service Fabric node type.",
        "description": "Get a Service Fabric node type of a given managed cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The node type properties",
                  "type": "object",
                  "required": [
                    "isPrimary",
                    "vmInstanceCount"
                  ],
                  "properties": {
                    "isPrimary": {
                      "type": "boolean",
                      "description": "Indicates the Service Fabric system services for the cluster will run on this node type. This setting cannot be changed once the node type is created."
                    },
                    "vmInstanceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of nodes in the node type. <br /><br />**Values:** <br />-1 - Use when auto scale rules are configured or sku.capacity is defined <br /> 0 - Not supported <br /> >0 - Use for manual scale.",
                      "minimum": -1,
                      "maximum": 2147483647
                    },
                    "dataDiskSizeGB": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Disk size for the managed disk attached to the vms on the node type in GBs."
                    },
                    "dataDiskType": {
                      "description": "Managed data disk type. Specifies the storage account type for the managed disk",
                      "type": "string",
                      "enum": [
                        "Standard_LRS",
                        "StandardSSD_LRS",
                        "Premium_LRS"
                      ],
                      "default": "StandardSSD_LRS",
                      "x-ms-enum": {
                        "name": "DiskType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Standard_LRS",
                            "description": "Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access."
                          },
                          {
                            "value": "StandardSSD_LRS",
                            "description": "Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test."
                          },
                          {
                            "value": "Premium_LRS",
                            "description": "Premium SSD locally redundant storage. Best for production and performance sensitive workloads."
                          }
                        ]
                      }
                    },
                    "dataDiskLetter": {
                      "type": "string",
                      "pattern": "^[a-zA-Z]{1}$",
                      "description": "Managed data disk letter. It can not use the reserved letter C or D and it can not change after created."
                    },
                    "placementProperties": {
                      "type": "object",
                      "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
                      "additionalProperties": {
                        "type": "string",
                        "description": "Placement tag value"
                      }
                    },
                    "capacities": {
                      "type": "object",
                      "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
                      "additionalProperties": {
                        "type": "string",
                        "description": "Capacity tag value"
                      }
                    },
                    "applicationPorts": {
                      "description": "The range of ports from which cluster assigned port to Service Fabric applications.",
                      "type": "object",
                      "required": [
                        "endPort",
                        "startPort"
                      ],
                      "properties": {
                        "startPort": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Starting port of a range of ports"
                        },
                        "endPort": {
                          "type": "integer",
                          "format": "int32",
                          "description": "End port of a range of ports"
                        }
                      }
                    },
                    "ephemeralPorts": {
                      "description": "The range of ephemeral ports that nodes in this node type should be configured with.",
                      "type": "object",
                      "required": [
                        "endPort",
                        "startPort"
                      ],
                      "properties": {
                        "startPort": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Starting port of a range of ports"
                        },
                        "endPort": {
                          "type": "integer",
                          "format": "int32",
                          "description": "End port of a range of ports"
                        }
                      }
                    },
                    "vmSize": {
                      "type": "string",
                      "description": "The size of virtual machines in the pool. All virtual machines in a pool are the same size. For example, Standard_D3."
                    },
                    "vmImagePublisher": {
                      "type": "string",
                      "description": "The publisher of the Azure Virtual Machines Marketplace image. For example, Canonical or MicrosoftWindowsServer."
                    },
                    "vmImageOffer": {
                      "type": "string",
                      "description": "The offer type of the Azure Virtual Machines Marketplace image. For example, UbuntuServer or WindowsServer."
                    },
                    "vmImageSku": {
                      "type": "string",
                      "description": "The SKU of the Azure Virtual Machines Marketplace image. For example, 14.04.0-LTS or 2012-R2-Datacenter."
                    },
                    "vmImageVersion": {
                      "type": "string",
                      "description": "The version of the Azure Virtual Machines Marketplace image. A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'."
                    },
                    "vmSecrets": {
                      "type": "array",
                      "title": "virtual machine secretes.",
                      "description": "The secrets to install in the virtual machines.",
                      "items": {
                        "type": "object",
                        "required": [
                          "sourceVault",
                          "vaultCertificates"
                        ],
                        "properties": {
                          "sourceVault": {
                            "description": "The relative URL of the Key Vault containing all of the certificates in VaultCertificates.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Azure resource identifier."
                              }
                            },
                            "x-ms-azure-resource": true
                          },
                          "vaultCertificates": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "certificateUrl",
                                "certificateStore"
                              ],
                              "properties": {
                                "certificateUrl": {
                                  "type": "string",
                                  "description": "This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  \"data\":\"<Base64-encoded-certificate>\",<br>  \"dataType\":\"pfx\",<br>  \"password\":\"<pfx-file-password>\"<br>}"
                                },
                                "certificateStore": {
                                  "type": "string",
                                  "description": "For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name <UppercaseThumbprint>.crt for the X509 certificate file and <UppercaseThumbprint>.prv for private key. Both of these files are .pem formatted."
                                }
                              },
                              "description": "Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM."
                            },
                            "x-ms-identifiers": [],
                            "description": "The list of key vault references in SourceVault which contain certificates."
                          }
                        },
                        "description": "Specifies set of certificates that should be installed onto the virtual machines."
                      },
                      "x-ms-identifiers": [
                        "sourceVault"
                      ]
                    },
                    "vmExtensions": {
                      "type": "array",
                      "title": "virtual machine extensions.",
                      "description": "Set of extensions that should be installed onto the virtual machines.",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "properties"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extension."
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Describes the properties of a Virtual Machine Scale Set Extension.",
                            "type": "object",
                            "required": [
                              "publisher",
                              "type",
                              "typeHandlerVersion"
                            ],
                            "properties": {
                              "publisher": {
                                "type": "string",
                                "description": "The name of the extension handler publisher."
                              },
                              "type": {
                                "type": "string",
                                "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                              },
                              "typeHandlerVersion": {
                                "type": "string",
                                "description": "Specifies the version of the script handler."
                              },
                              "autoUpgradeMinorVersion": {
                                "type": "boolean",
                                "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
                              },
                              "settings": {
                                "type": "object",
                                "description": "Json formatted public settings for the extension."
                              },
                              "protectedSettings": {
                                "type": "object",
                                "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
                              },
                              "forceUpdateTag": {
                                "type": "string",
                                "description": "If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed."
                              },
                              "provisionAfterExtensions": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Collection of extension names after which this extension needs to be provisioned."
                              },
                              "provisioningState": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The provisioning state, which only appears in the response."
                              },
                              "enableAutomaticUpgrade": {
                                "type": "boolean",
                                "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available."
                              },
                              "setupOrder": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Vm extension setup order.\n",
                                  "enum": [
                                    "BeforeSFRuntime"
                                  ],
                                  "x-ms-enum": {
                                    "name": "VmssExtensionSetupOrder",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "BeforeSFRuntime",
                                        "description": "Indicates that the vm extension should run before the service fabric runtime starts."
                                      }
                                    ]
                                  }
                                },
                                "x-ms-identifiers": [],
                                "description": "Indicates the setup order for the extension."
                              }
                            }
                          }
                        },
                        "description": "Specifies set of extensions that should be installed onto the virtual machines."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "vmManagedIdentity": {
                      "description": "Identities to assign to the virtual machine scale set under the node type.",
                      "type": "object",
                      "properties": {
                        "userAssignedIdentities": {
                          "type": "array",
                          "description": "The list of user identities associated with the virtual machine scale set under the node type. Each entry will be an ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "isStateless": {
                      "type": "boolean",
                      "description": "Indicates if the node type can only host Stateless workloads.",
                      "default": false
                    },
                    "multiplePlacementGroups": {
                      "type": "boolean",
                      "description": "Indicates if scale set associated with the node type can be composed of multiple placement groups.",
                      "default": false
                    },
                    "frontendConfigurations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipAddressType": {
                            "description": "The IP address type of this frontend configuration. If omitted the default value is IPv4.",
                            "type": "string",
                            "enum": [
                              "IPv4",
                              "IPv6"
                            ],
                            "default": "IPv4",
                            "x-ms-enum": {
                              "name": "IPAddressType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "IPv4",
                                  "description": "IPv4 address type."
                                },
                                {
                                  "value": "IPv6",
                                  "description": "IPv6 address type."
                                }
                              ]
                            }
                          },
                          "loadBalancerBackendAddressPoolId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "The resource Id of the Load Balancer backend address pool that the VM instances of the node type are associated with. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/loadBalancers/<loadBalancerName>/backendAddressPools/<backendAddressPoolName>'."
                          },
                          "loadBalancerInboundNatPoolId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "The resource Id of the Load Balancer inbound NAT pool that the VM instances of the node type are associated with. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/loadBalancers/<loadBalancerName>/inboundNatPools/<inboundNatPoolName>'."
                          },
                          "applicationGatewayBackendAddressPoolId": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Network/applicationGateways/backendAddressPools"
                                }
                              ]
                            },
                            "description": "The resource Id of application gateway backend address pool. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/applicationGateways/<applicationGatewayName>/backendAddressPools/<backendAddressPoolName>'."
                          }
                        },
                        "description": "Describes the frontend configurations for the node type."
                      },
                      "x-ms-identifiers": [],
                      "description": "Indicates the node type uses its own frontend configurations instead of the default one for the cluster. This setting can only be specified for non-primary node types and can not be added or removed after the node type is created."
                    },
                    "networkSecurityRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "protocol",
                          "access",
                          "priority",
                          "direction"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Network security rule name."
                          },
                          "description": {
                            "type": "string",
                            "description": "Network security rule description."
                          },
                          "protocol": {
                            "type": "string",
                            "description": "Network protocol this rule applies to.",
                            "enum": [
                              "http",
                              "https",
                              "tcp",
                              "udp",
                              "icmp",
                              "ah",
                              "esp"
                            ],
                            "x-ms-enum": {
                              "name": "nsgProtocol",
                              "modelAsString": true
                            }
                          },
                          "sourceAddressPrefixes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The CIDR or source IP ranges."
                          },
                          "destinationAddressPrefixes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The destination address prefixes. CIDR or destination IP ranges."
                          },
                          "sourcePortRanges": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The source port ranges."
                          },
                          "destinationPortRanges": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The destination port ranges."
                          },
                          "sourceAddressPrefix": {
                            "type": "string",
                            "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from."
                          },
                          "destinationAddressPrefix": {
                            "type": "string",
                            "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."
                          },
                          "sourcePortRange": {
                            "type": "string",
                            "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                          },
                          "destinationPortRange": {
                            "type": "string",
                            "description": "he destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                          },
                          "access": {
                            "type": "string",
                            "description": "The network traffic is allowed or denied.",
                            "enum": [
                              "allow",
                              "deny"
                            ],
                            "x-ms-enum": {
                              "name": "access",
                              "modelAsString": true
                            }
                          },
                          "priority": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The priority of the rule. The value can be in the range 1000 to 3000. Values outside this range are reserved for Service Fabric ManagerCluster Resource Provider. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                            "minimum": 1000,
                            "maximum": 3000
                          },
                          "direction": {
                            "type": "string",
                            "description": "Network security rule direction.",
                            "enum": [
                              "inbound",
                              "outbound"
                            ],
                            "x-ms-enum": {
                              "name": "direction",
                              "modelAsString": true
                            }
                          }
                        },
                        "description": "Describes a network security rule."
                      },
                      "x-ms-identifiers": [],
                      "description": "The Network Security Rules for this node type. This setting can only be specified for node types that are configured with frontend configurations."
                    },
                    "additionalDataDisks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "lun",
                          "diskSizeGB",
                          "diskType",
                          "diskLetter"
                        ],
                        "properties": {
                          "lun": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "description": "Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM. Lun 0 is reserved for the service fabric data disk."
                          },
                          "diskSizeGB": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Disk size for each vm in the node type in GBs."
                          },
                          "diskType": {
                            "description": "Managed data disk type. Specifies the storage account type for the managed disk",
                            "type": "string",
                            "enum": [
                              "Standard_LRS",
                              "StandardSSD_LRS",
                              "Premium_LRS"
                            ],
                            "default": "StandardSSD_LRS",
                            "x-ms-enum": {
                              "name": "DiskType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Standard_LRS",
                                  "description": "Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access."
                                },
                                {
                                  "value": "StandardSSD_LRS",
                                  "description": "Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test."
                                },
                                {
                                  "value": "Premium_LRS",
                                  "description": "Premium SSD locally redundant storage. Best for production and performance sensitive workloads."
                                }
                              ]
                            }
                          },
                          "diskLetter": {
                            "type": "string",
                            "pattern": "^[a-zA-Z]{1}$",
                            "description": "Managed data disk letter. It can not use the reserved letter C or D and it can not change after created."
                          }
                        },
                        "description": "Managed data disk description."
                      },
                      "x-ms-identifiers": [
                        "lun"
                      ],
                      "description": "Additional managed data disks."
                    },
                    "enableEncryptionAtHost": {
                      "type": "boolean",
                      "description": "Enable or disable the Host Encryption for the virtual machines on the node type. This will enable the encryption for all the disks including Resource/Temp disk at host itself. Default: The Encryption at host will be disabled unless this property is set to true for the resource.",
                      "default": false
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioning state of the node type resource.",
                      "type": "string",
                      "enum": [
                        "None",
                        "Creating",
                        "Created",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting",
                        "Deleted",
                        "Other"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "enableAcceleratedNetworking": {
                      "type": "boolean",
                      "description": "Specifies whether the network interface is accelerated networking-enabled."
                    },
                    "useDefaultPublicLoadBalancer": {
                      "type": "boolean",
                      "description": "Specifies whether the use public load balancer. If not specified and the node type doesn't have its own frontend configuration, it will be attached to the default load balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is true, then the frontend has to be an Internal Load Balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is false or not set, then the custom load balancer must include a public load balancer to provide outbound connectivity."
                    },
                    "useTempDataDisk": {
                      "type": "boolean",
                      "description": "Specifies whether to use the temporary disk for the service fabric data root, in which case no managed data disk will be attached and the temporary disk will be used. It is only allowed for stateless node types."
                    },
                    "enableOverProvisioning": {
                      "type": "boolean",
                      "description": "Specifies whether the node type should be overprovisioned. It is only allowed for stateless node types."
                    },
                    "zones": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Specifies the availability zones where the node type would span across. If the cluster is not spanning across availability zones, initiates az migration for the cluster."
                    },
                    "isSpotVM": {
                      "type": "boolean",
                      "description": "Indicates whether the node type will be Spot Virtual Machines. Azure will allocate the VMs if there is capacity available and the VMs can be evicted at any time."
                    },
                    "hostGroupId": {
                      "type": "string",
                      "description": "Specifies the full host group resource Id. This property is used for deploying on azure dedicated hosts."
                    },
                    "useEphemeralOSDisk": {
                      "type": "boolean",
                      "description": "Indicates whether to use ephemeral os disk. The sku selected on the vmSize property needs to support this feature."
                    },
                    "spotRestoreTimeout": {
                      "type": "string",
                      "description": "Indicates the time duration after which the platform will not try to restore the VMSS SPOT instances specified as ISO 8601."
                    },
                    "evictionPolicy": {
                      "description": "Specifies the eviction policy for virtual machines in a SPOT node type. Default is Delete.",
                      "type": "string",
                      "enum": [
                        "Delete",
                        "Deallocate"
                      ],
                      "x-ms-enum": {
                        "name": "EvictionPolicyType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Delete",
                            "description": "Eviction policy will be Delete for SPOT vms."
                          },
                          {
                            "value": "Deallocate",
                            "description": "Eviction policy will be Deallocate for SPOT vms."
                          }
                        ]
                      }
                    },
                    "vmImageResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Compute/images"
                          },
                          {
                            "type": "Microsoft.Compute/galleries/images"
                          },
                          {
                            "type": "Microsoft.Compute/galleries/images/versions"
                          }
                        ]
                      },
                      "description": "Indicates the resource id of the vm image. This parameter is used for custom vm image."
                    },
                    "subnetId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/virtualNetworks/subnets"
                          }
                        ]
                      },
                      "description": "Indicates the resource id of the subnet for the node type."
                    },
                    "vmSetupActions": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "action to be performed on the vms before bootstrapping the service fabric runtime.",
                        "enum": [
                          "EnableContainers",
                          "EnableHyperV"
                        ],
                        "x-ms-enum": {
                          "name": "VmSetupAction",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "EnableContainers",
                              "description": "Enable windows containers feature."
                            },
                            {
                              "value": "EnableHyperV",
                              "description": "Enables windows HyperV feature."
                            }
                          ]
                        }
                      },
                      "description": "Specifies the actions to be performed on the vms before bootstrapping the service fabric runtime."
                    },
                    "securityType": {
                      "type": "string",
                      "description": "Specifies the security type of the nodeType. Only Standard and TrustedLaunch are currently supported",
                      "enum": [
                        "TrustedLaunch",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "securityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "TrustedLaunch",
                            "description": "Trusted Launch is a security type that secures generation 2 virtual machines."
                          },
                          {
                            "value": "Standard",
                            "description": "Standard is the default security type for all machines."
                          }
                        ]
                      }
                    },
                    "secureBootEnabled": {
                      "type": "boolean",
                      "description": "Specifies whether secure boot should be enabled on the nodeType. Can only be used with TrustedLaunch SecurityType"
                    },
                    "enableNodePublicIP": {
                      "type": "boolean",
                      "description": "Specifies whether each node is allocated its own public IPv4 address. This is only supported on secondary node types with custom Load Balancers."
                    },
                    "enableNodePublicIPv6": {
                      "type": "boolean",
                      "description": "Specifies whether each node is allocated its own public IPv6 address. This is only supported on secondary node types with custom Load Balancers."
                    },
                    "vmSharedGalleryImageId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Compute/sharedGalleries/images"
                          },
                          {
                            "type": "Microsoft.Compute/sharedGalleries/images/versions"
                          }
                        ]
                      },
                      "description": "Indicates the resource id of the vm shared galleries image. This parameter is used for custom vm image."
                    },
                    "natGatewayId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/natGateways"
                          }
                        ]
                      },
                      "description": "Specifies the resource id of a NAT Gateway to attach to the subnet of this node type. Node type must use custom load balancer."
                    },
                    "natConfigurations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "backendPort": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 65535,
                            "description": "The internal port for the NAT configuration."
                          },
                          "frontendPortRangeStart": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 65534,
                            "description": "The port range start for the external endpoint."
                          },
                          "frontendPortRangeEnd": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 65534,
                            "description": "The port range end for the external endpoint."
                          }
                        },
                        "description": "Provides information about NAT configuration on the default public Load Balancer for the node type."
                      },
                      "x-ms-identifiers": [],
                      "description": "Specifies the NAT configuration on default public Load Balancer for the node type. This is only supported for node types use the default public Load Balancer."
                    },
                    "vmImagePlan": {
                      "description": "Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started ->. Enter any required information and then click Save.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The plan ID."
                        },
                        "product": {
                          "type": "string",
                          "description": "Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element."
                        },
                        "promotionCode": {
                          "type": "string",
                          "description": "The promotion code."
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The publisher ID."
                        }
                      }
                    },
                    "serviceArtifactReferenceId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Compute/galleries/serviceArtifacts/vmArtifactsProfiles"
                          }
                        ]
                      },
                      "description": "Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using 'latest' image version."
                    },
                    "dscpConfigurationId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/dscpConfigurations"
                          }
                        ]
                      },
                      "description": "Specifies the resource id of the DSCP configuration to apply to the node type network interface."
                    },
                    "additionalNetworkInterfaceConfigurations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "ipConfigurations"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the network interface."
                          },
                          "enableAcceleratedNetworking": {
                            "type": "boolean",
                            "description": "Specifies whether the network interface is accelerated networking-enabled."
                          },
                          "dscpConfiguration": {
                            "description": "Specifies the DSCP configuration to apply to the network interface.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Azure resource identifier."
                              }
                            },
                            "x-ms-azure-resource": true
                          },
                          "ipConfigurations": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "description": "Specifies an IP configuration of the network interface.",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the network interface."
                                },
                                "applicationGatewayBackendAddressPools": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "Azure resource identifier."
                                      }
                                    },
                                    "description": "Azure resource identifier.",
                                    "x-ms-azure-resource": true
                                  },
                                  "description": "Specifies an array of references to backend address pools of application gateways. A node type can reference backend address pools of multiple application gateways. Multiple node types cannot use the same application gateway."
                                },
                                "loadBalancerBackendAddressPools": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "Azure resource identifier."
                                      }
                                    },
                                    "description": "Azure resource identifier.",
                                    "x-ms-azure-resource": true
                                  },
                                  "description": "Specifies an array of references to backend address pools of load balancers. A node type can reference backend address pools of one public and one internal load balancer. Multiple node types cannot use the same basic sku load balancer.\t"
                                },
                                "loadBalancerInboundNatPools": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "Azure resource identifier."
                                      }
                                    },
                                    "description": "Azure resource identifier.",
                                    "x-ms-azure-resource": true
                                  },
                                  "description": "Specifies an array of references to inbound Nat pools of the load balancers. A node type can reference inbound nat pools of one public and one internal load balancer. Multiple node types cannot use the same basic sku load balancer."
                                },
                                "subnet": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Azure resource identifier."
                                    }
                                  },
                                  "description": "Azure resource identifier.",
                                  "x-ms-azure-resource": true
                                },
                                "privateIPAddressVersion": {
                                  "type": "string",
                                  "description": "Specifies whether the IP configuration's private IP is IPv4 or IPv6. Default is IPv4.",
                                  "enum": [
                                    "IPv4",
                                    "IPv6"
                                  ],
                                  "default": "IPv4",
                                  "x-ms-enum": {
                                    "name": "privateIPAddressVersion",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "IPv4"
                                      },
                                      {
                                        "value": "IPv6"
                                      }
                                    ]
                                  }
                                },
                                "publicIPAddressConfiguration": {
                                  "type": "object",
                                  "required": [
                                    "name"
                                  ],
                                  "description": "The public IP address configuration of the network interface.",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the network interface."
                                    },
                                    "ipTags": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "ipTagType",
                                          "tag"
                                        ],
                                        "properties": {
                                          "ipTagType": {
                                            "type": "string",
                                            "description": "IP tag type. Example: FirstPartyUsage."
                                          },
                                          "tag": {
                                            "type": "string",
                                            "description": "IP tag associated with the public IP. Example: SQL, Storage etc."
                                          }
                                        },
                                        "description": "The IP tag associated with the public IP address."
                                      },
                                      "x-ms-identifiers": [],
                                      "description": "Specifies the list of IP tags associated with the public IP address."
                                    },
                                    "publicIPAddressVersion": {
                                      "type": "string",
                                      "description": "Specifies whether the IP configuration's public IP is IPv4 or IPv6. Default is IPv4.",
                                      "enum": [
                                        "IPv4",
                                        "IPv6"
                                      ],
                                      "default": "IPv4",
                                      "x-ms-enum": {
                                        "name": "publicIPAddressVersion",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "value": "IPv4"
                                          },
                                          {
                                            "value": "IPv6"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ],
                            "description": "Specifies the IP configurations of the network interface."
                          }
                        },
                        "description": "Specifies the settings for a network interface to attach to the node type."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "Specifies the settings for any additional secondary network interfaces to attach to the node type."
                    },
                    "computerNamePrefix": {
                      "type": "string",
                      "description": "Specifies the computer name prefix. Limited to 9 characters. If specified, allows for a longer name to be specified for the node type name."
                    }
                  }
                },
                "sku": {
                  "description": "The node type sku.",
                  "type": "object",
                  "required": [
                    "capacity"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The sku name. <br /><br />Name is internally generated and is used in auto-scale scenarios.<br /> Property does not allow to be changed to other values than generated.<br /> To avoid deployment errors please omit the property."
                    },
                    "tier": {
                      "type": "string",
                      "description": "Specifies the tier of the node type. <br /><br /> Possible Values:<br /> **Standard**"
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of nodes in the node type.<br /><br />If present in request it will override properties.vmInstanceCount.",
                      "minimum": 1,
                      "maximum": 2147483647
                    }
                  }
                }
              },
              "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
            }
          }
        }
      },
      "put": {
        "tags": [
          "NodeType"
        ],
        "operationId": "NodeTypes_CreateOrUpdate",
        "summary": "Creates or updates a Service Fabric node type.",
        "description": "Create or update a Service Fabric node type of a given managed cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The node type resource.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The node type properties",
                  "type": "object",
                  "required": [
                    "isPrimary",
                    "vmInstanceCount"
                  ],
                  "properties": {
                    "isPrimary": {
                      "type": "boolean",
                      "description": "Indicates the Service Fabric system services for the cluster will run on this node type. This setting cannot be changed once the node type is created."
                    },
                    "vmInstanceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of nodes in the node type. <br /><br />**Values:** <br />-1 - Use when auto scale rules are configured or sku.capacity is defined <br /> 0 - Not supported <br /> >0 - Use for manual scale.",
                      "minimum": -1,
                      "maximum": 2147483647
                    },
                    "dataDiskSizeGB": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Disk size for the managed disk attached to the vms on the node type in GBs."
                    },
                    "dataDiskType": {
                      "description": "Managed data disk type. Specifies the storage account type for the managed disk",
                      "type": "string",
                      "enum": [
                        "Standard_LRS",
                        "StandardSSD_LRS",
                        "Premium_LRS"
                      ],
                      "default": "StandardSSD_LRS",
                      "x-ms-enum": {
                        "name": "DiskType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Standard_LRS",
                            "description": "Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access."
                          },
                          {
                            "value": "StandardSSD_LRS",
                            "description": "Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test."
                          },
                          {
                            "value": "Premium_LRS",
                            "description": "Premium SSD locally redundant storage. Best for production and performance sensitive workloads."
                          }
                        ]
                      }
                    },
                    "dataDiskLetter": {
                      "type": "string",
                      "pattern": "^[a-zA-Z]{1}$",
                      "description": "Managed data disk letter. It can not use the reserved letter C or D and it can not change after created."
                    },
                    "placementProperties": {
                      "type": "object",
                      "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
                      "additionalProperties": {
                        "type": "string",
                        "description": "Placement tag value"
                      }
                    },
                    "capacities": {
                      "type": "object",
                      "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
                      "additionalProperties": {
                        "type": "string",
                        "description": "Capacity tag value"
                      }
                    },
                    "applicationPorts": {
                      "description": "The range of ports from which cluster assigned port to Service Fabric applications.",
                      "type": "object",
                      "required": [
                        "endPort",
                        "startPort"
                      ],
                      "properties": {
                        "startPort": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Starting port of a range of ports"
                        },
                        "endPort": {
                          "type": "integer",
                          "format": "int32",
                          "description": "End port of a range of ports"
                        }
                      }
                    },
                    "ephemeralPorts": {
                      "description": "The range of ephemeral ports that nodes in this node type should be configured with.",
                      "type": "object",
                      "required": [
                        "endPort",
                        "startPort"
                      ],
                      "properties": {
                        "startPort": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Starting port of a range of ports"
                        },
                        "endPort": {
                          "type": "integer",
                          "format": "int32",
                          "description": "End port of a range of ports"
                        }
                      }
                    },
                    "vmSize": {
                      "type": "string",
                      "description": "The size of virtual machines in the pool. All virtual machines in a pool are the same size. For example, Standard_D3."
                    },
                    "vmImagePublisher": {
                      "type": "string",
                      "description": "The publisher of the Azure Virtual Machines Marketplace image. For example, Canonical or MicrosoftWindowsServer."
                    },
                    "vmImageOffer": {
                      "type": "string",
                      "description": "The offer type of the Azure Virtual Machines Marketplace image. For example, UbuntuServer or WindowsServer."
                    },
                    "vmImageSku": {
                      "type": "string",
                      "description": "The SKU of the Azure Virtual Machines Marketplace image. For example, 14.04.0-LTS or 2012-R2-Datacenter."
                    },
                    "vmImageVersion": {
                      "type": "string",
                      "description": "The version of the Azure Virtual Machines Marketplace image. A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'."
                    },
                    "vmSecrets": {
                      "type": "array",
                      "title": "virtual machine secretes.",
                      "description": "The secrets to install in the virtual machines.",
                      "items": {
                        "type": "object",
                        "required": [
                          "sourceVault",
                          "vaultCertificates"
                        ],
                        "properties": {
                          "sourceVault": {
                            "description": "The relative URL of the Key Vault containing all of the certificates in VaultCertificates.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Azure resource identifier."
                              }
                            },
                            "x-ms-azure-resource": true
                          },
                          "vaultCertificates": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "certificateUrl",
                                "certificateStore"
                              ],
                              "properties": {
                                "certificateUrl": {
                                  "type": "string",
                                  "description": "This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  \"data\":\"<Base64-encoded-certificate>\",<br>  \"dataType\":\"pfx\",<br>  \"password\":\"<pfx-file-password>\"<br>}"
                                },
                                "certificateStore": {
                                  "type": "string",
                                  "description": "For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name <UppercaseThumbprint>.crt for the X509 certificate file and <UppercaseThumbprint>.prv for private key. Both of these files are .pem formatted."
                                }
                              },
                              "description": "Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM."
                            },
                            "x-ms-identifiers": [],
                            "description": "The list of key vault references in SourceVault which contain certificates."
                          }
                        },
                        "description": "Specifies set of certificates that should be installed onto the virtual machines."
                      },
                      "x-ms-identifiers": [
                        "sourceVault"
                      ]
                    },
                    "vmExtensions": {
                      "type": "array",
                      "title": "virtual machine extensions.",
                      "description": "Set of extensions that should be installed onto the virtual machines.",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "properties"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extension."
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Describes the properties of a Virtual Machine Scale Set Extension.",
                            "type": "object",
                            "required": [
                              "publisher",
                              "type",
                              "typeHandlerVersion"
                            ],
                            "properties": {
                              "publisher": {
                                "type": "string",
                                "description": "The name of the extension handler publisher."
                              },
                              "type": {
                                "type": "string",
                                "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                              },
                              "typeHandlerVersion": {
                                "type": "string",
                                "description": "Specifies the version of the script handler."
                              },
                              "autoUpgradeMinorVersion": {
                                "type": "boolean",
                                "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
                              },
                              "settings": {
                                "type": "object",
                                "description": "Json formatted public settings for the extension."
                              },
                              "protectedSettings": {
                                "type": "object",
                                "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
                              },
                              "forceUpdateTag": {
                                "type": "string",
                                "description": "If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed."
                              },
                              "provisionAfterExtensions": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Collection of extension names after which this extension needs to be provisioned."
                              },
                              "provisioningState": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The provisioning state, which only appears in the response."
                              },
                              "enableAutomaticUpgrade": {
                                "type": "boolean",
                                "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available."
                              },
                              "setupOrder": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Vm extension setup order.\n",
                                  "enum": [
                                    "BeforeSFRuntime"
                                  ],
                                  "x-ms-enum": {
                                    "name": "VmssExtensionSetupOrder",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "BeforeSFRuntime",
                                        "description": "Indicates that the vm extension should run before the service fabric runtime starts."
                                      }
                                    ]
                                  }
                                },
                                "x-ms-identifiers": [],
                                "description": "Indicates the setup order for the extension."
                              }
                            }
                          }
                        },
                        "description": "Specifies set of extensions that should be installed onto the virtual machines."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "vmManagedIdentity": {
                      "description": "Identities to assign to the virtual machine scale set under the node type.",
                      "type": "object",
                      "properties": {
                        "userAssignedIdentities": {
                          "type": "array",
                          "description": "The list of user identities associated with the virtual machine scale set under the node type. Each entry will be an ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "isStateless": {
                      "type": "boolean",
                      "description": "Indicates if the node type can only host Stateless workloads.",
                      "default": false
                    },
                    "multiplePlacementGroups": {
                      "type": "boolean",
                      "description": "Indicates if scale set associated with the node type can be composed of multiple placement groups.",
                      "default": false
                    },
                    "frontendConfigurations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipAddressType": {
                            "description": "The IP address type of this frontend configuration. If omitted the default value is IPv4.",
                            "type": "string",
                            "enum": [
                              "IPv4",
                              "IPv6"
                            ],
                            "default": "IPv4",
                            "x-ms-enum": {
                              "name": "IPAddressType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "IPv4",
                                  "description": "IPv4 address type."
                                },
                                {
                                  "value": "IPv6",
                                  "description": "IPv6 address type."
                                }
                              ]
                            }
                          },
                          "loadBalancerBackendAddressPoolId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "The resource Id of the Load Balancer backend address pool that the VM instances of the node type are associated with. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/loadBalancers/<loadBalancerName>/backendAddressPools/<backendAddressPoolName>'."
                          },
                          "loadBalancerInboundNatPoolId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "The resource Id of the Load Balancer inbound NAT pool that the VM instances of the node type are associated with. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/loadBalancers/<loadBalancerName>/inboundNatPools/<inboundNatPoolName>'."
                          },
                          "applicationGatewayBackendAddressPoolId": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Network/applicationGateways/backendAddressPools"
                                }
                              ]
                            },
                            "description": "The resource Id of application gateway backend address pool. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/applicationGateways/<applicationGatewayName>/backendAddressPools/<backendAddressPoolName>'."
                          }
                        },
                        "description": "Describes the frontend configurations for the node type."
                      },
                      "x-ms-identifiers": [],
                      "description": "Indicates the node type uses its own frontend configurations instead of the default one for the cluster. This setting can only be specified for non-primary node types and can not be added or removed after the node type is created."
                    },
                    "networkSecurityRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "protocol",
                          "access",
                          "priority",
                          "direction"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Network security rule name."
                          },
                          "description": {
                            "type": "string",
                            "description": "Network security rule description."
                          },
                          "protocol": {
                            "type": "string",
                            "description": "Network protocol this rule applies to.",
                            "enum": [
                              "http",
                              "https",
                              "tcp",
                              "udp",
                              "icmp",
                              "ah",
                              "esp"
                            ],
                            "x-ms-enum": {
                              "name": "nsgProtocol",
                              "modelAsString": true
                            }
                          },
                          "sourceAddressPrefixes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The CIDR or source IP ranges."
                          },
                          "destinationAddressPrefixes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The destination address prefixes. CIDR or destination IP ranges."
                          },
                          "sourcePortRanges": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The source port ranges."
                          },
                          "destinationPortRanges": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The destination port ranges."
                          },
                          "sourceAddressPrefix": {
                            "type": "string",
                            "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from."
                          },
                          "destinationAddressPrefix": {
                            "type": "string",
                            "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."
                          },
                          "sourcePortRange": {
                            "type": "string",
                            "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                          },
                          "destinationPortRange": {
                            "type": "string",
                            "description": "he destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                          },
                          "access": {
                            "type": "string",
                            "description": "The network traffic is allowed or denied.",
                            "enum": [
                              "allow",
                              "deny"
                            ],
                            "x-ms-enum": {
                              "name": "access",
                              "modelAsString": true
                            }
                          },
                          "priority": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The priority of the rule. The value can be in the range 1000 to 3000. Values outside this range are reserved for Service Fabric ManagerCluster Resource Provider. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                            "minimum": 1000,
                            "maximum": 3000
                          },
                          "direction": {
                            "type": "string",
                            "description": "Network security rule direction.",
                            "enum": [
                              "inbound",
                              "outbound"
                            ],
                            "x-ms-enum": {
                              "name": "direction",
                              "modelAsString": true
                            }
                          }
                        },
                        "description": "Describes a network security rule."
                      },
                      "x-ms-identifiers": [],
                      "description": "The Network Security Rules for this node type. This setting can only be specified for node types that are configured with frontend configurations."
                    },
                    "additionalDataDisks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "lun",
                          "diskSizeGB",
                          "diskType",
                          "diskLetter"
                        ],
                        "properties": {
                          "lun": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "description": "Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM. Lun 0 is reserved for the service fabric data disk."
                          },
                          "diskSizeGB": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Disk size for each vm in the node type in GBs."
                          },
                          "diskType": {
                            "description": "Managed data disk type. Specifies the storage account type for the managed disk",
                            "type": "string",
                            "enum": [
                              "Standard_LRS",
                              "StandardSSD_LRS",
                              "Premium_LRS"
                            ],
                            "default": "StandardSSD_LRS",
                            "x-ms-enum": {
                              "name": "DiskType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Standard_LRS",
                                  "description": "Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access."
                                },
                                {
                                  "value": "StandardSSD_LRS",
                                  "description": "Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test."
                                },
                                {
                                  "value": "Premium_LRS",
                                  "description": "Premium SSD locally redundant storage. Best for production and performance sensitive workloads."
                                }
                              ]
                            }
                          },
                          "diskLetter": {
                            "type": "string",
                            "pattern": "^[a-zA-Z]{1}$",
                            "description": "Managed data disk letter. It can not use the reserved letter C or D and it can not change after created."
                          }
                        },
                        "description": "Managed data disk description."
                      },
                      "x-ms-identifiers": [
                        "lun"
                      ],
                      "description": "Additional managed data disks."
                    },
                    "enableEncryptionAtHost": {
                      "type": "boolean",
                      "description": "Enable or disable the Host Encryption for the virtual machines on the node type. This will enable the encryption for all the disks including Resource/Temp disk at host itself. Default: The Encryption at host will be disabled unless this property is set to true for the resource.",
                      "default": false
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioning state of the node type resource.",
                      "type": "string",
                      "enum": [
                        "None",
                        "Creating",
                        "Created",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting",
                        "Deleted",
                        "Other"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "enableAcceleratedNetworking": {
                      "type": "boolean",
                      "description": "Specifies whether the network interface is accelerated networking-enabled."
                    },
                    "useDefaultPublicLoadBalancer": {
                      "type": "boolean",
                      "description": "Specifies whether the use public load balancer. If not specified and the node type doesn't have its own frontend configuration, it will be attached to the default load balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is true, then the frontend has to be an Internal Load Balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is false or not set, then the custom load balancer must include a public load balancer to provide outbound connectivity."
                    },
                    "useTempDataDisk": {
                      "type": "boolean",
                      "description": "Specifies whether to use the temporary disk for the service fabric data root, in which case no managed data disk will be attached and the temporary disk will be used. It is only allowed for stateless node types."
                    },
                    "enableOverProvisioning": {
                      "type": "boolean",
                      "description": "Specifies whether the node type should be overprovisioned. It is only allowed for stateless node types."
                    },
                    "zones": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Specifies the availability zones where the node type would span across. If the cluster is not spanning across availability zones, initiates az migration for the cluster."
                    },
                    "isSpotVM": {
                      "type": "boolean",
                      "description": "Indicates whether the node type will be Spot Virtual Machines. Azure will allocate the VMs if there is capacity available and the VMs can be evicted at any time."
                    },
                    "hostGroupId": {
                      "type": "string",
                      "description": "Specifies the full host group resource Id. This property is used for deploying on azure dedicated hosts."
                    },
                    "useEphemeralOSDisk": {
                      "type": "boolean",
                      "description": "Indicates whether to use ephemeral os disk. The sku selected on the vmSize property needs to support this feature."
                    },
                    "spotRestoreTimeout": {
                      "type": "string",
                      "description": "Indicates the time duration after which the platform will not try to restore the VMSS SPOT instances specified as ISO 8601."
                    },
                    "evictionPolicy": {
                      "description": "Specifies the eviction policy for virtual machines in a SPOT node type. Default is Delete.",
                      "type": "string",
                      "enum": [
                        "Delete",
                        "Deallocate"
                      ],
                      "x-ms-enum": {
                        "name": "EvictionPolicyType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Delete",
                            "description": "Eviction policy will be Delete for SPOT vms."
                          },
                          {
                            "value": "Deallocate",
                            "description": "Eviction policy will be Deallocate for SPOT vms."
                          }
                        ]
                      }
                    },
                    "vmImageResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Compute/images"
                          },
                          {
                            "type": "Microsoft.Compute/galleries/images"
                          },
                          {
                            "type": "Microsoft.Compute/galleries/images/versions"
                          }
                        ]
                      },
                      "description": "Indicates the resource id of the vm image. This parameter is used for custom vm image."
                    },
                    "subnetId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/virtualNetworks/subnets"
                          }
                        ]
                      },
                      "description": "Indicates the resource id of the subnet for the node type."
                    },
                    "vmSetupActions": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "action to be performed on the vms before bootstrapping the service fabric runtime.",
                        "enum": [
                          "EnableContainers",
                          "EnableHyperV"
                        ],
                        "x-ms-enum": {
                          "name": "VmSetupAction",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "EnableContainers",
                              "description": "Enable windows containers feature."
                            },
                            {
                              "value": "EnableHyperV",
                              "description": "Enables windows HyperV feature."
                            }
                          ]
                        }
                      },
                      "description": "Specifies the actions to be performed on the vms before bootstrapping the service fabric runtime."
                    },
                    "securityType": {
                      "type": "string",
                      "description": "Specifies the security type of the nodeType. Only Standard and TrustedLaunch are currently supported",
                      "enum": [
                        "TrustedLaunch",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "securityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "TrustedLaunch",
                            "description": "Trusted Launch is a security type that secures generation 2 virtual machines."
                          },
                          {
                            "value": "Standard",
                            "description": "Standard is the default security type for all machines."
                          }
                        ]
                      }
                    },
                    "secureBootEnabled": {
                      "type": "boolean",
                      "description": "Specifies whether secure boot should be enabled on the nodeType. Can only be used with TrustedLaunch SecurityType"
                    },
                    "enableNodePublicIP": {
                      "type": "boolean",
                      "description": "Specifies whether each node is allocated its own public IPv4 address. This is only supported on secondary node types with custom Load Balancers."
                    },
                    "enableNodePublicIPv6": {
                      "type": "boolean",
                      "description": "Specifies whether each node is allocated its own public IPv6 address. This is only supported on secondary node types with custom Load Balancers."
                    },
                    "vmSharedGalleryImageId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Compute/sharedGalleries/images"
                          },
                          {
                            "type": "Microsoft.Compute/sharedGalleries/images/versions"
                          }
                        ]
                      },
                      "description": "Indicates the resource id of the vm shared galleries image. This parameter is used for custom vm image."
                    },
                    "natGatewayId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/natGateways"
                          }
                        ]
                      },
                      "description": "Specifies the resource id of a NAT Gateway to attach to the subnet of this node type. Node type must use custom load balancer."
                    },
                    "natConfigurations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "backendPort": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 65535,
                            "description": "The internal port for the NAT configuration."
                          },
                          "frontendPortRangeStart": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 65534,
                            "description": "The port range start for the external endpoint."
                          },
                          "frontendPortRangeEnd": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 65534,
                            "description": "The port range end for the external endpoint."
                          }
                        },
                        "description": "Provides information about NAT configuration on the default public Load Balancer for the node type."
                      },
                      "x-ms-identifiers": [],
                      "description": "Specifies the NAT configuration on default public Load Balancer for the node type. This is only supported for node types use the default public Load Balancer."
                    },
                    "vmImagePlan": {
                      "description": "Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started ->. Enter any required information and then click Save.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The plan ID."
                        },
                        "product": {
                          "type": "string",
                          "description": "Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element."
                        },
                        "promotionCode": {
                          "type": "string",
                          "description": "The promotion code."
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The publisher ID."
                        }
                      }
                    },
                    "serviceArtifactReferenceId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Compute/galleries/serviceArtifacts/vmArtifactsProfiles"
                          }
                        ]
                      },
                      "description": "Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using 'latest' image version."
                    },
                    "dscpConfigurationId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/dscpConfigurations"
                          }
                        ]
                      },
                      "description": "Specifies the resource id of the DSCP configuration to apply to the node type network interface."
                    },
                    "additionalNetworkInterfaceConfigurations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "ipConfigurations"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the network interface."
                          },
                          "enableAcceleratedNetworking": {
                            "type": "boolean",
                            "description": "Specifies whether the network interface is accelerated networking-enabled."
                          },
                          "dscpConfiguration": {
                            "description": "Specifies the DSCP configuration to apply to the network interface.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Azure resource identifier."
                              }
                            },
                            "x-ms-azure-resource": true
                          },
                          "ipConfigurations": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "description": "Specifies an IP configuration of the network interface.",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the network interface."
                                },
                                "applicationGatewayBackendAddressPools": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "Azure resource identifier."
                                      }
                                    },
                                    "description": "Azure resource identifier.",
                                    "x-ms-azure-resource": true
                                  },
                                  "description": "Specifies an array of references to backend address pools of application gateways. A node type can reference backend address pools of multiple application gateways. Multiple node types cannot use the same application gateway."
                                },
                                "loadBalancerBackendAddressPools": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "Azure resource identifier."
                                      }
                                    },
                                    "description": "Azure resource identifier.",
                                    "x-ms-azure-resource": true
                                  },
                                  "description": "Specifies an array of references to backend address pools of load balancers. A node type can reference backend address pools of one public and one internal load balancer. Multiple node types cannot use the same basic sku load balancer.\t"
                                },
                                "loadBalancerInboundNatPools": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "Azure resource identifier."
                                      }
                                    },
                                    "description": "Azure resource identifier.",
                                    "x-ms-azure-resource": true
                                  },
                                  "description": "Specifies an array of references to inbound Nat pools of the load balancers. A node type can reference inbound nat pools of one public and one internal load balancer. Multiple node types cannot use the same basic sku load balancer."
                                },
                                "subnet": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Azure resource identifier."
                                    }
                                  },
                                  "description": "Azure resource identifier.",
                                  "x-ms-azure-resource": true
                                },
                                "privateIPAddressVersion": {
                                  "type": "string",
                                  "description": "Specifies whether the IP configuration's private IP is IPv4 or IPv6. Default is IPv4.",
                                  "enum": [
                                    "IPv4",
                                    "IPv6"
                                  ],
                                  "default": "IPv4",
                                  "x-ms-enum": {
                                    "name": "privateIPAddressVersion",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "IPv4"
                                      },
                                      {
                                        "value": "IPv6"
                                      }
                                    ]
                                  }
                                },
                                "publicIPAddressConfiguration": {
                                  "type": "object",
                                  "required": [
                                    "name"
                                  ],
                                  "description": "The public IP address configuration of the network interface.",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the network interface."
                                    },
                                    "ipTags": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "ipTagType",
                                          "tag"
                                        ],
                                        "properties": {
                                          "ipTagType": {
                                            "type": "string",
                                            "description": "IP tag type. Example: FirstPartyUsage."
                                          },
                                          "tag": {
                                            "type": "string",
                                            "description": "IP tag associated with the public IP. Example: SQL, Storage etc."
                                          }
                                        },
                                        "description": "The IP tag associated with the public IP address."
                                      },
                                      "x-ms-identifiers": [],
                                      "description": "Specifies the list of IP tags associated with the public IP address."
                                    },
                                    "publicIPAddressVersion": {
                                      "type": "string",
                                      "description": "Specifies whether the IP configuration's public IP is IPv4 or IPv6. Default is IPv4.",
                                      "enum": [
                                        "IPv4",
                                        "IPv6"
                                      ],
                                      "default": "IPv4",
                                      "x-ms-enum": {
                                        "name": "publicIPAddressVersion",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "value": "IPv4"
                                          },
                                          {
                                            "value": "IPv6"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ],
                            "description": "Specifies the IP configurations of the network interface."
                          }
                        },
                        "description": "Specifies the settings for a network interface to attach to the node type."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "Specifies the settings for any additional secondary network interfaces to attach to the node type."
                    },
                    "computerNamePrefix": {
                      "type": "string",
                      "description": "Specifies the computer name prefix. Limited to 9 characters. If specified, allows for a longer name to be specified for the node type name."
                    }
                  }
                },
                "sku": {
                  "description": "The node type sku.",
                  "type": "object",
                  "required": [
                    "capacity"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The sku name. <br /><br />Name is internally generated and is used in auto-scale scenarios.<br /> Property does not allow to be changed to other values than generated.<br /> To avoid deployment errors please omit the property."
                    },
                    "tier": {
                      "type": "string",
                      "description": "Specifies the tier of the node type. <br /><br /> Possible Values:<br /> **Standard**"
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of nodes in the node type.<br /><br />If present in request it will override properties.vmInstanceCount.",
                      "minimum": 1,
                      "maximum": 2147483647
                    }
                  }
                }
              },
              "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The node type properties",
                  "type": "object",
                  "required": [
                    "isPrimary",
                    "vmInstanceCount"
                  ],
                  "properties": {
                    "isPrimary": {
                      "type": "boolean",
                      "description": "Indicates the Service Fabric system services for the cluster will run on this node type. This setting cannot be changed once the node type is created."
                    },
                    "vmInstanceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of nodes in the node type. <br /><br />**Values:** <br />-1 - Use when auto scale rules are configured or sku.capacity is defined <br /> 0 - Not supported <br /> >0 - Use for manual scale.",
                      "minimum": -1,
                      "maximum": 2147483647
                    },
                    "dataDiskSizeGB": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Disk size for the managed disk attached to the vms on the node type in GBs."
                    },
                    "dataDiskType": {
                      "description": "Managed data disk type. Specifies the storage account type for the managed disk",
                      "type": "string",
                      "enum": [
                        "Standard_LRS",
                        "StandardSSD_LRS",
                        "Premium_LRS"
                      ],
                      "default": "StandardSSD_LRS",
                      "x-ms-enum": {
                        "name": "DiskType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Standard_LRS",
                            "description": "Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access."
                          },
                          {
                            "value": "StandardSSD_LRS",
                            "description": "Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test."
                          },
                          {
                            "value": "Premium_LRS",
                            "description": "Premium SSD locally redundant storage. Best for production and performance sensitive workloads."
                          }
                        ]
                      }
                    },
                    "dataDiskLetter": {
                      "type": "string",
                      "pattern": "^[a-zA-Z]{1}$",
                      "description": "Managed data disk letter. It can not use the reserved letter C or D and it can not change after created."
                    },
                    "placementProperties": {
                      "type": "object",
                      "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
                      "additionalProperties": {
                        "type": "string",
                        "description": "Placement tag value"
                      }
                    },
                    "capacities": {
                      "type": "object",
                      "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
                      "additionalProperties": {
                        "type": "string",
                        "description": "Capacity tag value"
                      }
                    },
                    "applicationPorts": {
                      "description": "The range of ports from which cluster assigned port to Service Fabric applications.",
                      "type": "object",
                      "required": [
                        "endPort",
                        "startPort"
                      ],
                      "properties": {
                        "startPort": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Starting port of a range of ports"
                        },
                        "endPort": {
                          "type": "integer",
                          "format": "int32",
                          "description": "End port of a range of ports"
                        }
                      }
                    },
                    "ephemeralPorts": {
                      "description": "The range of ephemeral ports that nodes in this node type should be configured with.",
                      "type": "object",
                      "required": [
                        "endPort",
                        "startPort"
                      ],
                      "properties": {
                        "startPort": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Starting port of a range of ports"
                        },
                        "endPort": {
                          "type": "integer",
                          "format": "int32",
                          "description": "End port of a range of ports"
                        }
                      }
                    },
                    "vmSize": {
                      "type": "string",
                      "description": "The size of virtual machines in the pool. All virtual machines in a pool are the same size. For example, Standard_D3."
                    },
                    "vmImagePublisher": {
                      "type": "string",
                      "description": "The publisher of the Azure Virtual Machines Marketplace image. For example, Canonical or MicrosoftWindowsServer."
                    },
                    "vmImageOffer": {
                      "type": "string",
                      "description": "The offer type of the Azure Virtual Machines Marketplace image. For example, UbuntuServer or WindowsServer."
                    },
                    "vmImageSku": {
                      "type": "string",
                      "description": "The SKU of the Azure Virtual Machines Marketplace image. For example, 14.04.0-LTS or 2012-R2-Datacenter."
                    },
                    "vmImageVersion": {
                      "type": "string",
                      "description": "The version of the Azure Virtual Machines Marketplace image. A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'."
                    },
                    "vmSecrets": {
                      "type": "array",
                      "title": "virtual machine secretes.",
                      "description": "The secrets to install in the virtual machines.",
                      "items": {
                        "type": "object",
                        "required": [
                          "sourceVault",
                          "vaultCertificates"
                        ],
                        "properties": {
                          "sourceVault": {
                            "description": "The relative URL of the Key Vault containing all of the certificates in VaultCertificates.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Azure resource identifier."
                              }
                            },
                            "x-ms-azure-resource": true
                          },
                          "vaultCertificates": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "certificateUrl",
                                "certificateStore"
                              ],
                              "properties": {
                                "certificateUrl": {
                                  "type": "string",
                                  "description": "This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  \"data\":\"<Base64-encoded-certificate>\",<br>  \"dataType\":\"pfx\",<br>  \"password\":\"<pfx-file-password>\"<br>}"
                                },
                                "certificateStore": {
                                  "type": "string",
                                  "description": "For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name <UppercaseThumbprint>.crt for the X509 certificate file and <UppercaseThumbprint>.prv for private key. Both of these files are .pem formatted."
                                }
                              },
                              "description": "Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM."
                            },
                            "x-ms-identifiers": [],
                            "description": "The list of key vault references in SourceVault which contain certificates."
                          }
                        },
                        "description": "Specifies set of certificates that should be installed onto the virtual machines."
                      },
                      "x-ms-identifiers": [
                        "sourceVault"
                      ]
                    },
                    "vmExtensions": {
                      "type": "array",
                      "title": "virtual machine extensions.",
                      "description": "Set of extensions that should be installed onto the virtual machines.",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "properties"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extension."
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Describes the properties of a Virtual Machine Scale Set Extension.",
                            "type": "object",
                            "required": [
                              "publisher",
                              "type",
                              "typeHandlerVersion"
                            ],
                            "properties": {
                              "publisher": {
                                "type": "string",
                                "description": "The name of the extension handler publisher."
                              },
                              "type": {
                                "type": "string",
                                "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                              },
                              "typeHandlerVersion": {
                                "type": "string",
                                "description": "Specifies the version of the script handler."
                              },
                              "autoUpgradeMinorVersion": {
                                "type": "boolean",
                                "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
                              },
                              "settings": {
                                "type": "object",
                                "description": "Json formatted public settings for the extension."
                              },
                              "protectedSettings": {
                                "type": "object",
                                "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
                              },
                              "forceUpdateTag": {
                                "type": "string",
                                "description": "If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed."
                              },
                              "provisionAfterExtensions": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Collection of extension names after which this extension needs to be provisioned."
                              },
                              "provisioningState": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The provisioning state, which only appears in the response."
                              },
                              "enableAutomaticUpgrade": {
                                "type": "boolean",
                                "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available."
                              },
                              "setupOrder": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Vm extension setup order.\n",
                                  "enum": [
                                    "BeforeSFRuntime"
                                  ],
                                  "x-ms-enum": {
                                    "name": "VmssExtensionSetupOrder",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "BeforeSFRuntime",
                                        "description": "Indicates that the vm extension should run before the service fabric runtime starts."
                                      }
                                    ]
                                  }
                                },
                                "x-ms-identifiers": [],
                                "description": "Indicates the setup order for the extension."
                              }
                            }
                          }
                        },
                        "description": "Specifies set of extensions that should be installed onto the virtual machines."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "vmManagedIdentity": {
                      "description": "Identities to assign to the virtual machine scale set under the node type.",
                      "type": "object",
                      "properties": {
                        "userAssignedIdentities": {
                          "type": "array",
                          "description": "The list of user identities associated with the virtual machine scale set under the node type. Each entry will be an ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "isStateless": {
                      "type": "boolean",
                      "description": "Indicates if the node type can only host Stateless workloads.",
                      "default": false
                    },
                    "multiplePlacementGroups": {
                      "type": "boolean",
                      "description": "Indicates if scale set associated with the node type can be composed of multiple placement groups.",
                      "default": false
                    },
                    "frontendConfigurations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipAddressType": {
                            "description": "The IP address type of this frontend configuration. If omitted the default value is IPv4.",
                            "type": "string",
                            "enum": [
                              "IPv4",
                              "IPv6"
                            ],
                            "default": "IPv4",
                            "x-ms-enum": {
                              "name": "IPAddressType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "IPv4",
                                  "description": "IPv4 address type."
                                },
                                {
                                  "value": "IPv6",
                                  "description": "IPv6 address type."
                                }
                              ]
                            }
                          },
                          "loadBalancerBackendAddressPoolId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "The resource Id of the Load Balancer backend address pool that the VM instances of the node type are associated with. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/loadBalancers/<loadBalancerName>/backendAddressPools/<backendAddressPoolName>'."
                          },
                          "loadBalancerInboundNatPoolId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "The resource Id of the Load Balancer inbound NAT pool that the VM instances of the node type are associated with. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/loadBalancers/<loadBalancerName>/inboundNatPools/<inboundNatPoolName>'."
                          },
                          "applicationGatewayBackendAddressPoolId": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Network/applicationGateways/backendAddressPools"
                                }
                              ]
                            },
                            "description": "The resource Id of application gateway backend address pool. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/applicationGateways/<applicationGatewayName>/backendAddressPools/<backendAddressPoolName>'."
                          }
                        },
                        "description": "Describes the frontend configurations for the node type."
                      },
                      "x-ms-identifiers": [],
                      "description": "Indicates the node type uses its own frontend configurations instead of the default one for the cluster. This setting can only be specified for non-primary node types and can not be added or removed after the node type is created."
                    },
                    "networkSecurityRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "protocol",
                          "access",
                          "priority",
                          "direction"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Network security rule name."
                          },
                          "description": {
                            "type": "string",
                            "description": "Network security rule description."
                          },
                          "protocol": {
                            "type": "string",
                            "description": "Network protocol this rule applies to.",
                            "enum": [
                              "http",
                              "https",
                              "tcp",
                              "udp",
                              "icmp",
                              "ah",
                              "esp"
                            ],
                            "x-ms-enum": {
                              "name": "nsgProtocol",
                              "modelAsString": true
                            }
                          },
                          "sourceAddressPrefixes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The CIDR or source IP ranges."
                          },
                          "destinationAddressPrefixes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The destination address prefixes. CIDR or destination IP ranges."
                          },
                          "sourcePortRanges": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The source port ranges."
                          },
                          "destinationPortRanges": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The destination port ranges."
                          },
                          "sourceAddressPrefix": {
                            "type": "string",
                            "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from."
                          },
                          "destinationAddressPrefix": {
                            "type": "string",
                            "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."
                          },
                          "sourcePortRange": {
                            "type": "string",
                            "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                          },
                          "destinationPortRange": {
                            "type": "string",
                            "description": "he destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                          },
                          "access": {
                            "type": "string",
                            "description": "The network traffic is allowed or denied.",
                            "enum": [
                              "allow",
                              "deny"
                            ],
                            "x-ms-enum": {
                              "name": "access",
                              "modelAsString": true
                            }
                          },
                          "priority": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The priority of the rule. The value can be in the range 1000 to 3000. Values outside this range are reserved for Service Fabric ManagerCluster Resource Provider. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                            "minimum": 1000,
                            "maximum": 3000
                          },
                          "direction": {
                            "type": "string",
                            "description": "Network security rule direction.",
                            "enum": [
                              "inbound",
                              "outbound"
                            ],
                            "x-ms-enum": {
                              "name": "direction",
                              "modelAsString": true
                            }
                          }
                        },
                        "description": "Describes a network security rule."
                      },
                      "x-ms-identifiers": [],
                      "description": "The Network Security Rules for this node type. This setting can only be specified for node types that are configured with frontend configurations."
                    },
                    "additionalDataDisks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "lun",
                          "diskSizeGB",
                          "diskType",
                          "diskLetter"
                        ],
                        "properties": {
                          "lun": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "description": "Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM. Lun 0 is reserved for the service fabric data disk."
                          },
                          "diskSizeGB": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Disk size for each vm in the node type in GBs."
                          },
                          "diskType": {
                            "description": "Managed data disk type. Specifies the storage account type for the managed disk",
                            "type": "string",
                            "enum": [
                              "Standard_LRS",
                              "StandardSSD_LRS",
                              "Premium_LRS"
                            ],
                            "default": "StandardSSD_LRS",
                            "x-ms-enum": {
                              "name": "DiskType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Standard_LRS",
                                  "description": "Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access."
                                },
                                {
                                  "value": "StandardSSD_LRS",
                                  "description": "Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test."
                                },
                                {
                                  "value": "Premium_LRS",
                                  "description": "Premium SSD locally redundant storage. Best for production and performance sensitive workloads."
                                }
                              ]
                            }
                          },
                          "diskLetter": {
                            "type": "string",
                            "pattern": "^[a-zA-Z]{1}$",
                            "description": "Managed data disk letter. It can not use the reserved letter C or D and it can not change after created."
                          }
                        },
                        "description": "Managed data disk description."
                      },
                      "x-ms-identifiers": [
                        "lun"
                      ],
                      "description": "Additional managed data disks."
                    },
                    "enableEncryptionAtHost": {
                      "type": "boolean",
                      "description": "Enable or disable the Host Encryption for the virtual machines on the node type. This will enable the encryption for all the disks including Resource/Temp disk at host itself. Default: The Encryption at host will be disabled unless this property is set to true for the resource.",
                      "default": false
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioning state of the node type resource.",
                      "type": "string",
                      "enum": [
                        "None",
                        "Creating",
                        "Created",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting",
                        "Deleted",
                        "Other"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "enableAcceleratedNetworking": {
                      "type": "boolean",
                      "description": "Specifies whether the network interface is accelerated networking-enabled."
                    },
                    "useDefaultPublicLoadBalancer": {
                      "type": "boolean",
                      "description": "Specifies whether the use public load balancer. If not specified and the node type doesn't have its own frontend configuration, it will be attached to the default load balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is true, then the frontend has to be an Internal Load Balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is false or not set, then the custom load balancer must include a public load balancer to provide outbound connectivity."
                    },
                    "useTempDataDisk": {
                      "type": "boolean",
                      "description": "Specifies whether to use the temporary disk for the service fabric data root, in which case no managed data disk will be attached and the temporary disk will be used. It is only allowed for stateless node types."
                    },
                    "enableOverProvisioning": {
                      "type": "boolean",
                      "description": "Specifies whether the node type should be overprovisioned. It is only allowed for stateless node types."
                    },
                    "zones": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Specifies the availability zones where the node type would span across. If the cluster is not spanning across availability zones, initiates az migration for the cluster."
                    },
                    "isSpotVM": {
                      "type": "boolean",
                      "description": "Indicates whether the node type will be Spot Virtual Machines. Azure will allocate the VMs if there is capacity available and the VMs can be evicted at any time."
                    },
                    "hostGroupId": {
                      "type": "string",
                      "description": "Specifies the full host group resource Id. This property is used for deploying on azure dedicated hosts."
                    },
                    "useEphemeralOSDisk": {
                      "type": "boolean",
                      "description": "Indicates whether to use ephemeral os disk. The sku selected on the vmSize property needs to support this feature."
                    },
                    "spotRestoreTimeout": {
                      "type": "string",
                      "description": "Indicates the time duration after which the platform will not try to restore the VMSS SPOT instances specified as ISO 8601."
                    },
                    "evictionPolicy": {
                      "description": "Specifies the eviction policy for virtual machines in a SPOT node type. Default is Delete.",
                      "type": "string",
                      "enum": [
                        "Delete",
                        "Deallocate"
                      ],
                      "x-ms-enum": {
                        "name": "EvictionPolicyType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Delete",
                            "description": "Eviction policy will be Delete for SPOT vms."
                          },
                          {
                            "value": "Deallocate",
                            "description": "Eviction policy will be Deallocate for SPOT vms."
                          }
                        ]
                      }
                    },
                    "vmImageResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Compute/images"
                          },
                          {
                            "type": "Microsoft.Compute/galleries/images"
                          },
                          {
                            "type": "Microsoft.Compute/galleries/images/versions"
                          }
                        ]
                      },
                      "description": "Indicates the resource id of the vm image. This parameter is used for custom vm image."
                    },
                    "subnetId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/virtualNetworks/subnets"
                          }
                        ]
                      },
                      "description": "Indicates the resource id of the subnet for the node type."
                    },
                    "vmSetupActions": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "action to be performed on the vms before bootstrapping the service fabric runtime.",
                        "enum": [
                          "EnableContainers",
                          "EnableHyperV"
                        ],
                        "x-ms-enum": {
                          "name": "VmSetupAction",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "EnableContainers",
                              "description": "Enable windows containers feature."
                            },
                            {
                              "value": "EnableHyperV",
                              "description": "Enables windows HyperV feature."
                            }
                          ]
                        }
                      },
                      "description": "Specifies the actions to be performed on the vms before bootstrapping the service fabric runtime."
                    },
                    "securityType": {
                      "type": "string",
                      "description": "Specifies the security type of the nodeType. Only Standard and TrustedLaunch are currently supported",
                      "enum": [
                        "TrustedLaunch",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "securityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "TrustedLaunch",
                            "description": "Trusted Launch is a security type that secures generation 2 virtual machines."
                          },
                          {
                            "value": "Standard",
                            "description": "Standard is the default security type for all machines."
                          }
                        ]
                      }
                    },
                    "secureBootEnabled": {
                      "type": "boolean",
                      "description": "Specifies whether secure boot should be enabled on the nodeType. Can only be used with TrustedLaunch SecurityType"
                    },
                    "enableNodePublicIP": {
                      "type": "boolean",
                      "description": "Specifies whether each node is allocated its own public IPv4 address. This is only supported on secondary node types with custom Load Balancers."
                    },
                    "enableNodePublicIPv6": {
                      "type": "boolean",
                      "description": "Specifies whether each node is allocated its own public IPv6 address. This is only supported on secondary node types with custom Load Balancers."
                    },
                    "vmSharedGalleryImageId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Compute/sharedGalleries/images"
                          },
                          {
                            "type": "Microsoft.Compute/sharedGalleries/images/versions"
                          }
                        ]
                      },
                      "description": "Indicates the resource id of the vm shared galleries image. This parameter is used for custom vm image."
                    },
                    "natGatewayId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/natGateways"
                          }
                        ]
                      },
                      "description": "Specifies the resource id of a NAT Gateway to attach to the subnet of this node type. Node type must use custom load balancer."
                    },
                    "natConfigurations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "backendPort": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 65535,
                            "description": "The internal port for the NAT configuration."
                          },
                          "frontendPortRangeStart": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 65534,
                            "description": "The port range start for the external endpoint."
                          },
                          "frontendPortRangeEnd": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 65534,
                            "description": "The port range end for the external endpoint."
                          }
                        },
                        "description": "Provides information about NAT configuration on the default public Load Balancer for the node type."
                      },
                      "x-ms-identifiers": [],
                      "description": "Specifies the NAT configuration on default public Load Balancer for the node type. This is only supported for node types use the default public Load Balancer."
                    },
                    "vmImagePlan": {
                      "description": "Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started ->. Enter any required information and then click Save.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The plan ID."
                        },
                        "product": {
                          "type": "string",
                          "description": "Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element."
                        },
                        "promotionCode": {
                          "type": "string",
                          "description": "The promotion code."
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The publisher ID."
                        }
                      }
                    },
                    "serviceArtifactReferenceId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Compute/galleries/serviceArtifacts/vmArtifactsProfiles"
                          }
                        ]
                      },
                      "description": "Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using 'latest' image version."
                    },
                    "dscpConfigurationId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/dscpConfigurations"
                          }
                        ]
                      },
                      "description": "Specifies the resource id of the DSCP configuration to apply to the node type network interface."
                    },
                    "additionalNetworkInterfaceConfigurations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "ipConfigurations"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the network interface."
                          },
                          "enableAcceleratedNetworking": {
                            "type": "boolean",
                            "description": "Specifies whether the network interface is accelerated networking-enabled."
                          },
                          "dscpConfiguration": {
                            "description": "Specifies the DSCP configuration to apply to the network interface.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Azure resource identifier."
                              }
                            },
                            "x-ms-azure-resource": true
                          },
                          "ipConfigurations": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "description": "Specifies an IP configuration of the network interface.",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the network interface."
                                },
                                "applicationGatewayBackendAddressPools": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "Azure resource identifier."
                                      }
                                    },
                                    "description": "Azure resource identifier.",
                                    "x-ms-azure-resource": true
                                  },
                                  "description": "Specifies an array of references to backend address pools of application gateways. A node type can reference backend address pools of multiple application gateways. Multiple node types cannot use the same application gateway."
                                },
                                "loadBalancerBackendAddressPools": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "Azure resource identifier."
                                      }
                                    },
                                    "description": "Azure resource identifier.",
                                    "x-ms-azure-resource": true
                                  },
                                  "description": "Specifies an array of references to backend address pools of load balancers. A node type can reference backend address pools of one public and one internal load balancer. Multiple node types cannot use the same basic sku load balancer.\t"
                                },
                                "loadBalancerInboundNatPools": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "Azure resource identifier."
                                      }
                                    },
                                    "description": "Azure resource identifier.",
                                    "x-ms-azure-resource": true
                                  },
                                  "description": "Specifies an array of references to inbound Nat pools of the load balancers. A node type can reference inbound nat pools of one public and one internal load balancer. Multiple node types cannot use the same basic sku load balancer."
                                },
                                "subnet": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Azure resource identifier."
                                    }
                                  },
                                  "description": "Azure resource identifier.",
                                  "x-ms-azure-resource": true
                                },
                                "privateIPAddressVersion": {
                                  "type": "string",
                                  "description": "Specifies whether the IP configuration's private IP is IPv4 or IPv6. Default is IPv4.",
                                  "enum": [
                                    "IPv4",
                                    "IPv6"
                                  ],
                                  "default": "IPv4",
                                  "x-ms-enum": {
                                    "name": "privateIPAddressVersion",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "IPv4"
                                      },
                                      {
                                        "value": "IPv6"
                                      }
                                    ]
                                  }
                                },
                                "publicIPAddressConfiguration": {
                                  "type": "object",
                                  "required": [
                                    "name"
                                  ],
                                  "description": "The public IP address configuration of the network interface.",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the network interface."
                                    },
                                    "ipTags": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "ipTagType",
                                          "tag"
                                        ],
                                        "properties": {
                                          "ipTagType": {
                                            "type": "string",
                                            "description": "IP tag type. Example: FirstPartyUsage."
                                          },
                                          "tag": {
                                            "type": "string",
                                            "description": "IP tag associated with the public IP. Example: SQL, Storage etc."
                                          }
                                        },
                                        "description": "The IP tag associated with the public IP address."
                                      },
                                      "x-ms-identifiers": [],
                                      "description": "Specifies the list of IP tags associated with the public IP address."
                                    },
                                    "publicIPAddressVersion": {
                                      "type": "string",
                                      "description": "Specifies whether the IP configuration's public IP is IPv4 or IPv6. Default is IPv4.",
                                      "enum": [
                                        "IPv4",
                                        "IPv6"
                                      ],
                                      "default": "IPv4",
                                      "x-ms-enum": {
                                        "name": "publicIPAddressVersion",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "value": "IPv4"
                                          },
                                          {
                                            "value": "IPv6"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ],
                            "description": "Specifies the IP configurations of the network interface."
                          }
                        },
                        "description": "Specifies the settings for a network interface to attach to the node type."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "Specifies the settings for any additional secondary network interfaces to attach to the node type."
                    },
                    "computerNamePrefix": {
                      "type": "string",
                      "description": "Specifies the computer name prefix. Limited to 9 characters. If specified, allows for a longer name to be specified for the node type name."
                    }
                  }
                },
                "sku": {
                  "description": "The node type sku.",
                  "type": "object",
                  "required": [
                    "capacity"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The sku name. <br /><br />Name is internally generated and is used in auto-scale scenarios.<br /> Property does not allow to be changed to other values than generated.<br /> To avoid deployment errors please omit the property."
                    },
                    "tier": {
                      "type": "string",
                      "description": "Specifies the tier of the node type. <br /><br /> Possible Values:<br /> **Standard**"
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of nodes in the node type.<br /><br />If present in request it will override properties.vmInstanceCount.",
                      "minimum": 1,
                      "maximum": 2147483647
                    }
                  }
                }
              },
              "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
            }
          },
          "202": {
            "description": "The request was accepted and the operation will complete asynchronously.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The node type properties",
                  "type": "object",
                  "required": [
                    "isPrimary",
                    "vmInstanceCount"
                  ],
                  "properties": {
                    "isPrimary": {
                      "type": "boolean",
                      "description": "Indicates the Service Fabric system services for the cluster will run on this node type. This setting cannot be changed once the node type is created."
                    },
                    "vmInstanceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of nodes in the node type. <br /><br />**Values:** <br />-1 - Use when auto scale rules are configured or sku.capacity is defined <br /> 0 - Not supported <br /> >0 - Use for manual scale.",
                      "minimum": -1,
                      "maximum": 2147483647
                    },
                    "dataDiskSizeGB": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Disk size for the managed disk attached to the vms on the node type in GBs."
                    },
                    "dataDiskType": {
                      "description": "Managed data disk type. Specifies the storage account type for the managed disk",
                      "type": "string",
                      "enum": [
                        "Standard_LRS",
                        "StandardSSD_LRS",
                        "Premium_LRS"
                      ],
                      "default": "StandardSSD_LRS",
                      "x-ms-enum": {
                        "name": "DiskType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Standard_LRS",
                            "description": "Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access."
                          },
                          {
                            "value": "StandardSSD_LRS",
                            "description": "Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test."
                          },
                          {
                            "value": "Premium_LRS",
                            "description": "Premium SSD locally redundant storage. Best for production and performance sensitive workloads."
                          }
                        ]
                      }
                    },
                    "dataDiskLetter": {
                      "type": "string",
                      "pattern": "^[a-zA-Z]{1}$",
                      "description": "Managed data disk letter. It can not use the reserved letter C or D and it can not change after created."
                    },
                    "placementProperties": {
                      "type": "object",
                      "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
                      "additionalProperties": {
                        "type": "string",
                        "description": "Placement tag value"
                      }
                    },
                    "capacities": {
                      "type": "object",
                      "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
                      "additionalProperties": {
                        "type": "string",
                        "description": "Capacity tag value"
                      }
                    },
                    "applicationPorts": {
                      "description": "The range of ports from which cluster assigned port to Service Fabric applications.",
                      "type": "object",
                      "required": [
                        "endPort",
                        "startPort"
                      ],
                      "properties": {
                        "startPort": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Starting port of a range of ports"
                        },
                        "endPort": {
                          "type": "integer",
                          "format": "int32",
                          "description": "End port of a range of ports"
                        }
                      }
                    },
                    "ephemeralPorts": {
                      "description": "The range of ephemeral ports that nodes in this node type should be configured with.",
                      "type": "object",
                      "required": [
                        "endPort",
                        "startPort"
                      ],
                      "properties": {
                        "startPort": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Starting port of a range of ports"
                        },
                        "endPort": {
                          "type": "integer",
                          "format": "int32",
                          "description": "End port of a range of ports"
                        }
                      }
                    },
                    "vmSize": {
                      "type": "string",
                      "description": "The size of virtual machines in the pool. All virtual machines in a pool are the same size. For example, Standard_D3."
                    },
                    "vmImagePublisher": {
                      "type": "string",
                      "description": "The publisher of the Azure Virtual Machines Marketplace image. For example, Canonical or MicrosoftWindowsServer."
                    },
                    "vmImageOffer": {
                      "type": "string",
                      "description": "The offer type of the Azure Virtual Machines Marketplace image. For example, UbuntuServer or WindowsServer."
                    },
                    "vmImageSku": {
                      "type": "string",
                      "description": "The SKU of the Azure Virtual Machines Marketplace image. For example, 14.04.0-LTS or 2012-R2-Datacenter."
                    },
                    "vmImageVersion": {
                      "type": "string",
                      "description": "The version of the Azure Virtual Machines Marketplace image. A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'."
                    },
                    "vmSecrets": {
                      "type": "array",
                      "title": "virtual machine secretes.",
                      "description": "The secrets to install in the virtual machines.",
                      "items": {
                        "type": "object",
                        "required": [
                          "sourceVault",
                          "vaultCertificates"
                        ],
                        "properties": {
                          "sourceVault": {
                            "description": "The relative URL of the Key Vault containing all of the certificates in VaultCertificates.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Azure resource identifier."
                              }
                            },
                            "x-ms-azure-resource": true
                          },
                          "vaultCertificates": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "certificateUrl",
                                "certificateStore"
                              ],
                              "properties": {
                                "certificateUrl": {
                                  "type": "string",
                                  "description": "This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  \"data\":\"<Base64-encoded-certificate>\",<br>  \"dataType\":\"pfx\",<br>  \"password\":\"<pfx-file-password>\"<br>}"
                                },
                                "certificateStore": {
                                  "type": "string",
                                  "description": "For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name <UppercaseThumbprint>.crt for the X509 certificate file and <UppercaseThumbprint>.prv for private key. Both of these files are .pem formatted."
                                }
                              },
                              "description": "Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM."
                            },
                            "x-ms-identifiers": [],
                            "description": "The list of key vault references in SourceVault which contain certificates."
                          }
                        },
                        "description": "Specifies set of certificates that should be installed onto the virtual machines."
                      },
                      "x-ms-identifiers": [
                        "sourceVault"
                      ]
                    },
                    "vmExtensions": {
                      "type": "array",
                      "title": "virtual machine extensions.",
                      "description": "Set of extensions that should be installed onto the virtual machines.",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "properties"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extension."
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Describes the properties of a Virtual Machine Scale Set Extension.",
                            "type": "object",
                            "required": [
                              "publisher",
                              "type",
                              "typeHandlerVersion"
                            ],
                            "properties": {
                              "publisher": {
                                "type": "string",
                                "description": "The name of the extension handler publisher."
                              },
                              "type": {
                                "type": "string",
                                "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                              },
                              "typeHandlerVersion": {
                                "type": "string",
                                "description": "Specifies the version of the script handler."
                              },
                              "autoUpgradeMinorVersion": {
                                "type": "boolean",
                                "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
                              },
                              "settings": {
                                "type": "object",
                                "description": "Json formatted public settings for the extension."
                              },
                              "protectedSettings": {
                                "type": "object",
                                "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
                              },
                              "forceUpdateTag": {
                                "type": "string",
                                "description": "If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed."
                              },
                              "provisionAfterExtensions": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Collection of extension names after which this extension needs to be provisioned."
                              },
                              "provisioningState": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The provisioning state, which only appears in the response."
                              },
                              "enableAutomaticUpgrade": {
                                "type": "boolean",
                                "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available."
                              },
                              "setupOrder": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Vm extension setup order.\n",
                                  "enum": [
                                    "BeforeSFRuntime"
                                  ],
                                  "x-ms-enum": {
                                    "name": "VmssExtensionSetupOrder",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "BeforeSFRuntime",
                                        "description": "Indicates that the vm extension should run before the service fabric runtime starts."
                                      }
                                    ]
                                  }
                                },
                                "x-ms-identifiers": [],
                                "description": "Indicates the setup order for the extension."
                              }
                            }
                          }
                        },
                        "description": "Specifies set of extensions that should be installed onto the virtual machines."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "vmManagedIdentity": {
                      "description": "Identities to assign to the virtual machine scale set under the node type.",
                      "type": "object",
                      "properties": {
                        "userAssignedIdentities": {
                          "type": "array",
                          "description": "The list of user identities associated with the virtual machine scale set under the node type. Each entry will be an ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "isStateless": {
                      "type": "boolean",
                      "description": "Indicates if the node type can only host Stateless workloads.",
                      "default": false
                    },
                    "multiplePlacementGroups": {
                      "type": "boolean",
                      "description": "Indicates if scale set associated with the node type can be composed of multiple placement groups.",
                      "default": false
                    },
                    "frontendConfigurations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipAddressType": {
                            "description": "The IP address type of this frontend configuration. If omitted the default value is IPv4.",
                            "type": "string",
                            "enum": [
                              "IPv4",
                              "IPv6"
                            ],
                            "default": "IPv4",
                            "x-ms-enum": {
                              "name": "IPAddressType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "IPv4",
                                  "description": "IPv4 address type."
                                },
                                {
                                  "value": "IPv6",
                                  "description": "IPv6 address type."
                                }
                              ]
                            }
                          },
                          "loadBalancerBackendAddressPoolId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "The resource Id of the Load Balancer backend address pool that the VM instances of the node type are associated with. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/loadBalancers/<loadBalancerName>/backendAddressPools/<backendAddressPoolName>'."
                          },
                          "loadBalancerInboundNatPoolId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "The resource Id of the Load Balancer inbound NAT pool that the VM instances of the node type are associated with. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/loadBalancers/<loadBalancerName>/inboundNatPools/<inboundNatPoolName>'."
                          },
                          "applicationGatewayBackendAddressPoolId": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Network/applicationGateways/backendAddressPools"
                                }
                              ]
                            },
                            "description": "The resource Id of application gateway backend address pool. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/applicationGateways/<applicationGatewayName>/backendAddressPools/<backendAddressPoolName>'."
                          }
                        },
                        "description": "Describes the frontend configurations for the node type."
                      },
                      "x-ms-identifiers": [],
                      "description": "Indicates the node type uses its own frontend configurations instead of the default one for the cluster. This setting can only be specified for non-primary node types and can not be added or removed after the node type is created."
                    },
                    "networkSecurityRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "protocol",
                          "access",
                          "priority",
                          "direction"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Network security rule name."
                          },
                          "description": {
                            "type": "string",
                            "description": "Network security rule description."
                          },
                          "protocol": {
                            "type": "string",
                            "description": "Network protocol this rule applies to.",
                            "enum": [
                              "http",
                              "https",
                              "tcp",
                              "udp",
                              "icmp",
                              "ah",
                              "esp"
                            ],
                            "x-ms-enum": {
                              "name": "nsgProtocol",
                              "modelAsString": true
                            }
                          },
                          "sourceAddressPrefixes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The CIDR or source IP ranges."
                          },
                          "destinationAddressPrefixes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The destination address prefixes. CIDR or destination IP ranges."
                          },
                          "sourcePortRanges": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The source port ranges."
                          },
                          "destinationPortRanges": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The destination port ranges."
                          },
                          "sourceAddressPrefix": {
                            "type": "string",
                            "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from."
                          },
                          "destinationAddressPrefix": {
                            "type": "string",
                            "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."
                          },
                          "sourcePortRange": {
                            "type": "string",
                            "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                          },
                          "destinationPortRange": {
                            "type": "string",
                            "description": "he destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                          },
                          "access": {
                            "type": "string",
                            "description": "The network traffic is allowed or denied.",
                            "enum": [
                              "allow",
                              "deny"
                            ],
                            "x-ms-enum": {
                              "name": "access",
                              "modelAsString": true
                            }
                          },
                          "priority": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The priority of the rule. The value can be in the range 1000 to 3000. Values outside this range are reserved for Service Fabric ManagerCluster Resource Provider. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                            "minimum": 1000,
                            "maximum": 3000
                          },
                          "direction": {
                            "type": "string",
                            "description": "Network security rule direction.",
                            "enum": [
                              "inbound",
                              "outbound"
                            ],
                            "x-ms-enum": {
                              "name": "direction",
                              "modelAsString": true
                            }
                          }
                        },
                        "description": "Describes a network security rule."
                      },
                      "x-ms-identifiers": [],
                      "description": "The Network Security Rules for this node type. This setting can only be specified for node types that are configured with frontend configurations."
                    },
                    "additionalDataDisks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "lun",
                          "diskSizeGB",
                          "diskType",
                          "diskLetter"
                        ],
                        "properties": {
                          "lun": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "description": "Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM. Lun 0 is reserved for the service fabric data disk."
                          },
                          "diskSizeGB": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Disk size for each vm in the node type in GBs."
                          },
                          "diskType": {
                            "description": "Managed data disk type. Specifies the storage account type for the managed disk",
                            "type": "string",
                            "enum": [
                              "Standard_LRS",
                              "StandardSSD_LRS",
                              "Premium_LRS"
                            ],
                            "default": "StandardSSD_LRS",
                            "x-ms-enum": {
                              "name": "DiskType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Standard_LRS",
                                  "description": "Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access."
                                },
                                {
                                  "value": "StandardSSD_LRS",
                                  "description": "Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test."
                                },
                                {
                                  "value": "Premium_LRS",
                                  "description": "Premium SSD locally redundant storage. Best for production and performance sensitive workloads."
                                }
                              ]
                            }
                          },
                          "diskLetter": {
                            "type": "string",
                            "pattern": "^[a-zA-Z]{1}$",
                            "description": "Managed data disk letter. It can not use the reserved letter C or D and it can not change after created."
                          }
                        },
                        "description": "Managed data disk description."
                      },
                      "x-ms-identifiers": [
                        "lun"
                      ],
                      "description": "Additional managed data disks."
                    },
                    "enableEncryptionAtHost": {
                      "type": "boolean",
                      "description": "Enable or disable the Host Encryption for the virtual machines on the node type. This will enable the encryption for all the disks including Resource/Temp disk at host itself. Default: The Encryption at host will be disabled unless this property is set to true for the resource.",
                      "default": false
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioning state of the node type resource.",
                      "type": "string",
                      "enum": [
                        "None",
                        "Creating",
                        "Created",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting",
                        "Deleted",
                        "Other"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "enableAcceleratedNetworking": {
                      "type": "boolean",
                      "description": "Specifies whether the network interface is accelerated networking-enabled."
                    },
                    "useDefaultPublicLoadBalancer": {
                      "type": "boolean",
                      "description": "Specifies whether the use public load balancer. If not specified and the node type doesn't have its own frontend configuration, it will be attached to the default load balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is true, then the frontend has to be an Internal Load Balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is false or not set, then the custom load balancer must include a public load balancer to provide outbound connectivity."
                    },
                    "useTempDataDisk": {
                      "type": "boolean",
                      "description": "Specifies whether to use the temporary disk for the service fabric data root, in which case no managed data disk will be attached and the temporary disk will be used. It is only allowed for stateless node types."
                    },
                    "enableOverProvisioning": {
                      "type": "boolean",
                      "description": "Specifies whether the node type should be overprovisioned. It is only allowed for stateless node types."
                    },
                    "zones": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Specifies the availability zones where the node type would span across. If the cluster is not spanning across availability zones, initiates az migration for the cluster."
                    },
                    "isSpotVM": {
                      "type": "boolean",
                      "description": "Indicates whether the node type will be Spot Virtual Machines. Azure will allocate the VMs if there is capacity available and the VMs can be evicted at any time."
                    },
                    "hostGroupId": {
                      "type": "string",
                      "description": "Specifies the full host group resource Id. This property is used for deploying on azure dedicated hosts."
                    },
                    "useEphemeralOSDisk": {
                      "type": "boolean",
                      "description": "Indicates whether to use ephemeral os disk. The sku selected on the vmSize property needs to support this feature."
                    },
                    "spotRestoreTimeout": {
                      "type": "string",
                      "description": "Indicates the time duration after which the platform will not try to restore the VMSS SPOT instances specified as ISO 8601."
                    },
                    "evictionPolicy": {
                      "description": "Specifies the eviction policy for virtual machines in a SPOT node type. Default is Delete.",
                      "type": "string",
                      "enum": [
                        "Delete",
                        "Deallocate"
                      ],
                      "x-ms-enum": {
                        "name": "EvictionPolicyType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Delete",
                            "description": "Eviction policy will be Delete for SPOT vms."
                          },
                          {
                            "value": "Deallocate",
                            "description": "Eviction policy will be Deallocate for SPOT vms."
                          }
                        ]
                      }
                    },
                    "vmImageResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Compute/images"
                          },
                          {
                            "type": "Microsoft.Compute/galleries/images"
                          },
                          {
                            "type": "Microsoft.Compute/galleries/images/versions"
                          }
                        ]
                      },
                      "description": "Indicates the resource id of the vm image. This parameter is used for custom vm image."
                    },
                    "subnetId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/virtualNetworks/subnets"
                          }
                        ]
                      },
                      "description": "Indicates the resource id of the subnet for the node type."
                    },
                    "vmSetupActions": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "action to be performed on the vms before bootstrapping the service fabric runtime.",
                        "enum": [
                          "EnableContainers",
                          "EnableHyperV"
                        ],
                        "x-ms-enum": {
                          "name": "VmSetupAction",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "EnableContainers",
                              "description": "Enable windows containers feature."
                            },
                            {
                              "value": "EnableHyperV",
                              "description": "Enables windows HyperV feature."
                            }
                          ]
                        }
                      },
                      "description": "Specifies the actions to be performed on the vms before bootstrapping the service fabric runtime."
                    },
                    "securityType": {
                      "type": "string",
                      "description": "Specifies the security type of the nodeType. Only Standard and TrustedLaunch are currently supported",
                      "enum": [
                        "TrustedLaunch",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "securityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "TrustedLaunch",
                            "description": "Trusted Launch is a security type that secures generation 2 virtual machines."
                          },
                          {
                            "value": "Standard",
                            "description": "Standard is the default security type for all machines."
                          }
                        ]
                      }
                    },
                    "secureBootEnabled": {
                      "type": "boolean",
                      "description": "Specifies whether secure boot should be enabled on the nodeType. Can only be used with TrustedLaunch SecurityType"
                    },
                    "enableNodePublicIP": {
                      "type": "boolean",
                      "description": "Specifies whether each node is allocated its own public IPv4 address. This is only supported on secondary node types with custom Load Balancers."
                    },
                    "enableNodePublicIPv6": {
                      "type": "boolean",
                      "description": "Specifies whether each node is allocated its own public IPv6 address. This is only supported on secondary node types with custom Load Balancers."
                    },
                    "vmSharedGalleryImageId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Compute/sharedGalleries/images"
                          },
                          {
                            "type": "Microsoft.Compute/sharedGalleries/images/versions"
                          }
                        ]
                      },
                      "description": "Indicates the resource id of the vm shared galleries image. This parameter is used for custom vm image."
                    },
                    "natGatewayId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/natGateways"
                          }
                        ]
                      },
                      "description": "Specifies the resource id of a NAT Gateway to attach to the subnet of this node type. Node type must use custom load balancer."
                    },
                    "natConfigurations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "backendPort": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 65535,
                            "description": "The internal port for the NAT configuration."
                          },
                          "frontendPortRangeStart": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 65534,
                            "description": "The port range start for the external endpoint."
                          },
                          "frontendPortRangeEnd": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 65534,
                            "description": "The port range end for the external endpoint."
                          }
                        },
                        "description": "Provides information about NAT configuration on the default public Load Balancer for the node type."
                      },
                      "x-ms-identifiers": [],
                      "description": "Specifies the NAT configuration on default public Load Balancer for the node type. This is only supported for node types use the default public Load Balancer."
                    },
                    "vmImagePlan": {
                      "description": "Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started ->. Enter any required information and then click Save.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The plan ID."
                        },
                        "product": {
                          "type": "string",
                          "description": "Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element."
                        },
                        "promotionCode": {
                          "type": "string",
                          "description": "The promotion code."
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The publisher ID."
                        }
                      }
                    },
                    "serviceArtifactReferenceId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Compute/galleries/serviceArtifacts/vmArtifactsProfiles"
                          }
                        ]
                      },
                      "description": "Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using 'latest' image version."
                    },
                    "dscpConfigurationId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/dscpConfigurations"
                          }
                        ]
                      },
                      "description": "Specifies the resource id of the DSCP configuration to apply to the node type network interface."
                    },
                    "additionalNetworkInterfaceConfigurations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "ipConfigurations"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the network interface."
                          },
                          "enableAcceleratedNetworking": {
                            "type": "boolean",
                            "description": "Specifies whether the network interface is accelerated networking-enabled."
                          },
                          "dscpConfiguration": {
                            "description": "Specifies the DSCP configuration to apply to the network interface.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Azure resource identifier."
                              }
                            },
                            "x-ms-azure-resource": true
                          },
                          "ipConfigurations": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "description": "Specifies an IP configuration of the network interface.",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the network interface."
                                },
                                "applicationGatewayBackendAddressPools": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "Azure resource identifier."
                                      }
                                    },
                                    "description": "Azure resource identifier.",
                                    "x-ms-azure-resource": true
                                  },
                                  "description": "Specifies an array of references to backend address pools of application gateways. A node type can reference backend address pools of multiple application gateways. Multiple node types cannot use the same application gateway."
                                },
                                "loadBalancerBackendAddressPools": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "Azure resource identifier."
                                      }
                                    },
                                    "description": "Azure resource identifier.",
                                    "x-ms-azure-resource": true
                                  },
                                  "description": "Specifies an array of references to backend address pools of load balancers. A node type can reference backend address pools of one public and one internal load balancer. Multiple node types cannot use the same basic sku load balancer.\t"
                                },
                                "loadBalancerInboundNatPools": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "Azure resource identifier."
                                      }
                                    },
                                    "description": "Azure resource identifier.",
                                    "x-ms-azure-resource": true
                                  },
                                  "description": "Specifies an array of references to inbound Nat pools of the load balancers. A node type can reference inbound nat pools of one public and one internal load balancer. Multiple node types cannot use the same basic sku load balancer."
                                },
                                "subnet": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Azure resource identifier."
                                    }
                                  },
                                  "description": "Azure resource identifier.",
                                  "x-ms-azure-resource": true
                                },
                                "privateIPAddressVersion": {
                                  "type": "string",
                                  "description": "Specifies whether the IP configuration's private IP is IPv4 or IPv6. Default is IPv4.",
                                  "enum": [
                                    "IPv4",
                                    "IPv6"
                                  ],
                                  "default": "IPv4",
                                  "x-ms-enum": {
                                    "name": "privateIPAddressVersion",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "IPv4"
                                      },
                                      {
                                        "value": "IPv6"
                                      }
                                    ]
                                  }
                                },
                                "publicIPAddressConfiguration": {
                                  "type": "object",
                                  "required": [
                                    "name"
                                  ],
                                  "description": "The public IP address configuration of the network interface.",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the network interface."
                                    },
                                    "ipTags": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "ipTagType",
                                          "tag"
                                        ],
                                        "properties": {
                                          "ipTagType": {
                                            "type": "string",
                                            "description": "IP tag type. Example: FirstPartyUsage."
                                          },
                                          "tag": {
                                            "type": "string",
                                            "description": "IP tag associated with the public IP. Example: SQL, Storage etc."
                                          }
                                        },
                                        "description": "The IP tag associated with the public IP address."
                                      },
                                      "x-ms-identifiers": [],
                                      "description": "Specifies the list of IP tags associated with the public IP address."
                                    },
                                    "publicIPAddressVersion": {
                                      "type": "string",
                                      "description": "Specifies whether the IP configuration's public IP is IPv4 or IPv6. Default is IPv4.",
                                      "enum": [
                                        "IPv4",
                                        "IPv6"
                                      ],
                                      "default": "IPv4",
                                      "x-ms-enum": {
                                        "name": "publicIPAddressVersion",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "value": "IPv4"
                                          },
                                          {
                                            "value": "IPv6"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ],
                            "description": "Specifies the IP configurations of the network interface."
                          }
                        },
                        "description": "Specifies the settings for a network interface to attach to the node type."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "Specifies the settings for any additional secondary network interfaces to attach to the node type."
                    },
                    "computerNamePrefix": {
                      "type": "string",
                      "description": "Specifies the computer name prefix. Limited to 9 characters. If specified, allows for a longer name to be specified for the node type name."
                    }
                  }
                },
                "sku": {
                  "description": "The node type sku.",
                  "type": "object",
                  "required": [
                    "capacity"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The sku name. <br /><br />Name is internally generated and is used in auto-scale scenarios.<br /> Property does not allow to be changed to other values than generated.<br /> To avoid deployment errors please omit the property."
                    },
                    "tier": {
                      "type": "string",
                      "description": "Specifies the tier of the node type. <br /><br /> Possible Values:<br /> **Standard**"
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of nodes in the node type.<br /><br />If present in request it will override properties.vmInstanceCount.",
                      "minimum": 1,
                      "maximum": 2147483647
                    }
                  }
                }
              },
              "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
            },
            "headers": {
              "Azure-AsyncOperation": {
                "description": "The URL to get the status of an ongoing long-running operation.",
                "type": "string"
              },
              "Location": {
                "description": "The URL to get the status of a completed long-running operation.",
                "type": "string"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "NodeType"
        ],
        "operationId": "NodeTypes_Update",
        "summary": "Update the tags of a node type resource of a given managed cluster.",
        "description": "Update the configuration of a node type of a given managed cluster, only updating tags.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The parameters to update the node type configuration.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "Node type update parameters",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "sku": {
                  "description": "The node type sku.",
                  "type": "object",
                  "required": [
                    "capacity"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The sku name. <br /><br />Name is internally generated and is used in auto-scale scenarios.<br /> Property does not allow to be changed to other values than generated.<br /> To avoid deployment errors please omit the property."
                    },
                    "tier": {
                      "type": "string",
                      "description": "Specifies the tier of the node type. <br /><br /> Possible Values:<br /> **Standard**"
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of nodes in the node type.<br /><br />If present in request it will override properties.vmInstanceCount.",
                      "minimum": 1,
                      "maximum": 2147483647
                    }
                  }
                }
              },
              "description": "Node type update request"
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource identifier.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "Azure resource name.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Azure resource type.",
                  "readOnly": true
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Azure resource tags.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)."
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The node type properties",
                  "type": "object",
                  "required": [
                    "isPrimary",
                    "vmInstanceCount"
                  ],
                  "properties": {
                    "isPrimary": {
                      "type": "boolean",
                      "description": "Indicates the Service Fabric system services for the cluster will run on this node type. This setting cannot be changed once the node type is created."
                    },
                    "vmInstanceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of nodes in the node type. <br /><br />**Values:** <br />-1 - Use when auto scale rules are configured or sku.capacity is defined <br /> 0 - Not supported <br /> >0 - Use for manual scale.",
                      "minimum": -1,
                      "maximum": 2147483647
                    },
                    "dataDiskSizeGB": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Disk size for the managed disk attached to the vms on the node type in GBs."
                    },
                    "dataDiskType": {
                      "description": "Managed data disk type. Specifies the storage account type for the managed disk",
                      "type": "string",
                      "enum": [
                        "Standard_LRS",
                        "StandardSSD_LRS",
                        "Premium_LRS"
                      ],
                      "default": "StandardSSD_LRS",
                      "x-ms-enum": {
                        "name": "DiskType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Standard_LRS",
                            "description": "Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access."
                          },
                          {
                            "value": "StandardSSD_LRS",
                            "description": "Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test."
                          },
                          {
                            "value": "Premium_LRS",
                            "description": "Premium SSD locally redundant storage. Best for production and performance sensitive workloads."
                          }
                        ]
                      }
                    },
                    "dataDiskLetter": {
                      "type": "string",
                      "pattern": "^[a-zA-Z]{1}$",
                      "description": "Managed data disk letter. It can not use the reserved letter C or D and it can not change after created."
                    },
                    "placementProperties": {
                      "type": "object",
                      "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
                      "additionalProperties": {
                        "type": "string",
                        "description": "Placement tag value"
                      }
                    },
                    "capacities": {
                      "type": "object",
                      "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
                      "additionalProperties": {
                        "type": "string",
                        "description": "Capacity tag value"
                      }
                    },
                    "applicationPorts": {
                      "description": "The range of ports from which cluster assigned port to Service Fabric applications.",
                      "type": "object",
                      "required": [
                        "endPort",
                        "startPort"
                      ],
                      "properties": {
                        "startPort": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Starting port of a range of ports"
                        },
                        "endPort": {
                          "type": "integer",
                          "format": "int32",
                          "description": "End port of a range of ports"
                        }
                      }
                    },
                    "ephemeralPorts": {
                      "description": "The range of ephemeral ports that nodes in this node type should be configured with.",
                      "type": "object",
                      "required": [
                        "endPort",
                        "startPort"
                      ],
                      "properties": {
                        "startPort": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Starting port of a range of ports"
                        },
                        "endPort": {
                          "type": "integer",
                          "format": "int32",
                          "description": "End port of a range of ports"
                        }
                      }
                    },
                    "vmSize": {
                      "type": "string",
                      "description": "The size of virtual machines in the pool. All virtual machines in a pool are the same size. For example, Standard_D3."
                    },
                    "vmImagePublisher": {
                      "type": "string",
                      "description": "The publisher of the Azure Virtual Machines Marketplace image. For example, Canonical or MicrosoftWindowsServer."
                    },
                    "vmImageOffer": {
                      "type": "string",
                      "description": "The offer type of the Azure Virtual Machines Marketplace image. For example, UbuntuServer or WindowsServer."
                    },
                    "vmImageSku": {
                      "type": "string",
                      "description": "The SKU of the Azure Virtual Machines Marketplace image. For example, 14.04.0-LTS or 2012-R2-Datacenter."
                    },
                    "vmImageVersion": {
                      "type": "string",
                      "description": "The version of the Azure Virtual Machines Marketplace image. A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'."
                    },
                    "vmSecrets": {
                      "type": "array",
                      "title": "virtual machine secretes.",
                      "description": "The secrets to install in the virtual machines.",
                      "items": {
                        "type": "object",
                        "required": [
                          "sourceVault",
                          "vaultCertificates"
                        ],
                        "properties": {
                          "sourceVault": {
                            "description": "The relative URL of the Key Vault containing all of the certificates in VaultCertificates.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Azure resource identifier."
                              }
                            },
                            "x-ms-azure-resource": true
                          },
                          "vaultCertificates": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "certificateUrl",
                                "certificateStore"
                              ],
                              "properties": {
                                "certificateUrl": {
                                  "type": "string",
                                  "description": "This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  \"data\":\"<Base64-encoded-certificate>\",<br>  \"dataType\":\"pfx\",<br>  \"password\":\"<pfx-file-password>\"<br>}"
                                },
                                "certificateStore": {
                                  "type": "string",
                                  "description": "For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name <UppercaseThumbprint>.crt for the X509 certificate file and <UppercaseThumbprint>.prv for private key. Both of these files are .pem formatted."
                                }
                              },
                              "description": "Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM."
                            },
                            "x-ms-identifiers": [],
                            "description": "The list of key vault references in SourceVault which contain certificates."
                          }
                        },
                        "description": "Specifies set of certificates that should be installed onto the virtual machines."
                      },
                      "x-ms-identifiers": [
                        "sourceVault"
                      ]
                    },
                    "vmExtensions": {
                      "type": "array",
                      "title": "virtual machine extensions.",
                      "description": "Set of extensions that should be installed onto the virtual machines.",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "properties"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extension."
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Describes the properties of a Virtual Machine Scale Set Extension.",
                            "type": "object",
                            "required": [
                              "publisher",
                              "type",
                              "typeHandlerVersion"
                            ],
                            "properties": {
                              "publisher": {
                                "type": "string",
                                "description": "The name of the extension handler publisher."
                              },
                              "type": {
                                "type": "string",
                                "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                              },
                              "typeHandlerVersion": {
                                "type": "string",
                                "description": "Specifies the version of the script handler."
                              },
                              "autoUpgradeMinorVersion": {
                                "type": "boolean",
                                "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
                              },
                              "settings": {
                                "type": "object",
                                "description": "Json formatted public settings for the extension."
                              },
                              "protectedSettings": {
                                "type": "object",
                                "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
                              },
                              "forceUpdateTag": {
                                "type": "string",
                                "description": "If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed."
                              },
                              "provisionAfterExtensions": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Collection of extension names after which this extension needs to be provisioned."
                              },
                              "provisioningState": {
                                "readOnly": true,
                                "type": "string",
                                "description": "The provisioning state, which only appears in the response."
                              },
                              "enableAutomaticUpgrade": {
                                "type": "boolean",
                                "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available."
                              },
                              "setupOrder": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Vm extension setup order.\n",
                                  "enum": [
                                    "BeforeSFRuntime"
                                  ],
                                  "x-ms-enum": {
                                    "name": "VmssExtensionSetupOrder",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "BeforeSFRuntime",
                                        "description": "Indicates that the vm extension should run before the service fabric runtime starts."
                                      }
                                    ]
                                  }
                                },
                                "x-ms-identifiers": [],
                                "description": "Indicates the setup order for the extension."
                              }
                            }
                          }
                        },
                        "description": "Specifies set of extensions that should be installed onto the virtual machines."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "vmManagedIdentity": {
                      "description": "Identities to assign to the virtual machine scale set under the node type.",
                      "type": "object",
                      "properties": {
                        "userAssignedIdentities": {
                          "type": "array",
                          "description": "The list of user identities associated with the virtual machine scale set under the node type. Each entry will be an ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "isStateless": {
                      "type": "boolean",
                      "description": "Indicates if the node type can only host Stateless workloads.",
                      "default": false
                    },
                    "multiplePlacementGroups": {
                      "type": "boolean",
                      "description": "Indicates if scale set associated with the node type can be composed of multiple placement groups.",
                      "default": false
                    },
                    "frontendConfigurations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipAddressType": {
                            "description": "The IP address type of this frontend configuration. If omitted the default value is IPv4.",
                            "type": "string",
                            "enum": [
                              "IPv4",
                              "IPv6"
                            ],
                            "default": "IPv4",
                            "x-ms-enum": {
                              "name": "IPAddressType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "IPv4",
                                  "description": "IPv4 address type."
                                },
                                {
                                  "value": "IPv6",
                                  "description": "IPv6 address type."
                                }
                              ]
                            }
                          },
                          "loadBalancerBackendAddressPoolId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "The resource Id of the Load Balancer backend address pool that the VM instances of the node type are associated with. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/loadBalancers/<loadBalancerName>/backendAddressPools/<backendAddressPoolName>'."
                          },
                          "loadBalancerInboundNatPoolId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "The resource Id of the Load Balancer inbound NAT pool that the VM instances of the node type are associated with. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/loadBalancers/<loadBalancerName>/inboundNatPools/<inboundNatPoolName>'."
                          },
                          "applicationGatewayBackendAddressPoolId": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Network/applicationGateways/backendAddressPools"
                                }
                              ]
                            },
                            "description": "The resource Id of application gateway backend address pool. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/applicationGateways/<applicationGatewayName>/backendAddressPools/<backendAddressPoolName>'."
                          }
                        },
                        "description": "Describes the frontend configurations for the node type."
                      },
                      "x-ms-identifiers": [],
                      "description": "Indicates the node type uses its own frontend configurations instead of the default one for the cluster. This setting can only be specified for non-primary node types and can not be added or removed after the node type is created."
                    },
                    "networkSecurityRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "protocol",
                          "access",
                          "priority",
                          "direction"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Network security rule name."
                          },
                          "description": {
                            "type": "string",
                            "description": "Network security rule description."
                          },
                          "protocol": {
                            "type": "string",
                            "description": "Network protocol this rule applies to.",
                            "enum": [
                              "http",
                              "https",
                              "tcp",
                              "udp",
                              "icmp",
                              "ah",
                              "esp"
                            ],
                            "x-ms-enum": {
                              "name": "nsgProtocol",
                              "modelAsString": true
                            }
                          },
                          "sourceAddressPrefixes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The CIDR or source IP ranges."
                          },
                          "destinationAddressPrefixes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The destination address prefixes. CIDR or destination IP ranges."
                          },
                          "sourcePortRanges": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The source port ranges."
                          },
                          "destinationPortRanges": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The destination port ranges."
                          },
                          "sourceAddressPrefix": {
                            "type": "string",
                            "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from."
                          },
                          "destinationAddressPrefix": {
                            "type": "string",
                            "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."
                          },
                          "sourcePortRange": {
                            "type": "string",
                            "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                          },
                          "destinationPortRange": {
                            "type": "string",
                            "description": "he destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                          },
                          "access": {
                            "type": "string",
                            "description": "The network traffic is allowed or denied.",
                            "enum": [
                              "allow",
                              "deny"
                            ],
                            "x-ms-enum": {
                              "name": "access",
                              "modelAsString": true
                            }
                          },
                          "priority": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The priority of the rule. The value can be in the range 1000 to 3000. Values outside this range are reserved for Service Fabric ManagerCluster Resource Provider. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                            "minimum": 1000,
                            "maximum": 3000
                          },
                          "direction": {
                            "type": "string",
                            "description": "Network security rule direction.",
                            "enum": [
                              "inbound",
                              "outbound"
                            ],
                            "x-ms-enum": {
                              "name": "direction",
                              "modelAsString": true
                            }
                          }
                        },
                        "description": "Describes a network security rule."
                      },
                      "x-ms-identifiers": [],
                      "description": "The Network Security Rules for this node type. This setting can only be specified for node types that are configured with frontend configurations."
                    },
                    "additionalDataDisks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "lun",
                          "diskSizeGB",
                          "diskType",
                          "diskLetter"
                        ],
                        "properties": {
                          "lun": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "description": "Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM. Lun 0 is reserved for the service fabric data disk."
                          },
                          "diskSizeGB": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Disk size for each vm in the node type in GBs."
                          },
                          "diskType": {
                            "description": "Managed data disk type. Specifies the storage account type for the managed disk",
                            "type": "string",
                            "enum": [
                              "Standard_LRS",
                              "StandardSSD_LRS",
                              "Premium_LRS"
                            ],
                            "default": "StandardSSD_LRS",
                            "x-ms-enum": {
                              "name": "DiskType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Standard_LRS",
                                  "description": "Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access."
                                },
                                {
                                  "value": "StandardSSD_LRS",
                                  "description": "Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test."
                                },
                                {
                                  "value": "Premium_LRS",
                                  "description": "Premium SSD locally redundant storage. Best for production and performance sensitive workloads."
                                }
                              ]
                            }
                          },
                          "diskLetter": {
                            "type": "string",
                            "pattern": "^[a-zA-Z]{1}$",
                            "description": "Managed data disk letter. It can not use the reserved letter C or D and it can not change after created."
                          }
                        },
                        "description": "Managed data disk description."
                      },
                      "x-ms-identifiers": [
                        "lun"
                      ],
                      "description": "Additional managed data disks."
                    },
                    "enableEncryptionAtHost": {
                      "type": "boolean",
                      "description": "Enable or disable the Host Encryption for the virtual machines on the node type. This will enable the encryption for all the disks including Resource/Temp disk at host itself. Default: The Encryption at host will be disabled unless this property is set to true for the resource.",
                      "default": false
                    },
                    "provisioningState": {
                      "readOnly": true,
                      "description": "The provisioning state of the node type resource.",
                      "type": "string",
                      "enum": [
                        "None",
                        "Creating",
                        "Created",
                        "Updating",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting",
                        "Deleted",
                        "Other"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedResourceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "enableAcceleratedNetworking": {
                      "type": "boolean",
                      "description": "Specifies whether the network interface is accelerated networking-enabled."
                    },
                    "useDefaultPublicLoadBalancer": {
                      "type": "boolean",
                      "description": "Specifies whether the use public load balancer. If not specified and the node type doesn't have its own frontend configuration, it will be attached to the default load balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is true, then the frontend has to be an Internal Load Balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is false or not set, then the custom load balancer must include a public load balancer to provide outbound connectivity."
                    },
                    "useTempDataDisk": {
                      "type": "boolean",
                      "description": "Specifies whether to use the temporary disk for the service fabric data root, in which case no managed data disk will be attached and the temporary disk will be used. It is only allowed for stateless node types."
                    },
                    "enableOverProvisioning": {
                      "type": "boolean",
                      "description": "Specifies whether the node type should be overprovisioned. It is only allowed for stateless node types."
                    },
                    "zones": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Specifies the availability zones where the node type would span across. If the cluster is not spanning across availability zones, initiates az migration for the cluster."
                    },
                    "isSpotVM": {
                      "type": "boolean",
                      "description": "Indicates whether the node type will be Spot Virtual Machines. Azure will allocate the VMs if there is capacity available and the VMs can be evicted at any time."
                    },
                    "hostGroupId": {
                      "type": "string",
                      "description": "Specifies the full host group resource Id. This property is used for deploying on azure dedicated hosts."
                    },
                    "useEphemeralOSDisk": {
                      "type": "boolean",
                      "description": "Indicates whether to use ephemeral os disk. The sku selected on the vmSize property needs to support this feature."
                    },
                    "spotRestoreTimeout": {
                      "type": "string",
                      "description": "Indicates the time duration after which the platform will not try to restore the VMSS SPOT instances specified as ISO 8601."
                    },
                    "evictionPolicy": {
                      "description": "Specifies the eviction policy for virtual machines in a SPOT node type. Default is Delete.",
                      "type": "string",
                      "enum": [
                        "Delete",
                        "Deallocate"
                      ],
                      "x-ms-enum": {
                        "name": "EvictionPolicyType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Delete",
                            "description": "Eviction policy will be Delete for SPOT vms."
                          },
                          {
                            "value": "Deallocate",
                            "description": "Eviction policy will be Deallocate for SPOT vms."
                          }
                        ]
                      }
                    },
                    "vmImageResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Compute/images"
                          },
                          {
                            "type": "Microsoft.Compute/galleries/images"
                          },
                          {
                            "type": "Microsoft.Compute/galleries/images/versions"
                          }
                        ]
                      },
                      "description": "Indicates the resource id of the vm image. This parameter is used for custom vm image."
                    },
                    "subnetId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/virtualNetworks/subnets"
                          }
                        ]
                      },
                      "description": "Indicates the resource id of the subnet for the node type."
                    },
                    "vmSetupActions": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "action to be performed on the vms before bootstrapping the service fabric runtime.",
                        "enum": [
                          "EnableContainers",
                          "EnableHyperV"
                        ],
                        "x-ms-enum": {
                          "name": "VmSetupAction",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "EnableContainers",
                              "description": "Enable windows containers feature."
                            },
                            {
                              "value": "EnableHyperV",
                              "description": "Enables windows HyperV feature."
                            }
                          ]
                        }
                      },
                      "description": "Specifies the actions to be performed on the vms before bootstrapping the service fabric runtime."
                    },
                    "securityType": {
                      "type": "string",
                      "description": "Specifies the security type of the nodeType. Only Standard and TrustedLaunch are currently supported",
                      "enum": [
                        "TrustedLaunch",
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "securityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "TrustedLaunch",
                            "description": "Trusted Launch is a security type that secures generation 2 virtual machines."
                          },
                          {
                            "value": "Standard",
                            "description": "Standard is the default security type for all machines."
                          }
                        ]
                      }
                    },
                    "secureBootEnabled": {
                      "type": "boolean",
                      "description": "Specifies whether secure boot should be enabled on the nodeType. Can only be used with TrustedLaunch SecurityType"
                    },
                    "enableNodePublicIP": {
                      "type": "boolean",
                      "description": "Specifies whether each node is allocated its own public IPv4 address. This is only supported on secondary node types with custom Load Balancers."
                    },
                    "enableNodePublicIPv6": {
                      "type": "boolean",
                      "description": "Specifies whether each node is allocated its own public IPv6 address. This is only supported on secondary node types with custom Load Balancers."
                    },
                    "vmSharedGalleryImageId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Compute/sharedGalleries/images"
                          },
                          {
                            "type": "Microsoft.Compute/sharedGalleries/images/versions"
                          }
                        ]
                      },
                      "description": "Indicates the resource id of the vm shared galleries image. This parameter is used for custom vm image."
                    },
                    "natGatewayId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/natGateways"
                          }
                        ]
                      },
                      "description": "Specifies the resource id of a NAT Gateway to attach to the subnet of this node type. Node type must use custom load balancer."
                    },
                    "natConfigurations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "backendPort": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 65535,
                            "description": "The internal port for the NAT configuration."
                          },
                          "frontendPortRangeStart": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 65534,
                            "description": "The port range start for the external endpoint."
                          },
                          "frontendPortRangeEnd": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1,
                            "maximum": 65534,
                            "description": "The port range end for the external endpoint."
                          }
                        },
                        "description": "Provides information about NAT configuration on the default public Load Balancer for the node type."
                      },
                      "x-ms-identifiers": [],
                      "description": "Specifies the NAT configuration on default public Load Balancer for the node type. This is only supported for node types use the default public Load Balancer."
                    },
                    "vmImagePlan": {
                      "description": "Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started ->. Enter any required information and then click Save.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The plan ID."
                        },
                        "product": {
                          "type": "string",
                          "description": "Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element."
                        },
                        "promotionCode": {
                          "type": "string",
                          "description": "The promotion code."
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The publisher ID."
                        }
                      }
                    },
                    "serviceArtifactReferenceId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Compute/galleries/serviceArtifacts/vmArtifactsProfiles"
                          }
                        ]
                      },
                      "description": "Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using 'latest' image version."
                    },
                    "dscpConfigurationId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/dscpConfigurations"
                          }
                        ]
                      },
                      "description": "Specifies the resource id of the DSCP configuration to apply to the node type network interface."
                    },
                    "additionalNetworkInterfaceConfigurations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "ipConfigurations"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the network interface."
                          },
                          "enableAcceleratedNetworking": {
                            "type": "boolean",
                            "description": "Specifies whether the network interface is accelerated networking-enabled."
                          },
                          "dscpConfiguration": {
                            "description": "Specifies the DSCP configuration to apply to the network interface.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Azure resource identifier."
                              }
                            },
                            "x-ms-azure-resource": true
                          },
                          "ipConfigurations": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "description": "Specifies an IP configuration of the network interface.",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the network interface."
                                },
                                "applicationGatewayBackendAddressPools": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "Azure resource identifier."
                                      }
                                    },
                                    "description": "Azure resource identifier.",
                                    "x-ms-azure-resource": true
                                  },
                                  "description": "Specifies an array of references to backend address pools of application gateways. A node type can reference backend address pools of multiple application gateways. Multiple node types cannot use the same application gateway."
                                },
                                "loadBalancerBackendAddressPools": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "Azure resource identifier."
                                      }
                                    },
                                    "description": "Azure resource identifier.",
                                    "x-ms-azure-resource": true
                                  },
                                  "description": "Specifies an array of references to backend address pools of load balancers. A node type can reference backend address pools of one public and one internal load balancer. Multiple node types cannot use the same basic sku load balancer.\t"
                                },
                                "loadBalancerInboundNatPools": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "Azure resource identifier."
                                      }
                                    },
                                    "description": "Azure resource identifier.",
                                    "x-ms-azure-resource": true
                                  },
                                  "description": "Specifies an array of references to inbound Nat pools of the load balancers. A node type can reference inbound nat pools of one public and one internal load balancer. Multiple node types cannot use the same basic sku load balancer."
                                },
                                "subnet": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Azure resource identifier."
                                    }
                                  },
                                  "description": "Azure resource identifier.",
                                  "x-ms-azure-resource": true
                                },
                                "privateIPAddressVersion": {
                                  "type": "string",
                                  "description": "Specifies whether the IP configuration's private IP is IPv4 or IPv6. Default is IPv4.",
                                  "enum": [
                                    "IPv4",
                                    "IPv6"
                                  ],
                                  "default": "IPv4",
                                  "x-ms-enum": {
                                    "name": "privateIPAddressVersion",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "IPv4"
                                      },
                                      {
                                        "value": "IPv6"
                                      }
                                    ]
                                  }
                                },
                                "publicIPAddressConfiguration": {
                                  "type": "object",
                                  "required": [
                                    "name"
                                  ],
                                  "description": "The public IP address configuration of the network interface.",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the network interface."
                                    },
                                    "ipTags": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "ipTagType",
                                          "tag"
                                        ],
                                        "properties": {
                                          "ipTagType": {
                                            "type": "string",
                                            "description": "IP tag type. Example: FirstPartyUsage."
                                          },
                                          "tag": {
                                            "type": "string",
                                            "description": "IP tag associated with the public IP. Example: SQL, Storage etc."
                                          }
                                        },
                                        "description": "The IP tag associated with the public IP address."
                                      },
                                      "x-ms-identifiers": [],
                                      "description": "Specifies the list of IP tags associated with the public IP address."
                                    },
                                    "publicIPAddressVersion": {
                                      "type": "string",
                                      "description": "Specifies whether the IP configuration's public IP is IPv4 or IPv6. Default is IPv4.",
                                      "enum": [
                                        "IPv4",
                                        "IPv6"
                                      ],
                                      "default": "IPv4",
                                      "x-ms-enum": {
                                        "name": "publicIPAddressVersion",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "value": "IPv4"
                                          },
                                          {
                                            "value": "IPv6"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ],
                            "description": "Specifies the IP configurations of the network interface."
                          }
                        },
                        "description": "Specifies the settings for a network interface to attach to the node type."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "description": "Specifies the settings for any additional secondary network interfaces to attach to the node type."
                    },
                    "computerNamePrefix": {
                      "type": "string",
                      "description": "Specifies the computer name prefix. Limited to 9 characters. If specified, allows for a longer name to be specified for the node type name."
                    }
                  }
                },
                "sku": {
                  "description": "The node type sku.",
                  "type": "object",
                  "required": [
                    "capacity"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The sku name. <br /><br />Name is internally generated and is used in auto-scale scenarios.<br /> Property does not allow to be changed to other values than generated.<br /> To avoid deployment errors please omit the property."
                    },
                    "tier": {
                      "type": "string",
                      "description": "Specifies the tier of the node type. <br /><br /> Possible Values:<br /> **Standard**"
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of nodes in the node type.<br /><br />If present in request it will override properties.vmInstanceCount.",
                      "minimum": 1,
                      "maximum": 2147483647
                    }
                  }
                }
              },
              "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NodeType"
        ],
        "operationId": "NodeTypes_Delete",
        "summary": "Deletes a Service Fabric node type.",
        "description": "Delete a Service Fabric node type of a given managed cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The customer subscription identifier.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "nodeTypeName",
            "in": "path",
            "description": "The name of the node type.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully."
          },
          "202": {
            "description": "The request was accepted and the operation will complete asynchronously.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "The URL to get the status of an ongoing long-running operation.",
                "type": "string"
              },
              "Location": {
                "description": "The URL to get the status of a completed long-running operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The resource was not found."
          }
        }
      }
    }
  },
  "definitions": {
    "ApplicationMetricDescription": {
      "type": "object",
      "description": "Describes capacity information for a custom resource balancing metric. This can be used to limit the total consumption of this metric by the services of this application.\n",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the metric."
        },
        "maximumCapacity": {
          "type": "integer",
          "format": "int64",
          "description": "The maximum node capacity for Service Fabric application.\nThis is the maximum Load for an instance of this application on a single node. Even if the capacity of node is greater than this value, Service Fabric will limit the total load of services within the application on each node to this value.\nIf set to zero, capacity for this metric is unlimited on each node.\nWhen creating a new application with application capacity defined, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.\nWhen updating existing application with application capacity, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.\n"
        },
        "reservationCapacity": {
          "type": "integer",
          "format": "int64",
          "description": "The node reservation capacity for Service Fabric application.\nThis is the amount of load which is reserved on nodes which have instances of this application.\nIf MinimumNodes is specified, then the product of these values will be the capacity reserved in the cluster for the application.\nIf set to zero, no capacity is reserved for this metric.\nWhen setting application capacity or when updating application capacity; this value must be smaller than or equal to MaximumCapacity for each metric.\n"
        },
        "totalApplicationCapacity": {
          "description": "The total metric capacity for Service Fabric application.\nThis is the total metric capacity for this application in the cluster. Service Fabric will try to limit the sum of loads of services within the application to this value.\nWhen creating a new application with application capacity defined, the product of MaximumNodes and MaximumCapacity must always be smaller than or equal to this value.\n",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApplicationMetricDescriptionList": {
      "type": "array",
      "items": {
        "type": "object",
        "description": "Describes capacity information for a custom resource balancing metric. This can be used to limit the total consumption of this metric by the services of this application.\n",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the metric."
          },
          "maximumCapacity": {
            "type": "integer",
            "format": "int64",
            "description": "The maximum node capacity for Service Fabric application.\nThis is the maximum Load for an instance of this application on a single node. Even if the capacity of node is greater than this value, Service Fabric will limit the total load of services within the application on each node to this value.\nIf set to zero, capacity for this metric is unlimited on each node.\nWhen creating a new application with application capacity defined, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.\nWhen updating existing application with application capacity, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.\n"
          },
          "reservationCapacity": {
            "type": "integer",
            "format": "int64",
            "description": "The node reservation capacity for Service Fabric application.\nThis is the amount of load which is reserved on nodes which have instances of this application.\nIf MinimumNodes is specified, then the product of these values will be the capacity reserved in the cluster for the application.\nIf set to zero, no capacity is reserved for this metric.\nWhen setting application capacity or when updating application capacity; this value must be smaller than or equal to MaximumCapacity for each metric.\n"
          },
          "totalApplicationCapacity": {
            "description": "The total metric capacity for Service Fabric application.\nThis is the total metric capacity for this application in the cluster. Service Fabric will try to limit the sum of loads of services within the application to this value.\nWhen creating a new application with application capacity defined, the product of MaximumNodes and MaximumCapacity must always be smaller than or equal to this value.\n",
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "description": "List of application capacity metric description."
    },
    "ApplicationParameterList": {
      "type": "object",
      "description": "List of application parameters with overridden values from their default values specified in the application manifest.",
      "additionalProperties": {
        "type": "string"
      }
    },
    "ApplicationResource": {
      "type": "object",
      "description": "The application resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Azure resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Azure resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Azure resource type.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "Resource location depends on the parent resource.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Azure resource tags.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)."
            }
          }
        },
        "identity": {
          "type": "object",
          "description": "Describes the managed identities for an Azure resource.",
          "properties": {
            "principalId": {
              "type": "string",
              "readOnly": true,
              "description": "The principal id of the managed identity. This property will only be provided for a system assigned identity."
            },
            "tenantId": {
              "type": "string",
              "readOnly": true,
              "description": "The tenant id of the managed identity. This property will only be provided for a system assigned identity."
            },
            "type": {
              "type": "string",
              "description": "The type of managed identity for the resource.",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedIdentityType",
                "modelAsString": false,
                "values": [
                  {
                    "value": "None",
                    "description": "Indicates that no identity is associated with the resource."
                  },
                  {
                    "value": "SystemAssigned",
                    "description": "Indicates that system assigned identity is associated with the resource."
                  },
                  {
                    "value": "UserAssigned",
                    "description": "Indicates that user assigned identity is associated with the resource."
                  },
                  {
                    "value": "SystemAssigned, UserAssigned",
                    "description": "Indicates that both system assigned and user assigned identity are associated with the resource."
                  }
                ]
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\n",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The principal id of user assigned identity."
                  },
                  "clientId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The client id of user assigned identity."
                  }
                }
              }
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "description": "The application resource properties.",
          "properties": {
            "provisioningState": {
              "readOnly": true,
              "type": "string",
              "description": "The current deployment or provisioning state, which only appears in the response"
            },
            "version": {
              "type": "string",
              "description": "The version of the application type as defined in the application manifest.\nThis name must be the full Arm Resource ID for the referenced application type version.\n"
            },
            "parameters": {
              "type": "object",
              "description": "List of application parameters with overridden values from their default values specified in the application manifest.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "upgradePolicy": {
              "type": "object",
              "description": "Describes the policy for a monitored application upgrade.",
              "properties": {
                "applicationHealthPolicy": {
                  "type": "object",
                  "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
                  "required": [
                    "considerWarningAsError",
                    "maxPercentUnhealthyDeployedApplications"
                  ],
                  "properties": {
                    "considerWarningAsError": {
                      "type": "boolean",
                      "description": "Indicates whether warnings are treated with the same severity as errors."
                    },
                    "maxPercentUnhealthyDeployedApplications": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.\nThe percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.\nThis is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n"
                    },
                    "defaultServiceTypeHealthPolicy": {
                      "description": "The health policy used by default to evaluate the health of a service type.",
                      "type": "object",
                      "required": [
                        "maxPercentUnhealthyServices",
                        "maxPercentUnhealthyPartitionsPerService",
                        "maxPercentUnhealthyReplicasPerPartition"
                      ],
                      "properties": {
                        "maxPercentUnhealthyServices": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum allowed percentage of unhealthy services.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services.\n",
                          "minimum": 0,
                          "maximum": 100
                        },
                        "maxPercentUnhealthyPartitionsPerService": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum allowed percentage of unhealthy partitions per service.\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions.\n",
                          "minimum": 0,
                          "maximum": 100
                        },
                        "maxPercentUnhealthyReplicasPerPartition": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum allowed percentage of unhealthy replicas per partition.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas.\n",
                          "minimum": 0,
                          "maximum": 100
                        }
                      }
                    },
                    "serviceTypeHealthPolicyMap": {
                      "description": "The map with service type health policy per service type name. The map is empty by default.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                        "required": [
                          "maxPercentUnhealthyServices",
                          "maxPercentUnhealthyPartitionsPerService",
                          "maxPercentUnhealthyReplicasPerPartition"
                        ],
                        "properties": {
                          "maxPercentUnhealthyServices": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum allowed percentage of unhealthy services.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services.\n",
                            "minimum": 0,
                            "maximum": 100
                          },
                          "maxPercentUnhealthyPartitionsPerService": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum allowed percentage of unhealthy partitions per service.\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions.\n",
                            "minimum": 0,
                            "maximum": 100
                          },
                          "maxPercentUnhealthyReplicasPerPartition": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum allowed percentage of unhealthy replicas per partition.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas.\n",
                            "minimum": 0,
                            "maximum": 100
                          }
                        }
                      }
                    }
                  }
                },
                "forceRestart": {
                  "type": "boolean",
                  "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).",
                  "default": false
                },
                "rollingUpgradeMonitoringPolicy": {
                  "type": "object",
                  "description": "The policy used for monitoring the application upgrade",
                  "required": [
                    "failureAction",
                    "healthCheckWaitDuration",
                    "healthCheckStableDuration",
                    "healthCheckRetryTimeout",
                    "upgradeTimeout",
                    "upgradeDomainTimeout"
                  ],
                  "properties": {
                    "failureAction": {
                      "type": "string",
                      "description": "The compensating action to perform when a Monitored upgrade encounters monitoring policy or health policy violations. Invalid indicates the failure action is invalid. Rollback specifies that the upgrade will start rolling back automatically. Manual indicates that the upgrade will switch to UnmonitoredManual upgrade mode.",
                      "enum": [
                        "Rollback",
                        "Manual"
                      ],
                      "x-ms-enum": {
                        "name": "FailureAction",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Rollback",
                            "description": "Indicates that a rollback of the upgrade will be performed by Service Fabric if the upgrade fails."
                          },
                          {
                            "value": "Manual",
                            "description": "Indicates that a manual repair will need to be performed by the administrator if the upgrade fails. Service Fabric will not proceed to the next upgrade domain automatically."
                          }
                        ]
                      }
                    },
                    "healthCheckWaitDuration": {
                      "type": "string",
                      "x-ms-format": "duration-constant",
                      "description": "The amount of time to wait after completing an upgrade domain before applying health policies. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                    },
                    "healthCheckStableDuration": {
                      "type": "string",
                      "x-ms-format": "duration-constant",
                      "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                    },
                    "healthCheckRetryTimeout": {
                      "type": "string",
                      "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                    },
                    "upgradeTimeout": {
                      "type": "string",
                      "description": "The amount of time the overall upgrade has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                    },
                    "upgradeDomainTimeout": {
                      "type": "string",
                      "description": "The amount of time each upgrade domain has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                    }
                  }
                },
                "instanceCloseDelayDuration": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Duration in seconds, to wait before a stateless instance is closed, to allow the active requests to drain gracefully. This would be effective when the instance is closing during the application/cluster upgrade, only for those instances which have a non-zero delay duration configured in the service description."
                },
                "upgradeMode": {
                  "type": "string",
                  "description": "The mode used to monitor health during a rolling upgrade. The values are Monitored, and UnmonitoredAuto.",
                  "enum": [
                    "Monitored",
                    "UnmonitoredAuto"
                  ],
                  "x-ms-enum": {
                    "name": "RollingUpgradeMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Monitored",
                        "description": "The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 0."
                      },
                      {
                        "value": "UnmonitoredAuto",
                        "description": "The upgrade will proceed automatically without performing any health monitoring. The value is 1."
                      }
                    ]
                  }
                },
                "upgradeReplicaSetCheckTimeout": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer)."
                },
                "recreateApplication": {
                  "type": "boolean",
                  "description": "Determines whether the application should be recreated on update. If value=true, the rest of the upgrade policy parameters are not allowed."
                }
              }
            },
            "managedIdentities": {
              "description": "List of user assigned identities for the application, each mapped to a friendly name.",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "name",
                  "principalId"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The friendly name of user assigned identity."
                  },
                  "principalId": {
                    "type": "string",
                    "description": "The principal id of user assigned identity."
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        }
      }
    },
    "ApplicationResourceList": {
      "type": "object",
      "description": "The list of application resources.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "The application resource.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Azure resource identifier.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "Azure resource name.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "Azure resource type.",
                "readOnly": true
              },
              "location": {
                "type": "string",
                "description": "Resource location depends on the parent resource.",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Azure resource tags.",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource."
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)."
                  }
                }
              },
              "identity": {
                "type": "object",
                "description": "Describes the managed identities for an Azure resource.",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The principal id of the managed identity. This property will only be provided for a system assigned identity."
                  },
                  "tenantId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The tenant id of the managed identity. This property will only be provided for a system assigned identity."
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of managed identity for the resource.",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned, UserAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "ManagedIdentityType",
                      "modelAsString": false,
                      "values": [
                        {
                          "value": "None",
                          "description": "Indicates that no identity is associated with the resource."
                        },
                        {
                          "value": "SystemAssigned",
                          "description": "Indicates that system assigned identity is associated with the resource."
                        },
                        {
                          "value": "UserAssigned",
                          "description": "Indicates that user assigned identity is associated with the resource."
                        },
                        {
                          "value": "SystemAssigned, UserAssigned",
                          "description": "Indicates that both system assigned and user assigned identity are associated with the resource."
                        }
                      ]
                    }
                  },
                  "userAssignedIdentities": {
                    "type": "object",
                    "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\n",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "principalId": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The principal id of user assigned identity."
                        },
                        "clientId": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The client id of user assigned identity."
                        }
                      }
                    }
                  }
                }
              },
              "properties": {
                "x-ms-client-flatten": true,
                "type": "object",
                "description": "The application resource properties.",
                "properties": {
                  "provisioningState": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The current deployment or provisioning state, which only appears in the response"
                  },
                  "version": {
                    "type": "string",
                    "description": "The version of the application type as defined in the application manifest.\nThis name must be the full Arm Resource ID for the referenced application type version.\n"
                  },
                  "parameters": {
                    "type": "object",
                    "description": "List of application parameters with overridden values from their default values specified in the application manifest.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "upgradePolicy": {
                    "type": "object",
                    "description": "Describes the policy for a monitored application upgrade.",
                    "properties": {
                      "applicationHealthPolicy": {
                        "type": "object",
                        "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
                        "required": [
                          "considerWarningAsError",
                          "maxPercentUnhealthyDeployedApplications"
                        ],
                        "properties": {
                          "considerWarningAsError": {
                            "type": "boolean",
                            "description": "Indicates whether warnings are treated with the same severity as errors."
                          },
                          "maxPercentUnhealthyDeployedApplications": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.\nThe percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.\nThis is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n"
                          },
                          "defaultServiceTypeHealthPolicy": {
                            "description": "The health policy used by default to evaluate the health of a service type.",
                            "type": "object",
                            "required": [
                              "maxPercentUnhealthyServices",
                              "maxPercentUnhealthyPartitionsPerService",
                              "maxPercentUnhealthyReplicasPerPartition"
                            ],
                            "properties": {
                              "maxPercentUnhealthyServices": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The maximum allowed percentage of unhealthy services.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services.\n",
                                "minimum": 0,
                                "maximum": 100
                              },
                              "maxPercentUnhealthyPartitionsPerService": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The maximum allowed percentage of unhealthy partitions per service.\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions.\n",
                                "minimum": 0,
                                "maximum": 100
                              },
                              "maxPercentUnhealthyReplicasPerPartition": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The maximum allowed percentage of unhealthy replicas per partition.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas.\n",
                                "minimum": 0,
                                "maximum": 100
                              }
                            }
                          },
                          "serviceTypeHealthPolicyMap": {
                            "description": "The map with service type health policy per service type name. The map is empty by default.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                              "required": [
                                "maxPercentUnhealthyServices",
                                "maxPercentUnhealthyPartitionsPerService",
                                "maxPercentUnhealthyReplicasPerPartition"
                              ],
                              "properties": {
                                "maxPercentUnhealthyServices": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum allowed percentage of unhealthy services.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services.\n",
                                  "minimum": 0,
                                  "maximum": 100
                                },
                                "maxPercentUnhealthyPartitionsPerService": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum allowed percentage of unhealthy partitions per service.\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions.\n",
                                  "minimum": 0,
                                  "maximum": 100
                                },
                                "maxPercentUnhealthyReplicasPerPartition": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum allowed percentage of unhealthy replicas per partition.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas.\n",
                                  "minimum": 0,
                                  "maximum": 100
                                }
                              }
                            }
                          }
                        }
                      },
                      "forceRestart": {
                        "type": "boolean",
                        "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).",
                        "default": false
                      },
                      "rollingUpgradeMonitoringPolicy": {
                        "type": "object",
                        "description": "The policy used for monitoring the application upgrade",
                        "required": [
                          "failureAction",
                          "healthCheckWaitDuration",
                          "healthCheckStableDuration",
                          "healthCheckRetryTimeout",
                          "upgradeTimeout",
                          "upgradeDomainTimeout"
                        ],
                        "properties": {
                          "failureAction": {
                            "type": "string",
                            "description": "The compensating action to perform when a Monitored upgrade encounters monitoring policy or health policy violations. Invalid indicates the failure action is invalid. Rollback specifies that the upgrade will start rolling back automatically. Manual indicates that the upgrade will switch to UnmonitoredManual upgrade mode.",
                            "enum": [
                              "Rollback",
                              "Manual"
                            ],
                            "x-ms-enum": {
                              "name": "FailureAction",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Rollback",
                                  "description": "Indicates that a rollback of the upgrade will be performed by Service Fabric if the upgrade fails."
                                },
                                {
                                  "value": "Manual",
                                  "description": "Indicates that a manual repair will need to be performed by the administrator if the upgrade fails. Service Fabric will not proceed to the next upgrade domain automatically."
                                }
                              ]
                            }
                          },
                          "healthCheckWaitDuration": {
                            "type": "string",
                            "x-ms-format": "duration-constant",
                            "description": "The amount of time to wait after completing an upgrade domain before applying health policies. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                          },
                          "healthCheckStableDuration": {
                            "type": "string",
                            "x-ms-format": "duration-constant",
                            "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                          },
                          "healthCheckRetryTimeout": {
                            "type": "string",
                            "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                          },
                          "upgradeTimeout": {
                            "type": "string",
                            "description": "The amount of time the overall upgrade has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                          },
                          "upgradeDomainTimeout": {
                            "type": "string",
                            "description": "The amount of time each upgrade domain has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                          }
                        }
                      },
                      "instanceCloseDelayDuration": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Duration in seconds, to wait before a stateless instance is closed, to allow the active requests to drain gracefully. This would be effective when the instance is closing during the application/cluster upgrade, only for those instances which have a non-zero delay duration configured in the service description."
                      },
                      "upgradeMode": {
                        "type": "string",
                        "description": "The mode used to monitor health during a rolling upgrade. The values are Monitored, and UnmonitoredAuto.",
                        "enum": [
                          "Monitored",
                          "UnmonitoredAuto"
                        ],
                        "x-ms-enum": {
                          "name": "RollingUpgradeMode",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Monitored",
                              "description": "The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 0."
                            },
                            {
                              "value": "UnmonitoredAuto",
                              "description": "The upgrade will proceed automatically without performing any health monitoring. The value is 1."
                            }
                          ]
                        }
                      },
                      "upgradeReplicaSetCheckTimeout": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer)."
                      },
                      "recreateApplication": {
                        "type": "boolean",
                        "description": "Determines whether the application should be recreated on update. If value=true, the rest of the upgrade policy parameters are not allowed."
                      }
                    }
                  },
                  "managedIdentities": {
                    "description": "List of user assigned identities for the application, each mapped to a friendly name.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "principalId"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The friendly name of user assigned identity."
                        },
                        "principalId": {
                          "type": "string",
                          "description": "The principal id of user assigned identity."
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of application list results if there are any.",
          "readOnly": true
        }
      }
    },
    "ApplicationResourceProperties": {
      "type": "object",
      "description": "The application resource properties.",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The current deployment or provisioning state, which only appears in the response"
        },
        "version": {
          "type": "string",
          "description": "The version of the application type as defined in the application manifest.\nThis name must be the full Arm Resource ID for the referenced application type version.\n"
        },
        "parameters": {
          "type": "object",
          "description": "List of application parameters with overridden values from their default values specified in the application manifest.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "upgradePolicy": {
          "type": "object",
          "description": "Describes the policy for a monitored application upgrade.",
          "properties": {
            "applicationHealthPolicy": {
              "type": "object",
              "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
              "required": [
                "considerWarningAsError",
                "maxPercentUnhealthyDeployedApplications"
              ],
              "properties": {
                "considerWarningAsError": {
                  "type": "boolean",
                  "description": "Indicates whether warnings are treated with the same severity as errors."
                },
                "maxPercentUnhealthyDeployedApplications": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.\nThe percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.\nThis is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n"
                },
                "defaultServiceTypeHealthPolicy": {
                  "description": "The health policy used by default to evaluate the health of a service type.",
                  "type": "object",
                  "required": [
                    "maxPercentUnhealthyServices",
                    "maxPercentUnhealthyPartitionsPerService",
                    "maxPercentUnhealthyReplicasPerPartition"
                  ],
                  "properties": {
                    "maxPercentUnhealthyServices": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum allowed percentage of unhealthy services.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services.\n",
                      "minimum": 0,
                      "maximum": 100
                    },
                    "maxPercentUnhealthyPartitionsPerService": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum allowed percentage of unhealthy partitions per service.\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions.\n",
                      "minimum": 0,
                      "maximum": 100
                    },
                    "maxPercentUnhealthyReplicasPerPartition": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum allowed percentage of unhealthy replicas per partition.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas.\n",
                      "minimum": 0,
                      "maximum": 100
                    }
                  }
                },
                "serviceTypeHealthPolicyMap": {
                  "description": "The map with service type health policy per service type name. The map is empty by default.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                    "required": [
                      "maxPercentUnhealthyServices",
                      "maxPercentUnhealthyPartitionsPerService",
                      "maxPercentUnhealthyReplicasPerPartition"
                    ],
                    "properties": {
                      "maxPercentUnhealthyServices": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum allowed percentage of unhealthy services.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services.\n",
                        "minimum": 0,
                        "maximum": 100
                      },
                      "maxPercentUnhealthyPartitionsPerService": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum allowed percentage of unhealthy partitions per service.\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions.\n",
                        "minimum": 0,
                        "maximum": 100
                      },
                      "maxPercentUnhealthyReplicasPerPartition": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum allowed percentage of unhealthy replicas per partition.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas.\n",
                        "minimum": 0,
                        "maximum": 100
                      }
                    }
                  }
                }
              }
            },
            "forceRestart": {
              "type": "boolean",
              "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).",
              "default": false
            },
            "rollingUpgradeMonitoringPolicy": {
              "type": "object",
              "description": "The policy used for monitoring the application upgrade",
              "required": [
                "failureAction",
                "healthCheckWaitDuration",
                "healthCheckStableDuration",
                "healthCheckRetryTimeout",
                "upgradeTimeout",
                "upgradeDomainTimeout"
              ],
              "properties": {
                "failureAction": {
                  "type": "string",
                  "description": "The compensating action to perform when a Monitored upgrade encounters monitoring policy or health policy violations. Invalid indicates the failure action is invalid. Rollback specifies that the upgrade will start rolling back automatically. Manual indicates that the upgrade will switch to UnmonitoredManual upgrade mode.",
                  "enum": [
                    "Rollback",
                    "Manual"
                  ],
                  "x-ms-enum": {
                    "name": "FailureAction",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Rollback",
                        "description": "Indicates that a rollback of the upgrade will be performed by Service Fabric if the upgrade fails."
                      },
                      {
                        "value": "Manual",
                        "description": "Indicates that a manual repair will need to be performed by the administrator if the upgrade fails. Service Fabric will not proceed to the next upgrade domain automatically."
                      }
                    ]
                  }
                },
                "healthCheckWaitDuration": {
                  "type": "string",
                  "x-ms-format": "duration-constant",
                  "description": "The amount of time to wait after completing an upgrade domain before applying health policies. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                },
                "healthCheckStableDuration": {
                  "type": "string",
                  "x-ms-format": "duration-constant",
                  "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                },
                "healthCheckRetryTimeout": {
                  "type": "string",
                  "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                },
                "upgradeTimeout": {
                  "type": "string",
                  "description": "The amount of time the overall upgrade has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                },
                "upgradeDomainTimeout": {
                  "type": "string",
                  "description": "The amount of time each upgrade domain has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
                }
              }
            },
            "instanceCloseDelayDuration": {
              "type": "integer",
              "format": "int64",
              "description": "Duration in seconds, to wait before a stateless instance is closed, to allow the active requests to drain gracefully. This would be effective when the instance is closing during the application/cluster upgrade, only for those instances which have a non-zero delay duration configured in the service description."
            },
            "upgradeMode": {
              "type": "string",
              "description": "The mode used to monitor health during a rolling upgrade. The values are Monitored, and UnmonitoredAuto.",
              "enum": [
                "Monitored",
                "UnmonitoredAuto"
              ],
              "x-ms-enum": {
                "name": "RollingUpgradeMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Monitored",
                    "description": "The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 0."
                  },
                  {
                    "value": "UnmonitoredAuto",
                    "description": "The upgrade will proceed automatically without performing any health monitoring. The value is 1."
                  }
                ]
              }
            },
            "upgradeReplicaSetCheckTimeout": {
              "type": "integer",
              "format": "int64",
              "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer)."
            },
            "recreateApplication": {
              "type": "boolean",
              "description": "Determines whether the application should be recreated on update. If value=true, the rest of the upgrade policy parameters are not allowed."
            }
          }
        },
        "managedIdentities": {
          "description": "List of user assigned identities for the application, each mapped to a friendly name.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name",
              "principalId"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "The friendly name of user assigned identity."
              },
              "principalId": {
                "type": "string",
                "description": "The principal id of user assigned identity."
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ApplicationResourceUpdate": {
      "type": "object",
      "description": "The application resource for patch operations.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Azure resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Azure resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Azure resource type.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "It will be deprecated in New API, resource location depends on the parent resource.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Azure resource tags.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "etag": {
          "type": "string",
          "description": "Azure resource etag.",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)."
            }
          }
        },
        "properties": {
          "type": "object",
          "description": "The application resource properties for patch operations.",
          "properties": {
            "typeVersion": {
              "type": "string",
              "description": "The version of the application type as defined in the application manifest."
            },
            "parameters": {
              "type": "object",
              "description": "List of application parameters with overridden values from their default values specified in the application manifest.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "upgradePolicy": {
              "type": "object",
              "description": "Describes the policy for a monitored application upgrade.",
              "properties": {
                "upgradeReplicaSetCheckTimeout": {
                  "type": "string",
                  "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer)."
                },
                "forceRestart": {
                  "type": "boolean",
                  "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).",
                  "default": false
                },
                "rollingUpgradeMonitoringPolicy": {
                  "type": "object",
                  "description": "The policy used for monitoring the application upgrade",
                  "properties": {
                    "failureAction": {
                      "type": "string",
                      "description": "The activation Mode of the service package",
                      "enum": [
                        "Rollback",
                        "Manual"
                      ],
                      "x-ms-enum": {
                        "name": "ArmUpgradeFailureAction",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Rollback",
                            "description": "Indicates that a rollback of the upgrade will be performed by Service Fabric if the upgrade fails."
                          },
                          {
                            "value": "Manual",
                            "description": "Indicates that a manual repair will need to be performed by the administrator if the upgrade fails. Service Fabric will not proceed to the next upgrade domain automatically."
                          }
                        ]
                      }
                    },
                    "healthCheckWaitDuration": {
                      "type": "string",
                      "description": "The amount of time to wait after completing an upgrade domain before applying health policies. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                      "default": "0"
                    },
                    "healthCheckStableDuration": {
                      "type": "string",
                      "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                      "default": "PT0H2M0S"
                    },
                    "healthCheckRetryTimeout": {
                      "type": "string",
                      "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                      "default": "PT0H10M0S"
                    },
                    "upgradeTimeout": {
                      "type": "string",
                      "description": "The amount of time the overall upgrade has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                      "default": "P10675199DT02H48M05.4775807S"
                    },
                    "upgradeDomainTimeout": {
                      "type": "string",
                      "description": "The amount of time each upgrade domain has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                      "default": "P10675199DT02H48M05.4775807S"
                    }
                  }
                },
                "applicationHealthPolicy": {
                  "type": "object",
                  "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
                  "properties": {
                    "considerWarningAsError": {
                      "type": "boolean",
                      "description": "Indicates whether warnings are treated with the same severity as errors.",
                      "default": false
                    },
                    "maxPercentUnhealthyDeployedApplications": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.\nThe percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.\nThis is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n",
                      "default": 0
                    },
                    "defaultServiceTypeHealthPolicy": {
                      "description": "The health policy used by default to evaluate the health of a service type.",
                      "type": "object",
                      "properties": {
                        "maxPercentUnhealthyServices": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                          "default": 0,
                          "minimum": 0,
                          "maximum": 100
                        },
                        "maxPercentUnhealthyPartitionsPerService": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.\n",
                          "default": 0,
                          "minimum": 0,
                          "maximum": 100
                        },
                        "maxPercentUnhealthyReplicasPerPartition": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.\n",
                          "default": 0,
                          "minimum": 0,
                          "maximum": 100
                        }
                      }
                    },
                    "serviceTypeHealthPolicyMap": {
                      "description": "The map with service type health policy per service type name. The map is empty by default.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                        "properties": {
                          "maxPercentUnhealthyServices": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                            "default": 0,
                            "minimum": 0,
                            "maximum": 100
                          },
                          "maxPercentUnhealthyPartitionsPerService": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.\n",
                            "default": 0,
                            "minimum": 0,
                            "maximum": 100
                          },
                          "maxPercentUnhealthyReplicasPerPartition": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.\n",
                            "default": 0,
                            "minimum": 0,
                            "maximum": 100
                          }
                        }
                      }
                    }
                  }
                },
                "upgradeMode": {
                  "type": "string",
                  "description": "The mode used to monitor health during a rolling upgrade. The values are UnmonitoredAuto, UnmonitoredManual, and Monitored.",
                  "enum": [
                    "Invalid",
                    "UnmonitoredAuto",
                    "UnmonitoredManual",
                    "Monitored"
                  ],
                  "default": "Monitored",
                  "x-ms-enum": {
                    "name": "RollingUpgradeMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Invalid",
                        "description": "Indicates the upgrade mode is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                      },
                      {
                        "value": "UnmonitoredAuto",
                        "description": "The upgrade will proceed automatically without performing any health monitoring. The value is 1"
                      },
                      {
                        "value": "UnmonitoredManual",
                        "description": "The upgrade will stop after completing each upgrade domain, giving the opportunity to manually monitor health before proceeding. The value is 2"
                      },
                      {
                        "value": "Monitored",
                        "description": "The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 3"
                      }
                    ]
                  }
                },
                "recreateApplication": {
                  "type": "boolean",
                  "description": "Determines whether the application should be recreated on update. If value=true, the rest of the upgrade policy parameters are not allowed and it will result in availability loss."
                }
              }
            },
            "minimumNodes": {
              "type": "integer",
              "format": "int64",
              "description": "The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.",
              "minimum": 0
            },
            "maximumNodes": {
              "type": "integer",
              "format": "int64",
              "description": "The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.",
              "minimum": 0,
              "default": 0
            },
            "removeApplicationCapacity": {
              "type": "boolean",
              "description": "Remove the current application capacity settings."
            },
            "metrics": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "Describes capacity information for a custom resource balancing metric. This can be used to limit the total consumption of this metric by the services of this application.\n",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the metric."
                  },
                  "maximumCapacity": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The maximum node capacity for Service Fabric application.\nThis is the maximum Load for an instance of this application on a single node. Even if the capacity of node is greater than this value, Service Fabric will limit the total load of services within the application on each node to this value.\nIf set to zero, capacity for this metric is unlimited on each node.\nWhen creating a new application with application capacity defined, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.\nWhen updating existing application with application capacity, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.\n"
                  },
                  "reservationCapacity": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The node reservation capacity for Service Fabric application.\nThis is the amount of load which is reserved on nodes which have instances of this application.\nIf MinimumNodes is specified, then the product of these values will be the capacity reserved in the cluster for the application.\nIf set to zero, no capacity is reserved for this metric.\nWhen setting application capacity or when updating application capacity; this value must be smaller than or equal to MaximumCapacity for each metric.\n"
                  },
                  "totalApplicationCapacity": {
                    "description": "The total metric capacity for Service Fabric application.\nThis is the total metric capacity for this application in the cluster. Service Fabric will try to limit the sum of loads of services within the application to this value.\nWhen creating a new application with application capacity defined, the product of MaximumNodes and MaximumCapacity must always be smaller than or equal to this value.\n",
                    "type": "integer",
                    "format": "int64"
                  }
                }
              },
              "description": "List of application capacity metric description."
            },
            "managedIdentities": {
              "description": "List of user assigned identities for the application, each mapped to a friendly name.",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "name",
                  "principalId"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The friendly name of user assigned identity."
                  },
                  "principalId": {
                    "type": "string",
                    "description": "The principal id of user assigned identity."
                  }
                }
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ApplicationResourceUpdateProperties": {
      "type": "object",
      "description": "The application resource properties for patch operations.",
      "properties": {
        "typeVersion": {
          "type": "string",
          "description": "The version of the application type as defined in the application manifest."
        },
        "parameters": {
          "type": "object",
          "description": "List of application parameters with overridden values from their default values specified in the application manifest.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "upgradePolicy": {
          "type": "object",
          "description": "Describes the policy for a monitored application upgrade.",
          "properties": {
            "upgradeReplicaSetCheckTimeout": {
              "type": "string",
              "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer)."
            },
            "forceRestart": {
              "type": "boolean",
              "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).",
              "default": false
            },
            "rollingUpgradeMonitoringPolicy": {
              "type": "object",
              "description": "The policy used for monitoring the application upgrade",
              "properties": {
                "failureAction": {
                  "type": "string",
                  "description": "The activation Mode of the service package",
                  "enum": [
                    "Rollback",
                    "Manual"
                  ],
                  "x-ms-enum": {
                    "name": "ArmUpgradeFailureAction",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Rollback",
                        "description": "Indicates that a rollback of the upgrade will be performed by Service Fabric if the upgrade fails."
                      },
                      {
                        "value": "Manual",
                        "description": "Indicates that a manual repair will need to be performed by the administrator if the upgrade fails. Service Fabric will not proceed to the next upgrade domain automatically."
                      }
                    ]
                  }
                },
                "healthCheckWaitDuration": {
                  "type": "string",
                  "description": "The amount of time to wait after completing an upgrade domain before applying health policies. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                  "default": "0"
                },
                "healthCheckStableDuration": {
                  "type": "string",
                  "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                  "default": "PT0H2M0S"
                },
                "healthCheckRetryTimeout": {
                  "type": "string",
                  "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                  "default": "PT0H10M0S"
                },
                "upgradeTimeout": {
                  "type": "string",
                  "description": "The amount of time the overall upgrade has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                  "default": "P10675199DT02H48M05.4775807S"
                },
                "upgradeDomainTimeout": {
                  "type": "string",
                  "description": "The amount of time each upgrade domain has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
                  "default": "P10675199DT02H48M05.4775807S"
                }
              }
            },
            "applicationHealthPolicy": {
              "type": "object",
              "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
              "properties": {
                "considerWarningAsError": {
                  "type": "boolean",
                  "description": "Indicates whether warnings are treated with the same severity as errors.",
                  "default": false
                },
                "maxPercentUnhealthyDeployedApplications": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.\nThe percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.\nThis is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n",
                  "default": 0
                },
                "defaultServiceTypeHealthPolicy": {
                  "description": "The health policy used by default to evaluate the health of a service type.",
                  "type": "object",
                  "properties": {
                    "maxPercentUnhealthyServices": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                      "default": 0,
                      "minimum": 0,
                      "maximum": 100
                    },
                    "maxPercentUnhealthyPartitionsPerService": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.\n",
                      "default": 0,
                      "minimum": 0,
                      "maximum": 100
                    },
                    "maxPercentUnhealthyReplicasPerPartition": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.\n",
                      "default": 0,
                      "minimum": 0,
                      "maximum": 100
                    }
                  }
                },
                "serviceTypeHealthPolicyMap": {
                  "description": "The map with service type health policy per service type name. The map is empty by default.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                    "properties": {
                      "maxPercentUnhealthyServices": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                        "default": 0,
                        "minimum": 0,
                        "maximum": 100
                      },
                      "maxPercentUnhealthyPartitionsPerService": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.\n",
                        "default": 0,
                        "minimum": 0,
                        "maximum": 100
                      },
                      "maxPercentUnhealthyReplicasPerPartition": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.\n",
                        "default": 0,
                        "minimum": 0,
                        "maximum": 100
                      }
                    }
                  }
                }
              }
            },
            "upgradeMode": {
              "type": "string",
              "description": "The mode used to monitor health during a rolling upgrade. The values are UnmonitoredAuto, UnmonitoredManual, and Monitored.",
              "enum": [
                "Invalid",
                "UnmonitoredAuto",
                "UnmonitoredManual",
                "Monitored"
              ],
              "default": "Monitored",
              "x-ms-enum": {
                "name": "RollingUpgradeMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Invalid",
                    "description": "Indicates the upgrade mode is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                  },
                  {
                    "value": "UnmonitoredAuto",
                    "description": "The upgrade will proceed automatically without performing any health monitoring. The value is 1"
                  },
                  {
                    "value": "UnmonitoredManual",
                    "description": "The upgrade will stop after completing each upgrade domain, giving the opportunity to manually monitor health before proceeding. The value is 2"
                  },
                  {
                    "value": "Monitored",
                    "description": "The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 3"
                  }
                ]
              }
            },
            "recreateApplication": {
              "type": "boolean",
              "description": "Determines whether the application should be recreated on update. If value=true, the rest of the upgrade policy parameters are not allowed and it will result in availability loss."
            }
          }
        },
        "minimumNodes": {
          "type": "integer",
          "format": "int64",
          "description": "The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.",
          "minimum": 0
        },
        "maximumNodes": {
          "type": "integer",
          "format": "int64",
          "description": "The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.",
          "minimum": 0,
          "default": 0
        },
        "removeApplicationCapacity": {
          "type": "boolean",
          "description": "Remove the current application capacity settings."
        },
        "metrics": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Describes capacity information for a custom resource balancing metric. This can be used to limit the total consumption of this metric by the services of this application.\n",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the metric."
              },
              "maximumCapacity": {
                "type": "integer",
                "format": "int64",
                "description": "The maximum node capacity for Service Fabric application.\nThis is the maximum Load for an instance of this application on a single node. Even if the capacity of node is greater than this value, Service Fabric will limit the total load of services within the application on each node to this value.\nIf set to zero, capacity for this metric is unlimited on each node.\nWhen creating a new application with application capacity defined, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.\nWhen updating existing application with application capacity, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.\n"
              },
              "reservationCapacity": {
                "type": "integer",
                "format": "int64",
                "description": "The node reservation capacity for Service Fabric application.\nThis is the amount of load which is reserved on nodes which have instances of this application.\nIf MinimumNodes is specified, then the product of these values will be the capacity reserved in the cluster for the application.\nIf set to zero, no capacity is reserved for this metric.\nWhen setting application capacity or when updating application capacity; this value must be smaller than or equal to MaximumCapacity for each metric.\n"
              },
              "totalApplicationCapacity": {
                "description": "The total metric capacity for Service Fabric application.\nThis is the total metric capacity for this application in the cluster. Service Fabric will try to limit the sum of loads of services within the application to this value.\nWhen creating a new application with application capacity defined, the product of MaximumNodes and MaximumCapacity must always be smaller than or equal to this value.\n",
                "type": "integer",
                "format": "int64"
              }
            }
          },
          "description": "List of application capacity metric description."
        },
        "managedIdentities": {
          "description": "List of user assigned identities for the application, each mapped to a friendly name.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name",
              "principalId"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "The friendly name of user assigned identity."
              },
              "principalId": {
                "type": "string",
                "description": "The principal id of user assigned identity."
              }
            }
          }
        }
      }
    },
    "ApplicationTypeName": {
      "type": "string",
      "description": "The application type name as defined in the application manifest."
    },
    "ApplicationTypeParameterList": {
      "type": "object",
      "description": "List of application type parameters that can be overridden when creating or updating the application.",
      "additionalProperties": {
        "type": "string"
      }
    },
    "ApplicationTypeResource": {
      "type": "object",
      "description": "The application type name resource",
      "properties": {
        "id": {
          "type": "string",
          "description": "Azure resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Azure resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Azure resource type.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "Resource location depends on the parent resource.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Azure resource tags.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)."
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "description": "The application type name properties",
          "properties": {
            "provisioningState": {
              "readOnly": true,
              "type": "string",
              "description": "The current deployment or provisioning state, which only appears in the response."
            }
          }
        }
      }
    },
    "ApplicationTypeResourceList": {
      "type": "object",
      "description": "The list of application type names.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "The application type name resource",
            "properties": {
              "id": {
                "type": "string",
                "description": "Azure resource identifier.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "Azure resource name.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "Azure resource type.",
                "readOnly": true
              },
              "location": {
                "type": "string",
                "description": "Resource location depends on the parent resource.",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Azure resource tags.",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource."
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)."
                  }
                }
              },
              "properties": {
                "x-ms-client-flatten": true,
                "type": "object",
                "description": "The application type name properties",
                "properties": {
                  "provisioningState": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The current deployment or provisioning state, which only appears in the response."
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of application type list results if there are any.",
          "readOnly": true
        }
      }
    },
    "ApplicationTypeResourceProperties": {
      "type": "object",
      "description": "The application type name properties",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The current deployment or provisioning state, which only appears in the response."
        }
      }
    },
    "ApplicationTypeVersion": {
      "type": "string",
      "description": "The version of the application type as defined in the application manifest.\nThis name must be the full Arm Resource ID for the referenced application type version.\n"
    },
    "ApplicationTypeVersionResource": {
      "type": "object",
      "description": "An application type version resource for the specified application type name resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Azure resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Azure resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Azure resource type.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "Resource location depends on the parent resource.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Azure resource tags.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)."
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "description": "The properties of the application type version resource.",
          "required": [
            "appPackageUrl"
          ],
          "properties": {
            "provisioningState": {
              "readOnly": true,
              "type": "string",
              "description": "The current deployment or provisioning state, which only appears in the response"
            },
            "appPackageUrl": {
              "type": "string",
              "description": "The URL to the application package"
            }
          }
        }
      }
    },
    "ApplicationTypeVersionResourceList": {
      "type": "object",
      "description": "The list of application type version resources for the specified application type name resource.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "An application type version resource for the specified application type name resource.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Azure resource identifier.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "Azure resource name.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "Azure resource type.",
                "readOnly": true
              },
              "location": {
                "type": "string",
                "description": "Resource location depends on the parent resource.",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Azure resource tags.",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource."
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)."
                  }
                }
              },
              "properties": {
                "x-ms-client-flatten": true,
                "type": "object",
                "description": "The properties of the application type version resource.",
                "required": [
                  "appPackageUrl"
                ],
                "properties": {
                  "provisioningState": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The current deployment or provisioning state, which only appears in the response"
                  },
                  "appPackageUrl": {
                    "type": "string",
                    "description": "The URL to the application package"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of application type version list results if there are any.",
          "readOnly": true
        }
      }
    },
    "ApplicationTypeVersionResourceProperties": {
      "type": "object",
      "description": "The properties of the application type version resource.",
      "required": [
        "appPackageUrl"
      ],
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The current deployment or provisioning state, which only appears in the response"
        },
        "appPackageUrl": {
          "type": "string",
          "description": "The URL to the application package"
        }
      }
    },
    "ApplicationUpgradePolicy": {
      "type": "object",
      "description": "Describes the policy for a monitored application upgrade.",
      "properties": {
        "applicationHealthPolicy": {
          "type": "object",
          "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
          "required": [
            "considerWarningAsError",
            "maxPercentUnhealthyDeployedApplications"
          ],
          "properties": {
            "considerWarningAsError": {
              "type": "boolean",
              "description": "Indicates whether warnings are treated with the same severity as errors."
            },
            "maxPercentUnhealthyDeployedApplications": {
              "type": "integer",
              "format": "int32",
              "description": "The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.\nThe percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.\nThis is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n"
            },
            "defaultServiceTypeHealthPolicy": {
              "description": "The health policy used by default to evaluate the health of a service type.",
              "type": "object",
              "required": [
                "maxPercentUnhealthyServices",
                "maxPercentUnhealthyPartitionsPerService",
                "maxPercentUnhealthyReplicasPerPartition"
              ],
              "properties": {
                "maxPercentUnhealthyServices": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum allowed percentage of unhealthy services.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services.\n",
                  "minimum": 0,
                  "maximum": 100
                },
                "maxPercentUnhealthyPartitionsPerService": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum allowed percentage of unhealthy partitions per service.\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions.\n",
                  "minimum": 0,
                  "maximum": 100
                },
                "maxPercentUnhealthyReplicasPerPartition": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum allowed percentage of unhealthy replicas per partition.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas.\n",
                  "minimum": 0,
                  "maximum": 100
                }
              }
            },
            "serviceTypeHealthPolicyMap": {
              "description": "The map with service type health policy per service type name. The map is empty by default.",
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                "required": [
                  "maxPercentUnhealthyServices",
                  "maxPercentUnhealthyPartitionsPerService",
                  "maxPercentUnhealthyReplicasPerPartition"
                ],
                "properties": {
                  "maxPercentUnhealthyServices": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The maximum allowed percentage of unhealthy services.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services.\n",
                    "minimum": 0,
                    "maximum": 100
                  },
                  "maxPercentUnhealthyPartitionsPerService": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The maximum allowed percentage of unhealthy partitions per service.\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions.\n",
                    "minimum": 0,
                    "maximum": 100
                  },
                  "maxPercentUnhealthyReplicasPerPartition": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The maximum allowed percentage of unhealthy replicas per partition.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas.\n",
                    "minimum": 0,
                    "maximum": 100
                  }
                }
              }
            }
          }
        },
        "forceRestart": {
          "type": "boolean",
          "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).",
          "default": false
        },
        "rollingUpgradeMonitoringPolicy": {
          "type": "object",
          "description": "The policy used for monitoring the application upgrade",
          "required": [
            "failureAction",
            "healthCheckWaitDuration",
            "healthCheckStableDuration",
            "healthCheckRetryTimeout",
            "upgradeTimeout",
            "upgradeDomainTimeout"
          ],
          "properties": {
            "failureAction": {
              "type": "string",
              "description": "The compensating action to perform when a Monitored upgrade encounters monitoring policy or health policy violations. Invalid indicates the failure action is invalid. Rollback specifies that the upgrade will start rolling back automatically. Manual indicates that the upgrade will switch to UnmonitoredManual upgrade mode.",
              "enum": [
                "Rollback",
                "Manual"
              ],
              "x-ms-enum": {
                "name": "FailureAction",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Rollback",
                    "description": "Indicates that a rollback of the upgrade will be performed by Service Fabric if the upgrade fails."
                  },
                  {
                    "value": "Manual",
                    "description": "Indicates that a manual repair will need to be performed by the administrator if the upgrade fails. Service Fabric will not proceed to the next upgrade domain automatically."
                  }
                ]
              }
            },
            "healthCheckWaitDuration": {
              "type": "string",
              "x-ms-format": "duration-constant",
              "description": "The amount of time to wait after completing an upgrade domain before applying health policies. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
            },
            "healthCheckStableDuration": {
              "type": "string",
              "x-ms-format": "duration-constant",
              "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
            },
            "healthCheckRetryTimeout": {
              "type": "string",
              "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
            },
            "upgradeTimeout": {
              "type": "string",
              "description": "The amount of time the overall upgrade has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
            },
            "upgradeDomainTimeout": {
              "type": "string",
              "description": "The amount of time each upgrade domain has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
            }
          }
        },
        "instanceCloseDelayDuration": {
          "type": "integer",
          "format": "int64",
          "description": "Duration in seconds, to wait before a stateless instance is closed, to allow the active requests to drain gracefully. This would be effective when the instance is closing during the application/cluster upgrade, only for those instances which have a non-zero delay duration configured in the service description."
        },
        "upgradeMode": {
          "type": "string",
          "description": "The mode used to monitor health during a rolling upgrade. The values are Monitored, and UnmonitoredAuto.",
          "enum": [
            "Monitored",
            "UnmonitoredAuto"
          ],
          "x-ms-enum": {
            "name": "RollingUpgradeMode",
            "modelAsString": true,
            "values": [
              {
                "value": "Monitored",
                "description": "The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 0."
              },
              {
                "value": "UnmonitoredAuto",
                "description": "The upgrade will proceed automatically without performing any health monitoring. The value is 1."
              }
            ]
          }
        },
        "upgradeReplicaSetCheckTimeout": {
          "type": "integer",
          "format": "int64",
          "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer)."
        },
        "recreateApplication": {
          "type": "boolean",
          "description": "Determines whether the application should be recreated on update. If value=true, the rest of the upgrade policy parameters are not allowed."
        }
      }
    },
    "ApplicationUserAssignedIdentity": {
      "type": "object",
      "required": [
        "name",
        "principalId"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The friendly name of user assigned identity."
        },
        "principalId": {
          "type": "string",
          "description": "The principal id of user assigned identity."
        }
      }
    },
    "ArmApplicationHealthPolicy": {
      "type": "object",
      "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
      "properties": {
        "considerWarningAsError": {
          "type": "boolean",
          "description": "Indicates whether warnings are treated with the same severity as errors.",
          "default": false
        },
        "maxPercentUnhealthyDeployedApplications": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.\nThe percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.\nThis is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n",
          "default": 0
        },
        "defaultServiceTypeHealthPolicy": {
          "description": "The health policy used by default to evaluate the health of a service type.",
          "type": "object",
          "properties": {
            "maxPercentUnhealthyServices": {
              "type": "integer",
              "format": "int32",
              "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
              "default": 0,
              "minimum": 0,
              "maximum": 100
            },
            "maxPercentUnhealthyPartitionsPerService": {
              "type": "integer",
              "format": "int32",
              "description": "The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.\n",
              "default": 0,
              "minimum": 0,
              "maximum": 100
            },
            "maxPercentUnhealthyReplicasPerPartition": {
              "type": "integer",
              "format": "int32",
              "description": "The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.\n",
              "default": 0,
              "minimum": 0,
              "maximum": 100
            }
          }
        },
        "serviceTypeHealthPolicyMap": {
          "description": "The map with service type health policy per service type name. The map is empty by default.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
            "properties": {
              "maxPercentUnhealthyServices": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                "default": 0,
                "minimum": 0,
                "maximum": 100
              },
              "maxPercentUnhealthyPartitionsPerService": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.\n",
                "default": 0,
                "minimum": 0,
                "maximum": 100
              },
              "maxPercentUnhealthyReplicasPerPartition": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.\n",
                "default": 0,
                "minimum": 0,
                "maximum": 100
              }
            }
          }
        }
      }
    },
    "ArmRollingUpgradeMonitoringPolicy": {
      "type": "object",
      "description": "The policy used for monitoring the application upgrade",
      "properties": {
        "failureAction": {
          "type": "string",
          "description": "The activation Mode of the service package",
          "enum": [
            "Rollback",
            "Manual"
          ],
          "x-ms-enum": {
            "name": "ArmUpgradeFailureAction",
            "modelAsString": true,
            "values": [
              {
                "value": "Rollback",
                "description": "Indicates that a rollback of the upgrade will be performed by Service Fabric if the upgrade fails."
              },
              {
                "value": "Manual",
                "description": "Indicates that a manual repair will need to be performed by the administrator if the upgrade fails. Service Fabric will not proceed to the next upgrade domain automatically."
              }
            ]
          }
        },
        "healthCheckWaitDuration": {
          "type": "string",
          "description": "The amount of time to wait after completing an upgrade domain before applying health policies. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
          "default": "0"
        },
        "healthCheckStableDuration": {
          "type": "string",
          "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
          "default": "PT0H2M0S"
        },
        "healthCheckRetryTimeout": {
          "type": "string",
          "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
          "default": "PT0H10M0S"
        },
        "upgradeTimeout": {
          "type": "string",
          "description": "The amount of time the overall upgrade has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
          "default": "P10675199DT02H48M05.4775807S"
        },
        "upgradeDomainTimeout": {
          "type": "string",
          "description": "The amount of time each upgrade domain has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.",
          "default": "P10675199DT02H48M05.4775807S"
        }
      }
    },
    "ArmServiceTypeHealthPolicy": {
      "type": "object",
      "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
      "properties": {
        "maxPercentUnhealthyServices": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
          "default": 0,
          "minimum": 0,
          "maximum": 100
        },
        "maxPercentUnhealthyPartitionsPerService": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.\n",
          "default": 0,
          "minimum": 0,
          "maximum": 100
        },
        "maxPercentUnhealthyReplicasPerPartition": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.\n",
          "default": 0,
          "minimum": 0,
          "maximum": 100
        }
      }
    },
    "ArmServiceTypeHealthPolicyMap": {
      "type": "object",
      "description": "Defines a ServiceTypeHealthPolicy per service type name.\n\nThe entries in the map replace the default service type health policy for each specified service type.\nFor example, in an application that contains both a stateless gateway service type and a stateful engine service type, the health policies for the stateless and stateful services can be configured differently.\nWith policy per service type, there's more granular control of the health of the service.\n\nIf no policy is specified for a service type name, the DefaultServiceTypeHealthPolicy is used for evaluation.\n",
      "additionalProperties": {
        "type": "object",
        "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
        "properties": {
          "maxPercentUnhealthyServices": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
            "default": 0,
            "minimum": 0,
            "maximum": 100
          },
          "maxPercentUnhealthyPartitionsPerService": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.\n",
            "default": 0,
            "minimum": 0,
            "maximum": 100
          },
          "maxPercentUnhealthyReplicasPerPartition": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.\n",
            "default": 0,
            "minimum": 0,
            "maximum": 100
          }
        }
      }
    },
    "CorrelationSchemeList": {
      "type": "array",
      "items": {
        "type": "object",
        "description": "Creates a particular correlation between services.",
        "required": [
          "scheme",
          "serviceName"
        ],
        "properties": {
          "scheme": {
            "description": "The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.",
            "type": "string",
            "enum": [
              "AlignedAffinity",
              "NonAlignedAffinity"
            ],
            "x-ms-enum": {
              "name": "ServiceCorrelationScheme",
              "modelAsString": true,
              "values": [
                {
                  "value": "AlignedAffinity",
                  "description": "Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 0."
                },
                {
                  "value": "NonAlignedAffinity",
                  "description": "Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 1."
                }
              ]
            }
          },
          "serviceName": {
            "description": "The Arm Resource ID of the service that the correlation relationship is established with.",
            "type": "string",
            "x-sf-clientlib": {
              "typeName": "ServiceName"
            }
          }
        }
      },
      "x-ms-identifiers": [
        "serviceName"
      ],
      "description": "A list that describes the correlation of the service with other services."
    },
    "ForceRestart": {
      "type": "boolean",
      "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).",
      "default": false
    },
    "HealthCheckRetryTimeout": {
      "type": "string",
      "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
    },
    "HealthCheckStableDuration": {
      "type": "string",
      "x-ms-format": "duration-constant",
      "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
    },
    "HealthCheckWaitDuration": {
      "type": "string",
      "x-ms-format": "duration-constant",
      "description": "The amount of time to wait after completing an upgrade domain before applying health policies. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
    },
    "ManagedIdentity": {
      "type": "object",
      "description": "Describes the managed identities for an Azure resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "readOnly": true,
          "description": "The principal id of the managed identity. This property will only be provided for a system assigned identity."
        },
        "tenantId": {
          "type": "string",
          "readOnly": true,
          "description": "The tenant id of the managed identity. This property will only be provided for a system assigned identity."
        },
        "type": {
          "type": "string",
          "description": "The type of managed identity for the resource.",
          "enum": [
            "None",
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned, UserAssigned"
          ],
          "x-ms-enum": {
            "name": "ManagedIdentityType",
            "modelAsString": false,
            "values": [
              {
                "value": "None",
                "description": "Indicates that no identity is associated with the resource."
              },
              {
                "value": "SystemAssigned",
                "description": "Indicates that system assigned identity is associated with the resource."
              },
              {
                "value": "UserAssigned",
                "description": "Indicates that user assigned identity is associated with the resource."
              },
              {
                "value": "SystemAssigned, UserAssigned",
                "description": "Indicates that both system assigned and user assigned identity are associated with the resource."
              }
            ]
          }
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\n",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "principalId": {
                "type": "string",
                "readOnly": true,
                "description": "The principal id of user assigned identity."
              },
              "clientId": {
                "type": "string",
                "readOnly": true,
                "description": "The client id of user assigned identity."
              }
            }
          }
        }
      }
    },
    "ManagedIdentityType": {
      "type": "string",
      "description": "The type of managed identity for the resource.",
      "enum": [
        "None",
        "SystemAssigned",
        "UserAssigned",
        "SystemAssigned, UserAssigned"
      ],
      "x-ms-enum": {
        "name": "ManagedIdentityType",
        "modelAsString": false,
        "values": [
          {
            "value": "None",
            "description": "Indicates that no identity is associated with the resource."
          },
          {
            "value": "SystemAssigned",
            "description": "Indicates that system assigned identity is associated with the resource."
          },
          {
            "value": "UserAssigned",
            "description": "Indicates that user assigned identity is associated with the resource."
          },
          {
            "value": "SystemAssigned, UserAssigned",
            "description": "Indicates that both system assigned and user assigned identity are associated with the resource."
          }
        ]
      }
    },
    "MoveCost": {
      "type": "string",
      "description": "Specifies the move cost for the service.",
      "enum": [
        "Zero",
        "Low",
        "Medium",
        "High"
      ],
      "x-ms-enum": {
        "name": "MoveCost",
        "modelAsString": true,
        "values": [
          {
            "value": "Zero",
            "description": "Zero move cost. This value is zero."
          },
          {
            "value": "Low",
            "description": "Specifies the move cost of the service as Low. The value is 1."
          },
          {
            "value": "Medium",
            "description": "Specifies the move cost of the service as Medium. The value is 2."
          },
          {
            "value": "High",
            "description": "Specifies the move cost of the service as High. The value is 3."
          }
        ]
      }
    },
    "NamedPartitionSchemeDescription": {
      "type": "object",
      "description": "Describes the named partition scheme of the service.",
      "allOf": [
        {
          "type": "object",
          "discriminator": "partitionScheme",
          "description": "Describes how the service is partitioned.",
          "required": [
            "partitionScheme"
          ],
          "properties": {
            "partitionScheme": {
              "description": "Specifies how the service is partitioned.",
              "type": "string",
              "enum": [
                "Invalid",
                "Singleton",
                "UniformInt64Range",
                "Named"
              ],
              "x-ms-enum": {
                "name": "PartitionScheme",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Invalid",
                    "description": "Indicates the partition kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                  },
                  {
                    "value": "Singleton",
                    "description": "Indicates that the partition is based on string names, and is a SingletonPartitionSchemeDescription object, The value is 1."
                  },
                  {
                    "value": "UniformInt64Range",
                    "description": "Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionSchemeDescription object. The value is 2."
                  },
                  {
                    "value": "Named",
                    "description": "Indicates that the partition is based on string names, and is a NamedPartitionSchemeDescription object. The value is 3"
                  }
                ]
              }
            }
          }
        },
        {
          "type": "object",
          "description": "NamedPartitionSchemeDescription"
        }
      ],
      "x-ms-discriminator-value": "Named",
      "required": [
        "count",
        "names"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of partitions."
        },
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Array of size specified by the ‘count’ parameter, for the names of the partitions."
        }
      }
    },
    "PartitionScheme": {
      "type": "string",
      "description": "Enumerates the ways that a service can be partitioned.",
      "enum": [
        "Singleton",
        "UniformInt64Range",
        "Named"
      ],
      "x-ms-enum": {
        "name": "PartitionScheme",
        "modelAsString": true,
        "values": [
          {
            "value": "Singleton",
            "description": "Indicates that the partition is based on string names, and is a SingletonPartitionScheme object, The value is 0."
          },
          {
            "value": "UniformInt64Range",
            "description": "Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionScheme object. The value is 1."
          },
          {
            "value": "Named",
            "description": "Indicates that the partition is based on string names, and is a NamedPartitionScheme object. The value is 2."
          }
        ]
      }
    },
    "PartitionSchemeDescription": {
      "type": "object",
      "discriminator": "partitionScheme",
      "description": "Describes how the service is partitioned.",
      "required": [
        "partitionScheme"
      ],
      "properties": {
        "partitionScheme": {
          "description": "Specifies how the service is partitioned.",
          "type": "string",
          "enum": [
            "Invalid",
            "Singleton",
            "UniformInt64Range",
            "Named"
          ],
          "x-ms-enum": {
            "name": "PartitionScheme",
            "modelAsString": true,
            "values": [
              {
                "value": "Invalid",
                "description": "Indicates the partition kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
              },
              {
                "value": "Singleton",
                "description": "Indicates that the partition is based on string names, and is a SingletonPartitionSchemeDescription object, The value is 1."
              },
              {
                "value": "UniformInt64Range",
                "description": "Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionSchemeDescription object. The value is 2."
              },
              {
                "value": "Named",
                "description": "Indicates that the partition is based on string names, and is a NamedPartitionSchemeDescription object. The value is 3"
              }
            ]
          }
        }
      }
    },
    "ProxyResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Azure resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Azure resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Azure resource type.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "Resource location depends on the parent resource.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Azure resource tags.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)."
            }
          }
        }
      },
      "description": "The resource model definition for proxy-only resource.",
      "x-ms-azure-resource": true
    },
    "RollingUpgradeMode": {
      "type": "string",
      "description": "The mode used to monitor health during a rolling upgrade. The values are Monitored, and UnmonitoredAuto.",
      "enum": [
        "Monitored",
        "UnmonitoredAuto"
      ],
      "x-ms-enum": {
        "name": "RollingUpgradeMode",
        "modelAsString": true,
        "values": [
          {
            "value": "Monitored",
            "description": "The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 0."
          },
          {
            "value": "UnmonitoredAuto",
            "description": "The upgrade will proceed automatically without performing any health monitoring. The value is 1."
          }
        ]
      }
    },
    "ServiceCorrelationDescription": {
      "type": "object",
      "description": "Creates a particular correlation between services.",
      "required": [
        "scheme",
        "serviceName"
      ],
      "properties": {
        "scheme": {
          "description": "The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.",
          "type": "string",
          "enum": [
            "Invalid",
            "Affinity",
            "AlignedAffinity",
            "NonAlignedAffinity"
          ],
          "x-ms-enum": {
            "name": "ServiceCorrelationScheme",
            "modelAsString": true,
            "values": [
              {
                "value": "Invalid",
                "description": "An invalid correlation scheme. Cannot be used. The value is zero."
              },
              {
                "value": "Affinity",
                "description": "Indicates that this service has an affinity relationship with another service. Provided for backwards compatibility, consider preferring the Aligned or NonAlignedAffinity options. The value is 1."
              },
              {
                "value": "AlignedAffinity",
                "description": "Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 2."
              },
              {
                "value": "NonAlignedAffinity",
                "description": "Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 3."
              }
            ]
          }
        },
        "serviceName": {
          "description": "The name of the service that the correlation relationship is established with.",
          "type": "string"
        }
      }
    },
    "ServiceCorrelationScheme": {
      "type": "string",
      "description": "The service correlation scheme.",
      "enum": [
        "AlignedAffinity",
        "NonAlignedAffinity"
      ],
      "x-ms-enum": {
        "name": "ServiceCorrelationScheme",
        "modelAsString": true,
        "values": [
          {
            "value": "AlignedAffinity",
            "description": "Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 0."
          },
          {
            "value": "NonAlignedAffinity",
            "description": "Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 1."
          }
        ]
      }
    },
    "ServiceKind": {
      "type": "string",
      "description": "The kind of service (Stateless or Stateful).",
      "enum": [
        "Stateless",
        "Stateful"
      ],
      "x-ms-enum": {
        "name": "ServiceKind",
        "modelAsString": true,
        "values": [
          {
            "value": "Stateless",
            "description": "Does not use Service Fabric to make its state highly available or reliable. The value is 0."
          },
          {
            "value": "Stateful",
            "description": "Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 1."
          }
        ]
      }
    },
    "ServiceLoadMetricDescription": {
      "type": "object",
      "description": "Specifies a metric to load balance a service during runtime.",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive."
        },
        "weight": {
          "description": "The service load metric relative weight, compared to other metrics configured for this service, as a number.",
          "type": "string",
          "enum": [
            "Zero",
            "Low",
            "Medium",
            "High"
          ],
          "x-ms-enum": {
            "name": "ServiceLoadMetricWeight",
            "modelAsString": true,
            "values": [
              {
                "value": "Zero",
                "description": "Disables resource balancing for this metric. This value is zero."
              },
              {
                "value": "Low",
                "description": "Specifies the metric weight of the service load as Low. The value is 1."
              },
              {
                "value": "Medium",
                "description": "Specifies the metric weight of the service load as Medium. The value is 2."
              },
              {
                "value": "High",
                "description": "Specifies the metric weight of the service load as High. The value is 3."
              }
            ]
          }
        },
        "primaryDefaultLoad": {
          "type": "integer",
          "format": "int32",
          "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica."
        },
        "secondaryDefaultLoad": {
          "type": "integer",
          "format": "int32",
          "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica."
        },
        "defaultLoad": {
          "type": "integer",
          "format": "int32",
          "description": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric."
        }
      }
    },
    "ServiceLoadMetricsList": {
      "type": "array",
      "items": {
        "type": "object",
        "description": "Specifies a metric to load balance a service during runtime.",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive."
          },
          "weight": {
            "description": "The service load metric relative weight, compared to other metrics configured for this service, as a number.",
            "type": "string",
            "enum": [
              "Zero",
              "Low",
              "Medium",
              "High"
            ],
            "x-ms-enum": {
              "name": "ServiceLoadMetricWeight",
              "modelAsString": true,
              "values": [
                {
                  "value": "Zero",
                  "description": "Disables resource balancing for this metric. This value is zero."
                },
                {
                  "value": "Low",
                  "description": "Specifies the metric weight of the service load as Low. The value is 1."
                },
                {
                  "value": "Medium",
                  "description": "Specifies the metric weight of the service load as Medium. The value is 2."
                },
                {
                  "value": "High",
                  "description": "Specifies the metric weight of the service load as High. The value is 3."
                }
              ]
            }
          },
          "primaryDefaultLoad": {
            "type": "integer",
            "format": "int32",
            "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica."
          },
          "secondaryDefaultLoad": {
            "type": "integer",
            "format": "int32",
            "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica."
          },
          "defaultLoad": {
            "type": "integer",
            "format": "int32",
            "description": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric."
          }
        }
      },
      "x-ms-identifiers": [],
      "description": "The service load metrics is given as an array of ServiceLoadMetric objects."
    },
    "ServiceLoadMetricWeight": {
      "type": "string",
      "description": "Determines the metric weight relative to the other metrics that are configured for this service. During runtime, if two metrics end up in conflict, the Cluster Resource Manager prefers the metric with the higher weight.",
      "enum": [
        "Zero",
        "Low",
        "Medium",
        "High"
      ],
      "x-ms-enum": {
        "name": "ServiceLoadMetricWeight",
        "modelAsString": true,
        "values": [
          {
            "value": "Zero",
            "description": "Disables resource balancing for this metric. This value is zero."
          },
          {
            "value": "Low",
            "description": "Specifies the metric weight of the service load as Low. The value is 1."
          },
          {
            "value": "Medium",
            "description": "Specifies the metric weight of the service load as Medium. The value is 2."
          },
          {
            "value": "High",
            "description": "Specifies the metric weight of the service load as High. The value is 3."
          }
        ]
      }
    },
    "ServiceName": {
      "type": "string",
      "description": "The full ARM Resource ID describing the service resource",
      "x-sf-clientlib": {
        "typeName": "ServiceName"
      }
    },
    "ServicePlacementPoliciesList": {
      "type": "array",
      "items": {
        "type": "object",
        "discriminator": "type",
        "description": "Describes the policy to be used for placement of a Service Fabric service.",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of placement policy for a service fabric service. Following are the possible values.",
            "enum": [
              "InvalidDomain",
              "RequiredDomain",
              "PreferredPrimaryDomain",
              "RequiredDomainDistribution",
              "NonPartiallyPlaceService"
            ],
            "x-ms-enum": {
              "name": "ServicePlacementPolicyType",
              "modelAsString": true,
              "values": [
                {
                  "value": "InvalidDomain",
                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 0."
                },
                {
                  "value": "RequiredDomain",
                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 1."
                },
                {
                  "value": "PreferredPrimaryDomain",
                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 2."
                },
                {
                  "value": "RequiredDomainDistribution",
                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 3."
                },
                {
                  "value": "NonPartiallyPlaceService",
                  "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 4."
                }
              ]
            }
          }
        }
      },
      "x-ms-identifiers": [],
      "description": "A list that describes the correlation of the service with other services."
    },
    "ServicePlacementPolicyDescription": {
      "type": "object",
      "discriminator": "type",
      "description": "Describes the policy to be used for placement of a Service Fabric service.",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of placement policy for a service fabric service. Following are the possible values.",
          "enum": [
            "Invalid",
            "InvalidDomain",
            "RequiredDomain",
            "PreferredPrimaryDomain",
            "RequiredDomainDistribution",
            "NonPartiallyPlaceService"
          ],
          "x-ms-enum": {
            "name": "ServicePlacementPolicyType",
            "modelAsString": true,
            "values": [
              {
                "value": "Invalid",
                "description": "Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
              },
              {
                "value": "InvalidDomain",
                "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1."
              },
              {
                "value": "RequiredDomain",
                "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2."
              },
              {
                "value": "PreferredPrimaryDomain",
                "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3."
              },
              {
                "value": "RequiredDomainDistribution",
                "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4."
              },
              {
                "value": "NonPartiallyPlaceService",
                "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5."
              }
            ]
          }
        }
      }
    },
    "ServicePlacementPolicyType": {
      "type": "string",
      "description": "The type of placement policy for a service fabric service. Following are the possible values.",
      "enum": [
        "InvalidDomain",
        "RequiredDomain",
        "PreferredPrimaryDomain",
        "RequiredDomainDistribution",
        "NonPartiallyPlaceService"
      ],
      "x-ms-enum": {
        "name": "ServicePlacementPolicyType",
        "modelAsString": true,
        "values": [
          {
            "value": "InvalidDomain",
            "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 0."
          },
          {
            "value": "RequiredDomain",
            "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 1."
          },
          {
            "value": "PreferredPrimaryDomain",
            "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 2."
          },
          {
            "value": "RequiredDomainDistribution",
            "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 3."
          },
          {
            "value": "NonPartiallyPlaceService",
            "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 4."
          }
        ]
      }
    },
    "ServiceResource": {
      "type": "object",
      "description": "The service resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Azure resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Azure resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Azure resource type.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "Resource location depends on the parent resource.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Azure resource tags.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)."
            }
          }
        },
        "properties": {
          "type": "object",
          "description": "The service resource properties.",
          "required": [
            "serviceKind",
            "serviceTypeName",
            "partitionDescription"
          ],
          "discriminator": "serviceKind",
          "properties": {
            "placementConstraints": {
              "type": "string",
              "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\"."
            },
            "correlationScheme": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "Creates a particular correlation between services.",
                "required": [
                  "scheme",
                  "serviceName"
                ],
                "properties": {
                  "scheme": {
                    "description": "The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.",
                    "type": "string",
                    "enum": [
                      "AlignedAffinity",
                      "NonAlignedAffinity"
                    ],
                    "x-ms-enum": {
                      "name": "ServiceCorrelationScheme",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "AlignedAffinity",
                          "description": "Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 0."
                        },
                        {
                          "value": "NonAlignedAffinity",
                          "description": "Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 1."
                        }
                      ]
                    }
                  },
                  "serviceName": {
                    "description": "The Arm Resource ID of the service that the correlation relationship is established with.",
                    "type": "string",
                    "x-sf-clientlib": {
                      "typeName": "ServiceName"
                    }
                  }
                }
              },
              "x-ms-identifiers": [
                "serviceName"
              ],
              "description": "A list that describes the correlation of the service with other services."
            },
            "serviceLoadMetrics": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "Specifies a metric to load balance a service during runtime.",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive."
                  },
                  "weight": {
                    "description": "The service load metric relative weight, compared to other metrics configured for this service, as a number.",
                    "type": "string",
                    "enum": [
                      "Zero",
                      "Low",
                      "Medium",
                      "High"
                    ],
                    "x-ms-enum": {
                      "name": "ServiceLoadMetricWeight",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Zero",
                          "description": "Disables resource balancing for this metric. This value is zero."
                        },
                        {
                          "value": "Low",
                          "description": "Specifies the metric weight of the service load as Low. The value is 1."
                        },
                        {
                          "value": "Medium",
                          "description": "Specifies the metric weight of the service load as Medium. The value is 2."
                        },
                        {
                          "value": "High",
                          "description": "Specifies the metric weight of the service load as High. The value is 3."
                        }
                      ]
                    }
                  },
                  "primaryDefaultLoad": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica."
                  },
                  "secondaryDefaultLoad": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica."
                  },
                  "defaultLoad": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric."
                  }
                }
              },
              "x-ms-identifiers": [],
              "description": "The service load metrics is given as an array of ServiceLoadMetric objects."
            },
            "servicePlacementPolicies": {
              "type": "array",
              "items": {
                "type": "object",
                "discriminator": "type",
                "description": "Describes the policy to be used for placement of a Service Fabric service.",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The type of placement policy for a service fabric service. Following are the possible values.",
                    "enum": [
                      "InvalidDomain",
                      "RequiredDomain",
                      "PreferredPrimaryDomain",
                      "RequiredDomainDistribution",
                      "NonPartiallyPlaceService"
                    ],
                    "x-ms-enum": {
                      "name": "ServicePlacementPolicyType",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "InvalidDomain",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 0."
                        },
                        {
                          "value": "RequiredDomain",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 1."
                        },
                        {
                          "value": "PreferredPrimaryDomain",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 2."
                        },
                        {
                          "value": "RequiredDomainDistribution",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 3."
                        },
                        {
                          "value": "NonPartiallyPlaceService",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 4."
                        }
                      ]
                    }
                  }
                }
              },
              "x-ms-identifiers": [],
              "description": "A list that describes the correlation of the service with other services."
            },
            "defaultMoveCost": {
              "type": "string",
              "description": "Specifies the move cost for the service.",
              "enum": [
                "Zero",
                "Low",
                "Medium",
                "High"
              ],
              "x-ms-enum": {
                "name": "MoveCost",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Zero",
                    "description": "Zero move cost. This value is zero."
                  },
                  {
                    "value": "Low",
                    "description": "Specifies the move cost of the service as Low. The value is 1."
                  },
                  {
                    "value": "Medium",
                    "description": "Specifies the move cost of the service as Medium. The value is 2."
                  },
                  {
                    "value": "High",
                    "description": "Specifies the move cost of the service as High. The value is 3."
                  }
                ]
              }
            },
            "scalingPolicies": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "Specifies a metric to load balance a service during runtime.",
                "required": [
                  "scalingMechanism",
                  "scalingTrigger"
                ],
                "properties": {
                  "scalingMechanism": {
                    "description": "Specifies the mechanism associated with this scaling policy",
                    "type": "object",
                    "discriminator": "kind",
                    "required": [
                      "kind"
                    ],
                    "properties": {
                      "kind": {
                        "description": "Specifies the mechanism associated with this scaling policy.",
                        "type": "string",
                        "enum": [
                          "ScalePartitionInstanceCount",
                          "AddRemoveIncrementalNamedPartition"
                        ],
                        "x-ms-enum": {
                          "name": "ServiceScalingMechanismKind",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "ScalePartitionInstanceCount",
                              "description": "Represents a scaling mechanism for adding or removing instances of stateless service partition. The value is 0."
                            },
                            {
                              "value": "AddRemoveIncrementalNamedPartition",
                              "description": "Represents a scaling mechanism for adding or removing named partitions of a stateless service. The value is 1."
                            }
                          ]
                        }
                      }
                    }
                  },
                  "scalingTrigger": {
                    "description": "Specifies the trigger associated with this scaling policy.",
                    "type": "object",
                    "discriminator": "kind",
                    "required": [
                      "kind"
                    ],
                    "properties": {
                      "kind": {
                        "description": "Specifies the trigger associated with this scaling policy.",
                        "type": "string",
                        "enum": [
                          "AveragePartitionLoadTrigger",
                          "AverageServiceLoadTrigger"
                        ],
                        "x-ms-enum": {
                          "name": "ServiceScalingTriggerKind",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "AveragePartitionLoadTrigger",
                              "description": "Represents a scaling trigger related to an average load of a metric/resource of a partition. The value is 0."
                            },
                            {
                              "value": "AverageServiceLoadTrigger",
                              "description": "Represents a scaling policy related to an average load of a metric/resource of a service. The value is 1."
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "x-ms-identifiers": [],
              "description": "Scaling policies for this service."
            },
            "provisioningState": {
              "readOnly": true,
              "type": "string",
              "description": "The current deployment or provisioning state, which only appears in the response"
            },
            "serviceKind": {
              "type": "string",
              "description": "The kind of service (Stateless or Stateful).",
              "enum": [
                "Stateless",
                "Stateful"
              ],
              "x-ms-enum": {
                "name": "ServiceKind",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Stateless",
                    "description": "Does not use Service Fabric to make its state highly available or reliable. The value is 0."
                  },
                  {
                    "value": "Stateful",
                    "description": "Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 1."
                  }
                ]
              }
            },
            "serviceTypeName": {
              "type": "string",
              "description": "The name of the service type"
            },
            "partitionDescription": {
              "type": "object",
              "discriminator": "partitionScheme",
              "description": "Describes how the service is partitioned.",
              "required": [
                "partitionScheme"
              ],
              "properties": {
                "partitionScheme": {
                  "description": "Specifies how the service is partitioned.",
                  "type": "string",
                  "enum": [
                    "Singleton",
                    "UniformInt64Range",
                    "Named"
                  ],
                  "x-ms-enum": {
                    "name": "PartitionScheme",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Singleton",
                        "description": "Indicates that the partition is based on string names, and is a SingletonPartitionScheme object, The value is 0."
                      },
                      {
                        "value": "UniformInt64Range",
                        "description": "Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionScheme object. The value is 1."
                      },
                      {
                        "value": "Named",
                        "description": "Indicates that the partition is based on string names, and is a NamedPartitionScheme object. The value is 2."
                      }
                    ]
                  }
                }
              }
            },
            "servicePackageActivationMode": {
              "type": "string",
              "description": "The activation Mode of the service package",
              "enum": [
                "SharedProcess",
                "ExclusiveProcess"
              ],
              "x-ms-enum": {
                "name": "ServicePackageActivationMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "SharedProcess",
                    "description": "Indicates the application package activation mode will use shared process."
                  },
                  {
                    "value": "ExclusiveProcess",
                    "description": "Indicates the application package activation mode will use exclusive process."
                  }
                ]
              }
            },
            "serviceDnsName": {
              "type": "string",
              "description": "Dns name used for the service. If this is specified, then the DNS name can be used to return the IP addresses of service endpoints for application layer protocols (e.g., HTTP).\nWhen updating serviceDnsName, old name may be temporarily resolvable. However, rely on new name.\nWhen removing serviceDnsName, removed name may temporarily be resolvable. Do not rely on the name being unresolvable.\n"
            }
          }
        }
      }
    },
    "ServiceResourceList": {
      "type": "object",
      "description": "The list of service resources.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "The service resource.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Azure resource identifier.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "Azure resource name.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "Azure resource type.",
                "readOnly": true
              },
              "location": {
                "type": "string",
                "description": "Resource location depends on the parent resource.",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Azure resource tags.",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource."
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)."
                  }
                }
              },
              "properties": {
                "type": "object",
                "description": "The service resource properties.",
                "required": [
                  "serviceKind",
                  "serviceTypeName",
                  "partitionDescription"
                ],
                "discriminator": "serviceKind",
                "properties": {
                  "placementConstraints": {
                    "type": "string",
                    "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\"."
                  },
                  "correlationScheme": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "Creates a particular correlation between services.",
                      "required": [
                        "scheme",
                        "serviceName"
                      ],
                      "properties": {
                        "scheme": {
                          "description": "The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.",
                          "type": "string",
                          "enum": [
                            "AlignedAffinity",
                            "NonAlignedAffinity"
                          ],
                          "x-ms-enum": {
                            "name": "ServiceCorrelationScheme",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "AlignedAffinity",
                                "description": "Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 0."
                              },
                              {
                                "value": "NonAlignedAffinity",
                                "description": "Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 1."
                              }
                            ]
                          }
                        },
                        "serviceName": {
                          "description": "The Arm Resource ID of the service that the correlation relationship is established with.",
                          "type": "string",
                          "x-sf-clientlib": {
                            "typeName": "ServiceName"
                          }
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "serviceName"
                    ],
                    "description": "A list that describes the correlation of the service with other services."
                  },
                  "serviceLoadMetrics": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "Specifies a metric to load balance a service during runtime.",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive."
                        },
                        "weight": {
                          "description": "The service load metric relative weight, compared to other metrics configured for this service, as a number.",
                          "type": "string",
                          "enum": [
                            "Zero",
                            "Low",
                            "Medium",
                            "High"
                          ],
                          "x-ms-enum": {
                            "name": "ServiceLoadMetricWeight",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Zero",
                                "description": "Disables resource balancing for this metric. This value is zero."
                              },
                              {
                                "value": "Low",
                                "description": "Specifies the metric weight of the service load as Low. The value is 1."
                              },
                              {
                                "value": "Medium",
                                "description": "Specifies the metric weight of the service load as Medium. The value is 2."
                              },
                              {
                                "value": "High",
                                "description": "Specifies the metric weight of the service load as High. The value is 3."
                              }
                            ]
                          }
                        },
                        "primaryDefaultLoad": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica."
                        },
                        "secondaryDefaultLoad": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica."
                        },
                        "defaultLoad": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric."
                        }
                      }
                    },
                    "x-ms-identifiers": [],
                    "description": "The service load metrics is given as an array of ServiceLoadMetric objects."
                  },
                  "servicePlacementPolicies": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "discriminator": "type",
                      "description": "Describes the policy to be used for placement of a Service Fabric service.",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The type of placement policy for a service fabric service. Following are the possible values.",
                          "enum": [
                            "InvalidDomain",
                            "RequiredDomain",
                            "PreferredPrimaryDomain",
                            "RequiredDomainDistribution",
                            "NonPartiallyPlaceService"
                          ],
                          "x-ms-enum": {
                            "name": "ServicePlacementPolicyType",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "InvalidDomain",
                                "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 0."
                              },
                              {
                                "value": "RequiredDomain",
                                "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 1."
                              },
                              {
                                "value": "PreferredPrimaryDomain",
                                "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 2."
                              },
                              {
                                "value": "RequiredDomainDistribution",
                                "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 3."
                              },
                              {
                                "value": "NonPartiallyPlaceService",
                                "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 4."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "x-ms-identifiers": [],
                    "description": "A list that describes the correlation of the service with other services."
                  },
                  "defaultMoveCost": {
                    "type": "string",
                    "description": "Specifies the move cost for the service.",
                    "enum": [
                      "Zero",
                      "Low",
                      "Medium",
                      "High"
                    ],
                    "x-ms-enum": {
                      "name": "MoveCost",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Zero",
                          "description": "Zero move cost. This value is zero."
                        },
                        {
                          "value": "Low",
                          "description": "Specifies the move cost of the service as Low. The value is 1."
                        },
                        {
                          "value": "Medium",
                          "description": "Specifies the move cost of the service as Medium. The value is 2."
                        },
                        {
                          "value": "High",
                          "description": "Specifies the move cost of the service as High. The value is 3."
                        }
                      ]
                    }
                  },
                  "scalingPolicies": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "Specifies a metric to load balance a service during runtime.",
                      "required": [
                        "scalingMechanism",
                        "scalingTrigger"
                      ],
                      "properties": {
                        "scalingMechanism": {
                          "description": "Specifies the mechanism associated with this scaling policy",
                          "type": "object",
                          "discriminator": "kind",
                          "required": [
                            "kind"
                          ],
                          "properties": {
                            "kind": {
                              "description": "Specifies the mechanism associated with this scaling policy.",
                              "type": "string",
                              "enum": [
                                "ScalePartitionInstanceCount",
                                "AddRemoveIncrementalNamedPartition"
                              ],
                              "x-ms-enum": {
                                "name": "ServiceScalingMechanismKind",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "ScalePartitionInstanceCount",
                                    "description": "Represents a scaling mechanism for adding or removing instances of stateless service partition. The value is 0."
                                  },
                                  {
                                    "value": "AddRemoveIncrementalNamedPartition",
                                    "description": "Represents a scaling mechanism for adding or removing named partitions of a stateless service. The value is 1."
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "scalingTrigger": {
                          "description": "Specifies the trigger associated with this scaling policy.",
                          "type": "object",
                          "discriminator": "kind",
                          "required": [
                            "kind"
                          ],
                          "properties": {
                            "kind": {
                              "description": "Specifies the trigger associated with this scaling policy.",
                              "type": "string",
                              "enum": [
                                "AveragePartitionLoadTrigger",
                                "AverageServiceLoadTrigger"
                              ],
                              "x-ms-enum": {
                                "name": "ServiceScalingTriggerKind",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "AveragePartitionLoadTrigger",
                                    "description": "Represents a scaling trigger related to an average load of a metric/resource of a partition. The value is 0."
                                  },
                                  {
                                    "value": "AverageServiceLoadTrigger",
                                    "description": "Represents a scaling policy related to an average load of a metric/resource of a service. The value is 1."
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "x-ms-identifiers": [],
                    "description": "Scaling policies for this service."
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The current deployment or provisioning state, which only appears in the response"
                  },
                  "serviceKind": {
                    "type": "string",
                    "description": "The kind of service (Stateless or Stateful).",
                    "enum": [
                      "Stateless",
                      "Stateful"
                    ],
                    "x-ms-enum": {
                      "name": "ServiceKind",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Stateless",
                          "description": "Does not use Service Fabric to make its state highly available or reliable. The value is 0."
                        },
                        {
                          "value": "Stateful",
                          "description": "Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 1."
                        }
                      ]
                    }
                  },
                  "serviceTypeName": {
                    "type": "string",
                    "description": "The name of the service type"
                  },
                  "partitionDescription": {
                    "type": "object",
                    "discriminator": "partitionScheme",
                    "description": "Describes how the service is partitioned.",
                    "required": [
                      "partitionScheme"
                    ],
                    "properties": {
                      "partitionScheme": {
                        "description": "Specifies how the service is partitioned.",
                        "type": "string",
                        "enum": [
                          "Singleton",
                          "UniformInt64Range",
                          "Named"
                        ],
                        "x-ms-enum": {
                          "name": "PartitionScheme",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Singleton",
                              "description": "Indicates that the partition is based on string names, and is a SingletonPartitionScheme object, The value is 0."
                            },
                            {
                              "value": "UniformInt64Range",
                              "description": "Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionScheme object. The value is 1."
                            },
                            {
                              "value": "Named",
                              "description": "Indicates that the partition is based on string names, and is a NamedPartitionScheme object. The value is 2."
                            }
                          ]
                        }
                      }
                    }
                  },
                  "servicePackageActivationMode": {
                    "type": "string",
                    "description": "The activation Mode of the service package",
                    "enum": [
                      "SharedProcess",
                      "ExclusiveProcess"
                    ],
                    "x-ms-enum": {
                      "name": "ServicePackageActivationMode",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "SharedProcess",
                          "description": "Indicates the application package activation mode will use shared process."
                        },
                        {
                          "value": "ExclusiveProcess",
                          "description": "Indicates the application package activation mode will use exclusive process."
                        }
                      ]
                    }
                  },
                  "serviceDnsName": {
                    "type": "string",
                    "description": "Dns name used for the service. If this is specified, then the DNS name can be used to return the IP addresses of service endpoints for application layer protocols (e.g., HTTP).\nWhen updating serviceDnsName, old name may be temporarily resolvable. However, rely on new name.\nWhen removing serviceDnsName, removed name may temporarily be resolvable. Do not rely on the name being unresolvable.\n"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of service list results if there are any.",
          "readOnly": true
        }
      }
    },
    "ServiceResourceProperties": {
      "type": "object",
      "description": "The service resource properties.",
      "required": [
        "serviceKind",
        "serviceTypeName",
        "partitionDescription"
      ],
      "discriminator": "serviceKind",
      "properties": {
        "placementConstraints": {
          "type": "string",
          "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\"."
        },
        "correlationScheme": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Creates a particular correlation between services.",
            "required": [
              "scheme",
              "serviceName"
            ],
            "properties": {
              "scheme": {
                "description": "The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.",
                "type": "string",
                "enum": [
                  "AlignedAffinity",
                  "NonAlignedAffinity"
                ],
                "x-ms-enum": {
                  "name": "ServiceCorrelationScheme",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "AlignedAffinity",
                      "description": "Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 0."
                    },
                    {
                      "value": "NonAlignedAffinity",
                      "description": "Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 1."
                    }
                  ]
                }
              },
              "serviceName": {
                "description": "The Arm Resource ID of the service that the correlation relationship is established with.",
                "type": "string",
                "x-sf-clientlib": {
                  "typeName": "ServiceName"
                }
              }
            }
          },
          "x-ms-identifiers": [
            "serviceName"
          ],
          "description": "A list that describes the correlation of the service with other services."
        },
        "serviceLoadMetrics": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Specifies a metric to load balance a service during runtime.",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive."
              },
              "weight": {
                "description": "The service load metric relative weight, compared to other metrics configured for this service, as a number.",
                "type": "string",
                "enum": [
                  "Zero",
                  "Low",
                  "Medium",
                  "High"
                ],
                "x-ms-enum": {
                  "name": "ServiceLoadMetricWeight",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "Zero",
                      "description": "Disables resource balancing for this metric. This value is zero."
                    },
                    {
                      "value": "Low",
                      "description": "Specifies the metric weight of the service load as Low. The value is 1."
                    },
                    {
                      "value": "Medium",
                      "description": "Specifies the metric weight of the service load as Medium. The value is 2."
                    },
                    {
                      "value": "High",
                      "description": "Specifies the metric weight of the service load as High. The value is 3."
                    }
                  ]
                }
              },
              "primaryDefaultLoad": {
                "type": "integer",
                "format": "int32",
                "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica."
              },
              "secondaryDefaultLoad": {
                "type": "integer",
                "format": "int32",
                "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica."
              },
              "defaultLoad": {
                "type": "integer",
                "format": "int32",
                "description": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric."
              }
            }
          },
          "x-ms-identifiers": [],
          "description": "The service load metrics is given as an array of ServiceLoadMetric objects."
        },
        "servicePlacementPolicies": {
          "type": "array",
          "items": {
            "type": "object",
            "discriminator": "type",
            "description": "Describes the policy to be used for placement of a Service Fabric service.",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The type of placement policy for a service fabric service. Following are the possible values.",
                "enum": [
                  "InvalidDomain",
                  "RequiredDomain",
                  "PreferredPrimaryDomain",
                  "RequiredDomainDistribution",
                  "NonPartiallyPlaceService"
                ],
                "x-ms-enum": {
                  "name": "ServicePlacementPolicyType",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "InvalidDomain",
                      "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 0."
                    },
                    {
                      "value": "RequiredDomain",
                      "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 1."
                    },
                    {
                      "value": "PreferredPrimaryDomain",
                      "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 2."
                    },
                    {
                      "value": "RequiredDomainDistribution",
                      "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 3."
                    },
                    {
                      "value": "NonPartiallyPlaceService",
                      "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 4."
                    }
                  ]
                }
              }
            }
          },
          "x-ms-identifiers": [],
          "description": "A list that describes the correlation of the service with other services."
        },
        "defaultMoveCost": {
          "type": "string",
          "description": "Specifies the move cost for the service.",
          "enum": [
            "Zero",
            "Low",
            "Medium",
            "High"
          ],
          "x-ms-enum": {
            "name": "MoveCost",
            "modelAsString": true,
            "values": [
              {
                "value": "Zero",
                "description": "Zero move cost. This value is zero."
              },
              {
                "value": "Low",
                "description": "Specifies the move cost of the service as Low. The value is 1."
              },
              {
                "value": "Medium",
                "description": "Specifies the move cost of the service as Medium. The value is 2."
              },
              {
                "value": "High",
                "description": "Specifies the move cost of the service as High. The value is 3."
              }
            ]
          }
        },
        "scalingPolicies": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Specifies a metric to load balance a service during runtime.",
            "required": [
              "scalingMechanism",
              "scalingTrigger"
            ],
            "properties": {
              "scalingMechanism": {
                "description": "Specifies the mechanism associated with this scaling policy",
                "type": "object",
                "discriminator": "kind",
                "required": [
                  "kind"
                ],
                "properties": {
                  "kind": {
                    "description": "Specifies the mechanism associated with this scaling policy.",
                    "type": "string",
                    "enum": [
                      "ScalePartitionInstanceCount",
                      "AddRemoveIncrementalNamedPartition"
                    ],
                    "x-ms-enum": {
                      "name": "ServiceScalingMechanismKind",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "ScalePartitionInstanceCount",
                          "description": "Represents a scaling mechanism for adding or removing instances of stateless service partition. The value is 0."
                        },
                        {
                          "value": "AddRemoveIncrementalNamedPartition",
                          "description": "Represents a scaling mechanism for adding or removing named partitions of a stateless service. The value is 1."
                        }
                      ]
                    }
                  }
                }
              },
              "scalingTrigger": {
                "description": "Specifies the trigger associated with this scaling policy.",
                "type": "object",
                "discriminator": "kind",
                "required": [
                  "kind"
                ],
                "properties": {
                  "kind": {
                    "description": "Specifies the trigger associated with this scaling policy.",
                    "type": "string",
                    "enum": [
                      "AveragePartitionLoadTrigger",
                      "AverageServiceLoadTrigger"
                    ],
                    "x-ms-enum": {
                      "name": "ServiceScalingTriggerKind",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "AveragePartitionLoadTrigger",
                          "description": "Represents a scaling trigger related to an average load of a metric/resource of a partition. The value is 0."
                        },
                        {
                          "value": "AverageServiceLoadTrigger",
                          "description": "Represents a scaling policy related to an average load of a metric/resource of a service. The value is 1."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "x-ms-identifiers": [],
          "description": "Scaling policies for this service."
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The current deployment or provisioning state, which only appears in the response"
        },
        "serviceKind": {
          "type": "string",
          "description": "The kind of service (Stateless or Stateful).",
          "enum": [
            "Stateless",
            "Stateful"
          ],
          "x-ms-enum": {
            "name": "ServiceKind",
            "modelAsString": true,
            "values": [
              {
                "value": "Stateless",
                "description": "Does not use Service Fabric to make its state highly available or reliable. The value is 0."
              },
              {
                "value": "Stateful",
                "description": "Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 1."
              }
            ]
          }
        },
        "serviceTypeName": {
          "type": "string",
          "description": "The name of the service type"
        },
        "partitionDescription": {
          "type": "object",
          "discriminator": "partitionScheme",
          "description": "Describes how the service is partitioned.",
          "required": [
            "partitionScheme"
          ],
          "properties": {
            "partitionScheme": {
              "description": "Specifies how the service is partitioned.",
              "type": "string",
              "enum": [
                "Singleton",
                "UniformInt64Range",
                "Named"
              ],
              "x-ms-enum": {
                "name": "PartitionScheme",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Singleton",
                    "description": "Indicates that the partition is based on string names, and is a SingletonPartitionScheme object, The value is 0."
                  },
                  {
                    "value": "UniformInt64Range",
                    "description": "Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionScheme object. The value is 1."
                  },
                  {
                    "value": "Named",
                    "description": "Indicates that the partition is based on string names, and is a NamedPartitionScheme object. The value is 2."
                  }
                ]
              }
            }
          }
        },
        "servicePackageActivationMode": {
          "type": "string",
          "description": "The activation Mode of the service package",
          "enum": [
            "SharedProcess",
            "ExclusiveProcess"
          ],
          "x-ms-enum": {
            "name": "ServicePackageActivationMode",
            "modelAsString": true,
            "values": [
              {
                "value": "SharedProcess",
                "description": "Indicates the application package activation mode will use shared process."
              },
              {
                "value": "ExclusiveProcess",
                "description": "Indicates the application package activation mode will use exclusive process."
              }
            ]
          }
        },
        "serviceDnsName": {
          "type": "string",
          "description": "Dns name used for the service. If this is specified, then the DNS name can be used to return the IP addresses of service endpoints for application layer protocols (e.g., HTTP).\nWhen updating serviceDnsName, old name may be temporarily resolvable. However, rely on new name.\nWhen removing serviceDnsName, removed name may temporarily be resolvable. Do not rely on the name being unresolvable.\n"
        }
      }
    },
    "ServiceResourcePropertiesBase": {
      "type": "object",
      "description": "The common service resource properties.",
      "properties": {
        "placementConstraints": {
          "type": "string",
          "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\"."
        },
        "correlationScheme": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Creates a particular correlation between services.",
            "required": [
              "scheme",
              "serviceName"
            ],
            "properties": {
              "scheme": {
                "description": "The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.",
                "type": "string",
                "enum": [
                  "AlignedAffinity",
                  "NonAlignedAffinity"
                ],
                "x-ms-enum": {
                  "name": "ServiceCorrelationScheme",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "AlignedAffinity",
                      "description": "Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 0."
                    },
                    {
                      "value": "NonAlignedAffinity",
                      "description": "Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 1."
                    }
                  ]
                }
              },
              "serviceName": {
                "description": "The Arm Resource ID of the service that the correlation relationship is established with.",
                "type": "string",
                "x-sf-clientlib": {
                  "typeName": "ServiceName"
                }
              }
            }
          },
          "x-ms-identifiers": [
            "serviceName"
          ],
          "description": "A list that describes the correlation of the service with other services."
        },
        "serviceLoadMetrics": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Specifies a metric to load balance a service during runtime.",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive."
              },
              "weight": {
                "description": "The service load metric relative weight, compared to other metrics configured for this service, as a number.",
                "type": "string",
                "enum": [
                  "Zero",
                  "Low",
                  "Medium",
                  "High"
                ],
                "x-ms-enum": {
                  "name": "ServiceLoadMetricWeight",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "Zero",
                      "description": "Disables resource balancing for this metric. This value is zero."
                    },
                    {
                      "value": "Low",
                      "description": "Specifies the metric weight of the service load as Low. The value is 1."
                    },
                    {
                      "value": "Medium",
                      "description": "Specifies the metric weight of the service load as Medium. The value is 2."
                    },
                    {
                      "value": "High",
                      "description": "Specifies the metric weight of the service load as High. The value is 3."
                    }
                  ]
                }
              },
              "primaryDefaultLoad": {
                "type": "integer",
                "format": "int32",
                "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica."
              },
              "secondaryDefaultLoad": {
                "type": "integer",
                "format": "int32",
                "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica."
              },
              "defaultLoad": {
                "type": "integer",
                "format": "int32",
                "description": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric."
              }
            }
          },
          "x-ms-identifiers": [],
          "description": "The service load metrics is given as an array of ServiceLoadMetric objects."
        },
        "servicePlacementPolicies": {
          "type": "array",
          "items": {
            "type": "object",
            "discriminator": "type",
            "description": "Describes the policy to be used for placement of a Service Fabric service.",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The type of placement policy for a service fabric service. Following are the possible values.",
                "enum": [
                  "InvalidDomain",
                  "RequiredDomain",
                  "PreferredPrimaryDomain",
                  "RequiredDomainDistribution",
                  "NonPartiallyPlaceService"
                ],
                "x-ms-enum": {
                  "name": "ServicePlacementPolicyType",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "InvalidDomain",
                      "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 0."
                    },
                    {
                      "value": "RequiredDomain",
                      "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 1."
                    },
                    {
                      "value": "PreferredPrimaryDomain",
                      "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 2."
                    },
                    {
                      "value": "RequiredDomainDistribution",
                      "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 3."
                    },
                    {
                      "value": "NonPartiallyPlaceService",
                      "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 4."
                    }
                  ]
                }
              }
            }
          },
          "x-ms-identifiers": [],
          "description": "A list that describes the correlation of the service with other services."
        },
        "defaultMoveCost": {
          "type": "string",
          "description": "Specifies the move cost for the service.",
          "enum": [
            "Zero",
            "Low",
            "Medium",
            "High"
          ],
          "x-ms-enum": {
            "name": "MoveCost",
            "modelAsString": true,
            "values": [
              {
                "value": "Zero",
                "description": "Zero move cost. This value is zero."
              },
              {
                "value": "Low",
                "description": "Specifies the move cost of the service as Low. The value is 1."
              },
              {
                "value": "Medium",
                "description": "Specifies the move cost of the service as Medium. The value is 2."
              },
              {
                "value": "High",
                "description": "Specifies the move cost of the service as High. The value is 3."
              }
            ]
          }
        },
        "scalingPolicies": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Specifies a metric to load balance a service during runtime.",
            "required": [
              "scalingMechanism",
              "scalingTrigger"
            ],
            "properties": {
              "scalingMechanism": {
                "description": "Specifies the mechanism associated with this scaling policy",
                "type": "object",
                "discriminator": "kind",
                "required": [
                  "kind"
                ],
                "properties": {
                  "kind": {
                    "description": "Specifies the mechanism associated with this scaling policy.",
                    "type": "string",
                    "enum": [
                      "ScalePartitionInstanceCount",
                      "AddRemoveIncrementalNamedPartition"
                    ],
                    "x-ms-enum": {
                      "name": "ServiceScalingMechanismKind",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "ScalePartitionInstanceCount",
                          "description": "Represents a scaling mechanism for adding or removing instances of stateless service partition. The value is 0."
                        },
                        {
                          "value": "AddRemoveIncrementalNamedPartition",
                          "description": "Represents a scaling mechanism for adding or removing named partitions of a stateless service. The value is 1."
                        }
                      ]
                    }
                  }
                }
              },
              "scalingTrigger": {
                "description": "Specifies the trigger associated with this scaling policy.",
                "type": "object",
                "discriminator": "kind",
                "required": [
                  "kind"
                ],
                "properties": {
                  "kind": {
                    "description": "Specifies the trigger associated with this scaling policy.",
                    "type": "string",
                    "enum": [
                      "AveragePartitionLoadTrigger",
                      "AverageServiceLoadTrigger"
                    ],
                    "x-ms-enum": {
                      "name": "ServiceScalingTriggerKind",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "AveragePartitionLoadTrigger",
                          "description": "Represents a scaling trigger related to an average load of a metric/resource of a partition. The value is 0."
                        },
                        {
                          "value": "AverageServiceLoadTrigger",
                          "description": "Represents a scaling policy related to an average load of a metric/resource of a service. The value is 1."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "x-ms-identifiers": [],
          "description": "Scaling policies for this service."
        }
      }
    },
    "ServiceResourceUpdate": {
      "type": "object",
      "description": "The service resource for patch operations.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Azure resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Azure resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Azure resource type.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "It will be deprecated in New API, resource location depends on the parent resource.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Azure resource tags.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "etag": {
          "type": "string",
          "description": "Azure resource etag.",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)."
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "description": "The service resource properties for patch operations.",
          "required": [
            "serviceKind"
          ],
          "discriminator": "serviceKind",
          "properties": {
            "placementConstraints": {
              "type": "string",
              "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\"."
            },
            "correlationScheme": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "Creates a particular correlation between services.",
                "required": [
                  "scheme",
                  "serviceName"
                ],
                "properties": {
                  "scheme": {
                    "description": "The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.",
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "Affinity",
                      "AlignedAffinity",
                      "NonAlignedAffinity"
                    ],
                    "x-ms-enum": {
                      "name": "ServiceCorrelationScheme",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Invalid",
                          "description": "An invalid correlation scheme. Cannot be used. The value is zero."
                        },
                        {
                          "value": "Affinity",
                          "description": "Indicates that this service has an affinity relationship with another service. Provided for backwards compatibility, consider preferring the Aligned or NonAlignedAffinity options. The value is 1."
                        },
                        {
                          "value": "AlignedAffinity",
                          "description": "Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 2."
                        },
                        {
                          "value": "NonAlignedAffinity",
                          "description": "Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 3."
                        }
                      ]
                    }
                  },
                  "serviceName": {
                    "description": "The name of the service that the correlation relationship is established with.",
                    "type": "string"
                  }
                }
              },
              "description": "A list that describes the correlation of the service with other services."
            },
            "serviceLoadMetrics": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "Specifies a metric to load balance a service during runtime.",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive."
                  },
                  "weight": {
                    "description": "The service load metric relative weight, compared to other metrics configured for this service, as a number.",
                    "type": "string",
                    "enum": [
                      "Zero",
                      "Low",
                      "Medium",
                      "High"
                    ],
                    "x-ms-enum": {
                      "name": "ServiceLoadMetricWeight",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Zero",
                          "description": "Disables resource balancing for this metric. This value is zero."
                        },
                        {
                          "value": "Low",
                          "description": "Specifies the metric weight of the service load as Low. The value is 1."
                        },
                        {
                          "value": "Medium",
                          "description": "Specifies the metric weight of the service load as Medium. The value is 2."
                        },
                        {
                          "value": "High",
                          "description": "Specifies the metric weight of the service load as High. The value is 3."
                        }
                      ]
                    }
                  },
                  "primaryDefaultLoad": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica."
                  },
                  "secondaryDefaultLoad": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica."
                  },
                  "defaultLoad": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric."
                  }
                }
              },
              "description": "The service load metrics is given as an array of ServiceLoadMetricDescription objects."
            },
            "servicePlacementPolicies": {
              "type": "array",
              "items": {
                "type": "object",
                "discriminator": "type",
                "description": "Describes the policy to be used for placement of a Service Fabric service.",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The type of placement policy for a service fabric service. Following are the possible values.",
                    "enum": [
                      "Invalid",
                      "InvalidDomain",
                      "RequiredDomain",
                      "PreferredPrimaryDomain",
                      "RequiredDomainDistribution",
                      "NonPartiallyPlaceService"
                    ],
                    "x-ms-enum": {
                      "name": "ServicePlacementPolicyType",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Invalid",
                          "description": "Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                        },
                        {
                          "value": "InvalidDomain",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1."
                        },
                        {
                          "value": "RequiredDomain",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2."
                        },
                        {
                          "value": "PreferredPrimaryDomain",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3."
                        },
                        {
                          "value": "RequiredDomainDistribution",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4."
                        },
                        {
                          "value": "NonPartiallyPlaceService",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5."
                        }
                      ]
                    }
                  }
                }
              },
              "description": "A list that describes the correlation of the service with other services."
            },
            "defaultMoveCost": {
              "type": "string",
              "description": "Specifies the move cost for the service.",
              "enum": [
                "Zero",
                "Low",
                "Medium",
                "High"
              ],
              "x-ms-enum": {
                "name": "MoveCost",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Zero",
                    "description": "Zero move cost. This value is zero."
                  },
                  {
                    "value": "Low",
                    "description": "Specifies the move cost of the service as Low. The value is 1."
                  },
                  {
                    "value": "Medium",
                    "description": "Specifies the move cost of the service as Medium. The value is 2."
                  },
                  {
                    "value": "High",
                    "description": "Specifies the move cost of the service as High. The value is 3."
                  }
                ]
              }
            },
            "serviceKind": {
              "type": "string",
              "description": "The kind of service (Stateless or Stateful).",
              "enum": [
                "Invalid",
                "Stateless",
                "Stateful"
              ],
              "x-ms-enum": {
                "name": "ServiceKind",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Invalid",
                    "description": "Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                  },
                  {
                    "value": "Stateless",
                    "description": "Does not use Service Fabric to make its state highly available or reliable. The value is 1."
                  },
                  {
                    "value": "Stateful",
                    "description": "Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "ServiceResourceUpdateProperties": {
      "type": "object",
      "description": "The service resource properties for patch operations.",
      "required": [
        "serviceKind"
      ],
      "discriminator": "serviceKind",
      "properties": {
        "placementConstraints": {
          "type": "string",
          "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\"."
        },
        "correlationScheme": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Creates a particular correlation between services.",
            "required": [
              "scheme",
              "serviceName"
            ],
            "properties": {
              "scheme": {
                "description": "The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.",
                "type": "string",
                "enum": [
                  "Invalid",
                  "Affinity",
                  "AlignedAffinity",
                  "NonAlignedAffinity"
                ],
                "x-ms-enum": {
                  "name": "ServiceCorrelationScheme",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "Invalid",
                      "description": "An invalid correlation scheme. Cannot be used. The value is zero."
                    },
                    {
                      "value": "Affinity",
                      "description": "Indicates that this service has an affinity relationship with another service. Provided for backwards compatibility, consider preferring the Aligned or NonAlignedAffinity options. The value is 1."
                    },
                    {
                      "value": "AlignedAffinity",
                      "description": "Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 2."
                    },
                    {
                      "value": "NonAlignedAffinity",
                      "description": "Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 3."
                    }
                  ]
                }
              },
              "serviceName": {
                "description": "The name of the service that the correlation relationship is established with.",
                "type": "string"
              }
            }
          },
          "description": "A list that describes the correlation of the service with other services."
        },
        "serviceLoadMetrics": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Specifies a metric to load balance a service during runtime.",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive."
              },
              "weight": {
                "description": "The service load metric relative weight, compared to other metrics configured for this service, as a number.",
                "type": "string",
                "enum": [
                  "Zero",
                  "Low",
                  "Medium",
                  "High"
                ],
                "x-ms-enum": {
                  "name": "ServiceLoadMetricWeight",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "Zero",
                      "description": "Disables resource balancing for this metric. This value is zero."
                    },
                    {
                      "value": "Low",
                      "description": "Specifies the metric weight of the service load as Low. The value is 1."
                    },
                    {
                      "value": "Medium",
                      "description": "Specifies the metric weight of the service load as Medium. The value is 2."
                    },
                    {
                      "value": "High",
                      "description": "Specifies the metric weight of the service load as High. The value is 3."
                    }
                  ]
                }
              },
              "primaryDefaultLoad": {
                "type": "integer",
                "format": "int32",
                "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica."
              },
              "secondaryDefaultLoad": {
                "type": "integer",
                "format": "int32",
                "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica."
              },
              "defaultLoad": {
                "type": "integer",
                "format": "int32",
                "description": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric."
              }
            }
          },
          "description": "The service load metrics is given as an array of ServiceLoadMetricDescription objects."
        },
        "servicePlacementPolicies": {
          "type": "array",
          "items": {
            "type": "object",
            "discriminator": "type",
            "description": "Describes the policy to be used for placement of a Service Fabric service.",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The type of placement policy for a service fabric service. Following are the possible values.",
                "enum": [
                  "Invalid",
                  "InvalidDomain",
                  "RequiredDomain",
                  "PreferredPrimaryDomain",
                  "RequiredDomainDistribution",
                  "NonPartiallyPlaceService"
                ],
                "x-ms-enum": {
                  "name": "ServicePlacementPolicyType",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "Invalid",
                      "description": "Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                    },
                    {
                      "value": "InvalidDomain",
                      "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1."
                    },
                    {
                      "value": "RequiredDomain",
                      "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2."
                    },
                    {
                      "value": "PreferredPrimaryDomain",
                      "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3."
                    },
                    {
                      "value": "RequiredDomainDistribution",
                      "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4."
                    },
                    {
                      "value": "NonPartiallyPlaceService",
                      "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5."
                    }
                  ]
                }
              }
            }
          },
          "description": "A list that describes the correlation of the service with other services."
        },
        "defaultMoveCost": {
          "type": "string",
          "description": "Specifies the move cost for the service.",
          "enum": [
            "Zero",
            "Low",
            "Medium",
            "High"
          ],
          "x-ms-enum": {
            "name": "MoveCost",
            "modelAsString": true,
            "values": [
              {
                "value": "Zero",
                "description": "Zero move cost. This value is zero."
              },
              {
                "value": "Low",
                "description": "Specifies the move cost of the service as Low. The value is 1."
              },
              {
                "value": "Medium",
                "description": "Specifies the move cost of the service as Medium. The value is 2."
              },
              {
                "value": "High",
                "description": "Specifies the move cost of the service as High. The value is 3."
              }
            ]
          }
        },
        "serviceKind": {
          "type": "string",
          "description": "The kind of service (Stateless or Stateful).",
          "enum": [
            "Invalid",
            "Stateless",
            "Stateful"
          ],
          "x-ms-enum": {
            "name": "ServiceKind",
            "modelAsString": true,
            "values": [
              {
                "value": "Invalid",
                "description": "Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
              },
              {
                "value": "Stateless",
                "description": "Does not use Service Fabric to make its state highly available or reliable. The value is 1."
              },
              {
                "value": "Stateful",
                "description": "Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2."
              }
            ]
          }
        }
      }
    },
    "SingletonPartitionSchemeDescription": {
      "description": "Describes the partition scheme of a singleton-partitioned, or non-partitioned service.",
      "allOf": [
        {
          "type": "object",
          "discriminator": "partitionScheme",
          "description": "Describes how the service is partitioned.",
          "required": [
            "partitionScheme"
          ],
          "properties": {
            "partitionScheme": {
              "description": "Specifies how the service is partitioned.",
              "type": "string",
              "enum": [
                "Invalid",
                "Singleton",
                "UniformInt64Range",
                "Named"
              ],
              "x-ms-enum": {
                "name": "PartitionScheme",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Invalid",
                    "description": "Indicates the partition kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                  },
                  {
                    "value": "Singleton",
                    "description": "Indicates that the partition is based on string names, and is a SingletonPartitionSchemeDescription object, The value is 1."
                  },
                  {
                    "value": "UniformInt64Range",
                    "description": "Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionSchemeDescription object. The value is 2."
                  },
                  {
                    "value": "Named",
                    "description": "Indicates that the partition is based on string names, and is a NamedPartitionSchemeDescription object. The value is 3"
                  }
                ]
              }
            }
          }
        },
        {
          "type": "object",
          "description": "SingletonPartitionSchemeDescription"
        }
      ],
      "x-ms-discriminator-value": "Singleton"
    },
    "StatefulServiceProperties": {
      "type": "object",
      "description": "The properties of a stateful service resource.",
      "allOf": [
        {
          "type": "object",
          "description": "The service resource properties.",
          "required": [
            "serviceKind",
            "serviceTypeName",
            "partitionDescription"
          ],
          "discriminator": "serviceKind",
          "properties": {
            "placementConstraints": {
              "type": "string",
              "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\"."
            },
            "correlationScheme": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "Creates a particular correlation between services.",
                "required": [
                  "scheme",
                  "serviceName"
                ],
                "properties": {
                  "scheme": {
                    "description": "The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.",
                    "type": "string",
                    "enum": [
                      "AlignedAffinity",
                      "NonAlignedAffinity"
                    ],
                    "x-ms-enum": {
                      "name": "ServiceCorrelationScheme",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "AlignedAffinity",
                          "description": "Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 0."
                        },
                        {
                          "value": "NonAlignedAffinity",
                          "description": "Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 1."
                        }
                      ]
                    }
                  },
                  "serviceName": {
                    "description": "The Arm Resource ID of the service that the correlation relationship is established with.",
                    "type": "string",
                    "x-sf-clientlib": {
                      "typeName": "ServiceName"
                    }
                  }
                }
              },
              "x-ms-identifiers": [
                "serviceName"
              ],
              "description": "A list that describes the correlation of the service with other services."
            },
            "serviceLoadMetrics": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "Specifies a metric to load balance a service during runtime.",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive."
                  },
                  "weight": {
                    "description": "The service load metric relative weight, compared to other metrics configured for this service, as a number.",
                    "type": "string",
                    "enum": [
                      "Zero",
                      "Low",
                      "Medium",
                      "High"
                    ],
                    "x-ms-enum": {
                      "name": "ServiceLoadMetricWeight",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Zero",
                          "description": "Disables resource balancing for this metric. This value is zero."
                        },
                        {
                          "value": "Low",
                          "description": "Specifies the metric weight of the service load as Low. The value is 1."
                        },
                        {
                          "value": "Medium",
                          "description": "Specifies the metric weight of the service load as Medium. The value is 2."
                        },
                        {
                          "value": "High",
                          "description": "Specifies the metric weight of the service load as High. The value is 3."
                        }
                      ]
                    }
                  },
                  "primaryDefaultLoad": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica."
                  },
                  "secondaryDefaultLoad": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica."
                  },
                  "defaultLoad": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric."
                  }
                }
              },
              "x-ms-identifiers": [],
              "description": "The service load metrics is given as an array of ServiceLoadMetric objects."
            },
            "servicePlacementPolicies": {
              "type": "array",
              "items": {
                "type": "object",
                "discriminator": "type",
                "description": "Describes the policy to be used for placement of a Service Fabric service.",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The type of placement policy for a service fabric service. Following are the possible values.",
                    "enum": [
                      "InvalidDomain",
                      "RequiredDomain",
                      "PreferredPrimaryDomain",
                      "RequiredDomainDistribution",
                      "NonPartiallyPlaceService"
                    ],
                    "x-ms-enum": {
                      "name": "ServicePlacementPolicyType",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "InvalidDomain",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 0."
                        },
                        {
                          "value": "RequiredDomain",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 1."
                        },
                        {
                          "value": "PreferredPrimaryDomain",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 2."
                        },
                        {
                          "value": "RequiredDomainDistribution",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 3."
                        },
                        {
                          "value": "NonPartiallyPlaceService",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 4."
                        }
                      ]
                    }
                  }
                }
              },
              "x-ms-identifiers": [],
              "description": "A list that describes the correlation of the service with other services."
            },
            "defaultMoveCost": {
              "type": "string",
              "description": "Specifies the move cost for the service.",
              "enum": [
                "Zero",
                "Low",
                "Medium",
                "High"
              ],
              "x-ms-enum": {
                "name": "MoveCost",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Zero",
                    "description": "Zero move cost. This value is zero."
                  },
                  {
                    "value": "Low",
                    "description": "Specifies the move cost of the service as Low. The value is 1."
                  },
                  {
                    "value": "Medium",
                    "description": "Specifies the move cost of the service as Medium. The value is 2."
                  },
                  {
                    "value": "High",
                    "description": "Specifies the move cost of the service as High. The value is 3."
                  }
                ]
              }
            },
            "scalingPolicies": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "Specifies a metric to load balance a service during runtime.",
                "required": [
                  "scalingMechanism",
                  "scalingTrigger"
                ],
                "properties": {
                  "scalingMechanism": {
                    "description": "Specifies the mechanism associated with this scaling policy",
                    "type": "object",
                    "discriminator": "kind",
                    "required": [
                      "kind"
                    ],
                    "properties": {
                      "kind": {
                        "description": "Specifies the mechanism associated with this scaling policy.",
                        "type": "string",
                        "enum": [
                          "ScalePartitionInstanceCount",
                          "AddRemoveIncrementalNamedPartition"
                        ],
                        "x-ms-enum": {
                          "name": "ServiceScalingMechanismKind",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "ScalePartitionInstanceCount",
                              "description": "Represents a scaling mechanism for adding or removing instances of stateless service partition. The value is 0."
                            },
                            {
                              "value": "AddRemoveIncrementalNamedPartition",
                              "description": "Represents a scaling mechanism for adding or removing named partitions of a stateless service. The value is 1."
                            }
                          ]
                        }
                      }
                    }
                  },
                  "scalingTrigger": {
                    "description": "Specifies the trigger associated with this scaling policy.",
                    "type": "object",
                    "discriminator": "kind",
                    "required": [
                      "kind"
                    ],
                    "properties": {
                      "kind": {
                        "description": "Specifies the trigger associated with this scaling policy.",
                        "type": "string",
                        "enum": [
                          "AveragePartitionLoadTrigger",
                          "AverageServiceLoadTrigger"
                        ],
                        "x-ms-enum": {
                          "name": "ServiceScalingTriggerKind",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "AveragePartitionLoadTrigger",
                              "description": "Represents a scaling trigger related to an average load of a metric/resource of a partition. The value is 0."
                            },
                            {
                              "value": "AverageServiceLoadTrigger",
                              "description": "Represents a scaling policy related to an average load of a metric/resource of a service. The value is 1."
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "x-ms-identifiers": [],
              "description": "Scaling policies for this service."
            },
            "provisioningState": {
              "readOnly": true,
              "type": "string",
              "description": "The current deployment or provisioning state, which only appears in the response"
            },
            "serviceKind": {
              "type": "string",
              "description": "The kind of service (Stateless or Stateful).",
              "enum": [
                "Stateless",
                "Stateful"
              ],
              "x-ms-enum": {
                "name": "ServiceKind",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Stateless",
                    "description": "Does not use Service Fabric to make its state highly available or reliable. The value is 0."
                  },
                  {
                    "value": "Stateful",
                    "description": "Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 1."
                  }
                ]
              }
            },
            "serviceTypeName": {
              "type": "string",
              "description": "The name of the service type"
            },
            "partitionDescription": {
              "type": "object",
              "discriminator": "partitionScheme",
              "description": "Describes how the service is partitioned.",
              "required": [
                "partitionScheme"
              ],
              "properties": {
                "partitionScheme": {
                  "description": "Specifies how the service is partitioned.",
                  "type": "string",
                  "enum": [
                    "Singleton",
                    "UniformInt64Range",
                    "Named"
                  ],
                  "x-ms-enum": {
                    "name": "PartitionScheme",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Singleton",
                        "description": "Indicates that the partition is based on string names, and is a SingletonPartitionScheme object, The value is 0."
                      },
                      {
                        "value": "UniformInt64Range",
                        "description": "Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionScheme object. The value is 1."
                      },
                      {
                        "value": "Named",
                        "description": "Indicates that the partition is based on string names, and is a NamedPartitionScheme object. The value is 2."
                      }
                    ]
                  }
                }
              }
            },
            "servicePackageActivationMode": {
              "type": "string",
              "description": "The activation Mode of the service package",
              "enum": [
                "SharedProcess",
                "ExclusiveProcess"
              ],
              "x-ms-enum": {
                "name": "ServicePackageActivationMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "SharedProcess",
                    "description": "Indicates the application package activation mode will use shared process."
                  },
                  {
                    "value": "ExclusiveProcess",
                    "description": "Indicates the application package activation mode will use exclusive process."
                  }
                ]
              }
            },
            "serviceDnsName": {
              "type": "string",
              "description": "Dns name used for the service. If this is specified, then the DNS name can be used to return the IP addresses of service endpoints for application layer protocols (e.g., HTTP).\nWhen updating serviceDnsName, old name may be temporarily resolvable. However, rely on new name.\nWhen removing serviceDnsName, removed name may temporarily be resolvable. Do not rely on the name being unresolvable.\n"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Stateful",
      "properties": {
        "hasPersistedState": {
          "type": "boolean",
          "description": "A flag indicating whether this is a persistent service which stores states on the local disk. If it is then the value of this property is true, if not it is false."
        },
        "targetReplicaSetSize": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "The target replica set size as a number."
        },
        "minReplicaSetSize": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "The minimum replica set size as a number."
        },
        "replicaRestartWaitDuration": {
          "type": "string",
          "description": "The duration between when a replica goes down and when a new replica is created, represented in ISO 8601 format \"hh:mm:ss\"."
        },
        "quorumLossWaitDuration": {
          "type": "string",
          "description": "The maximum duration for which a partition is allowed to be in a state of quorum loss, represented in ISO 8601 format \"hh:mm:ss\"."
        },
        "standByReplicaKeepDuration": {
          "type": "string",
          "description": "The definition on how long StandBy replicas should be maintained before being removed, represented in ISO 8601 format \"hh:mm:ss\"."
        },
        "servicePlacementTimeLimit": {
          "type": "string",
          "description": "The duration for which replicas can stay InBuild before reporting that build is stuck, represented in ISO 8601 format \"hh:mm:ss\"."
        }
      }
    },
    "StatefulServiceUpdateProperties": {
      "type": "object",
      "description": "The properties of a stateful service resource for patch operations.",
      "allOf": [
        {
          "type": "object",
          "description": "The service resource properties for patch operations.",
          "required": [
            "serviceKind"
          ],
          "discriminator": "serviceKind",
          "properties": {
            "placementConstraints": {
              "type": "string",
              "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\"."
            },
            "correlationScheme": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "Creates a particular correlation between services.",
                "required": [
                  "scheme",
                  "serviceName"
                ],
                "properties": {
                  "scheme": {
                    "description": "The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.",
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "Affinity",
                      "AlignedAffinity",
                      "NonAlignedAffinity"
                    ],
                    "x-ms-enum": {
                      "name": "ServiceCorrelationScheme",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Invalid",
                          "description": "An invalid correlation scheme. Cannot be used. The value is zero."
                        },
                        {
                          "value": "Affinity",
                          "description": "Indicates that this service has an affinity relationship with another service. Provided for backwards compatibility, consider preferring the Aligned or NonAlignedAffinity options. The value is 1."
                        },
                        {
                          "value": "AlignedAffinity",
                          "description": "Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 2."
                        },
                        {
                          "value": "NonAlignedAffinity",
                          "description": "Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 3."
                        }
                      ]
                    }
                  },
                  "serviceName": {
                    "description": "The name of the service that the correlation relationship is established with.",
                    "type": "string"
                  }
                }
              },
              "description": "A list that describes the correlation of the service with other services."
            },
            "serviceLoadMetrics": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "Specifies a metric to load balance a service during runtime.",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive."
                  },
                  "weight": {
                    "description": "The service load metric relative weight, compared to other metrics configured for this service, as a number.",
                    "type": "string",
                    "enum": [
                      "Zero",
                      "Low",
                      "Medium",
                      "High"
                    ],
                    "x-ms-enum": {
                      "name": "ServiceLoadMetricWeight",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Zero",
                          "description": "Disables resource balancing for this metric. This value is zero."
                        },
                        {
                          "value": "Low",
                          "description": "Specifies the metric weight of the service load as Low. The value is 1."
                        },
                        {
                          "value": "Medium",
                          "description": "Specifies the metric weight of the service load as Medium. The value is 2."
                        },
                        {
                          "value": "High",
                          "description": "Specifies the metric weight of the service load as High. The value is 3."
                        }
                      ]
                    }
                  },
                  "primaryDefaultLoad": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica."
                  },
                  "secondaryDefaultLoad": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica."
                  },
                  "defaultLoad": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric."
                  }
                }
              },
              "description": "The service load metrics is given as an array of ServiceLoadMetricDescription objects."
            },
            "servicePlacementPolicies": {
              "type": "array",
              "items": {
                "type": "object",
                "discriminator": "type",
                "description": "Describes the policy to be used for placement of a Service Fabric service.",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The type of placement policy for a service fabric service. Following are the possible values.",
                    "enum": [
                      "Invalid",
                      "InvalidDomain",
                      "RequiredDomain",
                      "PreferredPrimaryDomain",
                      "RequiredDomainDistribution",
                      "NonPartiallyPlaceService"
                    ],
                    "x-ms-enum": {
                      "name": "ServicePlacementPolicyType",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Invalid",
                          "description": "Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                        },
                        {
                          "value": "InvalidDomain",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1."
                        },
                        {
                          "value": "RequiredDomain",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2."
                        },
                        {
                          "value": "PreferredPrimaryDomain",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3."
                        },
                        {
                          "value": "RequiredDomainDistribution",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4."
                        },
                        {
                          "value": "NonPartiallyPlaceService",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5."
                        }
                      ]
                    }
                  }
                }
              },
              "description": "A list that describes the correlation of the service with other services."
            },
            "defaultMoveCost": {
              "type": "string",
              "description": "Specifies the move cost for the service.",
              "enum": [
                "Zero",
                "Low",
                "Medium",
                "High"
              ],
              "x-ms-enum": {
                "name": "MoveCost",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Zero",
                    "description": "Zero move cost. This value is zero."
                  },
                  {
                    "value": "Low",
                    "description": "Specifies the move cost of the service as Low. The value is 1."
                  },
                  {
                    "value": "Medium",
                    "description": "Specifies the move cost of the service as Medium. The value is 2."
                  },
                  {
                    "value": "High",
                    "description": "Specifies the move cost of the service as High. The value is 3."
                  }
                ]
              }
            },
            "serviceKind": {
              "type": "string",
              "description": "The kind of service (Stateless or Stateful).",
              "enum": [
                "Invalid",
                "Stateless",
                "Stateful"
              ],
              "x-ms-enum": {
                "name": "ServiceKind",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Invalid",
                    "description": "Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                  },
                  {
                    "value": "Stateless",
                    "description": "Does not use Service Fabric to make its state highly available or reliable. The value is 1."
                  },
                  {
                    "value": "Stateful",
                    "description": "Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2."
                  }
                ]
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Stateful",
      "properties": {
        "targetReplicaSetSize": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "The target replica set size as a number."
        },
        "minReplicaSetSize": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "The minimum replica set size as a number."
        },
        "replicaRestartWaitDuration": {
          "type": "string",
          "format": "date-time",
          "description": "The duration between when a replica goes down and when a new replica is created, represented in ISO 8601 format (hh:mm:ss.s)."
        },
        "quorumLossWaitDuration": {
          "type": "string",
          "format": "date-time",
          "description": "The maximum duration for which a partition is allowed to be in a state of quorum loss, represented in ISO 8601 format (hh:mm:ss.s)."
        },
        "standByReplicaKeepDuration": {
          "type": "string",
          "format": "date-time",
          "description": "The definition on how long StandBy replicas should be maintained before being removed, represented in ISO 8601 format (hh:mm:ss.s)."
        }
      }
    },
    "StatelessServiceProperties": {
      "type": "object",
      "description": "The properties of a stateless service resource.",
      "allOf": [
        {
          "type": "object",
          "description": "The service resource properties.",
          "required": [
            "serviceKind",
            "serviceTypeName",
            "partitionDescription"
          ],
          "discriminator": "serviceKind",
          "properties": {
            "placementConstraints": {
              "type": "string",
              "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\"."
            },
            "correlationScheme": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "Creates a particular correlation between services.",
                "required": [
                  "scheme",
                  "serviceName"
                ],
                "properties": {
                  "scheme": {
                    "description": "The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.",
                    "type": "string",
                    "enum": [
                      "AlignedAffinity",
                      "NonAlignedAffinity"
                    ],
                    "x-ms-enum": {
                      "name": "ServiceCorrelationScheme",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "AlignedAffinity",
                          "description": "Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 0."
                        },
                        {
                          "value": "NonAlignedAffinity",
                          "description": "Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 1."
                        }
                      ]
                    }
                  },
                  "serviceName": {
                    "description": "The Arm Resource ID of the service that the correlation relationship is established with.",
                    "type": "string",
                    "x-sf-clientlib": {
                      "typeName": "ServiceName"
                    }
                  }
                }
              },
              "x-ms-identifiers": [
                "serviceName"
              ],
              "description": "A list that describes the correlation of the service with other services."
            },
            "serviceLoadMetrics": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "Specifies a metric to load balance a service during runtime.",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive."
                  },
                  "weight": {
                    "description": "The service load metric relative weight, compared to other metrics configured for this service, as a number.",
                    "type": "string",
                    "enum": [
                      "Zero",
                      "Low",
                      "Medium",
                      "High"
                    ],
                    "x-ms-enum": {
                      "name": "ServiceLoadMetricWeight",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Zero",
                          "description": "Disables resource balancing for this metric. This value is zero."
                        },
                        {
                          "value": "Low",
                          "description": "Specifies the metric weight of the service load as Low. The value is 1."
                        },
                        {
                          "value": "Medium",
                          "description": "Specifies the metric weight of the service load as Medium. The value is 2."
                        },
                        {
                          "value": "High",
                          "description": "Specifies the metric weight of the service load as High. The value is 3."
                        }
                      ]
                    }
                  },
                  "primaryDefaultLoad": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica."
                  },
                  "secondaryDefaultLoad": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica."
                  },
                  "defaultLoad": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric."
                  }
                }
              },
              "x-ms-identifiers": [],
              "description": "The service load metrics is given as an array of ServiceLoadMetric objects."
            },
            "servicePlacementPolicies": {
              "type": "array",
              "items": {
                "type": "object",
                "discriminator": "type",
                "description": "Describes the policy to be used for placement of a Service Fabric service.",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The type of placement policy for a service fabric service. Following are the possible values.",
                    "enum": [
                      "InvalidDomain",
                      "RequiredDomain",
                      "PreferredPrimaryDomain",
                      "RequiredDomainDistribution",
                      "NonPartiallyPlaceService"
                    ],
                    "x-ms-enum": {
                      "name": "ServicePlacementPolicyType",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "InvalidDomain",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 0."
                        },
                        {
                          "value": "RequiredDomain",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 1."
                        },
                        {
                          "value": "PreferredPrimaryDomain",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 2."
                        },
                        {
                          "value": "RequiredDomainDistribution",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 3."
                        },
                        {
                          "value": "NonPartiallyPlaceService",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 4."
                        }
                      ]
                    }
                  }
                }
              },
              "x-ms-identifiers": [],
              "description": "A list that describes the correlation of the service with other services."
            },
            "defaultMoveCost": {
              "type": "string",
              "description": "Specifies the move cost for the service.",
              "enum": [
                "Zero",
                "Low",
                "Medium",
                "High"
              ],
              "x-ms-enum": {
                "name": "MoveCost",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Zero",
                    "description": "Zero move cost. This value is zero."
                  },
                  {
                    "value": "Low",
                    "description": "Specifies the move cost of the service as Low. The value is 1."
                  },
                  {
                    "value": "Medium",
                    "description": "Specifies the move cost of the service as Medium. The value is 2."
                  },
                  {
                    "value": "High",
                    "description": "Specifies the move cost of the service as High. The value is 3."
                  }
                ]
              }
            },
            "scalingPolicies": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "Specifies a metric to load balance a service during runtime.",
                "required": [
                  "scalingMechanism",
                  "scalingTrigger"
                ],
                "properties": {
                  "scalingMechanism": {
                    "description": "Specifies the mechanism associated with this scaling policy",
                    "type": "object",
                    "discriminator": "kind",
                    "required": [
                      "kind"
                    ],
                    "properties": {
                      "kind": {
                        "description": "Specifies the mechanism associated with this scaling policy.",
                        "type": "string",
                        "enum": [
                          "ScalePartitionInstanceCount",
                          "AddRemoveIncrementalNamedPartition"
                        ],
                        "x-ms-enum": {
                          "name": "ServiceScalingMechanismKind",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "ScalePartitionInstanceCount",
                              "description": "Represents a scaling mechanism for adding or removing instances of stateless service partition. The value is 0."
                            },
                            {
                              "value": "AddRemoveIncrementalNamedPartition",
                              "description": "Represents a scaling mechanism for adding or removing named partitions of a stateless service. The value is 1."
                            }
                          ]
                        }
                      }
                    }
                  },
                  "scalingTrigger": {
                    "description": "Specifies the trigger associated with this scaling policy.",
                    "type": "object",
                    "discriminator": "kind",
                    "required": [
                      "kind"
                    ],
                    "properties": {
                      "kind": {
                        "description": "Specifies the trigger associated with this scaling policy.",
                        "type": "string",
                        "enum": [
                          "AveragePartitionLoadTrigger",
                          "AverageServiceLoadTrigger"
                        ],
                        "x-ms-enum": {
                          "name": "ServiceScalingTriggerKind",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "AveragePartitionLoadTrigger",
                              "description": "Represents a scaling trigger related to an average load of a metric/resource of a partition. The value is 0."
                            },
                            {
                              "value": "AverageServiceLoadTrigger",
                              "description": "Represents a scaling policy related to an average load of a metric/resource of a service. The value is 1."
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "x-ms-identifiers": [],
              "description": "Scaling policies for this service."
            },
            "provisioningState": {
              "readOnly": true,
              "type": "string",
              "description": "The current deployment or provisioning state, which only appears in the response"
            },
            "serviceKind": {
              "type": "string",
              "description": "The kind of service (Stateless or Stateful).",
              "enum": [
                "Stateless",
                "Stateful"
              ],
              "x-ms-enum": {
                "name": "ServiceKind",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Stateless",
                    "description": "Does not use Service Fabric to make its state highly available or reliable. The value is 0."
                  },
                  {
                    "value": "Stateful",
                    "description": "Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 1."
                  }
                ]
              }
            },
            "serviceTypeName": {
              "type": "string",
              "description": "The name of the service type"
            },
            "partitionDescription": {
              "type": "object",
              "discriminator": "partitionScheme",
              "description": "Describes how the service is partitioned.",
              "required": [
                "partitionScheme"
              ],
              "properties": {
                "partitionScheme": {
                  "description": "Specifies how the service is partitioned.",
                  "type": "string",
                  "enum": [
                    "Singleton",
                    "UniformInt64Range",
                    "Named"
                  ],
                  "x-ms-enum": {
                    "name": "PartitionScheme",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Singleton",
                        "description": "Indicates that the partition is based on string names, and is a SingletonPartitionScheme object, The value is 0."
                      },
                      {
                        "value": "UniformInt64Range",
                        "description": "Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionScheme object. The value is 1."
                      },
                      {
                        "value": "Named",
                        "description": "Indicates that the partition is based on string names, and is a NamedPartitionScheme object. The value is 2."
                      }
                    ]
                  }
                }
              }
            },
            "servicePackageActivationMode": {
              "type": "string",
              "description": "The activation Mode of the service package",
              "enum": [
                "SharedProcess",
                "ExclusiveProcess"
              ],
              "x-ms-enum": {
                "name": "ServicePackageActivationMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "SharedProcess",
                    "description": "Indicates the application package activation mode will use shared process."
                  },
                  {
                    "value": "ExclusiveProcess",
                    "description": "Indicates the application package activation mode will use exclusive process."
                  }
                ]
              }
            },
            "serviceDnsName": {
              "type": "string",
              "description": "Dns name used for the service. If this is specified, then the DNS name can be used to return the IP addresses of service endpoints for application layer protocols (e.g., HTTP).\nWhen updating serviceDnsName, old name may be temporarily resolvable. However, rely on new name.\nWhen removing serviceDnsName, removed name may temporarily be resolvable. Do not rely on the name being unresolvable.\n"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Stateless",
      "required": [
        "instanceCount"
      ],
      "properties": {
        "instanceCount": {
          "type": "integer",
          "format": "int32",
          "minimum": -1,
          "description": "The instance count."
        },
        "minInstanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "MinInstanceCount is the minimum number of instances that must be up to meet the EnsureAvailability safety check during operations like upgrade or deactivate node. The actual number that is used is max( MinInstanceCount, ceil( MinInstancePercentage/100.0 * InstanceCount) ). Note, if InstanceCount is set to -1, during MinInstanceCount computation -1 is first converted into the number of nodes on which the instances are allowed to be placed according to the placement constraints on the service."
        },
        "minInstancePercentage": {
          "type": "integer",
          "format": "int32",
          "description": "MinInstancePercentage is the minimum percentage of InstanceCount that must be up to meet the EnsureAvailability safety check during operations like upgrade or deactivate node. The actual number that is used is max( MinInstanceCount, ceil( MinInstancePercentage/100.0 * InstanceCount) ). Note, if InstanceCount is set to -1, during MinInstancePercentage computation, -1 is first converted into the number of nodes on which the instances are allowed to be placed according to the placement constraints on the service."
        }
      }
    },
    "StatelessServiceUpdateProperties": {
      "type": "object",
      "description": "The properties of a stateless service resource for patch operations.",
      "allOf": [
        {
          "type": "object",
          "description": "The service resource properties for patch operations.",
          "required": [
            "serviceKind"
          ],
          "discriminator": "serviceKind",
          "properties": {
            "placementConstraints": {
              "type": "string",
              "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\"."
            },
            "correlationScheme": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "Creates a particular correlation between services.",
                "required": [
                  "scheme",
                  "serviceName"
                ],
                "properties": {
                  "scheme": {
                    "description": "The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.",
                    "type": "string",
                    "enum": [
                      "Invalid",
                      "Affinity",
                      "AlignedAffinity",
                      "NonAlignedAffinity"
                    ],
                    "x-ms-enum": {
                      "name": "ServiceCorrelationScheme",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Invalid",
                          "description": "An invalid correlation scheme. Cannot be used. The value is zero."
                        },
                        {
                          "value": "Affinity",
                          "description": "Indicates that this service has an affinity relationship with another service. Provided for backwards compatibility, consider preferring the Aligned or NonAlignedAffinity options. The value is 1."
                        },
                        {
                          "value": "AlignedAffinity",
                          "description": "Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 2."
                        },
                        {
                          "value": "NonAlignedAffinity",
                          "description": "Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 3."
                        }
                      ]
                    }
                  },
                  "serviceName": {
                    "description": "The name of the service that the correlation relationship is established with.",
                    "type": "string"
                  }
                }
              },
              "description": "A list that describes the correlation of the service with other services."
            },
            "serviceLoadMetrics": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "Specifies a metric to load balance a service during runtime.",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive."
                  },
                  "weight": {
                    "description": "The service load metric relative weight, compared to other metrics configured for this service, as a number.",
                    "type": "string",
                    "enum": [
                      "Zero",
                      "Low",
                      "Medium",
                      "High"
                    ],
                    "x-ms-enum": {
                      "name": "ServiceLoadMetricWeight",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Zero",
                          "description": "Disables resource balancing for this metric. This value is zero."
                        },
                        {
                          "value": "Low",
                          "description": "Specifies the metric weight of the service load as Low. The value is 1."
                        },
                        {
                          "value": "Medium",
                          "description": "Specifies the metric weight of the service load as Medium. The value is 2."
                        },
                        {
                          "value": "High",
                          "description": "Specifies the metric weight of the service load as High. The value is 3."
                        }
                      ]
                    }
                  },
                  "primaryDefaultLoad": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica."
                  },
                  "secondaryDefaultLoad": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica."
                  },
                  "defaultLoad": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric."
                  }
                }
              },
              "description": "The service load metrics is given as an array of ServiceLoadMetricDescription objects."
            },
            "servicePlacementPolicies": {
              "type": "array",
              "items": {
                "type": "object",
                "discriminator": "type",
                "description": "Describes the policy to be used for placement of a Service Fabric service.",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The type of placement policy for a service fabric service. Following are the possible values.",
                    "enum": [
                      "Invalid",
                      "InvalidDomain",
                      "RequiredDomain",
                      "PreferredPrimaryDomain",
                      "RequiredDomainDistribution",
                      "NonPartiallyPlaceService"
                    ],
                    "x-ms-enum": {
                      "name": "ServicePlacementPolicyType",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Invalid",
                          "description": "Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                        },
                        {
                          "value": "InvalidDomain",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1."
                        },
                        {
                          "value": "RequiredDomain",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2."
                        },
                        {
                          "value": "PreferredPrimaryDomain",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3."
                        },
                        {
                          "value": "RequiredDomainDistribution",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4."
                        },
                        {
                          "value": "NonPartiallyPlaceService",
                          "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5."
                        }
                      ]
                    }
                  }
                }
              },
              "description": "A list that describes the correlation of the service with other services."
            },
            "defaultMoveCost": {
              "type": "string",
              "description": "Specifies the move cost for the service.",
              "enum": [
                "Zero",
                "Low",
                "Medium",
                "High"
              ],
              "x-ms-enum": {
                "name": "MoveCost",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Zero",
                    "description": "Zero move cost. This value is zero."
                  },
                  {
                    "value": "Low",
                    "description": "Specifies the move cost of the service as Low. The value is 1."
                  },
                  {
                    "value": "Medium",
                    "description": "Specifies the move cost of the service as Medium. The value is 2."
                  },
                  {
                    "value": "High",
                    "description": "Specifies the move cost of the service as High. The value is 3."
                  }
                ]
              }
            },
            "serviceKind": {
              "type": "string",
              "description": "The kind of service (Stateless or Stateful).",
              "enum": [
                "Invalid",
                "Stateless",
                "Stateful"
              ],
              "x-ms-enum": {
                "name": "ServiceKind",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Invalid",
                    "description": "Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                  },
                  {
                    "value": "Stateless",
                    "description": "Does not use Service Fabric to make its state highly available or reliable. The value is 1."
                  },
                  {
                    "value": "Stateful",
                    "description": "Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2."
                  }
                ]
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Stateless",
      "properties": {
        "instanceCount": {
          "type": "integer",
          "format": "int32",
          "minimum": -1,
          "description": "The instance count."
        },
        "instanceCloseDelayDuration": {
          "type": "string",
          "description": "Delay duration for RequestDrain feature to ensures that the endpoint advertised by the stateless instance is removed before the delay starts prior to closing the instance. This delay enables existing requests to drain gracefully before the instance actually goes down (https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-application-upgrade-advanced#avoid-connection-drops-during-stateless-service-planned-downtime-preview). It is first interpreted as a string representing an ISO 8601 duration. It is represented in ISO 8601 format (hh:mm:ss.s)."
        }
      }
    },
    "UserAssignedIdentity": {
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string",
          "readOnly": true,
          "description": "The principal id of user assigned identity."
        },
        "clientId": {
          "type": "string",
          "readOnly": true,
          "description": "The client id of user assigned identity."
        }
      }
    },
    "UserAssignedIdentityMap": {
      "type": "object",
      "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\n",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "principalId": {
            "type": "string",
            "readOnly": true,
            "description": "The principal id of user assigned identity."
          },
          "clientId": {
            "type": "string",
            "readOnly": true,
            "description": "The client id of user assigned identity."
          }
        }
      }
    },
    "UniformInt64RangePartitionSchemeDescription": {
      "type": "object",
      "description": "Describes a partitioning scheme where an integer range is allocated evenly across a number of partitions.",
      "allOf": [
        {
          "type": "object",
          "discriminator": "partitionScheme",
          "description": "Describes how the service is partitioned.",
          "required": [
            "partitionScheme"
          ],
          "properties": {
            "partitionScheme": {
              "description": "Specifies how the service is partitioned.",
              "type": "string",
              "enum": [
                "Invalid",
                "Singleton",
                "UniformInt64Range",
                "Named"
              ],
              "x-ms-enum": {
                "name": "PartitionScheme",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Invalid",
                    "description": "Indicates the partition kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero."
                  },
                  {
                    "value": "Singleton",
                    "description": "Indicates that the partition is based on string names, and is a SingletonPartitionSchemeDescription object, The value is 1."
                  },
                  {
                    "value": "UniformInt64Range",
                    "description": "Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionSchemeDescription object. The value is 2."
                  },
                  {
                    "value": "Named",
                    "description": "Indicates that the partition is based on string names, and is a NamedPartitionSchemeDescription object. The value is 3"
                  }
                ]
              }
            }
          }
        },
        {
          "type": "object",
          "description": "UniformInt64RangePartitionSchemeDescription"
        }
      ],
      "x-ms-discriminator-value": "UniformInt64Range",
      "required": [
        "count",
        "lowKey",
        "highKey"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of partitions."
        },
        "lowKey": {
          "type": "string",
          "description": "String indicating the lower bound of the partition key range that\nshould be split between the partition ‘count’\n"
        },
        "highKey": {
          "type": "string",
          "description": "String indicating the upper bound of the partition key range that\nshould be split between the partition ‘count’\n"
        }
      }
    },
    "UpgradeDomainTimeout": {
      "type": "string",
      "description": "The amount of time each upgrade domain has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
    },
    "UpgradeTimeout": {
      "type": "string",
      "description": "The amount of time the overall upgrade has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
    },
    "ErrorModel": {
      "type": "object",
      "properties": {
        "error": {
          "description": "The error details.",
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "The error code."
            },
            "message": {
              "type": "string",
              "description": "The error message."
            }
          }
        }
      },
      "description": "The structure of the error."
    },
    "ErrorModelError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code."
        },
        "message": {
          "type": "string",
          "description": "The error message."
        }
      },
      "description": "The error details."
    },
    "SystemData": {
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "type": "object",
      "readOnly": true,
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource."
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)."
        }
      }
    },
    "AddOnFeatures": {
      "type": "string",
      "description": "Available cluster add-on features",
      "enum": [
        "RepairManager",
        "DnsService",
        "BackupRestoreService",
        "ResourceMonitorService"
      ]
    },
    "ApplicationTypeVersionsCleanupPolicy": {
      "type": "object",
      "required": [
        "maxUnusedVersionsToKeep"
      ],
      "properties": {
        "maxUnusedVersionsToKeep": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "description": "Number of unused versions per application type to keep."
        }
      },
      "description": "The policy used to clean up unused versions. When the policy is not specified explicitly, the default unused application versions to keep will be 3."
    },
    "ApplicationDeltaHealthPolicy": {
      "type": "object",
      "description": "Defines a delta health policy used to evaluate the health of an application or one of its child entities when upgrading the cluster.\n",
      "properties": {
        "defaultServiceTypeDeltaHealthPolicy": {
          "description": "The delta health policy used by default to evaluate the health of a service type when upgrading the cluster.",
          "type": "object",
          "properties": {
            "maxPercentDeltaUnhealthyServices": {
              "type": "integer",
              "format": "int32",
              "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
              "default": 0,
              "minimum": 0,
              "maximum": 100
            }
          }
        },
        "serviceTypeDeltaHealthPolicies": {
          "description": "The map with service type delta health policy per service type name. The map is empty by default.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "description": "Represents the delta health policy used to evaluate the health of services belonging to a service type when upgrading the cluster.\n",
            "properties": {
              "maxPercentDeltaUnhealthyServices": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                "default": 0,
                "minimum": 0,
                "maximum": 100
              }
            }
          }
        }
      }
    },
    "ApplicationDeltaHealthPolicyMap": {
      "type": "object",
      "description": "Defines a map that contains specific application delta health policies for different applications.\nEach entry specifies as key the application name and as value an ApplicationDeltaHealthPolicy used to evaluate the application health when upgrading the cluster.\nThe application name should include the 'fabric:' URI scheme.\nThe map is empty by default.\n",
      "additionalProperties": {
        "type": "object",
        "description": "Defines a delta health policy used to evaluate the health of an application or one of its child entities when upgrading the cluster.\n",
        "properties": {
          "defaultServiceTypeDeltaHealthPolicy": {
            "description": "The delta health policy used by default to evaluate the health of a service type when upgrading the cluster.",
            "type": "object",
            "properties": {
              "maxPercentDeltaUnhealthyServices": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                "default": 0,
                "minimum": 0,
                "maximum": 100
              }
            }
          },
          "serviceTypeDeltaHealthPolicies": {
            "description": "The map with service type delta health policy per service type name. The map is empty by default.",
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Represents the delta health policy used to evaluate the health of services belonging to a service type when upgrading the cluster.\n",
              "properties": {
                "maxPercentDeltaUnhealthyServices": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                  "default": 0,
                  "minimum": 0,
                  "maximum": 100
                }
              }
            }
          }
        }
      }
    },
    "ApplicationHealthPolicy": {
      "type": "object",
      "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
      "required": [
        "considerWarningAsError",
        "maxPercentUnhealthyDeployedApplications"
      ],
      "properties": {
        "considerWarningAsError": {
          "type": "boolean",
          "description": "Indicates whether warnings are treated with the same severity as errors."
        },
        "maxPercentUnhealthyDeployedApplications": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.\nThe percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.\nThis is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n"
        },
        "defaultServiceTypeHealthPolicy": {
          "description": "The health policy used by default to evaluate the health of a service type.",
          "type": "object",
          "required": [
            "maxPercentUnhealthyServices",
            "maxPercentUnhealthyPartitionsPerService",
            "maxPercentUnhealthyReplicasPerPartition"
          ],
          "properties": {
            "maxPercentUnhealthyServices": {
              "type": "integer",
              "format": "int32",
              "description": "The maximum allowed percentage of unhealthy services.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services.\n",
              "minimum": 0,
              "maximum": 100
            },
            "maxPercentUnhealthyPartitionsPerService": {
              "type": "integer",
              "format": "int32",
              "description": "The maximum allowed percentage of unhealthy partitions per service.\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions.\n",
              "minimum": 0,
              "maximum": 100
            },
            "maxPercentUnhealthyReplicasPerPartition": {
              "type": "integer",
              "format": "int32",
              "description": "The maximum allowed percentage of unhealthy replicas per partition.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas.\n",
              "minimum": 0,
              "maximum": 100
            }
          }
        },
        "serviceTypeHealthPolicyMap": {
          "description": "The map with service type health policy per service type name. The map is empty by default.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
            "required": [
              "maxPercentUnhealthyServices",
              "maxPercentUnhealthyPartitionsPerService",
              "maxPercentUnhealthyReplicasPerPartition"
            ],
            "properties": {
              "maxPercentUnhealthyServices": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum allowed percentage of unhealthy services.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services.\n",
                "minimum": 0,
                "maximum": 100
              },
              "maxPercentUnhealthyPartitionsPerService": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum allowed percentage of unhealthy partitions per service.\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions.\n",
                "minimum": 0,
                "maximum": 100
              },
              "maxPercentUnhealthyReplicasPerPartition": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum allowed percentage of unhealthy replicas per partition.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas.\n",
                "minimum": 0,
                "maximum": 100
              }
            }
          }
        }
      }
    },
    "ApplicationHealthPolicyMap": {
      "type": "object",
      "description": "Defines a map that contains specific application health policies for different applications.\nEach entry specifies as key the application name and as value an ApplicationHealthPolicy used to evaluate the application health.\nThe application name should include the 'fabric:' URI scheme.\nThe map is empty by default.\n",
      "additionalProperties": {
        "type": "object",
        "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
        "properties": {
          "defaultServiceTypeHealthPolicy": {
            "description": "The health policy used by default to evaluate the health of a service type.",
            "type": "object",
            "properties": {
              "maxPercentUnhealthyServices": {
                "type": "integer",
                "format": "int32",
                "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                "default": 0,
                "minimum": 0,
                "maximum": 100
              }
            }
          },
          "serviceTypeHealthPolicies": {
            "description": "The map with service type health policy per service type name. The map is empty by default.",
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
              "properties": {
                "maxPercentUnhealthyServices": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                  "default": 0,
                  "minimum": 0,
                  "maximum": 100
                }
              }
            }
          }
        }
      }
    },
    "AvailableOperationDisplay": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string",
          "description": "The name of the provider."
        },
        "resource": {
          "type": "string",
          "description": "The resource on which the operation is performed"
        },
        "operation": {
          "type": "string",
          "description": "The operation that can be performed."
        },
        "description": {
          "type": "string",
          "description": "Operation description"
        }
      },
      "description": "Operation supported by the Service Fabric resource provider"
    },
    "AzureActiveDirectory": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Azure active directory tenant id."
        },
        "clusterApplication": {
          "type": "string",
          "description": "Azure active directory cluster application id."
        },
        "clientApplication": {
          "type": "string",
          "description": "Azure active directory client application id."
        }
      },
      "description": "The settings to enable AAD authentication on the cluster."
    },
    "CertificateDescription": {
      "type": "object",
      "required": [
        "thumbprint"
      ],
      "properties": {
        "thumbprint": {
          "type": "string",
          "description": "Thumbprint of the primary certificate."
        },
        "thumbprintSecondary": {
          "type": "string",
          "description": "Thumbprint of the secondary certificate."
        },
        "x509StoreName": {
          "type": "string",
          "description": "The local certificate store location.",
          "enum": [
            "AddressBook",
            "AuthRoot",
            "CertificateAuthority",
            "Disallowed",
            "My",
            "Root",
            "TrustedPeople",
            "TrustedPublisher"
          ]
        }
      },
      "description": "Describes the certificate details."
    },
    "ClientCertificateCommonName": {
      "type": "object",
      "required": [
        "certificateCommonName",
        "isAdmin",
        "certificateIssuerThumbprint"
      ],
      "properties": {
        "isAdmin": {
          "type": "boolean",
          "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
        },
        "certificateCommonName": {
          "type": "string",
          "description": "The common name of the client certificate."
        },
        "certificateIssuerThumbprint": {
          "type": "string",
          "description": "The issuer thumbprint of the client certificate."
        }
      },
      "description": "Describes the client certificate details using common name."
    },
    "ClientCertificateThumbprint": {
      "type": "object",
      "required": [
        "certificateThumbprint",
        "isAdmin"
      ],
      "properties": {
        "isAdmin": {
          "type": "boolean",
          "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
        },
        "certificateThumbprint": {
          "type": "string",
          "description": "The thumbprint of the client certificate."
        }
      },
      "description": "Describes the client certificate details using thumbprint."
    },
    "Cluster": {
      "type": "object",
      "description": "The cluster resource\n",
      "properties": {
        "id": {
          "type": "string",
          "description": "Azure resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Azure resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Azure resource type.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "Azure resource location.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Azure resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "etag": {
          "type": "string",
          "description": "Azure resource etag.",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)."
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The cluster resource properties",
          "type": "object",
          "required": [
            "managementEndpoint",
            "nodeTypes"
          ],
          "properties": {
            "addOnFeatures": {
              "type": "array",
              "description": "The list of add-on features to enable in the cluster.",
              "items": {
                "type": "string",
                "description": "Available cluster add-on features",
                "enum": [
                  "RepairManager",
                  "DnsService",
                  "BackupRestoreService",
                  "ResourceMonitorService"
                ]
              }
            },
            "availableClusterVersions": {
              "type": "array",
              "description": "The Service Fabric runtime versions available for this cluster.",
              "readOnly": true,
              "items": {
                "type": "object",
                "properties": {
                  "codeVersion": {
                    "type": "string",
                    "description": "The Service Fabric runtime version of the cluster."
                  },
                  "supportExpiryUtc": {
                    "type": "string",
                    "description": "The date of expiry of support of the version."
                  },
                  "environment": {
                    "description": "Indicates if this version is for Windows or Linux operating system.",
                    "type": "string",
                    "enum": [
                      "Windows",
                      "Linux"
                    ]
                  }
                },
                "description": "The detail of the Service Fabric runtime version result"
              }
            },
            "azureActiveDirectory": {
              "description": "The AAD authentication settings of the cluster.",
              "type": "object",
              "properties": {
                "tenantId": {
                  "type": "string",
                  "description": "Azure active directory tenant id."
                },
                "clusterApplication": {
                  "type": "string",
                  "description": "Azure active directory cluster application id."
                },
                "clientApplication": {
                  "type": "string",
                  "description": "Azure active directory client application id."
                }
              }
            },
            "certificate": {
              "description": "The certificate to use for securing the cluster. The certificate provided will be used for node to node security within the cluster, SSL certificate for cluster management endpoint and default admin client.",
              "type": "object",
              "required": [
                "thumbprint"
              ],
              "properties": {
                "thumbprint": {
                  "type": "string",
                  "description": "Thumbprint of the primary certificate."
                },
                "thumbprintSecondary": {
                  "type": "string",
                  "description": "Thumbprint of the secondary certificate."
                },
                "x509StoreName": {
                  "type": "string",
                  "description": "The local certificate store location.",
                  "enum": [
                    "AddressBook",
                    "AuthRoot",
                    "CertificateAuthority",
                    "Disallowed",
                    "My",
                    "Root",
                    "TrustedPeople",
                    "TrustedPublisher"
                  ]
                }
              }
            },
            "certificateCommonNames": {
              "type": "object",
              "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
              "properties": {
                "commonNames": {
                  "type": "array",
                  "description": "The list of server certificates referenced by common name that are used to secure the cluster.",
                  "items": {
                    "type": "object",
                    "description": "Describes the server certificate details using common name.",
                    "required": [
                      "certificateCommonName",
                      "certificateIssuerThumbprint"
                    ],
                    "properties": {
                      "certificateCommonName": {
                        "type": "string",
                        "description": "The common name of the server certificate."
                      },
                      "certificateIssuerThumbprint": {
                        "type": "string",
                        "description": "The issuer thumbprint of the server certificate."
                      }
                    }
                  }
                },
                "x509StoreName": {
                  "type": "string",
                  "description": "The local certificate store location.",
                  "enum": [
                    "AddressBook",
                    "AuthRoot",
                    "CertificateAuthority",
                    "Disallowed",
                    "My",
                    "Root",
                    "TrustedPeople",
                    "TrustedPublisher"
                  ]
                }
              }
            },
            "clientCertificateCommonNames": {
              "type": "array",
              "description": "The list of client certificates referenced by common name that are allowed to manage the cluster.",
              "items": {
                "type": "object",
                "required": [
                  "certificateCommonName",
                  "isAdmin",
                  "certificateIssuerThumbprint"
                ],
                "properties": {
                  "isAdmin": {
                    "type": "boolean",
                    "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                  },
                  "certificateCommonName": {
                    "type": "string",
                    "description": "The common name of the client certificate."
                  },
                  "certificateIssuerThumbprint": {
                    "type": "string",
                    "description": "The issuer thumbprint of the client certificate."
                  }
                },
                "description": "Describes the client certificate details using common name."
              }
            },
            "clientCertificateThumbprints": {
              "type": "array",
              "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster.",
              "items": {
                "type": "object",
                "required": [
                  "certificateThumbprint",
                  "isAdmin"
                ],
                "properties": {
                  "isAdmin": {
                    "type": "boolean",
                    "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                  },
                  "certificateThumbprint": {
                    "type": "string",
                    "description": "The thumbprint of the client certificate."
                  }
                },
                "description": "Describes the client certificate details using thumbprint."
              }
            },
            "clusterCodeVersion": {
              "type": "string",
              "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](https://learn.microsoft.com/rest/api/servicefabric/cluster-versions/list). To get the list of available version for existing clusters use **availableClusterVersions**."
            },
            "clusterEndpoint": {
              "type": "string",
              "description": "The Azure Resource Provider endpoint. A system service in the cluster connects to this  endpoint.",
              "readOnly": true
            },
            "clusterId": {
              "type": "string",
              "description": "A service generated unique identifier for the cluster resource.",
              "readOnly": true
            },
            "clusterState": {
              "readOnly": true,
              "type": "string",
              "description": "The current state of the cluster.\n\n  - WaitingForNodes - Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it.\n  - Deploying - Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up.\n  - BaselineUpgrade - Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time.\n  - UpdatingUserConfiguration - Indicates that the cluster is being upgraded with the user provided configuration.\n  - UpdatingUserCertificate - Indicates that the cluster is being upgraded with the user provided certificate.\n  - UpdatingInfrastructure - Indicates that the cluster is being upgraded with the latest Service Fabric runtime version. This happens only when the **upgradeMode** is set to 'Automatic'.\n  - EnforcingClusterVersion - Indicates that cluster is on a different version than expected and the cluster is being upgraded to the expected version.\n  - UpgradeServiceUnreachable - Indicates that the system service in the cluster is no longer polling the Resource Provider. Clusters in this state cannot be managed by the Resource Provider.\n  - AutoScale - Indicates that the ReliabilityLevel of the cluster is being adjusted.\n  - Ready - Indicates that the cluster is in a stable state.\n",
              "enum": [
                "WaitingForNodes",
                "Deploying",
                "BaselineUpgrade",
                "UpdatingUserConfiguration",
                "UpdatingUserCertificate",
                "UpdatingInfrastructure",
                "EnforcingClusterVersion",
                "UpgradeServiceUnreachable",
                "AutoScale",
                "Ready"
              ]
            },
            "diagnosticsStorageAccountConfig": {
              "description": "The storage account information for storing Service Fabric diagnostic logs.",
              "type": "object",
              "required": [
                "blobEndpoint",
                "protectedAccountKeyName",
                "queueEndpoint",
                "storageAccountName",
                "tableEndpoint"
              ],
              "properties": {
                "storageAccountName": {
                  "type": "string",
                  "description": "The Azure storage account name."
                },
                "protectedAccountKeyName": {
                  "type": "string",
                  "description": "The protected diagnostics storage key name."
                },
                "protectedAccountKeyName2": {
                  "type": "string",
                  "description": "The secondary protected diagnostics storage key name. If one of the storage account keys is rotated the cluster will fallback to using the other."
                },
                "blobEndpoint": {
                  "type": "string",
                  "description": "The blob endpoint of the azure storage account."
                },
                "queueEndpoint": {
                  "type": "string",
                  "description": "The queue endpoint of the azure storage account."
                },
                "tableEndpoint": {
                  "type": "string",
                  "description": "The table endpoint of the azure storage account."
                }
              }
            },
            "eventStoreServiceEnabled": {
              "type": "boolean",
              "description": "Indicates if the event store service is enabled."
            },
            "fabricSettings": {
              "type": "array",
              "description": "The list of custom fabric settings to configure the cluster.",
              "items": {
                "type": "object",
                "required": [
                  "name",
                  "parameters"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The section name of the fabric settings."
                  },
                  "parameters": {
                    "type": "array",
                    "description": "The collection of parameters in the section.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "value"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The parameter name of fabric setting."
                        },
                        "value": {
                          "type": "string",
                          "description": "The parameter value of fabric setting."
                        }
                      },
                      "description": "Describes a parameter in fabric settings of the cluster."
                    }
                  }
                },
                "description": "Describes a section in the fabric settings of the cluster."
              }
            },
            "managementEndpoint": {
              "type": "string",
              "description": "The http management endpoint of the cluster."
            },
            "nodeTypes": {
              "type": "array",
              "description": "The list of node types in the cluster.",
              "items": {
                "type": "object",
                "required": [
                  "clientConnectionEndpointPort",
                  "httpGatewayEndpointPort",
                  "isPrimary",
                  "name",
                  "vmInstanceCount"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the node type."
                  },
                  "placementProperties": {
                    "type": "object",
                    "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
                    "additionalProperties": {
                      "type": "string",
                      "description": "Placement tag value"
                    }
                  },
                  "capacities": {
                    "type": "object",
                    "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
                    "additionalProperties": {
                      "type": "string",
                      "description": "Capacity tag value"
                    }
                  },
                  "clientConnectionEndpointPort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The TCP cluster management endpoint port."
                  },
                  "httpGatewayEndpointPort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The HTTP cluster management endpoint port."
                  },
                  "durabilityLevel": {
                    "type": "string",
                    "description": "The durability level of the node type. Learn about [DurabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - Bronze - No privileges. This is the default.\n  - Silver - The infrastructure jobs can be paused for a duration of 10 minutes per UD.\n  - Gold - The infrastructure jobs can be paused for a duration of 2 hours per UD. Gold durability can be enabled only on full node VM skus like D15_V2, G5 etc.\n",
                    "enum": [
                      "Bronze",
                      "Silver",
                      "Gold"
                    ]
                  },
                  "applicationPorts": {
                    "description": "The range of ports from which cluster assigned port to Service Fabric applications.",
                    "type": "object",
                    "required": [
                      "endPort",
                      "startPort"
                    ],
                    "properties": {
                      "startPort": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Starting port of a range of ports"
                      },
                      "endPort": {
                        "type": "integer",
                        "format": "int32",
                        "description": "End port of a range of ports"
                      }
                    }
                  },
                  "ephemeralPorts": {
                    "description": "The range of ephemeral ports that nodes in this node type should be configured with.",
                    "type": "object",
                    "required": [
                      "endPort",
                      "startPort"
                    ],
                    "properties": {
                      "startPort": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Starting port of a range of ports"
                      },
                      "endPort": {
                        "type": "integer",
                        "format": "int32",
                        "description": "End port of a range of ports"
                      }
                    }
                  },
                  "isPrimary": {
                    "type": "boolean",
                    "description": "The node type on which system services will run. Only one node type should be marked as primary. Primary node type cannot be deleted or changed for existing clusters."
                  },
                  "vmInstanceCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "VMInstanceCount should be 1 to n, where n indicates the number of VM instances corresponding to this nodeType. VMInstanceCount = 0 can be done only in these scenarios: NodeType is a secondary nodeType. Durability = Bronze or Durability >= Bronze and InfrastructureServiceManager = true. If VMInstanceCount = 0, implies the VMs for this nodeType will not be used for the initial cluster size computation.",
                    "minimum": 0,
                    "maximum": 2147483647
                  },
                  "reverseProxyEndpointPort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The endpoint used by reverse proxy."
                  },
                  "isStateless": {
                    "type": "boolean",
                    "description": "Indicates if the node type can only host Stateless workloads."
                  },
                  "multipleAvailabilityZones": {
                    "type": "boolean",
                    "description": "Indicates if the node type is enabled to support multiple zones."
                  }
                },
                "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
              }
            },
            "provisioningState": {
              "type": "string",
              "description": "The provisioning state of the cluster resource.",
              "readOnly": true,
              "enum": [
                "Updating",
                "Succeeded",
                "Failed",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            },
            "reliabilityLevel": {
              "type": "string",
              "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n",
              "enum": [
                "None",
                "Bronze",
                "Silver",
                "Gold",
                "Platinum"
              ]
            },
            "reverseProxyCertificate": {
              "description": "The server certificate used by reverse proxy.",
              "type": "object",
              "required": [
                "thumbprint"
              ],
              "properties": {
                "thumbprint": {
                  "type": "string",
                  "description": "Thumbprint of the primary certificate."
                },
                "thumbprintSecondary": {
                  "type": "string",
                  "description": "Thumbprint of the secondary certificate."
                },
                "x509StoreName": {
                  "type": "string",
                  "description": "The local certificate store location.",
                  "enum": [
                    "AddressBook",
                    "AuthRoot",
                    "CertificateAuthority",
                    "Disallowed",
                    "My",
                    "Root",
                    "TrustedPeople",
                    "TrustedPublisher"
                  ]
                }
              }
            },
            "reverseProxyCertificateCommonNames": {
              "type": "object",
              "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
              "properties": {
                "commonNames": {
                  "type": "array",
                  "description": "The list of server certificates referenced by common name that are used to secure the cluster.",
                  "items": {
                    "type": "object",
                    "description": "Describes the server certificate details using common name.",
                    "required": [
                      "certificateCommonName",
                      "certificateIssuerThumbprint"
                    ],
                    "properties": {
                      "certificateCommonName": {
                        "type": "string",
                        "description": "The common name of the server certificate."
                      },
                      "certificateIssuerThumbprint": {
                        "type": "string",
                        "description": "The issuer thumbprint of the server certificate."
                      }
                    }
                  }
                },
                "x509StoreName": {
                  "type": "string",
                  "description": "The local certificate store location.",
                  "enum": [
                    "AddressBook",
                    "AuthRoot",
                    "CertificateAuthority",
                    "Disallowed",
                    "My",
                    "Root",
                    "TrustedPeople",
                    "TrustedPublisher"
                  ]
                }
              }
            },
            "upgradeDescription": {
              "description": "The policy to use when upgrading the cluster.",
              "type": "object",
              "required": [
                "healthCheckRetryTimeout",
                "healthCheckStableDuration",
                "healthCheckWaitDuration",
                "healthPolicy",
                "upgradeDomainTimeout",
                "upgradeReplicaSetCheckTimeout",
                "upgradeTimeout"
              ],
              "properties": {
                "forceRestart": {
                  "type": "boolean",
                  "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data)."
                },
                "upgradeReplicaSetCheckTimeout": {
                  "type": "string",
                  "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                },
                "healthCheckWaitDuration": {
                  "type": "string",
                  "description": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                },
                "healthCheckStableDuration": {
                  "type": "string",
                  "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                },
                "healthCheckRetryTimeout": {
                  "type": "string",
                  "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                },
                "upgradeTimeout": {
                  "type": "string",
                  "description": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                },
                "upgradeDomainTimeout": {
                  "type": "string",
                  "description": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                },
                "healthPolicy": {
                  "description": "The cluster health policy used when upgrading the cluster.",
                  "type": "object",
                  "properties": {
                    "maxPercentUnhealthyNodes": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.\n",
                      "default": 0,
                      "minimum": 0,
                      "maximum": 100
                    },
                    "maxPercentUnhealthyApplications": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.\nThe computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.\n",
                      "default": 0,
                      "minimum": 0,
                      "maximum": 100
                    },
                    "applicationHealthPolicies": {
                      "description": "Defines the application health policy map used to evaluate the health of an application or one of its children entities.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
                        "properties": {
                          "defaultServiceTypeHealthPolicy": {
                            "description": "The health policy used by default to evaluate the health of a service type.",
                            "type": "object",
                            "properties": {
                              "maxPercentUnhealthyServices": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 100
                              }
                            }
                          },
                          "serviceTypeHealthPolicies": {
                            "description": "The map with service type health policy per service type name. The map is empty by default.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                              "properties": {
                                "maxPercentUnhealthyServices": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                  "default": 0,
                                  "minimum": 0,
                                  "maximum": 100
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "deltaHealthPolicy": {
                  "description": "The cluster delta health policy used when upgrading the cluster.",
                  "type": "object",
                  "required": [
                    "maxPercentDeltaUnhealthyApplications",
                    "maxPercentDeltaUnhealthyNodes",
                    "maxPercentUpgradeDomainDeltaUnhealthyNodes"
                  ],
                  "properties": {
                    "maxPercentDeltaUnhealthyNodes": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                      "minimum": 0,
                      "maximum": 100
                    },
                    "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.\n",
                      "minimum": 0,
                      "maximum": 100
                    },
                    "maxPercentDeltaUnhealthyApplications": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.\n",
                      "minimum": 0,
                      "maximum": 100
                    },
                    "applicationDeltaHealthPolicies": {
                      "description": "Defines the application delta health policy map used to evaluate the health of an application or one of its child entities when upgrading the cluster.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "Defines a delta health policy used to evaluate the health of an application or one of its child entities when upgrading the cluster.\n",
                        "properties": {
                          "defaultServiceTypeDeltaHealthPolicy": {
                            "description": "The delta health policy used by default to evaluate the health of a service type when upgrading the cluster.",
                            "type": "object",
                            "properties": {
                              "maxPercentDeltaUnhealthyServices": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 100
                              }
                            }
                          },
                          "serviceTypeDeltaHealthPolicies": {
                            "description": "The map with service type delta health policy per service type name. The map is empty by default.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "description": "Represents the delta health policy used to evaluate the health of services belonging to a service type when upgrading the cluster.\n",
                              "properties": {
                                "maxPercentDeltaUnhealthyServices": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                                  "default": 0,
                                  "minimum": 0,
                                  "maximum": 100
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "upgradeMode": {
              "type": "string",
              "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.",
              "enum": [
                "Automatic",
                "Manual"
              ],
              "default": "Automatic",
              "x-ms-enum": {
                "name": "UpgradeMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Automatic",
                    "description": "The cluster will be automatically upgraded to the latest Service Fabric runtime version, **upgradeWave** will determine when the upgrade starts after the new version becomes available."
                  },
                  {
                    "value": "Manual",
                    "description": "The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource."
                  }
                ]
              }
            },
            "applicationTypeVersionsCleanupPolicy": {
              "description": "The policy used to clean up unused versions.",
              "type": "object",
              "required": [
                "maxUnusedVersionsToKeep"
              ],
              "properties": {
                "maxUnusedVersionsToKeep": {
                  "type": "integer",
                  "format": "int64",
                  "minimum": 0,
                  "description": "Number of unused versions per application type to keep."
                }
              }
            },
            "vmImage": {
              "type": "string",
              "description": "The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used."
            },
            "sfZonalUpgradeMode": {
              "type": "string",
              "enum": [
                "Parallel",
                "Hierarchical"
              ],
              "x-ms-enum": {
                "name": "sfZonalUpgradeMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Parallel",
                    "description": "VMs under the node type are grouped into UDs and ignore the zone info in five UDs. This setting causes UDs across all zones to be upgraded at the same time. This deployment mode is faster for upgrades, we don't recommend it because it goes against the SDP guidelines, which state that the updates should be applied to one zone at a time."
                  },
                  {
                    "value": "Hierarchical",
                    "description": "If this value is omitted or set to Hierarchical, VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone. This update process is safer for the cluster and the user application."
                  }
                ]
              },
              "description": "This property controls the logical grouping of VMs in upgrade domains (UDs). This property can't be modified if a node type with multiple Availability Zones is already present in the cluster."
            },
            "vmssZonalUpgradeMode": {
              "type": "string",
              "enum": [
                "Parallel",
                "Hierarchical"
              ],
              "x-ms-enum": {
                "name": "vmssZonalUpgradeMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Parallel",
                    "description": "Updates will happen in all Availability Zones at once for the virtual machine scale sets."
                  },
                  {
                    "value": "Hierarchical",
                    "description": "VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone."
                  }
                ]
              },
              "description": "This property defines the upgrade mode for the virtual machine scale set, it is mandatory if a node type with multiple Availability Zones is added."
            },
            "infrastructureServiceManager": {
              "type": "boolean",
              "description": "Indicates if infrastructure service manager is enabled."
            },
            "upgradeWave": {
              "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **upgradeMode** is set to 'Automatic'.",
              "type": "string",
              "enum": [
                "Wave0",
                "Wave1",
                "Wave2"
              ],
              "x-ms-enum": {
                "name": "clusterUpgradeCadence",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Wave0",
                    "description": "Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters."
                  },
                  {
                    "value": "Wave1",
                    "description": "Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters."
                  },
                  {
                    "value": "Wave2",
                    "description": "Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters."
                  }
                ]
              }
            },
            "upgradePauseStartTimestampUtc": {
              "type": "string",
              "format": "date-time",
              "description": "Indicates the start date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC)."
            },
            "upgradePauseEndTimestampUtc": {
              "type": "string",
              "format": "date-time",
              "description": "Indicates the end date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC)."
            },
            "waveUpgradePaused": {
              "type": "boolean",
              "description": "Boolean to pause automatic runtime version upgrades to the cluster."
            },
            "notifications": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "isEnabled",
                  "notificationCategory",
                  "notificationLevel",
                  "notificationTargets"
                ],
                "properties": {
                  "isEnabled": {
                    "type": "boolean",
                    "description": "Indicates if the notification is enabled."
                  },
                  "notificationCategory": {
                    "type": "string",
                    "description": "The category of notification.",
                    "enum": [
                      "WaveProgress"
                    ],
                    "x-ms-enum": {
                      "name": "notificationCategory",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "WaveProgress",
                          "description": "Notification will be regarding wave progress."
                        }
                      ]
                    }
                  },
                  "notificationLevel": {
                    "type": "string",
                    "description": "The level of notification.",
                    "enum": [
                      "Critical",
                      "All"
                    ],
                    "x-ms-enum": {
                      "name": "notificationLevel",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Critical",
                          "description": "Receive only critical notifications."
                        },
                        {
                          "value": "All",
                          "description": "Receive all notifications."
                        }
                      ]
                    }
                  },
                  "notificationTargets": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "notificationChannel",
                        "receivers"
                      ],
                      "properties": {
                        "notificationChannel": {
                          "type": "string",
                          "description": "The notification channel indicates the type of receivers subscribed to the notification, either user or subscription.",
                          "enum": [
                            "EmailUser",
                            "EmailSubscription"
                          ],
                          "x-ms-enum": {
                            "name": "notificationChannel",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "EmailUser",
                                "description": "For email user receivers. In this case, the parameter receivers should be a list of email addresses that will receive the notifications."
                              },
                              {
                                "value": "EmailSubscription",
                                "description": "For subscription receivers. In this case, the parameter receivers should be a list of roles of the subscription for the cluster (eg. Owner, AccountAdmin, etc) that will receive the notifications."
                              }
                            ]
                          }
                        },
                        "receivers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of targets that subscribe to the notification."
                        }
                      },
                      "description": "Describes the notification target properties."
                    },
                    "description": "List of targets that subscribe to the notification."
                  }
                },
                "description": "Describes the notification channel for cluster events."
              },
              "description": "Indicates a list of notification channels for cluster events."
            }
          }
        }
      }
    },
    "ClusterCodeVersionsListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The identification of the result"
              },
              "name": {
                "type": "string",
                "description": "The name of the result"
              },
              "type": {
                "type": "string",
                "description": "The result resource type"
              },
              "properties": {
                "type": "object",
                "properties": {
                  "codeVersion": {
                    "type": "string",
                    "description": "The Service Fabric runtime version of the cluster."
                  },
                  "supportExpiryUtc": {
                    "type": "string",
                    "description": "The date of expiry of support of the version."
                  },
                  "environment": {
                    "description": "Indicates if this version is for Windows or Linux operating system.",
                    "type": "string",
                    "enum": [
                      "Windows",
                      "Linux"
                    ]
                  }
                },
                "description": "The detail of the Service Fabric runtime version result",
                "x-ms-client-flatten": true
              }
            },
            "description": "The result of the Service Fabric runtime versions"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "The list results of the Service Fabric runtime versions."
    },
    "ClusterCodeVersionsResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identification of the result"
        },
        "name": {
          "type": "string",
          "description": "The name of the result"
        },
        "type": {
          "type": "string",
          "description": "The result resource type"
        },
        "properties": {
          "type": "object",
          "properties": {
            "codeVersion": {
              "type": "string",
              "description": "The Service Fabric runtime version of the cluster."
            },
            "supportExpiryUtc": {
              "type": "string",
              "description": "The date of expiry of support of the version."
            },
            "environment": {
              "description": "Indicates if this version is for Windows or Linux operating system.",
              "type": "string",
              "enum": [
                "Windows",
                "Linux"
              ]
            }
          },
          "description": "The detail of the Service Fabric runtime version result",
          "x-ms-client-flatten": true
        }
      },
      "description": "The result of the Service Fabric runtime versions"
    },
    "ClusterEnvironment": {
      "type": "string",
      "description": "Cluster operating system, the default will be Windows",
      "enum": [
        "Windows",
        "Linux"
      ]
    },
    "ClusterHealthPolicy": {
      "type": "object",
      "required": [
        "maxPercentUnhealthyNodes",
        "maxPercentUnhealthyApplications"
      ],
      "description": "Defines a health policy used to evaluate the health of the cluster or of a cluster node.\n",
      "properties": {
        "maxPercentUnhealthyNodes": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.\n",
          "default": 0,
          "minimum": 0,
          "maximum": 100
        },
        "maxPercentUnhealthyApplications": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.\nThe computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.\n",
          "default": 0,
          "minimum": 0,
          "maximum": 100
        }
      }
    },
    "ClusterListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "The cluster resource\n",
            "properties": {
              "id": {
                "type": "string",
                "description": "Azure resource identifier.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "Azure resource name.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "Azure resource type.",
                "readOnly": true
              },
              "location": {
                "type": "string",
                "description": "Azure resource location.",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "tags": {
                "type": "object",
                "description": "Azure resource tags.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "etag": {
                "type": "string",
                "description": "Azure resource etag.",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource."
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)."
                  }
                }
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The cluster resource properties",
                "type": "object",
                "required": [
                  "managementEndpoint",
                  "nodeTypes"
                ],
                "properties": {
                  "addOnFeatures": {
                    "type": "array",
                    "description": "The list of add-on features to enable in the cluster.",
                    "items": {
                      "type": "string",
                      "description": "Available cluster add-on features",
                      "enum": [
                        "RepairManager",
                        "DnsService",
                        "BackupRestoreService",
                        "ResourceMonitorService"
                      ]
                    }
                  },
                  "availableClusterVersions": {
                    "type": "array",
                    "description": "The Service Fabric runtime versions available for this cluster.",
                    "readOnly": true,
                    "items": {
                      "type": "object",
                      "properties": {
                        "codeVersion": {
                          "type": "string",
                          "description": "The Service Fabric runtime version of the cluster."
                        },
                        "supportExpiryUtc": {
                          "type": "string",
                          "description": "The date of expiry of support of the version."
                        },
                        "environment": {
                          "description": "Indicates if this version is for Windows or Linux operating system.",
                          "type": "string",
                          "enum": [
                            "Windows",
                            "Linux"
                          ]
                        }
                      },
                      "description": "The detail of the Service Fabric runtime version result"
                    }
                  },
                  "azureActiveDirectory": {
                    "description": "The AAD authentication settings of the cluster.",
                    "type": "object",
                    "properties": {
                      "tenantId": {
                        "type": "string",
                        "description": "Azure active directory tenant id."
                      },
                      "clusterApplication": {
                        "type": "string",
                        "description": "Azure active directory cluster application id."
                      },
                      "clientApplication": {
                        "type": "string",
                        "description": "Azure active directory client application id."
                      }
                    }
                  },
                  "certificate": {
                    "description": "The certificate to use for securing the cluster. The certificate provided will be used for node to node security within the cluster, SSL certificate for cluster management endpoint and default admin client.",
                    "type": "object",
                    "required": [
                      "thumbprint"
                    ],
                    "properties": {
                      "thumbprint": {
                        "type": "string",
                        "description": "Thumbprint of the primary certificate."
                      },
                      "thumbprintSecondary": {
                        "type": "string",
                        "description": "Thumbprint of the secondary certificate."
                      },
                      "x509StoreName": {
                        "type": "string",
                        "description": "The local certificate store location.",
                        "enum": [
                          "AddressBook",
                          "AuthRoot",
                          "CertificateAuthority",
                          "Disallowed",
                          "My",
                          "Root",
                          "TrustedPeople",
                          "TrustedPublisher"
                        ]
                      }
                    }
                  },
                  "certificateCommonNames": {
                    "type": "object",
                    "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
                    "properties": {
                      "commonNames": {
                        "type": "array",
                        "description": "The list of server certificates referenced by common name that are used to secure the cluster.",
                        "items": {
                          "type": "object",
                          "description": "Describes the server certificate details using common name.",
                          "required": [
                            "certificateCommonName",
                            "certificateIssuerThumbprint"
                          ],
                          "properties": {
                            "certificateCommonName": {
                              "type": "string",
                              "description": "The common name of the server certificate."
                            },
                            "certificateIssuerThumbprint": {
                              "type": "string",
                              "description": "The issuer thumbprint of the server certificate."
                            }
                          }
                        }
                      },
                      "x509StoreName": {
                        "type": "string",
                        "description": "The local certificate store location.",
                        "enum": [
                          "AddressBook",
                          "AuthRoot",
                          "CertificateAuthority",
                          "Disallowed",
                          "My",
                          "Root",
                          "TrustedPeople",
                          "TrustedPublisher"
                        ]
                      }
                    }
                  },
                  "clientCertificateCommonNames": {
                    "type": "array",
                    "description": "The list of client certificates referenced by common name that are allowed to manage the cluster.",
                    "items": {
                      "type": "object",
                      "required": [
                        "certificateCommonName",
                        "isAdmin",
                        "certificateIssuerThumbprint"
                      ],
                      "properties": {
                        "isAdmin": {
                          "type": "boolean",
                          "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                        },
                        "certificateCommonName": {
                          "type": "string",
                          "description": "The common name of the client certificate."
                        },
                        "certificateIssuerThumbprint": {
                          "type": "string",
                          "description": "The issuer thumbprint of the client certificate."
                        }
                      },
                      "description": "Describes the client certificate details using common name."
                    }
                  },
                  "clientCertificateThumbprints": {
                    "type": "array",
                    "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster.",
                    "items": {
                      "type": "object",
                      "required": [
                        "certificateThumbprint",
                        "isAdmin"
                      ],
                      "properties": {
                        "isAdmin": {
                          "type": "boolean",
                          "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                        },
                        "certificateThumbprint": {
                          "type": "string",
                          "description": "The thumbprint of the client certificate."
                        }
                      },
                      "description": "Describes the client certificate details using thumbprint."
                    }
                  },
                  "clusterCodeVersion": {
                    "type": "string",
                    "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](https://learn.microsoft.com/rest/api/servicefabric/cluster-versions/list). To get the list of available version for existing clusters use **availableClusterVersions**."
                  },
                  "clusterEndpoint": {
                    "type": "string",
                    "description": "The Azure Resource Provider endpoint. A system service in the cluster connects to this  endpoint.",
                    "readOnly": true
                  },
                  "clusterId": {
                    "type": "string",
                    "description": "A service generated unique identifier for the cluster resource.",
                    "readOnly": true
                  },
                  "clusterState": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The current state of the cluster.\n\n  - WaitingForNodes - Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it.\n  - Deploying - Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up.\n  - BaselineUpgrade - Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time.\n  - UpdatingUserConfiguration - Indicates that the cluster is being upgraded with the user provided configuration.\n  - UpdatingUserCertificate - Indicates that the cluster is being upgraded with the user provided certificate.\n  - UpdatingInfrastructure - Indicates that the cluster is being upgraded with the latest Service Fabric runtime version. This happens only when the **upgradeMode** is set to 'Automatic'.\n  - EnforcingClusterVersion - Indicates that cluster is on a different version than expected and the cluster is being upgraded to the expected version.\n  - UpgradeServiceUnreachable - Indicates that the system service in the cluster is no longer polling the Resource Provider. Clusters in this state cannot be managed by the Resource Provider.\n  - AutoScale - Indicates that the ReliabilityLevel of the cluster is being adjusted.\n  - Ready - Indicates that the cluster is in a stable state.\n",
                    "enum": [
                      "WaitingForNodes",
                      "Deploying",
                      "BaselineUpgrade",
                      "UpdatingUserConfiguration",
                      "UpdatingUserCertificate",
                      "UpdatingInfrastructure",
                      "EnforcingClusterVersion",
                      "UpgradeServiceUnreachable",
                      "AutoScale",
                      "Ready"
                    ]
                  },
                  "diagnosticsStorageAccountConfig": {
                    "description": "The storage account information for storing Service Fabric diagnostic logs.",
                    "type": "object",
                    "required": [
                      "blobEndpoint",
                      "protectedAccountKeyName",
                      "queueEndpoint",
                      "storageAccountName",
                      "tableEndpoint"
                    ],
                    "properties": {
                      "storageAccountName": {
                        "type": "string",
                        "description": "The Azure storage account name."
                      },
                      "protectedAccountKeyName": {
                        "type": "string",
                        "description": "The protected diagnostics storage key name."
                      },
                      "protectedAccountKeyName2": {
                        "type": "string",
                        "description": "The secondary protected diagnostics storage key name. If one of the storage account keys is rotated the cluster will fallback to using the other."
                      },
                      "blobEndpoint": {
                        "type": "string",
                        "description": "The blob endpoint of the azure storage account."
                      },
                      "queueEndpoint": {
                        "type": "string",
                        "description": "The queue endpoint of the azure storage account."
                      },
                      "tableEndpoint": {
                        "type": "string",
                        "description": "The table endpoint of the azure storage account."
                      }
                    }
                  },
                  "eventStoreServiceEnabled": {
                    "type": "boolean",
                    "description": "Indicates if the event store service is enabled."
                  },
                  "fabricSettings": {
                    "type": "array",
                    "description": "The list of custom fabric settings to configure the cluster.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "parameters"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The section name of the fabric settings."
                        },
                        "parameters": {
                          "type": "array",
                          "description": "The collection of parameters in the section.",
                          "items": {
                            "type": "object",
                            "required": [
                              "name",
                              "value"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The parameter name of fabric setting."
                              },
                              "value": {
                                "type": "string",
                                "description": "The parameter value of fabric setting."
                              }
                            },
                            "description": "Describes a parameter in fabric settings of the cluster."
                          }
                        }
                      },
                      "description": "Describes a section in the fabric settings of the cluster."
                    }
                  },
                  "managementEndpoint": {
                    "type": "string",
                    "description": "The http management endpoint of the cluster."
                  },
                  "nodeTypes": {
                    "type": "array",
                    "description": "The list of node types in the cluster.",
                    "items": {
                      "type": "object",
                      "required": [
                        "clientConnectionEndpointPort",
                        "httpGatewayEndpointPort",
                        "isPrimary",
                        "name",
                        "vmInstanceCount"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the node type."
                        },
                        "placementProperties": {
                          "type": "object",
                          "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
                          "additionalProperties": {
                            "type": "string",
                            "description": "Placement tag value"
                          }
                        },
                        "capacities": {
                          "type": "object",
                          "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
                          "additionalProperties": {
                            "type": "string",
                            "description": "Capacity tag value"
                          }
                        },
                        "clientConnectionEndpointPort": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The TCP cluster management endpoint port."
                        },
                        "httpGatewayEndpointPort": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP cluster management endpoint port."
                        },
                        "durabilityLevel": {
                          "type": "string",
                          "description": "The durability level of the node type. Learn about [DurabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - Bronze - No privileges. This is the default.\n  - Silver - The infrastructure jobs can be paused for a duration of 10 minutes per UD.\n  - Gold - The infrastructure jobs can be paused for a duration of 2 hours per UD. Gold durability can be enabled only on full node VM skus like D15_V2, G5 etc.\n",
                          "enum": [
                            "Bronze",
                            "Silver",
                            "Gold"
                          ]
                        },
                        "applicationPorts": {
                          "description": "The range of ports from which cluster assigned port to Service Fabric applications.",
                          "type": "object",
                          "required": [
                            "endPort",
                            "startPort"
                          ],
                          "properties": {
                            "startPort": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Starting port of a range of ports"
                            },
                            "endPort": {
                              "type": "integer",
                              "format": "int32",
                              "description": "End port of a range of ports"
                            }
                          }
                        },
                        "ephemeralPorts": {
                          "description": "The range of ephemeral ports that nodes in this node type should be configured with.",
                          "type": "object",
                          "required": [
                            "endPort",
                            "startPort"
                          ],
                          "properties": {
                            "startPort": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Starting port of a range of ports"
                            },
                            "endPort": {
                              "type": "integer",
                              "format": "int32",
                              "description": "End port of a range of ports"
                            }
                          }
                        },
                        "isPrimary": {
                          "type": "boolean",
                          "description": "The node type on which system services will run. Only one node type should be marked as primary. Primary node type cannot be deleted or changed for existing clusters."
                        },
                        "vmInstanceCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "VMInstanceCount should be 1 to n, where n indicates the number of VM instances corresponding to this nodeType. VMInstanceCount = 0 can be done only in these scenarios: NodeType is a secondary nodeType. Durability = Bronze or Durability >= Bronze and InfrastructureServiceManager = true. If VMInstanceCount = 0, implies the VMs for this nodeType will not be used for the initial cluster size computation.",
                          "minimum": 0,
                          "maximum": 2147483647
                        },
                        "reverseProxyEndpointPort": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The endpoint used by reverse proxy."
                        },
                        "isStateless": {
                          "type": "boolean",
                          "description": "Indicates if the node type can only host Stateless workloads."
                        },
                        "multipleAvailabilityZones": {
                          "type": "boolean",
                          "description": "Indicates if the node type is enabled to support multiple zones."
                        }
                      },
                      "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
                    }
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "The provisioning state of the cluster resource.",
                    "readOnly": true,
                    "enum": [
                      "Updating",
                      "Succeeded",
                      "Failed",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "reliabilityLevel": {
                    "type": "string",
                    "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n",
                    "enum": [
                      "None",
                      "Bronze",
                      "Silver",
                      "Gold",
                      "Platinum"
                    ]
                  },
                  "reverseProxyCertificate": {
                    "description": "The server certificate used by reverse proxy.",
                    "type": "object",
                    "required": [
                      "thumbprint"
                    ],
                    "properties": {
                      "thumbprint": {
                        "type": "string",
                        "description": "Thumbprint of the primary certificate."
                      },
                      "thumbprintSecondary": {
                        "type": "string",
                        "description": "Thumbprint of the secondary certificate."
                      },
                      "x509StoreName": {
                        "type": "string",
                        "description": "The local certificate store location.",
                        "enum": [
                          "AddressBook",
                          "AuthRoot",
                          "CertificateAuthority",
                          "Disallowed",
                          "My",
                          "Root",
                          "TrustedPeople",
                          "TrustedPublisher"
                        ]
                      }
                    }
                  },
                  "reverseProxyCertificateCommonNames": {
                    "type": "object",
                    "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
                    "properties": {
                      "commonNames": {
                        "type": "array",
                        "description": "The list of server certificates referenced by common name that are used to secure the cluster.",
                        "items": {
                          "type": "object",
                          "description": "Describes the server certificate details using common name.",
                          "required": [
                            "certificateCommonName",
                            "certificateIssuerThumbprint"
                          ],
                          "properties": {
                            "certificateCommonName": {
                              "type": "string",
                              "description": "The common name of the server certificate."
                            },
                            "certificateIssuerThumbprint": {
                              "type": "string",
                              "description": "The issuer thumbprint of the server certificate."
                            }
                          }
                        }
                      },
                      "x509StoreName": {
                        "type": "string",
                        "description": "The local certificate store location.",
                        "enum": [
                          "AddressBook",
                          "AuthRoot",
                          "CertificateAuthority",
                          "Disallowed",
                          "My",
                          "Root",
                          "TrustedPeople",
                          "TrustedPublisher"
                        ]
                      }
                    }
                  },
                  "upgradeDescription": {
                    "description": "The policy to use when upgrading the cluster.",
                    "type": "object",
                    "required": [
                      "healthCheckRetryTimeout",
                      "healthCheckStableDuration",
                      "healthCheckWaitDuration",
                      "healthPolicy",
                      "upgradeDomainTimeout",
                      "upgradeReplicaSetCheckTimeout",
                      "upgradeTimeout"
                    ],
                    "properties": {
                      "forceRestart": {
                        "type": "boolean",
                        "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data)."
                      },
                      "upgradeReplicaSetCheckTimeout": {
                        "type": "string",
                        "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                      },
                      "healthCheckWaitDuration": {
                        "type": "string",
                        "description": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                      },
                      "healthCheckStableDuration": {
                        "type": "string",
                        "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                      },
                      "healthCheckRetryTimeout": {
                        "type": "string",
                        "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                      },
                      "upgradeTimeout": {
                        "type": "string",
                        "description": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                      },
                      "upgradeDomainTimeout": {
                        "type": "string",
                        "description": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                      },
                      "healthPolicy": {
                        "description": "The cluster health policy used when upgrading the cluster.",
                        "type": "object",
                        "properties": {
                          "maxPercentUnhealthyNodes": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.\n",
                            "default": 0,
                            "minimum": 0,
                            "maximum": 100
                          },
                          "maxPercentUnhealthyApplications": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.\nThe computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.\n",
                            "default": 0,
                            "minimum": 0,
                            "maximum": 100
                          },
                          "applicationHealthPolicies": {
                            "description": "Defines the application health policy map used to evaluate the health of an application or one of its children entities.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
                              "properties": {
                                "defaultServiceTypeHealthPolicy": {
                                  "description": "The health policy used by default to evaluate the health of a service type.",
                                  "type": "object",
                                  "properties": {
                                    "maxPercentUnhealthyServices": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                      "default": 0,
                                      "minimum": 0,
                                      "maximum": 100
                                    }
                                  }
                                },
                                "serviceTypeHealthPolicies": {
                                  "description": "The map with service type health policy per service type name. The map is empty by default.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "object",
                                    "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                                    "properties": {
                                      "maxPercentUnhealthyServices": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                        "default": 0,
                                        "minimum": 0,
                                        "maximum": 100
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "deltaHealthPolicy": {
                        "description": "The cluster delta health policy used when upgrading the cluster.",
                        "type": "object",
                        "required": [
                          "maxPercentDeltaUnhealthyApplications",
                          "maxPercentDeltaUnhealthyNodes",
                          "maxPercentUpgradeDomainDeltaUnhealthyNodes"
                        ],
                        "properties": {
                          "maxPercentDeltaUnhealthyNodes": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                            "minimum": 0,
                            "maximum": 100
                          },
                          "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.\n",
                            "minimum": 0,
                            "maximum": 100
                          },
                          "maxPercentDeltaUnhealthyApplications": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.\n",
                            "minimum": 0,
                            "maximum": 100
                          },
                          "applicationDeltaHealthPolicies": {
                            "description": "Defines the application delta health policy map used to evaluate the health of an application or one of its child entities when upgrading the cluster.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "description": "Defines a delta health policy used to evaluate the health of an application or one of its child entities when upgrading the cluster.\n",
                              "properties": {
                                "defaultServiceTypeDeltaHealthPolicy": {
                                  "description": "The delta health policy used by default to evaluate the health of a service type when upgrading the cluster.",
                                  "type": "object",
                                  "properties": {
                                    "maxPercentDeltaUnhealthyServices": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                                      "default": 0,
                                      "minimum": 0,
                                      "maximum": 100
                                    }
                                  }
                                },
                                "serviceTypeDeltaHealthPolicies": {
                                  "description": "The map with service type delta health policy per service type name. The map is empty by default.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "object",
                                    "description": "Represents the delta health policy used to evaluate the health of services belonging to a service type when upgrading the cluster.\n",
                                    "properties": {
                                      "maxPercentDeltaUnhealthyServices": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                                        "default": 0,
                                        "minimum": 0,
                                        "maximum": 100
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "upgradeMode": {
                    "type": "string",
                    "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.",
                    "enum": [
                      "Automatic",
                      "Manual"
                    ],
                    "default": "Automatic",
                    "x-ms-enum": {
                      "name": "UpgradeMode",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Automatic",
                          "description": "The cluster will be automatically upgraded to the latest Service Fabric runtime version, **upgradeWave** will determine when the upgrade starts after the new version becomes available."
                        },
                        {
                          "value": "Manual",
                          "description": "The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource."
                        }
                      ]
                    }
                  },
                  "applicationTypeVersionsCleanupPolicy": {
                    "description": "The policy used to clean up unused versions.",
                    "type": "object",
                    "required": [
                      "maxUnusedVersionsToKeep"
                    ],
                    "properties": {
                      "maxUnusedVersionsToKeep": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "description": "Number of unused versions per application type to keep."
                      }
                    }
                  },
                  "vmImage": {
                    "type": "string",
                    "description": "The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used."
                  },
                  "sfZonalUpgradeMode": {
                    "type": "string",
                    "enum": [
                      "Parallel",
                      "Hierarchical"
                    ],
                    "x-ms-enum": {
                      "name": "sfZonalUpgradeMode",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Parallel",
                          "description": "VMs under the node type are grouped into UDs and ignore the zone info in five UDs. This setting causes UDs across all zones to be upgraded at the same time. This deployment mode is faster for upgrades, we don't recommend it because it goes against the SDP guidelines, which state that the updates should be applied to one zone at a time."
                        },
                        {
                          "value": "Hierarchical",
                          "description": "If this value is omitted or set to Hierarchical, VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone. This update process is safer for the cluster and the user application."
                        }
                      ]
                    },
                    "description": "This property controls the logical grouping of VMs in upgrade domains (UDs). This property can't be modified if a node type with multiple Availability Zones is already present in the cluster."
                  },
                  "vmssZonalUpgradeMode": {
                    "type": "string",
                    "enum": [
                      "Parallel",
                      "Hierarchical"
                    ],
                    "x-ms-enum": {
                      "name": "vmssZonalUpgradeMode",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Parallel",
                          "description": "Updates will happen in all Availability Zones at once for the virtual machine scale sets."
                        },
                        {
                          "value": "Hierarchical",
                          "description": "VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone."
                        }
                      ]
                    },
                    "description": "This property defines the upgrade mode for the virtual machine scale set, it is mandatory if a node type with multiple Availability Zones is added."
                  },
                  "infrastructureServiceManager": {
                    "type": "boolean",
                    "description": "Indicates if infrastructure service manager is enabled."
                  },
                  "upgradeWave": {
                    "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **upgradeMode** is set to 'Automatic'.",
                    "type": "string",
                    "enum": [
                      "Wave0",
                      "Wave1",
                      "Wave2"
                    ],
                    "x-ms-enum": {
                      "name": "clusterUpgradeCadence",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Wave0",
                          "description": "Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters."
                        },
                        {
                          "value": "Wave1",
                          "description": "Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters."
                        },
                        {
                          "value": "Wave2",
                          "description": "Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters."
                        }
                      ]
                    }
                  },
                  "upgradePauseStartTimestampUtc": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Indicates the start date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC)."
                  },
                  "upgradePauseEndTimestampUtc": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Indicates the end date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC)."
                  },
                  "waveUpgradePaused": {
                    "type": "boolean",
                    "description": "Boolean to pause automatic runtime version upgrades to the cluster."
                  },
                  "notifications": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "isEnabled",
                        "notificationCategory",
                        "notificationLevel",
                        "notificationTargets"
                      ],
                      "properties": {
                        "isEnabled": {
                          "type": "boolean",
                          "description": "Indicates if the notification is enabled."
                        },
                        "notificationCategory": {
                          "type": "string",
                          "description": "The category of notification.",
                          "enum": [
                            "WaveProgress"
                          ],
                          "x-ms-enum": {
                            "name": "notificationCategory",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "WaveProgress",
                                "description": "Notification will be regarding wave progress."
                              }
                            ]
                          }
                        },
                        "notificationLevel": {
                          "type": "string",
                          "description": "The level of notification.",
                          "enum": [
                            "Critical",
                            "All"
                          ],
                          "x-ms-enum": {
                            "name": "notificationLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Critical",
                                "description": "Receive only critical notifications."
                              },
                              {
                                "value": "All",
                                "description": "Receive all notifications."
                              }
                            ]
                          }
                        },
                        "notificationTargets": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "notificationChannel",
                              "receivers"
                            ],
                            "properties": {
                              "notificationChannel": {
                                "type": "string",
                                "description": "The notification channel indicates the type of receivers subscribed to the notification, either user or subscription.",
                                "enum": [
                                  "EmailUser",
                                  "EmailSubscription"
                                ],
                                "x-ms-enum": {
                                  "name": "notificationChannel",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "EmailUser",
                                      "description": "For email user receivers. In this case, the parameter receivers should be a list of email addresses that will receive the notifications."
                                    },
                                    {
                                      "value": "EmailSubscription",
                                      "description": "For subscription receivers. In this case, the parameter receivers should be a list of roles of the subscription for the cluster (eg. Owner, AccountAdmin, etc) that will receive the notifications."
                                    }
                                  ]
                                }
                              },
                              "receivers": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "List of targets that subscribe to the notification."
                              }
                            },
                            "description": "Describes the notification target properties."
                          },
                          "description": "List of targets that subscribe to the notification."
                        }
                      },
                      "description": "Describes the notification channel for cluster events."
                    },
                    "description": "Indicates a list of notification channels for cluster events."
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "Cluster list results"
    },
    "ClusterProperties": {
      "type": "object",
      "required": [
        "managementEndpoint",
        "nodeTypes"
      ],
      "properties": {
        "addOnFeatures": {
          "type": "array",
          "description": "The list of add-on features to enable in the cluster.",
          "items": {
            "type": "string",
            "description": "Available cluster add-on features",
            "enum": [
              "RepairManager",
              "DnsService",
              "BackupRestoreService",
              "ResourceMonitorService"
            ]
          }
        },
        "availableClusterVersions": {
          "type": "array",
          "description": "The Service Fabric runtime versions available for this cluster.",
          "readOnly": true,
          "items": {
            "type": "object",
            "properties": {
              "codeVersion": {
                "type": "string",
                "description": "The Service Fabric runtime version of the cluster."
              },
              "supportExpiryUtc": {
                "type": "string",
                "description": "The date of expiry of support of the version."
              },
              "environment": {
                "description": "Indicates if this version is for Windows or Linux operating system.",
                "type": "string",
                "enum": [
                  "Windows",
                  "Linux"
                ]
              }
            },
            "description": "The detail of the Service Fabric runtime version result"
          }
        },
        "azureActiveDirectory": {
          "description": "The AAD authentication settings of the cluster.",
          "type": "object",
          "properties": {
            "tenantId": {
              "type": "string",
              "description": "Azure active directory tenant id."
            },
            "clusterApplication": {
              "type": "string",
              "description": "Azure active directory cluster application id."
            },
            "clientApplication": {
              "type": "string",
              "description": "Azure active directory client application id."
            }
          }
        },
        "certificate": {
          "description": "The certificate to use for securing the cluster. The certificate provided will be used for node to node security within the cluster, SSL certificate for cluster management endpoint and default admin client.",
          "type": "object",
          "required": [
            "thumbprint"
          ],
          "properties": {
            "thumbprint": {
              "type": "string",
              "description": "Thumbprint of the primary certificate."
            },
            "thumbprintSecondary": {
              "type": "string",
              "description": "Thumbprint of the secondary certificate."
            },
            "x509StoreName": {
              "type": "string",
              "description": "The local certificate store location.",
              "enum": [
                "AddressBook",
                "AuthRoot",
                "CertificateAuthority",
                "Disallowed",
                "My",
                "Root",
                "TrustedPeople",
                "TrustedPublisher"
              ]
            }
          }
        },
        "certificateCommonNames": {
          "type": "object",
          "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
          "properties": {
            "commonNames": {
              "type": "array",
              "description": "The list of server certificates referenced by common name that are used to secure the cluster.",
              "items": {
                "type": "object",
                "description": "Describes the server certificate details using common name.",
                "required": [
                  "certificateCommonName",
                  "certificateIssuerThumbprint"
                ],
                "properties": {
                  "certificateCommonName": {
                    "type": "string",
                    "description": "The common name of the server certificate."
                  },
                  "certificateIssuerThumbprint": {
                    "type": "string",
                    "description": "The issuer thumbprint of the server certificate."
                  }
                }
              }
            },
            "x509StoreName": {
              "type": "string",
              "description": "The local certificate store location.",
              "enum": [
                "AddressBook",
                "AuthRoot",
                "CertificateAuthority",
                "Disallowed",
                "My",
                "Root",
                "TrustedPeople",
                "TrustedPublisher"
              ]
            }
          }
        },
        "clientCertificateCommonNames": {
          "type": "array",
          "description": "The list of client certificates referenced by common name that are allowed to manage the cluster.",
          "items": {
            "type": "object",
            "required": [
              "certificateCommonName",
              "isAdmin",
              "certificateIssuerThumbprint"
            ],
            "properties": {
              "isAdmin": {
                "type": "boolean",
                "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
              },
              "certificateCommonName": {
                "type": "string",
                "description": "The common name of the client certificate."
              },
              "certificateIssuerThumbprint": {
                "type": "string",
                "description": "The issuer thumbprint of the client certificate."
              }
            },
            "description": "Describes the client certificate details using common name."
          }
        },
        "clientCertificateThumbprints": {
          "type": "array",
          "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster.",
          "items": {
            "type": "object",
            "required": [
              "certificateThumbprint",
              "isAdmin"
            ],
            "properties": {
              "isAdmin": {
                "type": "boolean",
                "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
              },
              "certificateThumbprint": {
                "type": "string",
                "description": "The thumbprint of the client certificate."
              }
            },
            "description": "Describes the client certificate details using thumbprint."
          }
        },
        "clusterCodeVersion": {
          "type": "string",
          "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](https://learn.microsoft.com/rest/api/servicefabric/cluster-versions/list). To get the list of available version for existing clusters use **availableClusterVersions**."
        },
        "clusterEndpoint": {
          "type": "string",
          "description": "The Azure Resource Provider endpoint. A system service in the cluster connects to this  endpoint.",
          "readOnly": true
        },
        "clusterId": {
          "type": "string",
          "description": "A service generated unique identifier for the cluster resource.",
          "readOnly": true
        },
        "clusterState": {
          "readOnly": true,
          "type": "string",
          "description": "The current state of the cluster.\n\n  - WaitingForNodes - Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it.\n  - Deploying - Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up.\n  - BaselineUpgrade - Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time.\n  - UpdatingUserConfiguration - Indicates that the cluster is being upgraded with the user provided configuration.\n  - UpdatingUserCertificate - Indicates that the cluster is being upgraded with the user provided certificate.\n  - UpdatingInfrastructure - Indicates that the cluster is being upgraded with the latest Service Fabric runtime version. This happens only when the **upgradeMode** is set to 'Automatic'.\n  - EnforcingClusterVersion - Indicates that cluster is on a different version than expected and the cluster is being upgraded to the expected version.\n  - UpgradeServiceUnreachable - Indicates that the system service in the cluster is no longer polling the Resource Provider. Clusters in this state cannot be managed by the Resource Provider.\n  - AutoScale - Indicates that the ReliabilityLevel of the cluster is being adjusted.\n  - Ready - Indicates that the cluster is in a stable state.\n",
          "enum": [
            "WaitingForNodes",
            "Deploying",
            "BaselineUpgrade",
            "UpdatingUserConfiguration",
            "UpdatingUserCertificate",
            "UpdatingInfrastructure",
            "EnforcingClusterVersion",
            "UpgradeServiceUnreachable",
            "AutoScale",
            "Ready"
          ]
        },
        "diagnosticsStorageAccountConfig": {
          "description": "The storage account information for storing Service Fabric diagnostic logs.",
          "type": "object",
          "required": [
            "blobEndpoint",
            "protectedAccountKeyName",
            "queueEndpoint",
            "storageAccountName",
            "tableEndpoint"
          ],
          "properties": {
            "storageAccountName": {
              "type": "string",
              "description": "The Azure storage account name."
            },
            "protectedAccountKeyName": {
              "type": "string",
              "description": "The protected diagnostics storage key name."
            },
            "protectedAccountKeyName2": {
              "type": "string",
              "description": "The secondary protected diagnostics storage key name. If one of the storage account keys is rotated the cluster will fallback to using the other."
            },
            "blobEndpoint": {
              "type": "string",
              "description": "The blob endpoint of the azure storage account."
            },
            "queueEndpoint": {
              "type": "string",
              "description": "The queue endpoint of the azure storage account."
            },
            "tableEndpoint": {
              "type": "string",
              "description": "The table endpoint of the azure storage account."
            }
          }
        },
        "eventStoreServiceEnabled": {
          "type": "boolean",
          "description": "Indicates if the event store service is enabled."
        },
        "fabricSettings": {
          "type": "array",
          "description": "The list of custom fabric settings to configure the cluster.",
          "items": {
            "type": "object",
            "required": [
              "name",
              "parameters"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "The section name of the fabric settings."
              },
              "parameters": {
                "type": "array",
                "description": "The collection of parameters in the section.",
                "items": {
                  "type": "object",
                  "required": [
                    "name",
                    "value"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The parameter name of fabric setting."
                    },
                    "value": {
                      "type": "string",
                      "description": "The parameter value of fabric setting."
                    }
                  },
                  "description": "Describes a parameter in fabric settings of the cluster."
                }
              }
            },
            "description": "Describes a section in the fabric settings of the cluster."
          }
        },
        "managementEndpoint": {
          "type": "string",
          "description": "The http management endpoint of the cluster."
        },
        "nodeTypes": {
          "type": "array",
          "description": "The list of node types in the cluster.",
          "items": {
            "type": "object",
            "required": [
              "clientConnectionEndpointPort",
              "httpGatewayEndpointPort",
              "isPrimary",
              "name",
              "vmInstanceCount"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the node type."
              },
              "placementProperties": {
                "type": "object",
                "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
                "additionalProperties": {
                  "type": "string",
                  "description": "Placement tag value"
                }
              },
              "capacities": {
                "type": "object",
                "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
                "additionalProperties": {
                  "type": "string",
                  "description": "Capacity tag value"
                }
              },
              "clientConnectionEndpointPort": {
                "type": "integer",
                "format": "int32",
                "description": "The TCP cluster management endpoint port."
              },
              "httpGatewayEndpointPort": {
                "type": "integer",
                "format": "int32",
                "description": "The HTTP cluster management endpoint port."
              },
              "durabilityLevel": {
                "type": "string",
                "description": "The durability level of the node type. Learn about [DurabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - Bronze - No privileges. This is the default.\n  - Silver - The infrastructure jobs can be paused for a duration of 10 minutes per UD.\n  - Gold - The infrastructure jobs can be paused for a duration of 2 hours per UD. Gold durability can be enabled only on full node VM skus like D15_V2, G5 etc.\n",
                "enum": [
                  "Bronze",
                  "Silver",
                  "Gold"
                ]
              },
              "applicationPorts": {
                "description": "The range of ports from which cluster assigned port to Service Fabric applications.",
                "type": "object",
                "required": [
                  "endPort",
                  "startPort"
                ],
                "properties": {
                  "startPort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Starting port of a range of ports"
                  },
                  "endPort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "End port of a range of ports"
                  }
                }
              },
              "ephemeralPorts": {
                "description": "The range of ephemeral ports that nodes in this node type should be configured with.",
                "type": "object",
                "required": [
                  "endPort",
                  "startPort"
                ],
                "properties": {
                  "startPort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Starting port of a range of ports"
                  },
                  "endPort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "End port of a range of ports"
                  }
                }
              },
              "isPrimary": {
                "type": "boolean",
                "description": "The node type on which system services will run. Only one node type should be marked as primary. Primary node type cannot be deleted or changed for existing clusters."
              },
              "vmInstanceCount": {
                "type": "integer",
                "format": "int32",
                "description": "VMInstanceCount should be 1 to n, where n indicates the number of VM instances corresponding to this nodeType. VMInstanceCount = 0 can be done only in these scenarios: NodeType is a secondary nodeType. Durability = Bronze or Durability >= Bronze and InfrastructureServiceManager = true. If VMInstanceCount = 0, implies the VMs for this nodeType will not be used for the initial cluster size computation.",
                "minimum": 0,
                "maximum": 2147483647
              },
              "reverseProxyEndpointPort": {
                "type": "integer",
                "format": "int32",
                "description": "The endpoint used by reverse proxy."
              },
              "isStateless": {
                "type": "boolean",
                "description": "Indicates if the node type can only host Stateless workloads."
              },
              "multipleAvailabilityZones": {
                "type": "boolean",
                "description": "Indicates if the node type is enabled to support multiple zones."
              }
            },
            "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
          }
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the cluster resource.",
          "readOnly": true,
          "enum": [
            "Updating",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "reliabilityLevel": {
          "type": "string",
          "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n",
          "enum": [
            "None",
            "Bronze",
            "Silver",
            "Gold",
            "Platinum"
          ]
        },
        "reverseProxyCertificate": {
          "description": "The server certificate used by reverse proxy.",
          "type": "object",
          "required": [
            "thumbprint"
          ],
          "properties": {
            "thumbprint": {
              "type": "string",
              "description": "Thumbprint of the primary certificate."
            },
            "thumbprintSecondary": {
              "type": "string",
              "description": "Thumbprint of the secondary certificate."
            },
            "x509StoreName": {
              "type": "string",
              "description": "The local certificate store location.",
              "enum": [
                "AddressBook",
                "AuthRoot",
                "CertificateAuthority",
                "Disallowed",
                "My",
                "Root",
                "TrustedPeople",
                "TrustedPublisher"
              ]
            }
          }
        },
        "reverseProxyCertificateCommonNames": {
          "type": "object",
          "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
          "properties": {
            "commonNames": {
              "type": "array",
              "description": "The list of server certificates referenced by common name that are used to secure the cluster.",
              "items": {
                "type": "object",
                "description": "Describes the server certificate details using common name.",
                "required": [
                  "certificateCommonName",
                  "certificateIssuerThumbprint"
                ],
                "properties": {
                  "certificateCommonName": {
                    "type": "string",
                    "description": "The common name of the server certificate."
                  },
                  "certificateIssuerThumbprint": {
                    "type": "string",
                    "description": "The issuer thumbprint of the server certificate."
                  }
                }
              }
            },
            "x509StoreName": {
              "type": "string",
              "description": "The local certificate store location.",
              "enum": [
                "AddressBook",
                "AuthRoot",
                "CertificateAuthority",
                "Disallowed",
                "My",
                "Root",
                "TrustedPeople",
                "TrustedPublisher"
              ]
            }
          }
        },
        "upgradeDescription": {
          "description": "The policy to use when upgrading the cluster.",
          "type": "object",
          "required": [
            "healthCheckRetryTimeout",
            "healthCheckStableDuration",
            "healthCheckWaitDuration",
            "healthPolicy",
            "upgradeDomainTimeout",
            "upgradeReplicaSetCheckTimeout",
            "upgradeTimeout"
          ],
          "properties": {
            "forceRestart": {
              "type": "boolean",
              "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data)."
            },
            "upgradeReplicaSetCheckTimeout": {
              "type": "string",
              "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
            },
            "healthCheckWaitDuration": {
              "type": "string",
              "description": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
            },
            "healthCheckStableDuration": {
              "type": "string",
              "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
            },
            "healthCheckRetryTimeout": {
              "type": "string",
              "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
            },
            "upgradeTimeout": {
              "type": "string",
              "description": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
            },
            "upgradeDomainTimeout": {
              "type": "string",
              "description": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
            },
            "healthPolicy": {
              "description": "The cluster health policy used when upgrading the cluster.",
              "type": "object",
              "properties": {
                "maxPercentUnhealthyNodes": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.\n",
                  "default": 0,
                  "minimum": 0,
                  "maximum": 100
                },
                "maxPercentUnhealthyApplications": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.\nThe computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.\n",
                  "default": 0,
                  "minimum": 0,
                  "maximum": 100
                },
                "applicationHealthPolicies": {
                  "description": "Defines the application health policy map used to evaluate the health of an application or one of its children entities.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
                    "properties": {
                      "defaultServiceTypeHealthPolicy": {
                        "description": "The health policy used by default to evaluate the health of a service type.",
                        "type": "object",
                        "properties": {
                          "maxPercentUnhealthyServices": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                            "default": 0,
                            "minimum": 0,
                            "maximum": 100
                          }
                        }
                      },
                      "serviceTypeHealthPolicies": {
                        "description": "The map with service type health policy per service type name. The map is empty by default.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                          "properties": {
                            "maxPercentUnhealthyServices": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 100
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "deltaHealthPolicy": {
              "description": "The cluster delta health policy used when upgrading the cluster.",
              "type": "object",
              "required": [
                "maxPercentDeltaUnhealthyApplications",
                "maxPercentDeltaUnhealthyNodes",
                "maxPercentUpgradeDomainDeltaUnhealthyNodes"
              ],
              "properties": {
                "maxPercentDeltaUnhealthyNodes": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                  "minimum": 0,
                  "maximum": 100
                },
                "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.\n",
                  "minimum": 0,
                  "maximum": 100
                },
                "maxPercentDeltaUnhealthyApplications": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.\n",
                  "minimum": 0,
                  "maximum": 100
                },
                "applicationDeltaHealthPolicies": {
                  "description": "Defines the application delta health policy map used to evaluate the health of an application or one of its child entities when upgrading the cluster.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "description": "Defines a delta health policy used to evaluate the health of an application or one of its child entities when upgrading the cluster.\n",
                    "properties": {
                      "defaultServiceTypeDeltaHealthPolicy": {
                        "description": "The delta health policy used by default to evaluate the health of a service type when upgrading the cluster.",
                        "type": "object",
                        "properties": {
                          "maxPercentDeltaUnhealthyServices": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                            "default": 0,
                            "minimum": 0,
                            "maximum": 100
                          }
                        }
                      },
                      "serviceTypeDeltaHealthPolicies": {
                        "description": "The map with service type delta health policy per service type name. The map is empty by default.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "description": "Represents the delta health policy used to evaluate the health of services belonging to a service type when upgrading the cluster.\n",
                          "properties": {
                            "maxPercentDeltaUnhealthyServices": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 100
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "upgradeMode": {
          "type": "string",
          "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.",
          "enum": [
            "Automatic",
            "Manual"
          ],
          "default": "Automatic",
          "x-ms-enum": {
            "name": "UpgradeMode",
            "modelAsString": true,
            "values": [
              {
                "value": "Automatic",
                "description": "The cluster will be automatically upgraded to the latest Service Fabric runtime version, **upgradeWave** will determine when the upgrade starts after the new version becomes available."
              },
              {
                "value": "Manual",
                "description": "The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource."
              }
            ]
          }
        },
        "applicationTypeVersionsCleanupPolicy": {
          "description": "The policy used to clean up unused versions.",
          "type": "object",
          "required": [
            "maxUnusedVersionsToKeep"
          ],
          "properties": {
            "maxUnusedVersionsToKeep": {
              "type": "integer",
              "format": "int64",
              "minimum": 0,
              "description": "Number of unused versions per application type to keep."
            }
          }
        },
        "vmImage": {
          "type": "string",
          "description": "The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used."
        },
        "sfZonalUpgradeMode": {
          "type": "string",
          "enum": [
            "Parallel",
            "Hierarchical"
          ],
          "x-ms-enum": {
            "name": "sfZonalUpgradeMode",
            "modelAsString": true,
            "values": [
              {
                "value": "Parallel",
                "description": "VMs under the node type are grouped into UDs and ignore the zone info in five UDs. This setting causes UDs across all zones to be upgraded at the same time. This deployment mode is faster for upgrades, we don't recommend it because it goes against the SDP guidelines, which state that the updates should be applied to one zone at a time."
              },
              {
                "value": "Hierarchical",
                "description": "If this value is omitted or set to Hierarchical, VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone. This update process is safer for the cluster and the user application."
              }
            ]
          },
          "description": "This property controls the logical grouping of VMs in upgrade domains (UDs). This property can't be modified if a node type with multiple Availability Zones is already present in the cluster."
        },
        "vmssZonalUpgradeMode": {
          "type": "string",
          "enum": [
            "Parallel",
            "Hierarchical"
          ],
          "x-ms-enum": {
            "name": "vmssZonalUpgradeMode",
            "modelAsString": true,
            "values": [
              {
                "value": "Parallel",
                "description": "Updates will happen in all Availability Zones at once for the virtual machine scale sets."
              },
              {
                "value": "Hierarchical",
                "description": "VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone."
              }
            ]
          },
          "description": "This property defines the upgrade mode for the virtual machine scale set, it is mandatory if a node type with multiple Availability Zones is added."
        },
        "infrastructureServiceManager": {
          "type": "boolean",
          "description": "Indicates if infrastructure service manager is enabled."
        },
        "upgradeWave": {
          "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **upgradeMode** is set to 'Automatic'.",
          "type": "string",
          "enum": [
            "Wave0",
            "Wave1",
            "Wave2"
          ],
          "x-ms-enum": {
            "name": "clusterUpgradeCadence",
            "modelAsString": true,
            "values": [
              {
                "value": "Wave0",
                "description": "Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters."
              },
              {
                "value": "Wave1",
                "description": "Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters."
              },
              {
                "value": "Wave2",
                "description": "Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters."
              }
            ]
          }
        },
        "upgradePauseStartTimestampUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Indicates the start date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC)."
        },
        "upgradePauseEndTimestampUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Indicates the end date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC)."
        },
        "waveUpgradePaused": {
          "type": "boolean",
          "description": "Boolean to pause automatic runtime version upgrades to the cluster."
        },
        "notifications": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "isEnabled",
              "notificationCategory",
              "notificationLevel",
              "notificationTargets"
            ],
            "properties": {
              "isEnabled": {
                "type": "boolean",
                "description": "Indicates if the notification is enabled."
              },
              "notificationCategory": {
                "type": "string",
                "description": "The category of notification.",
                "enum": [
                  "WaveProgress"
                ],
                "x-ms-enum": {
                  "name": "notificationCategory",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "WaveProgress",
                      "description": "Notification will be regarding wave progress."
                    }
                  ]
                }
              },
              "notificationLevel": {
                "type": "string",
                "description": "The level of notification.",
                "enum": [
                  "Critical",
                  "All"
                ],
                "x-ms-enum": {
                  "name": "notificationLevel",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "Critical",
                      "description": "Receive only critical notifications."
                    },
                    {
                      "value": "All",
                      "description": "Receive all notifications."
                    }
                  ]
                }
              },
              "notificationTargets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "notificationChannel",
                    "receivers"
                  ],
                  "properties": {
                    "notificationChannel": {
                      "type": "string",
                      "description": "The notification channel indicates the type of receivers subscribed to the notification, either user or subscription.",
                      "enum": [
                        "EmailUser",
                        "EmailSubscription"
                      ],
                      "x-ms-enum": {
                        "name": "notificationChannel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "EmailUser",
                            "description": "For email user receivers. In this case, the parameter receivers should be a list of email addresses that will receive the notifications."
                          },
                          {
                            "value": "EmailSubscription",
                            "description": "For subscription receivers. In this case, the parameter receivers should be a list of roles of the subscription for the cluster (eg. Owner, AccountAdmin, etc) that will receive the notifications."
                          }
                        ]
                      }
                    },
                    "receivers": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of targets that subscribe to the notification."
                    }
                  },
                  "description": "Describes the notification target properties."
                },
                "description": "List of targets that subscribe to the notification."
              }
            },
            "description": "Describes the notification channel for cluster events."
          },
          "description": "Indicates a list of notification channels for cluster events."
        }
      },
      "description": "Describes the cluster resource properties."
    },
    "ClusterPropertiesUpdateParameters": {
      "type": "object",
      "properties": {
        "addOnFeatures": {
          "type": "array",
          "description": "The list of add-on features to enable in the cluster.",
          "items": {
            "type": "string",
            "description": "Available cluster add-on features",
            "enum": [
              "RepairManager",
              "DnsService",
              "BackupRestoreService",
              "ResourceMonitorService"
            ]
          }
        },
        "certificate": {
          "description": "The certificate to use for securing the cluster. The certificate provided will be used for  node to node security within the cluster, SSL certificate for cluster management endpoint and default  admin client.",
          "type": "object",
          "required": [
            "thumbprint"
          ],
          "properties": {
            "thumbprint": {
              "type": "string",
              "description": "Thumbprint of the primary certificate."
            },
            "thumbprintSecondary": {
              "type": "string",
              "description": "Thumbprint of the secondary certificate."
            },
            "x509StoreName": {
              "type": "string",
              "description": "The local certificate store location.",
              "enum": [
                "AddressBook",
                "AuthRoot",
                "CertificateAuthority",
                "Disallowed",
                "My",
                "Root",
                "TrustedPeople",
                "TrustedPublisher"
              ]
            }
          }
        },
        "certificateCommonNames": {
          "type": "object",
          "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
          "properties": {
            "commonNames": {
              "type": "array",
              "description": "The list of server certificates referenced by common name that are used to secure the cluster.",
              "items": {
                "type": "object",
                "description": "Describes the server certificate details using common name.",
                "required": [
                  "certificateCommonName",
                  "certificateIssuerThumbprint"
                ],
                "properties": {
                  "certificateCommonName": {
                    "type": "string",
                    "description": "The common name of the server certificate."
                  },
                  "certificateIssuerThumbprint": {
                    "type": "string",
                    "description": "The issuer thumbprint of the server certificate."
                  }
                }
              }
            },
            "x509StoreName": {
              "type": "string",
              "description": "The local certificate store location.",
              "enum": [
                "AddressBook",
                "AuthRoot",
                "CertificateAuthority",
                "Disallowed",
                "My",
                "Root",
                "TrustedPeople",
                "TrustedPublisher"
              ]
            }
          }
        },
        "clientCertificateCommonNames": {
          "type": "array",
          "description": "The list of client certificates referenced by common name that are allowed to manage the cluster. This will overwrite the existing list.",
          "items": {
            "type": "object",
            "required": [
              "certificateCommonName",
              "isAdmin",
              "certificateIssuerThumbprint"
            ],
            "properties": {
              "isAdmin": {
                "type": "boolean",
                "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
              },
              "certificateCommonName": {
                "type": "string",
                "description": "The common name of the client certificate."
              },
              "certificateIssuerThumbprint": {
                "type": "string",
                "description": "The issuer thumbprint of the client certificate."
              }
            },
            "description": "Describes the client certificate details using common name."
          }
        },
        "clientCertificateThumbprints": {
          "type": "array",
          "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster. This will overwrite the existing list.",
          "items": {
            "type": "object",
            "required": [
              "certificateThumbprint",
              "isAdmin"
            ],
            "properties": {
              "isAdmin": {
                "type": "boolean",
                "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
              },
              "certificateThumbprint": {
                "type": "string",
                "description": "The thumbprint of the client certificate."
              }
            },
            "description": "Describes the client certificate details using thumbprint."
          }
        },
        "clusterCodeVersion": {
          "type": "string",
          "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](https://learn.microsoft.com/rest/api/servicefabric/cluster-versions/list). To get the list of available version for existing clusters use **availableClusterVersions**."
        },
        "eventStoreServiceEnabled": {
          "type": "boolean",
          "description": "Indicates if the event store service is enabled."
        },
        "fabricSettings": {
          "type": "array",
          "description": "The list of custom fabric settings to configure the cluster. This will overwrite the existing list.",
          "items": {
            "type": "object",
            "required": [
              "name",
              "parameters"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "The section name of the fabric settings."
              },
              "parameters": {
                "type": "array",
                "description": "The collection of parameters in the section.",
                "items": {
                  "type": "object",
                  "required": [
                    "name",
                    "value"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The parameter name of fabric setting."
                    },
                    "value": {
                      "type": "string",
                      "description": "The parameter value of fabric setting."
                    }
                  },
                  "description": "Describes a parameter in fabric settings of the cluster."
                }
              }
            },
            "description": "Describes a section in the fabric settings of the cluster."
          }
        },
        "nodeTypes": {
          "type": "array",
          "description": "The list of node types in the cluster. This will overwrite the existing list.",
          "items": {
            "type": "object",
            "required": [
              "clientConnectionEndpointPort",
              "httpGatewayEndpointPort",
              "isPrimary",
              "name",
              "vmInstanceCount"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the node type."
              },
              "placementProperties": {
                "type": "object",
                "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
                "additionalProperties": {
                  "type": "string",
                  "description": "Placement tag value"
                }
              },
              "capacities": {
                "type": "object",
                "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
                "additionalProperties": {
                  "type": "string",
                  "description": "Capacity tag value"
                }
              },
              "clientConnectionEndpointPort": {
                "type": "integer",
                "format": "int32",
                "description": "The TCP cluster management endpoint port."
              },
              "httpGatewayEndpointPort": {
                "type": "integer",
                "format": "int32",
                "description": "The HTTP cluster management endpoint port."
              },
              "durabilityLevel": {
                "type": "string",
                "description": "The durability level of the node type. Learn about [DurabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - Bronze - No privileges. This is the default.\n  - Silver - The infrastructure jobs can be paused for a duration of 10 minutes per UD.\n  - Gold - The infrastructure jobs can be paused for a duration of 2 hours per UD. Gold durability can be enabled only on full node VM skus like D15_V2, G5 etc.\n",
                "enum": [
                  "Bronze",
                  "Silver",
                  "Gold"
                ]
              },
              "applicationPorts": {
                "description": "The range of ports from which cluster assigned port to Service Fabric applications.",
                "type": "object",
                "required": [
                  "endPort",
                  "startPort"
                ],
                "properties": {
                  "startPort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Starting port of a range of ports"
                  },
                  "endPort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "End port of a range of ports"
                  }
                }
              },
              "ephemeralPorts": {
                "description": "The range of ephemeral ports that nodes in this node type should be configured with.",
                "type": "object",
                "required": [
                  "endPort",
                  "startPort"
                ],
                "properties": {
                  "startPort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Starting port of a range of ports"
                  },
                  "endPort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "End port of a range of ports"
                  }
                }
              },
              "isPrimary": {
                "type": "boolean",
                "description": "The node type on which system services will run. Only one node type should be marked as primary. Primary node type cannot be deleted or changed for existing clusters."
              },
              "vmInstanceCount": {
                "type": "integer",
                "format": "int32",
                "description": "VMInstanceCount should be 1 to n, where n indicates the number of VM instances corresponding to this nodeType. VMInstanceCount = 0 can be done only in these scenarios: NodeType is a secondary nodeType. Durability = Bronze or Durability >= Bronze and InfrastructureServiceManager = true. If VMInstanceCount = 0, implies the VMs for this nodeType will not be used for the initial cluster size computation.",
                "minimum": 0,
                "maximum": 2147483647
              },
              "reverseProxyEndpointPort": {
                "type": "integer",
                "format": "int32",
                "description": "The endpoint used by reverse proxy."
              },
              "isStateless": {
                "type": "boolean",
                "description": "Indicates if the node type can only host Stateless workloads."
              },
              "multipleAvailabilityZones": {
                "type": "boolean",
                "description": "Indicates if the node type is enabled to support multiple zones."
              }
            },
            "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
          }
        },
        "reliabilityLevel": {
          "type": "string",
          "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n",
          "enum": [
            "None",
            "Bronze",
            "Silver",
            "Gold",
            "Platinum"
          ]
        },
        "reverseProxyCertificate": {
          "description": "The server certificate used by reverse proxy.",
          "type": "object",
          "required": [
            "thumbprint"
          ],
          "properties": {
            "thumbprint": {
              "type": "string",
              "description": "Thumbprint of the primary certificate."
            },
            "thumbprintSecondary": {
              "type": "string",
              "description": "Thumbprint of the secondary certificate."
            },
            "x509StoreName": {
              "type": "string",
              "description": "The local certificate store location.",
              "enum": [
                "AddressBook",
                "AuthRoot",
                "CertificateAuthority",
                "Disallowed",
                "My",
                "Root",
                "TrustedPeople",
                "TrustedPublisher"
              ]
            }
          }
        },
        "upgradeDescription": {
          "description": "The policy to use when upgrading the cluster.",
          "type": "object",
          "required": [
            "healthCheckRetryTimeout",
            "healthCheckStableDuration",
            "healthCheckWaitDuration",
            "healthPolicy",
            "upgradeDomainTimeout",
            "upgradeReplicaSetCheckTimeout",
            "upgradeTimeout"
          ],
          "properties": {
            "forceRestart": {
              "type": "boolean",
              "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data)."
            },
            "upgradeReplicaSetCheckTimeout": {
              "type": "string",
              "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
            },
            "healthCheckWaitDuration": {
              "type": "string",
              "description": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
            },
            "healthCheckStableDuration": {
              "type": "string",
              "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
            },
            "healthCheckRetryTimeout": {
              "type": "string",
              "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
            },
            "upgradeTimeout": {
              "type": "string",
              "description": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
            },
            "upgradeDomainTimeout": {
              "type": "string",
              "description": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
            },
            "healthPolicy": {
              "description": "The cluster health policy used when upgrading the cluster.",
              "type": "object",
              "properties": {
                "maxPercentUnhealthyNodes": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.\n",
                  "default": 0,
                  "minimum": 0,
                  "maximum": 100
                },
                "maxPercentUnhealthyApplications": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.\nThe computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.\n",
                  "default": 0,
                  "minimum": 0,
                  "maximum": 100
                },
                "applicationHealthPolicies": {
                  "description": "Defines the application health policy map used to evaluate the health of an application or one of its children entities.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
                    "properties": {
                      "defaultServiceTypeHealthPolicy": {
                        "description": "The health policy used by default to evaluate the health of a service type.",
                        "type": "object",
                        "properties": {
                          "maxPercentUnhealthyServices": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                            "default": 0,
                            "minimum": 0,
                            "maximum": 100
                          }
                        }
                      },
                      "serviceTypeHealthPolicies": {
                        "description": "The map with service type health policy per service type name. The map is empty by default.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                          "properties": {
                            "maxPercentUnhealthyServices": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 100
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "deltaHealthPolicy": {
              "description": "The cluster delta health policy used when upgrading the cluster.",
              "type": "object",
              "required": [
                "maxPercentDeltaUnhealthyApplications",
                "maxPercentDeltaUnhealthyNodes",
                "maxPercentUpgradeDomainDeltaUnhealthyNodes"
              ],
              "properties": {
                "maxPercentDeltaUnhealthyNodes": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                  "minimum": 0,
                  "maximum": 100
                },
                "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.\n",
                  "minimum": 0,
                  "maximum": 100
                },
                "maxPercentDeltaUnhealthyApplications": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.\n",
                  "minimum": 0,
                  "maximum": 100
                },
                "applicationDeltaHealthPolicies": {
                  "description": "Defines the application delta health policy map used to evaluate the health of an application or one of its child entities when upgrading the cluster.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "description": "Defines a delta health policy used to evaluate the health of an application or one of its child entities when upgrading the cluster.\n",
                    "properties": {
                      "defaultServiceTypeDeltaHealthPolicy": {
                        "description": "The delta health policy used by default to evaluate the health of a service type when upgrading the cluster.",
                        "type": "object",
                        "properties": {
                          "maxPercentDeltaUnhealthyServices": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                            "default": 0,
                            "minimum": 0,
                            "maximum": 100
                          }
                        }
                      },
                      "serviceTypeDeltaHealthPolicies": {
                        "description": "The map with service type delta health policy per service type name. The map is empty by default.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "description": "Represents the delta health policy used to evaluate the health of services belonging to a service type when upgrading the cluster.\n",
                          "properties": {
                            "maxPercentDeltaUnhealthyServices": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                              "default": 0,
                              "minimum": 0,
                              "maximum": 100
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "applicationTypeVersionsCleanupPolicy": {
          "description": "The policy used to clean up unused versions.",
          "type": "object",
          "required": [
            "maxUnusedVersionsToKeep"
          ],
          "properties": {
            "maxUnusedVersionsToKeep": {
              "type": "integer",
              "format": "int64",
              "minimum": 0,
              "description": "Number of unused versions per application type to keep."
            }
          }
        },
        "upgradeMode": {
          "type": "string",
          "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.",
          "enum": [
            "Automatic",
            "Manual"
          ],
          "default": "Automatic",
          "x-ms-enum": {
            "name": "UpgradeMode",
            "modelAsString": true,
            "values": [
              {
                "value": "Automatic",
                "description": "The cluster will be automatically upgraded to the latest Service Fabric runtime version, **upgradeWave** will determine when the upgrade starts after the new version becomes available."
              },
              {
                "value": "Manual",
                "description": "The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource."
              }
            ]
          }
        },
        "sfZonalUpgradeMode": {
          "type": "string",
          "enum": [
            "Parallel",
            "Hierarchical"
          ],
          "x-ms-enum": {
            "name": "sfZonalUpgradeMode",
            "modelAsString": true,
            "values": [
              {
                "value": "Parallel",
                "description": "VMs under the node type are grouped into UDs and ignore the zone info in five UDs. This setting causes UDs across all zones to be upgraded at the same time. This deployment mode is faster for upgrades, we don't recommend it because it goes against the SDP guidelines, which state that the updates should be applied to one zone at a time."
              },
              {
                "value": "Hierarchical",
                "description": "If this value is omitted or set to Hierarchical, VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone. This update process is safer for the cluster and the user application."
              }
            ]
          },
          "description": "This property controls the logical grouping of VMs in upgrade domains (UDs). This property can't be modified if a node type with multiple Availability Zones is already present in the cluster."
        },
        "vmssZonalUpgradeMode": {
          "type": "string",
          "enum": [
            "Parallel",
            "Hierarchical"
          ],
          "x-ms-enum": {
            "name": "vmssZonalUpgradeMode",
            "modelAsString": true,
            "values": [
              {
                "value": "Parallel",
                "description": "Updates will happen in all Availability Zones at once for the virtual machine scale sets."
              },
              {
                "value": "Hierarchical",
                "description": "VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone."
              }
            ]
          },
          "description": "This property defines the upgrade mode for the virtual machine scale set, it is mandatory if a node type with multiple Availability Zones is added."
        },
        "infrastructureServiceManager": {
          "type": "boolean",
          "description": "Indicates if infrastructure service manager is enabled."
        },
        "upgradeWave": {
          "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **upgradeMode** is set to 'Automatic'.",
          "type": "string",
          "enum": [
            "Wave0",
            "Wave1",
            "Wave2"
          ],
          "x-ms-enum": {
            "name": "clusterUpgradeCadence",
            "modelAsString": true,
            "values": [
              {
                "value": "Wave0",
                "description": "Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters."
              },
              {
                "value": "Wave1",
                "description": "Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters."
              },
              {
                "value": "Wave2",
                "description": "Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters."
              }
            ]
          }
        },
        "upgradePauseStartTimestampUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The start timestamp to pause runtime version upgrades on the cluster (UTC)."
        },
        "upgradePauseEndTimestampUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The end timestamp of pause runtime version upgrades on the cluster (UTC)."
        },
        "waveUpgradePaused": {
          "type": "boolean",
          "description": "Boolean to pause automatic runtime version upgrades to the cluster."
        },
        "notifications": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "isEnabled",
              "notificationCategory",
              "notificationLevel",
              "notificationTargets"
            ],
            "properties": {
              "isEnabled": {
                "type": "boolean",
                "description": "Indicates if the notification is enabled."
              },
              "notificationCategory": {
                "type": "string",
                "description": "The category of notification.",
                "enum": [
                  "WaveProgress"
                ],
                "x-ms-enum": {
                  "name": "notificationCategory",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "WaveProgress",
                      "description": "Notification will be regarding wave progress."
                    }
                  ]
                }
              },
              "notificationLevel": {
                "type": "string",
                "description": "The level of notification.",
                "enum": [
                  "Critical",
                  "All"
                ],
                "x-ms-enum": {
                  "name": "notificationLevel",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "Critical",
                      "description": "Receive only critical notifications."
                    },
                    {
                      "value": "All",
                      "description": "Receive all notifications."
                    }
                  ]
                }
              },
              "notificationTargets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "notificationChannel",
                    "receivers"
                  ],
                  "properties": {
                    "notificationChannel": {
                      "type": "string",
                      "description": "The notification channel indicates the type of receivers subscribed to the notification, either user or subscription.",
                      "enum": [
                        "EmailUser",
                        "EmailSubscription"
                      ],
                      "x-ms-enum": {
                        "name": "notificationChannel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "EmailUser",
                            "description": "For email user receivers. In this case, the parameter receivers should be a list of email addresses that will receive the notifications."
                          },
                          {
                            "value": "EmailSubscription",
                            "description": "For subscription receivers. In this case, the parameter receivers should be a list of roles of the subscription for the cluster (eg. Owner, AccountAdmin, etc) that will receive the notifications."
                          }
                        ]
                      }
                    },
                    "receivers": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of targets that subscribe to the notification."
                    }
                  },
                  "description": "Describes the notification target properties."
                },
                "description": "List of targets that subscribe to the notification."
              }
            },
            "description": "Describes the notification channel for cluster events."
          },
          "description": "Indicates a list of notification channels for cluster events."
        }
      },
      "description": "Describes the cluster resource properties that can be updated during PATCH operation."
    },
    "ClusterState": {
      "type": "string",
      "description": "The current state of the cluster.\n",
      "enum": [
        "WaitingForNodes",
        "Deploying",
        "BaselineUpgrade",
        "Upgrading",
        "UpgradeFailed",
        "Ready"
      ],
      "x-ms-enum": {
        "name": "ClusterState",
        "modelAsString": true,
        "values": [
          {
            "value": "WaitingForNodes",
            "description": "Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it."
          },
          {
            "value": "Deploying",
            "description": "Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up."
          },
          {
            "value": "BaselineUpgrade",
            "description": "Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time."
          },
          {
            "value": "Upgrading",
            "description": "Indicates that the cluster is being upgraded with the user provided configuration."
          },
          {
            "value": "UpgradeFailed",
            "description": "Indicates that the last upgrade for the cluster has failed."
          },
          {
            "value": "Ready",
            "description": "Indicates that the cluster is in a stable state."
          }
        ]
      }
    },
    "ClusterUpdateParameters": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "addOnFeatures": {
              "type": "array",
              "description": "The list of add-on features to enable in the cluster.",
              "items": {
                "type": "string",
                "description": "Available cluster add-on features",
                "enum": [
                  "RepairManager",
                  "DnsService",
                  "BackupRestoreService",
                  "ResourceMonitorService"
                ]
              }
            },
            "certificate": {
              "description": "The certificate to use for securing the cluster. The certificate provided will be used for  node to node security within the cluster, SSL certificate for cluster management endpoint and default  admin client.",
              "type": "object",
              "required": [
                "thumbprint"
              ],
              "properties": {
                "thumbprint": {
                  "type": "string",
                  "description": "Thumbprint of the primary certificate."
                },
                "thumbprintSecondary": {
                  "type": "string",
                  "description": "Thumbprint of the secondary certificate."
                },
                "x509StoreName": {
                  "type": "string",
                  "description": "The local certificate store location.",
                  "enum": [
                    "AddressBook",
                    "AuthRoot",
                    "CertificateAuthority",
                    "Disallowed",
                    "My",
                    "Root",
                    "TrustedPeople",
                    "TrustedPublisher"
                  ]
                }
              }
            },
            "certificateCommonNames": {
              "type": "object",
              "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
              "properties": {
                "commonNames": {
                  "type": "array",
                  "description": "The list of server certificates referenced by common name that are used to secure the cluster.",
                  "items": {
                    "type": "object",
                    "description": "Describes the server certificate details using common name.",
                    "required": [
                      "certificateCommonName",
                      "certificateIssuerThumbprint"
                    ],
                    "properties": {
                      "certificateCommonName": {
                        "type": "string",
                        "description": "The common name of the server certificate."
                      },
                      "certificateIssuerThumbprint": {
                        "type": "string",
                        "description": "The issuer thumbprint of the server certificate."
                      }
                    }
                  }
                },
                "x509StoreName": {
                  "type": "string",
                  "description": "The local certificate store location.",
                  "enum": [
                    "AddressBook",
                    "AuthRoot",
                    "CertificateAuthority",
                    "Disallowed",
                    "My",
                    "Root",
                    "TrustedPeople",
                    "TrustedPublisher"
                  ]
                }
              }
            },
            "clientCertificateCommonNames": {
              "type": "array",
              "description": "The list of client certificates referenced by common name that are allowed to manage the cluster. This will overwrite the existing list.",
              "items": {
                "type": "object",
                "required": [
                  "certificateCommonName",
                  "isAdmin",
                  "certificateIssuerThumbprint"
                ],
                "properties": {
                  "isAdmin": {
                    "type": "boolean",
                    "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                  },
                  "certificateCommonName": {
                    "type": "string",
                    "description": "The common name of the client certificate."
                  },
                  "certificateIssuerThumbprint": {
                    "type": "string",
                    "description": "The issuer thumbprint of the client certificate."
                  }
                },
                "description": "Describes the client certificate details using common name."
              }
            },
            "clientCertificateThumbprints": {
              "type": "array",
              "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster. This will overwrite the existing list.",
              "items": {
                "type": "object",
                "required": [
                  "certificateThumbprint",
                  "isAdmin"
                ],
                "properties": {
                  "isAdmin": {
                    "type": "boolean",
                    "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                  },
                  "certificateThumbprint": {
                    "type": "string",
                    "description": "The thumbprint of the client certificate."
                  }
                },
                "description": "Describes the client certificate details using thumbprint."
              }
            },
            "clusterCodeVersion": {
              "type": "string",
              "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](https://learn.microsoft.com/rest/api/servicefabric/cluster-versions/list). To get the list of available version for existing clusters use **availableClusterVersions**."
            },
            "eventStoreServiceEnabled": {
              "type": "boolean",
              "description": "Indicates if the event store service is enabled."
            },
            "fabricSettings": {
              "type": "array",
              "description": "The list of custom fabric settings to configure the cluster. This will overwrite the existing list.",
              "items": {
                "type": "object",
                "required": [
                  "name",
                  "parameters"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The section name of the fabric settings."
                  },
                  "parameters": {
                    "type": "array",
                    "description": "The collection of parameters in the section.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "value"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The parameter name of fabric setting."
                        },
                        "value": {
                          "type": "string",
                          "description": "The parameter value of fabric setting."
                        }
                      },
                      "description": "Describes a parameter in fabric settings of the cluster."
                    }
                  }
                },
                "description": "Describes a section in the fabric settings of the cluster."
              }
            },
            "nodeTypes": {
              "type": "array",
              "description": "The list of node types in the cluster. This will overwrite the existing list.",
              "items": {
                "type": "object",
                "required": [
                  "clientConnectionEndpointPort",
                  "httpGatewayEndpointPort",
                  "isPrimary",
                  "name",
                  "vmInstanceCount"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the node type."
                  },
                  "placementProperties": {
                    "type": "object",
                    "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
                    "additionalProperties": {
                      "type": "string",
                      "description": "Placement tag value"
                    }
                  },
                  "capacities": {
                    "type": "object",
                    "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
                    "additionalProperties": {
                      "type": "string",
                      "description": "Capacity tag value"
                    }
                  },
                  "clientConnectionEndpointPort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The TCP cluster management endpoint port."
                  },
                  "httpGatewayEndpointPort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The HTTP cluster management endpoint port."
                  },
                  "durabilityLevel": {
                    "type": "string",
                    "description": "The durability level of the node type. Learn about [DurabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - Bronze - No privileges. This is the default.\n  - Silver - The infrastructure jobs can be paused for a duration of 10 minutes per UD.\n  - Gold - The infrastructure jobs can be paused for a duration of 2 hours per UD. Gold durability can be enabled only on full node VM skus like D15_V2, G5 etc.\n",
                    "enum": [
                      "Bronze",
                      "Silver",
                      "Gold"
                    ]
                  },
                  "applicationPorts": {
                    "description": "The range of ports from which cluster assigned port to Service Fabric applications.",
                    "type": "object",
                    "required": [
                      "endPort",
                      "startPort"
                    ],
                    "properties": {
                      "startPort": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Starting port of a range of ports"
                      },
                      "endPort": {
                        "type": "integer",
                        "format": "int32",
                        "description": "End port of a range of ports"
                      }
                    }
                  },
                  "ephemeralPorts": {
                    "description": "The range of ephemeral ports that nodes in this node type should be configured with.",
                    "type": "object",
                    "required": [
                      "endPort",
                      "startPort"
                    ],
                    "properties": {
                      "startPort": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Starting port of a range of ports"
                      },
                      "endPort": {
                        "type": "integer",
                        "format": "int32",
                        "description": "End port of a range of ports"
                      }
                    }
                  },
                  "isPrimary": {
                    "type": "boolean",
                    "description": "The node type on which system services will run. Only one node type should be marked as primary. Primary node type cannot be deleted or changed for existing clusters."
                  },
                  "vmInstanceCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "VMInstanceCount should be 1 to n, where n indicates the number of VM instances corresponding to this nodeType. VMInstanceCount = 0 can be done only in these scenarios: NodeType is a secondary nodeType. Durability = Bronze or Durability >= Bronze and InfrastructureServiceManager = true. If VMInstanceCount = 0, implies the VMs for this nodeType will not be used for the initial cluster size computation.",
                    "minimum": 0,
                    "maximum": 2147483647
                  },
                  "reverseProxyEndpointPort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The endpoint used by reverse proxy."
                  },
                  "isStateless": {
                    "type": "boolean",
                    "description": "Indicates if the node type can only host Stateless workloads."
                  },
                  "multipleAvailabilityZones": {
                    "type": "boolean",
                    "description": "Indicates if the node type is enabled to support multiple zones."
                  }
                },
                "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
              }
            },
            "reliabilityLevel": {
              "type": "string",
              "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n",
              "enum": [
                "None",
                "Bronze",
                "Silver",
                "Gold",
                "Platinum"
              ]
            },
            "reverseProxyCertificate": {
              "description": "The server certificate used by reverse proxy.",
              "type": "object",
              "required": [
                "thumbprint"
              ],
              "properties": {
                "thumbprint": {
                  "type": "string",
                  "description": "Thumbprint of the primary certificate."
                },
                "thumbprintSecondary": {
                  "type": "string",
                  "description": "Thumbprint of the secondary certificate."
                },
                "x509StoreName": {
                  "type": "string",
                  "description": "The local certificate store location.",
                  "enum": [
                    "AddressBook",
                    "AuthRoot",
                    "CertificateAuthority",
                    "Disallowed",
                    "My",
                    "Root",
                    "TrustedPeople",
                    "TrustedPublisher"
                  ]
                }
              }
            },
            "upgradeDescription": {
              "description": "The policy to use when upgrading the cluster.",
              "type": "object",
              "required": [
                "healthCheckRetryTimeout",
                "healthCheckStableDuration",
                "healthCheckWaitDuration",
                "healthPolicy",
                "upgradeDomainTimeout",
                "upgradeReplicaSetCheckTimeout",
                "upgradeTimeout"
              ],
              "properties": {
                "forceRestart": {
                  "type": "boolean",
                  "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data)."
                },
                "upgradeReplicaSetCheckTimeout": {
                  "type": "string",
                  "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                },
                "healthCheckWaitDuration": {
                  "type": "string",
                  "description": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                },
                "healthCheckStableDuration": {
                  "type": "string",
                  "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                },
                "healthCheckRetryTimeout": {
                  "type": "string",
                  "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                },
                "upgradeTimeout": {
                  "type": "string",
                  "description": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                },
                "upgradeDomainTimeout": {
                  "type": "string",
                  "description": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                },
                "healthPolicy": {
                  "description": "The cluster health policy used when upgrading the cluster.",
                  "type": "object",
                  "properties": {
                    "maxPercentUnhealthyNodes": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.\n",
                      "default": 0,
                      "minimum": 0,
                      "maximum": 100
                    },
                    "maxPercentUnhealthyApplications": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.\nThe computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.\n",
                      "default": 0,
                      "minimum": 0,
                      "maximum": 100
                    },
                    "applicationHealthPolicies": {
                      "description": "Defines the application health policy map used to evaluate the health of an application or one of its children entities.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n",
                        "properties": {
                          "defaultServiceTypeHealthPolicy": {
                            "description": "The health policy used by default to evaluate the health of a service type.",
                            "type": "object",
                            "properties": {
                              "maxPercentUnhealthyServices": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 100
                              }
                            }
                          },
                          "serviceTypeHealthPolicies": {
                            "description": "The map with service type health policy per service type name. The map is empty by default.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
                              "properties": {
                                "maxPercentUnhealthyServices": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum percentage of services allowed to be unhealthy before your application is considered in error.\n",
                                  "default": 0,
                                  "minimum": 0,
                                  "maximum": 100
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "deltaHealthPolicy": {
                  "description": "The cluster delta health policy used when upgrading the cluster.",
                  "type": "object",
                  "required": [
                    "maxPercentDeltaUnhealthyApplications",
                    "maxPercentDeltaUnhealthyNodes",
                    "maxPercentUpgradeDomainDeltaUnhealthyNodes"
                  ],
                  "properties": {
                    "maxPercentDeltaUnhealthyNodes": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                      "minimum": 0,
                      "maximum": 100
                    },
                    "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.\n",
                      "minimum": 0,
                      "maximum": 100
                    },
                    "maxPercentDeltaUnhealthyApplications": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.\n",
                      "minimum": 0,
                      "maximum": 100
                    },
                    "applicationDeltaHealthPolicies": {
                      "description": "Defines the application delta health policy map used to evaluate the health of an application or one of its child entities when upgrading the cluster.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "Defines a delta health policy used to evaluate the health of an application or one of its child entities when upgrading the cluster.\n",
                        "properties": {
                          "defaultServiceTypeDeltaHealthPolicy": {
                            "description": "The delta health policy used by default to evaluate the health of a service type when upgrading the cluster.",
                            "type": "object",
                            "properties": {
                              "maxPercentDeltaUnhealthyServices": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                                "default": 0,
                                "minimum": 0,
                                "maximum": 100
                              }
                            }
                          },
                          "serviceTypeDeltaHealthPolicies": {
                            "description": "The map with service type delta health policy per service type name. The map is empty by default.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "description": "Represents the delta health policy used to evaluate the health of services belonging to a service type when upgrading the cluster.\n",
                              "properties": {
                                "maxPercentDeltaUnhealthyServices": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                                  "default": 0,
                                  "minimum": 0,
                                  "maximum": 100
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "applicationTypeVersionsCleanupPolicy": {
              "description": "The policy used to clean up unused versions.",
              "type": "object",
              "required": [
                "maxUnusedVersionsToKeep"
              ],
              "properties": {
                "maxUnusedVersionsToKeep": {
                  "type": "integer",
                  "format": "int64",
                  "minimum": 0,
                  "description": "Number of unused versions per application type to keep."
                }
              }
            },
            "upgradeMode": {
              "type": "string",
              "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.",
              "enum": [
                "Automatic",
                "Manual"
              ],
              "default": "Automatic",
              "x-ms-enum": {
                "name": "UpgradeMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Automatic",
                    "description": "The cluster will be automatically upgraded to the latest Service Fabric runtime version, **upgradeWave** will determine when the upgrade starts after the new version becomes available."
                  },
                  {
                    "value": "Manual",
                    "description": "The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource."
                  }
                ]
              }
            },
            "sfZonalUpgradeMode": {
              "type": "string",
              "enum": [
                "Parallel",
                "Hierarchical"
              ],
              "x-ms-enum": {
                "name": "sfZonalUpgradeMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Parallel",
                    "description": "VMs under the node type are grouped into UDs and ignore the zone info in five UDs. This setting causes UDs across all zones to be upgraded at the same time. This deployment mode is faster for upgrades, we don't recommend it because it goes against the SDP guidelines, which state that the updates should be applied to one zone at a time."
                  },
                  {
                    "value": "Hierarchical",
                    "description": "If this value is omitted or set to Hierarchical, VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone. This update process is safer for the cluster and the user application."
                  }
                ]
              },
              "description": "This property controls the logical grouping of VMs in upgrade domains (UDs). This property can't be modified if a node type with multiple Availability Zones is already present in the cluster."
            },
            "vmssZonalUpgradeMode": {
              "type": "string",
              "enum": [
                "Parallel",
                "Hierarchical"
              ],
              "x-ms-enum": {
                "name": "vmssZonalUpgradeMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Parallel",
                    "description": "Updates will happen in all Availability Zones at once for the virtual machine scale sets."
                  },
                  {
                    "value": "Hierarchical",
                    "description": "VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone."
                  }
                ]
              },
              "description": "This property defines the upgrade mode for the virtual machine scale set, it is mandatory if a node type with multiple Availability Zones is added."
            },
            "infrastructureServiceManager": {
              "type": "boolean",
              "description": "Indicates if infrastructure service manager is enabled."
            },
            "upgradeWave": {
              "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **upgradeMode** is set to 'Automatic'.",
              "type": "string",
              "enum": [
                "Wave0",
                "Wave1",
                "Wave2"
              ],
              "x-ms-enum": {
                "name": "clusterUpgradeCadence",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Wave0",
                    "description": "Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters."
                  },
                  {
                    "value": "Wave1",
                    "description": "Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters."
                  },
                  {
                    "value": "Wave2",
                    "description": "Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters."
                  }
                ]
              }
            },
            "upgradePauseStartTimestampUtc": {
              "type": "string",
              "format": "date-time",
              "description": "The start timestamp to pause runtime version upgrades on the cluster (UTC)."
            },
            "upgradePauseEndTimestampUtc": {
              "type": "string",
              "format": "date-time",
              "description": "The end timestamp of pause runtime version upgrades on the cluster (UTC)."
            },
            "waveUpgradePaused": {
              "type": "boolean",
              "description": "Boolean to pause automatic runtime version upgrades to the cluster."
            },
            "notifications": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "isEnabled",
                  "notificationCategory",
                  "notificationLevel",
                  "notificationTargets"
                ],
                "properties": {
                  "isEnabled": {
                    "type": "boolean",
                    "description": "Indicates if the notification is enabled."
                  },
                  "notificationCategory": {
                    "type": "string",
                    "description": "The category of notification.",
                    "enum": [
                      "WaveProgress"
                    ],
                    "x-ms-enum": {
                      "name": "notificationCategory",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "WaveProgress",
                          "description": "Notification will be regarding wave progress."
                        }
                      ]
                    }
                  },
                  "notificationLevel": {
                    "type": "string",
                    "description": "The level of notification.",
                    "enum": [
                      "Critical",
                      "All"
                    ],
                    "x-ms-enum": {
                      "name": "notificationLevel",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Critical",
                          "description": "Receive only critical notifications."
                        },
                        {
                          "value": "All",
                          "description": "Receive all notifications."
                        }
                      ]
                    }
                  },
                  "notificationTargets": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "notificationChannel",
                        "receivers"
                      ],
                      "properties": {
                        "notificationChannel": {
                          "type": "string",
                          "description": "The notification channel indicates the type of receivers subscribed to the notification, either user or subscription.",
                          "enum": [
                            "EmailUser",
                            "EmailSubscription"
                          ],
                          "x-ms-enum": {
                            "name": "notificationChannel",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "EmailUser",
                                "description": "For email user receivers. In this case, the parameter receivers should be a list of email addresses that will receive the notifications."
                              },
                              {
                                "value": "EmailSubscription",
                                "description": "For subscription receivers. In this case, the parameter receivers should be a list of roles of the subscription for the cluster (eg. Owner, AccountAdmin, etc) that will receive the notifications."
                              }
                            ]
                          }
                        },
                        "receivers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of targets that subscribe to the notification."
                        }
                      },
                      "description": "Describes the notification target properties."
                    },
                    "description": "List of targets that subscribe to the notification."
                  }
                },
                "description": "Describes the notification channel for cluster events."
              },
              "description": "Indicates a list of notification channels for cluster events."
            }
          },
          "description": "Describes the cluster resource properties that can be updated during PATCH operation."
        },
        "tags": {
          "type": "object",
          "description": "Cluster update parameters",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "Cluster update request"
    },
    "ClusterUpgradeDeltaHealthPolicy": {
      "type": "object",
      "description": "Describes the delta health policies for the cluster upgrade.",
      "required": [
        "maxPercentDeltaUnhealthyNodes"
      ],
      "properties": {
        "maxPercentDeltaUnhealthyNodes": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
          "minimum": 0,
          "maximum": 100
        },
        "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.\n",
          "minimum": 0,
          "maximum": 100
        },
        "maxPercentDeltaUnhealthyApplications": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.\nNOTE: This value will overwrite the value specified in properties.UpgradeDescription.HealthPolicy.MaxPercentUnhealthyApplications\n",
          "minimum": 0,
          "maximum": 100
        }
      }
    },
    "ClusterUpgradeCadence": {
      "type": "string",
      "enum": [
        "Wave0",
        "Wave1",
        "Wave2"
      ],
      "x-ms-enum": {
        "name": "clusterUpgradeCadence",
        "modelAsString": true,
        "values": [
          {
            "value": "Wave0",
            "description": "Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters."
          },
          {
            "value": "Wave1",
            "description": "Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters."
          },
          {
            "value": "Wave2",
            "description": "Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters."
          }
        ]
      },
      "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0."
    },
    "ClusterUpgradePolicy": {
      "type": "object",
      "properties": {
        "forceRestart": {
          "type": "boolean",
          "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data)."
        },
        "healthPolicy": {
          "description": "The cluster health policy defines a health policy used to evaluate the health of the cluster during a cluster upgrade.",
          "type": "object",
          "required": [
            "maxPercentUnhealthyNodes",
            "maxPercentUnhealthyApplications"
          ],
          "properties": {
            "maxPercentUnhealthyNodes": {
              "type": "integer",
              "format": "int32",
              "description": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.\n",
              "default": 0,
              "minimum": 0,
              "maximum": 100
            },
            "maxPercentUnhealthyApplications": {
              "type": "integer",
              "format": "int32",
              "description": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.\nThe computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.\n",
              "default": 0,
              "minimum": 0,
              "maximum": 100
            }
          }
        },
        "deltaHealthPolicy": {
          "description": "The cluster delta health policy defines a health policy used to evaluate the health of the cluster during a cluster upgrade.",
          "type": "object",
          "required": [
            "maxPercentDeltaUnhealthyNodes"
          ],
          "properties": {
            "maxPercentDeltaUnhealthyNodes": {
              "type": "integer",
              "format": "int32",
              "description": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
              "minimum": 0,
              "maximum": 100
            },
            "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
              "type": "integer",
              "format": "int32",
              "description": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.\n",
              "minimum": 0,
              "maximum": 100
            },
            "maxPercentDeltaUnhealthyApplications": {
              "type": "integer",
              "format": "int32",
              "description": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.\nNOTE: This value will overwrite the value specified in properties.UpgradeDescription.HealthPolicy.MaxPercentUnhealthyApplications\n",
              "minimum": 0,
              "maximum": 100
            }
          }
        },
        "monitoringPolicy": {
          "description": "The cluster monitoring policy describes the parameters for monitoring an upgrade in Monitored mode.",
          "type": "object",
          "required": [
            "healthCheckWaitDuration",
            "healthCheckStableDuration",
            "healthCheckRetryTimeout",
            "upgradeTimeout",
            "upgradeDomainTimeout"
          ],
          "properties": {
            "healthCheckWaitDuration": {
              "type": "string",
              "x-ms-format": "duration-constant",
              "description": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
            },
            "healthCheckStableDuration": {
              "type": "string",
              "x-ms-format": "duration-constant",
              "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
            },
            "healthCheckRetryTimeout": {
              "type": "string",
              "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
            },
            "upgradeTimeout": {
              "type": "string",
              "description": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
            },
            "upgradeDomainTimeout": {
              "type": "string",
              "description": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
            }
          }
        },
        "upgradeReplicaSetCheckTimeout": {
          "type": "string",
          "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues.\nWhen this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues.\nThe timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.\nThis value must be between 00:00:00 and 49710.06:28:15 (unsigned 32 bit integer for seconds)\n"
        }
      },
      "description": "Describes the policy used when upgrading the cluster."
    },
    "ClusterVersionDetails": {
      "type": "object",
      "properties": {
        "codeVersion": {
          "type": "string",
          "description": "The Service Fabric runtime version of the cluster."
        },
        "supportExpiryUtc": {
          "type": "string",
          "description": "The date of expiry of support of the version."
        },
        "environment": {
          "description": "Indicates if this version is for Windows or Linux operating system.",
          "type": "string",
          "enum": [
            "Windows",
            "Linux"
          ]
        }
      },
      "description": "The detail of the Service Fabric runtime version result"
    },
    "DiagnosticsStorageAccountConfig": {
      "type": "object",
      "required": [
        "blobEndpoint",
        "protectedAccountKeyName",
        "queueEndpoint",
        "storageAccountName",
        "tableEndpoint"
      ],
      "properties": {
        "storageAccountName": {
          "type": "string",
          "description": "The Azure storage account name."
        },
        "protectedAccountKeyName": {
          "type": "string",
          "description": "The protected diagnostics storage key name."
        },
        "protectedAccountKeyName2": {
          "type": "string",
          "description": "The secondary protected diagnostics storage key name. If one of the storage account keys is rotated the cluster will fallback to using the other."
        },
        "blobEndpoint": {
          "type": "string",
          "description": "The blob endpoint of the azure storage account."
        },
        "queueEndpoint": {
          "type": "string",
          "description": "The queue endpoint of the azure storage account."
        },
        "tableEndpoint": {
          "type": "string",
          "description": "The table endpoint of the azure storage account."
        }
      },
      "description": "The storage account information for storing Service Fabric diagnostic logs."
    },
    "DurabilityLevel": {
      "type": "string",
      "description": "The durability level of the node type. Learn about [DurabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - Bronze - No privileges. This is the default.\n  - Silver - The infrastructure jobs can be paused for a duration of 10 minutes per UD.\n  - Gold - The infrastructure jobs can be paused for a duration of 2 hours per UD. Gold durability can be enabled only on full node VM skus like D15_V2, G5 etc.\n",
      "enum": [
        "Bronze",
        "Silver",
        "Gold"
      ]
    },
    "EndpointRangeDescription": {
      "type": "object",
      "required": [
        "endPort",
        "startPort"
      ],
      "properties": {
        "startPort": {
          "type": "integer",
          "format": "int32",
          "description": "Starting port of a range of ports"
        },
        "endPort": {
          "type": "integer",
          "format": "int32",
          "description": "End port of a range of ports"
        }
      },
      "description": "Port range details"
    },
    "NodeTypeDescription": {
      "type": "object",
      "required": [
        "clientConnectionEndpointPort",
        "httpGatewayEndpointPort",
        "isPrimary",
        "name",
        "vmInstanceCount"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the node type."
        },
        "placementProperties": {
          "type": "object",
          "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
          "additionalProperties": {
            "type": "string",
            "description": "Placement tag value"
          }
        },
        "capacities": {
          "type": "object",
          "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
          "additionalProperties": {
            "type": "string",
            "description": "Capacity tag value"
          }
        },
        "clientConnectionEndpointPort": {
          "type": "integer",
          "format": "int32",
          "description": "The TCP cluster management endpoint port."
        },
        "httpGatewayEndpointPort": {
          "type": "integer",
          "format": "int32",
          "description": "The HTTP cluster management endpoint port."
        },
        "durabilityLevel": {
          "type": "string",
          "description": "The durability level of the node type. Learn about [DurabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - Bronze - No privileges. This is the default.\n  - Silver - The infrastructure jobs can be paused for a duration of 10 minutes per UD.\n  - Gold - The infrastructure jobs can be paused for a duration of 2 hours per UD. Gold durability can be enabled only on full node VM skus like D15_V2, G5 etc.\n",
          "enum": [
            "Bronze",
            "Silver",
            "Gold"
          ]
        },
        "applicationPorts": {
          "description": "The range of ports from which cluster assigned port to Service Fabric applications.",
          "type": "object",
          "required": [
            "endPort",
            "startPort"
          ],
          "properties": {
            "startPort": {
              "type": "integer",
              "format": "int32",
              "description": "Starting port of a range of ports"
            },
            "endPort": {
              "type": "integer",
              "format": "int32",
              "description": "End port of a range of ports"
            }
          }
        },
        "ephemeralPorts": {
          "description": "The range of ephemeral ports that nodes in this node type should be configured with.",
          "type": "object",
          "required": [
            "endPort",
            "startPort"
          ],
          "properties": {
            "startPort": {
              "type": "integer",
              "format": "int32",
              "description": "Starting port of a range of ports"
            },
            "endPort": {
              "type": "integer",
              "format": "int32",
              "description": "End port of a range of ports"
            }
          }
        },
        "isPrimary": {
          "type": "boolean",
          "description": "The node type on which system services will run. Only one node type should be marked as primary. Primary node type cannot be deleted or changed for existing clusters."
        },
        "vmInstanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "VMInstanceCount should be 1 to n, where n indicates the number of VM instances corresponding to this nodeType. VMInstanceCount = 0 can be done only in these scenarios: NodeType is a secondary nodeType. Durability = Bronze or Durability >= Bronze and InfrastructureServiceManager = true. If VMInstanceCount = 0, implies the VMs for this nodeType will not be used for the initial cluster size computation.",
          "minimum": 0,
          "maximum": 2147483647
        },
        "reverseProxyEndpointPort": {
          "type": "integer",
          "format": "int32",
          "description": "The endpoint used by reverse proxy."
        },
        "isStateless": {
          "type": "boolean",
          "description": "Indicates if the node type can only host Stateless workloads."
        },
        "multipleAvailabilityZones": {
          "type": "boolean",
          "description": "Indicates if the node type is enabled to support multiple zones."
        }
      },
      "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
    },
    "Notification": {
      "type": "object",
      "required": [
        "isEnabled",
        "notificationCategory",
        "notificationLevel",
        "notificationTargets"
      ],
      "properties": {
        "isEnabled": {
          "type": "boolean",
          "description": "Indicates if the notification is enabled."
        },
        "notificationCategory": {
          "type": "string",
          "description": "The category of notification.",
          "enum": [
            "WaveProgress"
          ],
          "x-ms-enum": {
            "name": "notificationCategory",
            "modelAsString": true,
            "values": [
              {
                "value": "WaveProgress",
                "description": "Notification will be regarding wave progress."
              }
            ]
          }
        },
        "notificationLevel": {
          "type": "string",
          "description": "The level of notification.",
          "enum": [
            "Critical",
            "All"
          ],
          "x-ms-enum": {
            "name": "notificationLevel",
            "modelAsString": true,
            "values": [
              {
                "value": "Critical",
                "description": "Receive only critical notifications."
              },
              {
                "value": "All",
                "description": "Receive all notifications."
              }
            ]
          }
        },
        "notificationTargets": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "notificationChannel",
              "receivers"
            ],
            "properties": {
              "notificationChannel": {
                "type": "string",
                "description": "The notification channel indicates the type of receivers subscribed to the notification, either user or subscription.",
                "enum": [
                  "EmailUser",
                  "EmailSubscription"
                ],
                "x-ms-enum": {
                  "name": "notificationChannel",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "EmailUser",
                      "description": "For email user receivers. In this case, the parameter receivers should be a list of email addresses that will receive the notifications."
                    },
                    {
                      "value": "EmailSubscription",
                      "description": "For subscription receivers. In this case, the parameter receivers should be a list of roles of the subscription for the cluster (eg. Owner, AccountAdmin, etc) that will receive the notifications."
                    }
                  ]
                }
              },
              "receivers": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of targets that subscribe to the notification."
              }
            },
            "description": "Describes the notification target properties."
          },
          "description": "List of targets that subscribe to the notification."
        }
      },
      "description": "Describes the notification channel for cluster events."
    },
    "NotificationTarget": {
      "type": "object",
      "required": [
        "notificationChannel",
        "receivers"
      ],
      "properties": {
        "notificationChannel": {
          "type": "string",
          "description": "The notification channel indicates the type of receivers subscribed to the notification, either user or subscription.",
          "enum": [
            "EmailUser",
            "EmailSubscription"
          ],
          "x-ms-enum": {
            "name": "notificationChannel",
            "modelAsString": true,
            "values": [
              {
                "value": "EmailUser",
                "description": "For email user receivers. In this case, the parameter receivers should be a list of email addresses that will receive the notifications."
              },
              {
                "value": "EmailSubscription",
                "description": "For subscription receivers. In this case, the parameter receivers should be a list of roles of the subscription for the cluster (eg. Owner, AccountAdmin, etc) that will receive the notifications."
              }
            ]
          }
        },
        "receivers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of targets that subscribe to the notification."
        }
      },
      "description": "Describes the notification target properties."
    },
    "OperationListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of operations supported by the Service Fabric resource provider.",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the operation."
              },
              "isDataAction": {
                "type": "boolean",
                "description": "Indicates whether the operation is a data action"
              },
              "display": {
                "description": "The object that represents the operation.",
                "type": "object",
                "properties": {
                  "provider": {
                    "type": "string",
                    "description": "The name of the provider."
                  },
                  "resource": {
                    "type": "string",
                    "description": "The resource on which the operation is performed"
                  },
                  "operation": {
                    "type": "string",
                    "description": "The operation that can be performed."
                  },
                  "description": {
                    "type": "string",
                    "description": "Operation description"
                  }
                }
              },
              "origin": {
                "type": "string",
                "description": "Origin result"
              },
              "nextLink": {
                "type": "string",
                "description": "The URL to use for getting the next set of results."
              }
            },
            "description": "Available operation list result"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any.",
          "readOnly": true
        }
      },
      "description": "Describes the result of the request to list Service Fabric resource provider operations."
    },
    "OperationResult": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation."
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Indicates whether the operation is a data action"
        },
        "display": {
          "description": "The object that represents the operation.",
          "type": "object",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The name of the provider."
            },
            "resource": {
              "type": "string",
              "description": "The resource on which the operation is performed"
            },
            "operation": {
              "type": "string",
              "description": "The operation that can be performed."
            },
            "description": {
              "type": "string",
              "description": "Operation description"
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "Origin result"
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "Available operation list result"
    },
    "ReliabilityLevel": {
      "type": "string",
      "description": "The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).\n\n  - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.\n  - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.\n  - Silver - Run the System services with a target replica set count of 5.\n  - Gold - Run the System services with a target replica set count of 7.\n  - Platinum - Run the System services with a target replica set count of 9.\n",
      "enum": [
        "None",
        "Bronze",
        "Silver",
        "Gold",
        "Platinum"
      ]
    },
    "Resource": {
      "type": "object",
      "required": [
        "location"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Azure resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Azure resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Azure resource type.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "Azure resource location.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Azure resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "etag": {
          "type": "string",
          "description": "Azure resource etag.",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)."
            }
          }
        }
      },
      "description": "The resource model definition.",
      "x-ms-azure-resource": true
    },
    "ServerCertificateCommonName": {
      "type": "object",
      "description": "Describes the server certificate details using common name.",
      "required": [
        "certificateCommonName",
        "certificateIssuerThumbprint"
      ],
      "properties": {
        "certificateCommonName": {
          "type": "string",
          "description": "The common name of the server certificate."
        },
        "certificateIssuerThumbprint": {
          "type": "string",
          "description": "The issuer thumbprint of the server certificate."
        }
      }
    },
    "ServerCertificateCommonNames": {
      "type": "object",
      "description": "Describes a list of server certificates referenced by common name that are used to secure the cluster.",
      "properties": {
        "commonNames": {
          "type": "array",
          "description": "The list of server certificates referenced by common name that are used to secure the cluster.",
          "items": {
            "type": "object",
            "description": "Describes the server certificate details using common name.",
            "required": [
              "certificateCommonName",
              "certificateIssuerThumbprint"
            ],
            "properties": {
              "certificateCommonName": {
                "type": "string",
                "description": "The common name of the server certificate."
              },
              "certificateIssuerThumbprint": {
                "type": "string",
                "description": "The issuer thumbprint of the server certificate."
              }
            }
          }
        },
        "x509StoreName": {
          "type": "string",
          "description": "The local certificate store location.",
          "enum": [
            "AddressBook",
            "AuthRoot",
            "CertificateAuthority",
            "Disallowed",
            "My",
            "Root",
            "TrustedPeople",
            "TrustedPublisher"
          ]
        }
      }
    },
    "ServiceTypeDeltaHealthPolicy": {
      "type": "object",
      "description": "Represents the delta health policy used to evaluate the health of services belonging to a service type when upgrading the cluster.\n",
      "properties": {
        "maxPercentDeltaUnhealthyServices": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
          "default": 0,
          "minimum": 0,
          "maximum": 100
        }
      }
    },
    "ServiceTypeDeltaHealthPolicyMap": {
      "type": "object",
      "description": "Defines a map that contains specific delta health policies for different service types.\nEach entry specifies as key the service type name and as value a ServiceTypeDeltaHealthPolicy used to evaluate the service health when upgrading the cluster.\nThe map is empty by default.\n",
      "additionalProperties": {
        "type": "object",
        "description": "Represents the delta health policy used to evaluate the health of services belonging to a service type when upgrading the cluster.\n",
        "properties": {
          "maxPercentDeltaUnhealthyServices": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum allowed percentage of services health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
            "default": 0,
            "minimum": 0,
            "maximum": 100
          }
        }
      }
    },
    "SettingsParameterDescription": {
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The parameter name of fabric setting."
        },
        "value": {
          "type": "string",
          "description": "The parameter value of fabric setting."
        }
      },
      "description": "Describes a parameter in fabric settings of the cluster."
    },
    "SettingsSectionDescription": {
      "type": "object",
      "required": [
        "name",
        "parameters"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The section name of the fabric settings."
        },
        "parameters": {
          "type": "array",
          "description": "The collection of parameters in the section.",
          "items": {
            "type": "object",
            "required": [
              "name",
              "value"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "The parameter name of fabric setting."
              },
              "value": {
                "type": "string",
                "description": "The parameter value of fabric setting."
              }
            },
            "description": "Describes a parameter in fabric settings of the cluster."
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      },
      "description": "Describes a section in the fabric settings of the cluster."
    },
    "StoreName": {
      "type": "string",
      "description": "The local certificate store location.",
      "enum": [
        "AddressBook",
        "AuthRoot",
        "CertificateAuthority",
        "Disallowed",
        "My",
        "Root",
        "TrustedPeople",
        "TrustedPublisher"
      ]
    },
    "UpgradableVersionPathResult": {
      "type": "object",
      "properties": {
        "supportedPath": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The cluster code version."
          }
        }
      },
      "description": "The list of intermediate cluster code versions for an upgrade or downgrade. Or minimum and maximum upgradable version if no target was given"
    },
    "UpgradableVersionsDescription": {
      "type": "object",
      "required": [
        "targetVersion"
      ],
      "properties": {
        "targetVersion": {
          "type": "string",
          "description": "The target code version."
        }
      }
    },
    "UpgradeMode": {
      "type": "string",
      "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.",
      "enum": [
        "Automatic",
        "Manual"
      ],
      "default": "Automatic",
      "x-ms-enum": {
        "name": "UpgradeMode",
        "modelAsString": true,
        "values": [
          {
            "value": "Automatic",
            "description": "The cluster will be automatically upgraded to the latest Service Fabric runtime version, **upgradeWave** will determine when the upgrade starts after the new version becomes available."
          },
          {
            "value": "Manual",
            "description": "The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource."
          }
        ]
      }
    },
    "SfZonalUpgradeMode": {
      "type": "string",
      "enum": [
        "Parallel",
        "Hierarchical"
      ],
      "x-ms-enum": {
        "name": "sfZonalUpgradeMode",
        "modelAsString": true,
        "values": [
          {
            "value": "Parallel",
            "description": "VMs under the node type are grouped into UDs and ignore the zone info in five UDs. This setting causes UDs across all zones to be upgraded at the same time. This deployment mode is faster for upgrades, we don't recommend it because it goes against the SDP guidelines, which state that the updates should be applied to one zone at a time."
          },
          {
            "value": "Hierarchical",
            "description": "If this value is omitted or set to Hierarchical, VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone. This update process is safer for the cluster and the user application."
          }
        ]
      },
      "description": "This property controls the logical grouping of VMs in upgrade domains (UDs). This property can't be modified if a node type with multiple Availability Zones is already present in the cluster."
    },
    "VmssZonalUpgradeMode": {
      "type": "string",
      "enum": [
        "Parallel",
        "Hierarchical"
      ],
      "x-ms-enum": {
        "name": "vmssZonalUpgradeMode",
        "modelAsString": true,
        "values": [
          {
            "value": "Parallel",
            "description": "Updates will happen in all Availability Zones at once for the virtual machine scale sets."
          },
          {
            "value": "Hierarchical",
            "description": "VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone."
          }
        ]
      },
      "description": "This property defines the upgrade mode for the virtual machine scale set, it is mandatory if a node type with multiple Availability Zones is added."
    },
    "ServiceTypeHealthPolicy": {
      "type": "object",
      "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
      "required": [
        "maxPercentUnhealthyServices",
        "maxPercentUnhealthyPartitionsPerService",
        "maxPercentUnhealthyReplicasPerPartition"
      ],
      "properties": {
        "maxPercentUnhealthyServices": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum allowed percentage of unhealthy services.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services.\n",
          "minimum": 0,
          "maximum": 100
        },
        "maxPercentUnhealthyPartitionsPerService": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum allowed percentage of unhealthy partitions per service.\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions.\n",
          "minimum": 0,
          "maximum": 100
        },
        "maxPercentUnhealthyReplicasPerPartition": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum allowed percentage of unhealthy replicas per partition.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas.\n",
          "minimum": 0,
          "maximum": 100
        }
      }
    },
    "ServiceTypeHealthPolicyMap": {
      "type": "object",
      "description": "Defines a ServiceTypeHealthPolicy per service type name.\n\nThe entries in the map replace the default service type health policy for each specified service type.\nFor example, in an application that contains both a stateless gateway service type and a stateful engine service type, the health policies for the stateless and stateful services can be configured differently.\nWith policy per service type, there's more granular control of the health of the service.\n\nIf no policy is specified for a service type name, the DefaultServiceTypeHealthPolicy is used for evaluation.\n",
      "additionalProperties": {
        "type": "object",
        "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n",
        "required": [
          "maxPercentUnhealthyServices",
          "maxPercentUnhealthyPartitionsPerService",
          "maxPercentUnhealthyReplicasPerPartition"
        ],
        "properties": {
          "maxPercentUnhealthyServices": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum allowed percentage of unhealthy services.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services.\n",
            "minimum": 0,
            "maximum": 100
          },
          "maxPercentUnhealthyPartitionsPerService": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum allowed percentage of unhealthy partitions per service.\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions.\n",
            "minimum": 0,
            "maximum": 100
          },
          "maxPercentUnhealthyReplicasPerPartition": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum allowed percentage of unhealthy replicas per partition.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas.\n",
            "minimum": 0,
            "maximum": 100
          }
        }
      }
    },
    "RuntimeFailureAction": {
      "type": "string",
      "description": "The compensating action to perform when a Monitored upgrade encounters monitoring policy or health policy violations.\nRollback specifies that the upgrade will start rolling back automatically.\nManual indicates that the upgrade will switch to UnmonitoredManual upgrade mode.\n",
      "enum": [
        "Rollback",
        "Manual"
      ],
      "x-ms-enum": {
        "name": "FailureAction",
        "modelAsString": true,
        "values": [
          {
            "value": "Rollback",
            "description": "The upgrade will start rolling back automatically. The value is 0"
          },
          {
            "value": "Manual",
            "description": "The upgrade will switch to UnmonitoredManual upgrade mode. The value is 1"
          }
        ]
      }
    },
    "RuntimeResumeApplicationUpgradeParameters": {
      "type": "object",
      "properties": {
        "upgradeDomainName": {
          "description": "The upgrade domain name. Expected to be the next upgrade domain if the application is upgrading.",
          "type": "string"
        }
      },
      "description": "Parameters for Resume Upgrade action. The upgrade domain name must be specified."
    },
    "RuntimeUpgradeMode": {
      "type": "string",
      "description": "The mode used to monitor health during a rolling upgrade. The values are UnmonitoredAuto, UnmonitoredManual, Monitored, and UnmonitoredDeferred.",
      "enum": [
        "UnmonitoredAuto",
        "UnmonitoredManual",
        "Monitored"
      ],
      "default": "Monitored",
      "x-ms-enum": {
        "name": "UpgradeMode",
        "modelAsString": true,
        "values": [
          {
            "value": "UnmonitoredAuto",
            "description": "The upgrade will proceed automatically without performing any health monitoring. The value is 0"
          },
          {
            "value": "UnmonitoredManual",
            "description": "The upgrade will stop after completing each upgrade domain, giving the opportunity to manually monitor health before proceeding. The value is 1"
          },
          {
            "value": "Monitored",
            "description": "The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 2"
          }
        ]
      }
    },
    "AddRemoveIncrementalNamedPartitionScalingMechanism": {
      "type": "object",
      "description": "Represents a scaling mechanism for adding or removing named partitions of a stateless service. Partition names are in the format '0','1'...'N-1'.",
      "allOf": [
        {
          "type": "object",
          "discriminator": "kind",
          "description": "Describes the mechanism for performing a scaling operation.",
          "required": [
            "kind"
          ],
          "properties": {
            "kind": {
              "description": "Specifies the mechanism associated with this scaling policy.",
              "type": "string",
              "enum": [
                "ScalePartitionInstanceCount",
                "AddRemoveIncrementalNamedPartition"
              ],
              "x-ms-enum": {
                "name": "ServiceScalingMechanismKind",
                "modelAsString": true,
                "values": [
                  {
                    "value": "ScalePartitionInstanceCount",
                    "description": "Represents a scaling mechanism for adding or removing instances of stateless service partition. The value is 0."
                  },
                  {
                    "value": "AddRemoveIncrementalNamedPartition",
                    "description": "Represents a scaling mechanism for adding or removing named partitions of a stateless service. The value is 1."
                  }
                ]
              }
            }
          }
        },
        {
          "type": "object",
          "description": "AddRemoveIncrementalNamedPartitionScalingMechanism"
        }
      ],
      "x-ms-discriminator-value": "AddRemoveIncrementalNamedPartition",
      "required": [
        "minPartitionCount",
        "maxPartitionCount",
        "scaleIncrement"
      ],
      "properties": {
        "minPartitionCount": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum number of named partitions of the service."
        },
        "maxPartitionCount": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of named partitions of the service."
        },
        "scaleIncrement": {
          "type": "integer",
          "format": "int32",
          "description": "The number of instances to add or remove during a scaling operation."
        }
      }
    },
    "ApplicationTypeUpdateParameters": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Application type update parameters",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "Application type update request"
    },
    "ApplicationTypeVersionUpdateParameters": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Application type version update parameters",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "Application type version update request"
    },
    "ApplicationUpdateParameters": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Application update parameters",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "Application update request"
    },
    "AveragePartitionLoadScalingTrigger": {
      "type": "object",
      "description": "Represents a scaling trigger related to an average load of a metric/resource of a partition.",
      "allOf": [
        {
          "type": "object",
          "discriminator": "kind",
          "description": "Describes the trigger for performing a scaling operation.",
          "required": [
            "kind"
          ],
          "properties": {
            "kind": {
              "description": "Specifies the trigger associated with this scaling policy.",
              "type": "string",
              "enum": [
                "AveragePartitionLoadTrigger",
                "AverageServiceLoadTrigger"
              ],
              "x-ms-enum": {
                "name": "ServiceScalingTriggerKind",
                "modelAsString": true,
                "values": [
                  {
                    "value": "AveragePartitionLoadTrigger",
                    "description": "Represents a scaling trigger related to an average load of a metric/resource of a partition. The value is 0."
                  },
                  {
                    "value": "AverageServiceLoadTrigger",
                    "description": "Represents a scaling policy related to an average load of a metric/resource of a service. The value is 1."
                  }
                ]
              }
            }
          }
        },
        {
          "type": "object",
          "description": "AveragePartitionLoadScalingTrigger"
        }
      ],
      "x-ms-discriminator-value": "AveragePartitionLoadTrigger",
      "required": [
        "metricName",
        "lowerLoadThreshold",
        "upperLoadThreshold",
        "scaleInterval"
      ],
      "properties": {
        "metricName": {
          "type": "string",
          "description": "The name of the metric for which usage should be tracked."
        },
        "lowerLoadThreshold": {
          "type": "number",
          "format": "double",
          "description": "The lower limit of the load below which a scale in operation should be performed."
        },
        "upperLoadThreshold": {
          "type": "number",
          "format": "double",
          "description": "The upper limit of the load beyond which a scale out operation should be performed."
        },
        "scaleInterval": {
          "type": "string",
          "description": "The period in seconds on which a decision is made whether to scale or not. This property should come in ISO 8601 format \"hh:mm:ss\"."
        }
      }
    },
    "AverageServiceLoadScalingTrigger": {
      "type": "object",
      "description": "Represents a scaling policy related to an average load of a metric/resource of a service.",
      "allOf": [
        {
          "type": "object",
          "discriminator": "kind",
          "description": "Describes the trigger for performing a scaling operation.",
          "required": [
            "kind"
          ],
          "properties": {
            "kind": {
              "description": "Specifies the trigger associated with this scaling policy.",
              "type": "string",
              "enum": [
                "AveragePartitionLoadTrigger",
                "AverageServiceLoadTrigger"
              ],
              "x-ms-enum": {
                "name": "ServiceScalingTriggerKind",
                "modelAsString": true,
                "values": [
                  {
                    "value": "AveragePartitionLoadTrigger",
                    "description": "Represents a scaling trigger related to an average load of a metric/resource of a partition. The value is 0."
                  },
                  {
                    "value": "AverageServiceLoadTrigger",
                    "description": "Represents a scaling policy related to an average load of a metric/resource of a service. The value is 1."
                  }
                ]
              }
            }
          }
        },
        {
          "type": "object",
          "description": "AverageServiceLoadScalingTrigger"
        }
      ],
      "x-ms-discriminator-value": "AverageServiceLoadTrigger",
      "required": [
        "metricName",
        "lowerLoadThreshold",
        "upperLoadThreshold",
        "scaleInterval",
        "useOnlyPrimaryLoad"
      ],
      "properties": {
        "metricName": {
          "type": "string",
          "description": "The name of the metric for which usage should be tracked."
        },
        "lowerLoadThreshold": {
          "type": "number",
          "format": "double",
          "description": "The lower limit of the load below which a scale in operation should be performed."
        },
        "upperLoadThreshold": {
          "type": "number",
          "format": "double",
          "description": "The upper limit of the load beyond which a scale out operation should be performed."
        },
        "scaleInterval": {
          "type": "string",
          "description": "The period in seconds on which a decision is made whether to scale or not. This property should come in ISO 8601 format \"hh:mm:ss\"."
        },
        "useOnlyPrimaryLoad": {
          "type": "boolean",
          "description": "Flag determines whether only the load of primary replica should be considered for scaling. If set to true, then trigger will only consider the load of primary replicas of stateful service. If set to false, trigger will consider load of all replicas. This parameter cannot be set to true for stateless service."
        }
      }
    },
    "NamedPartitionScheme": {
      "type": "object",
      "description": "Describes the named partition scheme of the service.",
      "allOf": [
        {
          "type": "object",
          "discriminator": "partitionScheme",
          "description": "Describes how the service is partitioned.",
          "required": [
            "partitionScheme"
          ],
          "properties": {
            "partitionScheme": {
              "description": "Specifies how the service is partitioned.",
              "type": "string",
              "enum": [
                "Singleton",
                "UniformInt64Range",
                "Named"
              ],
              "x-ms-enum": {
                "name": "PartitionScheme",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Singleton",
                    "description": "Indicates that the partition is based on string names, and is a SingletonPartitionScheme object, The value is 0."
                  },
                  {
                    "value": "UniformInt64Range",
                    "description": "Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionScheme object. The value is 1."
                  },
                  {
                    "value": "Named",
                    "description": "Indicates that the partition is based on string names, and is a NamedPartitionScheme object. The value is 2."
                  }
                ]
              }
            }
          }
        },
        {
          "type": "object",
          "description": "NamedPartitionScheme"
        }
      ],
      "x-ms-discriminator-value": "Named",
      "required": [
        "names"
      ],
      "properties": {
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Array for the names of the partitions."
        }
      }
    },
    "Partition": {
      "type": "object",
      "discriminator": "partitionScheme",
      "description": "Describes how the service is partitioned.",
      "required": [
        "partitionScheme"
      ],
      "properties": {
        "partitionScheme": {
          "description": "Specifies how the service is partitioned.",
          "type": "string",
          "enum": [
            "Singleton",
            "UniformInt64Range",
            "Named"
          ],
          "x-ms-enum": {
            "name": "PartitionScheme",
            "modelAsString": true,
            "values": [
              {
                "value": "Singleton",
                "description": "Indicates that the partition is based on string names, and is a SingletonPartitionScheme object, The value is 0."
              },
              {
                "value": "UniformInt64Range",
                "description": "Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionScheme object. The value is 1."
              },
              {
                "value": "Named",
                "description": "Indicates that the partition is based on string names, and is a NamedPartitionScheme object. The value is 2."
              }
            ]
          }
        }
      }
    },
    "PartitionInstanceCountScaleMechanism": {
      "type": "object",
      "description": "Represents a scaling mechanism for adding or removing instances of stateless service partition.",
      "allOf": [
        {
          "type": "object",
          "discriminator": "kind",
          "description": "Describes the mechanism for performing a scaling operation.",
          "required": [
            "kind"
          ],
          "properties": {
            "kind": {
              "description": "Specifies the mechanism associated with this scaling policy.",
              "type": "string",
              "enum": [
                "ScalePartitionInstanceCount",
                "AddRemoveIncrementalNamedPartition"
              ],
              "x-ms-enum": {
                "name": "ServiceScalingMechanismKind",
                "modelAsString": true,
                "values": [
                  {
                    "value": "ScalePartitionInstanceCount",
                    "description": "Represents a scaling mechanism for adding or removing instances of stateless service partition. The value is 0."
                  },
                  {
                    "value": "AddRemoveIncrementalNamedPartition",
                    "description": "Represents a scaling mechanism for adding or removing named partitions of a stateless service. The value is 1."
                  }
                ]
              }
            }
          }
        },
        {
          "type": "object",
          "description": "PartitionInstanceCountScaleMechanism"
        }
      ],
      "x-ms-discriminator-value": "ScalePartitionInstanceCount",
      "required": [
        "minInstanceCount",
        "maxInstanceCount",
        "scaleIncrement"
      ],
      "properties": {
        "minInstanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum number of instances of the partition."
        },
        "maxInstanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of instances of the partition."
        },
        "scaleIncrement": {
          "type": "integer",
          "format": "int32",
          "description": "The number of instances to add or remove during a scaling operation."
        }
      }
    },
    "RollingUpgradeMonitoringPolicy": {
      "type": "object",
      "description": "The policy used for monitoring the application upgrade",
      "required": [
        "failureAction",
        "healthCheckWaitDuration",
        "healthCheckStableDuration",
        "healthCheckRetryTimeout",
        "upgradeTimeout",
        "upgradeDomainTimeout"
      ],
      "properties": {
        "failureAction": {
          "type": "string",
          "description": "The compensating action to perform when a Monitored upgrade encounters monitoring policy or health policy violations. Invalid indicates the failure action is invalid. Rollback specifies that the upgrade will start rolling back automatically. Manual indicates that the upgrade will switch to UnmonitoredManual upgrade mode.",
          "enum": [
            "Rollback",
            "Manual"
          ],
          "x-ms-enum": {
            "name": "FailureAction",
            "modelAsString": true,
            "values": [
              {
                "value": "Rollback",
                "description": "Indicates that a rollback of the upgrade will be performed by Service Fabric if the upgrade fails."
              },
              {
                "value": "Manual",
                "description": "Indicates that a manual repair will need to be performed by the administrator if the upgrade fails. Service Fabric will not proceed to the next upgrade domain automatically."
              }
            ]
          }
        },
        "healthCheckWaitDuration": {
          "type": "string",
          "x-ms-format": "duration-constant",
          "description": "The amount of time to wait after completing an upgrade domain before applying health policies. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
        },
        "healthCheckStableDuration": {
          "type": "string",
          "x-ms-format": "duration-constant",
          "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
        },
        "healthCheckRetryTimeout": {
          "type": "string",
          "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
        },
        "upgradeTimeout": {
          "type": "string",
          "description": "The amount of time the overall upgrade has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
        },
        "upgradeDomainTimeout": {
          "type": "string",
          "description": "The amount of time each upgrade domain has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
        }
      }
    },
    "ScalingMechanism": {
      "type": "object",
      "discriminator": "kind",
      "description": "Describes the mechanism for performing a scaling operation.",
      "required": [
        "kind"
      ],
      "properties": {
        "kind": {
          "description": "Specifies the mechanism associated with this scaling policy.",
          "type": "string",
          "enum": [
            "ScalePartitionInstanceCount",
            "AddRemoveIncrementalNamedPartition"
          ],
          "x-ms-enum": {
            "name": "ServiceScalingMechanismKind",
            "modelAsString": true,
            "values": [
              {
                "value": "ScalePartitionInstanceCount",
                "description": "Represents a scaling mechanism for adding or removing instances of stateless service partition. The value is 0."
              },
              {
                "value": "AddRemoveIncrementalNamedPartition",
                "description": "Represents a scaling mechanism for adding or removing named partitions of a stateless service. The value is 1."
              }
            ]
          }
        }
      }
    },
    "ScalingPolicy": {
      "type": "object",
      "description": "Specifies a metric to load balance a service during runtime.",
      "required": [
        "scalingMechanism",
        "scalingTrigger"
      ],
      "properties": {
        "scalingMechanism": {
          "description": "Specifies the mechanism associated with this scaling policy",
          "type": "object",
          "discriminator": "kind",
          "required": [
            "kind"
          ],
          "properties": {
            "kind": {
              "description": "Specifies the mechanism associated with this scaling policy.",
              "type": "string",
              "enum": [
                "ScalePartitionInstanceCount",
                "AddRemoveIncrementalNamedPartition"
              ],
              "x-ms-enum": {
                "name": "ServiceScalingMechanismKind",
                "modelAsString": true,
                "values": [
                  {
                    "value": "ScalePartitionInstanceCount",
                    "description": "Represents a scaling mechanism for adding or removing instances of stateless service partition. The value is 0."
                  },
                  {
                    "value": "AddRemoveIncrementalNamedPartition",
                    "description": "Represents a scaling mechanism for adding or removing named partitions of a stateless service. The value is 1."
                  }
                ]
              }
            }
          }
        },
        "scalingTrigger": {
          "description": "Specifies the trigger associated with this scaling policy.",
          "type": "object",
          "discriminator": "kind",
          "required": [
            "kind"
          ],
          "properties": {
            "kind": {
              "description": "Specifies the trigger associated with this scaling policy.",
              "type": "string",
              "enum": [
                "AveragePartitionLoadTrigger",
                "AverageServiceLoadTrigger"
              ],
              "x-ms-enum": {
                "name": "ServiceScalingTriggerKind",
                "modelAsString": true,
                "values": [
                  {
                    "value": "AveragePartitionLoadTrigger",
                    "description": "Represents a scaling trigger related to an average load of a metric/resource of a partition. The value is 0."
                  },
                  {
                    "value": "AverageServiceLoadTrigger",
                    "description": "Represents a scaling policy related to an average load of a metric/resource of a service. The value is 1."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "ScalingPolicyList": {
      "type": "array",
      "items": {
        "type": "object",
        "description": "Specifies a metric to load balance a service during runtime.",
        "required": [
          "scalingMechanism",
          "scalingTrigger"
        ],
        "properties": {
          "scalingMechanism": {
            "description": "Specifies the mechanism associated with this scaling policy",
            "type": "object",
            "discriminator": "kind",
            "required": [
              "kind"
            ],
            "properties": {
              "kind": {
                "description": "Specifies the mechanism associated with this scaling policy.",
                "type": "string",
                "enum": [
                  "ScalePartitionInstanceCount",
                  "AddRemoveIncrementalNamedPartition"
                ],
                "x-ms-enum": {
                  "name": "ServiceScalingMechanismKind",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "ScalePartitionInstanceCount",
                      "description": "Represents a scaling mechanism for adding or removing instances of stateless service partition. The value is 0."
                    },
                    {
                      "value": "AddRemoveIncrementalNamedPartition",
                      "description": "Represents a scaling mechanism for adding or removing named partitions of a stateless service. The value is 1."
                    }
                  ]
                }
              }
            }
          },
          "scalingTrigger": {
            "description": "Specifies the trigger associated with this scaling policy.",
            "type": "object",
            "discriminator": "kind",
            "required": [
              "kind"
            ],
            "properties": {
              "kind": {
                "description": "Specifies the trigger associated with this scaling policy.",
                "type": "string",
                "enum": [
                  "AveragePartitionLoadTrigger",
                  "AverageServiceLoadTrigger"
                ],
                "x-ms-enum": {
                  "name": "ServiceScalingTriggerKind",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "AveragePartitionLoadTrigger",
                      "description": "Represents a scaling trigger related to an average load of a metric/resource of a partition. The value is 0."
                    },
                    {
                      "value": "AverageServiceLoadTrigger",
                      "description": "Represents a scaling policy related to an average load of a metric/resource of a service. The value is 1."
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "x-ms-identifiers": [],
      "description": "Scaling policies for this service."
    },
    "ScalingTrigger": {
      "type": "object",
      "discriminator": "kind",
      "description": "Describes the trigger for performing a scaling operation.",
      "required": [
        "kind"
      ],
      "properties": {
        "kind": {
          "description": "Specifies the trigger associated with this scaling policy.",
          "type": "string",
          "enum": [
            "AveragePartitionLoadTrigger",
            "AverageServiceLoadTrigger"
          ],
          "x-ms-enum": {
            "name": "ServiceScalingTriggerKind",
            "modelAsString": true,
            "values": [
              {
                "value": "AveragePartitionLoadTrigger",
                "description": "Represents a scaling trigger related to an average load of a metric/resource of a partition. The value is 0."
              },
              {
                "value": "AverageServiceLoadTrigger",
                "description": "Represents a scaling policy related to an average load of a metric/resource of a service. The value is 1."
              }
            ]
          }
        }
      }
    },
    "ServiceCorrelation": {
      "type": "object",
      "description": "Creates a particular correlation between services.",
      "required": [
        "scheme",
        "serviceName"
      ],
      "properties": {
        "scheme": {
          "description": "The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.",
          "type": "string",
          "enum": [
            "AlignedAffinity",
            "NonAlignedAffinity"
          ],
          "x-ms-enum": {
            "name": "ServiceCorrelationScheme",
            "modelAsString": true,
            "values": [
              {
                "value": "AlignedAffinity",
                "description": "Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 0."
              },
              {
                "value": "NonAlignedAffinity",
                "description": "Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 1."
              }
            ]
          }
        },
        "serviceName": {
          "description": "The Arm Resource ID of the service that the correlation relationship is established with.",
          "type": "string",
          "x-sf-clientlib": {
            "typeName": "ServiceName"
          }
        }
      }
    },
    "ServiceLoadMetric": {
      "type": "object",
      "description": "Specifies a metric to load balance a service during runtime.",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive."
        },
        "weight": {
          "description": "The service load metric relative weight, compared to other metrics configured for this service, as a number.",
          "type": "string",
          "enum": [
            "Zero",
            "Low",
            "Medium",
            "High"
          ],
          "x-ms-enum": {
            "name": "ServiceLoadMetricWeight",
            "modelAsString": true,
            "values": [
              {
                "value": "Zero",
                "description": "Disables resource balancing for this metric. This value is zero."
              },
              {
                "value": "Low",
                "description": "Specifies the metric weight of the service load as Low. The value is 1."
              },
              {
                "value": "Medium",
                "description": "Specifies the metric weight of the service load as Medium. The value is 2."
              },
              {
                "value": "High",
                "description": "Specifies the metric weight of the service load as High. The value is 3."
              }
            ]
          }
        },
        "primaryDefaultLoad": {
          "type": "integer",
          "format": "int32",
          "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica."
        },
        "secondaryDefaultLoad": {
          "type": "integer",
          "format": "int32",
          "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica."
        },
        "defaultLoad": {
          "type": "integer",
          "format": "int32",
          "description": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric."
        }
      }
    },
    "ServicePlacementInvalidDomainPolicy": {
      "type": "object",
      "description": "Describes the policy to be used for placement of a Service Fabric service where a particular fault or upgrade domain should not be used for placement of the instances or replicas of that service.",
      "allOf": [
        {
          "type": "object",
          "discriminator": "type",
          "description": "Describes the policy to be used for placement of a Service Fabric service.",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "The type of placement policy for a service fabric service. Following are the possible values.",
              "enum": [
                "InvalidDomain",
                "RequiredDomain",
                "PreferredPrimaryDomain",
                "RequiredDomainDistribution",
                "NonPartiallyPlaceService"
              ],
              "x-ms-enum": {
                "name": "ServicePlacementPolicyType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "InvalidDomain",
                    "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 0."
                  },
                  {
                    "value": "RequiredDomain",
                    "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 1."
                  },
                  {
                    "value": "PreferredPrimaryDomain",
                    "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 2."
                  },
                  {
                    "value": "RequiredDomainDistribution",
                    "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 3."
                  },
                  {
                    "value": "NonPartiallyPlaceService",
                    "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 4."
                  }
                ]
              }
            }
          }
        },
        {
          "type": "object",
          "description": "ServicePlacementInvalidDomainPolicy"
        }
      ],
      "x-ms-discriminator-value": "InvalidDomain",
      "required": [
        "domainName"
      ],
      "properties": {
        "domainName": {
          "type": "string",
          "description": "The name of the domain that should not be used for placement."
        }
      }
    },
    "ServicePlacementNonPartiallyPlaceServicePolicy": {
      "type": "object",
      "description": "The name of the domain that should used for placement as per this policy.",
      "allOf": [
        {
          "type": "object",
          "discriminator": "type",
          "description": "Describes the policy to be used for placement of a Service Fabric service.",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "The type of placement policy for a service fabric service. Following are the possible values.",
              "enum": [
                "InvalidDomain",
                "RequiredDomain",
                "PreferredPrimaryDomain",
                "RequiredDomainDistribution",
                "NonPartiallyPlaceService"
              ],
              "x-ms-enum": {
                "name": "ServicePlacementPolicyType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "InvalidDomain",
                    "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 0."
                  },
                  {
                    "value": "RequiredDomain",
                    "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 1."
                  },
                  {
                    "value": "PreferredPrimaryDomain",
                    "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 2."
                  },
                  {
                    "value": "RequiredDomainDistribution",
                    "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 3."
                  },
                  {
                    "value": "NonPartiallyPlaceService",
                    "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 4."
                  }
                ]
              }
            }
          }
        },
        {
          "type": "object",
          "description": "ServicePlacementNonPartiallyPlaceServicePolicy"
        }
      ],
      "x-ms-discriminator-value": "NonPartiallyPlaceService"
    },
    "ServicePlacementPolicy": {
      "type": "object",
      "discriminator": "type",
      "description": "Describes the policy to be used for placement of a Service Fabric service.",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of placement policy for a service fabric service. Following are the possible values.",
          "enum": [
            "InvalidDomain",
            "RequiredDomain",
            "PreferredPrimaryDomain",
            "RequiredDomainDistribution",
            "NonPartiallyPlaceService"
          ],
          "x-ms-enum": {
            "name": "ServicePlacementPolicyType",
            "modelAsString": true,
            "values": [
              {
                "value": "InvalidDomain",
                "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 0."
              },
              {
                "value": "RequiredDomain",
                "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 1."
              },
              {
                "value": "PreferredPrimaryDomain",
                "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 2."
              },
              {
                "value": "RequiredDomainDistribution",
                "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 3."
              },
              {
                "value": "NonPartiallyPlaceService",
                "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 4."
              }
            ]
          }
        }
      }
    },
    "ServicePlacementPreferPrimaryDomainPolicy": {
      "type": "object",
      "description": "Describes the policy to be used for placement of a Service Fabric service where the service's \nPrimary replicas should optimally be placed in a particular domain.\n\nThis placement policy is usually used with fault domains in scenarios where the Service Fabric\ncluster is geographically distributed in order to indicate that a service's primary replica should\nbe located in a particular fault domain, which in geo-distributed scenarios usually aligns with regional\nor datacenter boundaries. Note that since this is an optimization it is possible that the Primary replica\nmay not end up located in this domain due to failures, capacity limits, or other constraints.\n",
      "allOf": [
        {
          "type": "object",
          "discriminator": "type",
          "description": "Describes the policy to be used for placement of a Service Fabric service.",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "The type of placement policy for a service fabric service. Following are the possible values.",
              "enum": [
                "InvalidDomain",
                "RequiredDomain",
                "PreferredPrimaryDomain",
                "RequiredDomainDistribution",
                "NonPartiallyPlaceService"
              ],
              "x-ms-enum": {
                "name": "ServicePlacementPolicyType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "InvalidDomain",
                    "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 0."
                  },
                  {
                    "value": "RequiredDomain",
                    "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 1."
                  },
                  {
                    "value": "PreferredPrimaryDomain",
                    "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 2."
                  },
                  {
                    "value": "RequiredDomainDistribution",
                    "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 3."
                  },
                  {
                    "value": "NonPartiallyPlaceService",
                    "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 4."
                  }
                ]
              }
            }
          }
        },
        {
          "type": "object",
          "description": "ServicePlacementPreferPrimaryDomainPolicy"
        }
      ],
      "x-ms-discriminator-value": "PreferredPrimaryDomain",
      "required": [
        "domainName"
      ],
      "properties": {
        "domainName": {
          "type": "string",
          "description": "The name of the domain that should used for placement as per this policy."
        }
      }
    },
    "ServicePlacementRequiredDomainPolicy": {
      "type": "object",
      "description": "Describes the policy to be used for placement of a Service Fabric service where the instances or replicas of that service must be placed in a particular domain.",
      "allOf": [
        {
          "type": "object",
          "discriminator": "type",
          "description": "Describes the policy to be used for placement of a Service Fabric service.",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "The type of placement policy for a service fabric service. Following are the possible values.",
              "enum": [
                "InvalidDomain",
                "RequiredDomain",
                "PreferredPrimaryDomain",
                "RequiredDomainDistribution",
                "NonPartiallyPlaceService"
              ],
              "x-ms-enum": {
                "name": "ServicePlacementPolicyType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "InvalidDomain",
                    "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 0."
                  },
                  {
                    "value": "RequiredDomain",
                    "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 1."
                  },
                  {
                    "value": "PreferredPrimaryDomain",
                    "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 2."
                  },
                  {
                    "value": "RequiredDomainDistribution",
                    "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 3."
                  },
                  {
                    "value": "NonPartiallyPlaceService",
                    "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 4."
                  }
                ]
              }
            }
          }
        },
        {
          "type": "object",
          "description": "ServicePlacementRequiredDomainPolicy"
        }
      ],
      "x-ms-discriminator-value": "RequiredDomain",
      "required": [
        "domainName"
      ],
      "properties": {
        "domainName": {
          "type": "string",
          "description": "The name of the domain that should used for placement as per this policy."
        }
      }
    },
    "ServicePlacementRequireDomainDistributionPolicy": {
      "type": "object",
      "description": "Describes the policy to be used for placement of a Service Fabric service where two replicas\nfrom the same partition should never be placed in the same fault or upgrade domain.\n\nWhile this is not common it can expose the service to an increased risk of concurrent failures\ndue to unplanned outages or other cases of subsequent/concurrent failures. As an example, consider\na case where replicas are deployed across different data center, with one replica per location.\nIn the event that one of the datacenters goes offline, normally the replica that was placed in that\ndatacenter will be packed into one of the remaining datacenters. If this is not desirable then this\npolicy should be set.\n",
      "allOf": [
        {
          "type": "object",
          "discriminator": "type",
          "description": "Describes the policy to be used for placement of a Service Fabric service.",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "The type of placement policy for a service fabric service. Following are the possible values.",
              "enum": [
                "InvalidDomain",
                "RequiredDomain",
                "PreferredPrimaryDomain",
                "RequiredDomainDistribution",
                "NonPartiallyPlaceService"
              ],
              "x-ms-enum": {
                "name": "ServicePlacementPolicyType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "InvalidDomain",
                    "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 0."
                  },
                  {
                    "value": "RequiredDomain",
                    "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 1."
                  },
                  {
                    "value": "PreferredPrimaryDomain",
                    "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 2."
                  },
                  {
                    "value": "RequiredDomainDistribution",
                    "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 3."
                  },
                  {
                    "value": "NonPartiallyPlaceService",
                    "description": "Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 4."
                  }
                ]
              }
            }
          }
        },
        {
          "type": "object",
          "description": "ServicePlacementRequireDomainDistributionPolicy"
        }
      ],
      "x-ms-discriminator-value": "RequiredDomainDistribution",
      "required": [
        "domainName"
      ],
      "properties": {
        "domainName": {
          "type": "string",
          "description": "The name of the domain that should used for placement as per this policy."
        }
      }
    },
    "ServiceScalingMechanismKind": {
      "type": "string",
      "description": "Enumerates the ways that a service can be partitioned.",
      "enum": [
        "ScalePartitionInstanceCount",
        "AddRemoveIncrementalNamedPartition"
      ],
      "x-ms-enum": {
        "name": "ServiceScalingMechanismKind",
        "modelAsString": true,
        "values": [
          {
            "value": "ScalePartitionInstanceCount",
            "description": "Represents a scaling mechanism for adding or removing instances of stateless service partition. The value is 0."
          },
          {
            "value": "AddRemoveIncrementalNamedPartition",
            "description": "Represents a scaling mechanism for adding or removing named partitions of a stateless service. The value is 1."
          }
        ]
      }
    },
    "ServiceScalingTriggerKind": {
      "type": "string",
      "description": "Enumerates the ways that a service can be partitioned.",
      "enum": [
        "AveragePartitionLoadTrigger",
        "AverageServiceLoadTrigger"
      ],
      "x-ms-enum": {
        "name": "ServiceScalingTriggerKind",
        "modelAsString": true,
        "values": [
          {
            "value": "AveragePartitionLoadTrigger",
            "description": "Represents a scaling trigger related to an average load of a metric/resource of a partition. The value is 0."
          },
          {
            "value": "AverageServiceLoadTrigger",
            "description": "Represents a scaling policy related to an average load of a metric/resource of a service. The value is 1."
          }
        ]
      }
    },
    "ServiceUpdateParameters": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Service update parameters",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "Service update request"
    },
    "SingletonPartitionScheme": {
      "type": "object",
      "description": "Describes the partition scheme of a singleton-partitioned, or non-partitioned service.",
      "allOf": [
        {
          "type": "object",
          "discriminator": "partitionScheme",
          "description": "Describes how the service is partitioned.",
          "required": [
            "partitionScheme"
          ],
          "properties": {
            "partitionScheme": {
              "description": "Specifies how the service is partitioned.",
              "type": "string",
              "enum": [
                "Singleton",
                "UniformInt64Range",
                "Named"
              ],
              "x-ms-enum": {
                "name": "PartitionScheme",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Singleton",
                    "description": "Indicates that the partition is based on string names, and is a SingletonPartitionScheme object, The value is 0."
                  },
                  {
                    "value": "UniformInt64Range",
                    "description": "Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionScheme object. The value is 1."
                  },
                  {
                    "value": "Named",
                    "description": "Indicates that the partition is based on string names, and is a NamedPartitionScheme object. The value is 2."
                  }
                ]
              }
            }
          }
        },
        {
          "type": "object",
          "description": "SingletonPartitionScheme"
        }
      ],
      "x-ms-discriminator-value": "Singleton"
    },
    "UniformInt64RangePartitionScheme": {
      "type": "object",
      "description": "Describes a partitioning scheme where an integer range is allocated evenly across a number of partitions.",
      "allOf": [
        {
          "type": "object",
          "discriminator": "partitionScheme",
          "description": "Describes how the service is partitioned.",
          "required": [
            "partitionScheme"
          ],
          "properties": {
            "partitionScheme": {
              "description": "Specifies how the service is partitioned.",
              "type": "string",
              "enum": [
                "Singleton",
                "UniformInt64Range",
                "Named"
              ],
              "x-ms-enum": {
                "name": "PartitionScheme",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Singleton",
                    "description": "Indicates that the partition is based on string names, and is a SingletonPartitionScheme object, The value is 0."
                  },
                  {
                    "value": "UniformInt64Range",
                    "description": "Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionScheme object. The value is 1."
                  },
                  {
                    "value": "Named",
                    "description": "Indicates that the partition is based on string names, and is a NamedPartitionScheme object. The value is 2."
                  }
                ]
              }
            }
          }
        },
        {
          "type": "object",
          "description": "UniformInt64RangePartitionScheme"
        }
      ],
      "x-ms-discriminator-value": "UniformInt64Range",
      "required": [
        "count",
        "lowKey",
        "highKey"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of partitions."
        },
        "lowKey": {
          "type": "integer",
          "format": "int64",
          "description": "The lower bound of the partition key range that\nshould be split between the partition ‘Count’\n"
        },
        "highKey": {
          "type": "integer",
          "format": "int64",
          "description": "The upper bound of the partition key range that\nshould be split between the partition ‘Count’\n"
        }
      }
    },
    "ManagedClusterAddOnFeature": {
      "type": "string",
      "description": "Available cluster add-on features",
      "enum": [
        "DnsService",
        "BackupRestoreService",
        "ResourceMonitorService"
      ],
      "x-ms-enum": {
        "name": "ManagedClusterAddOnFeature",
        "modelAsString": true,
        "values": [
          {
            "value": "DnsService",
            "description": "Dns service"
          },
          {
            "value": "BackupRestoreService",
            "description": "Backup and restore service"
          },
          {
            "value": "ResourceMonitorService",
            "description": "Resource monitor service"
          }
        ]
      }
    },
    "ClientCertificate": {
      "type": "object",
      "required": [
        "isAdmin"
      ],
      "properties": {
        "isAdmin": {
          "type": "boolean",
          "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
        },
        "thumbprint": {
          "type": "string",
          "description": "Certificate thumbprint."
        },
        "commonName": {
          "type": "string",
          "description": "Certificate common name."
        },
        "issuerThumbprint": {
          "type": "string",
          "description": "Issuer thumbprint for the certificate. Only used together with CommonName."
        }
      },
      "description": "Client certificate definition."
    },
    "ClusterMonitoringPolicy": {
      "type": "object",
      "description": "Describes the monitoring policies for the cluster upgrade.",
      "required": [
        "healthCheckWaitDuration",
        "healthCheckStableDuration",
        "healthCheckRetryTimeout",
        "upgradeTimeout",
        "upgradeDomainTimeout"
      ],
      "properties": {
        "healthCheckWaitDuration": {
          "type": "string",
          "x-ms-format": "duration-constant",
          "description": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
        },
        "healthCheckStableDuration": {
          "type": "string",
          "x-ms-format": "duration-constant",
          "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
        },
        "healthCheckRetryTimeout": {
          "type": "string",
          "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
        },
        "upgradeTimeout": {
          "type": "string",
          "description": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
        },
        "upgradeDomainTimeout": {
          "type": "string",
          "description": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
        }
      }
    },
    "ClusterUpgradeMode": {
      "type": "string",
      "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.\n",
      "enum": [
        "Automatic",
        "Manual"
      ],
      "default": "Automatic",
      "x-ms-enum": {
        "name": "ClusterUpgradeMode",
        "modelAsString": true,
        "values": [
          {
            "value": "Automatic",
            "description": "The cluster will be automatically upgraded to the latest Service Fabric runtime version, **clusterUpgradeCadence** will determine when the upgrade starts after the new version becomes available."
          },
          {
            "value": "Manual",
            "description": "The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource."
          }
        ]
      }
    },
    "LoadBalancingRule": {
      "type": "object",
      "required": [
        "frontendPort",
        "backendPort",
        "protocol",
        "probeProtocol"
      ],
      "properties": {
        "frontendPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 1 and 65534.",
          "minimum": 1,
          "maximum": 65534
        },
        "backendPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.",
          "minimum": 1,
          "maximum": 65534
        },
        "protocol": {
          "type": "string",
          "description": "The reference to the transport protocol used by the load balancing rule.",
          "enum": [
            "tcp",
            "udp"
          ],
          "x-ms-enum": {
            "name": "protocol",
            "modelAsString": true
          }
        },
        "probePort": {
          "type": "integer",
          "format": "int32",
          "description": "The prob port used by the load balancing rule. Acceptable values are between 1 and 65535.",
          "minimum": 1,
          "maximum": 65534
        },
        "probeProtocol": {
          "type": "string",
          "description": "the reference to the load balancer probe used by the load balancing rule.",
          "enum": [
            "tcp",
            "http",
            "https"
          ],
          "x-ms-enum": {
            "name": "probeProtocol",
            "modelAsString": true
          }
        },
        "probeRequestPath": {
          "type": "string",
          "description": "The probe request path. Only supported for HTTP/HTTPS probes."
        },
        "loadDistribution": {
          "type": "string",
          "description": "The load distribution policy for this rule."
        }
      },
      "description": "Describes a load balancing rule."
    },
    "LongRunningOperationResult": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation."
        },
        "startTime": {
          "type": "string",
          "description": "The start time of the operation.",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "description": "The end time of the operation.",
          "format": "date-time"
        },
        "percentComplete": {
          "type": "number",
          "format": "double",
          "description": "The completion percentage of the operation."
        },
        "status": {
          "type": "string",
          "description": "The status of the operation."
        },
        "error": {
          "description": "The operation error.",
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "The error code."
            },
            "message": {
              "type": "string",
              "description": "The error message."
            }
          }
        }
      },
      "description": "Long running operation result."
    },
    "ManagedCluster": {
      "type": "object",
      "required": [
        "sku"
      ],
      "description": "The managed cluster resource\n",
      "properties": {
        "id": {
          "type": "string",
          "description": "Azure resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Azure resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Azure resource type.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "Azure resource location.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Azure resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "etag": {
          "type": "string",
          "description": "Azure resource etag.",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)."
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The managed cluster resource properties",
          "type": "object",
          "required": [
            "dnsName",
            "adminUserName"
          ],
          "properties": {
            "dnsName": {
              "type": "string",
              "description": "The cluster dns name."
            },
            "fqdn": {
              "type": "string",
              "description": "The fully qualified domain name associated with the public load balancer of the cluster.",
              "readOnly": true
            },
            "ipv4Address": {
              "type": "string",
              "description": "The IPv4 address associated with the public load balancer of the cluster.",
              "readOnly": true
            },
            "clusterId": {
              "type": "string",
              "description": "A service generated unique identifier for the cluster resource.",
              "readOnly": true
            },
            "clusterState": {
              "readOnly": true,
              "description": "The current state of the cluster.",
              "type": "string",
              "enum": [
                "WaitingForNodes",
                "Deploying",
                "BaselineUpgrade",
                "Upgrading",
                "UpgradeFailed",
                "Ready"
              ],
              "x-ms-enum": {
                "name": "ClusterState",
                "modelAsString": true,
                "values": [
                  {
                    "value": "WaitingForNodes",
                    "description": "Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it."
                  },
                  {
                    "value": "Deploying",
                    "description": "Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up."
                  },
                  {
                    "value": "BaselineUpgrade",
                    "description": "Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time."
                  },
                  {
                    "value": "Upgrading",
                    "description": "Indicates that the cluster is being upgraded with the user provided configuration."
                  },
                  {
                    "value": "UpgradeFailed",
                    "description": "Indicates that the last upgrade for the cluster has failed."
                  },
                  {
                    "value": "Ready",
                    "description": "Indicates that the cluster is in a stable state."
                  }
                ]
              }
            },
            "clusterCertificateThumbprints": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of thumbprints of the cluster certificates.",
              "readOnly": true
            },
            "clientConnectionPort": {
              "type": "integer",
              "format": "int32",
              "description": "The port used for client connections to the cluster.",
              "default": 19000
            },
            "httpGatewayConnectionPort": {
              "type": "integer",
              "format": "int32",
              "description": "The port used for HTTP connections to the cluster.",
              "default": 19080
            },
            "adminUserName": {
              "type": "string",
              "description": "VM admin user name."
            },
            "adminPassword": {
              "type": "string",
              "x-ms-secret": true,
              "format": "password",
              "description": "VM admin user password."
            },
            "loadBalancingRules": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "frontendPort",
                  "backendPort",
                  "protocol",
                  "probeProtocol"
                ],
                "properties": {
                  "frontendPort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 1 and 65534.",
                    "minimum": 1,
                    "maximum": 65534
                  },
                  "backendPort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.",
                    "minimum": 1,
                    "maximum": 65534
                  },
                  "protocol": {
                    "type": "string",
                    "description": "The reference to the transport protocol used by the load balancing rule.",
                    "enum": [
                      "tcp",
                      "udp"
                    ],
                    "x-ms-enum": {
                      "name": "protocol",
                      "modelAsString": true
                    }
                  },
                  "probePort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The prob port used by the load balancing rule. Acceptable values are between 1 and 65535.",
                    "minimum": 1,
                    "maximum": 65534
                  },
                  "probeProtocol": {
                    "type": "string",
                    "description": "the reference to the load balancer probe used by the load balancing rule.",
                    "enum": [
                      "tcp",
                      "http",
                      "https"
                    ],
                    "x-ms-enum": {
                      "name": "probeProtocol",
                      "modelAsString": true
                    }
                  },
                  "probeRequestPath": {
                    "type": "string",
                    "description": "The probe request path. Only supported for HTTP/HTTPS probes."
                  },
                  "loadDistribution": {
                    "type": "string",
                    "description": "The load distribution policy for this rule."
                  }
                },
                "description": "Describes a load balancing rule."
              },
              "x-ms-identifiers": [],
              "description": "Load balancing rules that are applied to the public load balancer of the cluster."
            },
            "allowRdpAccess": {
              "type": "boolean",
              "description": "Setting this to true enables RDP access to the VM. The default NSG rule opens RDP port to Internet which can be overridden with custom Network Security Rules. The default value for this setting is false."
            },
            "networkSecurityRules": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "name",
                  "protocol",
                  "access",
                  "priority",
                  "direction"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Network security rule name."
                  },
                  "description": {
                    "type": "string",
                    "description": "Network security rule description."
                  },
                  "protocol": {
                    "type": "string",
                    "description": "Network protocol this rule applies to.",
                    "enum": [
                      "http",
                      "https",
                      "tcp",
                      "udp",
                      "icmp",
                      "ah",
                      "esp"
                    ],
                    "x-ms-enum": {
                      "name": "nsgProtocol",
                      "modelAsString": true
                    }
                  },
                  "sourceAddressPrefixes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The CIDR or source IP ranges."
                  },
                  "destinationAddressPrefixes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The destination address prefixes. CIDR or destination IP ranges."
                  },
                  "sourcePortRanges": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The source port ranges."
                  },
                  "destinationPortRanges": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The destination port ranges."
                  },
                  "sourceAddressPrefix": {
                    "type": "string",
                    "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from."
                  },
                  "destinationAddressPrefix": {
                    "type": "string",
                    "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."
                  },
                  "sourcePortRange": {
                    "type": "string",
                    "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                  },
                  "destinationPortRange": {
                    "type": "string",
                    "description": "he destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                  },
                  "access": {
                    "type": "string",
                    "description": "The network traffic is allowed or denied.",
                    "enum": [
                      "allow",
                      "deny"
                    ],
                    "x-ms-enum": {
                      "name": "access",
                      "modelAsString": true
                    }
                  },
                  "priority": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The priority of the rule. The value can be in the range 1000 to 3000. Values outside this range are reserved for Service Fabric ManagerCluster Resource Provider. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                    "minimum": 1000,
                    "maximum": 3000
                  },
                  "direction": {
                    "type": "string",
                    "description": "Network security rule direction.",
                    "enum": [
                      "inbound",
                      "outbound"
                    ],
                    "x-ms-enum": {
                      "name": "direction",
                      "modelAsString": true
                    }
                  }
                },
                "description": "Describes a network security rule."
              },
              "x-ms-identifiers": [],
              "description": "Custom Network Security Rules that are applied to the Virtual Network of the cluster."
            },
            "clients": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "isAdmin"
                ],
                "properties": {
                  "isAdmin": {
                    "type": "boolean",
                    "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                  },
                  "thumbprint": {
                    "type": "string",
                    "description": "Certificate thumbprint."
                  },
                  "commonName": {
                    "type": "string",
                    "description": "Certificate common name."
                  },
                  "issuerThumbprint": {
                    "type": "string",
                    "description": "Issuer thumbprint for the certificate. Only used together with CommonName."
                  }
                },
                "description": "Client certificate definition."
              },
              "x-ms-identifiers": [],
              "description": "Client certificates that are allowed to manage the cluster."
            },
            "azureActiveDirectory": {
              "description": "The AAD authentication settings of the cluster.",
              "type": "object",
              "properties": {
                "tenantId": {
                  "type": "string",
                  "description": "Azure active directory tenant id."
                },
                "clusterApplication": {
                  "type": "string",
                  "description": "Azure active directory cluster application id."
                },
                "clientApplication": {
                  "type": "string",
                  "description": "Azure active directory client application id."
                }
              }
            },
            "fabricSettings": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "name",
                  "parameters"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The section name of the fabric settings."
                  },
                  "parameters": {
                    "type": "array",
                    "description": "The collection of parameters in the section.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "value"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The parameter name of fabric setting."
                        },
                        "value": {
                          "type": "string",
                          "description": "The parameter value of fabric setting."
                        }
                      },
                      "description": "Describes a parameter in fabric settings of the cluster."
                    },
                    "x-ms-identifiers": [
                      "name"
                    ]
                  }
                },
                "description": "Describes a section in the fabric settings of the cluster."
              },
              "x-ms-identifiers": [],
              "description": "The list of custom fabric settings to configure the cluster."
            },
            "provisioningState": {
              "readOnly": true,
              "description": "The provisioning state of the managed cluster resource.",
              "type": "string",
              "enum": [
                "None",
                "Creating",
                "Created",
                "Updating",
                "Succeeded",
                "Failed",
                "Canceled",
                "Deleting",
                "Deleted",
                "Other"
              ],
              "x-ms-enum": {
                "name": "ManagedResourceProvisioningState",
                "modelAsString": true
              }
            },
            "clusterCodeVersion": {
              "type": "string",
              "description": "The Service Fabric runtime version of the cluster. This property is required when **clusterUpgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**."
            },
            "clusterUpgradeMode": {
              "type": "string",
              "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.\n",
              "enum": [
                "Automatic",
                "Manual"
              ],
              "default": "Automatic",
              "x-ms-enum": {
                "name": "ClusterUpgradeMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Automatic",
                    "description": "The cluster will be automatically upgraded to the latest Service Fabric runtime version, **clusterUpgradeCadence** will determine when the upgrade starts after the new version becomes available."
                  },
                  {
                    "value": "Manual",
                    "description": "The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource."
                  }
                ]
              }
            },
            "clusterUpgradeCadence": {
              "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **clusterUpgradeMode** is set to 'Automatic'.",
              "type": "string",
              "enum": [
                "Wave0",
                "Wave1",
                "Wave2"
              ],
              "x-ms-enum": {
                "name": "clusterUpgradeCadence",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Wave0",
                    "description": "Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters."
                  },
                  {
                    "value": "Wave1",
                    "description": "Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters."
                  },
                  {
                    "value": "Wave2",
                    "description": "Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters."
                  }
                ]
              }
            },
            "addonFeatures": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Available cluster add-on features",
                "enum": [
                  "DnsService",
                  "BackupRestoreService",
                  "ResourceMonitorService"
                ],
                "x-ms-enum": {
                  "name": "ManagedClusterAddOnFeature",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "DnsService",
                      "description": "Dns service"
                    },
                    {
                      "value": "BackupRestoreService",
                      "description": "Backup and restore service"
                    },
                    {
                      "value": "ResourceMonitorService",
                      "description": "Resource monitor service"
                    }
                  ]
                }
              },
              "description": "List of add-on features to enable on the cluster."
            },
            "enableAutoOSUpgrade": {
              "type": "boolean",
              "description": "Setting this to true enables automatic OS upgrade for the node types that are created using any platform OS image with version 'latest'. The default value for this setting is false."
            },
            "zonalResiliency": {
              "type": "boolean",
              "description": "Indicates if the cluster has zone resiliency.",
              "default": false
            },
            "applicationTypeVersionsCleanupPolicy": {
              "description": "The policy used to clean up unused versions.",
              "type": "object",
              "required": [
                "maxUnusedVersionsToKeep"
              ],
              "properties": {
                "maxUnusedVersionsToKeep": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "description": "Number of unused versions per application type to keep."
                }
              }
            },
            "enableIpv6": {
              "type": "boolean",
              "description": "Setting this to true creates IPv6 address space for the default VNet used by the cluster. This setting cannot be changed once the cluster is created. The default value for this setting is false."
            },
            "subnetId": {
              "type": "string",
              "description": "If specified, the node types for the cluster are created in this subnet instead of the default VNet. The **networkSecurityRules** specified for the cluster are also applied to this subnet. This setting cannot be changed once the cluster is created."
            },
            "ipTags": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "ipTagType",
                  "tag"
                ],
                "properties": {
                  "ipTagType": {
                    "type": "string",
                    "description": "IP tag type. Example: FirstPartyUsage."
                  },
                  "tag": {
                    "type": "string",
                    "description": "IP tag associated with the public IP. Example: SQL, Storage etc."
                  }
                },
                "description": "The IP tag associated with the public IP address."
              },
              "x-ms-identifiers": [],
              "description": "The list of IP tags associated with the default public IP address of the cluster."
            },
            "ipv6Address": {
              "type": "string",
              "description": "IPv6 address for the cluster if IPv6 is enabled.",
              "readOnly": true
            },
            "enableServicePublicIP": {
              "type": "boolean",
              "description": "Setting this to true will link the IPv4 address as the ServicePublicIP of the IPv6 address. It can only be set to True if IPv6 is enabled on the cluster."
            },
            "auxiliarySubnets": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Subnet name."
                  },
                  "enableIpv6": {
                    "type": "boolean",
                    "description": "Indicates wether to enable Ipv6 or not. If not provided, it will take the same configuration as the cluster."
                  },
                  "privateEndpointNetworkPolicies": {
                    "type": "string",
                    "description": "Enable or Disable apply network policies on private end point in the subnet.",
                    "enum": [
                      "enabled",
                      "disabled"
                    ],
                    "x-ms-enum": {
                      "name": "privateEndpointNetworkPolicies",
                      "modelAsString": true
                    }
                  },
                  "privateLinkServiceNetworkPolicies": {
                    "type": "string",
                    "description": "Enable or Disable apply network policies on private link service in the subnet.",
                    "enum": [
                      "enabled",
                      "disabled"
                    ],
                    "x-ms-enum": {
                      "name": "privateLinkServiceNetworkPolicies",
                      "modelAsString": true
                    }
                  },
                  "networkSecurityGroupId": {
                    "type": "string",
                    "description": "Full resource id for the network security group."
                  }
                },
                "description": "Describes a Subnet."
              },
              "x-ms-identifiers": [],
              "description": "Auxiliary subnets for the cluster."
            },
            "serviceEndpoints": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "service"
                ],
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "The type of the endpoint service."
                  },
                  "locations": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of locations."
                  }
                },
                "description": "The service endpoint properties."
              },
              "x-ms-identifiers": [],
              "description": "Service endpoints for subnets in the cluster."
            },
            "zonalUpdateMode": {
              "description": "Indicates the update mode for Cross Az clusters.",
              "type": "string",
              "enum": [
                "Standard",
                "Fast"
              ],
              "x-ms-enum": {
                "name": "ZonalUpdateMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Standard",
                    "description": "The cluster will use 5 upgrade domains for Cross Az Node types."
                  },
                  {
                    "value": "Fast",
                    "description": "The cluster will use a maximum of 3 upgrade domains per zone instead of 5 for Cross Az Node types for faster deployments."
                  }
                ]
              }
            },
            "useCustomVnet": {
              "type": "boolean",
              "description": "For new clusters, this parameter indicates that it uses Bring your own VNet, but the subnet is specified at node type level; and for such clusters, the subnetId property is required for node types."
            },
            "publicIPPrefixId": {
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Network/publicIPPrefixes"
                  }
                ]
              },
              "description": "Specify the resource id of a public IPv4 prefix that the load balancer will allocate a public IPv4 address from. This setting cannot be changed once the cluster is created."
            },
            "publicIPv6PrefixId": {
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Network/publicIPPrefixes"
                  }
                ]
              },
              "description": "Specify the resource id of a public IPv6 prefix that the load balancer will allocate a public IPv6 address from. This setting cannot be changed once the cluster is created."
            },
            "ddosProtectionPlanId": {
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Network/ddosProtectionPlans"
                  }
                ]
              },
              "description": "Specify the resource id of a DDoS network protection plan that will be associated with the virtual network of the cluster."
            },
            "upgradeDescription": {
              "description": "The policy to use when upgrading the cluster.",
              "type": "object",
              "properties": {
                "forceRestart": {
                  "type": "boolean",
                  "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data)."
                },
                "healthPolicy": {
                  "description": "The cluster health policy defines a health policy used to evaluate the health of the cluster during a cluster upgrade.",
                  "type": "object",
                  "required": [
                    "maxPercentUnhealthyNodes",
                    "maxPercentUnhealthyApplications"
                  ],
                  "properties": {
                    "maxPercentUnhealthyNodes": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.\n",
                      "default": 0,
                      "minimum": 0,
                      "maximum": 100
                    },
                    "maxPercentUnhealthyApplications": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.\nThe computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.\n",
                      "default": 0,
                      "minimum": 0,
                      "maximum": 100
                    }
                  }
                },
                "deltaHealthPolicy": {
                  "description": "The cluster delta health policy defines a health policy used to evaluate the health of the cluster during a cluster upgrade.",
                  "type": "object",
                  "required": [
                    "maxPercentDeltaUnhealthyNodes"
                  ],
                  "properties": {
                    "maxPercentDeltaUnhealthyNodes": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                      "minimum": 0,
                      "maximum": 100
                    },
                    "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.\n",
                      "minimum": 0,
                      "maximum": 100
                    },
                    "maxPercentDeltaUnhealthyApplications": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.\nNOTE: This value will overwrite the value specified in properties.UpgradeDescription.HealthPolicy.MaxPercentUnhealthyApplications\n",
                      "minimum": 0,
                      "maximum": 100
                    }
                  }
                },
                "monitoringPolicy": {
                  "description": "The cluster monitoring policy describes the parameters for monitoring an upgrade in Monitored mode.",
                  "type": "object",
                  "required": [
                    "healthCheckWaitDuration",
                    "healthCheckStableDuration",
                    "healthCheckRetryTimeout",
                    "upgradeTimeout",
                    "upgradeDomainTimeout"
                  ],
                  "properties": {
                    "healthCheckWaitDuration": {
                      "type": "string",
                      "x-ms-format": "duration-constant",
                      "description": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                    },
                    "healthCheckStableDuration": {
                      "type": "string",
                      "x-ms-format": "duration-constant",
                      "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                    },
                    "healthCheckRetryTimeout": {
                      "type": "string",
                      "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                    },
                    "upgradeTimeout": {
                      "type": "string",
                      "description": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                    },
                    "upgradeDomainTimeout": {
                      "type": "string",
                      "description": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                    }
                  }
                },
                "upgradeReplicaSetCheckTimeout": {
                  "type": "string",
                  "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues.\nWhen this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues.\nThe timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.\nThis value must be between 00:00:00 and 49710.06:28:15 (unsigned 32 bit integer for seconds)\n"
                }
              }
            },
            "httpGatewayTokenAuthConnectionPort": {
              "type": "integer",
              "format": "int32",
              "description": "The port used for token-auth based HTTPS connections to the cluster. Cannot be set to the same port as HttpGatewayEndpoint."
            },
            "enableHttpGatewayExclusiveAuthMode": {
              "type": "boolean",
              "description": "If true, token-based authentication is not allowed on the HttpGatewayEndpoint. This is required to support TLS versions 1.3 and above. If token-based authentication is used, HttpGatewayTokenAuthConnectionPort must be defined."
            }
          }
        },
        "sku": {
          "description": "The sku of the managed cluster",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Sku Name.",
              "type": "string",
              "enum": [
                "Basic",
                "Standard"
              ],
              "x-ms-enum": {
                "name": "SkuName",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Basic",
                    "description": "Basic requires a minimum of 3 nodes and allows only 1 node type."
                  },
                  {
                    "value": "Standard",
                    "description": "Requires a minimum of 5 nodes and allows 1 or more node type."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "ManagedClusterCodeVersionListResult": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The identification of the result"
          },
          "name": {
            "type": "string",
            "description": "The name of the result"
          },
          "type": {
            "type": "string",
            "description": "The result resource type"
          },
          "properties": {
            "x-ms-client-flatten": true,
            "type": "object",
            "properties": {
              "clusterCodeVersion": {
                "type": "string",
                "description": "The Service Fabric runtime version of the cluster."
              },
              "supportExpiryUtc": {
                "type": "string",
                "description": "The date of expiry of support of the version."
              },
              "osType": {
                "type": "string",
                "description": "Cluster operating system, the default will be Windows",
                "enum": [
                  "Windows"
                ],
                "x-ms-enum": {
                  "name": "OsType",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "Windows",
                      "description": "Indicates os is Windows."
                    }
                  ]
                }
              }
            },
            "description": "The detail of the Service Fabric runtime version result"
          }
        },
        "description": "The result of the Service Fabric runtime versions"
      },
      "description": "The list results of the Service Fabric runtime versions."
    },
    "ManagedClusterCodeVersionResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identification of the result"
        },
        "name": {
          "type": "string",
          "description": "The name of the result"
        },
        "type": {
          "type": "string",
          "description": "The result resource type"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "clusterCodeVersion": {
              "type": "string",
              "description": "The Service Fabric runtime version of the cluster."
            },
            "supportExpiryUtc": {
              "type": "string",
              "description": "The date of expiry of support of the version."
            },
            "osType": {
              "type": "string",
              "description": "Cluster operating system, the default will be Windows",
              "enum": [
                "Windows"
              ],
              "x-ms-enum": {
                "name": "OsType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Windows",
                    "description": "Indicates os is Windows."
                  }
                ]
              }
            }
          },
          "description": "The detail of the Service Fabric runtime version result"
        }
      },
      "description": "The result of the Service Fabric runtime versions"
    },
    "ManagedClusterListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "sku"
            ],
            "description": "The managed cluster resource\n",
            "properties": {
              "id": {
                "type": "string",
                "description": "Azure resource identifier.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "Azure resource name.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "Azure resource type.",
                "readOnly": true
              },
              "location": {
                "type": "string",
                "description": "Azure resource location.",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "tags": {
                "type": "object",
                "description": "Azure resource tags.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "etag": {
                "type": "string",
                "description": "Azure resource etag.",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource."
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)."
                  }
                }
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The managed cluster resource properties",
                "type": "object",
                "required": [
                  "dnsName",
                  "adminUserName"
                ],
                "properties": {
                  "dnsName": {
                    "type": "string",
                    "description": "The cluster dns name."
                  },
                  "fqdn": {
                    "type": "string",
                    "description": "The fully qualified domain name associated with the public load balancer of the cluster.",
                    "readOnly": true
                  },
                  "ipv4Address": {
                    "type": "string",
                    "description": "The IPv4 address associated with the public load balancer of the cluster.",
                    "readOnly": true
                  },
                  "clusterId": {
                    "type": "string",
                    "description": "A service generated unique identifier for the cluster resource.",
                    "readOnly": true
                  },
                  "clusterState": {
                    "readOnly": true,
                    "description": "The current state of the cluster.",
                    "type": "string",
                    "enum": [
                      "WaitingForNodes",
                      "Deploying",
                      "BaselineUpgrade",
                      "Upgrading",
                      "UpgradeFailed",
                      "Ready"
                    ],
                    "x-ms-enum": {
                      "name": "ClusterState",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "WaitingForNodes",
                          "description": "Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it."
                        },
                        {
                          "value": "Deploying",
                          "description": "Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up."
                        },
                        {
                          "value": "BaselineUpgrade",
                          "description": "Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time."
                        },
                        {
                          "value": "Upgrading",
                          "description": "Indicates that the cluster is being upgraded with the user provided configuration."
                        },
                        {
                          "value": "UpgradeFailed",
                          "description": "Indicates that the last upgrade for the cluster has failed."
                        },
                        {
                          "value": "Ready",
                          "description": "Indicates that the cluster is in a stable state."
                        }
                      ]
                    }
                  },
                  "clusterCertificateThumbprints": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of thumbprints of the cluster certificates.",
                    "readOnly": true
                  },
                  "clientConnectionPort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The port used for client connections to the cluster.",
                    "default": 19000
                  },
                  "httpGatewayConnectionPort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The port used for HTTP connections to the cluster.",
                    "default": 19080
                  },
                  "adminUserName": {
                    "type": "string",
                    "description": "VM admin user name."
                  },
                  "adminPassword": {
                    "type": "string",
                    "x-ms-secret": true,
                    "format": "password",
                    "description": "VM admin user password."
                  },
                  "loadBalancingRules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "frontendPort",
                        "backendPort",
                        "protocol",
                        "probeProtocol"
                      ],
                      "properties": {
                        "frontendPort": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 1 and 65534.",
                          "minimum": 1,
                          "maximum": 65534
                        },
                        "backendPort": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.",
                          "minimum": 1,
                          "maximum": 65534
                        },
                        "protocol": {
                          "type": "string",
                          "description": "The reference to the transport protocol used by the load balancing rule.",
                          "enum": [
                            "tcp",
                            "udp"
                          ],
                          "x-ms-enum": {
                            "name": "protocol",
                            "modelAsString": true
                          }
                        },
                        "probePort": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The prob port used by the load balancing rule. Acceptable values are between 1 and 65535.",
                          "minimum": 1,
                          "maximum": 65534
                        },
                        "probeProtocol": {
                          "type": "string",
                          "description": "the reference to the load balancer probe used by the load balancing rule.",
                          "enum": [
                            "tcp",
                            "http",
                            "https"
                          ],
                          "x-ms-enum": {
                            "name": "probeProtocol",
                            "modelAsString": true
                          }
                        },
                        "probeRequestPath": {
                          "type": "string",
                          "description": "The probe request path. Only supported for HTTP/HTTPS probes."
                        },
                        "loadDistribution": {
                          "type": "string",
                          "description": "The load distribution policy for this rule."
                        }
                      },
                      "description": "Describes a load balancing rule."
                    },
                    "x-ms-identifiers": [],
                    "description": "Load balancing rules that are applied to the public load balancer of the cluster."
                  },
                  "allowRdpAccess": {
                    "type": "boolean",
                    "description": "Setting this to true enables RDP access to the VM. The default NSG rule opens RDP port to Internet which can be overridden with custom Network Security Rules. The default value for this setting is false."
                  },
                  "networkSecurityRules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "protocol",
                        "access",
                        "priority",
                        "direction"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Network security rule name."
                        },
                        "description": {
                          "type": "string",
                          "description": "Network security rule description."
                        },
                        "protocol": {
                          "type": "string",
                          "description": "Network protocol this rule applies to.",
                          "enum": [
                            "http",
                            "https",
                            "tcp",
                            "udp",
                            "icmp",
                            "ah",
                            "esp"
                          ],
                          "x-ms-enum": {
                            "name": "nsgProtocol",
                            "modelAsString": true
                          }
                        },
                        "sourceAddressPrefixes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The CIDR or source IP ranges."
                        },
                        "destinationAddressPrefixes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The destination address prefixes. CIDR or destination IP ranges."
                        },
                        "sourcePortRanges": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The source port ranges."
                        },
                        "destinationPortRanges": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The destination port ranges."
                        },
                        "sourceAddressPrefix": {
                          "type": "string",
                          "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from."
                        },
                        "destinationAddressPrefix": {
                          "type": "string",
                          "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."
                        },
                        "sourcePortRange": {
                          "type": "string",
                          "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                        },
                        "destinationPortRange": {
                          "type": "string",
                          "description": "he destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                        },
                        "access": {
                          "type": "string",
                          "description": "The network traffic is allowed or denied.",
                          "enum": [
                            "allow",
                            "deny"
                          ],
                          "x-ms-enum": {
                            "name": "access",
                            "modelAsString": true
                          }
                        },
                        "priority": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The priority of the rule. The value can be in the range 1000 to 3000. Values outside this range are reserved for Service Fabric ManagerCluster Resource Provider. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                          "minimum": 1000,
                          "maximum": 3000
                        },
                        "direction": {
                          "type": "string",
                          "description": "Network security rule direction.",
                          "enum": [
                            "inbound",
                            "outbound"
                          ],
                          "x-ms-enum": {
                            "name": "direction",
                            "modelAsString": true
                          }
                        }
                      },
                      "description": "Describes a network security rule."
                    },
                    "x-ms-identifiers": [],
                    "description": "Custom Network Security Rules that are applied to the Virtual Network of the cluster."
                  },
                  "clients": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "isAdmin"
                      ],
                      "properties": {
                        "isAdmin": {
                          "type": "boolean",
                          "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
                        },
                        "thumbprint": {
                          "type": "string",
                          "description": "Certificate thumbprint."
                        },
                        "commonName": {
                          "type": "string",
                          "description": "Certificate common name."
                        },
                        "issuerThumbprint": {
                          "type": "string",
                          "description": "Issuer thumbprint for the certificate. Only used together with CommonName."
                        }
                      },
                      "description": "Client certificate definition."
                    },
                    "x-ms-identifiers": [],
                    "description": "Client certificates that are allowed to manage the cluster."
                  },
                  "azureActiveDirectory": {
                    "description": "The AAD authentication settings of the cluster.",
                    "type": "object",
                    "properties": {
                      "tenantId": {
                        "type": "string",
                        "description": "Azure active directory tenant id."
                      },
                      "clusterApplication": {
                        "type": "string",
                        "description": "Azure active directory cluster application id."
                      },
                      "clientApplication": {
                        "type": "string",
                        "description": "Azure active directory client application id."
                      }
                    }
                  },
                  "fabricSettings": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "parameters"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The section name of the fabric settings."
                        },
                        "parameters": {
                          "type": "array",
                          "description": "The collection of parameters in the section.",
                          "items": {
                            "type": "object",
                            "required": [
                              "name",
                              "value"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The parameter name of fabric setting."
                              },
                              "value": {
                                "type": "string",
                                "description": "The parameter value of fabric setting."
                              }
                            },
                            "description": "Describes a parameter in fabric settings of the cluster."
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        }
                      },
                      "description": "Describes a section in the fabric settings of the cluster."
                    },
                    "x-ms-identifiers": [],
                    "description": "The list of custom fabric settings to configure the cluster."
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "description": "The provisioning state of the managed cluster resource.",
                    "type": "string",
                    "enum": [
                      "None",
                      "Creating",
                      "Created",
                      "Updating",
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Deleting",
                      "Deleted",
                      "Other"
                    ],
                    "x-ms-enum": {
                      "name": "ManagedResourceProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "clusterCodeVersion": {
                    "type": "string",
                    "description": "The Service Fabric runtime version of the cluster. This property is required when **clusterUpgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**."
                  },
                  "clusterUpgradeMode": {
                    "type": "string",
                    "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.\n",
                    "enum": [
                      "Automatic",
                      "Manual"
                    ],
                    "default": "Automatic",
                    "x-ms-enum": {
                      "name": "ClusterUpgradeMode",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Automatic",
                          "description": "The cluster will be automatically upgraded to the latest Service Fabric runtime version, **clusterUpgradeCadence** will determine when the upgrade starts after the new version becomes available."
                        },
                        {
                          "value": "Manual",
                          "description": "The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource."
                        }
                      ]
                    }
                  },
                  "clusterUpgradeCadence": {
                    "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **clusterUpgradeMode** is set to 'Automatic'.",
                    "type": "string",
                    "enum": [
                      "Wave0",
                      "Wave1",
                      "Wave2"
                    ],
                    "x-ms-enum": {
                      "name": "clusterUpgradeCadence",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Wave0",
                          "description": "Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters."
                        },
                        {
                          "value": "Wave1",
                          "description": "Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters."
                        },
                        {
                          "value": "Wave2",
                          "description": "Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters."
                        }
                      ]
                    }
                  },
                  "addonFeatures": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Available cluster add-on features",
                      "enum": [
                        "DnsService",
                        "BackupRestoreService",
                        "ResourceMonitorService"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedClusterAddOnFeature",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "DnsService",
                            "description": "Dns service"
                          },
                          {
                            "value": "BackupRestoreService",
                            "description": "Backup and restore service"
                          },
                          {
                            "value": "ResourceMonitorService",
                            "description": "Resource monitor service"
                          }
                        ]
                      }
                    },
                    "description": "List of add-on features to enable on the cluster."
                  },
                  "enableAutoOSUpgrade": {
                    "type": "boolean",
                    "description": "Setting this to true enables automatic OS upgrade for the node types that are created using any platform OS image with version 'latest'. The default value for this setting is false."
                  },
                  "zonalResiliency": {
                    "type": "boolean",
                    "description": "Indicates if the cluster has zone resiliency.",
                    "default": false
                  },
                  "applicationTypeVersionsCleanupPolicy": {
                    "description": "The policy used to clean up unused versions.",
                    "type": "object",
                    "required": [
                      "maxUnusedVersionsToKeep"
                    ],
                    "properties": {
                      "maxUnusedVersionsToKeep": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "description": "Number of unused versions per application type to keep."
                      }
                    }
                  },
                  "enableIpv6": {
                    "type": "boolean",
                    "description": "Setting this to true creates IPv6 address space for the default VNet used by the cluster. This setting cannot be changed once the cluster is created. The default value for this setting is false."
                  },
                  "subnetId": {
                    "type": "string",
                    "description": "If specified, the node types for the cluster are created in this subnet instead of the default VNet. The **networkSecurityRules** specified for the cluster are also applied to this subnet. This setting cannot be changed once the cluster is created."
                  },
                  "ipTags": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "ipTagType",
                        "tag"
                      ],
                      "properties": {
                        "ipTagType": {
                          "type": "string",
                          "description": "IP tag type. Example: FirstPartyUsage."
                        },
                        "tag": {
                          "type": "string",
                          "description": "IP tag associated with the public IP. Example: SQL, Storage etc."
                        }
                      },
                      "description": "The IP tag associated with the public IP address."
                    },
                    "x-ms-identifiers": [],
                    "description": "The list of IP tags associated with the default public IP address of the cluster."
                  },
                  "ipv6Address": {
                    "type": "string",
                    "description": "IPv6 address for the cluster if IPv6 is enabled.",
                    "readOnly": true
                  },
                  "enableServicePublicIP": {
                    "type": "boolean",
                    "description": "Setting this to true will link the IPv4 address as the ServicePublicIP of the IPv6 address. It can only be set to True if IPv6 is enabled on the cluster."
                  },
                  "auxiliarySubnets": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Subnet name."
                        },
                        "enableIpv6": {
                          "type": "boolean",
                          "description": "Indicates wether to enable Ipv6 or not. If not provided, it will take the same configuration as the cluster."
                        },
                        "privateEndpointNetworkPolicies": {
                          "type": "string",
                          "description": "Enable or Disable apply network policies on private end point in the subnet.",
                          "enum": [
                            "enabled",
                            "disabled"
                          ],
                          "x-ms-enum": {
                            "name": "privateEndpointNetworkPolicies",
                            "modelAsString": true
                          }
                        },
                        "privateLinkServiceNetworkPolicies": {
                          "type": "string",
                          "description": "Enable or Disable apply network policies on private link service in the subnet.",
                          "enum": [
                            "enabled",
                            "disabled"
                          ],
                          "x-ms-enum": {
                            "name": "privateLinkServiceNetworkPolicies",
                            "modelAsString": true
                          }
                        },
                        "networkSecurityGroupId": {
                          "type": "string",
                          "description": "Full resource id for the network security group."
                        }
                      },
                      "description": "Describes a Subnet."
                    },
                    "x-ms-identifiers": [],
                    "description": "Auxiliary subnets for the cluster."
                  },
                  "serviceEndpoints": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "service"
                      ],
                      "properties": {
                        "service": {
                          "type": "string",
                          "description": "The type of the endpoint service."
                        },
                        "locations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "A list of locations."
                        }
                      },
                      "description": "The service endpoint properties."
                    },
                    "x-ms-identifiers": [],
                    "description": "Service endpoints for subnets in the cluster."
                  },
                  "zonalUpdateMode": {
                    "description": "Indicates the update mode for Cross Az clusters.",
                    "type": "string",
                    "enum": [
                      "Standard",
                      "Fast"
                    ],
                    "x-ms-enum": {
                      "name": "ZonalUpdateMode",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Standard",
                          "description": "The cluster will use 5 upgrade domains for Cross Az Node types."
                        },
                        {
                          "value": "Fast",
                          "description": "The cluster will use a maximum of 3 upgrade domains per zone instead of 5 for Cross Az Node types for faster deployments."
                        }
                      ]
                    }
                  },
                  "useCustomVnet": {
                    "type": "boolean",
                    "description": "For new clusters, this parameter indicates that it uses Bring your own VNet, but the subnet is specified at node type level; and for such clusters, the subnetId property is required for node types."
                  },
                  "publicIPPrefixId": {
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Network/publicIPPrefixes"
                        }
                      ]
                    },
                    "description": "Specify the resource id of a public IPv4 prefix that the load balancer will allocate a public IPv4 address from. This setting cannot be changed once the cluster is created."
                  },
                  "publicIPv6PrefixId": {
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Network/publicIPPrefixes"
                        }
                      ]
                    },
                    "description": "Specify the resource id of a public IPv6 prefix that the load balancer will allocate a public IPv6 address from. This setting cannot be changed once the cluster is created."
                  },
                  "ddosProtectionPlanId": {
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Network/ddosProtectionPlans"
                        }
                      ]
                    },
                    "description": "Specify the resource id of a DDoS network protection plan that will be associated with the virtual network of the cluster."
                  },
                  "upgradeDescription": {
                    "description": "The policy to use when upgrading the cluster.",
                    "type": "object",
                    "properties": {
                      "forceRestart": {
                        "type": "boolean",
                        "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data)."
                      },
                      "healthPolicy": {
                        "description": "The cluster health policy defines a health policy used to evaluate the health of the cluster during a cluster upgrade.",
                        "type": "object",
                        "required": [
                          "maxPercentUnhealthyNodes",
                          "maxPercentUnhealthyApplications"
                        ],
                        "properties": {
                          "maxPercentUnhealthyNodes": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.\n",
                            "default": 0,
                            "minimum": 0,
                            "maximum": 100
                          },
                          "maxPercentUnhealthyApplications": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.\nThe computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.\n",
                            "default": 0,
                            "minimum": 0,
                            "maximum": 100
                          }
                        }
                      },
                      "deltaHealthPolicy": {
                        "description": "The cluster delta health policy defines a health policy used to evaluate the health of the cluster during a cluster upgrade.",
                        "type": "object",
                        "required": [
                          "maxPercentDeltaUnhealthyNodes"
                        ],
                        "properties": {
                          "maxPercentDeltaUnhealthyNodes": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                            "minimum": 0,
                            "maximum": 100
                          },
                          "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.\n",
                            "minimum": 0,
                            "maximum": 100
                          },
                          "maxPercentDeltaUnhealthyApplications": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.\nNOTE: This value will overwrite the value specified in properties.UpgradeDescription.HealthPolicy.MaxPercentUnhealthyApplications\n",
                            "minimum": 0,
                            "maximum": 100
                          }
                        }
                      },
                      "monitoringPolicy": {
                        "description": "The cluster monitoring policy describes the parameters for monitoring an upgrade in Monitored mode.",
                        "type": "object",
                        "required": [
                          "healthCheckWaitDuration",
                          "healthCheckStableDuration",
                          "healthCheckRetryTimeout",
                          "upgradeTimeout",
                          "upgradeDomainTimeout"
                        ],
                        "properties": {
                          "healthCheckWaitDuration": {
                            "type": "string",
                            "x-ms-format": "duration-constant",
                            "description": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                          },
                          "healthCheckStableDuration": {
                            "type": "string",
                            "x-ms-format": "duration-constant",
                            "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                          },
                          "healthCheckRetryTimeout": {
                            "type": "string",
                            "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                          },
                          "upgradeTimeout": {
                            "type": "string",
                            "description": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                          },
                          "upgradeDomainTimeout": {
                            "type": "string",
                            "description": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                          }
                        }
                      },
                      "upgradeReplicaSetCheckTimeout": {
                        "type": "string",
                        "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues.\nWhen this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues.\nThe timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.\nThis value must be between 00:00:00 and 49710.06:28:15 (unsigned 32 bit integer for seconds)\n"
                      }
                    }
                  },
                  "httpGatewayTokenAuthConnectionPort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The port used for token-auth based HTTPS connections to the cluster. Cannot be set to the same port as HttpGatewayEndpoint."
                  },
                  "enableHttpGatewayExclusiveAuthMode": {
                    "type": "boolean",
                    "description": "If true, token-based authentication is not allowed on the HttpGatewayEndpoint. This is required to support TLS versions 1.3 and above. If token-based authentication is used, HttpGatewayTokenAuthConnectionPort must be defined."
                  }
                }
              },
              "sku": {
                "description": "The sku of the managed cluster",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Sku Name.",
                    "type": "string",
                    "enum": [
                      "Basic",
                      "Standard"
                    ],
                    "x-ms-enum": {
                      "name": "SkuName",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Basic",
                          "description": "Basic requires a minimum of 3 nodes and allows only 1 node type."
                        },
                        {
                          "value": "Standard",
                          "description": "Requires a minimum of 5 nodes and allows 1 or more node type."
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "Managed Cluster list results"
    },
    "ManagedClusterProperties": {
      "type": "object",
      "required": [
        "dnsName",
        "adminUserName"
      ],
      "properties": {
        "dnsName": {
          "type": "string",
          "description": "The cluster dns name."
        },
        "fqdn": {
          "type": "string",
          "description": "The fully qualified domain name associated with the public load balancer of the cluster.",
          "readOnly": true
        },
        "ipv4Address": {
          "type": "string",
          "description": "The IPv4 address associated with the public load balancer of the cluster.",
          "readOnly": true
        },
        "clusterId": {
          "type": "string",
          "description": "A service generated unique identifier for the cluster resource.",
          "readOnly": true
        },
        "clusterState": {
          "readOnly": true,
          "description": "The current state of the cluster.",
          "type": "string",
          "enum": [
            "WaitingForNodes",
            "Deploying",
            "BaselineUpgrade",
            "Upgrading",
            "UpgradeFailed",
            "Ready"
          ],
          "x-ms-enum": {
            "name": "ClusterState",
            "modelAsString": true,
            "values": [
              {
                "value": "WaitingForNodes",
                "description": "Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it."
              },
              {
                "value": "Deploying",
                "description": "Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up."
              },
              {
                "value": "BaselineUpgrade",
                "description": "Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time."
              },
              {
                "value": "Upgrading",
                "description": "Indicates that the cluster is being upgraded with the user provided configuration."
              },
              {
                "value": "UpgradeFailed",
                "description": "Indicates that the last upgrade for the cluster has failed."
              },
              {
                "value": "Ready",
                "description": "Indicates that the cluster is in a stable state."
              }
            ]
          }
        },
        "clusterCertificateThumbprints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of thumbprints of the cluster certificates.",
          "readOnly": true
        },
        "clientConnectionPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port used for client connections to the cluster.",
          "default": 19000
        },
        "httpGatewayConnectionPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port used for HTTP connections to the cluster.",
          "default": 19080
        },
        "adminUserName": {
          "type": "string",
          "description": "VM admin user name."
        },
        "adminPassword": {
          "type": "string",
          "x-ms-secret": true,
          "format": "password",
          "description": "VM admin user password."
        },
        "loadBalancingRules": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "frontendPort",
              "backendPort",
              "protocol",
              "probeProtocol"
            ],
            "properties": {
              "frontendPort": {
                "type": "integer",
                "format": "int32",
                "description": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 1 and 65534.",
                "minimum": 1,
                "maximum": 65534
              },
              "backendPort": {
                "type": "integer",
                "format": "int32",
                "description": "The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.",
                "minimum": 1,
                "maximum": 65534
              },
              "protocol": {
                "type": "string",
                "description": "The reference to the transport protocol used by the load balancing rule.",
                "enum": [
                  "tcp",
                  "udp"
                ],
                "x-ms-enum": {
                  "name": "protocol",
                  "modelAsString": true
                }
              },
              "probePort": {
                "type": "integer",
                "format": "int32",
                "description": "The prob port used by the load balancing rule. Acceptable values are between 1 and 65535.",
                "minimum": 1,
                "maximum": 65534
              },
              "probeProtocol": {
                "type": "string",
                "description": "the reference to the load balancer probe used by the load balancing rule.",
                "enum": [
                  "tcp",
                  "http",
                  "https"
                ],
                "x-ms-enum": {
                  "name": "probeProtocol",
                  "modelAsString": true
                }
              },
              "probeRequestPath": {
                "type": "string",
                "description": "The probe request path. Only supported for HTTP/HTTPS probes."
              },
              "loadDistribution": {
                "type": "string",
                "description": "The load distribution policy for this rule."
              }
            },
            "description": "Describes a load balancing rule."
          },
          "x-ms-identifiers": [],
          "description": "Load balancing rules that are applied to the public load balancer of the cluster."
        },
        "allowRdpAccess": {
          "type": "boolean",
          "description": "Setting this to true enables RDP access to the VM. The default NSG rule opens RDP port to Internet which can be overridden with custom Network Security Rules. The default value for this setting is false."
        },
        "networkSecurityRules": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name",
              "protocol",
              "access",
              "priority",
              "direction"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "Network security rule name."
              },
              "description": {
                "type": "string",
                "description": "Network security rule description."
              },
              "protocol": {
                "type": "string",
                "description": "Network protocol this rule applies to.",
                "enum": [
                  "http",
                  "https",
                  "tcp",
                  "udp",
                  "icmp",
                  "ah",
                  "esp"
                ],
                "x-ms-enum": {
                  "name": "nsgProtocol",
                  "modelAsString": true
                }
              },
              "sourceAddressPrefixes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The CIDR or source IP ranges."
              },
              "destinationAddressPrefixes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The destination address prefixes. CIDR or destination IP ranges."
              },
              "sourcePortRanges": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The source port ranges."
              },
              "destinationPortRanges": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The destination port ranges."
              },
              "sourceAddressPrefix": {
                "type": "string",
                "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from."
              },
              "destinationAddressPrefix": {
                "type": "string",
                "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."
              },
              "sourcePortRange": {
                "type": "string",
                "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
              },
              "destinationPortRange": {
                "type": "string",
                "description": "he destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
              },
              "access": {
                "type": "string",
                "description": "The network traffic is allowed or denied.",
                "enum": [
                  "allow",
                  "deny"
                ],
                "x-ms-enum": {
                  "name": "access",
                  "modelAsString": true
                }
              },
              "priority": {
                "type": "integer",
                "format": "int32",
                "description": "The priority of the rule. The value can be in the range 1000 to 3000. Values outside this range are reserved for Service Fabric ManagerCluster Resource Provider. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                "minimum": 1000,
                "maximum": 3000
              },
              "direction": {
                "type": "string",
                "description": "Network security rule direction.",
                "enum": [
                  "inbound",
                  "outbound"
                ],
                "x-ms-enum": {
                  "name": "direction",
                  "modelAsString": true
                }
              }
            },
            "description": "Describes a network security rule."
          },
          "x-ms-identifiers": [],
          "description": "Custom Network Security Rules that are applied to the Virtual Network of the cluster."
        },
        "clients": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "isAdmin"
            ],
            "properties": {
              "isAdmin": {
                "type": "boolean",
                "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
              },
              "thumbprint": {
                "type": "string",
                "description": "Certificate thumbprint."
              },
              "commonName": {
                "type": "string",
                "description": "Certificate common name."
              },
              "issuerThumbprint": {
                "type": "string",
                "description": "Issuer thumbprint for the certificate. Only used together with CommonName."
              }
            },
            "description": "Client certificate definition."
          },
          "x-ms-identifiers": [],
          "description": "Client certificates that are allowed to manage the cluster."
        },
        "azureActiveDirectory": {
          "description": "The AAD authentication settings of the cluster.",
          "type": "object",
          "properties": {
            "tenantId": {
              "type": "string",
              "description": "Azure active directory tenant id."
            },
            "clusterApplication": {
              "type": "string",
              "description": "Azure active directory cluster application id."
            },
            "clientApplication": {
              "type": "string",
              "description": "Azure active directory client application id."
            }
          }
        },
        "fabricSettings": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name",
              "parameters"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "The section name of the fabric settings."
              },
              "parameters": {
                "type": "array",
                "description": "The collection of parameters in the section.",
                "items": {
                  "type": "object",
                  "required": [
                    "name",
                    "value"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The parameter name of fabric setting."
                    },
                    "value": {
                      "type": "string",
                      "description": "The parameter value of fabric setting."
                    }
                  },
                  "description": "Describes a parameter in fabric settings of the cluster."
                },
                "x-ms-identifiers": [
                  "name"
                ]
              }
            },
            "description": "Describes a section in the fabric settings of the cluster."
          },
          "x-ms-identifiers": [],
          "description": "The list of custom fabric settings to configure the cluster."
        },
        "provisioningState": {
          "readOnly": true,
          "description": "The provisioning state of the managed cluster resource.",
          "type": "string",
          "enum": [
            "None",
            "Creating",
            "Created",
            "Updating",
            "Succeeded",
            "Failed",
            "Canceled",
            "Deleting",
            "Deleted",
            "Other"
          ],
          "x-ms-enum": {
            "name": "ManagedResourceProvisioningState",
            "modelAsString": true
          }
        },
        "clusterCodeVersion": {
          "type": "string",
          "description": "The Service Fabric runtime version of the cluster. This property is required when **clusterUpgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**."
        },
        "clusterUpgradeMode": {
          "type": "string",
          "description": "The upgrade mode of the cluster when new Service Fabric runtime version is available.\n",
          "enum": [
            "Automatic",
            "Manual"
          ],
          "default": "Automatic",
          "x-ms-enum": {
            "name": "ClusterUpgradeMode",
            "modelAsString": true,
            "values": [
              {
                "value": "Automatic",
                "description": "The cluster will be automatically upgraded to the latest Service Fabric runtime version, **clusterUpgradeCadence** will determine when the upgrade starts after the new version becomes available."
              },
              {
                "value": "Manual",
                "description": "The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource."
              }
            ]
          }
        },
        "clusterUpgradeCadence": {
          "description": "Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **clusterUpgradeMode** is set to 'Automatic'.",
          "type": "string",
          "enum": [
            "Wave0",
            "Wave1",
            "Wave2"
          ],
          "x-ms-enum": {
            "name": "clusterUpgradeCadence",
            "modelAsString": true,
            "values": [
              {
                "value": "Wave0",
                "description": "Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters."
              },
              {
                "value": "Wave1",
                "description": "Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters."
              },
              {
                "value": "Wave2",
                "description": "Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters."
              }
            ]
          }
        },
        "addonFeatures": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Available cluster add-on features",
            "enum": [
              "DnsService",
              "BackupRestoreService",
              "ResourceMonitorService"
            ],
            "x-ms-enum": {
              "name": "ManagedClusterAddOnFeature",
              "modelAsString": true,
              "values": [
                {
                  "value": "DnsService",
                  "description": "Dns service"
                },
                {
                  "value": "BackupRestoreService",
                  "description": "Backup and restore service"
                },
                {
                  "value": "ResourceMonitorService",
                  "description": "Resource monitor service"
                }
              ]
            }
          },
          "description": "List of add-on features to enable on the cluster."
        },
        "enableAutoOSUpgrade": {
          "type": "boolean",
          "description": "Setting this to true enables automatic OS upgrade for the node types that are created using any platform OS image with version 'latest'. The default value for this setting is false."
        },
        "zonalResiliency": {
          "type": "boolean",
          "description": "Indicates if the cluster has zone resiliency.",
          "default": false
        },
        "applicationTypeVersionsCleanupPolicy": {
          "description": "The policy used to clean up unused versions.",
          "type": "object",
          "required": [
            "maxUnusedVersionsToKeep"
          ],
          "properties": {
            "maxUnusedVersionsToKeep": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "description": "Number of unused versions per application type to keep."
            }
          }
        },
        "enableIpv6": {
          "type": "boolean",
          "description": "Setting this to true creates IPv6 address space for the default VNet used by the cluster. This setting cannot be changed once the cluster is created. The default value for this setting is false."
        },
        "subnetId": {
          "type": "string",
          "description": "If specified, the node types for the cluster are created in this subnet instead of the default VNet. The **networkSecurityRules** specified for the cluster are also applied to this subnet. This setting cannot be changed once the cluster is created."
        },
        "ipTags": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "ipTagType",
              "tag"
            ],
            "properties": {
              "ipTagType": {
                "type": "string",
                "description": "IP tag type. Example: FirstPartyUsage."
              },
              "tag": {
                "type": "string",
                "description": "IP tag associated with the public IP. Example: SQL, Storage etc."
              }
            },
            "description": "The IP tag associated with the public IP address."
          },
          "x-ms-identifiers": [],
          "description": "The list of IP tags associated with the default public IP address of the cluster."
        },
        "ipv6Address": {
          "type": "string",
          "description": "IPv6 address for the cluster if IPv6 is enabled.",
          "readOnly": true
        },
        "enableServicePublicIP": {
          "type": "boolean",
          "description": "Setting this to true will link the IPv4 address as the ServicePublicIP of the IPv6 address. It can only be set to True if IPv6 is enabled on the cluster."
        },
        "auxiliarySubnets": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "Subnet name."
              },
              "enableIpv6": {
                "type": "boolean",
                "description": "Indicates wether to enable Ipv6 or not. If not provided, it will take the same configuration as the cluster."
              },
              "privateEndpointNetworkPolicies": {
                "type": "string",
                "description": "Enable or Disable apply network policies on private end point in the subnet.",
                "enum": [
                  "enabled",
                  "disabled"
                ],
                "x-ms-enum": {
                  "name": "privateEndpointNetworkPolicies",
                  "modelAsString": true
                }
              },
              "privateLinkServiceNetworkPolicies": {
                "type": "string",
                "description": "Enable or Disable apply network policies on private link service in the subnet.",
                "enum": [
                  "enabled",
                  "disabled"
                ],
                "x-ms-enum": {
                  "name": "privateLinkServiceNetworkPolicies",
                  "modelAsString": true
                }
              },
              "networkSecurityGroupId": {
                "type": "string",
                "description": "Full resource id for the network security group."
              }
            },
            "description": "Describes a Subnet."
          },
          "x-ms-identifiers": [],
          "description": "Auxiliary subnets for the cluster."
        },
        "serviceEndpoints": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "service"
            ],
            "properties": {
              "service": {
                "type": "string",
                "description": "The type of the endpoint service."
              },
              "locations": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A list of locations."
              }
            },
            "description": "The service endpoint properties."
          },
          "x-ms-identifiers": [],
          "description": "Service endpoints for subnets in the cluster."
        },
        "zonalUpdateMode": {
          "description": "Indicates the update mode for Cross Az clusters.",
          "type": "string",
          "enum": [
            "Standard",
            "Fast"
          ],
          "x-ms-enum": {
            "name": "ZonalUpdateMode",
            "modelAsString": true,
            "values": [
              {
                "value": "Standard",
                "description": "The cluster will use 5 upgrade domains for Cross Az Node types."
              },
              {
                "value": "Fast",
                "description": "The cluster will use a maximum of 3 upgrade domains per zone instead of 5 for Cross Az Node types for faster deployments."
              }
            ]
          }
        },
        "useCustomVnet": {
          "type": "boolean",
          "description": "For new clusters, this parameter indicates that it uses Bring your own VNet, but the subnet is specified at node type level; and for such clusters, the subnetId property is required for node types."
        },
        "publicIPPrefixId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/publicIPPrefixes"
              }
            ]
          },
          "description": "Specify the resource id of a public IPv4 prefix that the load balancer will allocate a public IPv4 address from. This setting cannot be changed once the cluster is created."
        },
        "publicIPv6PrefixId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/publicIPPrefixes"
              }
            ]
          },
          "description": "Specify the resource id of a public IPv6 prefix that the load balancer will allocate a public IPv6 address from. This setting cannot be changed once the cluster is created."
        },
        "ddosProtectionPlanId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/ddosProtectionPlans"
              }
            ]
          },
          "description": "Specify the resource id of a DDoS network protection plan that will be associated with the virtual network of the cluster."
        },
        "upgradeDescription": {
          "description": "The policy to use when upgrading the cluster.",
          "type": "object",
          "properties": {
            "forceRestart": {
              "type": "boolean",
              "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data)."
            },
            "healthPolicy": {
              "description": "The cluster health policy defines a health policy used to evaluate the health of the cluster during a cluster upgrade.",
              "type": "object",
              "required": [
                "maxPercentUnhealthyNodes",
                "maxPercentUnhealthyApplications"
              ],
              "properties": {
                "maxPercentUnhealthyNodes": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n\nIn large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.\n",
                  "default": 0,
                  "minimum": 0,
                  "maximum": 100
                },
                "maxPercentUnhealthyApplications": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.\n\nThe percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.\nIf the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.\nThe computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.\n",
                  "default": 0,
                  "minimum": 0,
                  "maximum": 100
                }
              }
            },
            "deltaHealthPolicy": {
              "description": "The cluster delta health policy defines a health policy used to evaluate the health of the cluster during a cluster upgrade.",
              "type": "object",
              "required": [
                "maxPercentDeltaUnhealthyNodes"
              ],
              "properties": {
                "maxPercentDeltaUnhealthyNodes": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.\n",
                  "minimum": 0,
                  "maximum": 100
                },
                "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.\n",
                  "minimum": 0,
                  "maximum": 100
                },
                "maxPercentDeltaUnhealthyApplications": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades.\nThe delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.\nThe check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.\nNOTE: This value will overwrite the value specified in properties.UpgradeDescription.HealthPolicy.MaxPercentUnhealthyApplications\n",
                  "minimum": 0,
                  "maximum": 100
                }
              }
            },
            "monitoringPolicy": {
              "description": "The cluster monitoring policy describes the parameters for monitoring an upgrade in Monitored mode.",
              "type": "object",
              "required": [
                "healthCheckWaitDuration",
                "healthCheckStableDuration",
                "healthCheckRetryTimeout",
                "upgradeTimeout",
                "upgradeDomainTimeout"
              ],
              "properties": {
                "healthCheckWaitDuration": {
                  "type": "string",
                  "x-ms-format": "duration-constant",
                  "description": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                },
                "healthCheckStableDuration": {
                  "type": "string",
                  "x-ms-format": "duration-constant",
                  "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                },
                "healthCheckRetryTimeout": {
                  "type": "string",
                  "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                },
                "upgradeTimeout": {
                  "type": "string",
                  "description": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                },
                "upgradeDomainTimeout": {
                  "type": "string",
                  "description": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
                }
              }
            },
            "upgradeReplicaSetCheckTimeout": {
              "type": "string",
              "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues.\nWhen this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues.\nThe timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.\nThis value must be between 00:00:00 and 49710.06:28:15 (unsigned 32 bit integer for seconds)\n"
            }
          }
        },
        "httpGatewayTokenAuthConnectionPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port used for token-auth based HTTPS connections to the cluster. Cannot be set to the same port as HttpGatewayEndpoint."
        },
        "enableHttpGatewayExclusiveAuthMode": {
          "type": "boolean",
          "description": "If true, token-based authentication is not allowed on the HttpGatewayEndpoint. This is required to support TLS versions 1.3 and above. If token-based authentication is used, HttpGatewayTokenAuthConnectionPort must be defined."
        }
      },
      "description": "Describes the managed cluster resource properties."
    },
    "ManagedClusterUpdateParameters": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Managed cluster update parameters",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "Managed cluster update request"
    },
    "ManagedClusterVersionDetails": {
      "type": "object",
      "properties": {
        "clusterCodeVersion": {
          "type": "string",
          "description": "The Service Fabric runtime version of the cluster."
        },
        "supportExpiryUtc": {
          "type": "string",
          "description": "The date of expiry of support of the version."
        },
        "osType": {
          "type": "string",
          "description": "Cluster operating system, the default will be Windows",
          "enum": [
            "Windows"
          ],
          "x-ms-enum": {
            "name": "OsType",
            "modelAsString": true,
            "values": [
              {
                "value": "Windows",
                "description": "Indicates os is Windows."
              }
            ]
          }
        }
      },
      "description": "The detail of the Service Fabric runtime version result"
    },
    "ManagedVMSize": {
      "type": "object",
      "properties": {
        "properties": {
          "description": "VM Size properties.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "size": {
              "type": "string",
              "description": "VM Size name.",
              "readOnly": true
            }
          }
        },
        "id": {
          "type": "string",
          "description": "VM Size id.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "VM Size name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "VM Size type.",
          "readOnly": true
        }
      },
      "description": "Describes a VM Sizes."
    },
    "ManagedVMSizesResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Managed VM Sizes for Service Fabric Managed Clusters.",
          "items": {
            "type": "object",
            "properties": {
              "properties": {
                "description": "VM Size properties.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "size": {
                    "type": "string",
                    "description": "VM Size name.",
                    "readOnly": true
                  }
                }
              },
              "id": {
                "type": "string",
                "description": "VM Size id.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "VM Size name.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "VM Size type.",
                "readOnly": true
              }
            },
            "description": "Describes a VM Sizes."
          }
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of Managed VM Sizes if there are any.",
          "readOnly": true
        }
      },
      "description": "Describes the result of the request to list Managed VM Sizes for Service Fabric Managed Clusters."
    },
    "ManagedAzResiliencyStatus": {
      "type": "object",
      "properties": {
        "baseResourceStatus": {
          "type": "array",
          "description": "List of Managed VM Sizes for Service Fabric Managed Clusters.",
          "items": {
            "type": "object",
            "properties": {
              "resourceName": {
                "type": "string",
                "description": "VM Size properties.",
                "readOnly": true
              },
              "resourceType": {
                "type": "string",
                "description": "VM Size id.",
                "readOnly": true
              },
              "isZoneResilient": {
                "type": "boolean",
                "description": "VM Size name.",
                "readOnly": true
              },
              "details": {
                "type": "string",
                "description": "Zone resiliency status details for the resource.",
                "readOnly": true
              }
            },
            "description": "Describes Az Resiliency status of Base resources"
          },
          "x-ms-identifiers": []
        },
        "isClusterZoneResilient": {
          "type": "boolean",
          "description": "URL to get the next set of Managed VM Sizes if there are any.",
          "readOnly": true
        }
      },
      "description": "Describes the result of the request to list Managed VM Sizes for Service Fabric Managed Clusters."
    },
    "ManagedMaintenanceWindowStatus": {
      "type": "object",
      "properties": {
        "isWindowEnabled": {
          "type": "boolean",
          "description": "If maintenance window is enabled on this cluster.",
          "readOnly": true
        },
        "isRegionReady": {
          "type": "boolean",
          "description": "Indicates if the region is ready to configure maintenance windows.",
          "readOnly": true
        },
        "isWindowActive": {
          "type": "boolean",
          "description": "If maintenance window is active.",
          "readOnly": true
        },
        "canApplyUpdates": {
          "type": "boolean",
          "description": "If updates can be applied.",
          "readOnly": true
        },
        "lastWindowStatusUpdateAtUTC": {
          "type": "string",
          "format": "date-time",
          "description": "Last window update time in UTC.",
          "readOnly": true
        },
        "lastWindowStartTimeUTC": {
          "type": "string",
          "format": "date-time",
          "description": "Last window start time in UTC.",
          "readOnly": true
        },
        "lastWindowEndTimeUTC": {
          "type": "string",
          "format": "date-time",
          "description": "Last window end time in UTC.",
          "readOnly": true
        }
      },
      "description": "Describes the maintenance window status of the Service Fabric Managed Cluster."
    },
    "ResourceAzStatus": {
      "type": "object",
      "properties": {
        "resourceName": {
          "type": "string",
          "description": "VM Size properties.",
          "readOnly": true
        },
        "resourceType": {
          "type": "string",
          "description": "VM Size id.",
          "readOnly": true
        },
        "isZoneResilient": {
          "type": "boolean",
          "description": "VM Size name.",
          "readOnly": true
        },
        "details": {
          "type": "string",
          "description": "Zone resiliency status details for the resource.",
          "readOnly": true
        }
      },
      "description": "Describes Az Resiliency status of Base resources"
    },
    "OsType": {
      "type": "string",
      "description": "Cluster operating system, the default will be Windows",
      "enum": [
        "Windows"
      ],
      "x-ms-enum": {
        "name": "OsType",
        "modelAsString": true,
        "values": [
          {
            "value": "Windows",
            "description": "Indicates os is Windows."
          }
        ]
      }
    },
    "ServiceEndpoint": {
      "type": "object",
      "required": [
        "service"
      ],
      "properties": {
        "service": {
          "type": "string",
          "description": "The type of the endpoint service."
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of locations."
        }
      },
      "description": "The service endpoint properties."
    },
    "Sku": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "Sku Name.",
          "type": "string",
          "enum": [
            "Basic",
            "Standard"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": true,
            "values": [
              {
                "value": "Basic",
                "description": "Basic requires a minimum of 3 nodes and allows only 1 node type."
              },
              {
                "value": "Standard",
                "description": "Requires a minimum of 5 nodes and allows 1 or more node type."
              }
            ]
          }
        }
      },
      "description": "Service Fabric managed cluster Sku definition"
    },
    "SkuName": {
      "type": "string",
      "description": "Sku Name.",
      "enum": [
        "Basic",
        "Standard"
      ],
      "x-ms-enum": {
        "name": "SkuName",
        "modelAsString": true,
        "values": [
          {
            "value": "Basic",
            "description": "Basic requires a minimum of 3 nodes and allows only 1 node type."
          },
          {
            "value": "Standard",
            "description": "Requires a minimum of 5 nodes and allows 1 or more node type."
          }
        ]
      }
    },
    "Subnet": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Subnet name."
        },
        "enableIpv6": {
          "type": "boolean",
          "description": "Indicates wether to enable Ipv6 or not. If not provided, it will take the same configuration as the cluster."
        },
        "privateEndpointNetworkPolicies": {
          "type": "string",
          "description": "Enable or Disable apply network policies on private end point in the subnet.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "privateEndpointNetworkPolicies",
            "modelAsString": true
          }
        },
        "privateLinkServiceNetworkPolicies": {
          "type": "string",
          "description": "Enable or Disable apply network policies on private link service in the subnet.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "privateLinkServiceNetworkPolicies",
            "modelAsString": true
          }
        },
        "networkSecurityGroupId": {
          "type": "string",
          "description": "Full resource id for the network security group."
        }
      },
      "description": "Describes a Subnet."
    },
    "VMSize": {
      "type": "object",
      "properties": {
        "size": {
          "type": "string",
          "description": "VM Size name.",
          "readOnly": true
        }
      },
      "description": "VM Sizes properties."
    },
    "ZonalUpdateMode": {
      "type": "string",
      "description": "Indicates the update mode for Cross Az clusters.",
      "enum": [
        "Standard",
        "Fast"
      ],
      "x-ms-enum": {
        "name": "ZonalUpdateMode",
        "modelAsString": true,
        "values": [
          {
            "value": "Standard",
            "description": "The cluster will use 5 upgrade domains for Cross Az Node types."
          },
          {
            "value": "Fast",
            "description": "The cluster will use a maximum of 3 upgrade domains per zone instead of 5 for Cross Az Node types for faster deployments."
          }
        ]
      }
    },
    "IpTag": {
      "type": "object",
      "required": [
        "ipTagType",
        "tag"
      ],
      "properties": {
        "ipTagType": {
          "type": "string",
          "description": "IP tag type. Example: FirstPartyUsage."
        },
        "tag": {
          "type": "string",
          "description": "IP tag associated with the public IP. Example: SQL, Storage etc."
        }
      },
      "description": "The IP tag associated with the public IP address."
    },
    "ManagedResourceProvisioningState": {
      "type": "string",
      "description": "The provisioning state of the managed resource.",
      "enum": [
        "None",
        "Creating",
        "Created",
        "Updating",
        "Succeeded",
        "Failed",
        "Canceled",
        "Deleting",
        "Deleted",
        "Other"
      ],
      "x-ms-enum": {
        "name": "ManagedResourceProvisioningState",
        "modelAsString": true
      }
    },
    "NetworkSecurityRule": {
      "type": "object",
      "required": [
        "name",
        "protocol",
        "access",
        "priority",
        "direction"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Network security rule name."
        },
        "description": {
          "type": "string",
          "description": "Network security rule description."
        },
        "protocol": {
          "type": "string",
          "description": "Network protocol this rule applies to.",
          "enum": [
            "http",
            "https",
            "tcp",
            "udp",
            "icmp",
            "ah",
            "esp"
          ],
          "x-ms-enum": {
            "name": "nsgProtocol",
            "modelAsString": true
          }
        },
        "sourceAddressPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The CIDR or source IP ranges."
        },
        "destinationAddressPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The destination address prefixes. CIDR or destination IP ranges."
        },
        "sourcePortRanges": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The source port ranges."
        },
        "destinationPortRanges": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The destination port ranges."
        },
        "sourceAddressPrefix": {
          "type": "string",
          "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from."
        },
        "destinationAddressPrefix": {
          "type": "string",
          "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."
        },
        "sourcePortRange": {
          "type": "string",
          "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
        },
        "destinationPortRange": {
          "type": "string",
          "description": "he destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
        },
        "access": {
          "type": "string",
          "description": "The network traffic is allowed or denied.",
          "enum": [
            "allow",
            "deny"
          ],
          "x-ms-enum": {
            "name": "access",
            "modelAsString": true
          }
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the rule. The value can be in the range 1000 to 3000. Values outside this range are reserved for Service Fabric ManagerCluster Resource Provider. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
          "minimum": 1000,
          "maximum": 3000
        },
        "direction": {
          "type": "string",
          "description": "Network security rule direction.",
          "enum": [
            "inbound",
            "outbound"
          ],
          "x-ms-enum": {
            "name": "direction",
            "modelAsString": true
          }
        }
      },
      "description": "Describes a network security rule."
    },
    "AdditionalNetworkInterfaceConfiguration": {
      "type": "object",
      "required": [
        "name",
        "ipConfigurations"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the network interface."
        },
        "enableAcceleratedNetworking": {
          "type": "boolean",
          "description": "Specifies whether the network interface is accelerated networking-enabled."
        },
        "dscpConfiguration": {
          "description": "Specifies the DSCP configuration to apply to the network interface.",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Azure resource identifier."
            }
          },
          "x-ms-azure-resource": true
        },
        "ipConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name"
            ],
            "description": "Specifies an IP configuration of the network interface.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the network interface."
              },
              "applicationGatewayBackendAddressPools": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Azure resource identifier."
                    }
                  },
                  "description": "Azure resource identifier.",
                  "x-ms-azure-resource": true
                },
                "description": "Specifies an array of references to backend address pools of application gateways. A node type can reference backend address pools of multiple application gateways. Multiple node types cannot use the same application gateway."
              },
              "loadBalancerBackendAddressPools": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Azure resource identifier."
                    }
                  },
                  "description": "Azure resource identifier.",
                  "x-ms-azure-resource": true
                },
                "description": "Specifies an array of references to backend address pools of load balancers. A node type can reference backend address pools of one public and one internal load balancer. Multiple node types cannot use the same basic sku load balancer.\t"
              },
              "loadBalancerInboundNatPools": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Azure resource identifier."
                    }
                  },
                  "description": "Azure resource identifier.",
                  "x-ms-azure-resource": true
                },
                "description": "Specifies an array of references to inbound Nat pools of the load balancers. A node type can reference inbound nat pools of one public and one internal load balancer. Multiple node types cannot use the same basic sku load balancer."
              },
              "subnet": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Azure resource identifier."
                  }
                },
                "description": "Azure resource identifier.",
                "x-ms-azure-resource": true
              },
              "privateIPAddressVersion": {
                "type": "string",
                "description": "Specifies whether the IP configuration's private IP is IPv4 or IPv6. Default is IPv4.",
                "enum": [
                  "IPv4",
                  "IPv6"
                ],
                "default": "IPv4",
                "x-ms-enum": {
                  "name": "privateIPAddressVersion",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "IPv4"
                    },
                    {
                      "value": "IPv6"
                    }
                  ]
                }
              },
              "publicIPAddressConfiguration": {
                "type": "object",
                "required": [
                  "name"
                ],
                "description": "The public IP address configuration of the network interface.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the network interface."
                  },
                  "ipTags": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "ipTagType",
                        "tag"
                      ],
                      "properties": {
                        "ipTagType": {
                          "type": "string",
                          "description": "IP tag type. Example: FirstPartyUsage."
                        },
                        "tag": {
                          "type": "string",
                          "description": "IP tag associated with the public IP. Example: SQL, Storage etc."
                        }
                      },
                      "description": "The IP tag associated with the public IP address."
                    },
                    "x-ms-identifiers": [],
                    "description": "Specifies the list of IP tags associated with the public IP address."
                  },
                  "publicIPAddressVersion": {
                    "type": "string",
                    "description": "Specifies whether the IP configuration's public IP is IPv4 or IPv6. Default is IPv4.",
                    "enum": [
                      "IPv4",
                      "IPv6"
                    ],
                    "default": "IPv4",
                    "x-ms-enum": {
                      "name": "publicIPAddressVersion",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "IPv4"
                        },
                        {
                          "value": "IPv6"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "Specifies the IP configurations of the network interface."
        }
      },
      "description": "Specifies the settings for a network interface to attach to the node type."
    },
    "DiskType": {
      "type": "string",
      "description": "Managed data disk type. IOPS and throughput are given by the disk size, to see more information go to https://docs.microsoft.com/en-us/azure/virtual-machines/disks-types.\n",
      "enum": [
        "Standard_LRS",
        "StandardSSD_LRS",
        "Premium_LRS"
      ],
      "default": "StandardSSD_LRS",
      "x-ms-enum": {
        "name": "DiskType",
        "modelAsString": true,
        "values": [
          {
            "value": "Standard_LRS",
            "description": "Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access."
          },
          {
            "value": "StandardSSD_LRS",
            "description": "Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test."
          },
          {
            "value": "Premium_LRS",
            "description": "Premium SSD locally redundant storage. Best for production and performance sensitive workloads."
          }
        ]
      }
    },
    "EvictionPolicyType": {
      "type": "string",
      "description": "Specifies the eviction policy for virtual machines in a SPOT node type.",
      "enum": [
        "Delete",
        "Deallocate"
      ],
      "x-ms-enum": {
        "name": "EvictionPolicyType",
        "modelAsString": true,
        "values": [
          {
            "value": "Delete",
            "description": "Eviction policy will be Delete for SPOT vms."
          },
          {
            "value": "Deallocate",
            "description": "Eviction policy will be Deallocate for SPOT vms."
          }
        ]
      }
    },
    "FrontendConfiguration": {
      "type": "object",
      "properties": {
        "ipAddressType": {
          "description": "The IP address type of this frontend configuration. If omitted the default value is IPv4.",
          "type": "string",
          "enum": [
            "IPv4",
            "IPv6"
          ],
          "default": "IPv4",
          "x-ms-enum": {
            "name": "IPAddressType",
            "modelAsString": true,
            "values": [
              {
                "value": "IPv4",
                "description": "IPv4 address type."
              },
              {
                "value": "IPv6",
                "description": "IPv6 address type."
              }
            ]
          }
        },
        "loadBalancerBackendAddressPoolId": {
          "type": "string",
          "format": "arm-id",
          "description": "The resource Id of the Load Balancer backend address pool that the VM instances of the node type are associated with. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/loadBalancers/<loadBalancerName>/backendAddressPools/<backendAddressPoolName>'."
        },
        "loadBalancerInboundNatPoolId": {
          "type": "string",
          "format": "arm-id",
          "description": "The resource Id of the Load Balancer inbound NAT pool that the VM instances of the node type are associated with. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/loadBalancers/<loadBalancerName>/inboundNatPools/<inboundNatPoolName>'."
        },
        "applicationGatewayBackendAddressPoolId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/applicationGateways/backendAddressPools"
              }
            ]
          },
          "description": "The resource Id of application gateway backend address pool. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/applicationGateways/<applicationGatewayName>/backendAddressPools/<backendAddressPoolName>'."
        }
      },
      "description": "Describes the frontend configurations for the node type."
    },
    "IPAddressType": {
      "type": "string",
      "description": "The IP address type.\n",
      "enum": [
        "IPv4",
        "IPv6"
      ],
      "default": "IPv4",
      "x-ms-enum": {
        "name": "IPAddressType",
        "modelAsString": true,
        "values": [
          {
            "value": "IPv4",
            "description": "IPv4 address type."
          },
          {
            "value": "IPv6",
            "description": "IPv6 address type."
          }
        ]
      }
    },
    "IpConfiguration": {
      "type": "object",
      "required": [
        "name"
      ],
      "description": "Specifies an IP configuration of the network interface.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the network interface."
        },
        "applicationGatewayBackendAddressPools": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Azure resource identifier."
              }
            },
            "description": "Azure resource identifier.",
            "x-ms-azure-resource": true
          },
          "description": "Specifies an array of references to backend address pools of application gateways. A node type can reference backend address pools of multiple application gateways. Multiple node types cannot use the same application gateway."
        },
        "loadBalancerBackendAddressPools": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Azure resource identifier."
              }
            },
            "description": "Azure resource identifier.",
            "x-ms-azure-resource": true
          },
          "description": "Specifies an array of references to backend address pools of load balancers. A node type can reference backend address pools of one public and one internal load balancer. Multiple node types cannot use the same basic sku load balancer.\t"
        },
        "loadBalancerInboundNatPools": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Azure resource identifier."
              }
            },
            "description": "Azure resource identifier.",
            "x-ms-azure-resource": true
          },
          "description": "Specifies an array of references to inbound Nat pools of the load balancers. A node type can reference inbound nat pools of one public and one internal load balancer. Multiple node types cannot use the same basic sku load balancer."
        },
        "subnet": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Azure resource identifier."
            }
          },
          "description": "Azure resource identifier.",
          "x-ms-azure-resource": true
        },
        "privateIPAddressVersion": {
          "type": "string",
          "description": "Specifies whether the IP configuration's private IP is IPv4 or IPv6. Default is IPv4.",
          "enum": [
            "IPv4",
            "IPv6"
          ],
          "default": "IPv4",
          "x-ms-enum": {
            "name": "privateIPAddressVersion",
            "modelAsString": true,
            "values": [
              {
                "value": "IPv4"
              },
              {
                "value": "IPv6"
              }
            ]
          }
        },
        "publicIPAddressConfiguration": {
          "type": "object",
          "required": [
            "name"
          ],
          "description": "The public IP address configuration of the network interface.",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the network interface."
            },
            "ipTags": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "ipTagType",
                  "tag"
                ],
                "properties": {
                  "ipTagType": {
                    "type": "string",
                    "description": "IP tag type. Example: FirstPartyUsage."
                  },
                  "tag": {
                    "type": "string",
                    "description": "IP tag associated with the public IP. Example: SQL, Storage etc."
                  }
                },
                "description": "The IP tag associated with the public IP address."
              },
              "x-ms-identifiers": [],
              "description": "Specifies the list of IP tags associated with the public IP address."
            },
            "publicIPAddressVersion": {
              "type": "string",
              "description": "Specifies whether the IP configuration's public IP is IPv4 or IPv6. Default is IPv4.",
              "enum": [
                "IPv4",
                "IPv6"
              ],
              "default": "IPv4",
              "x-ms-enum": {
                "name": "publicIPAddressVersion",
                "modelAsString": true,
                "values": [
                  {
                    "value": "IPv4"
                  },
                  {
                    "value": "IPv6"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "ManagedProxyResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Azure resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Azure resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Azure resource type.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Azure resource tags.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)."
            }
          }
        }
      },
      "description": "The resource model definition for proxy-only resource.",
      "x-ms-azure-resource": true
    },
    "NodeType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Azure resource identifier.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Azure resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Azure resource type.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Azure resource tags.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource."
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource."
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)."
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The node type properties",
          "type": "object",
          "required": [
            "isPrimary",
            "vmInstanceCount"
          ],
          "properties": {
            "isPrimary": {
              "type": "boolean",
              "description": "Indicates the Service Fabric system services for the cluster will run on this node type. This setting cannot be changed once the node type is created."
            },
            "vmInstanceCount": {
              "type": "integer",
              "format": "int32",
              "description": "The number of nodes in the node type. <br /><br />**Values:** <br />-1 - Use when auto scale rules are configured or sku.capacity is defined <br /> 0 - Not supported <br /> >0 - Use for manual scale.",
              "minimum": -1,
              "maximum": 2147483647
            },
            "dataDiskSizeGB": {
              "type": "integer",
              "format": "int32",
              "description": "Disk size for the managed disk attached to the vms on the node type in GBs."
            },
            "dataDiskType": {
              "description": "Managed data disk type. Specifies the storage account type for the managed disk",
              "type": "string",
              "enum": [
                "Standard_LRS",
                "StandardSSD_LRS",
                "Premium_LRS"
              ],
              "default": "StandardSSD_LRS",
              "x-ms-enum": {
                "name": "DiskType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Standard_LRS",
                    "description": "Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access."
                  },
                  {
                    "value": "StandardSSD_LRS",
                    "description": "Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test."
                  },
                  {
                    "value": "Premium_LRS",
                    "description": "Premium SSD locally redundant storage. Best for production and performance sensitive workloads."
                  }
                ]
              }
            },
            "dataDiskLetter": {
              "type": "string",
              "pattern": "^[a-zA-Z]{1}$",
              "description": "Managed data disk letter. It can not use the reserved letter C or D and it can not change after created."
            },
            "placementProperties": {
              "type": "object",
              "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
              "additionalProperties": {
                "type": "string",
                "description": "Placement tag value"
              }
            },
            "capacities": {
              "type": "object",
              "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
              "additionalProperties": {
                "type": "string",
                "description": "Capacity tag value"
              }
            },
            "applicationPorts": {
              "description": "The range of ports from which cluster assigned port to Service Fabric applications.",
              "type": "object",
              "required": [
                "endPort",
                "startPort"
              ],
              "properties": {
                "startPort": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Starting port of a range of ports"
                },
                "endPort": {
                  "type": "integer",
                  "format": "int32",
                  "description": "End port of a range of ports"
                }
              }
            },
            "ephemeralPorts": {
              "description": "The range of ephemeral ports that nodes in this node type should be configured with.",
              "type": "object",
              "required": [
                "endPort",
                "startPort"
              ],
              "properties": {
                "startPort": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Starting port of a range of ports"
                },
                "endPort": {
                  "type": "integer",
                  "format": "int32",
                  "description": "End port of a range of ports"
                }
              }
            },
            "vmSize": {
              "type": "string",
              "description": "The size of virtual machines in the pool. All virtual machines in a pool are the same size. For example, Standard_D3."
            },
            "vmImagePublisher": {
              "type": "string",
              "description": "The publisher of the Azure Virtual Machines Marketplace image. For example, Canonical or MicrosoftWindowsServer."
            },
            "vmImageOffer": {
              "type": "string",
              "description": "The offer type of the Azure Virtual Machines Marketplace image. For example, UbuntuServer or WindowsServer."
            },
            "vmImageSku": {
              "type": "string",
              "description": "The SKU of the Azure Virtual Machines Marketplace image. For example, 14.04.0-LTS or 2012-R2-Datacenter."
            },
            "vmImageVersion": {
              "type": "string",
              "description": "The version of the Azure Virtual Machines Marketplace image. A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'."
            },
            "vmSecrets": {
              "type": "array",
              "title": "virtual machine secretes.",
              "description": "The secrets to install in the virtual machines.",
              "items": {
                "type": "object",
                "required": [
                  "sourceVault",
                  "vaultCertificates"
                ],
                "properties": {
                  "sourceVault": {
                    "description": "The relative URL of the Key Vault containing all of the certificates in VaultCertificates.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Azure resource identifier."
                      }
                    },
                    "x-ms-azure-resource": true
                  },
                  "vaultCertificates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "certificateUrl",
                        "certificateStore"
                      ],
                      "properties": {
                        "certificateUrl": {
                          "type": "string",
                          "description": "This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  \"data\":\"<Base64-encoded-certificate>\",<br>  \"dataType\":\"pfx\",<br>  \"password\":\"<pfx-file-password>\"<br>}"
                        },
                        "certificateStore": {
                          "type": "string",
                          "description": "For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name <UppercaseThumbprint>.crt for the X509 certificate file and <UppercaseThumbprint>.prv for private key. Both of these files are .pem formatted."
                        }
                      },
                      "description": "Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM."
                    },
                    "x-ms-identifiers": [],
                    "description": "The list of key vault references in SourceVault which contain certificates."
                  }
                },
                "description": "Specifies set of certificates that should be installed onto the virtual machines."
              },
              "x-ms-identifiers": [
                "sourceVault"
              ]
            },
            "vmExtensions": {
              "type": "array",
              "title": "virtual machine extensions.",
              "description": "Set of extensions that should be installed onto the virtual machines.",
              "items": {
                "type": "object",
                "required": [
                  "name",
                  "properties"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the extension."
                  },
                  "properties": {
                    "x-ms-client-flatten": true,
                    "description": "Describes the properties of a Virtual Machine Scale Set Extension.",
                    "type": "object",
                    "required": [
                      "publisher",
                      "type",
                      "typeHandlerVersion"
                    ],
                    "properties": {
                      "publisher": {
                        "type": "string",
                        "description": "The name of the extension handler publisher."
                      },
                      "type": {
                        "type": "string",
                        "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                      },
                      "typeHandlerVersion": {
                        "type": "string",
                        "description": "Specifies the version of the script handler."
                      },
                      "autoUpgradeMinorVersion": {
                        "type": "boolean",
                        "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
                      },
                      "settings": {
                        "type": "object",
                        "description": "Json formatted public settings for the extension."
                      },
                      "protectedSettings": {
                        "type": "object",
                        "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
                      },
                      "forceUpdateTag": {
                        "type": "string",
                        "description": "If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed."
                      },
                      "provisionAfterExtensions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Collection of extension names after which this extension needs to be provisioned."
                      },
                      "provisioningState": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The provisioning state, which only appears in the response."
                      },
                      "enableAutomaticUpgrade": {
                        "type": "boolean",
                        "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available."
                      },
                      "setupOrder": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "Vm extension setup order.\n",
                          "enum": [
                            "BeforeSFRuntime"
                          ],
                          "x-ms-enum": {
                            "name": "VmssExtensionSetupOrder",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "BeforeSFRuntime",
                                "description": "Indicates that the vm extension should run before the service fabric runtime starts."
                              }
                            ]
                          }
                        },
                        "x-ms-identifiers": [],
                        "description": "Indicates the setup order for the extension."
                      }
                    }
                  }
                },
                "description": "Specifies set of extensions that should be installed onto the virtual machines."
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "vmManagedIdentity": {
              "description": "Identities to assign to the virtual machine scale set under the node type.",
              "type": "object",
              "properties": {
                "userAssignedIdentities": {
                  "type": "array",
                  "description": "The list of user identities associated with the virtual machine scale set under the node type. Each entry will be an ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "isStateless": {
              "type": "boolean",
              "description": "Indicates if the node type can only host Stateless workloads.",
              "default": false
            },
            "multiplePlacementGroups": {
              "type": "boolean",
              "description": "Indicates if scale set associated with the node type can be composed of multiple placement groups.",
              "default": false
            },
            "frontendConfigurations": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ipAddressType": {
                    "description": "The IP address type of this frontend configuration. If omitted the default value is IPv4.",
                    "type": "string",
                    "enum": [
                      "IPv4",
                      "IPv6"
                    ],
                    "default": "IPv4",
                    "x-ms-enum": {
                      "name": "IPAddressType",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "IPv4",
                          "description": "IPv4 address type."
                        },
                        {
                          "value": "IPv6",
                          "description": "IPv6 address type."
                        }
                      ]
                    }
                  },
                  "loadBalancerBackendAddressPoolId": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "The resource Id of the Load Balancer backend address pool that the VM instances of the node type are associated with. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/loadBalancers/<loadBalancerName>/backendAddressPools/<backendAddressPoolName>'."
                  },
                  "loadBalancerInboundNatPoolId": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "The resource Id of the Load Balancer inbound NAT pool that the VM instances of the node type are associated with. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/loadBalancers/<loadBalancerName>/inboundNatPools/<inboundNatPoolName>'."
                  },
                  "applicationGatewayBackendAddressPoolId": {
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Network/applicationGateways/backendAddressPools"
                        }
                      ]
                    },
                    "description": "The resource Id of application gateway backend address pool. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/applicationGateways/<applicationGatewayName>/backendAddressPools/<backendAddressPoolName>'."
                  }
                },
                "description": "Describes the frontend configurations for the node type."
              },
              "x-ms-identifiers": [],
              "description": "Indicates the node type uses its own frontend configurations instead of the default one for the cluster. This setting can only be specified for non-primary node types and can not be added or removed after the node type is created."
            },
            "networkSecurityRules": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "name",
                  "protocol",
                  "access",
                  "priority",
                  "direction"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Network security rule name."
                  },
                  "description": {
                    "type": "string",
                    "description": "Network security rule description."
                  },
                  "protocol": {
                    "type": "string",
                    "description": "Network protocol this rule applies to.",
                    "enum": [
                      "http",
                      "https",
                      "tcp",
                      "udp",
                      "icmp",
                      "ah",
                      "esp"
                    ],
                    "x-ms-enum": {
                      "name": "nsgProtocol",
                      "modelAsString": true
                    }
                  },
                  "sourceAddressPrefixes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The CIDR or source IP ranges."
                  },
                  "destinationAddressPrefixes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The destination address prefixes. CIDR or destination IP ranges."
                  },
                  "sourcePortRanges": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The source port ranges."
                  },
                  "destinationPortRanges": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The destination port ranges."
                  },
                  "sourceAddressPrefix": {
                    "type": "string",
                    "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from."
                  },
                  "destinationAddressPrefix": {
                    "type": "string",
                    "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."
                  },
                  "sourcePortRange": {
                    "type": "string",
                    "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                  },
                  "destinationPortRange": {
                    "type": "string",
                    "description": "he destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                  },
                  "access": {
                    "type": "string",
                    "description": "The network traffic is allowed or denied.",
                    "enum": [
                      "allow",
                      "deny"
                    ],
                    "x-ms-enum": {
                      "name": "access",
                      "modelAsString": true
                    }
                  },
                  "priority": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The priority of the rule. The value can be in the range 1000 to 3000. Values outside this range are reserved for Service Fabric ManagerCluster Resource Provider. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                    "minimum": 1000,
                    "maximum": 3000
                  },
                  "direction": {
                    "type": "string",
                    "description": "Network security rule direction.",
                    "enum": [
                      "inbound",
                      "outbound"
                    ],
                    "x-ms-enum": {
                      "name": "direction",
                      "modelAsString": true
                    }
                  }
                },
                "description": "Describes a network security rule."
              },
              "x-ms-identifiers": [],
              "description": "The Network Security Rules for this node type. This setting can only be specified for node types that are configured with frontend configurations."
            },
            "additionalDataDisks": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "lun",
                  "diskSizeGB",
                  "diskType",
                  "diskLetter"
                ],
                "properties": {
                  "lun": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "description": "Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM. Lun 0 is reserved for the service fabric data disk."
                  },
                  "diskSizeGB": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Disk size for each vm in the node type in GBs."
                  },
                  "diskType": {
                    "description": "Managed data disk type. Specifies the storage account type for the managed disk",
                    "type": "string",
                    "enum": [
                      "Standard_LRS",
                      "StandardSSD_LRS",
                      "Premium_LRS"
                    ],
                    "default": "StandardSSD_LRS",
                    "x-ms-enum": {
                      "name": "DiskType",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Standard_LRS",
                          "description": "Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access."
                        },
                        {
                          "value": "StandardSSD_LRS",
                          "description": "Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test."
                        },
                        {
                          "value": "Premium_LRS",
                          "description": "Premium SSD locally redundant storage. Best for production and performance sensitive workloads."
                        }
                      ]
                    }
                  },
                  "diskLetter": {
                    "type": "string",
                    "pattern": "^[a-zA-Z]{1}$",
                    "description": "Managed data disk letter. It can not use the reserved letter C or D and it can not change after created."
                  }
                },
                "description": "Managed data disk description."
              },
              "x-ms-identifiers": [
                "lun"
              ],
              "description": "Additional managed data disks."
            },
            "enableEncryptionAtHost": {
              "type": "boolean",
              "description": "Enable or disable the Host Encryption for the virtual machines on the node type. This will enable the encryption for all the disks including Resource/Temp disk at host itself. Default: The Encryption at host will be disabled unless this property is set to true for the resource.",
              "default": false
            },
            "provisioningState": {
              "readOnly": true,
              "description": "The provisioning state of the node type resource.",
              "type": "string",
              "enum": [
                "None",
                "Creating",
                "Created",
                "Updating",
                "Succeeded",
                "Failed",
                "Canceled",
                "Deleting",
                "Deleted",
                "Other"
              ],
              "x-ms-enum": {
                "name": "ManagedResourceProvisioningState",
                "modelAsString": true
              }
            },
            "enableAcceleratedNetworking": {
              "type": "boolean",
              "description": "Specifies whether the network interface is accelerated networking-enabled."
            },
            "useDefaultPublicLoadBalancer": {
              "type": "boolean",
              "description": "Specifies whether the use public load balancer. If not specified and the node type doesn't have its own frontend configuration, it will be attached to the default load balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is true, then the frontend has to be an Internal Load Balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is false or not set, then the custom load balancer must include a public load balancer to provide outbound connectivity."
            },
            "useTempDataDisk": {
              "type": "boolean",
              "description": "Specifies whether to use the temporary disk for the service fabric data root, in which case no managed data disk will be attached and the temporary disk will be used. It is only allowed for stateless node types."
            },
            "enableOverProvisioning": {
              "type": "boolean",
              "description": "Specifies whether the node type should be overprovisioned. It is only allowed for stateless node types."
            },
            "zones": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Specifies the availability zones where the node type would span across. If the cluster is not spanning across availability zones, initiates az migration for the cluster."
            },
            "isSpotVM": {
              "type": "boolean",
              "description": "Indicates whether the node type will be Spot Virtual Machines. Azure will allocate the VMs if there is capacity available and the VMs can be evicted at any time."
            },
            "hostGroupId": {
              "type": "string",
              "description": "Specifies the full host group resource Id. This property is used for deploying on azure dedicated hosts."
            },
            "useEphemeralOSDisk": {
              "type": "boolean",
              "description": "Indicates whether to use ephemeral os disk. The sku selected on the vmSize property needs to support this feature."
            },
            "spotRestoreTimeout": {
              "type": "string",
              "description": "Indicates the time duration after which the platform will not try to restore the VMSS SPOT instances specified as ISO 8601."
            },
            "evictionPolicy": {
              "description": "Specifies the eviction policy for virtual machines in a SPOT node type. Default is Delete.",
              "type": "string",
              "enum": [
                "Delete",
                "Deallocate"
              ],
              "x-ms-enum": {
                "name": "EvictionPolicyType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Delete",
                    "description": "Eviction policy will be Delete for SPOT vms."
                  },
                  {
                    "value": "Deallocate",
                    "description": "Eviction policy will be Deallocate for SPOT vms."
                  }
                ]
              }
            },
            "vmImageResourceId": {
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Compute/images"
                  },
                  {
                    "type": "Microsoft.Compute/galleries/images"
                  },
                  {
                    "type": "Microsoft.Compute/galleries/images/versions"
                  }
                ]
              },
              "description": "Indicates the resource id of the vm image. This parameter is used for custom vm image."
            },
            "subnetId": {
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                  }
                ]
              },
              "description": "Indicates the resource id of the subnet for the node type."
            },
            "vmSetupActions": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "action to be performed on the vms before bootstrapping the service fabric runtime.",
                "enum": [
                  "EnableContainers",
                  "EnableHyperV"
                ],
                "x-ms-enum": {
                  "name": "VmSetupAction",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "EnableContainers",
                      "description": "Enable windows containers feature."
                    },
                    {
                      "value": "EnableHyperV",
                      "description": "Enables windows HyperV feature."
                    }
                  ]
                }
              },
              "description": "Specifies the actions to be performed on the vms before bootstrapping the service fabric runtime."
            },
            "securityType": {
              "type": "string",
              "description": "Specifies the security type of the nodeType. Only Standard and TrustedLaunch are currently supported",
              "enum": [
                "TrustedLaunch",
                "Standard"
              ],
              "x-ms-enum": {
                "name": "securityType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "TrustedLaunch",
                    "description": "Trusted Launch is a security type that secures generation 2 virtual machines."
                  },
                  {
                    "value": "Standard",
                    "description": "Standard is the default security type for all machines."
                  }
                ]
              }
            },
            "secureBootEnabled": {
              "type": "boolean",
              "description": "Specifies whether secure boot should be enabled on the nodeType. Can only be used with TrustedLaunch SecurityType"
            },
            "enableNodePublicIP": {
              "type": "boolean",
              "description": "Specifies whether each node is allocated its own public IPv4 address. This is only supported on secondary node types with custom Load Balancers."
            },
            "enableNodePublicIPv6": {
              "type": "boolean",
              "description": "Specifies whether each node is allocated its own public IPv6 address. This is only supported on secondary node types with custom Load Balancers."
            },
            "vmSharedGalleryImageId": {
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Compute/sharedGalleries/images"
                  },
                  {
                    "type": "Microsoft.Compute/sharedGalleries/images/versions"
                  }
                ]
              },
              "description": "Indicates the resource id of the vm shared galleries image. This parameter is used for custom vm image."
            },
            "natGatewayId": {
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Network/natGateways"
                  }
                ]
              },
              "description": "Specifies the resource id of a NAT Gateway to attach to the subnet of this node type. Node type must use custom load balancer."
            },
            "natConfigurations": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "backendPort": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 65535,
                    "description": "The internal port for the NAT configuration."
                  },
                  "frontendPortRangeStart": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 65534,
                    "description": "The port range start for the external endpoint."
                  },
                  "frontendPortRangeEnd": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 65534,
                    "description": "The port range end for the external endpoint."
                  }
                },
                "description": "Provides information about NAT configuration on the default public Load Balancer for the node type."
              },
              "x-ms-identifiers": [],
              "description": "Specifies the NAT configuration on default public Load Balancer for the node type. This is only supported for node types use the default public Load Balancer."
            },
            "vmImagePlan": {
              "description": "Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started ->. Enter any required information and then click Save.",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The plan ID."
                },
                "product": {
                  "type": "string",
                  "description": "Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element."
                },
                "promotionCode": {
                  "type": "string",
                  "description": "The promotion code."
                },
                "publisher": {
                  "type": "string",
                  "description": "The publisher ID."
                }
              }
            },
            "serviceArtifactReferenceId": {
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Compute/galleries/serviceArtifacts/vmArtifactsProfiles"
                  }
                ]
              },
              "description": "Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using 'latest' image version."
            },
            "dscpConfigurationId": {
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Network/dscpConfigurations"
                  }
                ]
              },
              "description": "Specifies the resource id of the DSCP configuration to apply to the node type network interface."
            },
            "additionalNetworkInterfaceConfigurations": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "name",
                  "ipConfigurations"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the network interface."
                  },
                  "enableAcceleratedNetworking": {
                    "type": "boolean",
                    "description": "Specifies whether the network interface is accelerated networking-enabled."
                  },
                  "dscpConfiguration": {
                    "description": "Specifies the DSCP configuration to apply to the network interface.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Azure resource identifier."
                      }
                    },
                    "x-ms-azure-resource": true
                  },
                  "ipConfigurations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "description": "Specifies an IP configuration of the network interface.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the network interface."
                        },
                        "applicationGatewayBackendAddressPools": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Azure resource identifier."
                              }
                            },
                            "description": "Azure resource identifier.",
                            "x-ms-azure-resource": true
                          },
                          "description": "Specifies an array of references to backend address pools of application gateways. A node type can reference backend address pools of multiple application gateways. Multiple node types cannot use the same application gateway."
                        },
                        "loadBalancerBackendAddressPools": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Azure resource identifier."
                              }
                            },
                            "description": "Azure resource identifier.",
                            "x-ms-azure-resource": true
                          },
                          "description": "Specifies an array of references to backend address pools of load balancers. A node type can reference backend address pools of one public and one internal load balancer. Multiple node types cannot use the same basic sku load balancer.\t"
                        },
                        "loadBalancerInboundNatPools": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Azure resource identifier."
                              }
                            },
                            "description": "Azure resource identifier.",
                            "x-ms-azure-resource": true
                          },
                          "description": "Specifies an array of references to inbound Nat pools of the load balancers. A node type can reference inbound nat pools of one public and one internal load balancer. Multiple node types cannot use the same basic sku load balancer."
                        },
                        "subnet": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Azure resource identifier."
                            }
                          },
                          "description": "Azure resource identifier.",
                          "x-ms-azure-resource": true
                        },
                        "privateIPAddressVersion": {
                          "type": "string",
                          "description": "Specifies whether the IP configuration's private IP is IPv4 or IPv6. Default is IPv4.",
                          "enum": [
                            "IPv4",
                            "IPv6"
                          ],
                          "default": "IPv4",
                          "x-ms-enum": {
                            "name": "privateIPAddressVersion",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "IPv4"
                              },
                              {
                                "value": "IPv6"
                              }
                            ]
                          }
                        },
                        "publicIPAddressConfiguration": {
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "description": "The public IP address configuration of the network interface.",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the network interface."
                            },
                            "ipTags": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "ipTagType",
                                  "tag"
                                ],
                                "properties": {
                                  "ipTagType": {
                                    "type": "string",
                                    "description": "IP tag type. Example: FirstPartyUsage."
                                  },
                                  "tag": {
                                    "type": "string",
                                    "description": "IP tag associated with the public IP. Example: SQL, Storage etc."
                                  }
                                },
                                "description": "The IP tag associated with the public IP address."
                              },
                              "x-ms-identifiers": [],
                              "description": "Specifies the list of IP tags associated with the public IP address."
                            },
                            "publicIPAddressVersion": {
                              "type": "string",
                              "description": "Specifies whether the IP configuration's public IP is IPv4 or IPv6. Default is IPv4.",
                              "enum": [
                                "IPv4",
                                "IPv6"
                              ],
                              "default": "IPv4",
                              "x-ms-enum": {
                                "name": "publicIPAddressVersion",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "IPv4"
                                  },
                                  {
                                    "value": "IPv6"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "name"
                    ],
                    "description": "Specifies the IP configurations of the network interface."
                  }
                },
                "description": "Specifies the settings for a network interface to attach to the node type."
              },
              "x-ms-identifiers": [
                "name"
              ],
              "description": "Specifies the settings for any additional secondary network interfaces to attach to the node type."
            },
            "computerNamePrefix": {
              "type": "string",
              "description": "Specifies the computer name prefix. Limited to 9 characters. If specified, allows for a longer name to be specified for the node type name."
            }
          }
        },
        "sku": {
          "description": "The node type sku.",
          "type": "object",
          "required": [
            "capacity"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "The sku name. <br /><br />Name is internally generated and is used in auto-scale scenarios.<br /> Property does not allow to be changed to other values than generated.<br /> To avoid deployment errors please omit the property."
            },
            "tier": {
              "type": "string",
              "description": "Specifies the tier of the node type. <br /><br /> Possible Values:<br /> **Standard**"
            },
            "capacity": {
              "type": "integer",
              "format": "int32",
              "description": "The number of nodes in the node type.<br /><br />If present in request it will override properties.vmInstanceCount.",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        }
      },
      "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
    },
    "NodeTypeActionParameters": {
      "type": "object",
      "properties": {
        "nodes": {
          "description": "List of node names from the node type.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "force": {
          "description": "Force the action to go through.",
          "type": "boolean"
        },
        "updateType": {
          "type": "string",
          "description": "Specifies the way the operation will be performed.",
          "enum": [
            "Default",
            "ByUpgradeDomain"
          ],
          "x-ms-enum": {
            "name": "updateType",
            "modelAsString": true,
            "values": [
              {
                "value": "Default",
                "description": "The operation will proceed in all specified nodes at the same time."
              },
              {
                "value": "ByUpgradeDomain",
                "description": "The operation will proceed one upgrade domain at a time, checking the health in between each to continue."
              }
            ]
          }
        }
      },
      "description": "Parameters for Node type action. If nodes are not specified on the parameters, the operation will be performed in all nodes of the node type one upgrade domain at a time."
    },
    "NodeTypeProperties": {
      "type": "object",
      "required": [
        "isPrimary",
        "vmInstanceCount"
      ],
      "properties": {
        "isPrimary": {
          "type": "boolean",
          "description": "Indicates the Service Fabric system services for the cluster will run on this node type. This setting cannot be changed once the node type is created."
        },
        "vmInstanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of nodes in the node type. <br /><br />**Values:** <br />-1 - Use when auto scale rules are configured or sku.capacity is defined <br /> 0 - Not supported <br /> >0 - Use for manual scale.",
          "minimum": -1,
          "maximum": 2147483647
        },
        "dataDiskSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "Disk size for the managed disk attached to the vms on the node type in GBs."
        },
        "dataDiskType": {
          "description": "Managed data disk type. Specifies the storage account type for the managed disk",
          "type": "string",
          "enum": [
            "Standard_LRS",
            "StandardSSD_LRS",
            "Premium_LRS"
          ],
          "default": "StandardSSD_LRS",
          "x-ms-enum": {
            "name": "DiskType",
            "modelAsString": true,
            "values": [
              {
                "value": "Standard_LRS",
                "description": "Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access."
              },
              {
                "value": "StandardSSD_LRS",
                "description": "Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test."
              },
              {
                "value": "Premium_LRS",
                "description": "Premium SSD locally redundant storage. Best for production and performance sensitive workloads."
              }
            ]
          }
        },
        "dataDiskLetter": {
          "type": "string",
          "pattern": "^[a-zA-Z]{1}$",
          "description": "Managed data disk letter. It can not use the reserved letter C or D and it can not change after created."
        },
        "placementProperties": {
          "type": "object",
          "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
          "additionalProperties": {
            "type": "string",
            "description": "Placement tag value"
          }
        },
        "capacities": {
          "type": "object",
          "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
          "additionalProperties": {
            "type": "string",
            "description": "Capacity tag value"
          }
        },
        "applicationPorts": {
          "description": "The range of ports from which cluster assigned port to Service Fabric applications.",
          "type": "object",
          "required": [
            "endPort",
            "startPort"
          ],
          "properties": {
            "startPort": {
              "type": "integer",
              "format": "int32",
              "description": "Starting port of a range of ports"
            },
            "endPort": {
              "type": "integer",
              "format": "int32",
              "description": "End port of a range of ports"
            }
          }
        },
        "ephemeralPorts": {
          "description": "The range of ephemeral ports that nodes in this node type should be configured with.",
          "type": "object",
          "required": [
            "endPort",
            "startPort"
          ],
          "properties": {
            "startPort": {
              "type": "integer",
              "format": "int32",
              "description": "Starting port of a range of ports"
            },
            "endPort": {
              "type": "integer",
              "format": "int32",
              "description": "End port of a range of ports"
            }
          }
        },
        "vmSize": {
          "type": "string",
          "description": "The size of virtual machines in the pool. All virtual machines in a pool are the same size. For example, Standard_D3."
        },
        "vmImagePublisher": {
          "type": "string",
          "description": "The publisher of the Azure Virtual Machines Marketplace image. For example, Canonical or MicrosoftWindowsServer."
        },
        "vmImageOffer": {
          "type": "string",
          "description": "The offer type of the Azure Virtual Machines Marketplace image. For example, UbuntuServer or WindowsServer."
        },
        "vmImageSku": {
          "type": "string",
          "description": "The SKU of the Azure Virtual Machines Marketplace image. For example, 14.04.0-LTS or 2012-R2-Datacenter."
        },
        "vmImageVersion": {
          "type": "string",
          "description": "The version of the Azure Virtual Machines Marketplace image. A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'."
        },
        "vmSecrets": {
          "type": "array",
          "title": "virtual machine secretes.",
          "description": "The secrets to install in the virtual machines.",
          "items": {
            "type": "object",
            "required": [
              "sourceVault",
              "vaultCertificates"
            ],
            "properties": {
              "sourceVault": {
                "description": "The relative URL of the Key Vault containing all of the certificates in VaultCertificates.",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Azure resource identifier."
                  }
                },
                "x-ms-azure-resource": true
              },
              "vaultCertificates": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "certificateUrl",
                    "certificateStore"
                  ],
                  "properties": {
                    "certificateUrl": {
                      "type": "string",
                      "description": "This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  \"data\":\"<Base64-encoded-certificate>\",<br>  \"dataType\":\"pfx\",<br>  \"password\":\"<pfx-file-password>\"<br>}"
                    },
                    "certificateStore": {
                      "type": "string",
                      "description": "For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name <UppercaseThumbprint>.crt for the X509 certificate file and <UppercaseThumbprint>.prv for private key. Both of these files are .pem formatted."
                    }
                  },
                  "description": "Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM."
                },
                "x-ms-identifiers": [],
                "description": "The list of key vault references in SourceVault which contain certificates."
              }
            },
            "description": "Specifies set of certificates that should be installed onto the virtual machines."
          },
          "x-ms-identifiers": [
            "sourceVault"
          ]
        },
        "vmExtensions": {
          "type": "array",
          "title": "virtual machine extensions.",
          "description": "Set of extensions that should be installed onto the virtual machines.",
          "items": {
            "type": "object",
            "required": [
              "name",
              "properties"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the extension."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Describes the properties of a Virtual Machine Scale Set Extension.",
                "type": "object",
                "required": [
                  "publisher",
                  "type",
                  "typeHandlerVersion"
                ],
                "properties": {
                  "publisher": {
                    "type": "string",
                    "description": "The name of the extension handler publisher."
                  },
                  "type": {
                    "type": "string",
                    "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                  },
                  "typeHandlerVersion": {
                    "type": "string",
                    "description": "Specifies the version of the script handler."
                  },
                  "autoUpgradeMinorVersion": {
                    "type": "boolean",
                    "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
                  },
                  "settings": {
                    "type": "object",
                    "description": "Json formatted public settings for the extension."
                  },
                  "protectedSettings": {
                    "type": "object",
                    "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
                  },
                  "forceUpdateTag": {
                    "type": "string",
                    "description": "If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed."
                  },
                  "provisionAfterExtensions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Collection of extension names after which this extension needs to be provisioned."
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The provisioning state, which only appears in the response."
                  },
                  "enableAutomaticUpgrade": {
                    "type": "boolean",
                    "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available."
                  },
                  "setupOrder": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Vm extension setup order.\n",
                      "enum": [
                        "BeforeSFRuntime"
                      ],
                      "x-ms-enum": {
                        "name": "VmssExtensionSetupOrder",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "BeforeSFRuntime",
                            "description": "Indicates that the vm extension should run before the service fabric runtime starts."
                          }
                        ]
                      }
                    },
                    "x-ms-identifiers": [],
                    "description": "Indicates the setup order for the extension."
                  }
                }
              }
            },
            "description": "Specifies set of extensions that should be installed onto the virtual machines."
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "vmManagedIdentity": {
          "description": "Identities to assign to the virtual machine scale set under the node type.",
          "type": "object",
          "properties": {
            "userAssignedIdentities": {
              "type": "array",
              "description": "The list of user identities associated with the virtual machine scale set under the node type. Each entry will be an ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "isStateless": {
          "type": "boolean",
          "description": "Indicates if the node type can only host Stateless workloads.",
          "default": false
        },
        "multiplePlacementGroups": {
          "type": "boolean",
          "description": "Indicates if scale set associated with the node type can be composed of multiple placement groups.",
          "default": false
        },
        "frontendConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "ipAddressType": {
                "description": "The IP address type of this frontend configuration. If omitted the default value is IPv4.",
                "type": "string",
                "enum": [
                  "IPv4",
                  "IPv6"
                ],
                "default": "IPv4",
                "x-ms-enum": {
                  "name": "IPAddressType",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "IPv4",
                      "description": "IPv4 address type."
                    },
                    {
                      "value": "IPv6",
                      "description": "IPv6 address type."
                    }
                  ]
                }
              },
              "loadBalancerBackendAddressPoolId": {
                "type": "string",
                "format": "arm-id",
                "description": "The resource Id of the Load Balancer backend address pool that the VM instances of the node type are associated with. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/loadBalancers/<loadBalancerName>/backendAddressPools/<backendAddressPoolName>'."
              },
              "loadBalancerInboundNatPoolId": {
                "type": "string",
                "format": "arm-id",
                "description": "The resource Id of the Load Balancer inbound NAT pool that the VM instances of the node type are associated with. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/loadBalancers/<loadBalancerName>/inboundNatPools/<inboundNatPoolName>'."
              },
              "applicationGatewayBackendAddressPoolId": {
                "type": "string",
                "format": "arm-id",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.Network/applicationGateways/backendAddressPools"
                    }
                  ]
                },
                "description": "The resource Id of application gateway backend address pool. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/applicationGateways/<applicationGatewayName>/backendAddressPools/<backendAddressPoolName>'."
              }
            },
            "description": "Describes the frontend configurations for the node type."
          },
          "x-ms-identifiers": [],
          "description": "Indicates the node type uses its own frontend configurations instead of the default one for the cluster. This setting can only be specified for non-primary node types and can not be added or removed after the node type is created."
        },
        "networkSecurityRules": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name",
              "protocol",
              "access",
              "priority",
              "direction"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "Network security rule name."
              },
              "description": {
                "type": "string",
                "description": "Network security rule description."
              },
              "protocol": {
                "type": "string",
                "description": "Network protocol this rule applies to.",
                "enum": [
                  "http",
                  "https",
                  "tcp",
                  "udp",
                  "icmp",
                  "ah",
                  "esp"
                ],
                "x-ms-enum": {
                  "name": "nsgProtocol",
                  "modelAsString": true
                }
              },
              "sourceAddressPrefixes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The CIDR or source IP ranges."
              },
              "destinationAddressPrefixes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The destination address prefixes. CIDR or destination IP ranges."
              },
              "sourcePortRanges": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The source port ranges."
              },
              "destinationPortRanges": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The destination port ranges."
              },
              "sourceAddressPrefix": {
                "type": "string",
                "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from."
              },
              "destinationAddressPrefix": {
                "type": "string",
                "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."
              },
              "sourcePortRange": {
                "type": "string",
                "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
              },
              "destinationPortRange": {
                "type": "string",
                "description": "he destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
              },
              "access": {
                "type": "string",
                "description": "The network traffic is allowed or denied.",
                "enum": [
                  "allow",
                  "deny"
                ],
                "x-ms-enum": {
                  "name": "access",
                  "modelAsString": true
                }
              },
              "priority": {
                "type": "integer",
                "format": "int32",
                "description": "The priority of the rule. The value can be in the range 1000 to 3000. Values outside this range are reserved for Service Fabric ManagerCluster Resource Provider. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                "minimum": 1000,
                "maximum": 3000
              },
              "direction": {
                "type": "string",
                "description": "Network security rule direction.",
                "enum": [
                  "inbound",
                  "outbound"
                ],
                "x-ms-enum": {
                  "name": "direction",
                  "modelAsString": true
                }
              }
            },
            "description": "Describes a network security rule."
          },
          "x-ms-identifiers": [],
          "description": "The Network Security Rules for this node type. This setting can only be specified for node types that are configured with frontend configurations."
        },
        "additionalDataDisks": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "lun",
              "diskSizeGB",
              "diskType",
              "diskLetter"
            ],
            "properties": {
              "lun": {
                "type": "integer",
                "format": "int32",
                "minimum": 1,
                "description": "Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM. Lun 0 is reserved for the service fabric data disk."
              },
              "diskSizeGB": {
                "type": "integer",
                "format": "int32",
                "description": "Disk size for each vm in the node type in GBs."
              },
              "diskType": {
                "description": "Managed data disk type. Specifies the storage account type for the managed disk",
                "type": "string",
                "enum": [
                  "Standard_LRS",
                  "StandardSSD_LRS",
                  "Premium_LRS"
                ],
                "default": "StandardSSD_LRS",
                "x-ms-enum": {
                  "name": "DiskType",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "Standard_LRS",
                      "description": "Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access."
                    },
                    {
                      "value": "StandardSSD_LRS",
                      "description": "Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test."
                    },
                    {
                      "value": "Premium_LRS",
                      "description": "Premium SSD locally redundant storage. Best for production and performance sensitive workloads."
                    }
                  ]
                }
              },
              "diskLetter": {
                "type": "string",
                "pattern": "^[a-zA-Z]{1}$",
                "description": "Managed data disk letter. It can not use the reserved letter C or D and it can not change after created."
              }
            },
            "description": "Managed data disk description."
          },
          "x-ms-identifiers": [
            "lun"
          ],
          "description": "Additional managed data disks."
        },
        "enableEncryptionAtHost": {
          "type": "boolean",
          "description": "Enable or disable the Host Encryption for the virtual machines on the node type. This will enable the encryption for all the disks including Resource/Temp disk at host itself. Default: The Encryption at host will be disabled unless this property is set to true for the resource.",
          "default": false
        },
        "provisioningState": {
          "readOnly": true,
          "description": "The provisioning state of the node type resource.",
          "type": "string",
          "enum": [
            "None",
            "Creating",
            "Created",
            "Updating",
            "Succeeded",
            "Failed",
            "Canceled",
            "Deleting",
            "Deleted",
            "Other"
          ],
          "x-ms-enum": {
            "name": "ManagedResourceProvisioningState",
            "modelAsString": true
          }
        },
        "enableAcceleratedNetworking": {
          "type": "boolean",
          "description": "Specifies whether the network interface is accelerated networking-enabled."
        },
        "useDefaultPublicLoadBalancer": {
          "type": "boolean",
          "description": "Specifies whether the use public load balancer. If not specified and the node type doesn't have its own frontend configuration, it will be attached to the default load balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is true, then the frontend has to be an Internal Load Balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is false or not set, then the custom load balancer must include a public load balancer to provide outbound connectivity."
        },
        "useTempDataDisk": {
          "type": "boolean",
          "description": "Specifies whether to use the temporary disk for the service fabric data root, in which case no managed data disk will be attached and the temporary disk will be used. It is only allowed for stateless node types."
        },
        "enableOverProvisioning": {
          "type": "boolean",
          "description": "Specifies whether the node type should be overprovisioned. It is only allowed for stateless node types."
        },
        "zones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies the availability zones where the node type would span across. If the cluster is not spanning across availability zones, initiates az migration for the cluster."
        },
        "isSpotVM": {
          "type": "boolean",
          "description": "Indicates whether the node type will be Spot Virtual Machines. Azure will allocate the VMs if there is capacity available and the VMs can be evicted at any time."
        },
        "hostGroupId": {
          "type": "string",
          "description": "Specifies the full host group resource Id. This property is used for deploying on azure dedicated hosts."
        },
        "useEphemeralOSDisk": {
          "type": "boolean",
          "description": "Indicates whether to use ephemeral os disk. The sku selected on the vmSize property needs to support this feature."
        },
        "spotRestoreTimeout": {
          "type": "string",
          "description": "Indicates the time duration after which the platform will not try to restore the VMSS SPOT instances specified as ISO 8601."
        },
        "evictionPolicy": {
          "description": "Specifies the eviction policy for virtual machines in a SPOT node type. Default is Delete.",
          "type": "string",
          "enum": [
            "Delete",
            "Deallocate"
          ],
          "x-ms-enum": {
            "name": "EvictionPolicyType",
            "modelAsString": true,
            "values": [
              {
                "value": "Delete",
                "description": "Eviction policy will be Delete for SPOT vms."
              },
              {
                "value": "Deallocate",
                "description": "Eviction policy will be Deallocate for SPOT vms."
              }
            ]
          }
        },
        "vmImageResourceId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Compute/images"
              },
              {
                "type": "Microsoft.Compute/galleries/images"
              },
              {
                "type": "Microsoft.Compute/galleries/images/versions"
              }
            ]
          },
          "description": "Indicates the resource id of the vm image. This parameter is used for custom vm image."
        },
        "subnetId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks/subnets"
              }
            ]
          },
          "description": "Indicates the resource id of the subnet for the node type."
        },
        "vmSetupActions": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "action to be performed on the vms before bootstrapping the service fabric runtime.",
            "enum": [
              "EnableContainers",
              "EnableHyperV"
            ],
            "x-ms-enum": {
              "name": "VmSetupAction",
              "modelAsString": true,
              "values": [
                {
                  "value": "EnableContainers",
                  "description": "Enable windows containers feature."
                },
                {
                  "value": "EnableHyperV",
                  "description": "Enables windows HyperV feature."
                }
              ]
            }
          },
          "description": "Specifies the actions to be performed on the vms before bootstrapping the service fabric runtime."
        },
        "securityType": {
          "type": "string",
          "description": "Specifies the security type of the nodeType. Only Standard and TrustedLaunch are currently supported",
          "enum": [
            "TrustedLaunch",
            "Standard"
          ],
          "x-ms-enum": {
            "name": "securityType",
            "modelAsString": true,
            "values": [
              {
                "value": "TrustedLaunch",
                "description": "Trusted Launch is a security type that secures generation 2 virtual machines."
              },
              {
                "value": "Standard",
                "description": "Standard is the default security type for all machines."
              }
            ]
          }
        },
        "secureBootEnabled": {
          "type": "boolean",
          "description": "Specifies whether secure boot should be enabled on the nodeType. Can only be used with TrustedLaunch SecurityType"
        },
        "enableNodePublicIP": {
          "type": "boolean",
          "description": "Specifies whether each node is allocated its own public IPv4 address. This is only supported on secondary node types with custom Load Balancers."
        },
        "enableNodePublicIPv6": {
          "type": "boolean",
          "description": "Specifies whether each node is allocated its own public IPv6 address. This is only supported on secondary node types with custom Load Balancers."
        },
        "vmSharedGalleryImageId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Compute/sharedGalleries/images"
              },
              {
                "type": "Microsoft.Compute/sharedGalleries/images/versions"
              }
            ]
          },
          "description": "Indicates the resource id of the vm shared galleries image. This parameter is used for custom vm image."
        },
        "natGatewayId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/natGateways"
              }
            ]
          },
          "description": "Specifies the resource id of a NAT Gateway to attach to the subnet of this node type. Node type must use custom load balancer."
        },
        "natConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "backendPort": {
                "type": "integer",
                "format": "int32",
                "minimum": 1,
                "maximum": 65535,
                "description": "The internal port for the NAT configuration."
              },
              "frontendPortRangeStart": {
                "type": "integer",
                "format": "int32",
                "minimum": 1,
                "maximum": 65534,
                "description": "The port range start for the external endpoint."
              },
              "frontendPortRangeEnd": {
                "type": "integer",
                "format": "int32",
                "minimum": 1,
                "maximum": 65534,
                "description": "The port range end for the external endpoint."
              }
            },
            "description": "Provides information about NAT configuration on the default public Load Balancer for the node type."
          },
          "x-ms-identifiers": [],
          "description": "Specifies the NAT configuration on default public Load Balancer for the node type. This is only supported for node types use the default public Load Balancer."
        },
        "vmImagePlan": {
          "description": "Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started ->. Enter any required information and then click Save.",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The plan ID."
            },
            "product": {
              "type": "string",
              "description": "Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element."
            },
            "promotionCode": {
              "type": "string",
              "description": "The promotion code."
            },
            "publisher": {
              "type": "string",
              "description": "The publisher ID."
            }
          }
        },
        "serviceArtifactReferenceId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Compute/galleries/serviceArtifacts/vmArtifactsProfiles"
              }
            ]
          },
          "description": "Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using 'latest' image version."
        },
        "dscpConfigurationId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/dscpConfigurations"
              }
            ]
          },
          "description": "Specifies the resource id of the DSCP configuration to apply to the node type network interface."
        },
        "additionalNetworkInterfaceConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name",
              "ipConfigurations"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the network interface."
              },
              "enableAcceleratedNetworking": {
                "type": "boolean",
                "description": "Specifies whether the network interface is accelerated networking-enabled."
              },
              "dscpConfiguration": {
                "description": "Specifies the DSCP configuration to apply to the network interface.",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Azure resource identifier."
                  }
                },
                "x-ms-azure-resource": true
              },
              "ipConfigurations": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "description": "Specifies an IP configuration of the network interface.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the network interface."
                    },
                    "applicationGatewayBackendAddressPools": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Azure resource identifier."
                          }
                        },
                        "description": "Azure resource identifier.",
                        "x-ms-azure-resource": true
                      },
                      "description": "Specifies an array of references to backend address pools of application gateways. A node type can reference backend address pools of multiple application gateways. Multiple node types cannot use the same application gateway."
                    },
                    "loadBalancerBackendAddressPools": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Azure resource identifier."
                          }
                        },
                        "description": "Azure resource identifier.",
                        "x-ms-azure-resource": true
                      },
                      "description": "Specifies an array of references to backend address pools of load balancers. A node type can reference backend address pools of one public and one internal load balancer. Multiple node types cannot use the same basic sku load balancer.\t"
                    },
                    "loadBalancerInboundNatPools": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Azure resource identifier."
                          }
                        },
                        "description": "Azure resource identifier.",
                        "x-ms-azure-resource": true
                      },
                      "description": "Specifies an array of references to inbound Nat pools of the load balancers. A node type can reference inbound nat pools of one public and one internal load balancer. Multiple node types cannot use the same basic sku load balancer."
                    },
                    "subnet": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Azure resource identifier."
                        }
                      },
                      "description": "Azure resource identifier.",
                      "x-ms-azure-resource": true
                    },
                    "privateIPAddressVersion": {
                      "type": "string",
                      "description": "Specifies whether the IP configuration's private IP is IPv4 or IPv6. Default is IPv4.",
                      "enum": [
                        "IPv4",
                        "IPv6"
                      ],
                      "default": "IPv4",
                      "x-ms-enum": {
                        "name": "privateIPAddressVersion",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "IPv4"
                          },
                          {
                            "value": "IPv6"
                          }
                        ]
                      }
                    },
                    "publicIPAddressConfiguration": {
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "description": "The public IP address configuration of the network interface.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the network interface."
                        },
                        "ipTags": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "ipTagType",
                              "tag"
                            ],
                            "properties": {
                              "ipTagType": {
                                "type": "string",
                                "description": "IP tag type. Example: FirstPartyUsage."
                              },
                              "tag": {
                                "type": "string",
                                "description": "IP tag associated with the public IP. Example: SQL, Storage etc."
                              }
                            },
                            "description": "The IP tag associated with the public IP address."
                          },
                          "x-ms-identifiers": [],
                          "description": "Specifies the list of IP tags associated with the public IP address."
                        },
                        "publicIPAddressVersion": {
                          "type": "string",
                          "description": "Specifies whether the IP configuration's public IP is IPv4 or IPv6. Default is IPv4.",
                          "enum": [
                            "IPv4",
                            "IPv6"
                          ],
                          "default": "IPv4",
                          "x-ms-enum": {
                            "name": "publicIPAddressVersion",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "IPv4"
                              },
                              {
                                "value": "IPv6"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "x-ms-identifiers": [
                  "name"
                ],
                "description": "Specifies the IP configurations of the network interface."
              }
            },
            "description": "Specifies the settings for a network interface to attach to the node type."
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "Specifies the settings for any additional secondary network interfaces to attach to the node type."
        },
        "computerNamePrefix": {
          "type": "string",
          "description": "Specifies the computer name prefix. Limited to 9 characters. If specified, allows for a longer name to be specified for the node type name."
        }
      },
      "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
    },
    "NodeTypeListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "title": "node type list value.",
          "description": "The list of node types.",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Azure resource identifier.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "Azure resource name.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "Azure resource type.",
                "readOnly": true
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Azure resource tags.",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource."
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)."
                  }
                }
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The node type properties",
                "type": "object",
                "required": [
                  "isPrimary",
                  "vmInstanceCount"
                ],
                "properties": {
                  "isPrimary": {
                    "type": "boolean",
                    "description": "Indicates the Service Fabric system services for the cluster will run on this node type. This setting cannot be changed once the node type is created."
                  },
                  "vmInstanceCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of nodes in the node type. <br /><br />**Values:** <br />-1 - Use when auto scale rules are configured or sku.capacity is defined <br /> 0 - Not supported <br /> >0 - Use for manual scale.",
                    "minimum": -1,
                    "maximum": 2147483647
                  },
                  "dataDiskSizeGB": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Disk size for the managed disk attached to the vms on the node type in GBs."
                  },
                  "dataDiskType": {
                    "description": "Managed data disk type. Specifies the storage account type for the managed disk",
                    "type": "string",
                    "enum": [
                      "Standard_LRS",
                      "StandardSSD_LRS",
                      "Premium_LRS"
                    ],
                    "default": "StandardSSD_LRS",
                    "x-ms-enum": {
                      "name": "DiskType",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Standard_LRS",
                          "description": "Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access."
                        },
                        {
                          "value": "StandardSSD_LRS",
                          "description": "Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test."
                        },
                        {
                          "value": "Premium_LRS",
                          "description": "Premium SSD locally redundant storage. Best for production and performance sensitive workloads."
                        }
                      ]
                    }
                  },
                  "dataDiskLetter": {
                    "type": "string",
                    "pattern": "^[a-zA-Z]{1}$",
                    "description": "Managed data disk letter. It can not use the reserved letter C or D and it can not change after created."
                  },
                  "placementProperties": {
                    "type": "object",
                    "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
                    "additionalProperties": {
                      "type": "string",
                      "description": "Placement tag value"
                    }
                  },
                  "capacities": {
                    "type": "object",
                    "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
                    "additionalProperties": {
                      "type": "string",
                      "description": "Capacity tag value"
                    }
                  },
                  "applicationPorts": {
                    "description": "The range of ports from which cluster assigned port to Service Fabric applications.",
                    "type": "object",
                    "required": [
                      "endPort",
                      "startPort"
                    ],
                    "properties": {
                      "startPort": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Starting port of a range of ports"
                      },
                      "endPort": {
                        "type": "integer",
                        "format": "int32",
                        "description": "End port of a range of ports"
                      }
                    }
                  },
                  "ephemeralPorts": {
                    "description": "The range of ephemeral ports that nodes in this node type should be configured with.",
                    "type": "object",
                    "required": [
                      "endPort",
                      "startPort"
                    ],
                    "properties": {
                      "startPort": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Starting port of a range of ports"
                      },
                      "endPort": {
                        "type": "integer",
                        "format": "int32",
                        "description": "End port of a range of ports"
                      }
                    }
                  },
                  "vmSize": {
                    "type": "string",
                    "description": "The size of virtual machines in the pool. All virtual machines in a pool are the same size. For example, Standard_D3."
                  },
                  "vmImagePublisher": {
                    "type": "string",
                    "description": "The publisher of the Azure Virtual Machines Marketplace image. For example, Canonical or MicrosoftWindowsServer."
                  },
                  "vmImageOffer": {
                    "type": "string",
                    "description": "The offer type of the Azure Virtual Machines Marketplace image. For example, UbuntuServer or WindowsServer."
                  },
                  "vmImageSku": {
                    "type": "string",
                    "description": "The SKU of the Azure Virtual Machines Marketplace image. For example, 14.04.0-LTS or 2012-R2-Datacenter."
                  },
                  "vmImageVersion": {
                    "type": "string",
                    "description": "The version of the Azure Virtual Machines Marketplace image. A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'."
                  },
                  "vmSecrets": {
                    "type": "array",
                    "title": "virtual machine secretes.",
                    "description": "The secrets to install in the virtual machines.",
                    "items": {
                      "type": "object",
                      "required": [
                        "sourceVault",
                        "vaultCertificates"
                      ],
                      "properties": {
                        "sourceVault": {
                          "description": "The relative URL of the Key Vault containing all of the certificates in VaultCertificates.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Azure resource identifier."
                            }
                          },
                          "x-ms-azure-resource": true
                        },
                        "vaultCertificates": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "certificateUrl",
                              "certificateStore"
                            ],
                            "properties": {
                              "certificateUrl": {
                                "type": "string",
                                "description": "This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  \"data\":\"<Base64-encoded-certificate>\",<br>  \"dataType\":\"pfx\",<br>  \"password\":\"<pfx-file-password>\"<br>}"
                              },
                              "certificateStore": {
                                "type": "string",
                                "description": "For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name <UppercaseThumbprint>.crt for the X509 certificate file and <UppercaseThumbprint>.prv for private key. Both of these files are .pem formatted."
                              }
                            },
                            "description": "Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM."
                          },
                          "x-ms-identifiers": [],
                          "description": "The list of key vault references in SourceVault which contain certificates."
                        }
                      },
                      "description": "Specifies set of certificates that should be installed onto the virtual machines."
                    },
                    "x-ms-identifiers": [
                      "sourceVault"
                    ]
                  },
                  "vmExtensions": {
                    "type": "array",
                    "title": "virtual machine extensions.",
                    "description": "Set of extensions that should be installed onto the virtual machines.",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "properties"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the extension."
                        },
                        "properties": {
                          "x-ms-client-flatten": true,
                          "description": "Describes the properties of a Virtual Machine Scale Set Extension.",
                          "type": "object",
                          "required": [
                            "publisher",
                            "type",
                            "typeHandlerVersion"
                          ],
                          "properties": {
                            "publisher": {
                              "type": "string",
                              "description": "The name of the extension handler publisher."
                            },
                            "type": {
                              "type": "string",
                              "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                            },
                            "typeHandlerVersion": {
                              "type": "string",
                              "description": "Specifies the version of the script handler."
                            },
                            "autoUpgradeMinorVersion": {
                              "type": "boolean",
                              "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
                            },
                            "settings": {
                              "type": "object",
                              "description": "Json formatted public settings for the extension."
                            },
                            "protectedSettings": {
                              "type": "object",
                              "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
                            },
                            "forceUpdateTag": {
                              "type": "string",
                              "description": "If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed."
                            },
                            "provisionAfterExtensions": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Collection of extension names after which this extension needs to be provisioned."
                            },
                            "provisioningState": {
                              "readOnly": true,
                              "type": "string",
                              "description": "The provisioning state, which only appears in the response."
                            },
                            "enableAutomaticUpgrade": {
                              "type": "boolean",
                              "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available."
                            },
                            "setupOrder": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "Vm extension setup order.\n",
                                "enum": [
                                  "BeforeSFRuntime"
                                ],
                                "x-ms-enum": {
                                  "name": "VmssExtensionSetupOrder",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "BeforeSFRuntime",
                                      "description": "Indicates that the vm extension should run before the service fabric runtime starts."
                                    }
                                  ]
                                }
                              },
                              "x-ms-identifiers": [],
                              "description": "Indicates the setup order for the extension."
                            }
                          }
                        }
                      },
                      "description": "Specifies set of extensions that should be installed onto the virtual machines."
                    },
                    "x-ms-identifiers": [
                      "name"
                    ]
                  },
                  "vmManagedIdentity": {
                    "description": "Identities to assign to the virtual machine scale set under the node type.",
                    "type": "object",
                    "properties": {
                      "userAssignedIdentities": {
                        "type": "array",
                        "description": "The list of user identities associated with the virtual machine scale set under the node type. Each entry will be an ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "isStateless": {
                    "type": "boolean",
                    "description": "Indicates if the node type can only host Stateless workloads.",
                    "default": false
                  },
                  "multiplePlacementGroups": {
                    "type": "boolean",
                    "description": "Indicates if scale set associated with the node type can be composed of multiple placement groups.",
                    "default": false
                  },
                  "frontendConfigurations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "ipAddressType": {
                          "description": "The IP address type of this frontend configuration. If omitted the default value is IPv4.",
                          "type": "string",
                          "enum": [
                            "IPv4",
                            "IPv6"
                          ],
                          "default": "IPv4",
                          "x-ms-enum": {
                            "name": "IPAddressType",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "IPv4",
                                "description": "IPv4 address type."
                              },
                              {
                                "value": "IPv6",
                                "description": "IPv6 address type."
                              }
                            ]
                          }
                        },
                        "loadBalancerBackendAddressPoolId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "The resource Id of the Load Balancer backend address pool that the VM instances of the node type are associated with. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/loadBalancers/<loadBalancerName>/backendAddressPools/<backendAddressPoolName>'."
                        },
                        "loadBalancerInboundNatPoolId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "The resource Id of the Load Balancer inbound NAT pool that the VM instances of the node type are associated with. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/loadBalancers/<loadBalancerName>/inboundNatPools/<inboundNatPoolName>'."
                        },
                        "applicationGatewayBackendAddressPoolId": {
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.Network/applicationGateways/backendAddressPools"
                              }
                            ]
                          },
                          "description": "The resource Id of application gateway backend address pool. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/applicationGateways/<applicationGatewayName>/backendAddressPools/<backendAddressPoolName>'."
                        }
                      },
                      "description": "Describes the frontend configurations for the node type."
                    },
                    "x-ms-identifiers": [],
                    "description": "Indicates the node type uses its own frontend configurations instead of the default one for the cluster. This setting can only be specified for non-primary node types and can not be added or removed after the node type is created."
                  },
                  "networkSecurityRules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "protocol",
                        "access",
                        "priority",
                        "direction"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Network security rule name."
                        },
                        "description": {
                          "type": "string",
                          "description": "Network security rule description."
                        },
                        "protocol": {
                          "type": "string",
                          "description": "Network protocol this rule applies to.",
                          "enum": [
                            "http",
                            "https",
                            "tcp",
                            "udp",
                            "icmp",
                            "ah",
                            "esp"
                          ],
                          "x-ms-enum": {
                            "name": "nsgProtocol",
                            "modelAsString": true
                          }
                        },
                        "sourceAddressPrefixes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The CIDR or source IP ranges."
                        },
                        "destinationAddressPrefixes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The destination address prefixes. CIDR or destination IP ranges."
                        },
                        "sourcePortRanges": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The source port ranges."
                        },
                        "destinationPortRanges": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The destination port ranges."
                        },
                        "sourceAddressPrefix": {
                          "type": "string",
                          "description": "The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from."
                        },
                        "destinationAddressPrefix": {
                          "type": "string",
                          "description": "The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used."
                        },
                        "sourcePortRange": {
                          "type": "string",
                          "description": "The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                        },
                        "destinationPortRange": {
                          "type": "string",
                          "description": "he destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports."
                        },
                        "access": {
                          "type": "string",
                          "description": "The network traffic is allowed or denied.",
                          "enum": [
                            "allow",
                            "deny"
                          ],
                          "x-ms-enum": {
                            "name": "access",
                            "modelAsString": true
                          }
                        },
                        "priority": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The priority of the rule. The value can be in the range 1000 to 3000. Values outside this range are reserved for Service Fabric ManagerCluster Resource Provider. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.",
                          "minimum": 1000,
                          "maximum": 3000
                        },
                        "direction": {
                          "type": "string",
                          "description": "Network security rule direction.",
                          "enum": [
                            "inbound",
                            "outbound"
                          ],
                          "x-ms-enum": {
                            "name": "direction",
                            "modelAsString": true
                          }
                        }
                      },
                      "description": "Describes a network security rule."
                    },
                    "x-ms-identifiers": [],
                    "description": "The Network Security Rules for this node type. This setting can only be specified for node types that are configured with frontend configurations."
                  },
                  "additionalDataDisks": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "lun",
                        "diskSizeGB",
                        "diskType",
                        "diskLetter"
                      ],
                      "properties": {
                        "lun": {
                          "type": "integer",
                          "format": "int32",
                          "minimum": 1,
                          "description": "Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM. Lun 0 is reserved for the service fabric data disk."
                        },
                        "diskSizeGB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Disk size for each vm in the node type in GBs."
                        },
                        "diskType": {
                          "description": "Managed data disk type. Specifies the storage account type for the managed disk",
                          "type": "string",
                          "enum": [
                            "Standard_LRS",
                            "StandardSSD_LRS",
                            "Premium_LRS"
                          ],
                          "default": "StandardSSD_LRS",
                          "x-ms-enum": {
                            "name": "DiskType",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Standard_LRS",
                                "description": "Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access."
                              },
                              {
                                "value": "StandardSSD_LRS",
                                "description": "Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test."
                              },
                              {
                                "value": "Premium_LRS",
                                "description": "Premium SSD locally redundant storage. Best for production and performance sensitive workloads."
                              }
                            ]
                          }
                        },
                        "diskLetter": {
                          "type": "string",
                          "pattern": "^[a-zA-Z]{1}$",
                          "description": "Managed data disk letter. It can not use the reserved letter C or D and it can not change after created."
                        }
                      },
                      "description": "Managed data disk description."
                    },
                    "x-ms-identifiers": [
                      "lun"
                    ],
                    "description": "Additional managed data disks."
                  },
                  "enableEncryptionAtHost": {
                    "type": "boolean",
                    "description": "Enable or disable the Host Encryption for the virtual machines on the node type. This will enable the encryption for all the disks including Resource/Temp disk at host itself. Default: The Encryption at host will be disabled unless this property is set to true for the resource.",
                    "default": false
                  },
                  "provisioningState": {
                    "readOnly": true,
                    "description": "The provisioning state of the node type resource.",
                    "type": "string",
                    "enum": [
                      "None",
                      "Creating",
                      "Created",
                      "Updating",
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Deleting",
                      "Deleted",
                      "Other"
                    ],
                    "x-ms-enum": {
                      "name": "ManagedResourceProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "enableAcceleratedNetworking": {
                    "type": "boolean",
                    "description": "Specifies whether the network interface is accelerated networking-enabled."
                  },
                  "useDefaultPublicLoadBalancer": {
                    "type": "boolean",
                    "description": "Specifies whether the use public load balancer. If not specified and the node type doesn't have its own frontend configuration, it will be attached to the default load balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is true, then the frontend has to be an Internal Load Balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is false or not set, then the custom load balancer must include a public load balancer to provide outbound connectivity."
                  },
                  "useTempDataDisk": {
                    "type": "boolean",
                    "description": "Specifies whether to use the temporary disk for the service fabric data root, in which case no managed data disk will be attached and the temporary disk will be used. It is only allowed for stateless node types."
                  },
                  "enableOverProvisioning": {
                    "type": "boolean",
                    "description": "Specifies whether the node type should be overprovisioned. It is only allowed for stateless node types."
                  },
                  "zones": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Specifies the availability zones where the node type would span across. If the cluster is not spanning across availability zones, initiates az migration for the cluster."
                  },
                  "isSpotVM": {
                    "type": "boolean",
                    "description": "Indicates whether the node type will be Spot Virtual Machines. Azure will allocate the VMs if there is capacity available and the VMs can be evicted at any time."
                  },
                  "hostGroupId": {
                    "type": "string",
                    "description": "Specifies the full host group resource Id. This property is used for deploying on azure dedicated hosts."
                  },
                  "useEphemeralOSDisk": {
                    "type": "boolean",
                    "description": "Indicates whether to use ephemeral os disk. The sku selected on the vmSize property needs to support this feature."
                  },
                  "spotRestoreTimeout": {
                    "type": "string",
                    "description": "Indicates the time duration after which the platform will not try to restore the VMSS SPOT instances specified as ISO 8601."
                  },
                  "evictionPolicy": {
                    "description": "Specifies the eviction policy for virtual machines in a SPOT node type. Default is Delete.",
                    "type": "string",
                    "enum": [
                      "Delete",
                      "Deallocate"
                    ],
                    "x-ms-enum": {
                      "name": "EvictionPolicyType",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Delete",
                          "description": "Eviction policy will be Delete for SPOT vms."
                        },
                        {
                          "value": "Deallocate",
                          "description": "Eviction policy will be Deallocate for SPOT vms."
                        }
                      ]
                    }
                  },
                  "vmImageResourceId": {
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Compute/images"
                        },
                        {
                          "type": "Microsoft.Compute/galleries/images"
                        },
                        {
                          "type": "Microsoft.Compute/galleries/images/versions"
                        }
                      ]
                    },
                    "description": "Indicates the resource id of the vm image. This parameter is used for custom vm image."
                  },
                  "subnetId": {
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Network/virtualNetworks/subnets"
                        }
                      ]
                    },
                    "description": "Indicates the resource id of the subnet for the node type."
                  },
                  "vmSetupActions": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "action to be performed on the vms before bootstrapping the service fabric runtime.",
                      "enum": [
                        "EnableContainers",
                        "EnableHyperV"
                      ],
                      "x-ms-enum": {
                        "name": "VmSetupAction",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "EnableContainers",
                            "description": "Enable windows containers feature."
                          },
                          {
                            "value": "EnableHyperV",
                            "description": "Enables windows HyperV feature."
                          }
                        ]
                      }
                    },
                    "description": "Specifies the actions to be performed on the vms before bootstrapping the service fabric runtime."
                  },
                  "securityType": {
                    "type": "string",
                    "description": "Specifies the security type of the nodeType. Only Standard and TrustedLaunch are currently supported",
                    "enum": [
                      "TrustedLaunch",
                      "Standard"
                    ],
                    "x-ms-enum": {
                      "name": "securityType",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "TrustedLaunch",
                          "description": "Trusted Launch is a security type that secures generation 2 virtual machines."
                        },
                        {
                          "value": "Standard",
                          "description": "Standard is the default security type for all machines."
                        }
                      ]
                    }
                  },
                  "secureBootEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether secure boot should be enabled on the nodeType. Can only be used with TrustedLaunch SecurityType"
                  },
                  "enableNodePublicIP": {
                    "type": "boolean",
                    "description": "Specifies whether each node is allocated its own public IPv4 address. This is only supported on secondary node types with custom Load Balancers."
                  },
                  "enableNodePublicIPv6": {
                    "type": "boolean",
                    "description": "Specifies whether each node is allocated its own public IPv6 address. This is only supported on secondary node types with custom Load Balancers."
                  },
                  "vmSharedGalleryImageId": {
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Compute/sharedGalleries/images"
                        },
                        {
                          "type": "Microsoft.Compute/sharedGalleries/images/versions"
                        }
                      ]
                    },
                    "description": "Indicates the resource id of the vm shared galleries image. This parameter is used for custom vm image."
                  },
                  "natGatewayId": {
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Network/natGateways"
                        }
                      ]
                    },
                    "description": "Specifies the resource id of a NAT Gateway to attach to the subnet of this node type. Node type must use custom load balancer."
                  },
                  "natConfigurations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "backendPort": {
                          "type": "integer",
                          "format": "int32",
                          "minimum": 1,
                          "maximum": 65535,
                          "description": "The internal port for the NAT configuration."
                        },
                        "frontendPortRangeStart": {
                          "type": "integer",
                          "format": "int32",
                          "minimum": 1,
                          "maximum": 65534,
                          "description": "The port range start for the external endpoint."
                        },
                        "frontendPortRangeEnd": {
                          "type": "integer",
                          "format": "int32",
                          "minimum": 1,
                          "maximum": 65534,
                          "description": "The port range end for the external endpoint."
                        }
                      },
                      "description": "Provides information about NAT configuration on the default public Load Balancer for the node type."
                    },
                    "x-ms-identifiers": [],
                    "description": "Specifies the NAT configuration on default public Load Balancer for the node type. This is only supported for node types use the default public Load Balancer."
                  },
                  "vmImagePlan": {
                    "description": "Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started ->. Enter any required information and then click Save.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The plan ID."
                      },
                      "product": {
                        "type": "string",
                        "description": "Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element."
                      },
                      "promotionCode": {
                        "type": "string",
                        "description": "The promotion code."
                      },
                      "publisher": {
                        "type": "string",
                        "description": "The publisher ID."
                      }
                    }
                  },
                  "serviceArtifactReferenceId": {
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Compute/galleries/serviceArtifacts/vmArtifactsProfiles"
                        }
                      ]
                    },
                    "description": "Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using 'latest' image version."
                  },
                  "dscpConfigurationId": {
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Network/dscpConfigurations"
                        }
                      ]
                    },
                    "description": "Specifies the resource id of the DSCP configuration to apply to the node type network interface."
                  },
                  "additionalNetworkInterfaceConfigurations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "ipConfigurations"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the network interface."
                        },
                        "enableAcceleratedNetworking": {
                          "type": "boolean",
                          "description": "Specifies whether the network interface is accelerated networking-enabled."
                        },
                        "dscpConfiguration": {
                          "description": "Specifies the DSCP configuration to apply to the network interface.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Azure resource identifier."
                            }
                          },
                          "x-ms-azure-resource": true
                        },
                        "ipConfigurations": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "description": "Specifies an IP configuration of the network interface.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the network interface."
                              },
                              "applicationGatewayBackendAddressPools": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Azure resource identifier."
                                    }
                                  },
                                  "description": "Azure resource identifier.",
                                  "x-ms-azure-resource": true
                                },
                                "description": "Specifies an array of references to backend address pools of application gateways. A node type can reference backend address pools of multiple application gateways. Multiple node types cannot use the same application gateway."
                              },
                              "loadBalancerBackendAddressPools": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Azure resource identifier."
                                    }
                                  },
                                  "description": "Azure resource identifier.",
                                  "x-ms-azure-resource": true
                                },
                                "description": "Specifies an array of references to backend address pools of load balancers. A node type can reference backend address pools of one public and one internal load balancer. Multiple node types cannot use the same basic sku load balancer.\t"
                              },
                              "loadBalancerInboundNatPools": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Azure resource identifier."
                                    }
                                  },
                                  "description": "Azure resource identifier.",
                                  "x-ms-azure-resource": true
                                },
                                "description": "Specifies an array of references to inbound Nat pools of the load balancers. A node type can reference inbound nat pools of one public and one internal load balancer. Multiple node types cannot use the same basic sku load balancer."
                              },
                              "subnet": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Azure resource identifier."
                                  }
                                },
                                "description": "Azure resource identifier.",
                                "x-ms-azure-resource": true
                              },
                              "privateIPAddressVersion": {
                                "type": "string",
                                "description": "Specifies whether the IP configuration's private IP is IPv4 or IPv6. Default is IPv4.",
                                "enum": [
                                  "IPv4",
                                  "IPv6"
                                ],
                                "default": "IPv4",
                                "x-ms-enum": {
                                  "name": "privateIPAddressVersion",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "IPv4"
                                    },
                                    {
                                      "value": "IPv6"
                                    }
                                  ]
                                }
                              },
                              "publicIPAddressConfiguration": {
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "description": "The public IP address configuration of the network interface.",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the network interface."
                                  },
                                  "ipTags": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "ipTagType",
                                        "tag"
                                      ],
                                      "properties": {
                                        "ipTagType": {
                                          "type": "string",
                                          "description": "IP tag type. Example: FirstPartyUsage."
                                        },
                                        "tag": {
                                          "type": "string",
                                          "description": "IP tag associated with the public IP. Example: SQL, Storage etc."
                                        }
                                      },
                                      "description": "The IP tag associated with the public IP address."
                                    },
                                    "x-ms-identifiers": [],
                                    "description": "Specifies the list of IP tags associated with the public IP address."
                                  },
                                  "publicIPAddressVersion": {
                                    "type": "string",
                                    "description": "Specifies whether the IP configuration's public IP is IPv4 or IPv6. Default is IPv4.",
                                    "enum": [
                                      "IPv4",
                                      "IPv6"
                                    ],
                                    "default": "IPv4",
                                    "x-ms-enum": {
                                      "name": "publicIPAddressVersion",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "value": "IPv4"
                                        },
                                        {
                                          "value": "IPv6"
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ],
                          "description": "Specifies the IP configurations of the network interface."
                        }
                      },
                      "description": "Specifies the settings for a network interface to attach to the node type."
                    },
                    "x-ms-identifiers": [
                      "name"
                    ],
                    "description": "Specifies the settings for any additional secondary network interfaces to attach to the node type."
                  },
                  "computerNamePrefix": {
                    "type": "string",
                    "description": "Specifies the computer name prefix. Limited to 9 characters. If specified, allows for a longer name to be specified for the node type name."
                  }
                }
              },
              "sku": {
                "description": "The node type sku.",
                "type": "object",
                "required": [
                  "capacity"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The sku name. <br /><br />Name is internally generated and is used in auto-scale scenarios.<br /> Property does not allow to be changed to other values than generated.<br /> To avoid deployment errors please omit the property."
                  },
                  "tier": {
                    "type": "string",
                    "description": "Specifies the tier of the node type. <br /><br /> Possible Values:<br /> **Standard**"
                  },
                  "capacity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of nodes in the node type.<br /><br />If present in request it will override properties.vmInstanceCount.",
                    "minimum": 1,
                    "maximum": 2147483647
                  }
                }
              }
            },
            "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
          }
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "Node type list results"
    },
    "NodeTypeNatConfig": {
      "type": "object",
      "properties": {
        "backendPort": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 65535,
          "description": "The internal port for the NAT configuration."
        },
        "frontendPortRangeStart": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 65534,
          "description": "The port range start for the external endpoint."
        },
        "frontendPortRangeEnd": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 65534,
          "description": "The port range end for the external endpoint."
        }
      },
      "description": "Provides information about NAT configuration on the default public Load Balancer for the node type."
    },
    "NodeTypeUpdateParameters": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Node type update parameters",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "description": "The node type sku.",
          "type": "object",
          "required": [
            "capacity"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "The sku name. <br /><br />Name is internally generated and is used in auto-scale scenarios.<br /> Property does not allow to be changed to other values than generated.<br /> To avoid deployment errors please omit the property."
            },
            "tier": {
              "type": "string",
              "description": "Specifies the tier of the node type. <br /><br /> Possible Values:<br /> **Standard**"
            },
            "capacity": {
              "type": "integer",
              "format": "int32",
              "description": "The number of nodes in the node type.<br /><br />If present in request it will override properties.vmInstanceCount.",
              "minimum": 1,
              "maximum": 2147483647
            }
          }
        }
      },
      "description": "Node type update request"
    },
    "NodeTypeSku": {
      "type": "object",
      "required": [
        "capacity"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The sku name. <br /><br />Name is internally generated and is used in auto-scale scenarios.<br /> Property does not allow to be changed to other values than generated.<br /> To avoid deployment errors please omit the property."
        },
        "tier": {
          "type": "string",
          "description": "Specifies the tier of the node type. <br /><br /> Possible Values:<br /> **Standard**"
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "The number of nodes in the node type.<br /><br />If present in request it will override properties.vmInstanceCount.",
          "minimum": 1,
          "maximum": 2147483647
        }
      },
      "description": "Describes a node type sku."
    },
    "NodeTypeSkuCapacity": {
      "type": "object",
      "properties": {
        "minimum": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "Lowest permitted node count in a node type."
        },
        "maximum": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "Highest permitted node count in a node type."
        },
        "default": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "Default node count in a node type."
        },
        "scaleType": {
          "readOnly": true,
          "description": "Node type capacity scale type.",
          "type": "string",
          "enum": [
            "None",
            "Manual",
            "Automatic"
          ],
          "default": "None",
          "x-ms-enum": {
            "name": "NodeTypeSkuScaleType",
            "modelAsString": true,
            "values": [
              {
                "value": "None",
                "description": "Node count is not adjustable in any way (e.g. it is fixed)."
              },
              {
                "value": "Manual",
                "description": "The user must manually scale out/in."
              },
              {
                "value": "Automatic",
                "description": "Automatic scale is allowed."
              }
            ]
          }
        }
      },
      "description": "Provides information about how node type can be scaled."
    },
    "NodeTypeSkuScaleType": {
      "type": "string",
      "description": "Node type capacity scale type.\n",
      "enum": [
        "None",
        "Manual",
        "Automatic"
      ],
      "default": "None",
      "x-ms-enum": {
        "name": "NodeTypeSkuScaleType",
        "modelAsString": true,
        "values": [
          {
            "value": "None",
            "description": "Node count is not adjustable in any way (e.g. it is fixed)."
          },
          {
            "value": "Manual",
            "description": "The user must manually scale out/in."
          },
          {
            "value": "Automatic",
            "description": "Automatic scale is allowed."
          }
        ]
      }
    },
    "NodeTypeAvailableSku": {
      "type": "object",
      "properties": {
        "resourceType": {
          "type": "string",
          "readOnly": true,
          "description": "The type of resource the sku applies to.  <br /><br />Value: Microsoft.ServiceFabric/managedClusters/nodeTypes."
        },
        "sku": {
          "description": "The supported SKU for a for node type.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The sku name.",
              "readOnly": true
            },
            "tier": {
              "type": "string",
              "description": "Specifies the tier of the node type. <br /><br /> Possible Values:<br /> **Standard**",
              "readOnly": true
            }
          }
        },
        "capacity": {
          "description": "Provides information about how the node count can be scaled.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "minimum": {
              "type": "integer",
              "format": "int32",
              "readOnly": true,
              "description": "Lowest permitted node count in a node type."
            },
            "maximum": {
              "type": "integer",
              "format": "int32",
              "readOnly": true,
              "description": "Highest permitted node count in a node type."
            },
            "default": {
              "type": "integer",
              "format": "int32",
              "readOnly": true,
              "description": "Default node count in a node type."
            },
            "scaleType": {
              "readOnly": true,
              "description": "Node type capacity scale type.",
              "type": "string",
              "enum": [
                "None",
                "Manual",
                "Automatic"
              ],
              "default": "None",
              "x-ms-enum": {
                "name": "NodeTypeSkuScaleType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "None",
                    "description": "Node count is not adjustable in any way (e.g. it is fixed)."
                  },
                  {
                    "value": "Manual",
                    "description": "The user must manually scale out/in."
                  },
                  {
                    "value": "Automatic",
                    "description": "Automatic scale is allowed."
                  }
                ]
              }
            }
          }
        }
      },
      "description": "Defines the type of sku available for a node type"
    },
    "NodeTypeSupportedSku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The sku name.",
          "readOnly": true
        },
        "tier": {
          "type": "string",
          "description": "Specifies the tier of the node type. <br /><br /> Possible Values:<br /> **Standard**",
          "readOnly": true
        }
      },
      "description": "Describes a node type supported sku."
    },
    "NodeTypeListSkuResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "title": "Node type sku list value.",
          "description": "The list of available node type SKUs.",
          "items": {
            "type": "object",
            "properties": {
              "resourceType": {
                "type": "string",
                "readOnly": true,
                "description": "The type of resource the sku applies to.  <br /><br />Value: Microsoft.ServiceFabric/managedClusters/nodeTypes."
              },
              "sku": {
                "description": "The supported SKU for a for node type.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The sku name.",
                    "readOnly": true
                  },
                  "tier": {
                    "type": "string",
                    "description": "Specifies the tier of the node type. <br /><br /> Possible Values:<br /> **Standard**",
                    "readOnly": true
                  }
                }
              },
              "capacity": {
                "description": "Provides information about how the node count can be scaled.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "minimum": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "description": "Lowest permitted node count in a node type."
                  },
                  "maximum": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "description": "Highest permitted node count in a node type."
                  },
                  "default": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "description": "Default node count in a node type."
                  },
                  "scaleType": {
                    "readOnly": true,
                    "description": "Node type capacity scale type.",
                    "type": "string",
                    "enum": [
                      "None",
                      "Manual",
                      "Automatic"
                    ],
                    "default": "None",
                    "x-ms-enum": {
                      "name": "NodeTypeSkuScaleType",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "None",
                          "description": "Node count is not adjustable in any way (e.g. it is fixed)."
                        },
                        {
                          "value": "Manual",
                          "description": "The user must manually scale out/in."
                        },
                        {
                          "value": "Automatic",
                          "description": "Automatic scale is allowed."
                        }
                      ]
                    }
                  }
                }
              }
            },
            "description": "Defines the type of sku available for a node type"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "Node type available sku list results"
    },
    "SubResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Azure resource identifier."
        }
      },
      "description": "Azure resource identifier.",
      "x-ms-azure-resource": true
    },
    "VaultCertificate": {
      "type": "object",
      "required": [
        "certificateUrl",
        "certificateStore"
      ],
      "properties": {
        "certificateUrl": {
          "type": "string",
          "description": "This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  \"data\":\"<Base64-encoded-certificate>\",<br>  \"dataType\":\"pfx\",<br>  \"password\":\"<pfx-file-password>\"<br>}"
        },
        "certificateStore": {
          "type": "string",
          "description": "For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name <UppercaseThumbprint>.crt for the X509 certificate file and <UppercaseThumbprint>.prv for private key. Both of these files are .pem formatted."
        }
      },
      "description": "Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM."
    },
    "VaultSecretGroup": {
      "type": "object",
      "required": [
        "sourceVault",
        "vaultCertificates"
      ],
      "properties": {
        "sourceVault": {
          "description": "The relative URL of the Key Vault containing all of the certificates in VaultCertificates.",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Azure resource identifier."
            }
          },
          "x-ms-azure-resource": true
        },
        "vaultCertificates": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "certificateUrl",
              "certificateStore"
            ],
            "properties": {
              "certificateUrl": {
                "type": "string",
                "description": "This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  \"data\":\"<Base64-encoded-certificate>\",<br>  \"dataType\":\"pfx\",<br>  \"password\":\"<pfx-file-password>\"<br>}"
              },
              "certificateStore": {
                "type": "string",
                "description": "For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name <UppercaseThumbprint>.crt for the X509 certificate file and <UppercaseThumbprint>.prv for private key. Both of these files are .pem formatted."
              }
            },
            "description": "Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM."
          },
          "x-ms-identifiers": [],
          "description": "The list of key vault references in SourceVault which contain certificates."
        }
      },
      "description": "Specifies set of certificates that should be installed onto the virtual machines."
    },
    "VmImagePlan": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The plan ID."
        },
        "product": {
          "type": "string",
          "description": "Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element."
        },
        "promotionCode": {
          "type": "string",
          "description": "The promotion code."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher ID."
        }
      },
      "description": "Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started ->. Enter any required information and then click Save."
    },
    "VmManagedIdentity": {
      "type": "object",
      "properties": {
        "userAssignedIdentities": {
          "type": "array",
          "description": "The list of user identities associated with the virtual machine scale set under the node type. Each entry will be an ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Identities for the virtual machine scale set under the node type."
    },
    "VmssDataDisk": {
      "type": "object",
      "required": [
        "lun",
        "diskSizeGB",
        "diskType",
        "diskLetter"
      ],
      "properties": {
        "lun": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "description": "Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM. Lun 0 is reserved for the service fabric data disk."
        },
        "diskSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "Disk size for each vm in the node type in GBs."
        },
        "diskType": {
          "description": "Managed data disk type. Specifies the storage account type for the managed disk",
          "type": "string",
          "enum": [
            "Standard_LRS",
            "StandardSSD_LRS",
            "Premium_LRS"
          ],
          "default": "StandardSSD_LRS",
          "x-ms-enum": {
            "name": "DiskType",
            "modelAsString": true,
            "values": [
              {
                "value": "Standard_LRS",
                "description": "Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access."
              },
              {
                "value": "StandardSSD_LRS",
                "description": "Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test."
              },
              {
                "value": "Premium_LRS",
                "description": "Premium SSD locally redundant storage. Best for production and performance sensitive workloads."
              }
            ]
          }
        },
        "diskLetter": {
          "type": "string",
          "pattern": "^[a-zA-Z]{1}$",
          "description": "Managed data disk letter. It can not use the reserved letter C or D and it can not change after created."
        }
      },
      "description": "Managed data disk description."
    },
    "VmSetupAction": {
      "type": "string",
      "description": "action to be performed on the vms before bootstrapping the service fabric runtime.",
      "enum": [
        "EnableContainers",
        "EnableHyperV"
      ],
      "x-ms-enum": {
        "name": "VmSetupAction",
        "modelAsString": true,
        "values": [
          {
            "value": "EnableContainers",
            "description": "Enable windows containers feature."
          },
          {
            "value": "EnableHyperV",
            "description": "Enables windows HyperV feature."
          }
        ]
      }
    },
    "VMSSExtension": {
      "type": "object",
      "required": [
        "name",
        "properties"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the extension."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Describes the properties of a Virtual Machine Scale Set Extension.",
          "type": "object",
          "required": [
            "publisher",
            "type",
            "typeHandlerVersion"
          ],
          "properties": {
            "publisher": {
              "type": "string",
              "description": "The name of the extension handler publisher."
            },
            "type": {
              "type": "string",
              "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
            },
            "typeHandlerVersion": {
              "type": "string",
              "description": "Specifies the version of the script handler."
            },
            "autoUpgradeMinorVersion": {
              "type": "boolean",
              "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
            },
            "settings": {
              "type": "object",
              "description": "Json formatted public settings for the extension."
            },
            "protectedSettings": {
              "type": "object",
              "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
            },
            "forceUpdateTag": {
              "type": "string",
              "description": "If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed."
            },
            "provisionAfterExtensions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Collection of extension names after which this extension needs to be provisioned."
            },
            "provisioningState": {
              "readOnly": true,
              "type": "string",
              "description": "The provisioning state, which only appears in the response."
            },
            "enableAutomaticUpgrade": {
              "type": "boolean",
              "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available."
            },
            "setupOrder": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Vm extension setup order.\n",
                "enum": [
                  "BeforeSFRuntime"
                ],
                "x-ms-enum": {
                  "name": "VmssExtensionSetupOrder",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "BeforeSFRuntime",
                      "description": "Indicates that the vm extension should run before the service fabric runtime starts."
                    }
                  ]
                }
              },
              "x-ms-identifiers": [],
              "description": "Indicates the setup order for the extension."
            }
          }
        }
      },
      "description": "Specifies set of extensions that should be installed onto the virtual machines."
    },
    "VMSSExtensionProperties": {
      "type": "object",
      "required": [
        "publisher",
        "type",
        "typeHandlerVersion"
      ],
      "properties": {
        "publisher": {
          "type": "string",
          "description": "The name of the extension handler publisher."
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
        },
        "typeHandlerVersion": {
          "type": "string",
          "description": "Specifies the version of the script handler."
        },
        "autoUpgradeMinorVersion": {
          "type": "boolean",
          "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
        },
        "settings": {
          "type": "object",
          "description": "Json formatted public settings for the extension."
        },
        "protectedSettings": {
          "type": "object",
          "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
        },
        "forceUpdateTag": {
          "type": "string",
          "description": "If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed."
        },
        "provisionAfterExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Collection of extension names after which this extension needs to be provisioned."
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state, which only appears in the response."
        },
        "enableAutomaticUpgrade": {
          "type": "boolean",
          "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available."
        },
        "setupOrder": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Vm extension setup order.\n",
            "enum": [
              "BeforeSFRuntime"
            ],
            "x-ms-enum": {
              "name": "VmssExtensionSetupOrder",
              "modelAsString": true,
              "values": [
                {
                  "value": "BeforeSFRuntime",
                  "description": "Indicates that the vm extension should run before the service fabric runtime starts."
                }
              ]
            }
          },
          "x-ms-identifiers": [],
          "description": "Indicates the setup order for the extension."
        }
      },
      "description": "Describes the properties of a Virtual Machine Scale Set Extension."
    },
    "VmssExtensionSetupOrder": {
      "type": "string",
      "description": "Vm extension setup order.\n",
      "enum": [
        "BeforeSFRuntime"
      ],
      "x-ms-enum": {
        "name": "VmssExtensionSetupOrder",
        "modelAsString": true,
        "values": [
          {
            "value": "BeforeSFRuntime",
            "description": "Indicates that the vm extension should run before the service fabric runtime starts."
          }
        ]
      }
    }
  },
  "parameters": {
    "api-version": {
      "name": "api-version",
      "in": "query",
      "description": "The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2024-04-01\" for this specification.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client"
    },
    "applicationName": {
      "name": "applicationName",
      "in": "path",
      "description": "The name of the application resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "applicationTypeName": {
      "name": "applicationTypeName",
      "in": "path",
      "description": "The name of the application type name resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "clusterNameParameter": {
      "name": "clusterName",
      "in": "path",
      "description": "The name of the cluster resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "serviceName": {
      "name": "serviceName",
      "in": "path",
      "description": "The name of the service resource in the format of {applicationName}~{serviceName}.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "subscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The customer subscription identifier.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client"
    },
    "version": {
      "name": "version",
      "in": "path",
      "description": "The application type version.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "clusterVersion": {
      "name": "clusterVersion",
      "in": "path",
      "description": "The cluster code version.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "environment": {
      "name": "environment",
      "in": "path",
      "description": "The operating system of the cluster. The default means all.",
      "required": true,
      "type": "string",
      "enum": [
        "Windows"
      ],
      "x-ms-parameter-location": "method",
      "x-ms-enum": {
        "name": "ManagedClusterVersionEnvironment",
        "modelAsString": true,
        "values": [
          {
            "value": "Windows",
            "description": "Windows."
          }
        ]
      }
    },
    "locationForClusterCodeVersions": {
      "name": "location",
      "in": "path",
      "description": "The location for the cluster code versions. This is different from cluster location.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "operationId": {
      "name": "operationId",
      "in": "path",
      "description": "operation identifier.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "vmSize": {
      "name": "vmSize",
      "in": "path",
      "description": "VM Size name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "nodeTypeNameParameter": {
      "name": "nodeTypeName",
      "in": "path",
      "description": "The name of the node type.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}