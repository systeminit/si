{
  "swagger": "2.0",
  "info": {
    "title": "Azure databox",
    "version": "2025-07-01",
    "description": "Azure databox service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.DataBox/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The paginated list of connected cluster API operations.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The list of connected cluster API operations.",
                  "items": {
                    "type": "object",
                    "description": "Operation entity.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the operation. Format: {resourceProviderNamespace}/{resourceType}/{read|write|delete|action}",
                        "readOnly": true
                      },
                      "display": {
                        "description": "Operation display values.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "description": "Provider name."
                          },
                          "resource": {
                            "type": "string",
                            "description": "Resource name."
                          },
                          "operation": {
                            "type": "string",
                            "description": "Localized name of the operation for display purpose."
                          },
                          "description": {
                            "type": "string",
                            "description": "Localized description of the operation for display purpose."
                          }
                        }
                      },
                      "properties": {
                        "description": "Operation properties.",
                        "readOnly": true,
                        "x-ms-client-flatten": true,
                        "type": "object"
                      },
                      "origin": {
                        "type": "string",
                        "description": "Origin of the operation. Can be : user|system|user,system",
                        "readOnly": true
                      },
                      "isDataAction": {
                        "type": "boolean",
                        "description": "Indicates whether the operation is a data action"
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "type": "string",
                  "description": "The link to fetch the next page of connected cluster API operations."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataBox/jobs": {
      "get": {
        "operationId": "Jobs_List",
        "tags": [
          "JobResources"
        ],
        "description": "Lists all the jobs available under the subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "$skipToken is supported on Get list of jobs, which provides the next page in the list of jobs.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/JobResourceList"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataBox/locations/{location}/regionConfiguration": {
      "post": {
        "operationId": "Service_RegionConfiguration",
        "description": "This API provides configuration details specific to given region/location at Subscription level.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "regionConfigurationRequest",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Request body to get the configuration for the region.",
              "properties": {
                "scheduleAvailabilityRequest": {
                  "description": "Request body to get the availability for scheduling orders.",
                  "type": "object",
                  "properties": {
                    "storageLocation": {
                      "type": "string",
                      "description": "Location for data transfer. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01"
                    },
                    "skuName": {
                      "description": "Sku Name for which the order is to be scheduled.",
                      "type": "string",
                      "enum": [
                        "DataBox",
                        "DataBoxDisk",
                        "DataBoxHeavy",
                        "DataBoxCustomerDisk"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "DataBox",
                            "value": "DataBox",
                            "description": "Data Box."
                          },
                          {
                            "name": "DataBoxDisk",
                            "value": "DataBoxDisk",
                            "description": "Data Box Disk."
                          },
                          {
                            "name": "DataBoxHeavy",
                            "value": "DataBoxHeavy",
                            "description": "Data Box Heavy."
                          },
                          {
                            "name": "DataBoxCustomerDisk",
                            "value": "DataBoxCustomerDisk",
                            "description": "Data Box Customer Disk"
                          }
                        ]
                      }
                    },
                    "country": {
                      "type": "string",
                      "description": "Country in which storage location should be supported."
                    },
                    "model": {
                      "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
                      "type": "string",
                      "enum": [
                        "DataBox",
                        "DataBoxDisk",
                        "DataBoxHeavy",
                        "DataBoxCustomerDisk",
                        "AzureDataBox120",
                        "AzureDataBox525"
                      ],
                      "x-ms-enum": {
                        "name": "ModelName",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "DataBox",
                            "value": "DataBox",
                            "description": "Data Box."
                          },
                          {
                            "name": "DataBoxDisk",
                            "value": "DataBoxDisk",
                            "description": "Data Box Disk."
                          },
                          {
                            "name": "DataBoxHeavy",
                            "value": "DataBoxHeavy",
                            "description": "Data Box Heavy."
                          },
                          {
                            "name": "DataBoxCustomerDisk",
                            "value": "DataBoxCustomerDisk",
                            "description": "Data Box Customer Disk"
                          },
                          {
                            "name": "AzureDataBox120",
                            "value": "AzureDataBox120",
                            "description": "Data Box V2 with 120TB usable capacity."
                          },
                          {
                            "name": "AzureDataBox525",
                            "value": "AzureDataBox525",
                            "description": "Data Box V2 with 525TB usable capacity."
                          }
                        ]
                      }
                    }
                  },
                  "discriminator": "skuName",
                  "required": [
                    "storageLocation",
                    "skuName"
                  ]
                },
                "transportAvailabilityRequest": {
                  "description": "Request body to get the transport availability for given sku.",
                  "type": "object",
                  "properties": {
                    "skuName": {
                      "description": "Type of the device.",
                      "type": "string",
                      "enum": [
                        "DataBox",
                        "DataBoxDisk",
                        "DataBoxHeavy",
                        "DataBoxCustomerDisk"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "DataBox",
                            "value": "DataBox",
                            "description": "Data Box."
                          },
                          {
                            "name": "DataBoxDisk",
                            "value": "DataBoxDisk",
                            "description": "Data Box Disk."
                          },
                          {
                            "name": "DataBoxHeavy",
                            "value": "DataBoxHeavy",
                            "description": "Data Box Heavy."
                          },
                          {
                            "name": "DataBoxCustomerDisk",
                            "value": "DataBoxCustomerDisk",
                            "description": "Data Box Customer Disk"
                          }
                        ]
                      }
                    },
                    "model": {
                      "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
                      "type": "string",
                      "enum": [
                        "DataBox",
                        "DataBoxDisk",
                        "DataBoxHeavy",
                        "DataBoxCustomerDisk",
                        "AzureDataBox120",
                        "AzureDataBox525"
                      ],
                      "x-ms-enum": {
                        "name": "ModelName",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "DataBox",
                            "value": "DataBox",
                            "description": "Data Box."
                          },
                          {
                            "name": "DataBoxDisk",
                            "value": "DataBoxDisk",
                            "description": "Data Box Disk."
                          },
                          {
                            "name": "DataBoxHeavy",
                            "value": "DataBoxHeavy",
                            "description": "Data Box Heavy."
                          },
                          {
                            "name": "DataBoxCustomerDisk",
                            "value": "DataBoxCustomerDisk",
                            "description": "Data Box Customer Disk"
                          },
                          {
                            "name": "AzureDataBox120",
                            "value": "AzureDataBox120",
                            "description": "Data Box V2 with 120TB usable capacity."
                          },
                          {
                            "name": "AzureDataBox525",
                            "value": "AzureDataBox525",
                            "description": "Data Box V2 with 525TB usable capacity."
                          }
                        ]
                      }
                    }
                  }
                },
                "datacenterAddressRequest": {
                  "description": "Request body to get the datacenter address for given sku.",
                  "type": "object",
                  "properties": {
                    "storageLocation": {
                      "type": "string",
                      "description": "Storage location. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01"
                    },
                    "skuName": {
                      "description": "Sku Name for which the data center address requested.",
                      "type": "string",
                      "enum": [
                        "DataBox",
                        "DataBoxDisk",
                        "DataBoxHeavy",
                        "DataBoxCustomerDisk"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "DataBox",
                            "value": "DataBox",
                            "description": "Data Box."
                          },
                          {
                            "name": "DataBoxDisk",
                            "value": "DataBoxDisk",
                            "description": "Data Box Disk."
                          },
                          {
                            "name": "DataBoxHeavy",
                            "value": "DataBoxHeavy",
                            "description": "Data Box Heavy."
                          },
                          {
                            "name": "DataBoxCustomerDisk",
                            "value": "DataBoxCustomerDisk",
                            "description": "Data Box Customer Disk"
                          }
                        ]
                      }
                    },
                    "model": {
                      "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
                      "type": "string",
                      "enum": [
                        "DataBox",
                        "DataBoxDisk",
                        "DataBoxHeavy",
                        "DataBoxCustomerDisk",
                        "AzureDataBox120",
                        "AzureDataBox525"
                      ],
                      "x-ms-enum": {
                        "name": "ModelName",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "DataBox",
                            "value": "DataBox",
                            "description": "Data Box."
                          },
                          {
                            "name": "DataBoxDisk",
                            "value": "DataBoxDisk",
                            "description": "Data Box Disk."
                          },
                          {
                            "name": "DataBoxHeavy",
                            "value": "DataBoxHeavy",
                            "description": "Data Box Heavy."
                          },
                          {
                            "name": "DataBoxCustomerDisk",
                            "value": "DataBoxCustomerDisk",
                            "description": "Data Box Customer Disk"
                          },
                          {
                            "name": "AzureDataBox120",
                            "value": "AzureDataBox120",
                            "description": "Data Box V2 with 120TB usable capacity."
                          },
                          {
                            "name": "AzureDataBox525",
                            "value": "AzureDataBox525",
                            "description": "Data Box V2 with 525TB usable capacity."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "storageLocation",
                    "skuName"
                  ]
                },
                "deviceCapabilityRequest": {
                  "description": "Request body to get the device capabilities for a given sku.",
                  "type": "object",
                  "properties": {
                    "skuName": {
                      "description": "Type of the device.",
                      "type": "string",
                      "enum": [
                        "DataBox",
                        "DataBoxDisk",
                        "DataBoxHeavy",
                        "DataBoxCustomerDisk"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "DataBox",
                            "value": "DataBox",
                            "description": "Data Box."
                          },
                          {
                            "name": "DataBoxDisk",
                            "value": "DataBoxDisk",
                            "description": "Data Box Disk."
                          },
                          {
                            "name": "DataBoxHeavy",
                            "value": "DataBoxHeavy",
                            "description": "Data Box Heavy."
                          },
                          {
                            "name": "DataBoxCustomerDisk",
                            "value": "DataBoxCustomerDisk",
                            "description": "Data Box Customer Disk"
                          }
                        ]
                      }
                    },
                    "model": {
                      "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
                      "type": "string",
                      "enum": [
                        "DataBox",
                        "DataBoxDisk",
                        "DataBoxHeavy",
                        "DataBoxCustomerDisk",
                        "AzureDataBox120",
                        "AzureDataBox525"
                      ],
                      "x-ms-enum": {
                        "name": "ModelName",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "DataBox",
                            "value": "DataBox",
                            "description": "Data Box."
                          },
                          {
                            "name": "DataBoxDisk",
                            "value": "DataBoxDisk",
                            "description": "Data Box Disk."
                          },
                          {
                            "name": "DataBoxHeavy",
                            "value": "DataBoxHeavy",
                            "description": "Data Box Heavy."
                          },
                          {
                            "name": "DataBoxCustomerDisk",
                            "value": "DataBoxCustomerDisk",
                            "description": "Data Box Customer Disk"
                          },
                          {
                            "name": "AzureDataBox120",
                            "value": "AzureDataBox120",
                            "description": "Data Box V2 with 120TB usable capacity."
                          },
                          {
                            "name": "AzureDataBox525",
                            "value": "AzureDataBox525",
                            "description": "Data Box V2 with 525TB usable capacity."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Configuration response specific to a region.",
              "properties": {
                "scheduleAvailabilityResponse": {
                  "description": "Schedule availability for given sku in a region.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "availableDates": {
                      "type": "array",
                      "description": "List of dates available to schedule",
                      "items": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "readOnly": true
                    }
                  }
                },
                "transportAvailabilityResponse": {
                  "description": "Transport options available for given sku in a region.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "transportAvailabilityDetails": {
                      "type": "array",
                      "description": "List of transport availability details for given region",
                      "items": {
                        "type": "object",
                        "description": "Transport options availability details for given region.",
                        "properties": {
                          "shipmentType": {
                            "description": "Transport Shipment Type supported for given region.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "CustomerManaged",
                              "MicrosoftManaged"
                            ],
                            "x-ms-enum": {
                              "name": "TransportShipmentTypes",
                              "modelAsString": false,
                              "values": [
                                {
                                  "name": "CustomerManaged",
                                  "value": "CustomerManaged",
                                  "description": "Shipment Logistics is handled by the customer."
                                },
                                {
                                  "name": "MicrosoftManaged",
                                  "value": "MicrosoftManaged",
                                  "description": "Shipment Logistics is handled by Microsoft."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                },
                "datacenterAddressResponse": {
                  "description": "Datacenter address for given sku in a region.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "datacenterAddressType": {
                      "description": "Data center address type",
                      "type": "string",
                      "enum": [
                        "DatacenterAddressLocation",
                        "DatacenterAddressInstruction"
                      ],
                      "x-ms-enum": {
                        "name": "DatacenterAddressType",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "DatacenterAddressLocation",
                            "value": "DatacenterAddressLocation",
                            "description": "Data center address location."
                          },
                          {
                            "name": "DatacenterAddressInstruction",
                            "value": "DatacenterAddressInstruction",
                            "description": "Data center address instruction."
                          }
                        ]
                      }
                    },
                    "supportedCarriersForReturnShipment": {
                      "type": "array",
                      "description": "List of supported carriers for return shipment.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "dataCenterAzureLocation": {
                      "type": "string",
                      "description": "Azure Location where the Data Center serves primarily.",
                      "readOnly": true
                    }
                  },
                  "discriminator": "datacenterAddressType",
                  "required": [
                    "datacenterAddressType"
                  ]
                },
                "deviceCapabilityResponse": {
                  "description": "Device capabilities available for a given sku in a region.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "deviceCapabilityDetails": {
                      "type": "array",
                      "description": "List of device capabilities available for a given region and a given sku",
                      "items": {
                        "type": "object",
                        "description": "Device capability details for a given sku for a given region.",
                        "properties": {
                          "hardwareEncryption": {
                            "description": "Hardware encryption support for a given sku for a given region.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "HardwareEncryption",
                              "modelAsString": false,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "Hardware-based encryption is enabled."
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "Hardware-based encryption is disabled."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataBox/locations/{location}/validateAddress": {
      "post": {
        "operationId": "Service_ValidateAddress",
        "description": "[DEPRECATED NOTICE: This operation will soon be removed]. This method validates the customer shipping address and provide alternate addresses if any.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "validateAddress",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The requirements to validate customer address where the device needs to be shipped.",
              "properties": {
                "validationType": {
                  "description": "Identifies the type of validation request.",
                  "type": "string",
                  "enum": [
                    "ValidateAddress",
                    "ValidateSubscriptionIsAllowedToCreateJob",
                    "ValidatePreferences",
                    "ValidateCreateOrderLimit",
                    "ValidateSkuAvailability",
                    "ValidateDataTransferDetails"
                  ],
                  "x-ms-enum": {
                    "name": "ValidationInputDiscriminator",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "ValidateAddress",
                        "value": "ValidateAddress",
                        "description": "Identify request and response of address validation."
                      },
                      {
                        "name": "ValidateSubscriptionIsAllowedToCreateJob",
                        "value": "ValidateSubscriptionIsAllowedToCreateJob",
                        "description": "Identify request and response for validation of subscription permission to create job."
                      },
                      {
                        "name": "ValidatePreferences",
                        "value": "ValidatePreferences",
                        "description": "Identify request and response of preference validation."
                      },
                      {
                        "name": "ValidateCreateOrderLimit",
                        "value": "ValidateCreateOrderLimit",
                        "description": "Identify request and response of create order limit for subscription validation."
                      },
                      {
                        "name": "ValidateSkuAvailability",
                        "value": "ValidateSkuAvailability",
                        "description": "Identify request and response of active job limit for sku availability."
                      },
                      {
                        "name": "ValidateDataTransferDetails",
                        "value": "ValidateDataTransferDetails",
                        "description": "Identify request and response of data transfer details validation."
                      }
                    ]
                  }
                },
                "shippingAddress": {
                  "description": "Shipping address of the customer.",
                  "type": "object",
                  "properties": {
                    "streetAddress1": {
                      "type": "string",
                      "description": "Street Address line 1."
                    },
                    "streetAddress2": {
                      "type": "string",
                      "description": "Street Address line 2."
                    },
                    "streetAddress3": {
                      "type": "string",
                      "description": "Street Address line 3."
                    },
                    "city": {
                      "type": "string",
                      "description": "Name of the City."
                    },
                    "stateOrProvince": {
                      "type": "string",
                      "description": "Name of the State or Province."
                    },
                    "country": {
                      "type": "string",
                      "description": "Name of the Country."
                    },
                    "postalCode": {
                      "type": "string",
                      "description": "Postal code."
                    },
                    "zipExtendedCode": {
                      "type": "string",
                      "description": "Extended Zip Code."
                    },
                    "companyName": {
                      "type": "string",
                      "description": "Name of the company."
                    },
                    "addressType": {
                      "type": "string",
                      "description": "Type of address.",
                      "default": "None",
                      "enum": [
                        "None",
                        "Residential",
                        "Commercial"
                      ],
                      "x-ms-enum": {
                        "name": "AddressType",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "None",
                            "value": "None",
                            "description": "Address type not known."
                          },
                          {
                            "name": "Residential",
                            "value": "Residential",
                            "description": "Residential Address."
                          },
                          {
                            "name": "Commercial",
                            "value": "Commercial",
                            "description": "Commercial Address."
                          }
                        ]
                      }
                    },
                    "skipAddressValidation": {
                      "type": "boolean",
                      "description": "Flag to indicate if customer has chosen to skip default address validation"
                    },
                    "taxIdentificationNumber": {
                      "type": "string",
                      "description": "Tax Identification Number"
                    }
                  },
                  "required": [
                    "streetAddress1",
                    "country"
                  ]
                },
                "deviceType": {
                  "description": "Device type to be used for the job.",
                  "type": "string",
                  "enum": [
                    "DataBox",
                    "DataBoxDisk",
                    "DataBoxHeavy",
                    "DataBoxCustomerDisk"
                  ],
                  "x-ms-enum": {
                    "name": "SkuName",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "DataBox",
                        "value": "DataBox",
                        "description": "Data Box."
                      },
                      {
                        "name": "DataBoxDisk",
                        "value": "DataBoxDisk",
                        "description": "Data Box Disk."
                      },
                      {
                        "name": "DataBoxHeavy",
                        "value": "DataBoxHeavy",
                        "description": "Data Box Heavy."
                      },
                      {
                        "name": "DataBoxCustomerDisk",
                        "value": "DataBoxCustomerDisk",
                        "description": "Data Box Customer Disk"
                      }
                    ]
                  }
                },
                "transportPreferences": {
                  "description": "Preferences related to the shipment logistics of the sku.",
                  "type": "object",
                  "properties": {
                    "preferredShipmentType": {
                      "description": "Indicates Shipment Logistics type that the customer preferred.",
                      "type": "string",
                      "enum": [
                        "CustomerManaged",
                        "MicrosoftManaged"
                      ],
                      "x-ms-enum": {
                        "name": "TransportShipmentTypes",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "CustomerManaged",
                            "value": "CustomerManaged",
                            "description": "Shipment Logistics is handled by the customer."
                          },
                          {
                            "name": "MicrosoftManaged",
                            "value": "MicrosoftManaged",
                            "description": "Shipment Logistics is handled by Microsoft."
                          }
                        ]
                      }
                    },
                    "isUpdated": {
                      "type": "boolean",
                      "description": "Read only property which indicates whether transport preferences has been updated or not after device is prepared.",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "preferredShipmentType"
                  ]
                },
                "model": {
                  "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
                  "type": "string",
                  "enum": [
                    "DataBox",
                    "DataBoxDisk",
                    "DataBoxHeavy",
                    "DataBoxCustomerDisk",
                    "AzureDataBox120",
                    "AzureDataBox525"
                  ],
                  "x-ms-enum": {
                    "name": "ModelName",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "DataBox",
                        "value": "DataBox",
                        "description": "Data Box."
                      },
                      {
                        "name": "DataBoxDisk",
                        "value": "DataBoxDisk",
                        "description": "Data Box Disk."
                      },
                      {
                        "name": "DataBoxHeavy",
                        "value": "DataBoxHeavy",
                        "description": "Data Box Heavy."
                      },
                      {
                        "name": "DataBoxCustomerDisk",
                        "value": "DataBoxCustomerDisk",
                        "description": "Data Box Customer Disk"
                      },
                      {
                        "name": "AzureDataBox120",
                        "value": "AzureDataBox120",
                        "description": "Data Box V2 with 120TB usable capacity."
                      },
                      {
                        "name": "AzureDataBox525",
                        "value": "AzureDataBox525",
                        "description": "Data Box V2 with 525TB usable capacity."
                      }
                    ]
                  }
                }
              },
              "required": [
                "shippingAddress",
                "deviceType"
              ],
              "x-ms-discriminator-value": "ValidateAddress"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AddressValidationOutput"
            }
          }
        },
        "deprecated": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataBox/locations/{location}/validateInputs": {
      "post": {
        "operationId": "Service_ValidateInputs",
        "description": "This method does all necessary pre-job creation validation under subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "validationRequest",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Minimum request requirement of any validation category.",
              "properties": {
                "validationCategory": {
                  "type": "string",
                  "description": "Identify the nature of validation.",
                  "enum": [
                    "JobCreationValidation"
                  ],
                  "x-ms-enum": {
                    "modelAsString": false
                  }
                },
                "individualRequestDetails": {
                  "type": "array",
                  "description": "List of request details contain validationType and its request as key and value respectively.",
                  "items": {
                    "type": "object",
                    "description": "Minimum fields that must be present in any type of validation request.",
                    "properties": {
                      "validationType": {
                        "description": "Identifies the type of validation request.",
                        "type": "string",
                        "enum": [
                          "ValidateAddress",
                          "ValidateSubscriptionIsAllowedToCreateJob",
                          "ValidatePreferences",
                          "ValidateCreateOrderLimit",
                          "ValidateSkuAvailability",
                          "ValidateDataTransferDetails"
                        ],
                        "x-ms-enum": {
                          "name": "ValidationInputDiscriminator",
                          "modelAsString": false,
                          "values": [
                            {
                              "name": "ValidateAddress",
                              "value": "ValidateAddress",
                              "description": "Identify request and response of address validation."
                            },
                            {
                              "name": "ValidateSubscriptionIsAllowedToCreateJob",
                              "value": "ValidateSubscriptionIsAllowedToCreateJob",
                              "description": "Identify request and response for validation of subscription permission to create job."
                            },
                            {
                              "name": "ValidatePreferences",
                              "value": "ValidatePreferences",
                              "description": "Identify request and response of preference validation."
                            },
                            {
                              "name": "ValidateCreateOrderLimit",
                              "value": "ValidateCreateOrderLimit",
                              "description": "Identify request and response of create order limit for subscription validation."
                            },
                            {
                              "name": "ValidateSkuAvailability",
                              "value": "ValidateSkuAvailability",
                              "description": "Identify request and response of active job limit for sku availability."
                            },
                            {
                              "name": "ValidateDataTransferDetails",
                              "value": "ValidateDataTransferDetails",
                              "description": "Identify request and response of data transfer details validation."
                            }
                          ]
                        }
                      }
                    },
                    "discriminator": "validationType",
                    "required": [
                      "validationType"
                    ]
                  }
                }
              },
              "discriminator": "validationCategory",
              "required": [
                "validationCategory",
                "individualRequestDetails"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ValidationResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs": {
      "get": {
        "operationId": "Jobs_ListByResourceGroup",
        "tags": [
          "JobResources"
        ],
        "description": "Lists all the jobs available under the given resource group.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "$skipToken is supported on Get list of jobs, which provides the next page in the list of jobs.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/JobResourceList"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}": {
      "get": {
        "operationId": "Jobs_Get",
        "tags": [
          "JobResources"
        ],
        "description": "Gets information about the specified job.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "The name of the job Resource within the specified resource group. job names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[-\\w\\.]+$"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "$expand is supported on details parameter for job, which provides details on the job stages.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/JobResource"
            }
          }
        }
      },
      "put": {
        "operationId": "Jobs_Create",
        "tags": [
          "JobResources"
        ],
        "description": "Creates a new job with the specified parameters. Existing job cannot be updated with this API and should instead be updated with the Update job API.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "The name of the job Resource within the specified resource group. job names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[-\\w\\.]+$"
          },
          {
            "name": "jobResource",
            "in": "body",
            "description": "Job details from request body.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'JobResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/JobResource"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Jobs_Update",
        "tags": [
          "JobResources"
        ],
        "description": "Updates the properties of an existing job.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "The name of the job Resource within the specified resource group. job names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[-\\w\\.]+$"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Defines the If-Match condition. The patch will be performed only if the ETag of the job on the server matches this value.",
            "required": false,
            "type": "string"
          },
          {
            "name": "jobResourceUpdateParameter",
            "in": "body",
            "description": "Job update parameters from request body.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The JobResourceUpdateParameter.",
              "properties": {
                "properties": {
                  "description": "Properties of a job to be updated.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "details": {
                      "description": "Details of a job to be updated.",
                      "type": "object",
                      "properties": {
                        "contactDetails": {
                          "description": "Contact details for notification and shipping.",
                          "type": "object",
                          "properties": {
                            "contactName": {
                              "type": "string",
                              "description": "Contact name of the person."
                            },
                            "phone": {
                              "type": "string",
                              "description": "Phone number of the contact person."
                            },
                            "phoneExtension": {
                              "type": "string",
                              "description": "Phone extension number of the contact person."
                            },
                            "mobile": {
                              "type": "string",
                              "description": "Mobile number of the contact person."
                            },
                            "emailList": {
                              "type": "array",
                              "description": "List of Email-ids to be notified about job progress.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "notificationPreference": {
                              "type": "array",
                              "description": "Notification preference for a job stage.",
                              "items": {
                                "type": "object",
                                "description": "Notification preference for a job stage.",
                                "properties": {
                                  "stageName": {
                                    "description": "Name of the stage.",
                                    "type": "string",
                                    "enum": [
                                      "DevicePrepared",
                                      "Dispatched",
                                      "Delivered",
                                      "PickedUp",
                                      "AtAzureDC",
                                      "DataCopy",
                                      "Created",
                                      "ShippedToCustomer"
                                    ],
                                    "x-ms-enum": {
                                      "name": "NotificationStageName",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "DevicePrepared",
                                          "value": "DevicePrepared",
                                          "description": "Notification at device prepared stage."
                                        },
                                        {
                                          "name": "Dispatched",
                                          "value": "Dispatched",
                                          "description": "Notification at device dispatched stage."
                                        },
                                        {
                                          "name": "Delivered",
                                          "value": "Delivered",
                                          "description": "Notification at device delivered stage."
                                        },
                                        {
                                          "name": "PickedUp",
                                          "value": "PickedUp",
                                          "description": "Notification at device picked up from user stage."
                                        },
                                        {
                                          "name": "AtAzureDC",
                                          "value": "AtAzureDC",
                                          "description": "Notification at device received at Azure datacenter stage."
                                        },
                                        {
                                          "name": "DataCopy",
                                          "value": "DataCopy",
                                          "description": "Notification at data copy started stage."
                                        },
                                        {
                                          "name": "Created",
                                          "value": "Created",
                                          "description": "Notification at job created stage."
                                        },
                                        {
                                          "name": "ShippedToCustomer",
                                          "value": "ShippedToCustomer",
                                          "description": "Notification at shipped devices to customer stage."
                                        }
                                      ]
                                    }
                                  },
                                  "sendNotification": {
                                    "type": "boolean",
                                    "description": "Notification is required or not.",
                                    "default": true
                                  }
                                },
                                "required": [
                                  "stageName",
                                  "sendNotification"
                                ]
                              }
                            }
                          },
                          "required": [
                            "contactName",
                            "phone",
                            "emailList"
                          ]
                        },
                        "shippingAddress": {
                          "type": "object",
                          "description": "Shipping address where customer wishes to receive the device.",
                          "properties": {
                            "streetAddress1": {
                              "type": "string",
                              "description": "Street Address line 1."
                            },
                            "streetAddress2": {
                              "type": "string",
                              "description": "Street Address line 2."
                            },
                            "streetAddress3": {
                              "type": "string",
                              "description": "Street Address line 3."
                            },
                            "city": {
                              "type": "string",
                              "description": "Name of the City."
                            },
                            "stateOrProvince": {
                              "type": "string",
                              "description": "Name of the State or Province."
                            },
                            "country": {
                              "type": "string",
                              "description": "Name of the Country."
                            },
                            "postalCode": {
                              "type": "string",
                              "description": "Postal code."
                            },
                            "zipExtendedCode": {
                              "type": "string",
                              "description": "Extended Zip Code."
                            },
                            "companyName": {
                              "type": "string",
                              "description": "Name of the company."
                            },
                            "addressType": {
                              "type": "string",
                              "description": "Type of address.",
                              "default": "None",
                              "enum": [
                                "None",
                                "Residential",
                                "Commercial"
                              ],
                              "x-ms-enum": {
                                "name": "AddressType",
                                "modelAsString": false,
                                "values": [
                                  {
                                    "name": "None",
                                    "value": "None",
                                    "description": "Address type not known."
                                  },
                                  {
                                    "name": "Residential",
                                    "value": "Residential",
                                    "description": "Residential Address."
                                  },
                                  {
                                    "name": "Commercial",
                                    "value": "Commercial",
                                    "description": "Commercial Address."
                                  }
                                ]
                              }
                            },
                            "skipAddressValidation": {
                              "type": "boolean",
                              "description": "Flag to indicate if customer has chosen to skip default address validation"
                            },
                            "taxIdentificationNumber": {
                              "type": "string",
                              "description": "Tax Identification Number"
                            }
                          },
                          "required": [
                            "streetAddress1",
                            "country"
                          ]
                        },
                        "reverseShippingDetails": {
                          "description": "Reverse Shipping Address and contact details for a job.",
                          "type": "object",
                          "properties": {
                            "contactDetails": {
                              "description": "Contact Info.",
                              "type": "object",
                              "properties": {
                                "contactName": {
                                  "type": "string",
                                  "description": "Contact name of the person.",
                                  "minLength": 1
                                },
                                "phone": {
                                  "type": "string",
                                  "description": "Phone number of the contact person.",
                                  "minLength": 1
                                },
                                "phoneExtension": {
                                  "type": "string",
                                  "description": "Phone extension number of the contact person."
                                },
                                "mobile": {
                                  "type": "string",
                                  "description": "Mobile number of the contact person."
                                }
                              },
                              "required": [
                                "contactName",
                                "phone"
                              ]
                            },
                            "shippingAddress": {
                              "description": "Shipping address where customer wishes to receive the device.",
                              "type": "object",
                              "properties": {
                                "streetAddress1": {
                                  "type": "string",
                                  "description": "Street Address line 1."
                                },
                                "streetAddress2": {
                                  "type": "string",
                                  "description": "Street Address line 2."
                                },
                                "streetAddress3": {
                                  "type": "string",
                                  "description": "Street Address line 3."
                                },
                                "city": {
                                  "type": "string",
                                  "description": "Name of the City."
                                },
                                "stateOrProvince": {
                                  "type": "string",
                                  "description": "Name of the State or Province."
                                },
                                "country": {
                                  "type": "string",
                                  "description": "Name of the Country."
                                },
                                "postalCode": {
                                  "type": "string",
                                  "description": "Postal code."
                                },
                                "zipExtendedCode": {
                                  "type": "string",
                                  "description": "Extended Zip Code."
                                },
                                "companyName": {
                                  "type": "string",
                                  "description": "Name of the company."
                                },
                                "addressType": {
                                  "type": "string",
                                  "description": "Type of address.",
                                  "default": "None",
                                  "enum": [
                                    "None",
                                    "Residential",
                                    "Commercial"
                                  ],
                                  "x-ms-enum": {
                                    "name": "AddressType",
                                    "modelAsString": false,
                                    "values": [
                                      {
                                        "name": "None",
                                        "value": "None",
                                        "description": "Address type not known."
                                      },
                                      {
                                        "name": "Residential",
                                        "value": "Residential",
                                        "description": "Residential Address."
                                      },
                                      {
                                        "name": "Commercial",
                                        "value": "Commercial",
                                        "description": "Commercial Address."
                                      }
                                    ]
                                  }
                                },
                                "skipAddressValidation": {
                                  "type": "boolean",
                                  "description": "Flag to indicate if customer has chosen to skip default address validation"
                                },
                                "taxIdentificationNumber": {
                                  "type": "string",
                                  "description": "Tax Identification Number"
                                }
                              },
                              "required": [
                                "streetAddress1",
                                "country"
                              ]
                            },
                            "isUpdated": {
                              "type": "boolean",
                              "description": "A flag to indicate whether Reverse Shipping details are updated or not after device has been prepared.\nRead only field",
                              "readOnly": true
                            }
                          }
                        },
                        "preferences": {
                          "description": "Preferences related to the order",
                          "type": "object",
                          "properties": {
                            "preferredDataCenterRegion": {
                              "type": "array",
                              "description": "Preferred data center region.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "transportPreferences": {
                              "description": "Preferences related to the shipment logistics of the sku.",
                              "type": "object",
                              "properties": {
                                "preferredShipmentType": {
                                  "description": "Indicates Shipment Logistics type that the customer preferred.",
                                  "type": "string",
                                  "enum": [
                                    "CustomerManaged",
                                    "MicrosoftManaged"
                                  ],
                                  "x-ms-enum": {
                                    "name": "TransportShipmentTypes",
                                    "modelAsString": false,
                                    "values": [
                                      {
                                        "name": "CustomerManaged",
                                        "value": "CustomerManaged",
                                        "description": "Shipment Logistics is handled by the customer."
                                      },
                                      {
                                        "name": "MicrosoftManaged",
                                        "value": "MicrosoftManaged",
                                        "description": "Shipment Logistics is handled by Microsoft."
                                      }
                                    ]
                                  }
                                },
                                "isUpdated": {
                                  "type": "boolean",
                                  "description": "Read only property which indicates whether transport preferences has been updated or not after device is prepared.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "preferredShipmentType"
                              ]
                            },
                            "reverseTransportPreferences": {
                              "description": "Optional Preferences related to the reverse shipment logistics of the sku.",
                              "type": "object",
                              "properties": {
                                "preferredShipmentType": {
                                  "description": "Indicates Shipment Logistics type that the customer preferred.",
                                  "type": "string",
                                  "enum": [
                                    "CustomerManaged",
                                    "MicrosoftManaged"
                                  ],
                                  "x-ms-enum": {
                                    "name": "TransportShipmentTypes",
                                    "modelAsString": false,
                                    "values": [
                                      {
                                        "name": "CustomerManaged",
                                        "value": "CustomerManaged",
                                        "description": "Shipment Logistics is handled by the customer."
                                      },
                                      {
                                        "name": "MicrosoftManaged",
                                        "value": "MicrosoftManaged",
                                        "description": "Shipment Logistics is handled by Microsoft."
                                      }
                                    ]
                                  }
                                },
                                "isUpdated": {
                                  "type": "boolean",
                                  "description": "Read only property which indicates whether transport preferences has been updated or not after device is prepared.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "preferredShipmentType"
                              ]
                            },
                            "encryptionPreferences": {
                              "description": "Preferences related to the Encryption.",
                              "type": "object",
                              "properties": {
                                "doubleEncryption": {
                                  "type": "string",
                                  "description": "Defines secondary layer of software-based encryption enablement.",
                                  "default": "Disabled",
                                  "enum": [
                                    "Enabled",
                                    "Disabled"
                                  ],
                                  "x-ms-enum": {
                                    "name": "DoubleEncryption",
                                    "modelAsString": false,
                                    "values": [
                                      {
                                        "name": "Enabled",
                                        "value": "Enabled",
                                        "description": "Software-based encryption is enabled."
                                      },
                                      {
                                        "name": "Disabled",
                                        "value": "Disabled",
                                        "description": "Software-based encryption is disabled."
                                      }
                                    ]
                                  }
                                },
                                "hardwareEncryption": {
                                  "description": "Defines Hardware level encryption (Only for disk)",
                                  "type": "string",
                                  "enum": [
                                    "Enabled",
                                    "Disabled"
                                  ],
                                  "x-ms-enum": {
                                    "name": "HardwareEncryption",
                                    "modelAsString": false,
                                    "values": [
                                      {
                                        "name": "Enabled",
                                        "value": "Enabled",
                                        "description": "Hardware-based encryption is enabled."
                                      },
                                      {
                                        "name": "Disabled",
                                        "value": "Disabled",
                                        "description": "Hardware-based encryption is disabled."
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "storageAccountAccessTierPreferences": {
                              "type": "array",
                              "description": "Preferences related to the Access Tier of storage accounts.",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "Archive"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": false
                                }
                              }
                            }
                          }
                        },
                        "keyEncryptionKey": {
                          "description": "Key encryption key for the job.",
                          "type": "object",
                          "properties": {
                            "kekType": {
                              "type": "string",
                              "description": "Type of encryption key used for key encryption.",
                              "default": "MicrosoftManaged",
                              "enum": [
                                "MicrosoftManaged",
                                "CustomerManaged"
                              ],
                              "x-ms-enum": {
                                "name": "KekType",
                                "modelAsString": false,
                                "values": [
                                  {
                                    "name": "MicrosoftManaged",
                                    "value": "MicrosoftManaged",
                                    "description": "Key encryption key is managed by Microsoft."
                                  },
                                  {
                                    "name": "CustomerManaged",
                                    "value": "CustomerManaged",
                                    "description": "Key encryption key is managed by the Customer."
                                  }
                                ]
                              }
                            },
                            "identityProperties": {
                              "description": "Managed identity properties used for key encryption.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "Managed service identity type."
                                },
                                "userAssigned": {
                                  "description": "User assigned identity properties.",
                                  "type": "object",
                                  "properties": {
                                    "resourceId": {
                                      "type": "string",
                                      "description": "Arm resource id for user assigned identity to be used to fetch MSI token."
                                    }
                                  }
                                }
                              }
                            },
                            "kekUrl": {
                              "type": "string",
                              "description": "Key encryption key. It is required in case of Customer managed KekType."
                            },
                            "kekVaultResourceID": {
                              "type": "string",
                              "description": "Kek vault resource id. It is required in case of Customer managed KekType."
                            }
                          },
                          "required": [
                            "kekType"
                          ]
                        },
                        "returnToCustomerPackageDetails": {
                          "description": "Return package details of job.",
                          "type": "object",
                          "properties": {
                            "carrierAccountNumber": {
                              "type": "string",
                              "format": "password",
                              "description": "Carrier Account Number of customer for customer disk.",
                              "x-ms-secret": true
                            },
                            "carrierName": {
                              "type": "string",
                              "description": "Name of the carrier."
                            },
                            "trackingId": {
                              "type": "string",
                              "description": "Tracking Id of shipment."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "The list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups).",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "identity": {
                  "description": "Msi identity of the resource",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Identity type",
                      "default": "None"
                    },
                    "principalId": {
                      "type": "string",
                      "description": "Service Principal Id backing the Msi",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Home Tenant Id",
                      "readOnly": true
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "User Assigned Identities",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/JobResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Jobs_Delete",
        "tags": [
          "JobResources"
        ],
        "description": "Deletes a job.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "The name of the job Resource within the specified resource group. job names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[-\\w\\.]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}/bookShipmentPickUp": {
      "post": {
        "operationId": "Jobs_BookShipmentPickUp",
        "tags": [
          "JobResources"
        ],
        "description": "Book shipment pick up.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "The name of the job Resource within the specified resource group. job names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[-\\w\\.]+$"
          },
          {
            "name": "shipmentPickUpRequest",
            "in": "body",
            "description": "Details of shipment pick up request.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Shipment pick up request details.",
              "properties": {
                "startTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Minimum date after which the pick up should commence, this must be in local time of pick up area."
                },
                "endTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Maximum date before which the pick up should commence, this must be in local time of pick up area."
                },
                "shipmentLocation": {
                  "type": "string",
                  "description": "Shipment Location in the pickup place. Eg.front desk"
                }
              },
              "required": [
                "startTime",
                "endTime",
                "shipmentLocation"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Shipment pick up response.",
              "properties": {
                "confirmationNumber": {
                  "type": "string",
                  "description": "Confirmation number for the pick up request.",
                  "readOnly": true
                },
                "readyByTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time by which shipment should be ready for pick up, this is in local time of pick up area.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}/cancel": {
      "post": {
        "operationId": "Jobs_Cancel",
        "tags": [
          "JobResources"
        ],
        "description": "CancelJob.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "The name of the job Resource within the specified resource group. job names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[-\\w\\.]+$"
          },
          {
            "name": "cancellationReason",
            "in": "body",
            "description": "Reason for cancellation.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Reason for cancellation.",
              "properties": {
                "reason": {
                  "type": "string",
                  "description": "Reason for cancellation."
                }
              },
              "required": [
                "reason"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}/listCredentials": {
      "post": {
        "operationId": "Jobs_ListCredentials",
        "tags": [
          "JobResources"
        ],
        "description": "This method gets the unencrypted secrets related to the job.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "The name of the job Resource within the specified resource group. job names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[-\\w\\.]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UnencryptedCredentialsList"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}/markDevicesShipped": {
      "post": {
        "operationId": "Jobs_MarkDevicesShipped",
        "tags": [
          "JobResources"
        ],
        "description": "Request to mark devices for a given job as shipped",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "The name of the job Resource within the specified resource group. job names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[-\\w\\.]+$"
          },
          {
            "name": "markDevicesShippedRequest",
            "in": "body",
            "description": "Mark Devices Shipped Request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The request body to provide the delivery package details of job",
              "properties": {
                "deliverToDcPackageDetails": {
                  "description": "Delivery package details",
                  "type": "object",
                  "properties": {
                    "carrierName": {
                      "type": "string",
                      "description": "Name of the carrier."
                    },
                    "trackingId": {
                      "type": "string",
                      "description": "Tracking Id of shipment."
                    }
                  }
                }
              },
              "required": [
                "deliverToDcPackageDetails"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}/mitigate": {
      "post": {
        "operationId": "Mitigate",
        "tags": [
          "JobResources"
        ],
        "description": "Request to mitigate for a given job",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "The name of the job Resource within the specified resource group. job names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24,
            "pattern": "^[-\\w\\.]+$"
          },
          {
            "name": "mitigateJobRequest",
            "in": "body",
            "description": "Mitigation Request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The Mitigate Job captured from request body for Mitigate API",
              "properties": {
                "customerResolutionCode": {
                  "type": "string",
                  "description": "Resolution code provided by customer.",
                  "enum": [
                    "None",
                    "MoveToCleanUpDevice",
                    "Resume",
                    "Restart",
                    "ReachOutToOperation"
                  ],
                  "x-ms-enum": {
                    "name": "CustomerResolutionCode",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "None",
                        "value": "None",
                        "description": "No Resolution Yet"
                      },
                      {
                        "name": "MoveToCleanUpDevice",
                        "value": "MoveToCleanUpDevice",
                        "description": "Clean the device"
                      },
                      {
                        "name": "Resume",
                        "value": "Resume",
                        "description": "Resume the job to same stage"
                      },
                      {
                        "name": "Restart",
                        "value": "Restart",
                        "description": "Restart whole action."
                      },
                      {
                        "name": "ReachOutToOperation",
                        "value": "ReachOutToOperation",
                        "description": "Reach out to operation for further action."
                      }
                    ]
                  }
                },
                "serialNumberCustomerResolutionMap": {
                  "type": "object",
                  "description": "Serial number and the customer resolution code corresponding to each serial number",
                  "additionalProperties": {
                    "type": "string",
                    "description": "Resolution code provided by customer.",
                    "enum": [
                      "None",
                      "MoveToCleanUpDevice",
                      "Resume",
                      "Restart",
                      "ReachOutToOperation"
                    ],
                    "x-ms-enum": {
                      "name": "CustomerResolutionCode",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "None",
                          "value": "None",
                          "description": "No Resolution Yet"
                        },
                        {
                          "name": "MoveToCleanUpDevice",
                          "value": "MoveToCleanUpDevice",
                          "description": "Clean the device"
                        },
                        {
                          "name": "Resume",
                          "value": "Resume",
                          "description": "Resume the job to same stage"
                        },
                        {
                          "name": "Restart",
                          "value": "Restart",
                          "description": "Restart whole action."
                        },
                        {
                          "name": "ReachOutToOperation",
                          "value": "ReachOutToOperation",
                          "description": "Reach out to operation for further action."
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/locations/{location}/availableSkus": {
      "post": {
        "operationId": "Service_ListAvailableSkusByResourceGroup",
        "description": "This method provides the list of available skus for the given subscription, resource group and location.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "availableSkuRequest",
            "in": "body",
            "description": "Filters for showing the available skus.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The filters for showing the available skus.",
              "properties": {
                "transferType": {
                  "description": "Type of the transfer.",
                  "type": "string",
                  "enum": [
                    "ImportToAzure",
                    "ExportFromAzure"
                  ],
                  "x-ms-enum": {
                    "name": "TransferType",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "ImportToAzure",
                        "value": "ImportToAzure",
                        "description": "Import data to azure."
                      },
                      {
                        "name": "ExportFromAzure",
                        "value": "ExportFromAzure",
                        "description": "Export data from azure."
                      }
                    ]
                  }
                },
                "country": {
                  "type": "string",
                  "description": "ISO country code. Country for hardware shipment. For codes check: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements"
                },
                "location": {
                  "type": "string",
                  "description": "Location for data transfer. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01"
                },
                "skuNames": {
                  "type": "array",
                  "description": "Sku Names to filter for available skus",
                  "items": {
                    "type": "string",
                    "description": "SKU names.",
                    "enum": [
                      "DataBox",
                      "DataBoxDisk",
                      "DataBoxHeavy",
                      "DataBoxCustomerDisk"
                    ],
                    "x-ms-enum": {
                      "name": "SkuName",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "DataBox",
                          "value": "DataBox",
                          "description": "Data Box."
                        },
                        {
                          "name": "DataBoxDisk",
                          "value": "DataBoxDisk",
                          "description": "Data Box Disk."
                        },
                        {
                          "name": "DataBoxHeavy",
                          "value": "DataBoxHeavy",
                          "description": "Data Box Heavy."
                        },
                        {
                          "name": "DataBoxCustomerDisk",
                          "value": "DataBoxCustomerDisk",
                          "description": "Data Box Customer Disk"
                        }
                      ]
                    }
                  }
                }
              },
              "required": [
                "transferType",
                "country",
                "location"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The available skus operation response.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "[Placeholder] Description for page model",
                  "items": {
                    "type": "object",
                    "description": "Information of the sku.",
                    "properties": {
                      "sku": {
                        "description": "The Sku.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The sku name.",
                            "type": "string",
                            "enum": [
                              "DataBox",
                              "DataBoxDisk",
                              "DataBoxHeavy",
                              "DataBoxCustomerDisk"
                            ],
                            "x-ms-enum": {
                              "name": "SkuName",
                              "modelAsString": false,
                              "values": [
                                {
                                  "name": "DataBox",
                                  "value": "DataBox",
                                  "description": "Data Box."
                                },
                                {
                                  "name": "DataBoxDisk",
                                  "value": "DataBoxDisk",
                                  "description": "Data Box Disk."
                                },
                                {
                                  "name": "DataBoxHeavy",
                                  "value": "DataBoxHeavy",
                                  "description": "Data Box Heavy."
                                },
                                {
                                  "name": "DataBoxCustomerDisk",
                                  "value": "DataBoxCustomerDisk",
                                  "description": "Data Box Customer Disk"
                                }
                              ]
                            }
                          },
                          "displayName": {
                            "type": "string",
                            "description": "The display name of the sku."
                          },
                          "family": {
                            "type": "string",
                            "description": "The sku family."
                          },
                          "model": {
                            "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
                            "type": "string",
                            "enum": [
                              "DataBox",
                              "DataBoxDisk",
                              "DataBoxHeavy",
                              "DataBoxCustomerDisk",
                              "AzureDataBox120",
                              "AzureDataBox525"
                            ],
                            "x-ms-enum": {
                              "name": "ModelName",
                              "modelAsString": false,
                              "values": [
                                {
                                  "name": "DataBox",
                                  "value": "DataBox",
                                  "description": "Data Box."
                                },
                                {
                                  "name": "DataBoxDisk",
                                  "value": "DataBoxDisk",
                                  "description": "Data Box Disk."
                                },
                                {
                                  "name": "DataBoxHeavy",
                                  "value": "DataBoxHeavy",
                                  "description": "Data Box Heavy."
                                },
                                {
                                  "name": "DataBoxCustomerDisk",
                                  "value": "DataBoxCustomerDisk",
                                  "description": "Data Box Customer Disk"
                                },
                                {
                                  "name": "AzureDataBox120",
                                  "value": "AzureDataBox120",
                                  "description": "Data Box V2 with 120TB usable capacity."
                                },
                                {
                                  "name": "AzureDataBox525",
                                  "value": "AzureDataBox525",
                                  "description": "Data Box V2 with 525TB usable capacity."
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "The sku is enabled or not.",
                        "readOnly": true
                      },
                      "properties": {
                        "description": "Properties of the sku.",
                        "readOnly": true,
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "dataLocationToServiceLocationMap": {
                            "type": "array",
                            "description": "The map of data location to service location.",
                            "items": {
                              "type": "object",
                              "description": "Map of data location to service location",
                              "properties": {
                                "dataLocation": {
                                  "type": "string",
                                  "description": "Location of the data.",
                                  "readOnly": true
                                },
                                "serviceLocation": {
                                  "type": "string",
                                  "description": "Location of the service.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          },
                          "capacity": {
                            "description": "Capacity of the Sku.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "usable": {
                                "type": "string",
                                "description": "Usable capacity in TB.",
                                "readOnly": true
                              },
                              "maximum": {
                                "type": "string",
                                "description": "Maximum capacity in TB.",
                                "readOnly": true
                              },
                              "individualSkuUsable": {
                                "type": "string",
                                "description": "Maximum capacity per device in TB.",
                                "readOnly": true
                              }
                            }
                          },
                          "costs": {
                            "type": "array",
                            "description": "Cost of the Sku.",
                            "items": {
                              "type": "object",
                              "description": "Describes metadata for retrieving price info.",
                              "properties": {
                                "meterId": {
                                  "type": "string",
                                  "description": "Meter id of the Sku.",
                                  "readOnly": true
                                },
                                "meterType": {
                                  "type": "string",
                                  "description": "The type of the meter.",
                                  "readOnly": true
                                },
                                "multiplier": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "Multiplier specifies the region specific value to be multiplied with 1$ guid. Eg: Our new regions will be using 1$ shipping guid with appropriate multiplier specific to region.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          },
                          "apiVersions": {
                            "type": "array",
                            "description": "Api versions that support this Sku.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "disabledReason": {
                            "description": "Reason why the Sku is disabled.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "None",
                              "Country",
                              "Region",
                              "Feature",
                              "OfferType",
                              "NoSubscriptionInfo"
                            ],
                            "x-ms-enum": {
                              "name": "SkuDisabledReason",
                              "modelAsString": false,
                              "values": [
                                {
                                  "name": "None",
                                  "value": "None",
                                  "description": "SKU is not disabled."
                                },
                                {
                                  "name": "Country",
                                  "value": "Country",
                                  "description": "SKU is not available in the requested country."
                                },
                                {
                                  "name": "Region",
                                  "value": "Region",
                                  "description": "SKU is not available to push data to the requested Azure region."
                                },
                                {
                                  "name": "Feature",
                                  "value": "Feature",
                                  "description": "Required features are not enabled for the SKU."
                                },
                                {
                                  "name": "OfferType",
                                  "value": "OfferType",
                                  "description": "Subscription does not have required offer types for the SKU."
                                },
                                {
                                  "name": "NoSubscriptionInfo",
                                  "value": "NoSubscriptionInfo",
                                  "description": "Subscription has not registered to Microsoft.DataBox and Service does not have the subscription notification."
                                }
                              ]
                            }
                          },
                          "disabledReasonMessage": {
                            "type": "string",
                            "description": "Message for why the Sku is disabled.",
                            "readOnly": true
                          },
                          "requiredFeature": {
                            "type": "string",
                            "description": "Required feature to access the sku.",
                            "readOnly": true
                          },
                          "countriesWithinCommerceBoundary": {
                            "type": "array",
                            "description": "List of all the Countries in the SKU specific commerce boundary",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "type": "string",
                  "description": "[Placeholder] Description for nextLink property"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/locations/{location}/regionConfiguration": {
      "post": {
        "operationId": "Service_RegionConfigurationByResourceGroup",
        "description": "This API provides configuration details specific to given region/location at Resource group level.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "regionConfigurationRequest",
            "in": "body",
            "description": "Request body to get the configuration for the region at resource group level.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Request body to get the configuration for the region.",
              "properties": {
                "scheduleAvailabilityRequest": {
                  "description": "Request body to get the availability for scheduling orders.",
                  "type": "object",
                  "properties": {
                    "storageLocation": {
                      "type": "string",
                      "description": "Location for data transfer. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01"
                    },
                    "skuName": {
                      "description": "Sku Name for which the order is to be scheduled.",
                      "type": "string",
                      "enum": [
                        "DataBox",
                        "DataBoxDisk",
                        "DataBoxHeavy",
                        "DataBoxCustomerDisk"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "DataBox",
                            "value": "DataBox",
                            "description": "Data Box."
                          },
                          {
                            "name": "DataBoxDisk",
                            "value": "DataBoxDisk",
                            "description": "Data Box Disk."
                          },
                          {
                            "name": "DataBoxHeavy",
                            "value": "DataBoxHeavy",
                            "description": "Data Box Heavy."
                          },
                          {
                            "name": "DataBoxCustomerDisk",
                            "value": "DataBoxCustomerDisk",
                            "description": "Data Box Customer Disk"
                          }
                        ]
                      }
                    },
                    "country": {
                      "type": "string",
                      "description": "Country in which storage location should be supported."
                    },
                    "model": {
                      "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
                      "type": "string",
                      "enum": [
                        "DataBox",
                        "DataBoxDisk",
                        "DataBoxHeavy",
                        "DataBoxCustomerDisk",
                        "AzureDataBox120",
                        "AzureDataBox525"
                      ],
                      "x-ms-enum": {
                        "name": "ModelName",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "DataBox",
                            "value": "DataBox",
                            "description": "Data Box."
                          },
                          {
                            "name": "DataBoxDisk",
                            "value": "DataBoxDisk",
                            "description": "Data Box Disk."
                          },
                          {
                            "name": "DataBoxHeavy",
                            "value": "DataBoxHeavy",
                            "description": "Data Box Heavy."
                          },
                          {
                            "name": "DataBoxCustomerDisk",
                            "value": "DataBoxCustomerDisk",
                            "description": "Data Box Customer Disk"
                          },
                          {
                            "name": "AzureDataBox120",
                            "value": "AzureDataBox120",
                            "description": "Data Box V2 with 120TB usable capacity."
                          },
                          {
                            "name": "AzureDataBox525",
                            "value": "AzureDataBox525",
                            "description": "Data Box V2 with 525TB usable capacity."
                          }
                        ]
                      }
                    }
                  },
                  "discriminator": "skuName",
                  "required": [
                    "storageLocation",
                    "skuName"
                  ]
                },
                "transportAvailabilityRequest": {
                  "description": "Request body to get the transport availability for given sku.",
                  "type": "object",
                  "properties": {
                    "skuName": {
                      "description": "Type of the device.",
                      "type": "string",
                      "enum": [
                        "DataBox",
                        "DataBoxDisk",
                        "DataBoxHeavy",
                        "DataBoxCustomerDisk"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "DataBox",
                            "value": "DataBox",
                            "description": "Data Box."
                          },
                          {
                            "name": "DataBoxDisk",
                            "value": "DataBoxDisk",
                            "description": "Data Box Disk."
                          },
                          {
                            "name": "DataBoxHeavy",
                            "value": "DataBoxHeavy",
                            "description": "Data Box Heavy."
                          },
                          {
                            "name": "DataBoxCustomerDisk",
                            "value": "DataBoxCustomerDisk",
                            "description": "Data Box Customer Disk"
                          }
                        ]
                      }
                    },
                    "model": {
                      "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
                      "type": "string",
                      "enum": [
                        "DataBox",
                        "DataBoxDisk",
                        "DataBoxHeavy",
                        "DataBoxCustomerDisk",
                        "AzureDataBox120",
                        "AzureDataBox525"
                      ],
                      "x-ms-enum": {
                        "name": "ModelName",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "DataBox",
                            "value": "DataBox",
                            "description": "Data Box."
                          },
                          {
                            "name": "DataBoxDisk",
                            "value": "DataBoxDisk",
                            "description": "Data Box Disk."
                          },
                          {
                            "name": "DataBoxHeavy",
                            "value": "DataBoxHeavy",
                            "description": "Data Box Heavy."
                          },
                          {
                            "name": "DataBoxCustomerDisk",
                            "value": "DataBoxCustomerDisk",
                            "description": "Data Box Customer Disk"
                          },
                          {
                            "name": "AzureDataBox120",
                            "value": "AzureDataBox120",
                            "description": "Data Box V2 with 120TB usable capacity."
                          },
                          {
                            "name": "AzureDataBox525",
                            "value": "AzureDataBox525",
                            "description": "Data Box V2 with 525TB usable capacity."
                          }
                        ]
                      }
                    }
                  }
                },
                "datacenterAddressRequest": {
                  "description": "Request body to get the datacenter address for given sku.",
                  "type": "object",
                  "properties": {
                    "storageLocation": {
                      "type": "string",
                      "description": "Storage location. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01"
                    },
                    "skuName": {
                      "description": "Sku Name for which the data center address requested.",
                      "type": "string",
                      "enum": [
                        "DataBox",
                        "DataBoxDisk",
                        "DataBoxHeavy",
                        "DataBoxCustomerDisk"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "DataBox",
                            "value": "DataBox",
                            "description": "Data Box."
                          },
                          {
                            "name": "DataBoxDisk",
                            "value": "DataBoxDisk",
                            "description": "Data Box Disk."
                          },
                          {
                            "name": "DataBoxHeavy",
                            "value": "DataBoxHeavy",
                            "description": "Data Box Heavy."
                          },
                          {
                            "name": "DataBoxCustomerDisk",
                            "value": "DataBoxCustomerDisk",
                            "description": "Data Box Customer Disk"
                          }
                        ]
                      }
                    },
                    "model": {
                      "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
                      "type": "string",
                      "enum": [
                        "DataBox",
                        "DataBoxDisk",
                        "DataBoxHeavy",
                        "DataBoxCustomerDisk",
                        "AzureDataBox120",
                        "AzureDataBox525"
                      ],
                      "x-ms-enum": {
                        "name": "ModelName",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "DataBox",
                            "value": "DataBox",
                            "description": "Data Box."
                          },
                          {
                            "name": "DataBoxDisk",
                            "value": "DataBoxDisk",
                            "description": "Data Box Disk."
                          },
                          {
                            "name": "DataBoxHeavy",
                            "value": "DataBoxHeavy",
                            "description": "Data Box Heavy."
                          },
                          {
                            "name": "DataBoxCustomerDisk",
                            "value": "DataBoxCustomerDisk",
                            "description": "Data Box Customer Disk"
                          },
                          {
                            "name": "AzureDataBox120",
                            "value": "AzureDataBox120",
                            "description": "Data Box V2 with 120TB usable capacity."
                          },
                          {
                            "name": "AzureDataBox525",
                            "value": "AzureDataBox525",
                            "description": "Data Box V2 with 525TB usable capacity."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "storageLocation",
                    "skuName"
                  ]
                },
                "deviceCapabilityRequest": {
                  "description": "Request body to get the device capabilities for a given sku.",
                  "type": "object",
                  "properties": {
                    "skuName": {
                      "description": "Type of the device.",
                      "type": "string",
                      "enum": [
                        "DataBox",
                        "DataBoxDisk",
                        "DataBoxHeavy",
                        "DataBoxCustomerDisk"
                      ],
                      "x-ms-enum": {
                        "name": "SkuName",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "DataBox",
                            "value": "DataBox",
                            "description": "Data Box."
                          },
                          {
                            "name": "DataBoxDisk",
                            "value": "DataBoxDisk",
                            "description": "Data Box Disk."
                          },
                          {
                            "name": "DataBoxHeavy",
                            "value": "DataBoxHeavy",
                            "description": "Data Box Heavy."
                          },
                          {
                            "name": "DataBoxCustomerDisk",
                            "value": "DataBoxCustomerDisk",
                            "description": "Data Box Customer Disk"
                          }
                        ]
                      }
                    },
                    "model": {
                      "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
                      "type": "string",
                      "enum": [
                        "DataBox",
                        "DataBoxDisk",
                        "DataBoxHeavy",
                        "DataBoxCustomerDisk",
                        "AzureDataBox120",
                        "AzureDataBox525"
                      ],
                      "x-ms-enum": {
                        "name": "ModelName",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "DataBox",
                            "value": "DataBox",
                            "description": "Data Box."
                          },
                          {
                            "name": "DataBoxDisk",
                            "value": "DataBoxDisk",
                            "description": "Data Box Disk."
                          },
                          {
                            "name": "DataBoxHeavy",
                            "value": "DataBoxHeavy",
                            "description": "Data Box Heavy."
                          },
                          {
                            "name": "DataBoxCustomerDisk",
                            "value": "DataBoxCustomerDisk",
                            "description": "Data Box Customer Disk"
                          },
                          {
                            "name": "AzureDataBox120",
                            "value": "AzureDataBox120",
                            "description": "Data Box V2 with 120TB usable capacity."
                          },
                          {
                            "name": "AzureDataBox525",
                            "value": "AzureDataBox525",
                            "description": "Data Box V2 with 525TB usable capacity."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Configuration response specific to a region.",
              "properties": {
                "scheduleAvailabilityResponse": {
                  "description": "Schedule availability for given sku in a region.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "availableDates": {
                      "type": "array",
                      "description": "List of dates available to schedule",
                      "items": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "readOnly": true
                    }
                  }
                },
                "transportAvailabilityResponse": {
                  "description": "Transport options available for given sku in a region.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "transportAvailabilityDetails": {
                      "type": "array",
                      "description": "List of transport availability details for given region",
                      "items": {
                        "type": "object",
                        "description": "Transport options availability details for given region.",
                        "properties": {
                          "shipmentType": {
                            "description": "Transport Shipment Type supported for given region.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "CustomerManaged",
                              "MicrosoftManaged"
                            ],
                            "x-ms-enum": {
                              "name": "TransportShipmentTypes",
                              "modelAsString": false,
                              "values": [
                                {
                                  "name": "CustomerManaged",
                                  "value": "CustomerManaged",
                                  "description": "Shipment Logistics is handled by the customer."
                                },
                                {
                                  "name": "MicrosoftManaged",
                                  "value": "MicrosoftManaged",
                                  "description": "Shipment Logistics is handled by Microsoft."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                },
                "datacenterAddressResponse": {
                  "description": "Datacenter address for given sku in a region.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "datacenterAddressType": {
                      "description": "Data center address type",
                      "type": "string",
                      "enum": [
                        "DatacenterAddressLocation",
                        "DatacenterAddressInstruction"
                      ],
                      "x-ms-enum": {
                        "name": "DatacenterAddressType",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "DatacenterAddressLocation",
                            "value": "DatacenterAddressLocation",
                            "description": "Data center address location."
                          },
                          {
                            "name": "DatacenterAddressInstruction",
                            "value": "DatacenterAddressInstruction",
                            "description": "Data center address instruction."
                          }
                        ]
                      }
                    },
                    "supportedCarriersForReturnShipment": {
                      "type": "array",
                      "description": "List of supported carriers for return shipment.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "dataCenterAzureLocation": {
                      "type": "string",
                      "description": "Azure Location where the Data Center serves primarily.",
                      "readOnly": true
                    }
                  },
                  "discriminator": "datacenterAddressType",
                  "required": [
                    "datacenterAddressType"
                  ]
                },
                "deviceCapabilityResponse": {
                  "description": "Device capabilities available for a given sku in a region.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "deviceCapabilityDetails": {
                      "type": "array",
                      "description": "List of device capabilities available for a given region and a given sku",
                      "items": {
                        "type": "object",
                        "description": "Device capability details for a given sku for a given region.",
                        "properties": {
                          "hardwareEncryption": {
                            "description": "Hardware encryption support for a given sku for a given region.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "HardwareEncryption",
                              "modelAsString": false,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "Hardware-based encryption is enabled."
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "Hardware-based encryption is disabled."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/locations/{location}/validateInputs": {
      "post": {
        "operationId": "Service_ValidateInputsByResourceGroup",
        "description": "This method does all necessary pre-job creation validation under resource group.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "validationRequest",
            "in": "body",
            "description": "Inputs of the customer.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Minimum request requirement of any validation category.",
              "properties": {
                "validationCategory": {
                  "type": "string",
                  "description": "Identify the nature of validation.",
                  "enum": [
                    "JobCreationValidation"
                  ],
                  "x-ms-enum": {
                    "modelAsString": false
                  }
                },
                "individualRequestDetails": {
                  "type": "array",
                  "description": "List of request details contain validationType and its request as key and value respectively.",
                  "items": {
                    "type": "object",
                    "description": "Minimum fields that must be present in any type of validation request.",
                    "properties": {
                      "validationType": {
                        "description": "Identifies the type of validation request.",
                        "type": "string",
                        "enum": [
                          "ValidateAddress",
                          "ValidateSubscriptionIsAllowedToCreateJob",
                          "ValidatePreferences",
                          "ValidateCreateOrderLimit",
                          "ValidateSkuAvailability",
                          "ValidateDataTransferDetails"
                        ],
                        "x-ms-enum": {
                          "name": "ValidationInputDiscriminator",
                          "modelAsString": false,
                          "values": [
                            {
                              "name": "ValidateAddress",
                              "value": "ValidateAddress",
                              "description": "Identify request and response of address validation."
                            },
                            {
                              "name": "ValidateSubscriptionIsAllowedToCreateJob",
                              "value": "ValidateSubscriptionIsAllowedToCreateJob",
                              "description": "Identify request and response for validation of subscription permission to create job."
                            },
                            {
                              "name": "ValidatePreferences",
                              "value": "ValidatePreferences",
                              "description": "Identify request and response of preference validation."
                            },
                            {
                              "name": "ValidateCreateOrderLimit",
                              "value": "ValidateCreateOrderLimit",
                              "description": "Identify request and response of create order limit for subscription validation."
                            },
                            {
                              "name": "ValidateSkuAvailability",
                              "value": "ValidateSkuAvailability",
                              "description": "Identify request and response of active job limit for sku availability."
                            },
                            {
                              "name": "ValidateDataTransferDetails",
                              "value": "ValidateDataTransferDetails",
                              "description": "Identify request and response of data transfer details validation."
                            }
                          ]
                        }
                      }
                    },
                    "discriminator": "validationType",
                    "required": [
                      "validationType"
                    ]
                  }
                }
              },
              "discriminator": "validationCategory",
              "required": [
                "validationCategory",
                "individualRequestDetails"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ValidationResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccessProtocol": {
      "type": "string",
      "description": "Access protocols supported on the device.",
      "enum": [
        "SMB",
        "NFS"
      ],
      "x-ms-enum": {
        "name": "AccessProtocol",
        "modelAsString": false,
        "values": [
          {
            "name": "SMB",
            "value": "SMB",
            "description": "Server Message Block protocol(SMB)."
          },
          {
            "name": "NFS",
            "value": "NFS",
            "description": "Network File System protocol(NFS)."
          }
        ]
      }
    },
    "AccountCredentialDetails": {
      "type": "object",
      "description": "Credential details of the account.",
      "properties": {
        "accountName": {
          "type": "string",
          "description": "Name of the account.",
          "readOnly": true
        },
        "dataAccountType": {
          "description": "Type of the account.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "StorageAccount",
            "ManagedDisk"
          ],
          "x-ms-enum": {
            "name": "DataAccountType",
            "modelAsString": false,
            "values": [
              {
                "name": "StorageAccount",
                "value": "StorageAccount",
                "description": "Storage Accounts ."
              },
              {
                "name": "ManagedDisk",
                "value": "ManagedDisk",
                "description": "Azure Managed disk storage."
              }
            ]
          }
        },
        "accountConnectionString": {
          "type": "string",
          "description": "Connection string of the account endpoint to use the account as a storage endpoint on the device.",
          "readOnly": true
        },
        "shareCredentialDetails": {
          "type": "array",
          "description": "Per share level unencrypted access credentials.",
          "items": {
            "type": "object",
            "description": "Credential details of the shares in account.",
            "properties": {
              "shareName": {
                "type": "string",
                "description": "Name of the share.",
                "readOnly": true
              },
              "shareType": {
                "description": "Type of the share.",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "UnknownType",
                  "HCS",
                  "BlockBlob",
                  "PageBlob",
                  "AzureFile",
                  "ManagedDisk"
                ],
                "x-ms-enum": {
                  "name": "ShareDestinationFormatType",
                  "modelAsString": false,
                  "values": [
                    {
                      "name": "UnknownType",
                      "value": "UnknownType",
                      "description": "Unknown format."
                    },
                    {
                      "name": "HCS",
                      "value": "HCS",
                      "description": "Storsimple data format."
                    },
                    {
                      "name": "BlockBlob",
                      "value": "BlockBlob",
                      "description": "Azure storage block blob format."
                    },
                    {
                      "name": "PageBlob",
                      "value": "PageBlob",
                      "description": "Azure storage page blob format."
                    },
                    {
                      "name": "AzureFile",
                      "value": "AzureFile",
                      "description": "Azure storage file format."
                    },
                    {
                      "name": "ManagedDisk",
                      "value": "ManagedDisk",
                      "description": "Azure Compute Disk."
                    }
                  ]
                }
              },
              "userName": {
                "type": "string",
                "description": "User name for the share.",
                "readOnly": true
              },
              "password": {
                "type": "string",
                "description": "Password for the share.",
                "readOnly": true
              },
              "supportedAccessProtocols": {
                "type": "array",
                "description": "Access protocols supported on the device.",
                "items": {
                  "type": "string",
                  "description": "Access protocols supported on the device.",
                  "enum": [
                    "SMB",
                    "NFS"
                  ],
                  "x-ms-enum": {
                    "name": "AccessProtocol",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "SMB",
                        "value": "SMB",
                        "description": "Server Message Block protocol(SMB)."
                      },
                      {
                        "name": "NFS",
                        "value": "NFS",
                        "description": "Network File System protocol(NFS)."
                      }
                    ]
                  }
                },
                "readOnly": true
              }
            }
          },
          "readOnly": true
        }
      }
    },
    "AdditionalErrorInfo": {
      "type": "object",
      "description": "This class represents additional info which Resource Providers pass when an error occurs.",
      "properties": {
        "info": {
          "type": "object",
          "description": "Additional information of the type of error.",
          "additionalProperties": {}
        },
        "type": {
          "type": "string",
          "description": "Type of error (e.g. CustomerIntervention, PolicyViolation, SecurityViolation)."
        }
      }
    },
    "AddressType": {
      "type": "string",
      "description": "Type of address.",
      "enum": [
        "None",
        "Residential",
        "Commercial"
      ],
      "x-ms-enum": {
        "name": "AddressType",
        "modelAsString": false,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "Address type not known."
          },
          {
            "name": "Residential",
            "value": "Residential",
            "description": "Residential Address."
          },
          {
            "name": "Commercial",
            "value": "Commercial",
            "description": "Commercial Address."
          }
        ]
      }
    },
    "AddressValidationOutput": {
      "type": "object",
      "description": "Output of the address validation api.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AddressValidationProperties",
          "description": "The address validation properties.",
          "readOnly": true,
          "x-ms-client-flatten": true
        }
      }
    },
    "AddressValidationProperties": {
      "type": "object",
      "description": "The address validation output.",
      "properties": {
        "validationStatus": {
          "description": "The address validation status.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Valid",
            "Invalid",
            "Ambiguous"
          ],
          "x-ms-enum": {
            "name": "AddressValidationStatus",
            "modelAsString": false,
            "values": [
              {
                "name": "Valid",
                "value": "Valid",
                "description": "Address provided is valid."
              },
              {
                "name": "Invalid",
                "value": "Invalid",
                "description": "Address provided is invalid or not supported."
              },
              {
                "name": "Ambiguous",
                "value": "Ambiguous",
                "description": "Address provided is ambiguous, please choose one of the alternate addresses returned."
              }
            ]
          }
        },
        "alternateAddresses": {
          "type": "array",
          "description": "List of alternate addresses.",
          "items": {
            "type": "object",
            "description": "Shipping address where customer wishes to receive the device.",
            "properties": {
              "streetAddress1": {
                "type": "string",
                "description": "Street Address line 1."
              },
              "streetAddress2": {
                "type": "string",
                "description": "Street Address line 2."
              },
              "streetAddress3": {
                "type": "string",
                "description": "Street Address line 3."
              },
              "city": {
                "type": "string",
                "description": "Name of the City."
              },
              "stateOrProvince": {
                "type": "string",
                "description": "Name of the State or Province."
              },
              "country": {
                "type": "string",
                "description": "Name of the Country."
              },
              "postalCode": {
                "type": "string",
                "description": "Postal code."
              },
              "zipExtendedCode": {
                "type": "string",
                "description": "Extended Zip Code."
              },
              "companyName": {
                "type": "string",
                "description": "Name of the company."
              },
              "addressType": {
                "type": "string",
                "description": "Type of address.",
                "default": "None",
                "enum": [
                  "None",
                  "Residential",
                  "Commercial"
                ],
                "x-ms-enum": {
                  "name": "AddressType",
                  "modelAsString": false,
                  "values": [
                    {
                      "name": "None",
                      "value": "None",
                      "description": "Address type not known."
                    },
                    {
                      "name": "Residential",
                      "value": "Residential",
                      "description": "Residential Address."
                    },
                    {
                      "name": "Commercial",
                      "value": "Commercial",
                      "description": "Commercial Address."
                    }
                  ]
                }
              },
              "skipAddressValidation": {
                "type": "boolean",
                "description": "Flag to indicate if customer has chosen to skip default address validation"
              },
              "taxIdentificationNumber": {
                "type": "string",
                "description": "Tax Identification Number"
              }
            },
            "required": [
              "streetAddress1",
              "country"
            ]
          },
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ValidationInputResponse"
        }
      ],
      "x-ms-discriminator-value": "ValidateAddress"
    },
    "AddressValidationStatus": {
      "type": "string",
      "description": "The address validation status.",
      "enum": [
        "Valid",
        "Invalid",
        "Ambiguous"
      ],
      "x-ms-enum": {
        "name": "AddressValidationStatus",
        "modelAsString": false,
        "values": [
          {
            "name": "Valid",
            "value": "Valid",
            "description": "Address provided is valid."
          },
          {
            "name": "Invalid",
            "value": "Invalid",
            "description": "Address provided is invalid or not supported."
          },
          {
            "name": "Ambiguous",
            "value": "Ambiguous",
            "description": "Address provided is ambiguous, please choose one of the alternate addresses returned."
          }
        ]
      }
    },
    "ApiError": {
      "type": "object",
      "properties": {
        "error": {
          "description": "The error detail.",
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Error code."
            },
            "message": {
              "type": "string",
              "description": "Error message."
            },
            "details": {
              "type": "array",
              "description": "Error target.",
              "items": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Error code."
                  },
                  "message": {
                    "type": "string",
                    "description": "Error message."
                  }
                },
                "required": [
                  "code",
                  "message"
                ]
              }
            },
            "target": {
              "type": "string",
              "description": "Additional error info."
            }
          },
          "required": [
            "code",
            "message"
          ]
        }
      },
      "required": [
        "error"
      ]
    },
    "ApplianceNetworkConfiguration": {
      "type": "object",
      "description": "The Network Adapter configuration of a DataBox.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the network.",
          "readOnly": true
        },
        "macAddress": {
          "type": "string",
          "description": "Mac Address.",
          "readOnly": true
        }
      }
    },
    "ArmBaseObject": {
      "type": "object",
      "description": "Base class for all objects under resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the object.",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "Id of the object.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Type of the object.",
          "readOnly": true
        }
      }
    },
    "AvailableSkuRequest": {
      "type": "object",
      "description": "The filters for showing the available skus.",
      "properties": {
        "transferType": {
          "description": "Type of the transfer.",
          "type": "string",
          "enum": [
            "ImportToAzure",
            "ExportFromAzure"
          ],
          "x-ms-enum": {
            "name": "TransferType",
            "modelAsString": false,
            "values": [
              {
                "name": "ImportToAzure",
                "value": "ImportToAzure",
                "description": "Import data to azure."
              },
              {
                "name": "ExportFromAzure",
                "value": "ExportFromAzure",
                "description": "Export data from azure."
              }
            ]
          }
        },
        "country": {
          "type": "string",
          "description": "ISO country code. Country for hardware shipment. For codes check: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements"
        },
        "location": {
          "type": "string",
          "description": "Location for data transfer. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01"
        },
        "skuNames": {
          "type": "array",
          "description": "Sku Names to filter for available skus",
          "items": {
            "type": "string",
            "description": "SKU names.",
            "enum": [
              "DataBox",
              "DataBoxDisk",
              "DataBoxHeavy",
              "DataBoxCustomerDisk"
            ],
            "x-ms-enum": {
              "name": "SkuName",
              "modelAsString": false,
              "values": [
                {
                  "name": "DataBox",
                  "value": "DataBox",
                  "description": "Data Box."
                },
                {
                  "name": "DataBoxDisk",
                  "value": "DataBoxDisk",
                  "description": "Data Box Disk."
                },
                {
                  "name": "DataBoxHeavy",
                  "value": "DataBoxHeavy",
                  "description": "Data Box Heavy."
                },
                {
                  "name": "DataBoxCustomerDisk",
                  "value": "DataBoxCustomerDisk",
                  "description": "Data Box Customer Disk"
                }
              ]
            }
          }
        }
      },
      "required": [
        "transferType",
        "country",
        "location"
      ]
    },
    "AvailableSkusResult": {
      "type": "object",
      "description": "The available skus operation response.",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Description for page model",
          "items": {
            "type": "object",
            "description": "Information of the sku.",
            "properties": {
              "sku": {
                "description": "The Sku.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The sku name.",
                    "type": "string",
                    "enum": [
                      "DataBox",
                      "DataBoxDisk",
                      "DataBoxHeavy",
                      "DataBoxCustomerDisk"
                    ],
                    "x-ms-enum": {
                      "name": "SkuName",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "DataBox",
                          "value": "DataBox",
                          "description": "Data Box."
                        },
                        {
                          "name": "DataBoxDisk",
                          "value": "DataBoxDisk",
                          "description": "Data Box Disk."
                        },
                        {
                          "name": "DataBoxHeavy",
                          "value": "DataBoxHeavy",
                          "description": "Data Box Heavy."
                        },
                        {
                          "name": "DataBoxCustomerDisk",
                          "value": "DataBoxCustomerDisk",
                          "description": "Data Box Customer Disk"
                        }
                      ]
                    }
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the sku."
                  },
                  "family": {
                    "type": "string",
                    "description": "The sku family."
                  },
                  "model": {
                    "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
                    "type": "string",
                    "enum": [
                      "DataBox",
                      "DataBoxDisk",
                      "DataBoxHeavy",
                      "DataBoxCustomerDisk",
                      "AzureDataBox120",
                      "AzureDataBox525"
                    ],
                    "x-ms-enum": {
                      "name": "ModelName",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "DataBox",
                          "value": "DataBox",
                          "description": "Data Box."
                        },
                        {
                          "name": "DataBoxDisk",
                          "value": "DataBoxDisk",
                          "description": "Data Box Disk."
                        },
                        {
                          "name": "DataBoxHeavy",
                          "value": "DataBoxHeavy",
                          "description": "Data Box Heavy."
                        },
                        {
                          "name": "DataBoxCustomerDisk",
                          "value": "DataBoxCustomerDisk",
                          "description": "Data Box Customer Disk"
                        },
                        {
                          "name": "AzureDataBox120",
                          "value": "AzureDataBox120",
                          "description": "Data Box V2 with 120TB usable capacity."
                        },
                        {
                          "name": "AzureDataBox525",
                          "value": "AzureDataBox525",
                          "description": "Data Box V2 with 525TB usable capacity."
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "name"
                ]
              },
              "enabled": {
                "type": "boolean",
                "description": "The sku is enabled or not.",
                "readOnly": true
              },
              "properties": {
                "description": "Properties of the sku.",
                "readOnly": true,
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "dataLocationToServiceLocationMap": {
                    "type": "array",
                    "description": "The map of data location to service location.",
                    "items": {
                      "type": "object",
                      "description": "Map of data location to service location",
                      "properties": {
                        "dataLocation": {
                          "type": "string",
                          "description": "Location of the data.",
                          "readOnly": true
                        },
                        "serviceLocation": {
                          "type": "string",
                          "description": "Location of the service.",
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true
                  },
                  "capacity": {
                    "description": "Capacity of the Sku.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "usable": {
                        "type": "string",
                        "description": "Usable capacity in TB.",
                        "readOnly": true
                      },
                      "maximum": {
                        "type": "string",
                        "description": "Maximum capacity in TB.",
                        "readOnly": true
                      },
                      "individualSkuUsable": {
                        "type": "string",
                        "description": "Maximum capacity per device in TB.",
                        "readOnly": true
                      }
                    }
                  },
                  "costs": {
                    "type": "array",
                    "description": "Cost of the Sku.",
                    "items": {
                      "type": "object",
                      "description": "Describes metadata for retrieving price info.",
                      "properties": {
                        "meterId": {
                          "type": "string",
                          "description": "Meter id of the Sku.",
                          "readOnly": true
                        },
                        "meterType": {
                          "type": "string",
                          "description": "The type of the meter.",
                          "readOnly": true
                        },
                        "multiplier": {
                          "type": "number",
                          "format": "double",
                          "description": "Multiplier specifies the region specific value to be multiplied with 1$ guid. Eg: Our new regions will be using 1$ shipping guid with appropriate multiplier specific to region.",
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true
                  },
                  "apiVersions": {
                    "type": "array",
                    "description": "Api versions that support this Sku.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "disabledReason": {
                    "description": "Reason why the Sku is disabled.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "None",
                      "Country",
                      "Region",
                      "Feature",
                      "OfferType",
                      "NoSubscriptionInfo"
                    ],
                    "x-ms-enum": {
                      "name": "SkuDisabledReason",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "None",
                          "value": "None",
                          "description": "SKU is not disabled."
                        },
                        {
                          "name": "Country",
                          "value": "Country",
                          "description": "SKU is not available in the requested country."
                        },
                        {
                          "name": "Region",
                          "value": "Region",
                          "description": "SKU is not available to push data to the requested Azure region."
                        },
                        {
                          "name": "Feature",
                          "value": "Feature",
                          "description": "Required features are not enabled for the SKU."
                        },
                        {
                          "name": "OfferType",
                          "value": "OfferType",
                          "description": "Subscription does not have required offer types for the SKU."
                        },
                        {
                          "name": "NoSubscriptionInfo",
                          "value": "NoSubscriptionInfo",
                          "description": "Subscription has not registered to Microsoft.DataBox and Service does not have the subscription notification."
                        }
                      ]
                    }
                  },
                  "disabledReasonMessage": {
                    "type": "string",
                    "description": "Message for why the Sku is disabled.",
                    "readOnly": true
                  },
                  "requiredFeature": {
                    "type": "string",
                    "description": "Required feature to access the sku.",
                    "readOnly": true
                  },
                  "countriesWithinCommerceBoundary": {
                    "type": "array",
                    "description": "List of all the Countries in the SKU specific commerce boundary",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "[Placeholder] Description for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "AzureFileFilterDetails": {
      "type": "object",
      "description": "Filter details to transfer Azure files",
      "properties": {
        "filePrefixList": {
          "type": "array",
          "description": "Prefix list of the Azure files to be transferred.",
          "items": {
            "type": "string"
          }
        },
        "filePathList": {
          "type": "array",
          "description": "List of full path of the files to be transferred.",
          "items": {
            "type": "string"
          }
        },
        "fileShareList": {
          "type": "array",
          "description": "List of file shares to be transferred.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BlobFilterDetails": {
      "type": "object",
      "description": "Filter details to transfer Azure Blobs",
      "properties": {
        "blobPrefixList": {
          "type": "array",
          "description": "Prefix list of the Azure blobs to be transferred.",
          "items": {
            "type": "string"
          }
        },
        "blobPathList": {
          "type": "array",
          "description": "List of full path of the blobs to be transferred.",
          "items": {
            "type": "string"
          }
        },
        "containerList": {
          "type": "array",
          "description": "List of blob containers to be transferred.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CancellationReason": {
      "type": "object",
      "description": "Reason for cancellation.",
      "properties": {
        "reason": {
          "type": "string",
          "description": "Reason for cancellation."
        }
      },
      "required": [
        "reason"
      ]
    },
    "ClassDiscriminator": {
      "type": "string",
      "description": "Indicates the type of job details.",
      "enum": [
        "DataBox",
        "DataBoxDisk",
        "DataBoxHeavy",
        "DataBoxCustomerDisk"
      ],
      "x-ms-enum": {
        "name": "ClassDiscriminator",
        "modelAsString": false,
        "values": [
          {
            "name": "DataBox",
            "value": "DataBox",
            "description": "Data Box orders."
          },
          {
            "name": "DataBoxDisk",
            "value": "DataBoxDisk",
            "description": "Data Box Disk orders."
          },
          {
            "name": "DataBoxHeavy",
            "value": "DataBoxHeavy",
            "description": "Data Box Heavy orders."
          },
          {
            "name": "DataBoxCustomerDisk",
            "value": "DataBoxCustomerDisk",
            "description": "Data Box Customer Disk orders."
          }
        ]
      }
    },
    "CloudError": {
      "type": "object",
      "description": "Provides additional information about an http error response.",
      "properties": {
        "additionalInfo": {
          "type": "array",
          "description": "Gets or sets additional error info.",
          "items": {
            "type": "object",
            "description": "This class represents additional info which Resource Providers pass when an error occurs.",
            "properties": {
              "info": {
                "type": "object",
                "description": "Additional information of the type of error.",
                "additionalProperties": {}
              },
              "type": {
                "type": "string",
                "description": "Type of error (e.g. CustomerIntervention, PolicyViolation, SecurityViolation)."
              }
            }
          },
          "readOnly": true
        },
        "code": {
          "type": "string",
          "description": "Error code."
        },
        "details": {
          "type": "array",
          "description": "Gets or sets details for the error.",
          "items": {
            "$ref": "#/definitions/CloudError"
          },
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message parsed from the body of the http error response."
        },
        "target": {
          "type": "string",
          "description": "Gets or sets the target of the error."
        }
      }
    },
    "ContactDetails": {
      "type": "object",
      "description": "Contact Details.",
      "properties": {
        "contactName": {
          "type": "string",
          "description": "Contact name of the person."
        },
        "phone": {
          "type": "string",
          "description": "Phone number of the contact person."
        },
        "phoneExtension": {
          "type": "string",
          "description": "Phone extension number of the contact person."
        },
        "mobile": {
          "type": "string",
          "description": "Mobile number of the contact person."
        },
        "emailList": {
          "type": "array",
          "description": "List of Email-ids to be notified about job progress.",
          "items": {
            "type": "string"
          }
        },
        "notificationPreference": {
          "type": "array",
          "description": "Notification preference for a job stage.",
          "items": {
            "type": "object",
            "description": "Notification preference for a job stage.",
            "properties": {
              "stageName": {
                "description": "Name of the stage.",
                "type": "string",
                "enum": [
                  "DevicePrepared",
                  "Dispatched",
                  "Delivered",
                  "PickedUp",
                  "AtAzureDC",
                  "DataCopy",
                  "Created",
                  "ShippedToCustomer"
                ],
                "x-ms-enum": {
                  "name": "NotificationStageName",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "DevicePrepared",
                      "value": "DevicePrepared",
                      "description": "Notification at device prepared stage."
                    },
                    {
                      "name": "Dispatched",
                      "value": "Dispatched",
                      "description": "Notification at device dispatched stage."
                    },
                    {
                      "name": "Delivered",
                      "value": "Delivered",
                      "description": "Notification at device delivered stage."
                    },
                    {
                      "name": "PickedUp",
                      "value": "PickedUp",
                      "description": "Notification at device picked up from user stage."
                    },
                    {
                      "name": "AtAzureDC",
                      "value": "AtAzureDC",
                      "description": "Notification at device received at Azure datacenter stage."
                    },
                    {
                      "name": "DataCopy",
                      "value": "DataCopy",
                      "description": "Notification at data copy started stage."
                    },
                    {
                      "name": "Created",
                      "value": "Created",
                      "description": "Notification at job created stage."
                    },
                    {
                      "name": "ShippedToCustomer",
                      "value": "ShippedToCustomer",
                      "description": "Notification at shipped devices to customer stage."
                    }
                  ]
                }
              },
              "sendNotification": {
                "type": "boolean",
                "description": "Notification is required or not.",
                "default": true
              }
            },
            "required": [
              "stageName",
              "sendNotification"
            ]
          }
        }
      },
      "required": [
        "contactName",
        "phone",
        "emailList"
      ]
    },
    "ContactInfo": {
      "type": "object",
      "description": "Contact Info.",
      "properties": {
        "contactName": {
          "type": "string",
          "description": "Contact name of the person.",
          "minLength": 1
        },
        "phone": {
          "type": "string",
          "description": "Phone number of the contact person.",
          "minLength": 1
        },
        "phoneExtension": {
          "type": "string",
          "description": "Phone extension number of the contact person."
        },
        "mobile": {
          "type": "string",
          "description": "Mobile number of the contact person."
        }
      },
      "required": [
        "contactName",
        "phone"
      ]
    },
    "CopyLogDetails": {
      "type": "object",
      "description": "Details for log generated during copy.",
      "properties": {
        "copyLogDetailsType": {
          "description": "Indicates the type of job details.",
          "type": "string",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy",
            "DataBoxCustomerDisk"
          ],
          "x-ms-enum": {
            "name": "ClassDiscriminator",
            "modelAsString": false,
            "values": [
              {
                "name": "DataBox",
                "value": "DataBox",
                "description": "Data Box orders."
              },
              {
                "name": "DataBoxDisk",
                "value": "DataBoxDisk",
                "description": "Data Box Disk orders."
              },
              {
                "name": "DataBoxHeavy",
                "value": "DataBoxHeavy",
                "description": "Data Box Heavy orders."
              },
              {
                "name": "DataBoxCustomerDisk",
                "value": "DataBoxCustomerDisk",
                "description": "Data Box Customer Disk orders."
              }
            ]
          }
        }
      },
      "discriminator": "copyLogDetailsType",
      "required": [
        "copyLogDetailsType"
      ]
    },
    "CopyProgress": {
      "type": "object",
      "description": "Copy progress.",
      "properties": {
        "storageAccountName": {
          "type": "string",
          "description": "Name of the storage account. This will be empty for data account types other than storage account.",
          "readOnly": true
        },
        "transferType": {
          "description": "Transfer type of data",
          "readOnly": true,
          "type": "string",
          "enum": [
            "ImportToAzure",
            "ExportFromAzure"
          ],
          "x-ms-enum": {
            "name": "TransferType",
            "modelAsString": false,
            "values": [
              {
                "name": "ImportToAzure",
                "value": "ImportToAzure",
                "description": "Import data to azure."
              },
              {
                "name": "ExportFromAzure",
                "value": "ExportFromAzure",
                "description": "Export data from azure."
              }
            ]
          }
        },
        "dataAccountType": {
          "description": "Data Account Type.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "StorageAccount",
            "ManagedDisk"
          ],
          "x-ms-enum": {
            "name": "DataAccountType",
            "modelAsString": false,
            "values": [
              {
                "name": "StorageAccount",
                "value": "StorageAccount",
                "description": "Storage Accounts ."
              },
              {
                "name": "ManagedDisk",
                "value": "ManagedDisk",
                "description": "Azure Managed disk storage."
              }
            ]
          }
        },
        "accountId": {
          "type": "string",
          "description": "Id of the account where the data needs to be uploaded.",
          "readOnly": true
        },
        "bytesProcessed": {
          "type": "integer",
          "format": "int64",
          "description": "To indicate bytes transferred.",
          "readOnly": true
        },
        "totalBytesToProcess": {
          "type": "integer",
          "format": "int64",
          "description": "Total amount of data to be processed by the job.",
          "readOnly": true
        },
        "filesProcessed": {
          "type": "integer",
          "format": "int64",
          "description": "Number of files processed",
          "readOnly": true
        },
        "totalFilesToProcess": {
          "type": "integer",
          "format": "int64",
          "description": "Total files to process",
          "readOnly": true
        },
        "invalidFilesProcessed": {
          "type": "integer",
          "format": "int64",
          "description": "Number of files not adhering to azure naming conventions which were processed by automatic renaming",
          "readOnly": true
        },
        "invalidFileBytesUploaded": {
          "type": "integer",
          "format": "int64",
          "description": "Total amount of data not adhering to azure naming conventions which were processed by automatic renaming",
          "readOnly": true
        },
        "renamedContainerCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of folders not adhering to azure naming conventions which were processed by automatic renaming",
          "readOnly": true
        },
        "filesErroredOut": {
          "type": "integer",
          "format": "int64",
          "description": "Number of files which could not be copied",
          "readOnly": true
        },
        "directoriesErroredOut": {
          "type": "integer",
          "format": "int64",
          "description": "To indicate directories errored out in the job.",
          "readOnly": true
        },
        "invalidDirectoriesProcessed": {
          "type": "integer",
          "format": "int64",
          "description": "To indicate directories renamed",
          "readOnly": true
        },
        "isEnumerationInProgress": {
          "type": "boolean",
          "description": "To indicate if enumeration of data is in progress.\nUntil this is true, the TotalBytesToProcess may not be valid.",
          "readOnly": true
        },
        "error": {
          "$ref": "#/definitions/CloudError",
          "description": "Error, if any, in the stage",
          "readOnly": true
        },
        "actions": {
          "type": "array",
          "description": "Available actions on the job.",
          "items": {
            "type": "string",
            "description": "Resolution code provided by customer.",
            "enum": [
              "None",
              "MoveToCleanUpDevice",
              "Resume",
              "Restart",
              "ReachOutToOperation"
            ],
            "x-ms-enum": {
              "name": "CustomerResolutionCode",
              "modelAsString": false,
              "values": [
                {
                  "name": "None",
                  "value": "None",
                  "description": "No Resolution Yet"
                },
                {
                  "name": "MoveToCleanUpDevice",
                  "value": "MoveToCleanUpDevice",
                  "description": "Clean the device"
                },
                {
                  "name": "Resume",
                  "value": "Resume",
                  "description": "Resume the job to same stage"
                },
                {
                  "name": "Restart",
                  "value": "Restart",
                  "description": "Restart whole action."
                },
                {
                  "name": "ReachOutToOperation",
                  "value": "ReachOutToOperation",
                  "description": "Reach out to operation for further action."
                }
              ]
            }
          },
          "readOnly": true
        }
      }
    },
    "CopyStatus": {
      "type": "string",
      "description": "The Status of the copy",
      "enum": [
        "NotStarted",
        "InProgress",
        "Completed",
        "CompletedWithErrors",
        "Failed",
        "NotReturned",
        "HardwareError",
        "DeviceFormatted",
        "DeviceMetadataModified",
        "StorageAccountNotAccessible",
        "UnsupportedData",
        "DriveNotReceived",
        "UnsupportedDrive",
        "OtherServiceError",
        "OtherUserError",
        "DriveNotDetected",
        "DriveCorrupted",
        "MetadataFilesModifiedOrRemoved"
      ],
      "x-ms-enum": {
        "name": "CopyStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "NotStarted",
            "value": "NotStarted",
            "description": "Data copy hasn't started yet."
          },
          {
            "name": "InProgress",
            "value": "InProgress",
            "description": "Data copy is in progress."
          },
          {
            "name": "Completed",
            "value": "Completed",
            "description": "Data copy completed."
          },
          {
            "name": "CompletedWithErrors",
            "value": "CompletedWithErrors",
            "description": "Data copy completed with errors."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Data copy failed. No data was copied."
          },
          {
            "name": "NotReturned",
            "value": "NotReturned",
            "description": "No copy triggered as device was not returned."
          },
          {
            "name": "HardwareError",
            "value": "HardwareError",
            "description": "The Device has hit hardware issues."
          },
          {
            "name": "DeviceFormatted",
            "value": "DeviceFormatted",
            "description": "Data copy failed. The Device was formatted by user."
          },
          {
            "name": "DeviceMetadataModified",
            "value": "DeviceMetadataModified",
            "description": "Data copy failed. Device metadata was modified by user."
          },
          {
            "name": "StorageAccountNotAccessible",
            "value": "StorageAccountNotAccessible",
            "description": "Data copy failed. Storage Account was not accessible during copy."
          },
          {
            "name": "UnsupportedData",
            "value": "UnsupportedData",
            "description": "Data copy failed. The Device data content is not supported."
          },
          {
            "name": "DriveNotReceived",
            "value": "DriveNotReceived",
            "description": "No copy triggered as device was not received."
          },
          {
            "name": "UnsupportedDrive",
            "value": "UnsupportedDrive",
            "description": "No copy triggered as device type is not supported."
          },
          {
            "name": "OtherServiceError",
            "value": "OtherServiceError",
            "description": "Copy failed due to service error."
          },
          {
            "name": "OtherUserError",
            "value": "OtherUserError",
            "description": "Copy failed due to user error."
          },
          {
            "name": "DriveNotDetected",
            "value": "DriveNotDetected",
            "description": "Copy failed due to disk detection error."
          },
          {
            "name": "DriveCorrupted",
            "value": "DriveCorrupted",
            "description": "Copy failed due to corrupted drive."
          },
          {
            "name": "MetadataFilesModifiedOrRemoved",
            "value": "MetadataFilesModifiedOrRemoved",
            "description": "Copy failed due to modified or removed metadata files."
          }
        ]
      }
    },
    "CreateJobValidations": {
      "type": "object",
      "description": "It does all pre-job creation validations.",
      "allOf": [
        {
          "type": "object",
          "description": "Minimum request requirement of any validation category.",
          "properties": {
            "validationCategory": {
              "type": "string",
              "description": "Identify the nature of validation.",
              "enum": [
                "JobCreationValidation"
              ],
              "x-ms-enum": {
                "modelAsString": false
              }
            },
            "individualRequestDetails": {
              "type": "array",
              "description": "List of request details contain validationType and its request as key and value respectively.",
              "items": {
                "type": "object",
                "description": "Minimum fields that must be present in any type of validation request.",
                "properties": {
                  "validationType": {
                    "description": "Identifies the type of validation request.",
                    "type": "string",
                    "enum": [
                      "ValidateAddress",
                      "ValidateSubscriptionIsAllowedToCreateJob",
                      "ValidatePreferences",
                      "ValidateCreateOrderLimit",
                      "ValidateSkuAvailability",
                      "ValidateDataTransferDetails"
                    ],
                    "x-ms-enum": {
                      "name": "ValidationInputDiscriminator",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "ValidateAddress",
                          "value": "ValidateAddress",
                          "description": "Identify request and response of address validation."
                        },
                        {
                          "name": "ValidateSubscriptionIsAllowedToCreateJob",
                          "value": "ValidateSubscriptionIsAllowedToCreateJob",
                          "description": "Identify request and response for validation of subscription permission to create job."
                        },
                        {
                          "name": "ValidatePreferences",
                          "value": "ValidatePreferences",
                          "description": "Identify request and response of preference validation."
                        },
                        {
                          "name": "ValidateCreateOrderLimit",
                          "value": "ValidateCreateOrderLimit",
                          "description": "Identify request and response of create order limit for subscription validation."
                        },
                        {
                          "name": "ValidateSkuAvailability",
                          "value": "ValidateSkuAvailability",
                          "description": "Identify request and response of active job limit for sku availability."
                        },
                        {
                          "name": "ValidateDataTransferDetails",
                          "value": "ValidateDataTransferDetails",
                          "description": "Identify request and response of data transfer details validation."
                        }
                      ]
                    }
                  }
                },
                "discriminator": "validationType",
                "required": [
                  "validationType"
                ]
              }
            }
          },
          "discriminator": "validationCategory",
          "required": [
            "validationCategory",
            "individualRequestDetails"
          ]
        }
      ],
      "x-ms-discriminator-value": "JobCreationValidation"
    },
    "CreateOrderLimitForSubscriptionValidationRequest": {
      "type": "object",
      "description": "Request to validate create order limit for current subscription.",
      "properties": {
        "deviceType": {
          "type": "string",
          "description": "SKU names.",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy",
            "DataBoxCustomerDisk"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": false,
            "values": [
              {
                "name": "DataBox",
                "value": "DataBox",
                "description": "Data Box."
              },
              {
                "name": "DataBoxDisk",
                "value": "DataBoxDisk",
                "description": "Data Box Disk."
              },
              {
                "name": "DataBoxHeavy",
                "value": "DataBoxHeavy",
                "description": "Data Box Heavy."
              },
              {
                "name": "DataBoxCustomerDisk",
                "value": "DataBoxCustomerDisk",
                "description": "Data Box Customer Disk"
              }
            ]
          }
        },
        "model": {
          "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
          "type": "string",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy",
            "DataBoxCustomerDisk",
            "AzureDataBox120",
            "AzureDataBox525"
          ],
          "x-ms-enum": {
            "name": "ModelName",
            "modelAsString": false,
            "values": [
              {
                "name": "DataBox",
                "value": "DataBox",
                "description": "Data Box."
              },
              {
                "name": "DataBoxDisk",
                "value": "DataBoxDisk",
                "description": "Data Box Disk."
              },
              {
                "name": "DataBoxHeavy",
                "value": "DataBoxHeavy",
                "description": "Data Box Heavy."
              },
              {
                "name": "DataBoxCustomerDisk",
                "value": "DataBoxCustomerDisk",
                "description": "Data Box Customer Disk"
              },
              {
                "name": "AzureDataBox120",
                "value": "AzureDataBox120",
                "description": "Data Box V2 with 120TB usable capacity."
              },
              {
                "name": "AzureDataBox525",
                "value": "AzureDataBox525",
                "description": "Data Box V2 with 525TB usable capacity."
              }
            ]
          }
        }
      },
      "required": [
        "deviceType"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Minimum fields that must be present in any type of validation request.",
          "properties": {
            "validationType": {
              "description": "Identifies the type of validation request.",
              "type": "string",
              "enum": [
                "ValidateAddress",
                "ValidateSubscriptionIsAllowedToCreateJob",
                "ValidatePreferences",
                "ValidateCreateOrderLimit",
                "ValidateSkuAvailability",
                "ValidateDataTransferDetails"
              ],
              "x-ms-enum": {
                "name": "ValidationInputDiscriminator",
                "modelAsString": false,
                "values": [
                  {
                    "name": "ValidateAddress",
                    "value": "ValidateAddress",
                    "description": "Identify request and response of address validation."
                  },
                  {
                    "name": "ValidateSubscriptionIsAllowedToCreateJob",
                    "value": "ValidateSubscriptionIsAllowedToCreateJob",
                    "description": "Identify request and response for validation of subscription permission to create job."
                  },
                  {
                    "name": "ValidatePreferences",
                    "value": "ValidatePreferences",
                    "description": "Identify request and response of preference validation."
                  },
                  {
                    "name": "ValidateCreateOrderLimit",
                    "value": "ValidateCreateOrderLimit",
                    "description": "Identify request and response of create order limit for subscription validation."
                  },
                  {
                    "name": "ValidateSkuAvailability",
                    "value": "ValidateSkuAvailability",
                    "description": "Identify request and response of active job limit for sku availability."
                  },
                  {
                    "name": "ValidateDataTransferDetails",
                    "value": "ValidateDataTransferDetails",
                    "description": "Identify request and response of data transfer details validation."
                  }
                ]
              }
            }
          },
          "discriminator": "validationType",
          "required": [
            "validationType"
          ]
        }
      ],
      "x-ms-discriminator-value": "ValidateCreateOrderLimit"
    },
    "CreateOrderLimitForSubscriptionValidationResponseProperties": {
      "type": "object",
      "description": "Properties of create order limit for subscription validation response.",
      "properties": {
        "status": {
          "description": "Create order limit validation status.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Valid",
            "Invalid",
            "Skipped"
          ],
          "x-ms-enum": {
            "name": "ValidationStatus",
            "modelAsString": false,
            "values": [
              {
                "name": "Valid",
                "value": "Valid",
                "description": "Validation is successful"
              },
              {
                "name": "Invalid",
                "value": "Invalid",
                "description": "Validation is not successful"
              },
              {
                "name": "Skipped",
                "value": "Skipped",
                "description": "Validation is skipped"
              }
            ]
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ValidationInputResponse"
        }
      ],
      "x-ms-discriminator-value": "ValidateCreateOrderLimit"
    },
    "CustomerDiskJobSecrets": {
      "type": "object",
      "description": "The secrets related to customer disk job.",
      "properties": {
        "diskSecrets": {
          "type": "array",
          "description": "Contains the list of secrets object for that device.",
          "items": {
            "type": "object",
            "description": "Contains all the secrets of a Disk.",
            "properties": {
              "diskSerialNumber": {
                "type": "string",
                "description": "Serial number of the assigned disk.",
                "readOnly": true
              },
              "bitLockerKey": {
                "type": "string",
                "description": "Bit Locker key of the disk which can be used to unlock the disk to copy data.",
                "readOnly": true
              }
            }
          },
          "readOnly": true
        },
        "carrierAccountNumber": {
          "type": "string",
          "format": "password",
          "description": "Carrier Account Number of the customer",
          "readOnly": true,
          "x-ms-secret": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/JobSecrets"
        }
      ],
      "x-ms-discriminator-value": "DataBoxCustomerDisk"
    },
    "CustomerResolutionCode": {
      "type": "string",
      "description": "Resolution code provided by customer.",
      "enum": [
        "None",
        "MoveToCleanUpDevice",
        "Resume",
        "Restart",
        "ReachOutToOperation"
      ],
      "x-ms-enum": {
        "name": "CustomerResolutionCode",
        "modelAsString": false,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "No Resolution Yet"
          },
          {
            "name": "MoveToCleanUpDevice",
            "value": "MoveToCleanUpDevice",
            "description": "Clean the device"
          },
          {
            "name": "Resume",
            "value": "Resume",
            "description": "Resume the job to same stage"
          },
          {
            "name": "Restart",
            "value": "Restart",
            "description": "Restart whole action."
          },
          {
            "name": "ReachOutToOperation",
            "value": "ReachOutToOperation",
            "description": "Reach out to operation for further action."
          }
        ]
      }
    },
    "DataAccountDetails": {
      "type": "object",
      "description": "Account details of the data to be transferred",
      "properties": {
        "dataAccountType": {
          "type": "string",
          "description": "Account Type of the data to be transferred.",
          "default": "StorageAccount",
          "enum": [
            "StorageAccount",
            "ManagedDisk"
          ],
          "x-ms-enum": {
            "name": "DataAccountType",
            "modelAsString": false,
            "values": [
              {
                "name": "StorageAccount",
                "value": "StorageAccount",
                "description": "Storage Accounts ."
              },
              {
                "name": "ManagedDisk",
                "value": "ManagedDisk",
                "description": "Azure Managed disk storage."
              }
            ]
          }
        },
        "sharePassword": {
          "type": "string",
          "format": "password",
          "description": "Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\\-$%^!+=;:_()]+",
          "x-ms-mutability": [
            "create"
          ],
          "x-ms-secret": true
        }
      },
      "discriminator": "dataAccountType",
      "required": [
        "dataAccountType"
      ]
    },
    "DataAccountType": {
      "type": "string",
      "description": "Type of the account.",
      "enum": [
        "StorageAccount",
        "ManagedDisk"
      ],
      "x-ms-enum": {
        "name": "DataAccountType",
        "modelAsString": false,
        "values": [
          {
            "name": "StorageAccount",
            "value": "StorageAccount",
            "description": "Storage Accounts ."
          },
          {
            "name": "ManagedDisk",
            "value": "ManagedDisk",
            "description": "Azure Managed disk storage."
          }
        ]
      }
    },
    "DataBoxAccountCopyLogDetails": {
      "type": "object",
      "description": "Copy log details for a storage account of a DataBox job",
      "properties": {
        "accountName": {
          "type": "string",
          "description": "Account name.",
          "readOnly": true
        },
        "copyLogLink": {
          "type": "string",
          "description": "Link for copy logs.",
          "readOnly": true
        },
        "copyVerboseLogLink": {
          "type": "string",
          "description": "Link for copy verbose logs. This will be set only when LogCollectionLevel is set to Verbose.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Details for log generated during copy.",
          "properties": {
            "copyLogDetailsType": {
              "description": "Indicates the type of job details.",
              "type": "string",
              "enum": [
                "DataBox",
                "DataBoxDisk",
                "DataBoxHeavy",
                "DataBoxCustomerDisk"
              ],
              "x-ms-enum": {
                "name": "ClassDiscriminator",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DataBox",
                    "value": "DataBox",
                    "description": "Data Box orders."
                  },
                  {
                    "name": "DataBoxDisk",
                    "value": "DataBoxDisk",
                    "description": "Data Box Disk orders."
                  },
                  {
                    "name": "DataBoxHeavy",
                    "value": "DataBoxHeavy",
                    "description": "Data Box Heavy orders."
                  },
                  {
                    "name": "DataBoxCustomerDisk",
                    "value": "DataBoxCustomerDisk",
                    "description": "Data Box Customer Disk orders."
                  }
                ]
              }
            }
          },
          "discriminator": "copyLogDetailsType",
          "required": [
            "copyLogDetailsType"
          ]
        }
      ],
      "x-ms-discriminator-value": "DataBox"
    },
    "DataBoxCustomerDiskCopyLogDetails": {
      "type": "object",
      "description": "Copy Log Details for customer disk",
      "properties": {
        "serialNumber": {
          "type": "string",
          "description": "Disk Serial Number.",
          "readOnly": true
        },
        "errorLogLink": {
          "type": "string",
          "description": "Link for copy error logs.",
          "readOnly": true
        },
        "verboseLogLink": {
          "type": "string",
          "description": "Link for copy verbose logs.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Details for log generated during copy.",
          "properties": {
            "copyLogDetailsType": {
              "description": "Indicates the type of job details.",
              "type": "string",
              "enum": [
                "DataBox",
                "DataBoxDisk",
                "DataBoxHeavy",
                "DataBoxCustomerDisk"
              ],
              "x-ms-enum": {
                "name": "ClassDiscriminator",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DataBox",
                    "value": "DataBox",
                    "description": "Data Box orders."
                  },
                  {
                    "name": "DataBoxDisk",
                    "value": "DataBoxDisk",
                    "description": "Data Box Disk orders."
                  },
                  {
                    "name": "DataBoxHeavy",
                    "value": "DataBoxHeavy",
                    "description": "Data Box Heavy orders."
                  },
                  {
                    "name": "DataBoxCustomerDisk",
                    "value": "DataBoxCustomerDisk",
                    "description": "Data Box Customer Disk orders."
                  }
                ]
              }
            }
          },
          "discriminator": "copyLogDetailsType",
          "required": [
            "copyLogDetailsType"
          ]
        }
      ],
      "x-ms-discriminator-value": "DataBoxCustomerDisk"
    },
    "DataBoxCustomerDiskCopyProgress": {
      "type": "object",
      "description": "DataBox CustomerDisk Copy Progress",
      "properties": {
        "serialNumber": {
          "type": "string",
          "description": "Disk Serial Number.",
          "readOnly": true
        },
        "copyStatus": {
          "description": "The Status of the copy",
          "readOnly": true,
          "type": "string",
          "enum": [
            "NotStarted",
            "InProgress",
            "Completed",
            "CompletedWithErrors",
            "Failed",
            "NotReturned",
            "HardwareError",
            "DeviceFormatted",
            "DeviceMetadataModified",
            "StorageAccountNotAccessible",
            "UnsupportedData",
            "DriveNotReceived",
            "UnsupportedDrive",
            "OtherServiceError",
            "OtherUserError",
            "DriveNotDetected",
            "DriveCorrupted",
            "MetadataFilesModifiedOrRemoved"
          ],
          "x-ms-enum": {
            "name": "CopyStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "NotStarted",
                "value": "NotStarted",
                "description": "Data copy hasn't started yet."
              },
              {
                "name": "InProgress",
                "value": "InProgress",
                "description": "Data copy is in progress."
              },
              {
                "name": "Completed",
                "value": "Completed",
                "description": "Data copy completed."
              },
              {
                "name": "CompletedWithErrors",
                "value": "CompletedWithErrors",
                "description": "Data copy completed with errors."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Data copy failed. No data was copied."
              },
              {
                "name": "NotReturned",
                "value": "NotReturned",
                "description": "No copy triggered as device was not returned."
              },
              {
                "name": "HardwareError",
                "value": "HardwareError",
                "description": "The Device has hit hardware issues."
              },
              {
                "name": "DeviceFormatted",
                "value": "DeviceFormatted",
                "description": "Data copy failed. The Device was formatted by user."
              },
              {
                "name": "DeviceMetadataModified",
                "value": "DeviceMetadataModified",
                "description": "Data copy failed. Device metadata was modified by user."
              },
              {
                "name": "StorageAccountNotAccessible",
                "value": "StorageAccountNotAccessible",
                "description": "Data copy failed. Storage Account was not accessible during copy."
              },
              {
                "name": "UnsupportedData",
                "value": "UnsupportedData",
                "description": "Data copy failed. The Device data content is not supported."
              },
              {
                "name": "DriveNotReceived",
                "value": "DriveNotReceived",
                "description": "No copy triggered as device was not received."
              },
              {
                "name": "UnsupportedDrive",
                "value": "UnsupportedDrive",
                "description": "No copy triggered as device type is not supported."
              },
              {
                "name": "OtherServiceError",
                "value": "OtherServiceError",
                "description": "Copy failed due to service error."
              },
              {
                "name": "OtherUserError",
                "value": "OtherUserError",
                "description": "Copy failed due to user error."
              },
              {
                "name": "DriveNotDetected",
                "value": "DriveNotDetected",
                "description": "Copy failed due to disk detection error."
              },
              {
                "name": "DriveCorrupted",
                "value": "DriveCorrupted",
                "description": "Copy failed due to corrupted drive."
              },
              {
                "name": "MetadataFilesModifiedOrRemoved",
                "value": "MetadataFilesModifiedOrRemoved",
                "description": "Copy failed due to modified or removed metadata files."
              }
            ]
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CopyProgress"
        }
      ]
    },
    "DataBoxCustomerDiskJobDetails": {
      "type": "object",
      "description": "Customer disk job details.",
      "properties": {
        "importDiskDetailsCollection": {
          "type": "object",
          "description": "Contains the map of disk serial number to the disk details for import jobs.",
          "additionalProperties": {
            "type": "object",
            "description": "Import disk details",
            "properties": {
              "manifestFile": {
                "type": "string",
                "description": "The relative path of the manifest file on the disk."
              },
              "manifestHash": {
                "type": "string",
                "description": "The Base16-encoded MD5 hash of the manifest file on the disk."
              },
              "bitLockerKey": {
                "type": "string",
                "format": "password",
                "description": "BitLocker key used to encrypt the disk.",
                "x-ms-secret": true
              },
              "backupManifestCloudPath": {
                "type": "string",
                "description": "Path to backed up manifest, only returned if enableManifestBackup is true.",
                "readOnly": true
              }
            },
            "required": [
              "manifestFile",
              "manifestHash",
              "bitLockerKey"
            ]
          }
        },
        "exportDiskDetailsCollection": {
          "type": "object",
          "description": "Contains the map of disk serial number to the disk details for export jobs.",
          "additionalProperties": {
            "type": "object",
            "description": "Export disk details",
            "properties": {
              "manifestFile": {
                "type": "string",
                "description": "The relative path of the manifest file on the disk.",
                "readOnly": true
              },
              "manifestHash": {
                "type": "string",
                "description": "The Base16-encoded MD5 hash of the manifest file on the disk.",
                "readOnly": true
              },
              "backupManifestCloudPath": {
                "type": "string",
                "description": "Path to backed up manifest, only returned if enableManifestBackup is true.",
                "readOnly": true
              }
            }
          },
          "readOnly": true
        },
        "copyProgress": {
          "type": "array",
          "description": "Copy progress per disk.",
          "items": {
            "$ref": "#/definitions/DataBoxCustomerDiskCopyProgress"
          },
          "readOnly": true
        },
        "deliverToDcPackageDetails": {
          "description": "Delivery package shipping details.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "carrierName": {
              "type": "string",
              "description": "Name of the carrier."
            },
            "trackingId": {
              "type": "string",
              "description": "Tracking Id of shipment."
            }
          }
        },
        "returnToCustomerPackageDetails": {
          "description": "Return package shipping details.",
          "type": "object",
          "properties": {
            "carrierAccountNumber": {
              "type": "string",
              "format": "password",
              "description": "Carrier Account Number of customer for customer disk.",
              "x-ms-secret": true
            },
            "carrierName": {
              "type": "string",
              "description": "Name of the carrier."
            },
            "trackingId": {
              "type": "string",
              "description": "Tracking Id of shipment."
            }
          }
        },
        "enableManifestBackup": {
          "type": "boolean",
          "description": "Flag to indicate if disk manifest should be backed-up in the Storage Account.",
          "default": false
        }
      },
      "required": [
        "returnToCustomerPackageDetails"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Job details.",
          "properties": {
            "jobStages": {
              "type": "array",
              "description": "List of stages that run in the job.",
              "items": {
                "type": "object",
                "description": "Job stages.",
                "properties": {
                  "stageName": {
                    "description": "Name of the job stage.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "DeviceOrdered",
                      "DevicePrepared",
                      "Dispatched",
                      "Delivered",
                      "PickedUp",
                      "AtAzureDC",
                      "DataCopy",
                      "Completed",
                      "CompletedWithErrors",
                      "Cancelled",
                      "Failed_IssueReportedAtCustomer",
                      "Failed_IssueDetectedAtAzureDC",
                      "Aborted",
                      "CompletedWithWarnings",
                      "ReadyToDispatchFromAzureDC",
                      "ReadyToReceiveAtAzureDC",
                      "Created",
                      "ShippedToAzureDC",
                      "AwaitingShipmentDetails",
                      "PreparingToShipFromAzureDC",
                      "ShippedToCustomer"
                    ],
                    "x-ms-enum": {
                      "name": "StageName",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "DeviceOrdered",
                          "value": "DeviceOrdered",
                          "description": "An order has been created."
                        },
                        {
                          "name": "DevicePrepared",
                          "value": "DevicePrepared",
                          "description": "A device has been prepared for the order."
                        },
                        {
                          "name": "Dispatched",
                          "value": "Dispatched",
                          "description": "Device has been dispatched to the user of the order."
                        },
                        {
                          "name": "Delivered",
                          "value": "Delivered",
                          "description": "Device has been delivered to the user of the order."
                        },
                        {
                          "name": "PickedUp",
                          "value": "PickedUp",
                          "description": "Device has been picked up from user and in transit to Azure datacenter."
                        },
                        {
                          "name": "AtAzureDC",
                          "value": "AtAzureDC",
                          "description": "Device has been received at Azure datacenter from the user."
                        },
                        {
                          "name": "DataCopy",
                          "value": "DataCopy",
                          "description": "Data copy from the device at Azure datacenter."
                        },
                        {
                          "name": "Completed",
                          "value": "Completed",
                          "description": "Order has completed."
                        },
                        {
                          "name": "CompletedWithErrors",
                          "value": "CompletedWithErrors",
                          "description": "Order has completed with errors."
                        },
                        {
                          "name": "Cancelled",
                          "value": "Cancelled",
                          "description": "Order has been cancelled."
                        },
                        {
                          "name": "Failed_IssueReportedAtCustomer",
                          "value": "Failed_IssueReportedAtCustomer",
                          "description": "Order has failed due to issue reported by user."
                        },
                        {
                          "name": "Failed_IssueDetectedAtAzureDC",
                          "value": "Failed_IssueDetectedAtAzureDC",
                          "description": "Order has failed due to issue detected at Azure datacenter."
                        },
                        {
                          "name": "Aborted",
                          "value": "Aborted",
                          "description": "Order has been aborted."
                        },
                        {
                          "name": "CompletedWithWarnings",
                          "value": "CompletedWithWarnings",
                          "description": "Order has completed with warnings."
                        },
                        {
                          "name": "ReadyToDispatchFromAzureDC",
                          "value": "ReadyToDispatchFromAzureDC",
                          "description": "Device is ready to be handed to customer from Azure DC."
                        },
                        {
                          "name": "ReadyToReceiveAtAzureDC",
                          "value": "ReadyToReceiveAtAzureDC",
                          "description": "Device can be dropped off at Azure DC."
                        },
                        {
                          "name": "Created",
                          "value": "Created",
                          "description": "Job created by the customer."
                        },
                        {
                          "name": "ShippedToAzureDC",
                          "value": "ShippedToAzureDC",
                          "description": "User shipped the device to AzureDC."
                        },
                        {
                          "name": "AwaitingShipmentDetails",
                          "value": "AwaitingShipmentDetails",
                          "description": "Awaiting shipment details of device from customer."
                        },
                        {
                          "name": "PreparingToShipFromAzureDC",
                          "value": "PreparingToShipFromAzureDC",
                          "description": "Preparing the device to ship to customer."
                        },
                        {
                          "name": "ShippedToCustomer",
                          "value": "ShippedToCustomer",
                          "description": "Shipped the device to customer."
                        }
                      ]
                    }
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Display name of the job stage.",
                    "readOnly": true
                  },
                  "stageStatus": {
                    "description": "Status of the job stage.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "None",
                      "InProgress",
                      "Succeeded",
                      "Failed",
                      "Cancelled",
                      "Cancelling",
                      "SucceededWithErrors",
                      "WaitingForCustomerAction",
                      "SucceededWithWarnings",
                      "WaitingForCustomerActionForKek",
                      "WaitingForCustomerActionForCleanUp",
                      "CustomerActionPerformedForCleanUp",
                      "CustomerActionPerformed"
                    ],
                    "x-ms-enum": {
                      "name": "StageStatus",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "None",
                          "value": "None",
                          "description": "No status available yet."
                        },
                        {
                          "name": "InProgress",
                          "value": "InProgress",
                          "description": "Stage is in progress."
                        },
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Stage has succeeded."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Stage has failed."
                        },
                        {
                          "name": "Cancelled",
                          "value": "Cancelled",
                          "description": "Stage has been cancelled."
                        },
                        {
                          "name": "Cancelling",
                          "value": "Cancelling",
                          "description": "Stage is cancelling."
                        },
                        {
                          "name": "SucceededWithErrors",
                          "value": "SucceededWithErrors",
                          "description": "Stage has succeeded with errors."
                        },
                        {
                          "name": "WaitingForCustomerAction",
                          "value": "WaitingForCustomerAction",
                          "description": "Stage is stuck until customer takes some action."
                        },
                        {
                          "name": "SucceededWithWarnings",
                          "value": "SucceededWithWarnings",
                          "description": "Stage has succeeded with warnings."
                        },
                        {
                          "name": "WaitingForCustomerActionForKek",
                          "value": "WaitingForCustomerActionForKek",
                          "description": "Stage is waiting for customer action for kek action items."
                        },
                        {
                          "name": "WaitingForCustomerActionForCleanUp",
                          "value": "WaitingForCustomerActionForCleanUp",
                          "description": "Stage is waiting for customer action for clean up."
                        },
                        {
                          "name": "CustomerActionPerformedForCleanUp",
                          "value": "CustomerActionPerformedForCleanUp",
                          "description": "Stage has performed customer action for clean up."
                        },
                        {
                          "name": "CustomerActionPerformed",
                          "value": "CustomerActionPerformed",
                          "description": "Stage has performed customer action for clean up."
                        }
                      ]
                    }
                  },
                  "stageTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time for the job stage in UTC ISO 8601 format.",
                    "readOnly": true
                  },
                  "jobStageDetails": {
                    "description": "Job Stage Details",
                    "readOnly": true
                  },
                  "delayInformation": {
                    "type": "array",
                    "description": "Delay information for the job stages.",
                    "items": {
                      "type": "object",
                      "description": "Job Delay Notification details",
                      "properties": {
                        "status": {
                          "description": "Status of notification",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Active",
                            "Resolved"
                          ],
                          "x-ms-enum": {
                            "name": "DelayNotificationStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Active",
                                "value": "Active",
                                "description": "Delay is still active"
                              },
                              {
                                "name": "Resolved",
                                "value": "Resolved",
                                "description": "Delay has been resolved"
                              }
                            ]
                          }
                        },
                        "errorCode": {
                          "description": "Delay Error code",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "InternalIssueDelay",
                            "ActiveOrderLimitBreachedDelay",
                            "HighDemandDelay",
                            "LargeNumberOfFilesDelay"
                          ],
                          "x-ms-enum": {
                            "name": "PortalDelayErrorCode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "InternalIssueDelay",
                                "value": "InternalIssueDelay",
                                "description": "Delay due to any internal reasons"
                              },
                              {
                                "name": "ActiveOrderLimitBreachedDelay",
                                "value": "ActiveOrderLimitBreachedDelay",
                                "description": "Active Order limit breached."
                              },
                              {
                                "name": "HighDemandDelay",
                                "value": "HighDemandDelay",
                                "description": "High demand"
                              },
                              {
                                "name": "LargeNumberOfFilesDelay",
                                "value": "LargeNumberOfFilesDelay",
                                "description": "Slow copy due to large number of files"
                              }
                            ]
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the delay.",
                          "readOnly": true
                        },
                        "startTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp when the delay notification was created.",
                          "readOnly": true
                        },
                        "resolutionTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp when the delay notification was resolved.",
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true,
                    "x-ms-identifiers": []
                  }
                }
              },
              "readOnly": true
            },
            "contactDetails": {
              "description": "Contact details for notification and shipping.",
              "type": "object",
              "properties": {
                "contactName": {
                  "type": "string",
                  "description": "Contact name of the person."
                },
                "phone": {
                  "type": "string",
                  "description": "Phone number of the contact person."
                },
                "phoneExtension": {
                  "type": "string",
                  "description": "Phone extension number of the contact person."
                },
                "mobile": {
                  "type": "string",
                  "description": "Mobile number of the contact person."
                },
                "emailList": {
                  "type": "array",
                  "description": "List of Email-ids to be notified about job progress.",
                  "items": {
                    "type": "string"
                  }
                },
                "notificationPreference": {
                  "type": "array",
                  "description": "Notification preference for a job stage.",
                  "items": {
                    "type": "object",
                    "description": "Notification preference for a job stage.",
                    "properties": {
                      "stageName": {
                        "description": "Name of the stage.",
                        "type": "string",
                        "enum": [
                          "DevicePrepared",
                          "Dispatched",
                          "Delivered",
                          "PickedUp",
                          "AtAzureDC",
                          "DataCopy",
                          "Created",
                          "ShippedToCustomer"
                        ],
                        "x-ms-enum": {
                          "name": "NotificationStageName",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "DevicePrepared",
                              "value": "DevicePrepared",
                              "description": "Notification at device prepared stage."
                            },
                            {
                              "name": "Dispatched",
                              "value": "Dispatched",
                              "description": "Notification at device dispatched stage."
                            },
                            {
                              "name": "Delivered",
                              "value": "Delivered",
                              "description": "Notification at device delivered stage."
                            },
                            {
                              "name": "PickedUp",
                              "value": "PickedUp",
                              "description": "Notification at device picked up from user stage."
                            },
                            {
                              "name": "AtAzureDC",
                              "value": "AtAzureDC",
                              "description": "Notification at device received at Azure datacenter stage."
                            },
                            {
                              "name": "DataCopy",
                              "value": "DataCopy",
                              "description": "Notification at data copy started stage."
                            },
                            {
                              "name": "Created",
                              "value": "Created",
                              "description": "Notification at job created stage."
                            },
                            {
                              "name": "ShippedToCustomer",
                              "value": "ShippedToCustomer",
                              "description": "Notification at shipped devices to customer stage."
                            }
                          ]
                        }
                      },
                      "sendNotification": {
                        "type": "boolean",
                        "description": "Notification is required or not.",
                        "default": true
                      }
                    },
                    "required": [
                      "stageName",
                      "sendNotification"
                    ]
                  }
                }
              },
              "required": [
                "contactName",
                "phone",
                "emailList"
              ]
            },
            "shippingAddress": {
              "description": "Shipping address of the customer.",
              "type": "object",
              "properties": {
                "streetAddress1": {
                  "type": "string",
                  "description": "Street Address line 1."
                },
                "streetAddress2": {
                  "type": "string",
                  "description": "Street Address line 2."
                },
                "streetAddress3": {
                  "type": "string",
                  "description": "Street Address line 3."
                },
                "city": {
                  "type": "string",
                  "description": "Name of the City."
                },
                "stateOrProvince": {
                  "type": "string",
                  "description": "Name of the State or Province."
                },
                "country": {
                  "type": "string",
                  "description": "Name of the Country."
                },
                "postalCode": {
                  "type": "string",
                  "description": "Postal code."
                },
                "zipExtendedCode": {
                  "type": "string",
                  "description": "Extended Zip Code."
                },
                "companyName": {
                  "type": "string",
                  "description": "Name of the company."
                },
                "addressType": {
                  "type": "string",
                  "description": "Type of address.",
                  "default": "None",
                  "enum": [
                    "None",
                    "Residential",
                    "Commercial"
                  ],
                  "x-ms-enum": {
                    "name": "AddressType",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "None",
                        "value": "None",
                        "description": "Address type not known."
                      },
                      {
                        "name": "Residential",
                        "value": "Residential",
                        "description": "Residential Address."
                      },
                      {
                        "name": "Commercial",
                        "value": "Commercial",
                        "description": "Commercial Address."
                      }
                    ]
                  }
                },
                "skipAddressValidation": {
                  "type": "boolean",
                  "description": "Flag to indicate if customer has chosen to skip default address validation"
                },
                "taxIdentificationNumber": {
                  "type": "string",
                  "description": "Tax Identification Number"
                }
              },
              "required": [
                "streetAddress1",
                "country"
              ]
            },
            "deliveryPackage": {
              "description": "Delivery package shipping details.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "trackingUrl": {
                  "type": "string",
                  "description": "Url where shipment can be tracked.",
                  "readOnly": true
                },
                "carrierName": {
                  "type": "string",
                  "description": "Name of the carrier.",
                  "readOnly": true
                },
                "trackingId": {
                  "type": "string",
                  "description": "Tracking Id of shipment.",
                  "readOnly": true
                }
              }
            },
            "returnPackage": {
              "description": "Return package shipping details.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "trackingUrl": {
                  "type": "string",
                  "description": "Url where shipment can be tracked.",
                  "readOnly": true
                },
                "carrierName": {
                  "type": "string",
                  "description": "Name of the carrier.",
                  "readOnly": true
                },
                "trackingId": {
                  "type": "string",
                  "description": "Tracking Id of shipment.",
                  "readOnly": true
                }
              }
            },
            "dataImportDetails": {
              "type": "array",
              "description": "Details of the data to be imported into azure.",
              "items": {
                "type": "object",
                "description": "Details of the data to be used for importing data to azure.",
                "properties": {
                  "accountDetails": {
                    "description": "Account details of the data to be transferred",
                    "type": "object",
                    "properties": {
                      "dataAccountType": {
                        "type": "string",
                        "description": "Account Type of the data to be transferred.",
                        "default": "StorageAccount",
                        "enum": [
                          "StorageAccount",
                          "ManagedDisk"
                        ],
                        "x-ms-enum": {
                          "name": "DataAccountType",
                          "modelAsString": false,
                          "values": [
                            {
                              "name": "StorageAccount",
                              "value": "StorageAccount",
                              "description": "Storage Accounts ."
                            },
                            {
                              "name": "ManagedDisk",
                              "value": "ManagedDisk",
                              "description": "Azure Managed disk storage."
                            }
                          ]
                        }
                      },
                      "sharePassword": {
                        "type": "string",
                        "format": "password",
                        "description": "Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\\-$%^!+=;:_()]+",
                        "x-ms-mutability": [
                          "create"
                        ],
                        "x-ms-secret": true
                      }
                    },
                    "discriminator": "dataAccountType",
                    "required": [
                      "dataAccountType"
                    ]
                  },
                  "logCollectionLevel": {
                    "type": "string",
                    "description": "Level of the logs to be collected.",
                    "default": "Error",
                    "enum": [
                      "Error",
                      "Verbose"
                    ],
                    "x-ms-enum": {
                      "name": "LogCollectionLevel",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "Error",
                          "value": "Error",
                          "description": "Only Errors will be collected in the logs."
                        },
                        {
                          "name": "Verbose",
                          "value": "Verbose",
                          "description": "Verbose logging (includes Errors, CRC, size information and others)."
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "accountDetails"
                ]
              }
            },
            "dataExportDetails": {
              "type": "array",
              "description": "Details of the data to be exported from azure.",
              "items": {
                "type": "object",
                "description": "Details of the data to be used for exporting data from azure.",
                "properties": {
                  "transferConfiguration": {
                    "description": "Configuration for the data transfer.",
                    "type": "object",
                    "properties": {
                      "transferConfigurationType": {
                        "description": "Type of the configuration for transfer.",
                        "type": "string",
                        "enum": [
                          "TransferAll",
                          "TransferUsingFilter"
                        ],
                        "x-ms-enum": {
                          "name": "TransferConfigurationType",
                          "modelAsString": false,
                          "values": [
                            {
                              "name": "TransferAll",
                              "value": "TransferAll",
                              "description": "Transfer all the data."
                            },
                            {
                              "name": "TransferUsingFilter",
                              "value": "TransferUsingFilter",
                              "description": "Transfer using filter."
                            }
                          ]
                        }
                      },
                      "transferFilterDetails": {
                        "description": "Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.",
                        "type": "object",
                        "properties": {
                          "include": {
                            "description": "Details of the filtering the transfer of data.",
                            "type": "object",
                            "properties": {
                              "dataAccountType": {
                                "type": "string",
                                "description": "Type of the account of data.",
                                "default": "StorageAccount",
                                "enum": [
                                  "StorageAccount",
                                  "ManagedDisk"
                                ],
                                "x-ms-enum": {
                                  "name": "DataAccountType",
                                  "modelAsString": false,
                                  "values": [
                                    {
                                      "name": "StorageAccount",
                                      "value": "StorageAccount",
                                      "description": "Storage Accounts ."
                                    },
                                    {
                                      "name": "ManagedDisk",
                                      "value": "ManagedDisk",
                                      "description": "Azure Managed disk storage."
                                    }
                                  ]
                                }
                              },
                              "blobFilterDetails": {
                                "description": "Filter details to transfer blobs.",
                                "type": "object",
                                "properties": {
                                  "blobPrefixList": {
                                    "type": "array",
                                    "description": "Prefix list of the Azure blobs to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "blobPathList": {
                                    "type": "array",
                                    "description": "List of full path of the blobs to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "containerList": {
                                    "type": "array",
                                    "description": "List of blob containers to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "azureFileFilterDetails": {
                                "description": "Filter details to transfer Azure files.",
                                "type": "object",
                                "properties": {
                                  "filePrefixList": {
                                    "type": "array",
                                    "description": "Prefix list of the Azure files to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "filePathList": {
                                    "type": "array",
                                    "description": "List of full path of the files to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "fileShareList": {
                                    "type": "array",
                                    "description": "List of file shares to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "filterFileDetails": {
                                "type": "array",
                                "description": "Details of the filter files to be used for data transfer.",
                                "items": {
                                  "type": "object",
                                  "description": "Details of the filter files to be used for data transfer.",
                                  "properties": {
                                    "filterFileType": {
                                      "description": "Type of the filter file.",
                                      "type": "string",
                                      "enum": [
                                        "AzureBlob",
                                        "AzureFile"
                                      ],
                                      "x-ms-enum": {
                                        "name": "FilterFileType",
                                        "modelAsString": false,
                                        "values": [
                                          {
                                            "name": "AzureBlob",
                                            "value": "AzureBlob",
                                            "description": "Filter file is of the type AzureBlob."
                                          },
                                          {
                                            "name": "AzureFile",
                                            "value": "AzureFile",
                                            "description": "Filter file is of the type AzureFiles."
                                          }
                                        ]
                                      }
                                    },
                                    "filterFilePath": {
                                      "type": "string",
                                      "description": "Path of the file that contains the details of all items to transfer."
                                    }
                                  },
                                  "required": [
                                    "filterFileType",
                                    "filterFilePath"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "dataAccountType"
                            ]
                          }
                        }
                      },
                      "transferAllDetails": {
                        "description": "Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll",
                        "type": "object",
                        "properties": {
                          "include": {
                            "description": "Details to transfer all data.",
                            "type": "object",
                            "properties": {
                              "dataAccountType": {
                                "type": "string",
                                "description": "Type of the account of data",
                                "default": "StorageAccount",
                                "enum": [
                                  "StorageAccount",
                                  "ManagedDisk"
                                ],
                                "x-ms-enum": {
                                  "name": "DataAccountType",
                                  "modelAsString": false,
                                  "values": [
                                    {
                                      "name": "StorageAccount",
                                      "value": "StorageAccount",
                                      "description": "Storage Accounts ."
                                    },
                                    {
                                      "name": "ManagedDisk",
                                      "value": "ManagedDisk",
                                      "description": "Azure Managed disk storage."
                                    }
                                  ]
                                }
                              },
                              "transferAllBlobs": {
                                "type": "boolean",
                                "description": "To indicate if all Azure blobs have to be transferred"
                              },
                              "transferAllFiles": {
                                "type": "boolean",
                                "description": "To indicate if all Azure Files have to be transferred"
                              }
                            },
                            "required": [
                              "dataAccountType"
                            ]
                          }
                        }
                      }
                    },
                    "required": [
                      "transferConfigurationType"
                    ]
                  },
                  "logCollectionLevel": {
                    "type": "string",
                    "description": "Level of the logs to be collected.",
                    "default": "Error",
                    "enum": [
                      "Error",
                      "Verbose"
                    ],
                    "x-ms-enum": {
                      "name": "LogCollectionLevel",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "Error",
                          "value": "Error",
                          "description": "Only Errors will be collected in the logs."
                        },
                        {
                          "name": "Verbose",
                          "value": "Verbose",
                          "description": "Verbose logging (includes Errors, CRC, size information and others)."
                        }
                      ]
                    }
                  },
                  "accountDetails": {
                    "description": "Account details of the data to be transferred",
                    "type": "object",
                    "properties": {
                      "dataAccountType": {
                        "type": "string",
                        "description": "Account Type of the data to be transferred.",
                        "default": "StorageAccount",
                        "enum": [
                          "StorageAccount",
                          "ManagedDisk"
                        ],
                        "x-ms-enum": {
                          "name": "DataAccountType",
                          "modelAsString": false,
                          "values": [
                            {
                              "name": "StorageAccount",
                              "value": "StorageAccount",
                              "description": "Storage Accounts ."
                            },
                            {
                              "name": "ManagedDisk",
                              "value": "ManagedDisk",
                              "description": "Azure Managed disk storage."
                            }
                          ]
                        }
                      },
                      "sharePassword": {
                        "type": "string",
                        "format": "password",
                        "description": "Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\\-$%^!+=;:_()]+",
                        "x-ms-mutability": [
                          "create"
                        ],
                        "x-ms-secret": true
                      }
                    },
                    "discriminator": "dataAccountType",
                    "required": [
                      "dataAccountType"
                    ]
                  }
                },
                "required": [
                  "transferConfiguration",
                  "accountDetails"
                ]
              }
            },
            "jobDetailsType": {
              "description": "Indicates the type of job details.",
              "type": "string",
              "enum": [
                "DataBox",
                "DataBoxDisk",
                "DataBoxHeavy",
                "DataBoxCustomerDisk"
              ],
              "x-ms-enum": {
                "name": "ClassDiscriminator",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DataBox",
                    "value": "DataBox",
                    "description": "Data Box orders."
                  },
                  {
                    "name": "DataBoxDisk",
                    "value": "DataBoxDisk",
                    "description": "Data Box Disk orders."
                  },
                  {
                    "name": "DataBoxHeavy",
                    "value": "DataBoxHeavy",
                    "description": "Data Box Heavy orders."
                  },
                  {
                    "name": "DataBoxCustomerDisk",
                    "value": "DataBoxCustomerDisk",
                    "description": "Data Box Customer Disk orders."
                  }
                ]
              }
            },
            "preferences": {
              "description": "Preferences for the order.",
              "type": "object",
              "properties": {
                "preferredDataCenterRegion": {
                  "type": "array",
                  "description": "Preferred data center region.",
                  "items": {
                    "type": "string"
                  }
                },
                "transportPreferences": {
                  "description": "Preferences related to the shipment logistics of the sku.",
                  "type": "object",
                  "properties": {
                    "preferredShipmentType": {
                      "description": "Indicates Shipment Logistics type that the customer preferred.",
                      "type": "string",
                      "enum": [
                        "CustomerManaged",
                        "MicrosoftManaged"
                      ],
                      "x-ms-enum": {
                        "name": "TransportShipmentTypes",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "CustomerManaged",
                            "value": "CustomerManaged",
                            "description": "Shipment Logistics is handled by the customer."
                          },
                          {
                            "name": "MicrosoftManaged",
                            "value": "MicrosoftManaged",
                            "description": "Shipment Logistics is handled by Microsoft."
                          }
                        ]
                      }
                    },
                    "isUpdated": {
                      "type": "boolean",
                      "description": "Read only property which indicates whether transport preferences has been updated or not after device is prepared.",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "preferredShipmentType"
                  ]
                },
                "reverseTransportPreferences": {
                  "description": "Optional Preferences related to the reverse shipment logistics of the sku.",
                  "type": "object",
                  "properties": {
                    "preferredShipmentType": {
                      "description": "Indicates Shipment Logistics type that the customer preferred.",
                      "type": "string",
                      "enum": [
                        "CustomerManaged",
                        "MicrosoftManaged"
                      ],
                      "x-ms-enum": {
                        "name": "TransportShipmentTypes",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "CustomerManaged",
                            "value": "CustomerManaged",
                            "description": "Shipment Logistics is handled by the customer."
                          },
                          {
                            "name": "MicrosoftManaged",
                            "value": "MicrosoftManaged",
                            "description": "Shipment Logistics is handled by Microsoft."
                          }
                        ]
                      }
                    },
                    "isUpdated": {
                      "type": "boolean",
                      "description": "Read only property which indicates whether transport preferences has been updated or not after device is prepared.",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "preferredShipmentType"
                  ]
                },
                "encryptionPreferences": {
                  "description": "Preferences related to the Encryption.",
                  "type": "object",
                  "properties": {
                    "doubleEncryption": {
                      "type": "string",
                      "description": "Defines secondary layer of software-based encryption enablement.",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "DoubleEncryption",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Software-based encryption is enabled."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Software-based encryption is disabled."
                          }
                        ]
                      }
                    },
                    "hardwareEncryption": {
                      "description": "Defines Hardware level encryption (Only for disk)",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "HardwareEncryption",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Hardware-based encryption is enabled."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Hardware-based encryption is disabled."
                          }
                        ]
                      }
                    }
                  }
                },
                "storageAccountAccessTierPreferences": {
                  "type": "array",
                  "description": "Preferences related to the Access Tier of storage accounts.",
                  "items": {
                    "type": "string",
                    "enum": [
                      "Archive"
                    ],
                    "x-ms-enum": {
                      "modelAsString": false
                    }
                  }
                }
              }
            },
            "reverseShippingDetails": {
              "description": "Optional Reverse Shipping details for order.",
              "type": "object",
              "properties": {
                "contactDetails": {
                  "description": "Contact Info.",
                  "type": "object",
                  "properties": {
                    "contactName": {
                      "type": "string",
                      "description": "Contact name of the person.",
                      "minLength": 1
                    },
                    "phone": {
                      "type": "string",
                      "description": "Phone number of the contact person.",
                      "minLength": 1
                    },
                    "phoneExtension": {
                      "type": "string",
                      "description": "Phone extension number of the contact person."
                    },
                    "mobile": {
                      "type": "string",
                      "description": "Mobile number of the contact person."
                    }
                  },
                  "required": [
                    "contactName",
                    "phone"
                  ]
                },
                "shippingAddress": {
                  "description": "Shipping address where customer wishes to receive the device.",
                  "type": "object",
                  "properties": {
                    "streetAddress1": {
                      "type": "string",
                      "description": "Street Address line 1."
                    },
                    "streetAddress2": {
                      "type": "string",
                      "description": "Street Address line 2."
                    },
                    "streetAddress3": {
                      "type": "string",
                      "description": "Street Address line 3."
                    },
                    "city": {
                      "type": "string",
                      "description": "Name of the City."
                    },
                    "stateOrProvince": {
                      "type": "string",
                      "description": "Name of the State or Province."
                    },
                    "country": {
                      "type": "string",
                      "description": "Name of the Country."
                    },
                    "postalCode": {
                      "type": "string",
                      "description": "Postal code."
                    },
                    "zipExtendedCode": {
                      "type": "string",
                      "description": "Extended Zip Code."
                    },
                    "companyName": {
                      "type": "string",
                      "description": "Name of the company."
                    },
                    "addressType": {
                      "type": "string",
                      "description": "Type of address.",
                      "default": "None",
                      "enum": [
                        "None",
                        "Residential",
                        "Commercial"
                      ],
                      "x-ms-enum": {
                        "name": "AddressType",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "None",
                            "value": "None",
                            "description": "Address type not known."
                          },
                          {
                            "name": "Residential",
                            "value": "Residential",
                            "description": "Residential Address."
                          },
                          {
                            "name": "Commercial",
                            "value": "Commercial",
                            "description": "Commercial Address."
                          }
                        ]
                      }
                    },
                    "skipAddressValidation": {
                      "type": "boolean",
                      "description": "Flag to indicate if customer has chosen to skip default address validation"
                    },
                    "taxIdentificationNumber": {
                      "type": "string",
                      "description": "Tax Identification Number"
                    }
                  },
                  "required": [
                    "streetAddress1",
                    "country"
                  ]
                },
                "isUpdated": {
                  "type": "boolean",
                  "description": "A flag to indicate whether Reverse Shipping details are updated or not after device has been prepared.\nRead only field",
                  "readOnly": true
                }
              }
            },
            "copyLogDetails": {
              "type": "array",
              "description": "List of copy log details.",
              "items": {
                "type": "object",
                "description": "Details for log generated during copy.",
                "properties": {
                  "copyLogDetailsType": {
                    "description": "Indicates the type of job details.",
                    "type": "string",
                    "enum": [
                      "DataBox",
                      "DataBoxDisk",
                      "DataBoxHeavy",
                      "DataBoxCustomerDisk"
                    ],
                    "x-ms-enum": {
                      "name": "ClassDiscriminator",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "DataBox",
                          "value": "DataBox",
                          "description": "Data Box orders."
                        },
                        {
                          "name": "DataBoxDisk",
                          "value": "DataBoxDisk",
                          "description": "Data Box Disk orders."
                        },
                        {
                          "name": "DataBoxHeavy",
                          "value": "DataBoxHeavy",
                          "description": "Data Box Heavy orders."
                        },
                        {
                          "name": "DataBoxCustomerDisk",
                          "value": "DataBoxCustomerDisk",
                          "description": "Data Box Customer Disk orders."
                        }
                      ]
                    }
                  }
                },
                "discriminator": "copyLogDetailsType",
                "required": [
                  "copyLogDetailsType"
                ]
              },
              "readOnly": true
            },
            "reverseShipmentLabelSasKey": {
              "type": "string",
              "description": "Shared access key to download the return shipment label",
              "readOnly": true
            },
            "chainOfCustodySasKey": {
              "type": "string",
              "description": "Shared access key to download the chain of custody logs",
              "readOnly": true
            },
            "deviceErasureDetails": {
              "description": "Holds device data erasure details",
              "readOnly": true,
              "type": "object",
              "properties": {
                "deviceErasureStatus": {
                  "description": "Holds the device erasure completion status",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "None",
                    "InProgress",
                    "Succeeded",
                    "Failed",
                    "Cancelled",
                    "Cancelling",
                    "SucceededWithErrors",
                    "WaitingForCustomerAction",
                    "SucceededWithWarnings",
                    "WaitingForCustomerActionForKek",
                    "WaitingForCustomerActionForCleanUp",
                    "CustomerActionPerformedForCleanUp",
                    "CustomerActionPerformed"
                  ],
                  "x-ms-enum": {
                    "name": "StageStatus",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "None",
                        "value": "None",
                        "description": "No status available yet."
                      },
                      {
                        "name": "InProgress",
                        "value": "InProgress",
                        "description": "Stage is in progress."
                      },
                      {
                        "name": "Succeeded",
                        "value": "Succeeded",
                        "description": "Stage has succeeded."
                      },
                      {
                        "name": "Failed",
                        "value": "Failed",
                        "description": "Stage has failed."
                      },
                      {
                        "name": "Cancelled",
                        "value": "Cancelled",
                        "description": "Stage has been cancelled."
                      },
                      {
                        "name": "Cancelling",
                        "value": "Cancelling",
                        "description": "Stage is cancelling."
                      },
                      {
                        "name": "SucceededWithErrors",
                        "value": "SucceededWithErrors",
                        "description": "Stage has succeeded with errors."
                      },
                      {
                        "name": "WaitingForCustomerAction",
                        "value": "WaitingForCustomerAction",
                        "description": "Stage is stuck until customer takes some action."
                      },
                      {
                        "name": "SucceededWithWarnings",
                        "value": "SucceededWithWarnings",
                        "description": "Stage has succeeded with warnings."
                      },
                      {
                        "name": "WaitingForCustomerActionForKek",
                        "value": "WaitingForCustomerActionForKek",
                        "description": "Stage is waiting for customer action for kek action items."
                      },
                      {
                        "name": "WaitingForCustomerActionForCleanUp",
                        "value": "WaitingForCustomerActionForCleanUp",
                        "description": "Stage is waiting for customer action for clean up."
                      },
                      {
                        "name": "CustomerActionPerformedForCleanUp",
                        "value": "CustomerActionPerformedForCleanUp",
                        "description": "Stage has performed customer action for clean up."
                      },
                      {
                        "name": "CustomerActionPerformed",
                        "value": "CustomerActionPerformed",
                        "description": "Stage has performed customer action for clean up."
                      }
                    ]
                  }
                },
                "erasureOrDestructionCertificateSasKey": {
                  "type": "string",
                  "description": "Shared access key to download cleanup or destruction certificate for device",
                  "readOnly": true
                },
                "secureErasureCertificateSasKey": {
                  "type": "string",
                  "description": "Shared access key to download secure erasure certificate for the device",
                  "readOnly": true
                }
              }
            },
            "keyEncryptionKey": {
              "description": "Details about which key encryption type is being used.",
              "type": "object",
              "properties": {
                "kekType": {
                  "type": "string",
                  "description": "Type of encryption key used for key encryption.",
                  "default": "MicrosoftManaged",
                  "enum": [
                    "MicrosoftManaged",
                    "CustomerManaged"
                  ],
                  "x-ms-enum": {
                    "name": "KekType",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "MicrosoftManaged",
                        "value": "MicrosoftManaged",
                        "description": "Key encryption key is managed by Microsoft."
                      },
                      {
                        "name": "CustomerManaged",
                        "value": "CustomerManaged",
                        "description": "Key encryption key is managed by the Customer."
                      }
                    ]
                  }
                },
                "identityProperties": {
                  "description": "Managed identity properties used for key encryption.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Managed service identity type."
                    },
                    "userAssigned": {
                      "description": "User assigned identity properties.",
                      "type": "object",
                      "properties": {
                        "resourceId": {
                          "type": "string",
                          "description": "Arm resource id for user assigned identity to be used to fetch MSI token."
                        }
                      }
                    }
                  }
                },
                "kekUrl": {
                  "type": "string",
                  "description": "Key encryption key. It is required in case of Customer managed KekType."
                },
                "kekVaultResourceID": {
                  "type": "string",
                  "description": "Kek vault resource id. It is required in case of Customer managed KekType."
                }
              },
              "required": [
                "kekType"
              ]
            },
            "expectedDataSizeInTeraBytes": {
              "type": "integer",
              "format": "int32",
              "description": "The expected size of the data, which needs to be transferred in this job, in terabytes."
            },
            "actions": {
              "type": "array",
              "description": "Available actions on the job.",
              "items": {
                "type": "string",
                "description": "Resolution code provided by customer.",
                "enum": [
                  "None",
                  "MoveToCleanUpDevice",
                  "Resume",
                  "Restart",
                  "ReachOutToOperation"
                ],
                "x-ms-enum": {
                  "name": "CustomerResolutionCode",
                  "modelAsString": false,
                  "values": [
                    {
                      "name": "None",
                      "value": "None",
                      "description": "No Resolution Yet"
                    },
                    {
                      "name": "MoveToCleanUpDevice",
                      "value": "MoveToCleanUpDevice",
                      "description": "Clean the device"
                    },
                    {
                      "name": "Resume",
                      "value": "Resume",
                      "description": "Resume the job to same stage"
                    },
                    {
                      "name": "Restart",
                      "value": "Restart",
                      "description": "Restart whole action."
                    },
                    {
                      "name": "ReachOutToOperation",
                      "value": "ReachOutToOperation",
                      "description": "Reach out to operation for further action."
                    }
                  ]
                }
              },
              "readOnly": true
            },
            "lastMitigationActionOnJob": {
              "description": "Last mitigation action performed on the job.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "actionDateTimeInUtc": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Action performed date time"
                },
                "isPerformedByCustomer": {
                  "type": "boolean",
                  "description": "Action performed by customer,\npossibility is that mitigation might happen by customer or service or by ops"
                },
                "customerResolution": {
                  "type": "string",
                  "description": "Resolution code provided by customer.",
                  "enum": [
                    "None",
                    "MoveToCleanUpDevice",
                    "Resume",
                    "Restart",
                    "ReachOutToOperation"
                  ],
                  "x-ms-enum": {
                    "name": "CustomerResolutionCode",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "None",
                        "value": "None",
                        "description": "No Resolution Yet"
                      },
                      {
                        "name": "MoveToCleanUpDevice",
                        "value": "MoveToCleanUpDevice",
                        "description": "Clean the device"
                      },
                      {
                        "name": "Resume",
                        "value": "Resume",
                        "description": "Resume the job to same stage"
                      },
                      {
                        "name": "Restart",
                        "value": "Restart",
                        "description": "Restart whole action."
                      },
                      {
                        "name": "ReachOutToOperation",
                        "value": "ReachOutToOperation",
                        "description": "Reach out to operation for further action."
                      }
                    ]
                  }
                }
              }
            },
            "datacenterAddress": {
              "description": "Datacenter address to ship to, for the given sku and storage location.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "datacenterAddressType": {
                  "description": "Data center address type",
                  "type": "string",
                  "enum": [
                    "DatacenterAddressLocation",
                    "DatacenterAddressInstruction"
                  ],
                  "x-ms-enum": {
                    "name": "DatacenterAddressType",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "DatacenterAddressLocation",
                        "value": "DatacenterAddressLocation",
                        "description": "Data center address location."
                      },
                      {
                        "name": "DatacenterAddressInstruction",
                        "value": "DatacenterAddressInstruction",
                        "description": "Data center address instruction."
                      }
                    ]
                  }
                },
                "supportedCarriersForReturnShipment": {
                  "type": "array",
                  "description": "List of supported carriers for return shipment.",
                  "items": {
                    "type": "string"
                  },
                  "readOnly": true
                },
                "dataCenterAzureLocation": {
                  "type": "string",
                  "description": "Azure Location where the Data Center serves primarily.",
                  "readOnly": true
                }
              },
              "discriminator": "datacenterAddressType",
              "required": [
                "datacenterAddressType"
              ]
            },
            "dataCenterCode": {
              "description": "DataCenter code.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "BY2",
                "BY1",
                "ORK70",
                "AM2",
                "AMS20",
                "BY21",
                "BY24",
                "MWH01",
                "AMS06",
                "SSE90",
                "SYD03",
                "SYD23",
                "CBR20",
                "YTO20",
                "CWL20",
                "LON24",
                "BOM01",
                "BL20",
                "BL7",
                "SEL20",
                "TYO01",
                "BN1",
                "SN5",
                "CYS04",
                "TYO22",
                "YTO21",
                "YQB20",
                "FRA22",
                "MAA01",
                "CPQ02",
                "CPQ20",
                "SIN20",
                "HKG20",
                "SG2",
                "MEL23",
                "SEL21",
                "OSA20",
                "SHA03",
                "BJB",
                "JNB22",
                "JNB21",
                "MNZ21",
                "SN8",
                "AUH20",
                "ZRH20",
                "PUS20",
                "AdHoc",
                "CH1",
                "DSM05",
                "DUB07",
                "PNQ01",
                "SVG20",
                "OSA02",
                "OSA22",
                "PAR22",
                "BN7",
                "SN6",
                "BJS20",
                "BL24",
                "IDC5",
                "TYO23",
                "NTG20",
                "DXB23",
                "DSM11",
                "AMS25",
                "CPQ21",
                "OSA23"
              ],
              "x-ms-enum": {
                "name": "DataCenterCode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "BY2",
                    "value": "BY2"
                  },
                  {
                    "name": "BY1",
                    "value": "BY1"
                  },
                  {
                    "name": "ORK70",
                    "value": "ORK70"
                  },
                  {
                    "name": "AM2",
                    "value": "AM2"
                  },
                  {
                    "name": "AMS20",
                    "value": "AMS20"
                  },
                  {
                    "name": "BY21",
                    "value": "BY21"
                  },
                  {
                    "name": "BY24",
                    "value": "BY24"
                  },
                  {
                    "name": "MWH01",
                    "value": "MWH01"
                  },
                  {
                    "name": "AMS06",
                    "value": "AMS06"
                  },
                  {
                    "name": "SSE90",
                    "value": "SSE90"
                  },
                  {
                    "name": "SYD03",
                    "value": "SYD03"
                  },
                  {
                    "name": "SYD23",
                    "value": "SYD23"
                  },
                  {
                    "name": "CBR20",
                    "value": "CBR20"
                  },
                  {
                    "name": "YTO20",
                    "value": "YTO20"
                  },
                  {
                    "name": "CWL20",
                    "value": "CWL20"
                  },
                  {
                    "name": "LON24",
                    "value": "LON24"
                  },
                  {
                    "name": "BOM01",
                    "value": "BOM01"
                  },
                  {
                    "name": "BL20",
                    "value": "BL20"
                  },
                  {
                    "name": "BL7",
                    "value": "BL7"
                  },
                  {
                    "name": "SEL20",
                    "value": "SEL20"
                  },
                  {
                    "name": "TYO01",
                    "value": "TYO01"
                  },
                  {
                    "name": "BN1",
                    "value": "BN1"
                  },
                  {
                    "name": "SN5",
                    "value": "SN5"
                  },
                  {
                    "name": "CYS04",
                    "value": "CYS04"
                  },
                  {
                    "name": "TYO22",
                    "value": "TYO22"
                  },
                  {
                    "name": "YTO21",
                    "value": "YTO21"
                  },
                  {
                    "name": "YQB20",
                    "value": "YQB20"
                  },
                  {
                    "name": "FRA22",
                    "value": "FRA22"
                  },
                  {
                    "name": "MAA01",
                    "value": "MAA01"
                  },
                  {
                    "name": "CPQ02",
                    "value": "CPQ02"
                  },
                  {
                    "name": "CPQ20",
                    "value": "CPQ20"
                  },
                  {
                    "name": "SIN20",
                    "value": "SIN20"
                  },
                  {
                    "name": "HKG20",
                    "value": "HKG20"
                  },
                  {
                    "name": "SG2",
                    "value": "SG2"
                  },
                  {
                    "name": "MEL23",
                    "value": "MEL23"
                  },
                  {
                    "name": "SEL21",
                    "value": "SEL21"
                  },
                  {
                    "name": "OSA20",
                    "value": "OSA20"
                  },
                  {
                    "name": "SHA03",
                    "value": "SHA03"
                  },
                  {
                    "name": "BJB",
                    "value": "BJB"
                  },
                  {
                    "name": "JNB22",
                    "value": "JNB22"
                  },
                  {
                    "name": "JNB21",
                    "value": "JNB21"
                  },
                  {
                    "name": "MNZ21",
                    "value": "MNZ21"
                  },
                  {
                    "name": "SN8",
                    "value": "SN8"
                  },
                  {
                    "name": "AUH20",
                    "value": "AUH20"
                  },
                  {
                    "name": "ZRH20",
                    "value": "ZRH20"
                  },
                  {
                    "name": "PUS20",
                    "value": "PUS20"
                  },
                  {
                    "name": "AdHoc",
                    "value": "AdHoc"
                  },
                  {
                    "name": "CH1",
                    "value": "CH1"
                  },
                  {
                    "name": "DSM05",
                    "value": "DSM05"
                  },
                  {
                    "name": "DUB07",
                    "value": "DUB07"
                  },
                  {
                    "name": "PNQ01",
                    "value": "PNQ01"
                  },
                  {
                    "name": "SVG20",
                    "value": "SVG20"
                  },
                  {
                    "name": "OSA02",
                    "value": "OSA02"
                  },
                  {
                    "name": "OSA22",
                    "value": "OSA22"
                  },
                  {
                    "name": "PAR22",
                    "value": "PAR22"
                  },
                  {
                    "name": "BN7",
                    "value": "BN7"
                  },
                  {
                    "name": "SN6",
                    "value": "SN6"
                  },
                  {
                    "name": "BJS20",
                    "value": "BJS20"
                  },
                  {
                    "name": "BL24",
                    "value": "BL24"
                  },
                  {
                    "name": "IDC5",
                    "value": "IDC5"
                  },
                  {
                    "name": "TYO23",
                    "value": "TYO23"
                  },
                  {
                    "name": "NTG20",
                    "value": "NTG20"
                  },
                  {
                    "name": "DXB23",
                    "value": "DXB23"
                  },
                  {
                    "name": "DSM11",
                    "value": "DSM11"
                  },
                  {
                    "name": "AMS25",
                    "value": "AMS25"
                  },
                  {
                    "name": "CPQ21",
                    "value": "CPQ21"
                  },
                  {
                    "name": "OSA23",
                    "value": "OSA23"
                  }
                ]
              }
            }
          },
          "discriminator": "jobDetailsType",
          "required": [
            "contactDetails",
            "jobDetailsType"
          ]
        }
      ],
      "x-ms-discriminator-value": "DataBoxCustomerDisk"
    },
    "DataBoxDiskCopyLogDetails": {
      "type": "object",
      "description": "Copy Log Details for a disk",
      "properties": {
        "diskSerialNumber": {
          "type": "string",
          "description": "Disk Serial Number.",
          "readOnly": true
        },
        "errorLogLink": {
          "type": "string",
          "description": "Link for copy error logs.",
          "readOnly": true
        },
        "verboseLogLink": {
          "type": "string",
          "description": "Link for copy verbose logs.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Details for log generated during copy.",
          "properties": {
            "copyLogDetailsType": {
              "description": "Indicates the type of job details.",
              "type": "string",
              "enum": [
                "DataBox",
                "DataBoxDisk",
                "DataBoxHeavy",
                "DataBoxCustomerDisk"
              ],
              "x-ms-enum": {
                "name": "ClassDiscriminator",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DataBox",
                    "value": "DataBox",
                    "description": "Data Box orders."
                  },
                  {
                    "name": "DataBoxDisk",
                    "value": "DataBoxDisk",
                    "description": "Data Box Disk orders."
                  },
                  {
                    "name": "DataBoxHeavy",
                    "value": "DataBoxHeavy",
                    "description": "Data Box Heavy orders."
                  },
                  {
                    "name": "DataBoxCustomerDisk",
                    "value": "DataBoxCustomerDisk",
                    "description": "Data Box Customer Disk orders."
                  }
                ]
              }
            }
          },
          "discriminator": "copyLogDetailsType",
          "required": [
            "copyLogDetailsType"
          ]
        }
      ],
      "x-ms-discriminator-value": "DataBoxDisk"
    },
    "DataBoxDiskCopyProgress": {
      "type": "object",
      "description": "DataBox Disk Copy Progress",
      "properties": {
        "serialNumber": {
          "type": "string",
          "description": "The serial number of the disk",
          "readOnly": true
        },
        "bytesCopied": {
          "type": "integer",
          "format": "int64",
          "description": "Bytes copied during the copy of disk.",
          "readOnly": true
        },
        "percentComplete": {
          "type": "integer",
          "format": "int32",
          "description": "Indicates the percentage completed for the copy of the disk.",
          "readOnly": true
        },
        "status": {
          "description": "The Status of the copy",
          "readOnly": true,
          "type": "string",
          "enum": [
            "NotStarted",
            "InProgress",
            "Completed",
            "CompletedWithErrors",
            "Failed",
            "NotReturned",
            "HardwareError",
            "DeviceFormatted",
            "DeviceMetadataModified",
            "StorageAccountNotAccessible",
            "UnsupportedData",
            "DriveNotReceived",
            "UnsupportedDrive",
            "OtherServiceError",
            "OtherUserError",
            "DriveNotDetected",
            "DriveCorrupted",
            "MetadataFilesModifiedOrRemoved"
          ],
          "x-ms-enum": {
            "name": "CopyStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "NotStarted",
                "value": "NotStarted",
                "description": "Data copy hasn't started yet."
              },
              {
                "name": "InProgress",
                "value": "InProgress",
                "description": "Data copy is in progress."
              },
              {
                "name": "Completed",
                "value": "Completed",
                "description": "Data copy completed."
              },
              {
                "name": "CompletedWithErrors",
                "value": "CompletedWithErrors",
                "description": "Data copy completed with errors."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Data copy failed. No data was copied."
              },
              {
                "name": "NotReturned",
                "value": "NotReturned",
                "description": "No copy triggered as device was not returned."
              },
              {
                "name": "HardwareError",
                "value": "HardwareError",
                "description": "The Device has hit hardware issues."
              },
              {
                "name": "DeviceFormatted",
                "value": "DeviceFormatted",
                "description": "Data copy failed. The Device was formatted by user."
              },
              {
                "name": "DeviceMetadataModified",
                "value": "DeviceMetadataModified",
                "description": "Data copy failed. Device metadata was modified by user."
              },
              {
                "name": "StorageAccountNotAccessible",
                "value": "StorageAccountNotAccessible",
                "description": "Data copy failed. Storage Account was not accessible during copy."
              },
              {
                "name": "UnsupportedData",
                "value": "UnsupportedData",
                "description": "Data copy failed. The Device data content is not supported."
              },
              {
                "name": "DriveNotReceived",
                "value": "DriveNotReceived",
                "description": "No copy triggered as device was not received."
              },
              {
                "name": "UnsupportedDrive",
                "value": "UnsupportedDrive",
                "description": "No copy triggered as device type is not supported."
              },
              {
                "name": "OtherServiceError",
                "value": "OtherServiceError",
                "description": "Copy failed due to service error."
              },
              {
                "name": "OtherUserError",
                "value": "OtherUserError",
                "description": "Copy failed due to user error."
              },
              {
                "name": "DriveNotDetected",
                "value": "DriveNotDetected",
                "description": "Copy failed due to disk detection error."
              },
              {
                "name": "DriveCorrupted",
                "value": "DriveCorrupted",
                "description": "Copy failed due to corrupted drive."
              },
              {
                "name": "MetadataFilesModifiedOrRemoved",
                "value": "MetadataFilesModifiedOrRemoved",
                "description": "Copy failed due to modified or removed metadata files."
              }
            ]
          }
        },
        "error": {
          "$ref": "#/definitions/CloudError",
          "description": "Error, if any, in the stage",
          "readOnly": true
        },
        "actions": {
          "type": "array",
          "description": "Available actions on the job.",
          "items": {
            "type": "string",
            "description": "Resolution code provided by customer.",
            "enum": [
              "None",
              "MoveToCleanUpDevice",
              "Resume",
              "Restart",
              "ReachOutToOperation"
            ],
            "x-ms-enum": {
              "name": "CustomerResolutionCode",
              "modelAsString": false,
              "values": [
                {
                  "name": "None",
                  "value": "None",
                  "description": "No Resolution Yet"
                },
                {
                  "name": "MoveToCleanUpDevice",
                  "value": "MoveToCleanUpDevice",
                  "description": "Clean the device"
                },
                {
                  "name": "Resume",
                  "value": "Resume",
                  "description": "Resume the job to same stage"
                },
                {
                  "name": "Restart",
                  "value": "Restart",
                  "description": "Restart whole action."
                },
                {
                  "name": "ReachOutToOperation",
                  "value": "ReachOutToOperation",
                  "description": "Reach out to operation for further action."
                }
              ]
            }
          },
          "readOnly": true
        }
      }
    },
    "DataBoxDiskGranularCopyLogDetails": {
      "type": "object",
      "description": "Granular Copy Log Details for customer disk",
      "properties": {
        "copyLogDetailsType": {
          "description": "Indicates the type of job details.",
          "type": "string",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy",
            "DataBoxCustomerDisk"
          ],
          "x-ms-enum": {
            "name": "ClassDiscriminator",
            "modelAsString": false,
            "values": [
              {
                "name": "DataBox",
                "value": "DataBox",
                "description": "Data Box orders."
              },
              {
                "name": "DataBoxDisk",
                "value": "DataBoxDisk",
                "description": "Data Box Disk orders."
              },
              {
                "name": "DataBoxHeavy",
                "value": "DataBoxHeavy",
                "description": "Data Box Heavy orders."
              },
              {
                "name": "DataBoxCustomerDisk",
                "value": "DataBoxCustomerDisk",
                "description": "Data Box Customer Disk orders."
              }
            ]
          }
        },
        "serialNumber": {
          "type": "string",
          "description": "Disk Serial Number.",
          "readOnly": true
        },
        "accountId": {
          "type": "string",
          "description": "Account id.",
          "readOnly": true
        },
        "errorLogLink": {
          "type": "string",
          "description": "Link for copy error logs.",
          "readOnly": true
        },
        "verboseLogLink": {
          "type": "string",
          "description": "Link for copy verbose logs.",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "DataBoxCustomerDisk"
    },
    "DataBoxDiskGranularCopyProgress": {
      "type": "object",
      "description": "DataBox Disk Granular Copy Progress",
      "properties": {
        "serialNumber": {
          "type": "string",
          "description": "Disk Serial Number.",
          "readOnly": true
        },
        "copyStatus": {
          "description": "The Status of the copy",
          "readOnly": true,
          "type": "string",
          "enum": [
            "NotStarted",
            "InProgress",
            "Completed",
            "CompletedWithErrors",
            "Failed",
            "NotReturned",
            "HardwareError",
            "DeviceFormatted",
            "DeviceMetadataModified",
            "StorageAccountNotAccessible",
            "UnsupportedData",
            "DriveNotReceived",
            "UnsupportedDrive",
            "OtherServiceError",
            "OtherUserError",
            "DriveNotDetected",
            "DriveCorrupted",
            "MetadataFilesModifiedOrRemoved"
          ],
          "x-ms-enum": {
            "name": "CopyStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "NotStarted",
                "value": "NotStarted",
                "description": "Data copy hasn't started yet."
              },
              {
                "name": "InProgress",
                "value": "InProgress",
                "description": "Data copy is in progress."
              },
              {
                "name": "Completed",
                "value": "Completed",
                "description": "Data copy completed."
              },
              {
                "name": "CompletedWithErrors",
                "value": "CompletedWithErrors",
                "description": "Data copy completed with errors."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Data copy failed. No data was copied."
              },
              {
                "name": "NotReturned",
                "value": "NotReturned",
                "description": "No copy triggered as device was not returned."
              },
              {
                "name": "HardwareError",
                "value": "HardwareError",
                "description": "The Device has hit hardware issues."
              },
              {
                "name": "DeviceFormatted",
                "value": "DeviceFormatted",
                "description": "Data copy failed. The Device was formatted by user."
              },
              {
                "name": "DeviceMetadataModified",
                "value": "DeviceMetadataModified",
                "description": "Data copy failed. Device metadata was modified by user."
              },
              {
                "name": "StorageAccountNotAccessible",
                "value": "StorageAccountNotAccessible",
                "description": "Data copy failed. Storage Account was not accessible during copy."
              },
              {
                "name": "UnsupportedData",
                "value": "UnsupportedData",
                "description": "Data copy failed. The Device data content is not supported."
              },
              {
                "name": "DriveNotReceived",
                "value": "DriveNotReceived",
                "description": "No copy triggered as device was not received."
              },
              {
                "name": "UnsupportedDrive",
                "value": "UnsupportedDrive",
                "description": "No copy triggered as device type is not supported."
              },
              {
                "name": "OtherServiceError",
                "value": "OtherServiceError",
                "description": "Copy failed due to service error."
              },
              {
                "name": "OtherUserError",
                "value": "OtherUserError",
                "description": "Copy failed due to user error."
              },
              {
                "name": "DriveNotDetected",
                "value": "DriveNotDetected",
                "description": "Copy failed due to disk detection error."
              },
              {
                "name": "DriveCorrupted",
                "value": "DriveCorrupted",
                "description": "Copy failed due to corrupted drive."
              },
              {
                "name": "MetadataFilesModifiedOrRemoved",
                "value": "MetadataFilesModifiedOrRemoved",
                "description": "Copy failed due to modified or removed metadata files."
              }
            ]
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/GranularCopyProgress"
        }
      ]
    },
    "DataBoxDiskJobDetails": {
      "type": "object",
      "description": "DataBox Disk Job Details.",
      "properties": {
        "preferredDisks": {
          "type": "object",
          "description": "User preference on what size disks are needed for the job. The map is from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against an int.",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          }
        },
        "copyProgress": {
          "type": "array",
          "description": "Copy progress per disk.",
          "items": {
            "$ref": "#/definitions/DataBoxDiskCopyProgress"
          },
          "readOnly": true
        },
        "granularCopyProgress": {
          "type": "array",
          "description": "Copy progress per disk.",
          "items": {
            "$ref": "#/definitions/DataBoxDiskGranularCopyProgress"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "granularCopyLogDetails": {
          "type": "array",
          "description": "Copy progress per disk.",
          "items": {
            "type": "object",
            "description": "Granular Copy Log Details for customer disk",
            "properties": {
              "copyLogDetailsType": {
                "description": "Indicates the type of job details.",
                "type": "string",
                "enum": [
                  "DataBox",
                  "DataBoxDisk",
                  "DataBoxHeavy",
                  "DataBoxCustomerDisk"
                ],
                "x-ms-enum": {
                  "name": "ClassDiscriminator",
                  "modelAsString": false,
                  "values": [
                    {
                      "name": "DataBox",
                      "value": "DataBox",
                      "description": "Data Box orders."
                    },
                    {
                      "name": "DataBoxDisk",
                      "value": "DataBoxDisk",
                      "description": "Data Box Disk orders."
                    },
                    {
                      "name": "DataBoxHeavy",
                      "value": "DataBoxHeavy",
                      "description": "Data Box Heavy orders."
                    },
                    {
                      "name": "DataBoxCustomerDisk",
                      "value": "DataBoxCustomerDisk",
                      "description": "Data Box Customer Disk orders."
                    }
                  ]
                }
              },
              "serialNumber": {
                "type": "string",
                "description": "Disk Serial Number.",
                "readOnly": true
              },
              "accountId": {
                "type": "string",
                "description": "Account id.",
                "readOnly": true
              },
              "errorLogLink": {
                "type": "string",
                "description": "Link for copy error logs.",
                "readOnly": true
              },
              "verboseLogLink": {
                "type": "string",
                "description": "Link for copy verbose logs.",
                "readOnly": true
              }
            },
            "x-ms-discriminator-value": "DataBoxCustomerDisk"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "disksAndSizeDetails": {
          "type": "object",
          "description": "Contains the map of disk serial number to the disk size being used for the job. Is returned only after the disks are shipped to the customer.",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          },
          "readOnly": true
        },
        "passkey": {
          "type": "string",
          "description": "User entered passkey for DataBox Disk job."
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Job details.",
          "properties": {
            "jobStages": {
              "type": "array",
              "description": "List of stages that run in the job.",
              "items": {
                "type": "object",
                "description": "Job stages.",
                "properties": {
                  "stageName": {
                    "description": "Name of the job stage.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "DeviceOrdered",
                      "DevicePrepared",
                      "Dispatched",
                      "Delivered",
                      "PickedUp",
                      "AtAzureDC",
                      "DataCopy",
                      "Completed",
                      "CompletedWithErrors",
                      "Cancelled",
                      "Failed_IssueReportedAtCustomer",
                      "Failed_IssueDetectedAtAzureDC",
                      "Aborted",
                      "CompletedWithWarnings",
                      "ReadyToDispatchFromAzureDC",
                      "ReadyToReceiveAtAzureDC",
                      "Created",
                      "ShippedToAzureDC",
                      "AwaitingShipmentDetails",
                      "PreparingToShipFromAzureDC",
                      "ShippedToCustomer"
                    ],
                    "x-ms-enum": {
                      "name": "StageName",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "DeviceOrdered",
                          "value": "DeviceOrdered",
                          "description": "An order has been created."
                        },
                        {
                          "name": "DevicePrepared",
                          "value": "DevicePrepared",
                          "description": "A device has been prepared for the order."
                        },
                        {
                          "name": "Dispatched",
                          "value": "Dispatched",
                          "description": "Device has been dispatched to the user of the order."
                        },
                        {
                          "name": "Delivered",
                          "value": "Delivered",
                          "description": "Device has been delivered to the user of the order."
                        },
                        {
                          "name": "PickedUp",
                          "value": "PickedUp",
                          "description": "Device has been picked up from user and in transit to Azure datacenter."
                        },
                        {
                          "name": "AtAzureDC",
                          "value": "AtAzureDC",
                          "description": "Device has been received at Azure datacenter from the user."
                        },
                        {
                          "name": "DataCopy",
                          "value": "DataCopy",
                          "description": "Data copy from the device at Azure datacenter."
                        },
                        {
                          "name": "Completed",
                          "value": "Completed",
                          "description": "Order has completed."
                        },
                        {
                          "name": "CompletedWithErrors",
                          "value": "CompletedWithErrors",
                          "description": "Order has completed with errors."
                        },
                        {
                          "name": "Cancelled",
                          "value": "Cancelled",
                          "description": "Order has been cancelled."
                        },
                        {
                          "name": "Failed_IssueReportedAtCustomer",
                          "value": "Failed_IssueReportedAtCustomer",
                          "description": "Order has failed due to issue reported by user."
                        },
                        {
                          "name": "Failed_IssueDetectedAtAzureDC",
                          "value": "Failed_IssueDetectedAtAzureDC",
                          "description": "Order has failed due to issue detected at Azure datacenter."
                        },
                        {
                          "name": "Aborted",
                          "value": "Aborted",
                          "description": "Order has been aborted."
                        },
                        {
                          "name": "CompletedWithWarnings",
                          "value": "CompletedWithWarnings",
                          "description": "Order has completed with warnings."
                        },
                        {
                          "name": "ReadyToDispatchFromAzureDC",
                          "value": "ReadyToDispatchFromAzureDC",
                          "description": "Device is ready to be handed to customer from Azure DC."
                        },
                        {
                          "name": "ReadyToReceiveAtAzureDC",
                          "value": "ReadyToReceiveAtAzureDC",
                          "description": "Device can be dropped off at Azure DC."
                        },
                        {
                          "name": "Created",
                          "value": "Created",
                          "description": "Job created by the customer."
                        },
                        {
                          "name": "ShippedToAzureDC",
                          "value": "ShippedToAzureDC",
                          "description": "User shipped the device to AzureDC."
                        },
                        {
                          "name": "AwaitingShipmentDetails",
                          "value": "AwaitingShipmentDetails",
                          "description": "Awaiting shipment details of device from customer."
                        },
                        {
                          "name": "PreparingToShipFromAzureDC",
                          "value": "PreparingToShipFromAzureDC",
                          "description": "Preparing the device to ship to customer."
                        },
                        {
                          "name": "ShippedToCustomer",
                          "value": "ShippedToCustomer",
                          "description": "Shipped the device to customer."
                        }
                      ]
                    }
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Display name of the job stage.",
                    "readOnly": true
                  },
                  "stageStatus": {
                    "description": "Status of the job stage.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "None",
                      "InProgress",
                      "Succeeded",
                      "Failed",
                      "Cancelled",
                      "Cancelling",
                      "SucceededWithErrors",
                      "WaitingForCustomerAction",
                      "SucceededWithWarnings",
                      "WaitingForCustomerActionForKek",
                      "WaitingForCustomerActionForCleanUp",
                      "CustomerActionPerformedForCleanUp",
                      "CustomerActionPerformed"
                    ],
                    "x-ms-enum": {
                      "name": "StageStatus",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "None",
                          "value": "None",
                          "description": "No status available yet."
                        },
                        {
                          "name": "InProgress",
                          "value": "InProgress",
                          "description": "Stage is in progress."
                        },
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Stage has succeeded."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Stage has failed."
                        },
                        {
                          "name": "Cancelled",
                          "value": "Cancelled",
                          "description": "Stage has been cancelled."
                        },
                        {
                          "name": "Cancelling",
                          "value": "Cancelling",
                          "description": "Stage is cancelling."
                        },
                        {
                          "name": "SucceededWithErrors",
                          "value": "SucceededWithErrors",
                          "description": "Stage has succeeded with errors."
                        },
                        {
                          "name": "WaitingForCustomerAction",
                          "value": "WaitingForCustomerAction",
                          "description": "Stage is stuck until customer takes some action."
                        },
                        {
                          "name": "SucceededWithWarnings",
                          "value": "SucceededWithWarnings",
                          "description": "Stage has succeeded with warnings."
                        },
                        {
                          "name": "WaitingForCustomerActionForKek",
                          "value": "WaitingForCustomerActionForKek",
                          "description": "Stage is waiting for customer action for kek action items."
                        },
                        {
                          "name": "WaitingForCustomerActionForCleanUp",
                          "value": "WaitingForCustomerActionForCleanUp",
                          "description": "Stage is waiting for customer action for clean up."
                        },
                        {
                          "name": "CustomerActionPerformedForCleanUp",
                          "value": "CustomerActionPerformedForCleanUp",
                          "description": "Stage has performed customer action for clean up."
                        },
                        {
                          "name": "CustomerActionPerformed",
                          "value": "CustomerActionPerformed",
                          "description": "Stage has performed customer action for clean up."
                        }
                      ]
                    }
                  },
                  "stageTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time for the job stage in UTC ISO 8601 format.",
                    "readOnly": true
                  },
                  "jobStageDetails": {
                    "description": "Job Stage Details",
                    "readOnly": true
                  },
                  "delayInformation": {
                    "type": "array",
                    "description": "Delay information for the job stages.",
                    "items": {
                      "type": "object",
                      "description": "Job Delay Notification details",
                      "properties": {
                        "status": {
                          "description": "Status of notification",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Active",
                            "Resolved"
                          ],
                          "x-ms-enum": {
                            "name": "DelayNotificationStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Active",
                                "value": "Active",
                                "description": "Delay is still active"
                              },
                              {
                                "name": "Resolved",
                                "value": "Resolved",
                                "description": "Delay has been resolved"
                              }
                            ]
                          }
                        },
                        "errorCode": {
                          "description": "Delay Error code",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "InternalIssueDelay",
                            "ActiveOrderLimitBreachedDelay",
                            "HighDemandDelay",
                            "LargeNumberOfFilesDelay"
                          ],
                          "x-ms-enum": {
                            "name": "PortalDelayErrorCode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "InternalIssueDelay",
                                "value": "InternalIssueDelay",
                                "description": "Delay due to any internal reasons"
                              },
                              {
                                "name": "ActiveOrderLimitBreachedDelay",
                                "value": "ActiveOrderLimitBreachedDelay",
                                "description": "Active Order limit breached."
                              },
                              {
                                "name": "HighDemandDelay",
                                "value": "HighDemandDelay",
                                "description": "High demand"
                              },
                              {
                                "name": "LargeNumberOfFilesDelay",
                                "value": "LargeNumberOfFilesDelay",
                                "description": "Slow copy due to large number of files"
                              }
                            ]
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the delay.",
                          "readOnly": true
                        },
                        "startTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp when the delay notification was created.",
                          "readOnly": true
                        },
                        "resolutionTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp when the delay notification was resolved.",
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true,
                    "x-ms-identifiers": []
                  }
                }
              },
              "readOnly": true
            },
            "contactDetails": {
              "description": "Contact details for notification and shipping.",
              "type": "object",
              "properties": {
                "contactName": {
                  "type": "string",
                  "description": "Contact name of the person."
                },
                "phone": {
                  "type": "string",
                  "description": "Phone number of the contact person."
                },
                "phoneExtension": {
                  "type": "string",
                  "description": "Phone extension number of the contact person."
                },
                "mobile": {
                  "type": "string",
                  "description": "Mobile number of the contact person."
                },
                "emailList": {
                  "type": "array",
                  "description": "List of Email-ids to be notified about job progress.",
                  "items": {
                    "type": "string"
                  }
                },
                "notificationPreference": {
                  "type": "array",
                  "description": "Notification preference for a job stage.",
                  "items": {
                    "type": "object",
                    "description": "Notification preference for a job stage.",
                    "properties": {
                      "stageName": {
                        "description": "Name of the stage.",
                        "type": "string",
                        "enum": [
                          "DevicePrepared",
                          "Dispatched",
                          "Delivered",
                          "PickedUp",
                          "AtAzureDC",
                          "DataCopy",
                          "Created",
                          "ShippedToCustomer"
                        ],
                        "x-ms-enum": {
                          "name": "NotificationStageName",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "DevicePrepared",
                              "value": "DevicePrepared",
                              "description": "Notification at device prepared stage."
                            },
                            {
                              "name": "Dispatched",
                              "value": "Dispatched",
                              "description": "Notification at device dispatched stage."
                            },
                            {
                              "name": "Delivered",
                              "value": "Delivered",
                              "description": "Notification at device delivered stage."
                            },
                            {
                              "name": "PickedUp",
                              "value": "PickedUp",
                              "description": "Notification at device picked up from user stage."
                            },
                            {
                              "name": "AtAzureDC",
                              "value": "AtAzureDC",
                              "description": "Notification at device received at Azure datacenter stage."
                            },
                            {
                              "name": "DataCopy",
                              "value": "DataCopy",
                              "description": "Notification at data copy started stage."
                            },
                            {
                              "name": "Created",
                              "value": "Created",
                              "description": "Notification at job created stage."
                            },
                            {
                              "name": "ShippedToCustomer",
                              "value": "ShippedToCustomer",
                              "description": "Notification at shipped devices to customer stage."
                            }
                          ]
                        }
                      },
                      "sendNotification": {
                        "type": "boolean",
                        "description": "Notification is required or not.",
                        "default": true
                      }
                    },
                    "required": [
                      "stageName",
                      "sendNotification"
                    ]
                  }
                }
              },
              "required": [
                "contactName",
                "phone",
                "emailList"
              ]
            },
            "shippingAddress": {
              "description": "Shipping address of the customer.",
              "type": "object",
              "properties": {
                "streetAddress1": {
                  "type": "string",
                  "description": "Street Address line 1."
                },
                "streetAddress2": {
                  "type": "string",
                  "description": "Street Address line 2."
                },
                "streetAddress3": {
                  "type": "string",
                  "description": "Street Address line 3."
                },
                "city": {
                  "type": "string",
                  "description": "Name of the City."
                },
                "stateOrProvince": {
                  "type": "string",
                  "description": "Name of the State or Province."
                },
                "country": {
                  "type": "string",
                  "description": "Name of the Country."
                },
                "postalCode": {
                  "type": "string",
                  "description": "Postal code."
                },
                "zipExtendedCode": {
                  "type": "string",
                  "description": "Extended Zip Code."
                },
                "companyName": {
                  "type": "string",
                  "description": "Name of the company."
                },
                "addressType": {
                  "type": "string",
                  "description": "Type of address.",
                  "default": "None",
                  "enum": [
                    "None",
                    "Residential",
                    "Commercial"
                  ],
                  "x-ms-enum": {
                    "name": "AddressType",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "None",
                        "value": "None",
                        "description": "Address type not known."
                      },
                      {
                        "name": "Residential",
                        "value": "Residential",
                        "description": "Residential Address."
                      },
                      {
                        "name": "Commercial",
                        "value": "Commercial",
                        "description": "Commercial Address."
                      }
                    ]
                  }
                },
                "skipAddressValidation": {
                  "type": "boolean",
                  "description": "Flag to indicate if customer has chosen to skip default address validation"
                },
                "taxIdentificationNumber": {
                  "type": "string",
                  "description": "Tax Identification Number"
                }
              },
              "required": [
                "streetAddress1",
                "country"
              ]
            },
            "deliveryPackage": {
              "description": "Delivery package shipping details.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "trackingUrl": {
                  "type": "string",
                  "description": "Url where shipment can be tracked.",
                  "readOnly": true
                },
                "carrierName": {
                  "type": "string",
                  "description": "Name of the carrier.",
                  "readOnly": true
                },
                "trackingId": {
                  "type": "string",
                  "description": "Tracking Id of shipment.",
                  "readOnly": true
                }
              }
            },
            "returnPackage": {
              "description": "Return package shipping details.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "trackingUrl": {
                  "type": "string",
                  "description": "Url where shipment can be tracked.",
                  "readOnly": true
                },
                "carrierName": {
                  "type": "string",
                  "description": "Name of the carrier.",
                  "readOnly": true
                },
                "trackingId": {
                  "type": "string",
                  "description": "Tracking Id of shipment.",
                  "readOnly": true
                }
              }
            },
            "dataImportDetails": {
              "type": "array",
              "description": "Details of the data to be imported into azure.",
              "items": {
                "type": "object",
                "description": "Details of the data to be used for importing data to azure.",
                "properties": {
                  "accountDetails": {
                    "description": "Account details of the data to be transferred",
                    "type": "object",
                    "properties": {
                      "dataAccountType": {
                        "type": "string",
                        "description": "Account Type of the data to be transferred.",
                        "default": "StorageAccount",
                        "enum": [
                          "StorageAccount",
                          "ManagedDisk"
                        ],
                        "x-ms-enum": {
                          "name": "DataAccountType",
                          "modelAsString": false,
                          "values": [
                            {
                              "name": "StorageAccount",
                              "value": "StorageAccount",
                              "description": "Storage Accounts ."
                            },
                            {
                              "name": "ManagedDisk",
                              "value": "ManagedDisk",
                              "description": "Azure Managed disk storage."
                            }
                          ]
                        }
                      },
                      "sharePassword": {
                        "type": "string",
                        "format": "password",
                        "description": "Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\\-$%^!+=;:_()]+",
                        "x-ms-mutability": [
                          "create"
                        ],
                        "x-ms-secret": true
                      }
                    },
                    "discriminator": "dataAccountType",
                    "required": [
                      "dataAccountType"
                    ]
                  },
                  "logCollectionLevel": {
                    "type": "string",
                    "description": "Level of the logs to be collected.",
                    "default": "Error",
                    "enum": [
                      "Error",
                      "Verbose"
                    ],
                    "x-ms-enum": {
                      "name": "LogCollectionLevel",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "Error",
                          "value": "Error",
                          "description": "Only Errors will be collected in the logs."
                        },
                        {
                          "name": "Verbose",
                          "value": "Verbose",
                          "description": "Verbose logging (includes Errors, CRC, size information and others)."
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "accountDetails"
                ]
              }
            },
            "dataExportDetails": {
              "type": "array",
              "description": "Details of the data to be exported from azure.",
              "items": {
                "type": "object",
                "description": "Details of the data to be used for exporting data from azure.",
                "properties": {
                  "transferConfiguration": {
                    "description": "Configuration for the data transfer.",
                    "type": "object",
                    "properties": {
                      "transferConfigurationType": {
                        "description": "Type of the configuration for transfer.",
                        "type": "string",
                        "enum": [
                          "TransferAll",
                          "TransferUsingFilter"
                        ],
                        "x-ms-enum": {
                          "name": "TransferConfigurationType",
                          "modelAsString": false,
                          "values": [
                            {
                              "name": "TransferAll",
                              "value": "TransferAll",
                              "description": "Transfer all the data."
                            },
                            {
                              "name": "TransferUsingFilter",
                              "value": "TransferUsingFilter",
                              "description": "Transfer using filter."
                            }
                          ]
                        }
                      },
                      "transferFilterDetails": {
                        "description": "Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.",
                        "type": "object",
                        "properties": {
                          "include": {
                            "description": "Details of the filtering the transfer of data.",
                            "type": "object",
                            "properties": {
                              "dataAccountType": {
                                "type": "string",
                                "description": "Type of the account of data.",
                                "default": "StorageAccount",
                                "enum": [
                                  "StorageAccount",
                                  "ManagedDisk"
                                ],
                                "x-ms-enum": {
                                  "name": "DataAccountType",
                                  "modelAsString": false,
                                  "values": [
                                    {
                                      "name": "StorageAccount",
                                      "value": "StorageAccount",
                                      "description": "Storage Accounts ."
                                    },
                                    {
                                      "name": "ManagedDisk",
                                      "value": "ManagedDisk",
                                      "description": "Azure Managed disk storage."
                                    }
                                  ]
                                }
                              },
                              "blobFilterDetails": {
                                "description": "Filter details to transfer blobs.",
                                "type": "object",
                                "properties": {
                                  "blobPrefixList": {
                                    "type": "array",
                                    "description": "Prefix list of the Azure blobs to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "blobPathList": {
                                    "type": "array",
                                    "description": "List of full path of the blobs to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "containerList": {
                                    "type": "array",
                                    "description": "List of blob containers to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "azureFileFilterDetails": {
                                "description": "Filter details to transfer Azure files.",
                                "type": "object",
                                "properties": {
                                  "filePrefixList": {
                                    "type": "array",
                                    "description": "Prefix list of the Azure files to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "filePathList": {
                                    "type": "array",
                                    "description": "List of full path of the files to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "fileShareList": {
                                    "type": "array",
                                    "description": "List of file shares to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "filterFileDetails": {
                                "type": "array",
                                "description": "Details of the filter files to be used for data transfer.",
                                "items": {
                                  "type": "object",
                                  "description": "Details of the filter files to be used for data transfer.",
                                  "properties": {
                                    "filterFileType": {
                                      "description": "Type of the filter file.",
                                      "type": "string",
                                      "enum": [
                                        "AzureBlob",
                                        "AzureFile"
                                      ],
                                      "x-ms-enum": {
                                        "name": "FilterFileType",
                                        "modelAsString": false,
                                        "values": [
                                          {
                                            "name": "AzureBlob",
                                            "value": "AzureBlob",
                                            "description": "Filter file is of the type AzureBlob."
                                          },
                                          {
                                            "name": "AzureFile",
                                            "value": "AzureFile",
                                            "description": "Filter file is of the type AzureFiles."
                                          }
                                        ]
                                      }
                                    },
                                    "filterFilePath": {
                                      "type": "string",
                                      "description": "Path of the file that contains the details of all items to transfer."
                                    }
                                  },
                                  "required": [
                                    "filterFileType",
                                    "filterFilePath"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "dataAccountType"
                            ]
                          }
                        }
                      },
                      "transferAllDetails": {
                        "description": "Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll",
                        "type": "object",
                        "properties": {
                          "include": {
                            "description": "Details to transfer all data.",
                            "type": "object",
                            "properties": {
                              "dataAccountType": {
                                "type": "string",
                                "description": "Type of the account of data",
                                "default": "StorageAccount",
                                "enum": [
                                  "StorageAccount",
                                  "ManagedDisk"
                                ],
                                "x-ms-enum": {
                                  "name": "DataAccountType",
                                  "modelAsString": false,
                                  "values": [
                                    {
                                      "name": "StorageAccount",
                                      "value": "StorageAccount",
                                      "description": "Storage Accounts ."
                                    },
                                    {
                                      "name": "ManagedDisk",
                                      "value": "ManagedDisk",
                                      "description": "Azure Managed disk storage."
                                    }
                                  ]
                                }
                              },
                              "transferAllBlobs": {
                                "type": "boolean",
                                "description": "To indicate if all Azure blobs have to be transferred"
                              },
                              "transferAllFiles": {
                                "type": "boolean",
                                "description": "To indicate if all Azure Files have to be transferred"
                              }
                            },
                            "required": [
                              "dataAccountType"
                            ]
                          }
                        }
                      }
                    },
                    "required": [
                      "transferConfigurationType"
                    ]
                  },
                  "logCollectionLevel": {
                    "type": "string",
                    "description": "Level of the logs to be collected.",
                    "default": "Error",
                    "enum": [
                      "Error",
                      "Verbose"
                    ],
                    "x-ms-enum": {
                      "name": "LogCollectionLevel",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "Error",
                          "value": "Error",
                          "description": "Only Errors will be collected in the logs."
                        },
                        {
                          "name": "Verbose",
                          "value": "Verbose",
                          "description": "Verbose logging (includes Errors, CRC, size information and others)."
                        }
                      ]
                    }
                  },
                  "accountDetails": {
                    "description": "Account details of the data to be transferred",
                    "type": "object",
                    "properties": {
                      "dataAccountType": {
                        "type": "string",
                        "description": "Account Type of the data to be transferred.",
                        "default": "StorageAccount",
                        "enum": [
                          "StorageAccount",
                          "ManagedDisk"
                        ],
                        "x-ms-enum": {
                          "name": "DataAccountType",
                          "modelAsString": false,
                          "values": [
                            {
                              "name": "StorageAccount",
                              "value": "StorageAccount",
                              "description": "Storage Accounts ."
                            },
                            {
                              "name": "ManagedDisk",
                              "value": "ManagedDisk",
                              "description": "Azure Managed disk storage."
                            }
                          ]
                        }
                      },
                      "sharePassword": {
                        "type": "string",
                        "format": "password",
                        "description": "Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\\-$%^!+=;:_()]+",
                        "x-ms-mutability": [
                          "create"
                        ],
                        "x-ms-secret": true
                      }
                    },
                    "discriminator": "dataAccountType",
                    "required": [
                      "dataAccountType"
                    ]
                  }
                },
                "required": [
                  "transferConfiguration",
                  "accountDetails"
                ]
              }
            },
            "jobDetailsType": {
              "description": "Indicates the type of job details.",
              "type": "string",
              "enum": [
                "DataBox",
                "DataBoxDisk",
                "DataBoxHeavy",
                "DataBoxCustomerDisk"
              ],
              "x-ms-enum": {
                "name": "ClassDiscriminator",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DataBox",
                    "value": "DataBox",
                    "description": "Data Box orders."
                  },
                  {
                    "name": "DataBoxDisk",
                    "value": "DataBoxDisk",
                    "description": "Data Box Disk orders."
                  },
                  {
                    "name": "DataBoxHeavy",
                    "value": "DataBoxHeavy",
                    "description": "Data Box Heavy orders."
                  },
                  {
                    "name": "DataBoxCustomerDisk",
                    "value": "DataBoxCustomerDisk",
                    "description": "Data Box Customer Disk orders."
                  }
                ]
              }
            },
            "preferences": {
              "description": "Preferences for the order.",
              "type": "object",
              "properties": {
                "preferredDataCenterRegion": {
                  "type": "array",
                  "description": "Preferred data center region.",
                  "items": {
                    "type": "string"
                  }
                },
                "transportPreferences": {
                  "description": "Preferences related to the shipment logistics of the sku.",
                  "type": "object",
                  "properties": {
                    "preferredShipmentType": {
                      "description": "Indicates Shipment Logistics type that the customer preferred.",
                      "type": "string",
                      "enum": [
                        "CustomerManaged",
                        "MicrosoftManaged"
                      ],
                      "x-ms-enum": {
                        "name": "TransportShipmentTypes",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "CustomerManaged",
                            "value": "CustomerManaged",
                            "description": "Shipment Logistics is handled by the customer."
                          },
                          {
                            "name": "MicrosoftManaged",
                            "value": "MicrosoftManaged",
                            "description": "Shipment Logistics is handled by Microsoft."
                          }
                        ]
                      }
                    },
                    "isUpdated": {
                      "type": "boolean",
                      "description": "Read only property which indicates whether transport preferences has been updated or not after device is prepared.",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "preferredShipmentType"
                  ]
                },
                "reverseTransportPreferences": {
                  "description": "Optional Preferences related to the reverse shipment logistics of the sku.",
                  "type": "object",
                  "properties": {
                    "preferredShipmentType": {
                      "description": "Indicates Shipment Logistics type that the customer preferred.",
                      "type": "string",
                      "enum": [
                        "CustomerManaged",
                        "MicrosoftManaged"
                      ],
                      "x-ms-enum": {
                        "name": "TransportShipmentTypes",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "CustomerManaged",
                            "value": "CustomerManaged",
                            "description": "Shipment Logistics is handled by the customer."
                          },
                          {
                            "name": "MicrosoftManaged",
                            "value": "MicrosoftManaged",
                            "description": "Shipment Logistics is handled by Microsoft."
                          }
                        ]
                      }
                    },
                    "isUpdated": {
                      "type": "boolean",
                      "description": "Read only property which indicates whether transport preferences has been updated or not after device is prepared.",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "preferredShipmentType"
                  ]
                },
                "encryptionPreferences": {
                  "description": "Preferences related to the Encryption.",
                  "type": "object",
                  "properties": {
                    "doubleEncryption": {
                      "type": "string",
                      "description": "Defines secondary layer of software-based encryption enablement.",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "DoubleEncryption",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Software-based encryption is enabled."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Software-based encryption is disabled."
                          }
                        ]
                      }
                    },
                    "hardwareEncryption": {
                      "description": "Defines Hardware level encryption (Only for disk)",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "HardwareEncryption",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Hardware-based encryption is enabled."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Hardware-based encryption is disabled."
                          }
                        ]
                      }
                    }
                  }
                },
                "storageAccountAccessTierPreferences": {
                  "type": "array",
                  "description": "Preferences related to the Access Tier of storage accounts.",
                  "items": {
                    "type": "string",
                    "enum": [
                      "Archive"
                    ],
                    "x-ms-enum": {
                      "modelAsString": false
                    }
                  }
                }
              }
            },
            "reverseShippingDetails": {
              "description": "Optional Reverse Shipping details for order.",
              "type": "object",
              "properties": {
                "contactDetails": {
                  "description": "Contact Info.",
                  "type": "object",
                  "properties": {
                    "contactName": {
                      "type": "string",
                      "description": "Contact name of the person.",
                      "minLength": 1
                    },
                    "phone": {
                      "type": "string",
                      "description": "Phone number of the contact person.",
                      "minLength": 1
                    },
                    "phoneExtension": {
                      "type": "string",
                      "description": "Phone extension number of the contact person."
                    },
                    "mobile": {
                      "type": "string",
                      "description": "Mobile number of the contact person."
                    }
                  },
                  "required": [
                    "contactName",
                    "phone"
                  ]
                },
                "shippingAddress": {
                  "description": "Shipping address where customer wishes to receive the device.",
                  "type": "object",
                  "properties": {
                    "streetAddress1": {
                      "type": "string",
                      "description": "Street Address line 1."
                    },
                    "streetAddress2": {
                      "type": "string",
                      "description": "Street Address line 2."
                    },
                    "streetAddress3": {
                      "type": "string",
                      "description": "Street Address line 3."
                    },
                    "city": {
                      "type": "string",
                      "description": "Name of the City."
                    },
                    "stateOrProvince": {
                      "type": "string",
                      "description": "Name of the State or Province."
                    },
                    "country": {
                      "type": "string",
                      "description": "Name of the Country."
                    },
                    "postalCode": {
                      "type": "string",
                      "description": "Postal code."
                    },
                    "zipExtendedCode": {
                      "type": "string",
                      "description": "Extended Zip Code."
                    },
                    "companyName": {
                      "type": "string",
                      "description": "Name of the company."
                    },
                    "addressType": {
                      "type": "string",
                      "description": "Type of address.",
                      "default": "None",
                      "enum": [
                        "None",
                        "Residential",
                        "Commercial"
                      ],
                      "x-ms-enum": {
                        "name": "AddressType",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "None",
                            "value": "None",
                            "description": "Address type not known."
                          },
                          {
                            "name": "Residential",
                            "value": "Residential",
                            "description": "Residential Address."
                          },
                          {
                            "name": "Commercial",
                            "value": "Commercial",
                            "description": "Commercial Address."
                          }
                        ]
                      }
                    },
                    "skipAddressValidation": {
                      "type": "boolean",
                      "description": "Flag to indicate if customer has chosen to skip default address validation"
                    },
                    "taxIdentificationNumber": {
                      "type": "string",
                      "description": "Tax Identification Number"
                    }
                  },
                  "required": [
                    "streetAddress1",
                    "country"
                  ]
                },
                "isUpdated": {
                  "type": "boolean",
                  "description": "A flag to indicate whether Reverse Shipping details are updated or not after device has been prepared.\nRead only field",
                  "readOnly": true
                }
              }
            },
            "copyLogDetails": {
              "type": "array",
              "description": "List of copy log details.",
              "items": {
                "type": "object",
                "description": "Details for log generated during copy.",
                "properties": {
                  "copyLogDetailsType": {
                    "description": "Indicates the type of job details.",
                    "type": "string",
                    "enum": [
                      "DataBox",
                      "DataBoxDisk",
                      "DataBoxHeavy",
                      "DataBoxCustomerDisk"
                    ],
                    "x-ms-enum": {
                      "name": "ClassDiscriminator",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "DataBox",
                          "value": "DataBox",
                          "description": "Data Box orders."
                        },
                        {
                          "name": "DataBoxDisk",
                          "value": "DataBoxDisk",
                          "description": "Data Box Disk orders."
                        },
                        {
                          "name": "DataBoxHeavy",
                          "value": "DataBoxHeavy",
                          "description": "Data Box Heavy orders."
                        },
                        {
                          "name": "DataBoxCustomerDisk",
                          "value": "DataBoxCustomerDisk",
                          "description": "Data Box Customer Disk orders."
                        }
                      ]
                    }
                  }
                },
                "discriminator": "copyLogDetailsType",
                "required": [
                  "copyLogDetailsType"
                ]
              },
              "readOnly": true
            },
            "reverseShipmentLabelSasKey": {
              "type": "string",
              "description": "Shared access key to download the return shipment label",
              "readOnly": true
            },
            "chainOfCustodySasKey": {
              "type": "string",
              "description": "Shared access key to download the chain of custody logs",
              "readOnly": true
            },
            "deviceErasureDetails": {
              "description": "Holds device data erasure details",
              "readOnly": true,
              "type": "object",
              "properties": {
                "deviceErasureStatus": {
                  "description": "Holds the device erasure completion status",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "None",
                    "InProgress",
                    "Succeeded",
                    "Failed",
                    "Cancelled",
                    "Cancelling",
                    "SucceededWithErrors",
                    "WaitingForCustomerAction",
                    "SucceededWithWarnings",
                    "WaitingForCustomerActionForKek",
                    "WaitingForCustomerActionForCleanUp",
                    "CustomerActionPerformedForCleanUp",
                    "CustomerActionPerformed"
                  ],
                  "x-ms-enum": {
                    "name": "StageStatus",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "None",
                        "value": "None",
                        "description": "No status available yet."
                      },
                      {
                        "name": "InProgress",
                        "value": "InProgress",
                        "description": "Stage is in progress."
                      },
                      {
                        "name": "Succeeded",
                        "value": "Succeeded",
                        "description": "Stage has succeeded."
                      },
                      {
                        "name": "Failed",
                        "value": "Failed",
                        "description": "Stage has failed."
                      },
                      {
                        "name": "Cancelled",
                        "value": "Cancelled",
                        "description": "Stage has been cancelled."
                      },
                      {
                        "name": "Cancelling",
                        "value": "Cancelling",
                        "description": "Stage is cancelling."
                      },
                      {
                        "name": "SucceededWithErrors",
                        "value": "SucceededWithErrors",
                        "description": "Stage has succeeded with errors."
                      },
                      {
                        "name": "WaitingForCustomerAction",
                        "value": "WaitingForCustomerAction",
                        "description": "Stage is stuck until customer takes some action."
                      },
                      {
                        "name": "SucceededWithWarnings",
                        "value": "SucceededWithWarnings",
                        "description": "Stage has succeeded with warnings."
                      },
                      {
                        "name": "WaitingForCustomerActionForKek",
                        "value": "WaitingForCustomerActionForKek",
                        "description": "Stage is waiting for customer action for kek action items."
                      },
                      {
                        "name": "WaitingForCustomerActionForCleanUp",
                        "value": "WaitingForCustomerActionForCleanUp",
                        "description": "Stage is waiting for customer action for clean up."
                      },
                      {
                        "name": "CustomerActionPerformedForCleanUp",
                        "value": "CustomerActionPerformedForCleanUp",
                        "description": "Stage has performed customer action for clean up."
                      },
                      {
                        "name": "CustomerActionPerformed",
                        "value": "CustomerActionPerformed",
                        "description": "Stage has performed customer action for clean up."
                      }
                    ]
                  }
                },
                "erasureOrDestructionCertificateSasKey": {
                  "type": "string",
                  "description": "Shared access key to download cleanup or destruction certificate for device",
                  "readOnly": true
                },
                "secureErasureCertificateSasKey": {
                  "type": "string",
                  "description": "Shared access key to download secure erasure certificate for the device",
                  "readOnly": true
                }
              }
            },
            "keyEncryptionKey": {
              "description": "Details about which key encryption type is being used.",
              "type": "object",
              "properties": {
                "kekType": {
                  "type": "string",
                  "description": "Type of encryption key used for key encryption.",
                  "default": "MicrosoftManaged",
                  "enum": [
                    "MicrosoftManaged",
                    "CustomerManaged"
                  ],
                  "x-ms-enum": {
                    "name": "KekType",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "MicrosoftManaged",
                        "value": "MicrosoftManaged",
                        "description": "Key encryption key is managed by Microsoft."
                      },
                      {
                        "name": "CustomerManaged",
                        "value": "CustomerManaged",
                        "description": "Key encryption key is managed by the Customer."
                      }
                    ]
                  }
                },
                "identityProperties": {
                  "description": "Managed identity properties used for key encryption.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Managed service identity type."
                    },
                    "userAssigned": {
                      "description": "User assigned identity properties.",
                      "type": "object",
                      "properties": {
                        "resourceId": {
                          "type": "string",
                          "description": "Arm resource id for user assigned identity to be used to fetch MSI token."
                        }
                      }
                    }
                  }
                },
                "kekUrl": {
                  "type": "string",
                  "description": "Key encryption key. It is required in case of Customer managed KekType."
                },
                "kekVaultResourceID": {
                  "type": "string",
                  "description": "Kek vault resource id. It is required in case of Customer managed KekType."
                }
              },
              "required": [
                "kekType"
              ]
            },
            "expectedDataSizeInTeraBytes": {
              "type": "integer",
              "format": "int32",
              "description": "The expected size of the data, which needs to be transferred in this job, in terabytes."
            },
            "actions": {
              "type": "array",
              "description": "Available actions on the job.",
              "items": {
                "type": "string",
                "description": "Resolution code provided by customer.",
                "enum": [
                  "None",
                  "MoveToCleanUpDevice",
                  "Resume",
                  "Restart",
                  "ReachOutToOperation"
                ],
                "x-ms-enum": {
                  "name": "CustomerResolutionCode",
                  "modelAsString": false,
                  "values": [
                    {
                      "name": "None",
                      "value": "None",
                      "description": "No Resolution Yet"
                    },
                    {
                      "name": "MoveToCleanUpDevice",
                      "value": "MoveToCleanUpDevice",
                      "description": "Clean the device"
                    },
                    {
                      "name": "Resume",
                      "value": "Resume",
                      "description": "Resume the job to same stage"
                    },
                    {
                      "name": "Restart",
                      "value": "Restart",
                      "description": "Restart whole action."
                    },
                    {
                      "name": "ReachOutToOperation",
                      "value": "ReachOutToOperation",
                      "description": "Reach out to operation for further action."
                    }
                  ]
                }
              },
              "readOnly": true
            },
            "lastMitigationActionOnJob": {
              "description": "Last mitigation action performed on the job.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "actionDateTimeInUtc": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Action performed date time"
                },
                "isPerformedByCustomer": {
                  "type": "boolean",
                  "description": "Action performed by customer,\npossibility is that mitigation might happen by customer or service or by ops"
                },
                "customerResolution": {
                  "type": "string",
                  "description": "Resolution code provided by customer.",
                  "enum": [
                    "None",
                    "MoveToCleanUpDevice",
                    "Resume",
                    "Restart",
                    "ReachOutToOperation"
                  ],
                  "x-ms-enum": {
                    "name": "CustomerResolutionCode",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "None",
                        "value": "None",
                        "description": "No Resolution Yet"
                      },
                      {
                        "name": "MoveToCleanUpDevice",
                        "value": "MoveToCleanUpDevice",
                        "description": "Clean the device"
                      },
                      {
                        "name": "Resume",
                        "value": "Resume",
                        "description": "Resume the job to same stage"
                      },
                      {
                        "name": "Restart",
                        "value": "Restart",
                        "description": "Restart whole action."
                      },
                      {
                        "name": "ReachOutToOperation",
                        "value": "ReachOutToOperation",
                        "description": "Reach out to operation for further action."
                      }
                    ]
                  }
                }
              }
            },
            "datacenterAddress": {
              "description": "Datacenter address to ship to, for the given sku and storage location.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "datacenterAddressType": {
                  "description": "Data center address type",
                  "type": "string",
                  "enum": [
                    "DatacenterAddressLocation",
                    "DatacenterAddressInstruction"
                  ],
                  "x-ms-enum": {
                    "name": "DatacenterAddressType",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "DatacenterAddressLocation",
                        "value": "DatacenterAddressLocation",
                        "description": "Data center address location."
                      },
                      {
                        "name": "DatacenterAddressInstruction",
                        "value": "DatacenterAddressInstruction",
                        "description": "Data center address instruction."
                      }
                    ]
                  }
                },
                "supportedCarriersForReturnShipment": {
                  "type": "array",
                  "description": "List of supported carriers for return shipment.",
                  "items": {
                    "type": "string"
                  },
                  "readOnly": true
                },
                "dataCenterAzureLocation": {
                  "type": "string",
                  "description": "Azure Location where the Data Center serves primarily.",
                  "readOnly": true
                }
              },
              "discriminator": "datacenterAddressType",
              "required": [
                "datacenterAddressType"
              ]
            },
            "dataCenterCode": {
              "description": "DataCenter code.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "BY2",
                "BY1",
                "ORK70",
                "AM2",
                "AMS20",
                "BY21",
                "BY24",
                "MWH01",
                "AMS06",
                "SSE90",
                "SYD03",
                "SYD23",
                "CBR20",
                "YTO20",
                "CWL20",
                "LON24",
                "BOM01",
                "BL20",
                "BL7",
                "SEL20",
                "TYO01",
                "BN1",
                "SN5",
                "CYS04",
                "TYO22",
                "YTO21",
                "YQB20",
                "FRA22",
                "MAA01",
                "CPQ02",
                "CPQ20",
                "SIN20",
                "HKG20",
                "SG2",
                "MEL23",
                "SEL21",
                "OSA20",
                "SHA03",
                "BJB",
                "JNB22",
                "JNB21",
                "MNZ21",
                "SN8",
                "AUH20",
                "ZRH20",
                "PUS20",
                "AdHoc",
                "CH1",
                "DSM05",
                "DUB07",
                "PNQ01",
                "SVG20",
                "OSA02",
                "OSA22",
                "PAR22",
                "BN7",
                "SN6",
                "BJS20",
                "BL24",
                "IDC5",
                "TYO23",
                "NTG20",
                "DXB23",
                "DSM11",
                "AMS25",
                "CPQ21",
                "OSA23"
              ],
              "x-ms-enum": {
                "name": "DataCenterCode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "BY2",
                    "value": "BY2"
                  },
                  {
                    "name": "BY1",
                    "value": "BY1"
                  },
                  {
                    "name": "ORK70",
                    "value": "ORK70"
                  },
                  {
                    "name": "AM2",
                    "value": "AM2"
                  },
                  {
                    "name": "AMS20",
                    "value": "AMS20"
                  },
                  {
                    "name": "BY21",
                    "value": "BY21"
                  },
                  {
                    "name": "BY24",
                    "value": "BY24"
                  },
                  {
                    "name": "MWH01",
                    "value": "MWH01"
                  },
                  {
                    "name": "AMS06",
                    "value": "AMS06"
                  },
                  {
                    "name": "SSE90",
                    "value": "SSE90"
                  },
                  {
                    "name": "SYD03",
                    "value": "SYD03"
                  },
                  {
                    "name": "SYD23",
                    "value": "SYD23"
                  },
                  {
                    "name": "CBR20",
                    "value": "CBR20"
                  },
                  {
                    "name": "YTO20",
                    "value": "YTO20"
                  },
                  {
                    "name": "CWL20",
                    "value": "CWL20"
                  },
                  {
                    "name": "LON24",
                    "value": "LON24"
                  },
                  {
                    "name": "BOM01",
                    "value": "BOM01"
                  },
                  {
                    "name": "BL20",
                    "value": "BL20"
                  },
                  {
                    "name": "BL7",
                    "value": "BL7"
                  },
                  {
                    "name": "SEL20",
                    "value": "SEL20"
                  },
                  {
                    "name": "TYO01",
                    "value": "TYO01"
                  },
                  {
                    "name": "BN1",
                    "value": "BN1"
                  },
                  {
                    "name": "SN5",
                    "value": "SN5"
                  },
                  {
                    "name": "CYS04",
                    "value": "CYS04"
                  },
                  {
                    "name": "TYO22",
                    "value": "TYO22"
                  },
                  {
                    "name": "YTO21",
                    "value": "YTO21"
                  },
                  {
                    "name": "YQB20",
                    "value": "YQB20"
                  },
                  {
                    "name": "FRA22",
                    "value": "FRA22"
                  },
                  {
                    "name": "MAA01",
                    "value": "MAA01"
                  },
                  {
                    "name": "CPQ02",
                    "value": "CPQ02"
                  },
                  {
                    "name": "CPQ20",
                    "value": "CPQ20"
                  },
                  {
                    "name": "SIN20",
                    "value": "SIN20"
                  },
                  {
                    "name": "HKG20",
                    "value": "HKG20"
                  },
                  {
                    "name": "SG2",
                    "value": "SG2"
                  },
                  {
                    "name": "MEL23",
                    "value": "MEL23"
                  },
                  {
                    "name": "SEL21",
                    "value": "SEL21"
                  },
                  {
                    "name": "OSA20",
                    "value": "OSA20"
                  },
                  {
                    "name": "SHA03",
                    "value": "SHA03"
                  },
                  {
                    "name": "BJB",
                    "value": "BJB"
                  },
                  {
                    "name": "JNB22",
                    "value": "JNB22"
                  },
                  {
                    "name": "JNB21",
                    "value": "JNB21"
                  },
                  {
                    "name": "MNZ21",
                    "value": "MNZ21"
                  },
                  {
                    "name": "SN8",
                    "value": "SN8"
                  },
                  {
                    "name": "AUH20",
                    "value": "AUH20"
                  },
                  {
                    "name": "ZRH20",
                    "value": "ZRH20"
                  },
                  {
                    "name": "PUS20",
                    "value": "PUS20"
                  },
                  {
                    "name": "AdHoc",
                    "value": "AdHoc"
                  },
                  {
                    "name": "CH1",
                    "value": "CH1"
                  },
                  {
                    "name": "DSM05",
                    "value": "DSM05"
                  },
                  {
                    "name": "DUB07",
                    "value": "DUB07"
                  },
                  {
                    "name": "PNQ01",
                    "value": "PNQ01"
                  },
                  {
                    "name": "SVG20",
                    "value": "SVG20"
                  },
                  {
                    "name": "OSA02",
                    "value": "OSA02"
                  },
                  {
                    "name": "OSA22",
                    "value": "OSA22"
                  },
                  {
                    "name": "PAR22",
                    "value": "PAR22"
                  },
                  {
                    "name": "BN7",
                    "value": "BN7"
                  },
                  {
                    "name": "SN6",
                    "value": "SN6"
                  },
                  {
                    "name": "BJS20",
                    "value": "BJS20"
                  },
                  {
                    "name": "BL24",
                    "value": "BL24"
                  },
                  {
                    "name": "IDC5",
                    "value": "IDC5"
                  },
                  {
                    "name": "TYO23",
                    "value": "TYO23"
                  },
                  {
                    "name": "NTG20",
                    "value": "NTG20"
                  },
                  {
                    "name": "DXB23",
                    "value": "DXB23"
                  },
                  {
                    "name": "DSM11",
                    "value": "DSM11"
                  },
                  {
                    "name": "AMS25",
                    "value": "AMS25"
                  },
                  {
                    "name": "CPQ21",
                    "value": "CPQ21"
                  },
                  {
                    "name": "OSA23",
                    "value": "OSA23"
                  }
                ]
              }
            }
          },
          "discriminator": "jobDetailsType",
          "required": [
            "contactDetails",
            "jobDetailsType"
          ]
        }
      ],
      "x-ms-discriminator-value": "DataBoxDisk"
    },
    "DataBoxDiskJobSecrets": {
      "type": "object",
      "description": "The secrets related to disk job.",
      "properties": {
        "diskSecrets": {
          "type": "array",
          "description": "Contains the list of secrets object for that device.",
          "items": {
            "type": "object",
            "description": "Contains all the secrets of a Disk.",
            "properties": {
              "diskSerialNumber": {
                "type": "string",
                "description": "Serial number of the assigned disk.",
                "readOnly": true
              },
              "bitLockerKey": {
                "type": "string",
                "description": "Bit Locker key of the disk which can be used to unlock the disk to copy data.",
                "readOnly": true
              }
            }
          },
          "readOnly": true
        },
        "passKey": {
          "type": "string",
          "description": "PassKey for the disk Job.",
          "readOnly": true
        },
        "isPasskeyUserDefined": {
          "type": "boolean",
          "description": "Whether passkey was provided by user.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/JobSecrets"
        }
      ],
      "x-ms-discriminator-value": "DataBoxDisk"
    },
    "DataBoxHeavyAccountCopyLogDetails": {
      "type": "object",
      "description": "Copy log details for a storage account for Databox heavy",
      "properties": {
        "accountName": {
          "type": "string",
          "description": "Account name.",
          "readOnly": true
        },
        "copyLogLink": {
          "type": "array",
          "description": "Link for copy logs.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "copyVerboseLogLink": {
          "type": "array",
          "description": "Link for copy verbose logs. This will be set only when the LogCollectionLevel is set to verbose.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Details for log generated during copy.",
          "properties": {
            "copyLogDetailsType": {
              "description": "Indicates the type of job details.",
              "type": "string",
              "enum": [
                "DataBox",
                "DataBoxDisk",
                "DataBoxHeavy",
                "DataBoxCustomerDisk"
              ],
              "x-ms-enum": {
                "name": "ClassDiscriminator",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DataBox",
                    "value": "DataBox",
                    "description": "Data Box orders."
                  },
                  {
                    "name": "DataBoxDisk",
                    "value": "DataBoxDisk",
                    "description": "Data Box Disk orders."
                  },
                  {
                    "name": "DataBoxHeavy",
                    "value": "DataBoxHeavy",
                    "description": "Data Box Heavy orders."
                  },
                  {
                    "name": "DataBoxCustomerDisk",
                    "value": "DataBoxCustomerDisk",
                    "description": "Data Box Customer Disk orders."
                  }
                ]
              }
            }
          },
          "discriminator": "copyLogDetailsType",
          "required": [
            "copyLogDetailsType"
          ]
        }
      ],
      "x-ms-discriminator-value": "DataBoxHeavy"
    },
    "DataBoxHeavyJobDetails": {
      "type": "object",
      "description": "Databox Heavy Device Job Details",
      "properties": {
        "copyProgress": {
          "type": "array",
          "description": "Copy progress per account.",
          "items": {
            "$ref": "#/definitions/CopyProgress"
          },
          "readOnly": true
        },
        "devicePassword": {
          "type": "string",
          "description": "Set Device password for unlocking Databox Heavy. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\\-$%^!+=;:_()]+"
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Job details.",
          "properties": {
            "jobStages": {
              "type": "array",
              "description": "List of stages that run in the job.",
              "items": {
                "type": "object",
                "description": "Job stages.",
                "properties": {
                  "stageName": {
                    "description": "Name of the job stage.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "DeviceOrdered",
                      "DevicePrepared",
                      "Dispatched",
                      "Delivered",
                      "PickedUp",
                      "AtAzureDC",
                      "DataCopy",
                      "Completed",
                      "CompletedWithErrors",
                      "Cancelled",
                      "Failed_IssueReportedAtCustomer",
                      "Failed_IssueDetectedAtAzureDC",
                      "Aborted",
                      "CompletedWithWarnings",
                      "ReadyToDispatchFromAzureDC",
                      "ReadyToReceiveAtAzureDC",
                      "Created",
                      "ShippedToAzureDC",
                      "AwaitingShipmentDetails",
                      "PreparingToShipFromAzureDC",
                      "ShippedToCustomer"
                    ],
                    "x-ms-enum": {
                      "name": "StageName",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "DeviceOrdered",
                          "value": "DeviceOrdered",
                          "description": "An order has been created."
                        },
                        {
                          "name": "DevicePrepared",
                          "value": "DevicePrepared",
                          "description": "A device has been prepared for the order."
                        },
                        {
                          "name": "Dispatched",
                          "value": "Dispatched",
                          "description": "Device has been dispatched to the user of the order."
                        },
                        {
                          "name": "Delivered",
                          "value": "Delivered",
                          "description": "Device has been delivered to the user of the order."
                        },
                        {
                          "name": "PickedUp",
                          "value": "PickedUp",
                          "description": "Device has been picked up from user and in transit to Azure datacenter."
                        },
                        {
                          "name": "AtAzureDC",
                          "value": "AtAzureDC",
                          "description": "Device has been received at Azure datacenter from the user."
                        },
                        {
                          "name": "DataCopy",
                          "value": "DataCopy",
                          "description": "Data copy from the device at Azure datacenter."
                        },
                        {
                          "name": "Completed",
                          "value": "Completed",
                          "description": "Order has completed."
                        },
                        {
                          "name": "CompletedWithErrors",
                          "value": "CompletedWithErrors",
                          "description": "Order has completed with errors."
                        },
                        {
                          "name": "Cancelled",
                          "value": "Cancelled",
                          "description": "Order has been cancelled."
                        },
                        {
                          "name": "Failed_IssueReportedAtCustomer",
                          "value": "Failed_IssueReportedAtCustomer",
                          "description": "Order has failed due to issue reported by user."
                        },
                        {
                          "name": "Failed_IssueDetectedAtAzureDC",
                          "value": "Failed_IssueDetectedAtAzureDC",
                          "description": "Order has failed due to issue detected at Azure datacenter."
                        },
                        {
                          "name": "Aborted",
                          "value": "Aborted",
                          "description": "Order has been aborted."
                        },
                        {
                          "name": "CompletedWithWarnings",
                          "value": "CompletedWithWarnings",
                          "description": "Order has completed with warnings."
                        },
                        {
                          "name": "ReadyToDispatchFromAzureDC",
                          "value": "ReadyToDispatchFromAzureDC",
                          "description": "Device is ready to be handed to customer from Azure DC."
                        },
                        {
                          "name": "ReadyToReceiveAtAzureDC",
                          "value": "ReadyToReceiveAtAzureDC",
                          "description": "Device can be dropped off at Azure DC."
                        },
                        {
                          "name": "Created",
                          "value": "Created",
                          "description": "Job created by the customer."
                        },
                        {
                          "name": "ShippedToAzureDC",
                          "value": "ShippedToAzureDC",
                          "description": "User shipped the device to AzureDC."
                        },
                        {
                          "name": "AwaitingShipmentDetails",
                          "value": "AwaitingShipmentDetails",
                          "description": "Awaiting shipment details of device from customer."
                        },
                        {
                          "name": "PreparingToShipFromAzureDC",
                          "value": "PreparingToShipFromAzureDC",
                          "description": "Preparing the device to ship to customer."
                        },
                        {
                          "name": "ShippedToCustomer",
                          "value": "ShippedToCustomer",
                          "description": "Shipped the device to customer."
                        }
                      ]
                    }
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Display name of the job stage.",
                    "readOnly": true
                  },
                  "stageStatus": {
                    "description": "Status of the job stage.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "None",
                      "InProgress",
                      "Succeeded",
                      "Failed",
                      "Cancelled",
                      "Cancelling",
                      "SucceededWithErrors",
                      "WaitingForCustomerAction",
                      "SucceededWithWarnings",
                      "WaitingForCustomerActionForKek",
                      "WaitingForCustomerActionForCleanUp",
                      "CustomerActionPerformedForCleanUp",
                      "CustomerActionPerformed"
                    ],
                    "x-ms-enum": {
                      "name": "StageStatus",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "None",
                          "value": "None",
                          "description": "No status available yet."
                        },
                        {
                          "name": "InProgress",
                          "value": "InProgress",
                          "description": "Stage is in progress."
                        },
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Stage has succeeded."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Stage has failed."
                        },
                        {
                          "name": "Cancelled",
                          "value": "Cancelled",
                          "description": "Stage has been cancelled."
                        },
                        {
                          "name": "Cancelling",
                          "value": "Cancelling",
                          "description": "Stage is cancelling."
                        },
                        {
                          "name": "SucceededWithErrors",
                          "value": "SucceededWithErrors",
                          "description": "Stage has succeeded with errors."
                        },
                        {
                          "name": "WaitingForCustomerAction",
                          "value": "WaitingForCustomerAction",
                          "description": "Stage is stuck until customer takes some action."
                        },
                        {
                          "name": "SucceededWithWarnings",
                          "value": "SucceededWithWarnings",
                          "description": "Stage has succeeded with warnings."
                        },
                        {
                          "name": "WaitingForCustomerActionForKek",
                          "value": "WaitingForCustomerActionForKek",
                          "description": "Stage is waiting for customer action for kek action items."
                        },
                        {
                          "name": "WaitingForCustomerActionForCleanUp",
                          "value": "WaitingForCustomerActionForCleanUp",
                          "description": "Stage is waiting for customer action for clean up."
                        },
                        {
                          "name": "CustomerActionPerformedForCleanUp",
                          "value": "CustomerActionPerformedForCleanUp",
                          "description": "Stage has performed customer action for clean up."
                        },
                        {
                          "name": "CustomerActionPerformed",
                          "value": "CustomerActionPerformed",
                          "description": "Stage has performed customer action for clean up."
                        }
                      ]
                    }
                  },
                  "stageTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time for the job stage in UTC ISO 8601 format.",
                    "readOnly": true
                  },
                  "jobStageDetails": {
                    "description": "Job Stage Details",
                    "readOnly": true
                  },
                  "delayInformation": {
                    "type": "array",
                    "description": "Delay information for the job stages.",
                    "items": {
                      "type": "object",
                      "description": "Job Delay Notification details",
                      "properties": {
                        "status": {
                          "description": "Status of notification",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Active",
                            "Resolved"
                          ],
                          "x-ms-enum": {
                            "name": "DelayNotificationStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Active",
                                "value": "Active",
                                "description": "Delay is still active"
                              },
                              {
                                "name": "Resolved",
                                "value": "Resolved",
                                "description": "Delay has been resolved"
                              }
                            ]
                          }
                        },
                        "errorCode": {
                          "description": "Delay Error code",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "InternalIssueDelay",
                            "ActiveOrderLimitBreachedDelay",
                            "HighDemandDelay",
                            "LargeNumberOfFilesDelay"
                          ],
                          "x-ms-enum": {
                            "name": "PortalDelayErrorCode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "InternalIssueDelay",
                                "value": "InternalIssueDelay",
                                "description": "Delay due to any internal reasons"
                              },
                              {
                                "name": "ActiveOrderLimitBreachedDelay",
                                "value": "ActiveOrderLimitBreachedDelay",
                                "description": "Active Order limit breached."
                              },
                              {
                                "name": "HighDemandDelay",
                                "value": "HighDemandDelay",
                                "description": "High demand"
                              },
                              {
                                "name": "LargeNumberOfFilesDelay",
                                "value": "LargeNumberOfFilesDelay",
                                "description": "Slow copy due to large number of files"
                              }
                            ]
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the delay.",
                          "readOnly": true
                        },
                        "startTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp when the delay notification was created.",
                          "readOnly": true
                        },
                        "resolutionTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp when the delay notification was resolved.",
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true,
                    "x-ms-identifiers": []
                  }
                }
              },
              "readOnly": true
            },
            "contactDetails": {
              "description": "Contact details for notification and shipping.",
              "type": "object",
              "properties": {
                "contactName": {
                  "type": "string",
                  "description": "Contact name of the person."
                },
                "phone": {
                  "type": "string",
                  "description": "Phone number of the contact person."
                },
                "phoneExtension": {
                  "type": "string",
                  "description": "Phone extension number of the contact person."
                },
                "mobile": {
                  "type": "string",
                  "description": "Mobile number of the contact person."
                },
                "emailList": {
                  "type": "array",
                  "description": "List of Email-ids to be notified about job progress.",
                  "items": {
                    "type": "string"
                  }
                },
                "notificationPreference": {
                  "type": "array",
                  "description": "Notification preference for a job stage.",
                  "items": {
                    "type": "object",
                    "description": "Notification preference for a job stage.",
                    "properties": {
                      "stageName": {
                        "description": "Name of the stage.",
                        "type": "string",
                        "enum": [
                          "DevicePrepared",
                          "Dispatched",
                          "Delivered",
                          "PickedUp",
                          "AtAzureDC",
                          "DataCopy",
                          "Created",
                          "ShippedToCustomer"
                        ],
                        "x-ms-enum": {
                          "name": "NotificationStageName",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "DevicePrepared",
                              "value": "DevicePrepared",
                              "description": "Notification at device prepared stage."
                            },
                            {
                              "name": "Dispatched",
                              "value": "Dispatched",
                              "description": "Notification at device dispatched stage."
                            },
                            {
                              "name": "Delivered",
                              "value": "Delivered",
                              "description": "Notification at device delivered stage."
                            },
                            {
                              "name": "PickedUp",
                              "value": "PickedUp",
                              "description": "Notification at device picked up from user stage."
                            },
                            {
                              "name": "AtAzureDC",
                              "value": "AtAzureDC",
                              "description": "Notification at device received at Azure datacenter stage."
                            },
                            {
                              "name": "DataCopy",
                              "value": "DataCopy",
                              "description": "Notification at data copy started stage."
                            },
                            {
                              "name": "Created",
                              "value": "Created",
                              "description": "Notification at job created stage."
                            },
                            {
                              "name": "ShippedToCustomer",
                              "value": "ShippedToCustomer",
                              "description": "Notification at shipped devices to customer stage."
                            }
                          ]
                        }
                      },
                      "sendNotification": {
                        "type": "boolean",
                        "description": "Notification is required or not.",
                        "default": true
                      }
                    },
                    "required": [
                      "stageName",
                      "sendNotification"
                    ]
                  }
                }
              },
              "required": [
                "contactName",
                "phone",
                "emailList"
              ]
            },
            "shippingAddress": {
              "description": "Shipping address of the customer.",
              "type": "object",
              "properties": {
                "streetAddress1": {
                  "type": "string",
                  "description": "Street Address line 1."
                },
                "streetAddress2": {
                  "type": "string",
                  "description": "Street Address line 2."
                },
                "streetAddress3": {
                  "type": "string",
                  "description": "Street Address line 3."
                },
                "city": {
                  "type": "string",
                  "description": "Name of the City."
                },
                "stateOrProvince": {
                  "type": "string",
                  "description": "Name of the State or Province."
                },
                "country": {
                  "type": "string",
                  "description": "Name of the Country."
                },
                "postalCode": {
                  "type": "string",
                  "description": "Postal code."
                },
                "zipExtendedCode": {
                  "type": "string",
                  "description": "Extended Zip Code."
                },
                "companyName": {
                  "type": "string",
                  "description": "Name of the company."
                },
                "addressType": {
                  "type": "string",
                  "description": "Type of address.",
                  "default": "None",
                  "enum": [
                    "None",
                    "Residential",
                    "Commercial"
                  ],
                  "x-ms-enum": {
                    "name": "AddressType",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "None",
                        "value": "None",
                        "description": "Address type not known."
                      },
                      {
                        "name": "Residential",
                        "value": "Residential",
                        "description": "Residential Address."
                      },
                      {
                        "name": "Commercial",
                        "value": "Commercial",
                        "description": "Commercial Address."
                      }
                    ]
                  }
                },
                "skipAddressValidation": {
                  "type": "boolean",
                  "description": "Flag to indicate if customer has chosen to skip default address validation"
                },
                "taxIdentificationNumber": {
                  "type": "string",
                  "description": "Tax Identification Number"
                }
              },
              "required": [
                "streetAddress1",
                "country"
              ]
            },
            "deliveryPackage": {
              "description": "Delivery package shipping details.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "trackingUrl": {
                  "type": "string",
                  "description": "Url where shipment can be tracked.",
                  "readOnly": true
                },
                "carrierName": {
                  "type": "string",
                  "description": "Name of the carrier.",
                  "readOnly": true
                },
                "trackingId": {
                  "type": "string",
                  "description": "Tracking Id of shipment.",
                  "readOnly": true
                }
              }
            },
            "returnPackage": {
              "description": "Return package shipping details.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "trackingUrl": {
                  "type": "string",
                  "description": "Url where shipment can be tracked.",
                  "readOnly": true
                },
                "carrierName": {
                  "type": "string",
                  "description": "Name of the carrier.",
                  "readOnly": true
                },
                "trackingId": {
                  "type": "string",
                  "description": "Tracking Id of shipment.",
                  "readOnly": true
                }
              }
            },
            "dataImportDetails": {
              "type": "array",
              "description": "Details of the data to be imported into azure.",
              "items": {
                "type": "object",
                "description": "Details of the data to be used for importing data to azure.",
                "properties": {
                  "accountDetails": {
                    "description": "Account details of the data to be transferred",
                    "type": "object",
                    "properties": {
                      "dataAccountType": {
                        "type": "string",
                        "description": "Account Type of the data to be transferred.",
                        "default": "StorageAccount",
                        "enum": [
                          "StorageAccount",
                          "ManagedDisk"
                        ],
                        "x-ms-enum": {
                          "name": "DataAccountType",
                          "modelAsString": false,
                          "values": [
                            {
                              "name": "StorageAccount",
                              "value": "StorageAccount",
                              "description": "Storage Accounts ."
                            },
                            {
                              "name": "ManagedDisk",
                              "value": "ManagedDisk",
                              "description": "Azure Managed disk storage."
                            }
                          ]
                        }
                      },
                      "sharePassword": {
                        "type": "string",
                        "format": "password",
                        "description": "Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\\-$%^!+=;:_()]+",
                        "x-ms-mutability": [
                          "create"
                        ],
                        "x-ms-secret": true
                      }
                    },
                    "discriminator": "dataAccountType",
                    "required": [
                      "dataAccountType"
                    ]
                  },
                  "logCollectionLevel": {
                    "type": "string",
                    "description": "Level of the logs to be collected.",
                    "default": "Error",
                    "enum": [
                      "Error",
                      "Verbose"
                    ],
                    "x-ms-enum": {
                      "name": "LogCollectionLevel",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "Error",
                          "value": "Error",
                          "description": "Only Errors will be collected in the logs."
                        },
                        {
                          "name": "Verbose",
                          "value": "Verbose",
                          "description": "Verbose logging (includes Errors, CRC, size information and others)."
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "accountDetails"
                ]
              }
            },
            "dataExportDetails": {
              "type": "array",
              "description": "Details of the data to be exported from azure.",
              "items": {
                "type": "object",
                "description": "Details of the data to be used for exporting data from azure.",
                "properties": {
                  "transferConfiguration": {
                    "description": "Configuration for the data transfer.",
                    "type": "object",
                    "properties": {
                      "transferConfigurationType": {
                        "description": "Type of the configuration for transfer.",
                        "type": "string",
                        "enum": [
                          "TransferAll",
                          "TransferUsingFilter"
                        ],
                        "x-ms-enum": {
                          "name": "TransferConfigurationType",
                          "modelAsString": false,
                          "values": [
                            {
                              "name": "TransferAll",
                              "value": "TransferAll",
                              "description": "Transfer all the data."
                            },
                            {
                              "name": "TransferUsingFilter",
                              "value": "TransferUsingFilter",
                              "description": "Transfer using filter."
                            }
                          ]
                        }
                      },
                      "transferFilterDetails": {
                        "description": "Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.",
                        "type": "object",
                        "properties": {
                          "include": {
                            "description": "Details of the filtering the transfer of data.",
                            "type": "object",
                            "properties": {
                              "dataAccountType": {
                                "type": "string",
                                "description": "Type of the account of data.",
                                "default": "StorageAccount",
                                "enum": [
                                  "StorageAccount",
                                  "ManagedDisk"
                                ],
                                "x-ms-enum": {
                                  "name": "DataAccountType",
                                  "modelAsString": false,
                                  "values": [
                                    {
                                      "name": "StorageAccount",
                                      "value": "StorageAccount",
                                      "description": "Storage Accounts ."
                                    },
                                    {
                                      "name": "ManagedDisk",
                                      "value": "ManagedDisk",
                                      "description": "Azure Managed disk storage."
                                    }
                                  ]
                                }
                              },
                              "blobFilterDetails": {
                                "description": "Filter details to transfer blobs.",
                                "type": "object",
                                "properties": {
                                  "blobPrefixList": {
                                    "type": "array",
                                    "description": "Prefix list of the Azure blobs to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "blobPathList": {
                                    "type": "array",
                                    "description": "List of full path of the blobs to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "containerList": {
                                    "type": "array",
                                    "description": "List of blob containers to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "azureFileFilterDetails": {
                                "description": "Filter details to transfer Azure files.",
                                "type": "object",
                                "properties": {
                                  "filePrefixList": {
                                    "type": "array",
                                    "description": "Prefix list of the Azure files to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "filePathList": {
                                    "type": "array",
                                    "description": "List of full path of the files to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "fileShareList": {
                                    "type": "array",
                                    "description": "List of file shares to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "filterFileDetails": {
                                "type": "array",
                                "description": "Details of the filter files to be used for data transfer.",
                                "items": {
                                  "type": "object",
                                  "description": "Details of the filter files to be used for data transfer.",
                                  "properties": {
                                    "filterFileType": {
                                      "description": "Type of the filter file.",
                                      "type": "string",
                                      "enum": [
                                        "AzureBlob",
                                        "AzureFile"
                                      ],
                                      "x-ms-enum": {
                                        "name": "FilterFileType",
                                        "modelAsString": false,
                                        "values": [
                                          {
                                            "name": "AzureBlob",
                                            "value": "AzureBlob",
                                            "description": "Filter file is of the type AzureBlob."
                                          },
                                          {
                                            "name": "AzureFile",
                                            "value": "AzureFile",
                                            "description": "Filter file is of the type AzureFiles."
                                          }
                                        ]
                                      }
                                    },
                                    "filterFilePath": {
                                      "type": "string",
                                      "description": "Path of the file that contains the details of all items to transfer."
                                    }
                                  },
                                  "required": [
                                    "filterFileType",
                                    "filterFilePath"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "dataAccountType"
                            ]
                          }
                        }
                      },
                      "transferAllDetails": {
                        "description": "Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll",
                        "type": "object",
                        "properties": {
                          "include": {
                            "description": "Details to transfer all data.",
                            "type": "object",
                            "properties": {
                              "dataAccountType": {
                                "type": "string",
                                "description": "Type of the account of data",
                                "default": "StorageAccount",
                                "enum": [
                                  "StorageAccount",
                                  "ManagedDisk"
                                ],
                                "x-ms-enum": {
                                  "name": "DataAccountType",
                                  "modelAsString": false,
                                  "values": [
                                    {
                                      "name": "StorageAccount",
                                      "value": "StorageAccount",
                                      "description": "Storage Accounts ."
                                    },
                                    {
                                      "name": "ManagedDisk",
                                      "value": "ManagedDisk",
                                      "description": "Azure Managed disk storage."
                                    }
                                  ]
                                }
                              },
                              "transferAllBlobs": {
                                "type": "boolean",
                                "description": "To indicate if all Azure blobs have to be transferred"
                              },
                              "transferAllFiles": {
                                "type": "boolean",
                                "description": "To indicate if all Azure Files have to be transferred"
                              }
                            },
                            "required": [
                              "dataAccountType"
                            ]
                          }
                        }
                      }
                    },
                    "required": [
                      "transferConfigurationType"
                    ]
                  },
                  "logCollectionLevel": {
                    "type": "string",
                    "description": "Level of the logs to be collected.",
                    "default": "Error",
                    "enum": [
                      "Error",
                      "Verbose"
                    ],
                    "x-ms-enum": {
                      "name": "LogCollectionLevel",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "Error",
                          "value": "Error",
                          "description": "Only Errors will be collected in the logs."
                        },
                        {
                          "name": "Verbose",
                          "value": "Verbose",
                          "description": "Verbose logging (includes Errors, CRC, size information and others)."
                        }
                      ]
                    }
                  },
                  "accountDetails": {
                    "description": "Account details of the data to be transferred",
                    "type": "object",
                    "properties": {
                      "dataAccountType": {
                        "type": "string",
                        "description": "Account Type of the data to be transferred.",
                        "default": "StorageAccount",
                        "enum": [
                          "StorageAccount",
                          "ManagedDisk"
                        ],
                        "x-ms-enum": {
                          "name": "DataAccountType",
                          "modelAsString": false,
                          "values": [
                            {
                              "name": "StorageAccount",
                              "value": "StorageAccount",
                              "description": "Storage Accounts ."
                            },
                            {
                              "name": "ManagedDisk",
                              "value": "ManagedDisk",
                              "description": "Azure Managed disk storage."
                            }
                          ]
                        }
                      },
                      "sharePassword": {
                        "type": "string",
                        "format": "password",
                        "description": "Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\\-$%^!+=;:_()]+",
                        "x-ms-mutability": [
                          "create"
                        ],
                        "x-ms-secret": true
                      }
                    },
                    "discriminator": "dataAccountType",
                    "required": [
                      "dataAccountType"
                    ]
                  }
                },
                "required": [
                  "transferConfiguration",
                  "accountDetails"
                ]
              }
            },
            "jobDetailsType": {
              "description": "Indicates the type of job details.",
              "type": "string",
              "enum": [
                "DataBox",
                "DataBoxDisk",
                "DataBoxHeavy",
                "DataBoxCustomerDisk"
              ],
              "x-ms-enum": {
                "name": "ClassDiscriminator",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DataBox",
                    "value": "DataBox",
                    "description": "Data Box orders."
                  },
                  {
                    "name": "DataBoxDisk",
                    "value": "DataBoxDisk",
                    "description": "Data Box Disk orders."
                  },
                  {
                    "name": "DataBoxHeavy",
                    "value": "DataBoxHeavy",
                    "description": "Data Box Heavy orders."
                  },
                  {
                    "name": "DataBoxCustomerDisk",
                    "value": "DataBoxCustomerDisk",
                    "description": "Data Box Customer Disk orders."
                  }
                ]
              }
            },
            "preferences": {
              "description": "Preferences for the order.",
              "type": "object",
              "properties": {
                "preferredDataCenterRegion": {
                  "type": "array",
                  "description": "Preferred data center region.",
                  "items": {
                    "type": "string"
                  }
                },
                "transportPreferences": {
                  "description": "Preferences related to the shipment logistics of the sku.",
                  "type": "object",
                  "properties": {
                    "preferredShipmentType": {
                      "description": "Indicates Shipment Logistics type that the customer preferred.",
                      "type": "string",
                      "enum": [
                        "CustomerManaged",
                        "MicrosoftManaged"
                      ],
                      "x-ms-enum": {
                        "name": "TransportShipmentTypes",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "CustomerManaged",
                            "value": "CustomerManaged",
                            "description": "Shipment Logistics is handled by the customer."
                          },
                          {
                            "name": "MicrosoftManaged",
                            "value": "MicrosoftManaged",
                            "description": "Shipment Logistics is handled by Microsoft."
                          }
                        ]
                      }
                    },
                    "isUpdated": {
                      "type": "boolean",
                      "description": "Read only property which indicates whether transport preferences has been updated or not after device is prepared.",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "preferredShipmentType"
                  ]
                },
                "reverseTransportPreferences": {
                  "description": "Optional Preferences related to the reverse shipment logistics of the sku.",
                  "type": "object",
                  "properties": {
                    "preferredShipmentType": {
                      "description": "Indicates Shipment Logistics type that the customer preferred.",
                      "type": "string",
                      "enum": [
                        "CustomerManaged",
                        "MicrosoftManaged"
                      ],
                      "x-ms-enum": {
                        "name": "TransportShipmentTypes",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "CustomerManaged",
                            "value": "CustomerManaged",
                            "description": "Shipment Logistics is handled by the customer."
                          },
                          {
                            "name": "MicrosoftManaged",
                            "value": "MicrosoftManaged",
                            "description": "Shipment Logistics is handled by Microsoft."
                          }
                        ]
                      }
                    },
                    "isUpdated": {
                      "type": "boolean",
                      "description": "Read only property which indicates whether transport preferences has been updated or not after device is prepared.",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "preferredShipmentType"
                  ]
                },
                "encryptionPreferences": {
                  "description": "Preferences related to the Encryption.",
                  "type": "object",
                  "properties": {
                    "doubleEncryption": {
                      "type": "string",
                      "description": "Defines secondary layer of software-based encryption enablement.",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "DoubleEncryption",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Software-based encryption is enabled."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Software-based encryption is disabled."
                          }
                        ]
                      }
                    },
                    "hardwareEncryption": {
                      "description": "Defines Hardware level encryption (Only for disk)",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "HardwareEncryption",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Hardware-based encryption is enabled."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Hardware-based encryption is disabled."
                          }
                        ]
                      }
                    }
                  }
                },
                "storageAccountAccessTierPreferences": {
                  "type": "array",
                  "description": "Preferences related to the Access Tier of storage accounts.",
                  "items": {
                    "type": "string",
                    "enum": [
                      "Archive"
                    ],
                    "x-ms-enum": {
                      "modelAsString": false
                    }
                  }
                }
              }
            },
            "reverseShippingDetails": {
              "description": "Optional Reverse Shipping details for order.",
              "type": "object",
              "properties": {
                "contactDetails": {
                  "description": "Contact Info.",
                  "type": "object",
                  "properties": {
                    "contactName": {
                      "type": "string",
                      "description": "Contact name of the person.",
                      "minLength": 1
                    },
                    "phone": {
                      "type": "string",
                      "description": "Phone number of the contact person.",
                      "minLength": 1
                    },
                    "phoneExtension": {
                      "type": "string",
                      "description": "Phone extension number of the contact person."
                    },
                    "mobile": {
                      "type": "string",
                      "description": "Mobile number of the contact person."
                    }
                  },
                  "required": [
                    "contactName",
                    "phone"
                  ]
                },
                "shippingAddress": {
                  "description": "Shipping address where customer wishes to receive the device.",
                  "type": "object",
                  "properties": {
                    "streetAddress1": {
                      "type": "string",
                      "description": "Street Address line 1."
                    },
                    "streetAddress2": {
                      "type": "string",
                      "description": "Street Address line 2."
                    },
                    "streetAddress3": {
                      "type": "string",
                      "description": "Street Address line 3."
                    },
                    "city": {
                      "type": "string",
                      "description": "Name of the City."
                    },
                    "stateOrProvince": {
                      "type": "string",
                      "description": "Name of the State or Province."
                    },
                    "country": {
                      "type": "string",
                      "description": "Name of the Country."
                    },
                    "postalCode": {
                      "type": "string",
                      "description": "Postal code."
                    },
                    "zipExtendedCode": {
                      "type": "string",
                      "description": "Extended Zip Code."
                    },
                    "companyName": {
                      "type": "string",
                      "description": "Name of the company."
                    },
                    "addressType": {
                      "type": "string",
                      "description": "Type of address.",
                      "default": "None",
                      "enum": [
                        "None",
                        "Residential",
                        "Commercial"
                      ],
                      "x-ms-enum": {
                        "name": "AddressType",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "None",
                            "value": "None",
                            "description": "Address type not known."
                          },
                          {
                            "name": "Residential",
                            "value": "Residential",
                            "description": "Residential Address."
                          },
                          {
                            "name": "Commercial",
                            "value": "Commercial",
                            "description": "Commercial Address."
                          }
                        ]
                      }
                    },
                    "skipAddressValidation": {
                      "type": "boolean",
                      "description": "Flag to indicate if customer has chosen to skip default address validation"
                    },
                    "taxIdentificationNumber": {
                      "type": "string",
                      "description": "Tax Identification Number"
                    }
                  },
                  "required": [
                    "streetAddress1",
                    "country"
                  ]
                },
                "isUpdated": {
                  "type": "boolean",
                  "description": "A flag to indicate whether Reverse Shipping details are updated or not after device has been prepared.\nRead only field",
                  "readOnly": true
                }
              }
            },
            "copyLogDetails": {
              "type": "array",
              "description": "List of copy log details.",
              "items": {
                "type": "object",
                "description": "Details for log generated during copy.",
                "properties": {
                  "copyLogDetailsType": {
                    "description": "Indicates the type of job details.",
                    "type": "string",
                    "enum": [
                      "DataBox",
                      "DataBoxDisk",
                      "DataBoxHeavy",
                      "DataBoxCustomerDisk"
                    ],
                    "x-ms-enum": {
                      "name": "ClassDiscriminator",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "DataBox",
                          "value": "DataBox",
                          "description": "Data Box orders."
                        },
                        {
                          "name": "DataBoxDisk",
                          "value": "DataBoxDisk",
                          "description": "Data Box Disk orders."
                        },
                        {
                          "name": "DataBoxHeavy",
                          "value": "DataBoxHeavy",
                          "description": "Data Box Heavy orders."
                        },
                        {
                          "name": "DataBoxCustomerDisk",
                          "value": "DataBoxCustomerDisk",
                          "description": "Data Box Customer Disk orders."
                        }
                      ]
                    }
                  }
                },
                "discriminator": "copyLogDetailsType",
                "required": [
                  "copyLogDetailsType"
                ]
              },
              "readOnly": true
            },
            "reverseShipmentLabelSasKey": {
              "type": "string",
              "description": "Shared access key to download the return shipment label",
              "readOnly": true
            },
            "chainOfCustodySasKey": {
              "type": "string",
              "description": "Shared access key to download the chain of custody logs",
              "readOnly": true
            },
            "deviceErasureDetails": {
              "description": "Holds device data erasure details",
              "readOnly": true,
              "type": "object",
              "properties": {
                "deviceErasureStatus": {
                  "description": "Holds the device erasure completion status",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "None",
                    "InProgress",
                    "Succeeded",
                    "Failed",
                    "Cancelled",
                    "Cancelling",
                    "SucceededWithErrors",
                    "WaitingForCustomerAction",
                    "SucceededWithWarnings",
                    "WaitingForCustomerActionForKek",
                    "WaitingForCustomerActionForCleanUp",
                    "CustomerActionPerformedForCleanUp",
                    "CustomerActionPerformed"
                  ],
                  "x-ms-enum": {
                    "name": "StageStatus",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "None",
                        "value": "None",
                        "description": "No status available yet."
                      },
                      {
                        "name": "InProgress",
                        "value": "InProgress",
                        "description": "Stage is in progress."
                      },
                      {
                        "name": "Succeeded",
                        "value": "Succeeded",
                        "description": "Stage has succeeded."
                      },
                      {
                        "name": "Failed",
                        "value": "Failed",
                        "description": "Stage has failed."
                      },
                      {
                        "name": "Cancelled",
                        "value": "Cancelled",
                        "description": "Stage has been cancelled."
                      },
                      {
                        "name": "Cancelling",
                        "value": "Cancelling",
                        "description": "Stage is cancelling."
                      },
                      {
                        "name": "SucceededWithErrors",
                        "value": "SucceededWithErrors",
                        "description": "Stage has succeeded with errors."
                      },
                      {
                        "name": "WaitingForCustomerAction",
                        "value": "WaitingForCustomerAction",
                        "description": "Stage is stuck until customer takes some action."
                      },
                      {
                        "name": "SucceededWithWarnings",
                        "value": "SucceededWithWarnings",
                        "description": "Stage has succeeded with warnings."
                      },
                      {
                        "name": "WaitingForCustomerActionForKek",
                        "value": "WaitingForCustomerActionForKek",
                        "description": "Stage is waiting for customer action for kek action items."
                      },
                      {
                        "name": "WaitingForCustomerActionForCleanUp",
                        "value": "WaitingForCustomerActionForCleanUp",
                        "description": "Stage is waiting for customer action for clean up."
                      },
                      {
                        "name": "CustomerActionPerformedForCleanUp",
                        "value": "CustomerActionPerformedForCleanUp",
                        "description": "Stage has performed customer action for clean up."
                      },
                      {
                        "name": "CustomerActionPerformed",
                        "value": "CustomerActionPerformed",
                        "description": "Stage has performed customer action for clean up."
                      }
                    ]
                  }
                },
                "erasureOrDestructionCertificateSasKey": {
                  "type": "string",
                  "description": "Shared access key to download cleanup or destruction certificate for device",
                  "readOnly": true
                },
                "secureErasureCertificateSasKey": {
                  "type": "string",
                  "description": "Shared access key to download secure erasure certificate for the device",
                  "readOnly": true
                }
              }
            },
            "keyEncryptionKey": {
              "description": "Details about which key encryption type is being used.",
              "type": "object",
              "properties": {
                "kekType": {
                  "type": "string",
                  "description": "Type of encryption key used for key encryption.",
                  "default": "MicrosoftManaged",
                  "enum": [
                    "MicrosoftManaged",
                    "CustomerManaged"
                  ],
                  "x-ms-enum": {
                    "name": "KekType",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "MicrosoftManaged",
                        "value": "MicrosoftManaged",
                        "description": "Key encryption key is managed by Microsoft."
                      },
                      {
                        "name": "CustomerManaged",
                        "value": "CustomerManaged",
                        "description": "Key encryption key is managed by the Customer."
                      }
                    ]
                  }
                },
                "identityProperties": {
                  "description": "Managed identity properties used for key encryption.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Managed service identity type."
                    },
                    "userAssigned": {
                      "description": "User assigned identity properties.",
                      "type": "object",
                      "properties": {
                        "resourceId": {
                          "type": "string",
                          "description": "Arm resource id for user assigned identity to be used to fetch MSI token."
                        }
                      }
                    }
                  }
                },
                "kekUrl": {
                  "type": "string",
                  "description": "Key encryption key. It is required in case of Customer managed KekType."
                },
                "kekVaultResourceID": {
                  "type": "string",
                  "description": "Kek vault resource id. It is required in case of Customer managed KekType."
                }
              },
              "required": [
                "kekType"
              ]
            },
            "expectedDataSizeInTeraBytes": {
              "type": "integer",
              "format": "int32",
              "description": "The expected size of the data, which needs to be transferred in this job, in terabytes."
            },
            "actions": {
              "type": "array",
              "description": "Available actions on the job.",
              "items": {
                "type": "string",
                "description": "Resolution code provided by customer.",
                "enum": [
                  "None",
                  "MoveToCleanUpDevice",
                  "Resume",
                  "Restart",
                  "ReachOutToOperation"
                ],
                "x-ms-enum": {
                  "name": "CustomerResolutionCode",
                  "modelAsString": false,
                  "values": [
                    {
                      "name": "None",
                      "value": "None",
                      "description": "No Resolution Yet"
                    },
                    {
                      "name": "MoveToCleanUpDevice",
                      "value": "MoveToCleanUpDevice",
                      "description": "Clean the device"
                    },
                    {
                      "name": "Resume",
                      "value": "Resume",
                      "description": "Resume the job to same stage"
                    },
                    {
                      "name": "Restart",
                      "value": "Restart",
                      "description": "Restart whole action."
                    },
                    {
                      "name": "ReachOutToOperation",
                      "value": "ReachOutToOperation",
                      "description": "Reach out to operation for further action."
                    }
                  ]
                }
              },
              "readOnly": true
            },
            "lastMitigationActionOnJob": {
              "description": "Last mitigation action performed on the job.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "actionDateTimeInUtc": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Action performed date time"
                },
                "isPerformedByCustomer": {
                  "type": "boolean",
                  "description": "Action performed by customer,\npossibility is that mitigation might happen by customer or service or by ops"
                },
                "customerResolution": {
                  "type": "string",
                  "description": "Resolution code provided by customer.",
                  "enum": [
                    "None",
                    "MoveToCleanUpDevice",
                    "Resume",
                    "Restart",
                    "ReachOutToOperation"
                  ],
                  "x-ms-enum": {
                    "name": "CustomerResolutionCode",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "None",
                        "value": "None",
                        "description": "No Resolution Yet"
                      },
                      {
                        "name": "MoveToCleanUpDevice",
                        "value": "MoveToCleanUpDevice",
                        "description": "Clean the device"
                      },
                      {
                        "name": "Resume",
                        "value": "Resume",
                        "description": "Resume the job to same stage"
                      },
                      {
                        "name": "Restart",
                        "value": "Restart",
                        "description": "Restart whole action."
                      },
                      {
                        "name": "ReachOutToOperation",
                        "value": "ReachOutToOperation",
                        "description": "Reach out to operation for further action."
                      }
                    ]
                  }
                }
              }
            },
            "datacenterAddress": {
              "description": "Datacenter address to ship to, for the given sku and storage location.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "datacenterAddressType": {
                  "description": "Data center address type",
                  "type": "string",
                  "enum": [
                    "DatacenterAddressLocation",
                    "DatacenterAddressInstruction"
                  ],
                  "x-ms-enum": {
                    "name": "DatacenterAddressType",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "DatacenterAddressLocation",
                        "value": "DatacenterAddressLocation",
                        "description": "Data center address location."
                      },
                      {
                        "name": "DatacenterAddressInstruction",
                        "value": "DatacenterAddressInstruction",
                        "description": "Data center address instruction."
                      }
                    ]
                  }
                },
                "supportedCarriersForReturnShipment": {
                  "type": "array",
                  "description": "List of supported carriers for return shipment.",
                  "items": {
                    "type": "string"
                  },
                  "readOnly": true
                },
                "dataCenterAzureLocation": {
                  "type": "string",
                  "description": "Azure Location where the Data Center serves primarily.",
                  "readOnly": true
                }
              },
              "discriminator": "datacenterAddressType",
              "required": [
                "datacenterAddressType"
              ]
            },
            "dataCenterCode": {
              "description": "DataCenter code.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "BY2",
                "BY1",
                "ORK70",
                "AM2",
                "AMS20",
                "BY21",
                "BY24",
                "MWH01",
                "AMS06",
                "SSE90",
                "SYD03",
                "SYD23",
                "CBR20",
                "YTO20",
                "CWL20",
                "LON24",
                "BOM01",
                "BL20",
                "BL7",
                "SEL20",
                "TYO01",
                "BN1",
                "SN5",
                "CYS04",
                "TYO22",
                "YTO21",
                "YQB20",
                "FRA22",
                "MAA01",
                "CPQ02",
                "CPQ20",
                "SIN20",
                "HKG20",
                "SG2",
                "MEL23",
                "SEL21",
                "OSA20",
                "SHA03",
                "BJB",
                "JNB22",
                "JNB21",
                "MNZ21",
                "SN8",
                "AUH20",
                "ZRH20",
                "PUS20",
                "AdHoc",
                "CH1",
                "DSM05",
                "DUB07",
                "PNQ01",
                "SVG20",
                "OSA02",
                "OSA22",
                "PAR22",
                "BN7",
                "SN6",
                "BJS20",
                "BL24",
                "IDC5",
                "TYO23",
                "NTG20",
                "DXB23",
                "DSM11",
                "AMS25",
                "CPQ21",
                "OSA23"
              ],
              "x-ms-enum": {
                "name": "DataCenterCode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "BY2",
                    "value": "BY2"
                  },
                  {
                    "name": "BY1",
                    "value": "BY1"
                  },
                  {
                    "name": "ORK70",
                    "value": "ORK70"
                  },
                  {
                    "name": "AM2",
                    "value": "AM2"
                  },
                  {
                    "name": "AMS20",
                    "value": "AMS20"
                  },
                  {
                    "name": "BY21",
                    "value": "BY21"
                  },
                  {
                    "name": "BY24",
                    "value": "BY24"
                  },
                  {
                    "name": "MWH01",
                    "value": "MWH01"
                  },
                  {
                    "name": "AMS06",
                    "value": "AMS06"
                  },
                  {
                    "name": "SSE90",
                    "value": "SSE90"
                  },
                  {
                    "name": "SYD03",
                    "value": "SYD03"
                  },
                  {
                    "name": "SYD23",
                    "value": "SYD23"
                  },
                  {
                    "name": "CBR20",
                    "value": "CBR20"
                  },
                  {
                    "name": "YTO20",
                    "value": "YTO20"
                  },
                  {
                    "name": "CWL20",
                    "value": "CWL20"
                  },
                  {
                    "name": "LON24",
                    "value": "LON24"
                  },
                  {
                    "name": "BOM01",
                    "value": "BOM01"
                  },
                  {
                    "name": "BL20",
                    "value": "BL20"
                  },
                  {
                    "name": "BL7",
                    "value": "BL7"
                  },
                  {
                    "name": "SEL20",
                    "value": "SEL20"
                  },
                  {
                    "name": "TYO01",
                    "value": "TYO01"
                  },
                  {
                    "name": "BN1",
                    "value": "BN1"
                  },
                  {
                    "name": "SN5",
                    "value": "SN5"
                  },
                  {
                    "name": "CYS04",
                    "value": "CYS04"
                  },
                  {
                    "name": "TYO22",
                    "value": "TYO22"
                  },
                  {
                    "name": "YTO21",
                    "value": "YTO21"
                  },
                  {
                    "name": "YQB20",
                    "value": "YQB20"
                  },
                  {
                    "name": "FRA22",
                    "value": "FRA22"
                  },
                  {
                    "name": "MAA01",
                    "value": "MAA01"
                  },
                  {
                    "name": "CPQ02",
                    "value": "CPQ02"
                  },
                  {
                    "name": "CPQ20",
                    "value": "CPQ20"
                  },
                  {
                    "name": "SIN20",
                    "value": "SIN20"
                  },
                  {
                    "name": "HKG20",
                    "value": "HKG20"
                  },
                  {
                    "name": "SG2",
                    "value": "SG2"
                  },
                  {
                    "name": "MEL23",
                    "value": "MEL23"
                  },
                  {
                    "name": "SEL21",
                    "value": "SEL21"
                  },
                  {
                    "name": "OSA20",
                    "value": "OSA20"
                  },
                  {
                    "name": "SHA03",
                    "value": "SHA03"
                  },
                  {
                    "name": "BJB",
                    "value": "BJB"
                  },
                  {
                    "name": "JNB22",
                    "value": "JNB22"
                  },
                  {
                    "name": "JNB21",
                    "value": "JNB21"
                  },
                  {
                    "name": "MNZ21",
                    "value": "MNZ21"
                  },
                  {
                    "name": "SN8",
                    "value": "SN8"
                  },
                  {
                    "name": "AUH20",
                    "value": "AUH20"
                  },
                  {
                    "name": "ZRH20",
                    "value": "ZRH20"
                  },
                  {
                    "name": "PUS20",
                    "value": "PUS20"
                  },
                  {
                    "name": "AdHoc",
                    "value": "AdHoc"
                  },
                  {
                    "name": "CH1",
                    "value": "CH1"
                  },
                  {
                    "name": "DSM05",
                    "value": "DSM05"
                  },
                  {
                    "name": "DUB07",
                    "value": "DUB07"
                  },
                  {
                    "name": "PNQ01",
                    "value": "PNQ01"
                  },
                  {
                    "name": "SVG20",
                    "value": "SVG20"
                  },
                  {
                    "name": "OSA02",
                    "value": "OSA02"
                  },
                  {
                    "name": "OSA22",
                    "value": "OSA22"
                  },
                  {
                    "name": "PAR22",
                    "value": "PAR22"
                  },
                  {
                    "name": "BN7",
                    "value": "BN7"
                  },
                  {
                    "name": "SN6",
                    "value": "SN6"
                  },
                  {
                    "name": "BJS20",
                    "value": "BJS20"
                  },
                  {
                    "name": "BL24",
                    "value": "BL24"
                  },
                  {
                    "name": "IDC5",
                    "value": "IDC5"
                  },
                  {
                    "name": "TYO23",
                    "value": "TYO23"
                  },
                  {
                    "name": "NTG20",
                    "value": "NTG20"
                  },
                  {
                    "name": "DXB23",
                    "value": "DXB23"
                  },
                  {
                    "name": "DSM11",
                    "value": "DSM11"
                  },
                  {
                    "name": "AMS25",
                    "value": "AMS25"
                  },
                  {
                    "name": "CPQ21",
                    "value": "CPQ21"
                  },
                  {
                    "name": "OSA23",
                    "value": "OSA23"
                  }
                ]
              }
            }
          },
          "discriminator": "jobDetailsType",
          "required": [
            "contactDetails",
            "jobDetailsType"
          ]
        }
      ],
      "x-ms-discriminator-value": "DataBoxHeavy"
    },
    "DataBoxHeavyJobSecrets": {
      "type": "object",
      "description": "The secrets related to a databox heavy job.",
      "properties": {
        "cabinetPodSecrets": {
          "type": "array",
          "description": "Contains the list of secret objects for a databox heavy job.",
          "items": {
            "type": "object",
            "description": "The secrets related to a databox heavy.",
            "properties": {
              "deviceSerialNumber": {
                "type": "string",
                "description": "Serial number of the assigned device.",
                "readOnly": true
              },
              "devicePassword": {
                "type": "string",
                "description": "Password for out of the box experience on device.",
                "readOnly": true
              },
              "networkConfigurations": {
                "type": "array",
                "description": "Network configuration of the appliance.",
                "items": {
                  "type": "object",
                  "description": "The Network Adapter configuration of a DataBox.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the network.",
                      "readOnly": true
                    },
                    "macAddress": {
                      "type": "string",
                      "description": "Mac Address.",
                      "readOnly": true
                    }
                  }
                },
                "readOnly": true
              },
              "encodedValidationCertPubKey": {
                "type": "string",
                "description": "The base 64 encoded public key to authenticate with the device",
                "readOnly": true
              },
              "accountCredentialDetails": {
                "type": "array",
                "description": "Per account level access credentials.",
                "items": {
                  "type": "object",
                  "description": "Credential details of the account.",
                  "properties": {
                    "accountName": {
                      "type": "string",
                      "description": "Name of the account.",
                      "readOnly": true
                    },
                    "dataAccountType": {
                      "description": "Type of the account.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "StorageAccount",
                        "ManagedDisk"
                      ],
                      "x-ms-enum": {
                        "name": "DataAccountType",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "StorageAccount",
                            "value": "StorageAccount",
                            "description": "Storage Accounts ."
                          },
                          {
                            "name": "ManagedDisk",
                            "value": "ManagedDisk",
                            "description": "Azure Managed disk storage."
                          }
                        ]
                      }
                    },
                    "accountConnectionString": {
                      "type": "string",
                      "description": "Connection string of the account endpoint to use the account as a storage endpoint on the device.",
                      "readOnly": true
                    },
                    "shareCredentialDetails": {
                      "type": "array",
                      "description": "Per share level unencrypted access credentials.",
                      "items": {
                        "type": "object",
                        "description": "Credential details of the shares in account.",
                        "properties": {
                          "shareName": {
                            "type": "string",
                            "description": "Name of the share.",
                            "readOnly": true
                          },
                          "shareType": {
                            "description": "Type of the share.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "UnknownType",
                              "HCS",
                              "BlockBlob",
                              "PageBlob",
                              "AzureFile",
                              "ManagedDisk"
                            ],
                            "x-ms-enum": {
                              "name": "ShareDestinationFormatType",
                              "modelAsString": false,
                              "values": [
                                {
                                  "name": "UnknownType",
                                  "value": "UnknownType",
                                  "description": "Unknown format."
                                },
                                {
                                  "name": "HCS",
                                  "value": "HCS",
                                  "description": "Storsimple data format."
                                },
                                {
                                  "name": "BlockBlob",
                                  "value": "BlockBlob",
                                  "description": "Azure storage block blob format."
                                },
                                {
                                  "name": "PageBlob",
                                  "value": "PageBlob",
                                  "description": "Azure storage page blob format."
                                },
                                {
                                  "name": "AzureFile",
                                  "value": "AzureFile",
                                  "description": "Azure storage file format."
                                },
                                {
                                  "name": "ManagedDisk",
                                  "value": "ManagedDisk",
                                  "description": "Azure Compute Disk."
                                }
                              ]
                            }
                          },
                          "userName": {
                            "type": "string",
                            "description": "User name for the share.",
                            "readOnly": true
                          },
                          "password": {
                            "type": "string",
                            "description": "Password for the share.",
                            "readOnly": true
                          },
                          "supportedAccessProtocols": {
                            "type": "array",
                            "description": "Access protocols supported on the device.",
                            "items": {
                              "type": "string",
                              "description": "Access protocols supported on the device.",
                              "enum": [
                                "SMB",
                                "NFS"
                              ],
                              "x-ms-enum": {
                                "name": "AccessProtocol",
                                "modelAsString": false,
                                "values": [
                                  {
                                    "name": "SMB",
                                    "value": "SMB",
                                    "description": "Server Message Block protocol(SMB)."
                                  },
                                  {
                                    "name": "NFS",
                                    "value": "NFS",
                                    "description": "Network File System protocol(NFS)."
                                  }
                                ]
                              }
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                },
                "readOnly": true
              }
            }
          },
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/JobSecrets"
        }
      ],
      "x-ms-discriminator-value": "DataBoxHeavy"
    },
    "DataBoxHeavySecret": {
      "type": "object",
      "description": "The secrets related to a databox heavy.",
      "properties": {
        "deviceSerialNumber": {
          "type": "string",
          "description": "Serial number of the assigned device.",
          "readOnly": true
        },
        "devicePassword": {
          "type": "string",
          "description": "Password for out of the box experience on device.",
          "readOnly": true
        },
        "networkConfigurations": {
          "type": "array",
          "description": "Network configuration of the appliance.",
          "items": {
            "type": "object",
            "description": "The Network Adapter configuration of a DataBox.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the network.",
                "readOnly": true
              },
              "macAddress": {
                "type": "string",
                "description": "Mac Address.",
                "readOnly": true
              }
            }
          },
          "readOnly": true
        },
        "encodedValidationCertPubKey": {
          "type": "string",
          "description": "The base 64 encoded public key to authenticate with the device",
          "readOnly": true
        },
        "accountCredentialDetails": {
          "type": "array",
          "description": "Per account level access credentials.",
          "items": {
            "type": "object",
            "description": "Credential details of the account.",
            "properties": {
              "accountName": {
                "type": "string",
                "description": "Name of the account.",
                "readOnly": true
              },
              "dataAccountType": {
                "description": "Type of the account.",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "StorageAccount",
                  "ManagedDisk"
                ],
                "x-ms-enum": {
                  "name": "DataAccountType",
                  "modelAsString": false,
                  "values": [
                    {
                      "name": "StorageAccount",
                      "value": "StorageAccount",
                      "description": "Storage Accounts ."
                    },
                    {
                      "name": "ManagedDisk",
                      "value": "ManagedDisk",
                      "description": "Azure Managed disk storage."
                    }
                  ]
                }
              },
              "accountConnectionString": {
                "type": "string",
                "description": "Connection string of the account endpoint to use the account as a storage endpoint on the device.",
                "readOnly": true
              },
              "shareCredentialDetails": {
                "type": "array",
                "description": "Per share level unencrypted access credentials.",
                "items": {
                  "type": "object",
                  "description": "Credential details of the shares in account.",
                  "properties": {
                    "shareName": {
                      "type": "string",
                      "description": "Name of the share.",
                      "readOnly": true
                    },
                    "shareType": {
                      "description": "Type of the share.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "UnknownType",
                        "HCS",
                        "BlockBlob",
                        "PageBlob",
                        "AzureFile",
                        "ManagedDisk"
                      ],
                      "x-ms-enum": {
                        "name": "ShareDestinationFormatType",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "UnknownType",
                            "value": "UnknownType",
                            "description": "Unknown format."
                          },
                          {
                            "name": "HCS",
                            "value": "HCS",
                            "description": "Storsimple data format."
                          },
                          {
                            "name": "BlockBlob",
                            "value": "BlockBlob",
                            "description": "Azure storage block blob format."
                          },
                          {
                            "name": "PageBlob",
                            "value": "PageBlob",
                            "description": "Azure storage page blob format."
                          },
                          {
                            "name": "AzureFile",
                            "value": "AzureFile",
                            "description": "Azure storage file format."
                          },
                          {
                            "name": "ManagedDisk",
                            "value": "ManagedDisk",
                            "description": "Azure Compute Disk."
                          }
                        ]
                      }
                    },
                    "userName": {
                      "type": "string",
                      "description": "User name for the share.",
                      "readOnly": true
                    },
                    "password": {
                      "type": "string",
                      "description": "Password for the share.",
                      "readOnly": true
                    },
                    "supportedAccessProtocols": {
                      "type": "array",
                      "description": "Access protocols supported on the device.",
                      "items": {
                        "type": "string",
                        "description": "Access protocols supported on the device.",
                        "enum": [
                          "SMB",
                          "NFS"
                        ],
                        "x-ms-enum": {
                          "name": "AccessProtocol",
                          "modelAsString": false,
                          "values": [
                            {
                              "name": "SMB",
                              "value": "SMB",
                              "description": "Server Message Block protocol(SMB)."
                            },
                            {
                              "name": "NFS",
                              "value": "NFS",
                              "description": "Network File System protocol(NFS)."
                            }
                          ]
                        }
                      },
                      "readOnly": true
                    }
                  }
                },
                "readOnly": true
              }
            }
          },
          "readOnly": true
        }
      }
    },
    "DataBoxJobDetails": {
      "type": "object",
      "description": "Databox Job Details",
      "properties": {
        "copyProgress": {
          "type": "array",
          "description": "Copy progress per storage account.",
          "items": {
            "$ref": "#/definitions/CopyProgress"
          },
          "readOnly": true
        },
        "devicePassword": {
          "type": "string",
          "description": "Set Device password for unlocking Databox. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\\-$%^!+=;:_()]+"
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Job details.",
          "properties": {
            "jobStages": {
              "type": "array",
              "description": "List of stages that run in the job.",
              "items": {
                "type": "object",
                "description": "Job stages.",
                "properties": {
                  "stageName": {
                    "description": "Name of the job stage.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "DeviceOrdered",
                      "DevicePrepared",
                      "Dispatched",
                      "Delivered",
                      "PickedUp",
                      "AtAzureDC",
                      "DataCopy",
                      "Completed",
                      "CompletedWithErrors",
                      "Cancelled",
                      "Failed_IssueReportedAtCustomer",
                      "Failed_IssueDetectedAtAzureDC",
                      "Aborted",
                      "CompletedWithWarnings",
                      "ReadyToDispatchFromAzureDC",
                      "ReadyToReceiveAtAzureDC",
                      "Created",
                      "ShippedToAzureDC",
                      "AwaitingShipmentDetails",
                      "PreparingToShipFromAzureDC",
                      "ShippedToCustomer"
                    ],
                    "x-ms-enum": {
                      "name": "StageName",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "DeviceOrdered",
                          "value": "DeviceOrdered",
                          "description": "An order has been created."
                        },
                        {
                          "name": "DevicePrepared",
                          "value": "DevicePrepared",
                          "description": "A device has been prepared for the order."
                        },
                        {
                          "name": "Dispatched",
                          "value": "Dispatched",
                          "description": "Device has been dispatched to the user of the order."
                        },
                        {
                          "name": "Delivered",
                          "value": "Delivered",
                          "description": "Device has been delivered to the user of the order."
                        },
                        {
                          "name": "PickedUp",
                          "value": "PickedUp",
                          "description": "Device has been picked up from user and in transit to Azure datacenter."
                        },
                        {
                          "name": "AtAzureDC",
                          "value": "AtAzureDC",
                          "description": "Device has been received at Azure datacenter from the user."
                        },
                        {
                          "name": "DataCopy",
                          "value": "DataCopy",
                          "description": "Data copy from the device at Azure datacenter."
                        },
                        {
                          "name": "Completed",
                          "value": "Completed",
                          "description": "Order has completed."
                        },
                        {
                          "name": "CompletedWithErrors",
                          "value": "CompletedWithErrors",
                          "description": "Order has completed with errors."
                        },
                        {
                          "name": "Cancelled",
                          "value": "Cancelled",
                          "description": "Order has been cancelled."
                        },
                        {
                          "name": "Failed_IssueReportedAtCustomer",
                          "value": "Failed_IssueReportedAtCustomer",
                          "description": "Order has failed due to issue reported by user."
                        },
                        {
                          "name": "Failed_IssueDetectedAtAzureDC",
                          "value": "Failed_IssueDetectedAtAzureDC",
                          "description": "Order has failed due to issue detected at Azure datacenter."
                        },
                        {
                          "name": "Aborted",
                          "value": "Aborted",
                          "description": "Order has been aborted."
                        },
                        {
                          "name": "CompletedWithWarnings",
                          "value": "CompletedWithWarnings",
                          "description": "Order has completed with warnings."
                        },
                        {
                          "name": "ReadyToDispatchFromAzureDC",
                          "value": "ReadyToDispatchFromAzureDC",
                          "description": "Device is ready to be handed to customer from Azure DC."
                        },
                        {
                          "name": "ReadyToReceiveAtAzureDC",
                          "value": "ReadyToReceiveAtAzureDC",
                          "description": "Device can be dropped off at Azure DC."
                        },
                        {
                          "name": "Created",
                          "value": "Created",
                          "description": "Job created by the customer."
                        },
                        {
                          "name": "ShippedToAzureDC",
                          "value": "ShippedToAzureDC",
                          "description": "User shipped the device to AzureDC."
                        },
                        {
                          "name": "AwaitingShipmentDetails",
                          "value": "AwaitingShipmentDetails",
                          "description": "Awaiting shipment details of device from customer."
                        },
                        {
                          "name": "PreparingToShipFromAzureDC",
                          "value": "PreparingToShipFromAzureDC",
                          "description": "Preparing the device to ship to customer."
                        },
                        {
                          "name": "ShippedToCustomer",
                          "value": "ShippedToCustomer",
                          "description": "Shipped the device to customer."
                        }
                      ]
                    }
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Display name of the job stage.",
                    "readOnly": true
                  },
                  "stageStatus": {
                    "description": "Status of the job stage.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "None",
                      "InProgress",
                      "Succeeded",
                      "Failed",
                      "Cancelled",
                      "Cancelling",
                      "SucceededWithErrors",
                      "WaitingForCustomerAction",
                      "SucceededWithWarnings",
                      "WaitingForCustomerActionForKek",
                      "WaitingForCustomerActionForCleanUp",
                      "CustomerActionPerformedForCleanUp",
                      "CustomerActionPerformed"
                    ],
                    "x-ms-enum": {
                      "name": "StageStatus",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "None",
                          "value": "None",
                          "description": "No status available yet."
                        },
                        {
                          "name": "InProgress",
                          "value": "InProgress",
                          "description": "Stage is in progress."
                        },
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Stage has succeeded."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Stage has failed."
                        },
                        {
                          "name": "Cancelled",
                          "value": "Cancelled",
                          "description": "Stage has been cancelled."
                        },
                        {
                          "name": "Cancelling",
                          "value": "Cancelling",
                          "description": "Stage is cancelling."
                        },
                        {
                          "name": "SucceededWithErrors",
                          "value": "SucceededWithErrors",
                          "description": "Stage has succeeded with errors."
                        },
                        {
                          "name": "WaitingForCustomerAction",
                          "value": "WaitingForCustomerAction",
                          "description": "Stage is stuck until customer takes some action."
                        },
                        {
                          "name": "SucceededWithWarnings",
                          "value": "SucceededWithWarnings",
                          "description": "Stage has succeeded with warnings."
                        },
                        {
                          "name": "WaitingForCustomerActionForKek",
                          "value": "WaitingForCustomerActionForKek",
                          "description": "Stage is waiting for customer action for kek action items."
                        },
                        {
                          "name": "WaitingForCustomerActionForCleanUp",
                          "value": "WaitingForCustomerActionForCleanUp",
                          "description": "Stage is waiting for customer action for clean up."
                        },
                        {
                          "name": "CustomerActionPerformedForCleanUp",
                          "value": "CustomerActionPerformedForCleanUp",
                          "description": "Stage has performed customer action for clean up."
                        },
                        {
                          "name": "CustomerActionPerformed",
                          "value": "CustomerActionPerformed",
                          "description": "Stage has performed customer action for clean up."
                        }
                      ]
                    }
                  },
                  "stageTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time for the job stage in UTC ISO 8601 format.",
                    "readOnly": true
                  },
                  "jobStageDetails": {
                    "description": "Job Stage Details",
                    "readOnly": true
                  },
                  "delayInformation": {
                    "type": "array",
                    "description": "Delay information for the job stages.",
                    "items": {
                      "type": "object",
                      "description": "Job Delay Notification details",
                      "properties": {
                        "status": {
                          "description": "Status of notification",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Active",
                            "Resolved"
                          ],
                          "x-ms-enum": {
                            "name": "DelayNotificationStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Active",
                                "value": "Active",
                                "description": "Delay is still active"
                              },
                              {
                                "name": "Resolved",
                                "value": "Resolved",
                                "description": "Delay has been resolved"
                              }
                            ]
                          }
                        },
                        "errorCode": {
                          "description": "Delay Error code",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "InternalIssueDelay",
                            "ActiveOrderLimitBreachedDelay",
                            "HighDemandDelay",
                            "LargeNumberOfFilesDelay"
                          ],
                          "x-ms-enum": {
                            "name": "PortalDelayErrorCode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "InternalIssueDelay",
                                "value": "InternalIssueDelay",
                                "description": "Delay due to any internal reasons"
                              },
                              {
                                "name": "ActiveOrderLimitBreachedDelay",
                                "value": "ActiveOrderLimitBreachedDelay",
                                "description": "Active Order limit breached."
                              },
                              {
                                "name": "HighDemandDelay",
                                "value": "HighDemandDelay",
                                "description": "High demand"
                              },
                              {
                                "name": "LargeNumberOfFilesDelay",
                                "value": "LargeNumberOfFilesDelay",
                                "description": "Slow copy due to large number of files"
                              }
                            ]
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the delay.",
                          "readOnly": true
                        },
                        "startTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp when the delay notification was created.",
                          "readOnly": true
                        },
                        "resolutionTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp when the delay notification was resolved.",
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true,
                    "x-ms-identifiers": []
                  }
                }
              },
              "readOnly": true
            },
            "contactDetails": {
              "description": "Contact details for notification and shipping.",
              "type": "object",
              "properties": {
                "contactName": {
                  "type": "string",
                  "description": "Contact name of the person."
                },
                "phone": {
                  "type": "string",
                  "description": "Phone number of the contact person."
                },
                "phoneExtension": {
                  "type": "string",
                  "description": "Phone extension number of the contact person."
                },
                "mobile": {
                  "type": "string",
                  "description": "Mobile number of the contact person."
                },
                "emailList": {
                  "type": "array",
                  "description": "List of Email-ids to be notified about job progress.",
                  "items": {
                    "type": "string"
                  }
                },
                "notificationPreference": {
                  "type": "array",
                  "description": "Notification preference for a job stage.",
                  "items": {
                    "type": "object",
                    "description": "Notification preference for a job stage.",
                    "properties": {
                      "stageName": {
                        "description": "Name of the stage.",
                        "type": "string",
                        "enum": [
                          "DevicePrepared",
                          "Dispatched",
                          "Delivered",
                          "PickedUp",
                          "AtAzureDC",
                          "DataCopy",
                          "Created",
                          "ShippedToCustomer"
                        ],
                        "x-ms-enum": {
                          "name": "NotificationStageName",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "DevicePrepared",
                              "value": "DevicePrepared",
                              "description": "Notification at device prepared stage."
                            },
                            {
                              "name": "Dispatched",
                              "value": "Dispatched",
                              "description": "Notification at device dispatched stage."
                            },
                            {
                              "name": "Delivered",
                              "value": "Delivered",
                              "description": "Notification at device delivered stage."
                            },
                            {
                              "name": "PickedUp",
                              "value": "PickedUp",
                              "description": "Notification at device picked up from user stage."
                            },
                            {
                              "name": "AtAzureDC",
                              "value": "AtAzureDC",
                              "description": "Notification at device received at Azure datacenter stage."
                            },
                            {
                              "name": "DataCopy",
                              "value": "DataCopy",
                              "description": "Notification at data copy started stage."
                            },
                            {
                              "name": "Created",
                              "value": "Created",
                              "description": "Notification at job created stage."
                            },
                            {
                              "name": "ShippedToCustomer",
                              "value": "ShippedToCustomer",
                              "description": "Notification at shipped devices to customer stage."
                            }
                          ]
                        }
                      },
                      "sendNotification": {
                        "type": "boolean",
                        "description": "Notification is required or not.",
                        "default": true
                      }
                    },
                    "required": [
                      "stageName",
                      "sendNotification"
                    ]
                  }
                }
              },
              "required": [
                "contactName",
                "phone",
                "emailList"
              ]
            },
            "shippingAddress": {
              "description": "Shipping address of the customer.",
              "type": "object",
              "properties": {
                "streetAddress1": {
                  "type": "string",
                  "description": "Street Address line 1."
                },
                "streetAddress2": {
                  "type": "string",
                  "description": "Street Address line 2."
                },
                "streetAddress3": {
                  "type": "string",
                  "description": "Street Address line 3."
                },
                "city": {
                  "type": "string",
                  "description": "Name of the City."
                },
                "stateOrProvince": {
                  "type": "string",
                  "description": "Name of the State or Province."
                },
                "country": {
                  "type": "string",
                  "description": "Name of the Country."
                },
                "postalCode": {
                  "type": "string",
                  "description": "Postal code."
                },
                "zipExtendedCode": {
                  "type": "string",
                  "description": "Extended Zip Code."
                },
                "companyName": {
                  "type": "string",
                  "description": "Name of the company."
                },
                "addressType": {
                  "type": "string",
                  "description": "Type of address.",
                  "default": "None",
                  "enum": [
                    "None",
                    "Residential",
                    "Commercial"
                  ],
                  "x-ms-enum": {
                    "name": "AddressType",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "None",
                        "value": "None",
                        "description": "Address type not known."
                      },
                      {
                        "name": "Residential",
                        "value": "Residential",
                        "description": "Residential Address."
                      },
                      {
                        "name": "Commercial",
                        "value": "Commercial",
                        "description": "Commercial Address."
                      }
                    ]
                  }
                },
                "skipAddressValidation": {
                  "type": "boolean",
                  "description": "Flag to indicate if customer has chosen to skip default address validation"
                },
                "taxIdentificationNumber": {
                  "type": "string",
                  "description": "Tax Identification Number"
                }
              },
              "required": [
                "streetAddress1",
                "country"
              ]
            },
            "deliveryPackage": {
              "description": "Delivery package shipping details.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "trackingUrl": {
                  "type": "string",
                  "description": "Url where shipment can be tracked.",
                  "readOnly": true
                },
                "carrierName": {
                  "type": "string",
                  "description": "Name of the carrier.",
                  "readOnly": true
                },
                "trackingId": {
                  "type": "string",
                  "description": "Tracking Id of shipment.",
                  "readOnly": true
                }
              }
            },
            "returnPackage": {
              "description": "Return package shipping details.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "trackingUrl": {
                  "type": "string",
                  "description": "Url where shipment can be tracked.",
                  "readOnly": true
                },
                "carrierName": {
                  "type": "string",
                  "description": "Name of the carrier.",
                  "readOnly": true
                },
                "trackingId": {
                  "type": "string",
                  "description": "Tracking Id of shipment.",
                  "readOnly": true
                }
              }
            },
            "dataImportDetails": {
              "type": "array",
              "description": "Details of the data to be imported into azure.",
              "items": {
                "type": "object",
                "description": "Details of the data to be used for importing data to azure.",
                "properties": {
                  "accountDetails": {
                    "description": "Account details of the data to be transferred",
                    "type": "object",
                    "properties": {
                      "dataAccountType": {
                        "type": "string",
                        "description": "Account Type of the data to be transferred.",
                        "default": "StorageAccount",
                        "enum": [
                          "StorageAccount",
                          "ManagedDisk"
                        ],
                        "x-ms-enum": {
                          "name": "DataAccountType",
                          "modelAsString": false,
                          "values": [
                            {
                              "name": "StorageAccount",
                              "value": "StorageAccount",
                              "description": "Storage Accounts ."
                            },
                            {
                              "name": "ManagedDisk",
                              "value": "ManagedDisk",
                              "description": "Azure Managed disk storage."
                            }
                          ]
                        }
                      },
                      "sharePassword": {
                        "type": "string",
                        "format": "password",
                        "description": "Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\\-$%^!+=;:_()]+",
                        "x-ms-mutability": [
                          "create"
                        ],
                        "x-ms-secret": true
                      }
                    },
                    "discriminator": "dataAccountType",
                    "required": [
                      "dataAccountType"
                    ]
                  },
                  "logCollectionLevel": {
                    "type": "string",
                    "description": "Level of the logs to be collected.",
                    "default": "Error",
                    "enum": [
                      "Error",
                      "Verbose"
                    ],
                    "x-ms-enum": {
                      "name": "LogCollectionLevel",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "Error",
                          "value": "Error",
                          "description": "Only Errors will be collected in the logs."
                        },
                        {
                          "name": "Verbose",
                          "value": "Verbose",
                          "description": "Verbose logging (includes Errors, CRC, size information and others)."
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "accountDetails"
                ]
              }
            },
            "dataExportDetails": {
              "type": "array",
              "description": "Details of the data to be exported from azure.",
              "items": {
                "type": "object",
                "description": "Details of the data to be used for exporting data from azure.",
                "properties": {
                  "transferConfiguration": {
                    "description": "Configuration for the data transfer.",
                    "type": "object",
                    "properties": {
                      "transferConfigurationType": {
                        "description": "Type of the configuration for transfer.",
                        "type": "string",
                        "enum": [
                          "TransferAll",
                          "TransferUsingFilter"
                        ],
                        "x-ms-enum": {
                          "name": "TransferConfigurationType",
                          "modelAsString": false,
                          "values": [
                            {
                              "name": "TransferAll",
                              "value": "TransferAll",
                              "description": "Transfer all the data."
                            },
                            {
                              "name": "TransferUsingFilter",
                              "value": "TransferUsingFilter",
                              "description": "Transfer using filter."
                            }
                          ]
                        }
                      },
                      "transferFilterDetails": {
                        "description": "Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.",
                        "type": "object",
                        "properties": {
                          "include": {
                            "description": "Details of the filtering the transfer of data.",
                            "type": "object",
                            "properties": {
                              "dataAccountType": {
                                "type": "string",
                                "description": "Type of the account of data.",
                                "default": "StorageAccount",
                                "enum": [
                                  "StorageAccount",
                                  "ManagedDisk"
                                ],
                                "x-ms-enum": {
                                  "name": "DataAccountType",
                                  "modelAsString": false,
                                  "values": [
                                    {
                                      "name": "StorageAccount",
                                      "value": "StorageAccount",
                                      "description": "Storage Accounts ."
                                    },
                                    {
                                      "name": "ManagedDisk",
                                      "value": "ManagedDisk",
                                      "description": "Azure Managed disk storage."
                                    }
                                  ]
                                }
                              },
                              "blobFilterDetails": {
                                "description": "Filter details to transfer blobs.",
                                "type": "object",
                                "properties": {
                                  "blobPrefixList": {
                                    "type": "array",
                                    "description": "Prefix list of the Azure blobs to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "blobPathList": {
                                    "type": "array",
                                    "description": "List of full path of the blobs to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "containerList": {
                                    "type": "array",
                                    "description": "List of blob containers to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "azureFileFilterDetails": {
                                "description": "Filter details to transfer Azure files.",
                                "type": "object",
                                "properties": {
                                  "filePrefixList": {
                                    "type": "array",
                                    "description": "Prefix list of the Azure files to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "filePathList": {
                                    "type": "array",
                                    "description": "List of full path of the files to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "fileShareList": {
                                    "type": "array",
                                    "description": "List of file shares to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "filterFileDetails": {
                                "type": "array",
                                "description": "Details of the filter files to be used for data transfer.",
                                "items": {
                                  "type": "object",
                                  "description": "Details of the filter files to be used for data transfer.",
                                  "properties": {
                                    "filterFileType": {
                                      "description": "Type of the filter file.",
                                      "type": "string",
                                      "enum": [
                                        "AzureBlob",
                                        "AzureFile"
                                      ],
                                      "x-ms-enum": {
                                        "name": "FilterFileType",
                                        "modelAsString": false,
                                        "values": [
                                          {
                                            "name": "AzureBlob",
                                            "value": "AzureBlob",
                                            "description": "Filter file is of the type AzureBlob."
                                          },
                                          {
                                            "name": "AzureFile",
                                            "value": "AzureFile",
                                            "description": "Filter file is of the type AzureFiles."
                                          }
                                        ]
                                      }
                                    },
                                    "filterFilePath": {
                                      "type": "string",
                                      "description": "Path of the file that contains the details of all items to transfer."
                                    }
                                  },
                                  "required": [
                                    "filterFileType",
                                    "filterFilePath"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "dataAccountType"
                            ]
                          }
                        }
                      },
                      "transferAllDetails": {
                        "description": "Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll",
                        "type": "object",
                        "properties": {
                          "include": {
                            "description": "Details to transfer all data.",
                            "type": "object",
                            "properties": {
                              "dataAccountType": {
                                "type": "string",
                                "description": "Type of the account of data",
                                "default": "StorageAccount",
                                "enum": [
                                  "StorageAccount",
                                  "ManagedDisk"
                                ],
                                "x-ms-enum": {
                                  "name": "DataAccountType",
                                  "modelAsString": false,
                                  "values": [
                                    {
                                      "name": "StorageAccount",
                                      "value": "StorageAccount",
                                      "description": "Storage Accounts ."
                                    },
                                    {
                                      "name": "ManagedDisk",
                                      "value": "ManagedDisk",
                                      "description": "Azure Managed disk storage."
                                    }
                                  ]
                                }
                              },
                              "transferAllBlobs": {
                                "type": "boolean",
                                "description": "To indicate if all Azure blobs have to be transferred"
                              },
                              "transferAllFiles": {
                                "type": "boolean",
                                "description": "To indicate if all Azure Files have to be transferred"
                              }
                            },
                            "required": [
                              "dataAccountType"
                            ]
                          }
                        }
                      }
                    },
                    "required": [
                      "transferConfigurationType"
                    ]
                  },
                  "logCollectionLevel": {
                    "type": "string",
                    "description": "Level of the logs to be collected.",
                    "default": "Error",
                    "enum": [
                      "Error",
                      "Verbose"
                    ],
                    "x-ms-enum": {
                      "name": "LogCollectionLevel",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "Error",
                          "value": "Error",
                          "description": "Only Errors will be collected in the logs."
                        },
                        {
                          "name": "Verbose",
                          "value": "Verbose",
                          "description": "Verbose logging (includes Errors, CRC, size information and others)."
                        }
                      ]
                    }
                  },
                  "accountDetails": {
                    "description": "Account details of the data to be transferred",
                    "type": "object",
                    "properties": {
                      "dataAccountType": {
                        "type": "string",
                        "description": "Account Type of the data to be transferred.",
                        "default": "StorageAccount",
                        "enum": [
                          "StorageAccount",
                          "ManagedDisk"
                        ],
                        "x-ms-enum": {
                          "name": "DataAccountType",
                          "modelAsString": false,
                          "values": [
                            {
                              "name": "StorageAccount",
                              "value": "StorageAccount",
                              "description": "Storage Accounts ."
                            },
                            {
                              "name": "ManagedDisk",
                              "value": "ManagedDisk",
                              "description": "Azure Managed disk storage."
                            }
                          ]
                        }
                      },
                      "sharePassword": {
                        "type": "string",
                        "format": "password",
                        "description": "Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\\-$%^!+=;:_()]+",
                        "x-ms-mutability": [
                          "create"
                        ],
                        "x-ms-secret": true
                      }
                    },
                    "discriminator": "dataAccountType",
                    "required": [
                      "dataAccountType"
                    ]
                  }
                },
                "required": [
                  "transferConfiguration",
                  "accountDetails"
                ]
              }
            },
            "jobDetailsType": {
              "description": "Indicates the type of job details.",
              "type": "string",
              "enum": [
                "DataBox",
                "DataBoxDisk",
                "DataBoxHeavy",
                "DataBoxCustomerDisk"
              ],
              "x-ms-enum": {
                "name": "ClassDiscriminator",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DataBox",
                    "value": "DataBox",
                    "description": "Data Box orders."
                  },
                  {
                    "name": "DataBoxDisk",
                    "value": "DataBoxDisk",
                    "description": "Data Box Disk orders."
                  },
                  {
                    "name": "DataBoxHeavy",
                    "value": "DataBoxHeavy",
                    "description": "Data Box Heavy orders."
                  },
                  {
                    "name": "DataBoxCustomerDisk",
                    "value": "DataBoxCustomerDisk",
                    "description": "Data Box Customer Disk orders."
                  }
                ]
              }
            },
            "preferences": {
              "description": "Preferences for the order.",
              "type": "object",
              "properties": {
                "preferredDataCenterRegion": {
                  "type": "array",
                  "description": "Preferred data center region.",
                  "items": {
                    "type": "string"
                  }
                },
                "transportPreferences": {
                  "description": "Preferences related to the shipment logistics of the sku.",
                  "type": "object",
                  "properties": {
                    "preferredShipmentType": {
                      "description": "Indicates Shipment Logistics type that the customer preferred.",
                      "type": "string",
                      "enum": [
                        "CustomerManaged",
                        "MicrosoftManaged"
                      ],
                      "x-ms-enum": {
                        "name": "TransportShipmentTypes",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "CustomerManaged",
                            "value": "CustomerManaged",
                            "description": "Shipment Logistics is handled by the customer."
                          },
                          {
                            "name": "MicrosoftManaged",
                            "value": "MicrosoftManaged",
                            "description": "Shipment Logistics is handled by Microsoft."
                          }
                        ]
                      }
                    },
                    "isUpdated": {
                      "type": "boolean",
                      "description": "Read only property which indicates whether transport preferences has been updated or not after device is prepared.",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "preferredShipmentType"
                  ]
                },
                "reverseTransportPreferences": {
                  "description": "Optional Preferences related to the reverse shipment logistics of the sku.",
                  "type": "object",
                  "properties": {
                    "preferredShipmentType": {
                      "description": "Indicates Shipment Logistics type that the customer preferred.",
                      "type": "string",
                      "enum": [
                        "CustomerManaged",
                        "MicrosoftManaged"
                      ],
                      "x-ms-enum": {
                        "name": "TransportShipmentTypes",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "CustomerManaged",
                            "value": "CustomerManaged",
                            "description": "Shipment Logistics is handled by the customer."
                          },
                          {
                            "name": "MicrosoftManaged",
                            "value": "MicrosoftManaged",
                            "description": "Shipment Logistics is handled by Microsoft."
                          }
                        ]
                      }
                    },
                    "isUpdated": {
                      "type": "boolean",
                      "description": "Read only property which indicates whether transport preferences has been updated or not after device is prepared.",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "preferredShipmentType"
                  ]
                },
                "encryptionPreferences": {
                  "description": "Preferences related to the Encryption.",
                  "type": "object",
                  "properties": {
                    "doubleEncryption": {
                      "type": "string",
                      "description": "Defines secondary layer of software-based encryption enablement.",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "DoubleEncryption",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Software-based encryption is enabled."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Software-based encryption is disabled."
                          }
                        ]
                      }
                    },
                    "hardwareEncryption": {
                      "description": "Defines Hardware level encryption (Only for disk)",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "HardwareEncryption",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Hardware-based encryption is enabled."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Hardware-based encryption is disabled."
                          }
                        ]
                      }
                    }
                  }
                },
                "storageAccountAccessTierPreferences": {
                  "type": "array",
                  "description": "Preferences related to the Access Tier of storage accounts.",
                  "items": {
                    "type": "string",
                    "enum": [
                      "Archive"
                    ],
                    "x-ms-enum": {
                      "modelAsString": false
                    }
                  }
                }
              }
            },
            "reverseShippingDetails": {
              "description": "Optional Reverse Shipping details for order.",
              "type": "object",
              "properties": {
                "contactDetails": {
                  "description": "Contact Info.",
                  "type": "object",
                  "properties": {
                    "contactName": {
                      "type": "string",
                      "description": "Contact name of the person.",
                      "minLength": 1
                    },
                    "phone": {
                      "type": "string",
                      "description": "Phone number of the contact person.",
                      "minLength": 1
                    },
                    "phoneExtension": {
                      "type": "string",
                      "description": "Phone extension number of the contact person."
                    },
                    "mobile": {
                      "type": "string",
                      "description": "Mobile number of the contact person."
                    }
                  },
                  "required": [
                    "contactName",
                    "phone"
                  ]
                },
                "shippingAddress": {
                  "description": "Shipping address where customer wishes to receive the device.",
                  "type": "object",
                  "properties": {
                    "streetAddress1": {
                      "type": "string",
                      "description": "Street Address line 1."
                    },
                    "streetAddress2": {
                      "type": "string",
                      "description": "Street Address line 2."
                    },
                    "streetAddress3": {
                      "type": "string",
                      "description": "Street Address line 3."
                    },
                    "city": {
                      "type": "string",
                      "description": "Name of the City."
                    },
                    "stateOrProvince": {
                      "type": "string",
                      "description": "Name of the State or Province."
                    },
                    "country": {
                      "type": "string",
                      "description": "Name of the Country."
                    },
                    "postalCode": {
                      "type": "string",
                      "description": "Postal code."
                    },
                    "zipExtendedCode": {
                      "type": "string",
                      "description": "Extended Zip Code."
                    },
                    "companyName": {
                      "type": "string",
                      "description": "Name of the company."
                    },
                    "addressType": {
                      "type": "string",
                      "description": "Type of address.",
                      "default": "None",
                      "enum": [
                        "None",
                        "Residential",
                        "Commercial"
                      ],
                      "x-ms-enum": {
                        "name": "AddressType",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "None",
                            "value": "None",
                            "description": "Address type not known."
                          },
                          {
                            "name": "Residential",
                            "value": "Residential",
                            "description": "Residential Address."
                          },
                          {
                            "name": "Commercial",
                            "value": "Commercial",
                            "description": "Commercial Address."
                          }
                        ]
                      }
                    },
                    "skipAddressValidation": {
                      "type": "boolean",
                      "description": "Flag to indicate if customer has chosen to skip default address validation"
                    },
                    "taxIdentificationNumber": {
                      "type": "string",
                      "description": "Tax Identification Number"
                    }
                  },
                  "required": [
                    "streetAddress1",
                    "country"
                  ]
                },
                "isUpdated": {
                  "type": "boolean",
                  "description": "A flag to indicate whether Reverse Shipping details are updated or not after device has been prepared.\nRead only field",
                  "readOnly": true
                }
              }
            },
            "copyLogDetails": {
              "type": "array",
              "description": "List of copy log details.",
              "items": {
                "type": "object",
                "description": "Details for log generated during copy.",
                "properties": {
                  "copyLogDetailsType": {
                    "description": "Indicates the type of job details.",
                    "type": "string",
                    "enum": [
                      "DataBox",
                      "DataBoxDisk",
                      "DataBoxHeavy",
                      "DataBoxCustomerDisk"
                    ],
                    "x-ms-enum": {
                      "name": "ClassDiscriminator",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "DataBox",
                          "value": "DataBox",
                          "description": "Data Box orders."
                        },
                        {
                          "name": "DataBoxDisk",
                          "value": "DataBoxDisk",
                          "description": "Data Box Disk orders."
                        },
                        {
                          "name": "DataBoxHeavy",
                          "value": "DataBoxHeavy",
                          "description": "Data Box Heavy orders."
                        },
                        {
                          "name": "DataBoxCustomerDisk",
                          "value": "DataBoxCustomerDisk",
                          "description": "Data Box Customer Disk orders."
                        }
                      ]
                    }
                  }
                },
                "discriminator": "copyLogDetailsType",
                "required": [
                  "copyLogDetailsType"
                ]
              },
              "readOnly": true
            },
            "reverseShipmentLabelSasKey": {
              "type": "string",
              "description": "Shared access key to download the return shipment label",
              "readOnly": true
            },
            "chainOfCustodySasKey": {
              "type": "string",
              "description": "Shared access key to download the chain of custody logs",
              "readOnly": true
            },
            "deviceErasureDetails": {
              "description": "Holds device data erasure details",
              "readOnly": true,
              "type": "object",
              "properties": {
                "deviceErasureStatus": {
                  "description": "Holds the device erasure completion status",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "None",
                    "InProgress",
                    "Succeeded",
                    "Failed",
                    "Cancelled",
                    "Cancelling",
                    "SucceededWithErrors",
                    "WaitingForCustomerAction",
                    "SucceededWithWarnings",
                    "WaitingForCustomerActionForKek",
                    "WaitingForCustomerActionForCleanUp",
                    "CustomerActionPerformedForCleanUp",
                    "CustomerActionPerformed"
                  ],
                  "x-ms-enum": {
                    "name": "StageStatus",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "None",
                        "value": "None",
                        "description": "No status available yet."
                      },
                      {
                        "name": "InProgress",
                        "value": "InProgress",
                        "description": "Stage is in progress."
                      },
                      {
                        "name": "Succeeded",
                        "value": "Succeeded",
                        "description": "Stage has succeeded."
                      },
                      {
                        "name": "Failed",
                        "value": "Failed",
                        "description": "Stage has failed."
                      },
                      {
                        "name": "Cancelled",
                        "value": "Cancelled",
                        "description": "Stage has been cancelled."
                      },
                      {
                        "name": "Cancelling",
                        "value": "Cancelling",
                        "description": "Stage is cancelling."
                      },
                      {
                        "name": "SucceededWithErrors",
                        "value": "SucceededWithErrors",
                        "description": "Stage has succeeded with errors."
                      },
                      {
                        "name": "WaitingForCustomerAction",
                        "value": "WaitingForCustomerAction",
                        "description": "Stage is stuck until customer takes some action."
                      },
                      {
                        "name": "SucceededWithWarnings",
                        "value": "SucceededWithWarnings",
                        "description": "Stage has succeeded with warnings."
                      },
                      {
                        "name": "WaitingForCustomerActionForKek",
                        "value": "WaitingForCustomerActionForKek",
                        "description": "Stage is waiting for customer action for kek action items."
                      },
                      {
                        "name": "WaitingForCustomerActionForCleanUp",
                        "value": "WaitingForCustomerActionForCleanUp",
                        "description": "Stage is waiting for customer action for clean up."
                      },
                      {
                        "name": "CustomerActionPerformedForCleanUp",
                        "value": "CustomerActionPerformedForCleanUp",
                        "description": "Stage has performed customer action for clean up."
                      },
                      {
                        "name": "CustomerActionPerformed",
                        "value": "CustomerActionPerformed",
                        "description": "Stage has performed customer action for clean up."
                      }
                    ]
                  }
                },
                "erasureOrDestructionCertificateSasKey": {
                  "type": "string",
                  "description": "Shared access key to download cleanup or destruction certificate for device",
                  "readOnly": true
                },
                "secureErasureCertificateSasKey": {
                  "type": "string",
                  "description": "Shared access key to download secure erasure certificate for the device",
                  "readOnly": true
                }
              }
            },
            "keyEncryptionKey": {
              "description": "Details about which key encryption type is being used.",
              "type": "object",
              "properties": {
                "kekType": {
                  "type": "string",
                  "description": "Type of encryption key used for key encryption.",
                  "default": "MicrosoftManaged",
                  "enum": [
                    "MicrosoftManaged",
                    "CustomerManaged"
                  ],
                  "x-ms-enum": {
                    "name": "KekType",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "MicrosoftManaged",
                        "value": "MicrosoftManaged",
                        "description": "Key encryption key is managed by Microsoft."
                      },
                      {
                        "name": "CustomerManaged",
                        "value": "CustomerManaged",
                        "description": "Key encryption key is managed by the Customer."
                      }
                    ]
                  }
                },
                "identityProperties": {
                  "description": "Managed identity properties used for key encryption.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Managed service identity type."
                    },
                    "userAssigned": {
                      "description": "User assigned identity properties.",
                      "type": "object",
                      "properties": {
                        "resourceId": {
                          "type": "string",
                          "description": "Arm resource id for user assigned identity to be used to fetch MSI token."
                        }
                      }
                    }
                  }
                },
                "kekUrl": {
                  "type": "string",
                  "description": "Key encryption key. It is required in case of Customer managed KekType."
                },
                "kekVaultResourceID": {
                  "type": "string",
                  "description": "Kek vault resource id. It is required in case of Customer managed KekType."
                }
              },
              "required": [
                "kekType"
              ]
            },
            "expectedDataSizeInTeraBytes": {
              "type": "integer",
              "format": "int32",
              "description": "The expected size of the data, which needs to be transferred in this job, in terabytes."
            },
            "actions": {
              "type": "array",
              "description": "Available actions on the job.",
              "items": {
                "type": "string",
                "description": "Resolution code provided by customer.",
                "enum": [
                  "None",
                  "MoveToCleanUpDevice",
                  "Resume",
                  "Restart",
                  "ReachOutToOperation"
                ],
                "x-ms-enum": {
                  "name": "CustomerResolutionCode",
                  "modelAsString": false,
                  "values": [
                    {
                      "name": "None",
                      "value": "None",
                      "description": "No Resolution Yet"
                    },
                    {
                      "name": "MoveToCleanUpDevice",
                      "value": "MoveToCleanUpDevice",
                      "description": "Clean the device"
                    },
                    {
                      "name": "Resume",
                      "value": "Resume",
                      "description": "Resume the job to same stage"
                    },
                    {
                      "name": "Restart",
                      "value": "Restart",
                      "description": "Restart whole action."
                    },
                    {
                      "name": "ReachOutToOperation",
                      "value": "ReachOutToOperation",
                      "description": "Reach out to operation for further action."
                    }
                  ]
                }
              },
              "readOnly": true
            },
            "lastMitigationActionOnJob": {
              "description": "Last mitigation action performed on the job.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "actionDateTimeInUtc": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Action performed date time"
                },
                "isPerformedByCustomer": {
                  "type": "boolean",
                  "description": "Action performed by customer,\npossibility is that mitigation might happen by customer or service or by ops"
                },
                "customerResolution": {
                  "type": "string",
                  "description": "Resolution code provided by customer.",
                  "enum": [
                    "None",
                    "MoveToCleanUpDevice",
                    "Resume",
                    "Restart",
                    "ReachOutToOperation"
                  ],
                  "x-ms-enum": {
                    "name": "CustomerResolutionCode",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "None",
                        "value": "None",
                        "description": "No Resolution Yet"
                      },
                      {
                        "name": "MoveToCleanUpDevice",
                        "value": "MoveToCleanUpDevice",
                        "description": "Clean the device"
                      },
                      {
                        "name": "Resume",
                        "value": "Resume",
                        "description": "Resume the job to same stage"
                      },
                      {
                        "name": "Restart",
                        "value": "Restart",
                        "description": "Restart whole action."
                      },
                      {
                        "name": "ReachOutToOperation",
                        "value": "ReachOutToOperation",
                        "description": "Reach out to operation for further action."
                      }
                    ]
                  }
                }
              }
            },
            "datacenterAddress": {
              "description": "Datacenter address to ship to, for the given sku and storage location.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "datacenterAddressType": {
                  "description": "Data center address type",
                  "type": "string",
                  "enum": [
                    "DatacenterAddressLocation",
                    "DatacenterAddressInstruction"
                  ],
                  "x-ms-enum": {
                    "name": "DatacenterAddressType",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "DatacenterAddressLocation",
                        "value": "DatacenterAddressLocation",
                        "description": "Data center address location."
                      },
                      {
                        "name": "DatacenterAddressInstruction",
                        "value": "DatacenterAddressInstruction",
                        "description": "Data center address instruction."
                      }
                    ]
                  }
                },
                "supportedCarriersForReturnShipment": {
                  "type": "array",
                  "description": "List of supported carriers for return shipment.",
                  "items": {
                    "type": "string"
                  },
                  "readOnly": true
                },
                "dataCenterAzureLocation": {
                  "type": "string",
                  "description": "Azure Location where the Data Center serves primarily.",
                  "readOnly": true
                }
              },
              "discriminator": "datacenterAddressType",
              "required": [
                "datacenterAddressType"
              ]
            },
            "dataCenterCode": {
              "description": "DataCenter code.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "BY2",
                "BY1",
                "ORK70",
                "AM2",
                "AMS20",
                "BY21",
                "BY24",
                "MWH01",
                "AMS06",
                "SSE90",
                "SYD03",
                "SYD23",
                "CBR20",
                "YTO20",
                "CWL20",
                "LON24",
                "BOM01",
                "BL20",
                "BL7",
                "SEL20",
                "TYO01",
                "BN1",
                "SN5",
                "CYS04",
                "TYO22",
                "YTO21",
                "YQB20",
                "FRA22",
                "MAA01",
                "CPQ02",
                "CPQ20",
                "SIN20",
                "HKG20",
                "SG2",
                "MEL23",
                "SEL21",
                "OSA20",
                "SHA03",
                "BJB",
                "JNB22",
                "JNB21",
                "MNZ21",
                "SN8",
                "AUH20",
                "ZRH20",
                "PUS20",
                "AdHoc",
                "CH1",
                "DSM05",
                "DUB07",
                "PNQ01",
                "SVG20",
                "OSA02",
                "OSA22",
                "PAR22",
                "BN7",
                "SN6",
                "BJS20",
                "BL24",
                "IDC5",
                "TYO23",
                "NTG20",
                "DXB23",
                "DSM11",
                "AMS25",
                "CPQ21",
                "OSA23"
              ],
              "x-ms-enum": {
                "name": "DataCenterCode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "BY2",
                    "value": "BY2"
                  },
                  {
                    "name": "BY1",
                    "value": "BY1"
                  },
                  {
                    "name": "ORK70",
                    "value": "ORK70"
                  },
                  {
                    "name": "AM2",
                    "value": "AM2"
                  },
                  {
                    "name": "AMS20",
                    "value": "AMS20"
                  },
                  {
                    "name": "BY21",
                    "value": "BY21"
                  },
                  {
                    "name": "BY24",
                    "value": "BY24"
                  },
                  {
                    "name": "MWH01",
                    "value": "MWH01"
                  },
                  {
                    "name": "AMS06",
                    "value": "AMS06"
                  },
                  {
                    "name": "SSE90",
                    "value": "SSE90"
                  },
                  {
                    "name": "SYD03",
                    "value": "SYD03"
                  },
                  {
                    "name": "SYD23",
                    "value": "SYD23"
                  },
                  {
                    "name": "CBR20",
                    "value": "CBR20"
                  },
                  {
                    "name": "YTO20",
                    "value": "YTO20"
                  },
                  {
                    "name": "CWL20",
                    "value": "CWL20"
                  },
                  {
                    "name": "LON24",
                    "value": "LON24"
                  },
                  {
                    "name": "BOM01",
                    "value": "BOM01"
                  },
                  {
                    "name": "BL20",
                    "value": "BL20"
                  },
                  {
                    "name": "BL7",
                    "value": "BL7"
                  },
                  {
                    "name": "SEL20",
                    "value": "SEL20"
                  },
                  {
                    "name": "TYO01",
                    "value": "TYO01"
                  },
                  {
                    "name": "BN1",
                    "value": "BN1"
                  },
                  {
                    "name": "SN5",
                    "value": "SN5"
                  },
                  {
                    "name": "CYS04",
                    "value": "CYS04"
                  },
                  {
                    "name": "TYO22",
                    "value": "TYO22"
                  },
                  {
                    "name": "YTO21",
                    "value": "YTO21"
                  },
                  {
                    "name": "YQB20",
                    "value": "YQB20"
                  },
                  {
                    "name": "FRA22",
                    "value": "FRA22"
                  },
                  {
                    "name": "MAA01",
                    "value": "MAA01"
                  },
                  {
                    "name": "CPQ02",
                    "value": "CPQ02"
                  },
                  {
                    "name": "CPQ20",
                    "value": "CPQ20"
                  },
                  {
                    "name": "SIN20",
                    "value": "SIN20"
                  },
                  {
                    "name": "HKG20",
                    "value": "HKG20"
                  },
                  {
                    "name": "SG2",
                    "value": "SG2"
                  },
                  {
                    "name": "MEL23",
                    "value": "MEL23"
                  },
                  {
                    "name": "SEL21",
                    "value": "SEL21"
                  },
                  {
                    "name": "OSA20",
                    "value": "OSA20"
                  },
                  {
                    "name": "SHA03",
                    "value": "SHA03"
                  },
                  {
                    "name": "BJB",
                    "value": "BJB"
                  },
                  {
                    "name": "JNB22",
                    "value": "JNB22"
                  },
                  {
                    "name": "JNB21",
                    "value": "JNB21"
                  },
                  {
                    "name": "MNZ21",
                    "value": "MNZ21"
                  },
                  {
                    "name": "SN8",
                    "value": "SN8"
                  },
                  {
                    "name": "AUH20",
                    "value": "AUH20"
                  },
                  {
                    "name": "ZRH20",
                    "value": "ZRH20"
                  },
                  {
                    "name": "PUS20",
                    "value": "PUS20"
                  },
                  {
                    "name": "AdHoc",
                    "value": "AdHoc"
                  },
                  {
                    "name": "CH1",
                    "value": "CH1"
                  },
                  {
                    "name": "DSM05",
                    "value": "DSM05"
                  },
                  {
                    "name": "DUB07",
                    "value": "DUB07"
                  },
                  {
                    "name": "PNQ01",
                    "value": "PNQ01"
                  },
                  {
                    "name": "SVG20",
                    "value": "SVG20"
                  },
                  {
                    "name": "OSA02",
                    "value": "OSA02"
                  },
                  {
                    "name": "OSA22",
                    "value": "OSA22"
                  },
                  {
                    "name": "PAR22",
                    "value": "PAR22"
                  },
                  {
                    "name": "BN7",
                    "value": "BN7"
                  },
                  {
                    "name": "SN6",
                    "value": "SN6"
                  },
                  {
                    "name": "BJS20",
                    "value": "BJS20"
                  },
                  {
                    "name": "BL24",
                    "value": "BL24"
                  },
                  {
                    "name": "IDC5",
                    "value": "IDC5"
                  },
                  {
                    "name": "TYO23",
                    "value": "TYO23"
                  },
                  {
                    "name": "NTG20",
                    "value": "NTG20"
                  },
                  {
                    "name": "DXB23",
                    "value": "DXB23"
                  },
                  {
                    "name": "DSM11",
                    "value": "DSM11"
                  },
                  {
                    "name": "AMS25",
                    "value": "AMS25"
                  },
                  {
                    "name": "CPQ21",
                    "value": "CPQ21"
                  },
                  {
                    "name": "OSA23",
                    "value": "OSA23"
                  }
                ]
              }
            }
          },
          "discriminator": "jobDetailsType",
          "required": [
            "contactDetails",
            "jobDetailsType"
          ]
        }
      ],
      "x-ms-discriminator-value": "DataBox"
    },
    "DataBoxScheduleAvailabilityRequest": {
      "type": "object",
      "description": "Request body to get the availability for scheduling data box orders orders.",
      "allOf": [
        {
          "type": "object",
          "description": "Request body to get the availability for scheduling orders.",
          "properties": {
            "storageLocation": {
              "type": "string",
              "description": "Location for data transfer. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01"
            },
            "skuName": {
              "description": "Sku Name for which the order is to be scheduled.",
              "type": "string",
              "enum": [
                "DataBox",
                "DataBoxDisk",
                "DataBoxHeavy",
                "DataBoxCustomerDisk"
              ],
              "x-ms-enum": {
                "name": "SkuName",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DataBox",
                    "value": "DataBox",
                    "description": "Data Box."
                  },
                  {
                    "name": "DataBoxDisk",
                    "value": "DataBoxDisk",
                    "description": "Data Box Disk."
                  },
                  {
                    "name": "DataBoxHeavy",
                    "value": "DataBoxHeavy",
                    "description": "Data Box Heavy."
                  },
                  {
                    "name": "DataBoxCustomerDisk",
                    "value": "DataBoxCustomerDisk",
                    "description": "Data Box Customer Disk"
                  }
                ]
              }
            },
            "country": {
              "type": "string",
              "description": "Country in which storage location should be supported."
            },
            "model": {
              "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
              "type": "string",
              "enum": [
                "DataBox",
                "DataBoxDisk",
                "DataBoxHeavy",
                "DataBoxCustomerDisk",
                "AzureDataBox120",
                "AzureDataBox525"
              ],
              "x-ms-enum": {
                "name": "ModelName",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DataBox",
                    "value": "DataBox",
                    "description": "Data Box."
                  },
                  {
                    "name": "DataBoxDisk",
                    "value": "DataBoxDisk",
                    "description": "Data Box Disk."
                  },
                  {
                    "name": "DataBoxHeavy",
                    "value": "DataBoxHeavy",
                    "description": "Data Box Heavy."
                  },
                  {
                    "name": "DataBoxCustomerDisk",
                    "value": "DataBoxCustomerDisk",
                    "description": "Data Box Customer Disk"
                  },
                  {
                    "name": "AzureDataBox120",
                    "value": "AzureDataBox120",
                    "description": "Data Box V2 with 120TB usable capacity."
                  },
                  {
                    "name": "AzureDataBox525",
                    "value": "AzureDataBox525",
                    "description": "Data Box V2 with 525TB usable capacity."
                  }
                ]
              }
            }
          },
          "discriminator": "skuName",
          "required": [
            "storageLocation",
            "skuName"
          ]
        }
      ],
      "x-ms-discriminator-value": "DataBox"
    },
    "DataBoxSecret": {
      "type": "object",
      "description": "The secrets related to a DataBox.",
      "properties": {
        "deviceSerialNumber": {
          "type": "string",
          "description": "Serial number of the assigned device.",
          "readOnly": true
        },
        "devicePassword": {
          "type": "string",
          "description": "Password for out of the box experience on device.",
          "readOnly": true
        },
        "networkConfigurations": {
          "type": "array",
          "description": "Network configuration of the appliance.",
          "items": {
            "type": "object",
            "description": "The Network Adapter configuration of a DataBox.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the network.",
                "readOnly": true
              },
              "macAddress": {
                "type": "string",
                "description": "Mac Address.",
                "readOnly": true
              }
            }
          },
          "readOnly": true
        },
        "encodedValidationCertPubKey": {
          "type": "string",
          "description": "The base 64 encoded public key to authenticate with the device",
          "readOnly": true
        },
        "accountCredentialDetails": {
          "type": "array",
          "description": "Per account level access credentials.",
          "items": {
            "type": "object",
            "description": "Credential details of the account.",
            "properties": {
              "accountName": {
                "type": "string",
                "description": "Name of the account.",
                "readOnly": true
              },
              "dataAccountType": {
                "description": "Type of the account.",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "StorageAccount",
                  "ManagedDisk"
                ],
                "x-ms-enum": {
                  "name": "DataAccountType",
                  "modelAsString": false,
                  "values": [
                    {
                      "name": "StorageAccount",
                      "value": "StorageAccount",
                      "description": "Storage Accounts ."
                    },
                    {
                      "name": "ManagedDisk",
                      "value": "ManagedDisk",
                      "description": "Azure Managed disk storage."
                    }
                  ]
                }
              },
              "accountConnectionString": {
                "type": "string",
                "description": "Connection string of the account endpoint to use the account as a storage endpoint on the device.",
                "readOnly": true
              },
              "shareCredentialDetails": {
                "type": "array",
                "description": "Per share level unencrypted access credentials.",
                "items": {
                  "type": "object",
                  "description": "Credential details of the shares in account.",
                  "properties": {
                    "shareName": {
                      "type": "string",
                      "description": "Name of the share.",
                      "readOnly": true
                    },
                    "shareType": {
                      "description": "Type of the share.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "UnknownType",
                        "HCS",
                        "BlockBlob",
                        "PageBlob",
                        "AzureFile",
                        "ManagedDisk"
                      ],
                      "x-ms-enum": {
                        "name": "ShareDestinationFormatType",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "UnknownType",
                            "value": "UnknownType",
                            "description": "Unknown format."
                          },
                          {
                            "name": "HCS",
                            "value": "HCS",
                            "description": "Storsimple data format."
                          },
                          {
                            "name": "BlockBlob",
                            "value": "BlockBlob",
                            "description": "Azure storage block blob format."
                          },
                          {
                            "name": "PageBlob",
                            "value": "PageBlob",
                            "description": "Azure storage page blob format."
                          },
                          {
                            "name": "AzureFile",
                            "value": "AzureFile",
                            "description": "Azure storage file format."
                          },
                          {
                            "name": "ManagedDisk",
                            "value": "ManagedDisk",
                            "description": "Azure Compute Disk."
                          }
                        ]
                      }
                    },
                    "userName": {
                      "type": "string",
                      "description": "User name for the share.",
                      "readOnly": true
                    },
                    "password": {
                      "type": "string",
                      "description": "Password for the share.",
                      "readOnly": true
                    },
                    "supportedAccessProtocols": {
                      "type": "array",
                      "description": "Access protocols supported on the device.",
                      "items": {
                        "type": "string",
                        "description": "Access protocols supported on the device.",
                        "enum": [
                          "SMB",
                          "NFS"
                        ],
                        "x-ms-enum": {
                          "name": "AccessProtocol",
                          "modelAsString": false,
                          "values": [
                            {
                              "name": "SMB",
                              "value": "SMB",
                              "description": "Server Message Block protocol(SMB)."
                            },
                            {
                              "name": "NFS",
                              "value": "NFS",
                              "description": "Network File System protocol(NFS)."
                            }
                          ]
                        }
                      },
                      "readOnly": true
                    }
                  }
                },
                "readOnly": true
              }
            }
          },
          "readOnly": true
        }
      }
    },
    "DataCenterCode": {
      "type": "string",
      "description": "DataCenter code.",
      "enum": [
        "Invalid",
        "BY2",
        "BY1",
        "ORK70",
        "AM2",
        "AMS20",
        "BY21",
        "BY24",
        "MWH01",
        "AMS06",
        "SSE90",
        "SYD03",
        "SYD23",
        "CBR20",
        "YTO20",
        "CWL20",
        "LON24",
        "BOM01",
        "BL20",
        "BL7",
        "SEL20",
        "TYO01",
        "BN1",
        "SN5",
        "CYS04",
        "TYO22",
        "YTO21",
        "YQB20",
        "FRA22",
        "MAA01",
        "CPQ02",
        "CPQ20",
        "SIN20",
        "HKG20",
        "SG2",
        "MEL23",
        "SEL21",
        "OSA20",
        "SHA03",
        "BJB",
        "JNB22",
        "JNB21",
        "MNZ21",
        "SN8",
        "AUH20",
        "ZRH20",
        "PUS20",
        "AdHoc",
        "CH1",
        "DSM05",
        "DUB07",
        "PNQ01",
        "SVG20",
        "OSA02",
        "OSA22",
        "PAR22",
        "BN7",
        "SN6",
        "BJS20",
        "BL24",
        "IDC5",
        "TYO23",
        "NTG20",
        "DXB23",
        "DSM11",
        "AMS25",
        "CPQ21",
        "OSA23"
      ],
      "x-ms-enum": {
        "name": "DataCenterCode",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "BY2",
            "value": "BY2"
          },
          {
            "name": "BY1",
            "value": "BY1"
          },
          {
            "name": "ORK70",
            "value": "ORK70"
          },
          {
            "name": "AM2",
            "value": "AM2"
          },
          {
            "name": "AMS20",
            "value": "AMS20"
          },
          {
            "name": "BY21",
            "value": "BY21"
          },
          {
            "name": "BY24",
            "value": "BY24"
          },
          {
            "name": "MWH01",
            "value": "MWH01"
          },
          {
            "name": "AMS06",
            "value": "AMS06"
          },
          {
            "name": "SSE90",
            "value": "SSE90"
          },
          {
            "name": "SYD03",
            "value": "SYD03"
          },
          {
            "name": "SYD23",
            "value": "SYD23"
          },
          {
            "name": "CBR20",
            "value": "CBR20"
          },
          {
            "name": "YTO20",
            "value": "YTO20"
          },
          {
            "name": "CWL20",
            "value": "CWL20"
          },
          {
            "name": "LON24",
            "value": "LON24"
          },
          {
            "name": "BOM01",
            "value": "BOM01"
          },
          {
            "name": "BL20",
            "value": "BL20"
          },
          {
            "name": "BL7",
            "value": "BL7"
          },
          {
            "name": "SEL20",
            "value": "SEL20"
          },
          {
            "name": "TYO01",
            "value": "TYO01"
          },
          {
            "name": "BN1",
            "value": "BN1"
          },
          {
            "name": "SN5",
            "value": "SN5"
          },
          {
            "name": "CYS04",
            "value": "CYS04"
          },
          {
            "name": "TYO22",
            "value": "TYO22"
          },
          {
            "name": "YTO21",
            "value": "YTO21"
          },
          {
            "name": "YQB20",
            "value": "YQB20"
          },
          {
            "name": "FRA22",
            "value": "FRA22"
          },
          {
            "name": "MAA01",
            "value": "MAA01"
          },
          {
            "name": "CPQ02",
            "value": "CPQ02"
          },
          {
            "name": "CPQ20",
            "value": "CPQ20"
          },
          {
            "name": "SIN20",
            "value": "SIN20"
          },
          {
            "name": "HKG20",
            "value": "HKG20"
          },
          {
            "name": "SG2",
            "value": "SG2"
          },
          {
            "name": "MEL23",
            "value": "MEL23"
          },
          {
            "name": "SEL21",
            "value": "SEL21"
          },
          {
            "name": "OSA20",
            "value": "OSA20"
          },
          {
            "name": "SHA03",
            "value": "SHA03"
          },
          {
            "name": "BJB",
            "value": "BJB"
          },
          {
            "name": "JNB22",
            "value": "JNB22"
          },
          {
            "name": "JNB21",
            "value": "JNB21"
          },
          {
            "name": "MNZ21",
            "value": "MNZ21"
          },
          {
            "name": "SN8",
            "value": "SN8"
          },
          {
            "name": "AUH20",
            "value": "AUH20"
          },
          {
            "name": "ZRH20",
            "value": "ZRH20"
          },
          {
            "name": "PUS20",
            "value": "PUS20"
          },
          {
            "name": "AdHoc",
            "value": "AdHoc"
          },
          {
            "name": "CH1",
            "value": "CH1"
          },
          {
            "name": "DSM05",
            "value": "DSM05"
          },
          {
            "name": "DUB07",
            "value": "DUB07"
          },
          {
            "name": "PNQ01",
            "value": "PNQ01"
          },
          {
            "name": "SVG20",
            "value": "SVG20"
          },
          {
            "name": "OSA02",
            "value": "OSA02"
          },
          {
            "name": "OSA22",
            "value": "OSA22"
          },
          {
            "name": "PAR22",
            "value": "PAR22"
          },
          {
            "name": "BN7",
            "value": "BN7"
          },
          {
            "name": "SN6",
            "value": "SN6"
          },
          {
            "name": "BJS20",
            "value": "BJS20"
          },
          {
            "name": "BL24",
            "value": "BL24"
          },
          {
            "name": "IDC5",
            "value": "IDC5"
          },
          {
            "name": "TYO23",
            "value": "TYO23"
          },
          {
            "name": "NTG20",
            "value": "NTG20"
          },
          {
            "name": "DXB23",
            "value": "DXB23"
          },
          {
            "name": "DSM11",
            "value": "DSM11"
          },
          {
            "name": "AMS25",
            "value": "AMS25"
          },
          {
            "name": "CPQ21",
            "value": "CPQ21"
          },
          {
            "name": "OSA23",
            "value": "OSA23"
          }
        ]
      }
    },
    "DataExportDetails": {
      "type": "object",
      "description": "Details of the data to be used for exporting data from azure.",
      "properties": {
        "transferConfiguration": {
          "description": "Configuration for the data transfer.",
          "type": "object",
          "properties": {
            "transferConfigurationType": {
              "description": "Type of the configuration for transfer.",
              "type": "string",
              "enum": [
                "TransferAll",
                "TransferUsingFilter"
              ],
              "x-ms-enum": {
                "name": "TransferConfigurationType",
                "modelAsString": false,
                "values": [
                  {
                    "name": "TransferAll",
                    "value": "TransferAll",
                    "description": "Transfer all the data."
                  },
                  {
                    "name": "TransferUsingFilter",
                    "value": "TransferUsingFilter",
                    "description": "Transfer using filter."
                  }
                ]
              }
            },
            "transferFilterDetails": {
              "description": "Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.",
              "type": "object",
              "properties": {
                "include": {
                  "description": "Details of the filtering the transfer of data.",
                  "type": "object",
                  "properties": {
                    "dataAccountType": {
                      "type": "string",
                      "description": "Type of the account of data.",
                      "default": "StorageAccount",
                      "enum": [
                        "StorageAccount",
                        "ManagedDisk"
                      ],
                      "x-ms-enum": {
                        "name": "DataAccountType",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "StorageAccount",
                            "value": "StorageAccount",
                            "description": "Storage Accounts ."
                          },
                          {
                            "name": "ManagedDisk",
                            "value": "ManagedDisk",
                            "description": "Azure Managed disk storage."
                          }
                        ]
                      }
                    },
                    "blobFilterDetails": {
                      "description": "Filter details to transfer blobs.",
                      "type": "object",
                      "properties": {
                        "blobPrefixList": {
                          "type": "array",
                          "description": "Prefix list of the Azure blobs to be transferred.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "blobPathList": {
                          "type": "array",
                          "description": "List of full path of the blobs to be transferred.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "containerList": {
                          "type": "array",
                          "description": "List of blob containers to be transferred.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "azureFileFilterDetails": {
                      "description": "Filter details to transfer Azure files.",
                      "type": "object",
                      "properties": {
                        "filePrefixList": {
                          "type": "array",
                          "description": "Prefix list of the Azure files to be transferred.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "filePathList": {
                          "type": "array",
                          "description": "List of full path of the files to be transferred.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "fileShareList": {
                          "type": "array",
                          "description": "List of file shares to be transferred.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "filterFileDetails": {
                      "type": "array",
                      "description": "Details of the filter files to be used for data transfer.",
                      "items": {
                        "type": "object",
                        "description": "Details of the filter files to be used for data transfer.",
                        "properties": {
                          "filterFileType": {
                            "description": "Type of the filter file.",
                            "type": "string",
                            "enum": [
                              "AzureBlob",
                              "AzureFile"
                            ],
                            "x-ms-enum": {
                              "name": "FilterFileType",
                              "modelAsString": false,
                              "values": [
                                {
                                  "name": "AzureBlob",
                                  "value": "AzureBlob",
                                  "description": "Filter file is of the type AzureBlob."
                                },
                                {
                                  "name": "AzureFile",
                                  "value": "AzureFile",
                                  "description": "Filter file is of the type AzureFiles."
                                }
                              ]
                            }
                          },
                          "filterFilePath": {
                            "type": "string",
                            "description": "Path of the file that contains the details of all items to transfer."
                          }
                        },
                        "required": [
                          "filterFileType",
                          "filterFilePath"
                        ]
                      }
                    }
                  },
                  "required": [
                    "dataAccountType"
                  ]
                }
              }
            },
            "transferAllDetails": {
              "description": "Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll",
              "type": "object",
              "properties": {
                "include": {
                  "description": "Details to transfer all data.",
                  "type": "object",
                  "properties": {
                    "dataAccountType": {
                      "type": "string",
                      "description": "Type of the account of data",
                      "default": "StorageAccount",
                      "enum": [
                        "StorageAccount",
                        "ManagedDisk"
                      ],
                      "x-ms-enum": {
                        "name": "DataAccountType",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "StorageAccount",
                            "value": "StorageAccount",
                            "description": "Storage Accounts ."
                          },
                          {
                            "name": "ManagedDisk",
                            "value": "ManagedDisk",
                            "description": "Azure Managed disk storage."
                          }
                        ]
                      }
                    },
                    "transferAllBlobs": {
                      "type": "boolean",
                      "description": "To indicate if all Azure blobs have to be transferred"
                    },
                    "transferAllFiles": {
                      "type": "boolean",
                      "description": "To indicate if all Azure Files have to be transferred"
                    }
                  },
                  "required": [
                    "dataAccountType"
                  ]
                }
              }
            }
          },
          "required": [
            "transferConfigurationType"
          ]
        },
        "logCollectionLevel": {
          "type": "string",
          "description": "Level of the logs to be collected.",
          "default": "Error",
          "enum": [
            "Error",
            "Verbose"
          ],
          "x-ms-enum": {
            "name": "LogCollectionLevel",
            "modelAsString": false,
            "values": [
              {
                "name": "Error",
                "value": "Error",
                "description": "Only Errors will be collected in the logs."
              },
              {
                "name": "Verbose",
                "value": "Verbose",
                "description": "Verbose logging (includes Errors, CRC, size information and others)."
              }
            ]
          }
        },
        "accountDetails": {
          "description": "Account details of the data to be transferred",
          "type": "object",
          "properties": {
            "dataAccountType": {
              "type": "string",
              "description": "Account Type of the data to be transferred.",
              "default": "StorageAccount",
              "enum": [
                "StorageAccount",
                "ManagedDisk"
              ],
              "x-ms-enum": {
                "name": "DataAccountType",
                "modelAsString": false,
                "values": [
                  {
                    "name": "StorageAccount",
                    "value": "StorageAccount",
                    "description": "Storage Accounts ."
                  },
                  {
                    "name": "ManagedDisk",
                    "value": "ManagedDisk",
                    "description": "Azure Managed disk storage."
                  }
                ]
              }
            },
            "sharePassword": {
              "type": "string",
              "format": "password",
              "description": "Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\\-$%^!+=;:_()]+",
              "x-ms-mutability": [
                "create"
              ],
              "x-ms-secret": true
            }
          },
          "discriminator": "dataAccountType",
          "required": [
            "dataAccountType"
          ]
        }
      },
      "required": [
        "transferConfiguration",
        "accountDetails"
      ]
    },
    "DataImportDetails": {
      "type": "object",
      "description": "Details of the data to be used for importing data to azure.",
      "properties": {
        "accountDetails": {
          "description": "Account details of the data to be transferred",
          "type": "object",
          "properties": {
            "dataAccountType": {
              "type": "string",
              "description": "Account Type of the data to be transferred.",
              "default": "StorageAccount",
              "enum": [
                "StorageAccount",
                "ManagedDisk"
              ],
              "x-ms-enum": {
                "name": "DataAccountType",
                "modelAsString": false,
                "values": [
                  {
                    "name": "StorageAccount",
                    "value": "StorageAccount",
                    "description": "Storage Accounts ."
                  },
                  {
                    "name": "ManagedDisk",
                    "value": "ManagedDisk",
                    "description": "Azure Managed disk storage."
                  }
                ]
              }
            },
            "sharePassword": {
              "type": "string",
              "format": "password",
              "description": "Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\\-$%^!+=;:_()]+",
              "x-ms-mutability": [
                "create"
              ],
              "x-ms-secret": true
            }
          },
          "discriminator": "dataAccountType",
          "required": [
            "dataAccountType"
          ]
        },
        "logCollectionLevel": {
          "type": "string",
          "description": "Level of the logs to be collected.",
          "default": "Error",
          "enum": [
            "Error",
            "Verbose"
          ],
          "x-ms-enum": {
            "name": "LogCollectionLevel",
            "modelAsString": false,
            "values": [
              {
                "name": "Error",
                "value": "Error",
                "description": "Only Errors will be collected in the logs."
              },
              {
                "name": "Verbose",
                "value": "Verbose",
                "description": "Verbose logging (includes Errors, CRC, size information and others)."
              }
            ]
          }
        }
      },
      "required": [
        "accountDetails"
      ]
    },
    "DataLocationToServiceLocationMap": {
      "type": "object",
      "description": "Map of data location to service location",
      "properties": {
        "dataLocation": {
          "type": "string",
          "description": "Location of the data.",
          "readOnly": true
        },
        "serviceLocation": {
          "type": "string",
          "description": "Location of the service.",
          "readOnly": true
        }
      }
    },
    "DataTransferDetailsValidationRequest": {
      "type": "object",
      "description": "Request to validate export and import data details.",
      "properties": {
        "dataExportDetails": {
          "type": "array",
          "description": "List of DataTransfer details to be used to export data from azure.",
          "items": {
            "type": "object",
            "description": "Details of the data to be used for exporting data from azure.",
            "properties": {
              "transferConfiguration": {
                "description": "Configuration for the data transfer.",
                "type": "object",
                "properties": {
                  "transferConfigurationType": {
                    "description": "Type of the configuration for transfer.",
                    "type": "string",
                    "enum": [
                      "TransferAll",
                      "TransferUsingFilter"
                    ],
                    "x-ms-enum": {
                      "name": "TransferConfigurationType",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "TransferAll",
                          "value": "TransferAll",
                          "description": "Transfer all the data."
                        },
                        {
                          "name": "TransferUsingFilter",
                          "value": "TransferUsingFilter",
                          "description": "Transfer using filter."
                        }
                      ]
                    }
                  },
                  "transferFilterDetails": {
                    "description": "Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.",
                    "type": "object",
                    "properties": {
                      "include": {
                        "description": "Details of the filtering the transfer of data.",
                        "type": "object",
                        "properties": {
                          "dataAccountType": {
                            "type": "string",
                            "description": "Type of the account of data.",
                            "default": "StorageAccount",
                            "enum": [
                              "StorageAccount",
                              "ManagedDisk"
                            ],
                            "x-ms-enum": {
                              "name": "DataAccountType",
                              "modelAsString": false,
                              "values": [
                                {
                                  "name": "StorageAccount",
                                  "value": "StorageAccount",
                                  "description": "Storage Accounts ."
                                },
                                {
                                  "name": "ManagedDisk",
                                  "value": "ManagedDisk",
                                  "description": "Azure Managed disk storage."
                                }
                              ]
                            }
                          },
                          "blobFilterDetails": {
                            "description": "Filter details to transfer blobs.",
                            "type": "object",
                            "properties": {
                              "blobPrefixList": {
                                "type": "array",
                                "description": "Prefix list of the Azure blobs to be transferred.",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "blobPathList": {
                                "type": "array",
                                "description": "List of full path of the blobs to be transferred.",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "containerList": {
                                "type": "array",
                                "description": "List of blob containers to be transferred.",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "azureFileFilterDetails": {
                            "description": "Filter details to transfer Azure files.",
                            "type": "object",
                            "properties": {
                              "filePrefixList": {
                                "type": "array",
                                "description": "Prefix list of the Azure files to be transferred.",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "filePathList": {
                                "type": "array",
                                "description": "List of full path of the files to be transferred.",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "fileShareList": {
                                "type": "array",
                                "description": "List of file shares to be transferred.",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "filterFileDetails": {
                            "type": "array",
                            "description": "Details of the filter files to be used for data transfer.",
                            "items": {
                              "type": "object",
                              "description": "Details of the filter files to be used for data transfer.",
                              "properties": {
                                "filterFileType": {
                                  "description": "Type of the filter file.",
                                  "type": "string",
                                  "enum": [
                                    "AzureBlob",
                                    "AzureFile"
                                  ],
                                  "x-ms-enum": {
                                    "name": "FilterFileType",
                                    "modelAsString": false,
                                    "values": [
                                      {
                                        "name": "AzureBlob",
                                        "value": "AzureBlob",
                                        "description": "Filter file is of the type AzureBlob."
                                      },
                                      {
                                        "name": "AzureFile",
                                        "value": "AzureFile",
                                        "description": "Filter file is of the type AzureFiles."
                                      }
                                    ]
                                  }
                                },
                                "filterFilePath": {
                                  "type": "string",
                                  "description": "Path of the file that contains the details of all items to transfer."
                                }
                              },
                              "required": [
                                "filterFileType",
                                "filterFilePath"
                              ]
                            }
                          }
                        },
                        "required": [
                          "dataAccountType"
                        ]
                      }
                    }
                  },
                  "transferAllDetails": {
                    "description": "Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll",
                    "type": "object",
                    "properties": {
                      "include": {
                        "description": "Details to transfer all data.",
                        "type": "object",
                        "properties": {
                          "dataAccountType": {
                            "type": "string",
                            "description": "Type of the account of data",
                            "default": "StorageAccount",
                            "enum": [
                              "StorageAccount",
                              "ManagedDisk"
                            ],
                            "x-ms-enum": {
                              "name": "DataAccountType",
                              "modelAsString": false,
                              "values": [
                                {
                                  "name": "StorageAccount",
                                  "value": "StorageAccount",
                                  "description": "Storage Accounts ."
                                },
                                {
                                  "name": "ManagedDisk",
                                  "value": "ManagedDisk",
                                  "description": "Azure Managed disk storage."
                                }
                              ]
                            }
                          },
                          "transferAllBlobs": {
                            "type": "boolean",
                            "description": "To indicate if all Azure blobs have to be transferred"
                          },
                          "transferAllFiles": {
                            "type": "boolean",
                            "description": "To indicate if all Azure Files have to be transferred"
                          }
                        },
                        "required": [
                          "dataAccountType"
                        ]
                      }
                    }
                  }
                },
                "required": [
                  "transferConfigurationType"
                ]
              },
              "logCollectionLevel": {
                "type": "string",
                "description": "Level of the logs to be collected.",
                "default": "Error",
                "enum": [
                  "Error",
                  "Verbose"
                ],
                "x-ms-enum": {
                  "name": "LogCollectionLevel",
                  "modelAsString": false,
                  "values": [
                    {
                      "name": "Error",
                      "value": "Error",
                      "description": "Only Errors will be collected in the logs."
                    },
                    {
                      "name": "Verbose",
                      "value": "Verbose",
                      "description": "Verbose logging (includes Errors, CRC, size information and others)."
                    }
                  ]
                }
              },
              "accountDetails": {
                "description": "Account details of the data to be transferred",
                "type": "object",
                "properties": {
                  "dataAccountType": {
                    "type": "string",
                    "description": "Account Type of the data to be transferred.",
                    "default": "StorageAccount",
                    "enum": [
                      "StorageAccount",
                      "ManagedDisk"
                    ],
                    "x-ms-enum": {
                      "name": "DataAccountType",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "StorageAccount",
                          "value": "StorageAccount",
                          "description": "Storage Accounts ."
                        },
                        {
                          "name": "ManagedDisk",
                          "value": "ManagedDisk",
                          "description": "Azure Managed disk storage."
                        }
                      ]
                    }
                  },
                  "sharePassword": {
                    "type": "string",
                    "format": "password",
                    "description": "Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\\-$%^!+=;:_()]+",
                    "x-ms-mutability": [
                      "create"
                    ],
                    "x-ms-secret": true
                  }
                },
                "discriminator": "dataAccountType",
                "required": [
                  "dataAccountType"
                ]
              }
            },
            "required": [
              "transferConfiguration",
              "accountDetails"
            ]
          }
        },
        "dataImportDetails": {
          "type": "array",
          "description": "List of DataTransfer details to be used to import data to azure.",
          "items": {
            "type": "object",
            "description": "Details of the data to be used for importing data to azure.",
            "properties": {
              "accountDetails": {
                "description": "Account details of the data to be transferred",
                "type": "object",
                "properties": {
                  "dataAccountType": {
                    "type": "string",
                    "description": "Account Type of the data to be transferred.",
                    "default": "StorageAccount",
                    "enum": [
                      "StorageAccount",
                      "ManagedDisk"
                    ],
                    "x-ms-enum": {
                      "name": "DataAccountType",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "StorageAccount",
                          "value": "StorageAccount",
                          "description": "Storage Accounts ."
                        },
                        {
                          "name": "ManagedDisk",
                          "value": "ManagedDisk",
                          "description": "Azure Managed disk storage."
                        }
                      ]
                    }
                  },
                  "sharePassword": {
                    "type": "string",
                    "format": "password",
                    "description": "Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\\-$%^!+=;:_()]+",
                    "x-ms-mutability": [
                      "create"
                    ],
                    "x-ms-secret": true
                  }
                },
                "discriminator": "dataAccountType",
                "required": [
                  "dataAccountType"
                ]
              },
              "logCollectionLevel": {
                "type": "string",
                "description": "Level of the logs to be collected.",
                "default": "Error",
                "enum": [
                  "Error",
                  "Verbose"
                ],
                "x-ms-enum": {
                  "name": "LogCollectionLevel",
                  "modelAsString": false,
                  "values": [
                    {
                      "name": "Error",
                      "value": "Error",
                      "description": "Only Errors will be collected in the logs."
                    },
                    {
                      "name": "Verbose",
                      "value": "Verbose",
                      "description": "Verbose logging (includes Errors, CRC, size information and others)."
                    }
                  ]
                }
              }
            },
            "required": [
              "accountDetails"
            ]
          }
        },
        "deviceType": {
          "type": "string",
          "description": "SKU names.",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy",
            "DataBoxCustomerDisk"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": false,
            "values": [
              {
                "name": "DataBox",
                "value": "DataBox",
                "description": "Data Box."
              },
              {
                "name": "DataBoxDisk",
                "value": "DataBoxDisk",
                "description": "Data Box Disk."
              },
              {
                "name": "DataBoxHeavy",
                "value": "DataBoxHeavy",
                "description": "Data Box Heavy."
              },
              {
                "name": "DataBoxCustomerDisk",
                "value": "DataBoxCustomerDisk",
                "description": "Data Box Customer Disk"
              }
            ]
          }
        },
        "transferType": {
          "description": "Type of the transfer.",
          "type": "string",
          "enum": [
            "ImportToAzure",
            "ExportFromAzure"
          ],
          "x-ms-enum": {
            "name": "TransferType",
            "modelAsString": false,
            "values": [
              {
                "name": "ImportToAzure",
                "value": "ImportToAzure",
                "description": "Import data to azure."
              },
              {
                "name": "ExportFromAzure",
                "value": "ExportFromAzure",
                "description": "Export data from azure."
              }
            ]
          }
        },
        "model": {
          "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
          "type": "string",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy",
            "DataBoxCustomerDisk",
            "AzureDataBox120",
            "AzureDataBox525"
          ],
          "x-ms-enum": {
            "name": "ModelName",
            "modelAsString": false,
            "values": [
              {
                "name": "DataBox",
                "value": "DataBox",
                "description": "Data Box."
              },
              {
                "name": "DataBoxDisk",
                "value": "DataBoxDisk",
                "description": "Data Box Disk."
              },
              {
                "name": "DataBoxHeavy",
                "value": "DataBoxHeavy",
                "description": "Data Box Heavy."
              },
              {
                "name": "DataBoxCustomerDisk",
                "value": "DataBoxCustomerDisk",
                "description": "Data Box Customer Disk"
              },
              {
                "name": "AzureDataBox120",
                "value": "AzureDataBox120",
                "description": "Data Box V2 with 120TB usable capacity."
              },
              {
                "name": "AzureDataBox525",
                "value": "AzureDataBox525",
                "description": "Data Box V2 with 525TB usable capacity."
              }
            ]
          }
        }
      },
      "required": [
        "deviceType",
        "transferType"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Minimum fields that must be present in any type of validation request.",
          "properties": {
            "validationType": {
              "description": "Identifies the type of validation request.",
              "type": "string",
              "enum": [
                "ValidateAddress",
                "ValidateSubscriptionIsAllowedToCreateJob",
                "ValidatePreferences",
                "ValidateCreateOrderLimit",
                "ValidateSkuAvailability",
                "ValidateDataTransferDetails"
              ],
              "x-ms-enum": {
                "name": "ValidationInputDiscriminator",
                "modelAsString": false,
                "values": [
                  {
                    "name": "ValidateAddress",
                    "value": "ValidateAddress",
                    "description": "Identify request and response of address validation."
                  },
                  {
                    "name": "ValidateSubscriptionIsAllowedToCreateJob",
                    "value": "ValidateSubscriptionIsAllowedToCreateJob",
                    "description": "Identify request and response for validation of subscription permission to create job."
                  },
                  {
                    "name": "ValidatePreferences",
                    "value": "ValidatePreferences",
                    "description": "Identify request and response of preference validation."
                  },
                  {
                    "name": "ValidateCreateOrderLimit",
                    "value": "ValidateCreateOrderLimit",
                    "description": "Identify request and response of create order limit for subscription validation."
                  },
                  {
                    "name": "ValidateSkuAvailability",
                    "value": "ValidateSkuAvailability",
                    "description": "Identify request and response of active job limit for sku availability."
                  },
                  {
                    "name": "ValidateDataTransferDetails",
                    "value": "ValidateDataTransferDetails",
                    "description": "Identify request and response of data transfer details validation."
                  }
                ]
              }
            }
          },
          "discriminator": "validationType",
          "required": [
            "validationType"
          ]
        }
      ],
      "x-ms-discriminator-value": "ValidateDataTransferDetails"
    },
    "DataTransferDetailsValidationResponseProperties": {
      "type": "object",
      "description": "Properties of data transfer details validation response.",
      "properties": {
        "status": {
          "description": "Data transfer details validation status.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Valid",
            "Invalid",
            "Skipped"
          ],
          "x-ms-enum": {
            "name": "ValidationStatus",
            "modelAsString": false,
            "values": [
              {
                "name": "Valid",
                "value": "Valid",
                "description": "Validation is successful"
              },
              {
                "name": "Invalid",
                "value": "Invalid",
                "description": "Validation is not successful"
              },
              {
                "name": "Skipped",
                "value": "Skipped",
                "description": "Validation is skipped"
              }
            ]
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ValidationInputResponse"
        }
      ],
      "x-ms-discriminator-value": "ValidateDataTransferDetails"
    },
    "DataboxJobSecrets": {
      "type": "object",
      "description": "The secrets related to a databox job.",
      "properties": {
        "podSecrets": {
          "type": "array",
          "description": "Contains the list of secret objects for a job.",
          "items": {
            "type": "object",
            "description": "The secrets related to a DataBox.",
            "properties": {
              "deviceSerialNumber": {
                "type": "string",
                "description": "Serial number of the assigned device.",
                "readOnly": true
              },
              "devicePassword": {
                "type": "string",
                "description": "Password for out of the box experience on device.",
                "readOnly": true
              },
              "networkConfigurations": {
                "type": "array",
                "description": "Network configuration of the appliance.",
                "items": {
                  "type": "object",
                  "description": "The Network Adapter configuration of a DataBox.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the network.",
                      "readOnly": true
                    },
                    "macAddress": {
                      "type": "string",
                      "description": "Mac Address.",
                      "readOnly": true
                    }
                  }
                },
                "readOnly": true
              },
              "encodedValidationCertPubKey": {
                "type": "string",
                "description": "The base 64 encoded public key to authenticate with the device",
                "readOnly": true
              },
              "accountCredentialDetails": {
                "type": "array",
                "description": "Per account level access credentials.",
                "items": {
                  "type": "object",
                  "description": "Credential details of the account.",
                  "properties": {
                    "accountName": {
                      "type": "string",
                      "description": "Name of the account.",
                      "readOnly": true
                    },
                    "dataAccountType": {
                      "description": "Type of the account.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "StorageAccount",
                        "ManagedDisk"
                      ],
                      "x-ms-enum": {
                        "name": "DataAccountType",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "StorageAccount",
                            "value": "StorageAccount",
                            "description": "Storage Accounts ."
                          },
                          {
                            "name": "ManagedDisk",
                            "value": "ManagedDisk",
                            "description": "Azure Managed disk storage."
                          }
                        ]
                      }
                    },
                    "accountConnectionString": {
                      "type": "string",
                      "description": "Connection string of the account endpoint to use the account as a storage endpoint on the device.",
                      "readOnly": true
                    },
                    "shareCredentialDetails": {
                      "type": "array",
                      "description": "Per share level unencrypted access credentials.",
                      "items": {
                        "type": "object",
                        "description": "Credential details of the shares in account.",
                        "properties": {
                          "shareName": {
                            "type": "string",
                            "description": "Name of the share.",
                            "readOnly": true
                          },
                          "shareType": {
                            "description": "Type of the share.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "UnknownType",
                              "HCS",
                              "BlockBlob",
                              "PageBlob",
                              "AzureFile",
                              "ManagedDisk"
                            ],
                            "x-ms-enum": {
                              "name": "ShareDestinationFormatType",
                              "modelAsString": false,
                              "values": [
                                {
                                  "name": "UnknownType",
                                  "value": "UnknownType",
                                  "description": "Unknown format."
                                },
                                {
                                  "name": "HCS",
                                  "value": "HCS",
                                  "description": "Storsimple data format."
                                },
                                {
                                  "name": "BlockBlob",
                                  "value": "BlockBlob",
                                  "description": "Azure storage block blob format."
                                },
                                {
                                  "name": "PageBlob",
                                  "value": "PageBlob",
                                  "description": "Azure storage page blob format."
                                },
                                {
                                  "name": "AzureFile",
                                  "value": "AzureFile",
                                  "description": "Azure storage file format."
                                },
                                {
                                  "name": "ManagedDisk",
                                  "value": "ManagedDisk",
                                  "description": "Azure Compute Disk."
                                }
                              ]
                            }
                          },
                          "userName": {
                            "type": "string",
                            "description": "User name for the share.",
                            "readOnly": true
                          },
                          "password": {
                            "type": "string",
                            "description": "Password for the share.",
                            "readOnly": true
                          },
                          "supportedAccessProtocols": {
                            "type": "array",
                            "description": "Access protocols supported on the device.",
                            "items": {
                              "type": "string",
                              "description": "Access protocols supported on the device.",
                              "enum": [
                                "SMB",
                                "NFS"
                              ],
                              "x-ms-enum": {
                                "name": "AccessProtocol",
                                "modelAsString": false,
                                "values": [
                                  {
                                    "name": "SMB",
                                    "value": "SMB",
                                    "description": "Server Message Block protocol(SMB)."
                                  },
                                  {
                                    "name": "NFS",
                                    "value": "NFS",
                                    "description": "Network File System protocol(NFS)."
                                  }
                                ]
                              }
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    }
                  }
                },
                "readOnly": true
              }
            }
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/JobSecrets"
        }
      ],
      "x-ms-discriminator-value": "DataBox"
    },
    "DatacenterAddressInstructionResponse": {
      "type": "object",
      "description": "Datacenter instruction for given storage location.",
      "properties": {
        "communicationInstruction": {
          "type": "string",
          "description": "Data center communication instruction",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Datacenter address for given storage location.",
          "properties": {
            "datacenterAddressType": {
              "description": "Data center address type",
              "type": "string",
              "enum": [
                "DatacenterAddressLocation",
                "DatacenterAddressInstruction"
              ],
              "x-ms-enum": {
                "name": "DatacenterAddressType",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DatacenterAddressLocation",
                    "value": "DatacenterAddressLocation",
                    "description": "Data center address location."
                  },
                  {
                    "name": "DatacenterAddressInstruction",
                    "value": "DatacenterAddressInstruction",
                    "description": "Data center address instruction."
                  }
                ]
              }
            },
            "supportedCarriersForReturnShipment": {
              "type": "array",
              "description": "List of supported carriers for return shipment.",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "dataCenterAzureLocation": {
              "type": "string",
              "description": "Azure Location where the Data Center serves primarily.",
              "readOnly": true
            }
          },
          "discriminator": "datacenterAddressType",
          "required": [
            "datacenterAddressType"
          ]
        }
      ],
      "x-ms-discriminator-value": "DatacenterAddressInstruction"
    },
    "DatacenterAddressLocationResponse": {
      "type": "object",
      "description": "Datacenter address for given storage location.",
      "properties": {
        "contactPersonName": {
          "type": "string",
          "description": "Contact person name",
          "readOnly": true
        },
        "company": {
          "type": "string",
          "description": "Company name",
          "readOnly": true
        },
        "street1": {
          "type": "string",
          "description": "Street address line 1",
          "readOnly": true
        },
        "street2": {
          "type": "string",
          "description": "Street address line 2",
          "readOnly": true
        },
        "street3": {
          "type": "string",
          "description": "Street address line 3",
          "readOnly": true
        },
        "city": {
          "type": "string",
          "description": "City name",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "description": "name of the state",
          "readOnly": true
        },
        "zip": {
          "type": "string",
          "description": "Zip code",
          "readOnly": true
        },
        "country": {
          "type": "string",
          "description": "name of the country",
          "readOnly": true
        },
        "phone": {
          "type": "string",
          "description": "Phone number",
          "readOnly": true
        },
        "phoneExtension": {
          "type": "string",
          "description": "Phone extension",
          "readOnly": true
        },
        "addressType": {
          "type": "string",
          "description": "Address type",
          "readOnly": true
        },
        "additionalShippingInformation": {
          "type": "string",
          "description": "Special instruction for shipping",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Datacenter address for given storage location.",
          "properties": {
            "datacenterAddressType": {
              "description": "Data center address type",
              "type": "string",
              "enum": [
                "DatacenterAddressLocation",
                "DatacenterAddressInstruction"
              ],
              "x-ms-enum": {
                "name": "DatacenterAddressType",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DatacenterAddressLocation",
                    "value": "DatacenterAddressLocation",
                    "description": "Data center address location."
                  },
                  {
                    "name": "DatacenterAddressInstruction",
                    "value": "DatacenterAddressInstruction",
                    "description": "Data center address instruction."
                  }
                ]
              }
            },
            "supportedCarriersForReturnShipment": {
              "type": "array",
              "description": "List of supported carriers for return shipment.",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "dataCenterAzureLocation": {
              "type": "string",
              "description": "Azure Location where the Data Center serves primarily.",
              "readOnly": true
            }
          },
          "discriminator": "datacenterAddressType",
          "required": [
            "datacenterAddressType"
          ]
        }
      ],
      "x-ms-discriminator-value": "DatacenterAddressLocation"
    },
    "DatacenterAddressRequest": {
      "type": "object",
      "description": "Request body to get the datacenter address.",
      "properties": {
        "storageLocation": {
          "type": "string",
          "description": "Storage location. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01"
        },
        "skuName": {
          "description": "Sku Name for which the data center address requested.",
          "type": "string",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy",
            "DataBoxCustomerDisk"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": false,
            "values": [
              {
                "name": "DataBox",
                "value": "DataBox",
                "description": "Data Box."
              },
              {
                "name": "DataBoxDisk",
                "value": "DataBoxDisk",
                "description": "Data Box Disk."
              },
              {
                "name": "DataBoxHeavy",
                "value": "DataBoxHeavy",
                "description": "Data Box Heavy."
              },
              {
                "name": "DataBoxCustomerDisk",
                "value": "DataBoxCustomerDisk",
                "description": "Data Box Customer Disk"
              }
            ]
          }
        },
        "model": {
          "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
          "type": "string",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy",
            "DataBoxCustomerDisk",
            "AzureDataBox120",
            "AzureDataBox525"
          ],
          "x-ms-enum": {
            "name": "ModelName",
            "modelAsString": false,
            "values": [
              {
                "name": "DataBox",
                "value": "DataBox",
                "description": "Data Box."
              },
              {
                "name": "DataBoxDisk",
                "value": "DataBoxDisk",
                "description": "Data Box Disk."
              },
              {
                "name": "DataBoxHeavy",
                "value": "DataBoxHeavy",
                "description": "Data Box Heavy."
              },
              {
                "name": "DataBoxCustomerDisk",
                "value": "DataBoxCustomerDisk",
                "description": "Data Box Customer Disk"
              },
              {
                "name": "AzureDataBox120",
                "value": "AzureDataBox120",
                "description": "Data Box V2 with 120TB usable capacity."
              },
              {
                "name": "AzureDataBox525",
                "value": "AzureDataBox525",
                "description": "Data Box V2 with 525TB usable capacity."
              }
            ]
          }
        }
      },
      "required": [
        "storageLocation",
        "skuName"
      ]
    },
    "DatacenterAddressResponse": {
      "type": "object",
      "description": "Datacenter address for given storage location.",
      "properties": {
        "datacenterAddressType": {
          "description": "Data center address type",
          "type": "string",
          "enum": [
            "DatacenterAddressLocation",
            "DatacenterAddressInstruction"
          ],
          "x-ms-enum": {
            "name": "DatacenterAddressType",
            "modelAsString": false,
            "values": [
              {
                "name": "DatacenterAddressLocation",
                "value": "DatacenterAddressLocation",
                "description": "Data center address location."
              },
              {
                "name": "DatacenterAddressInstruction",
                "value": "DatacenterAddressInstruction",
                "description": "Data center address instruction."
              }
            ]
          }
        },
        "supportedCarriersForReturnShipment": {
          "type": "array",
          "description": "List of supported carriers for return shipment.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "dataCenterAzureLocation": {
          "type": "string",
          "description": "Azure Location where the Data Center serves primarily.",
          "readOnly": true
        }
      },
      "discriminator": "datacenterAddressType",
      "required": [
        "datacenterAddressType"
      ]
    },
    "DatacenterAddressType": {
      "type": "string",
      "description": "Data center address type",
      "enum": [
        "DatacenterAddressLocation",
        "DatacenterAddressInstruction"
      ],
      "x-ms-enum": {
        "name": "DatacenterAddressType",
        "modelAsString": false,
        "values": [
          {
            "name": "DatacenterAddressLocation",
            "value": "DatacenterAddressLocation",
            "description": "Data center address location."
          },
          {
            "name": "DatacenterAddressInstruction",
            "value": "DatacenterAddressInstruction",
            "description": "Data center address instruction."
          }
        ]
      }
    },
    "DcAccessSecurityCode": {
      "type": "object",
      "description": "Dc access security code",
      "properties": {
        "reverseDCAccessCode": {
          "type": "string",
          "description": "Reverse Dc access security code."
        },
        "forwardDCAccessCode": {
          "type": "string",
          "description": "Forward Dc access security code."
        }
      }
    },
    "DelayNotificationStatus": {
      "type": "string",
      "description": "Status of notification",
      "enum": [
        "Active",
        "Resolved"
      ],
      "x-ms-enum": {
        "name": "DelayNotificationStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Active",
            "value": "Active",
            "description": "Delay is still active"
          },
          {
            "name": "Resolved",
            "value": "Resolved",
            "description": "Delay has been resolved"
          }
        ]
      }
    },
    "Details": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code."
        },
        "message": {
          "type": "string",
          "description": "Error message."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "DeviceCapabilityDetails": {
      "type": "object",
      "description": "Device capability details for a given sku for a given region.",
      "properties": {
        "hardwareEncryption": {
          "description": "Hardware encryption support for a given sku for a given region.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "HardwareEncryption",
            "modelAsString": false,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Hardware-based encryption is enabled."
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Hardware-based encryption is disabled."
              }
            ]
          }
        }
      }
    },
    "DeviceCapabilityRequest": {
      "type": "object",
      "description": "Request body to get the device capabilities for given sku.",
      "properties": {
        "skuName": {
          "description": "Type of the device.",
          "type": "string",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy",
            "DataBoxCustomerDisk"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": false,
            "values": [
              {
                "name": "DataBox",
                "value": "DataBox",
                "description": "Data Box."
              },
              {
                "name": "DataBoxDisk",
                "value": "DataBoxDisk",
                "description": "Data Box Disk."
              },
              {
                "name": "DataBoxHeavy",
                "value": "DataBoxHeavy",
                "description": "Data Box Heavy."
              },
              {
                "name": "DataBoxCustomerDisk",
                "value": "DataBoxCustomerDisk",
                "description": "Data Box Customer Disk"
              }
            ]
          }
        },
        "model": {
          "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
          "type": "string",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy",
            "DataBoxCustomerDisk",
            "AzureDataBox120",
            "AzureDataBox525"
          ],
          "x-ms-enum": {
            "name": "ModelName",
            "modelAsString": false,
            "values": [
              {
                "name": "DataBox",
                "value": "DataBox",
                "description": "Data Box."
              },
              {
                "name": "DataBoxDisk",
                "value": "DataBoxDisk",
                "description": "Data Box Disk."
              },
              {
                "name": "DataBoxHeavy",
                "value": "DataBoxHeavy",
                "description": "Data Box Heavy."
              },
              {
                "name": "DataBoxCustomerDisk",
                "value": "DataBoxCustomerDisk",
                "description": "Data Box Customer Disk"
              },
              {
                "name": "AzureDataBox120",
                "value": "AzureDataBox120",
                "description": "Data Box V2 with 120TB usable capacity."
              },
              {
                "name": "AzureDataBox525",
                "value": "AzureDataBox525",
                "description": "Data Box V2 with 525TB usable capacity."
              }
            ]
          }
        }
      }
    },
    "DeviceCapabilityResponse": {
      "type": "object",
      "description": "Device capabilities for given sku in a region",
      "properties": {
        "deviceCapabilityDetails": {
          "type": "array",
          "description": "List of device capabilities available for a given region and a given sku",
          "items": {
            "type": "object",
            "description": "Device capability details for a given sku for a given region.",
            "properties": {
              "hardwareEncryption": {
                "description": "Hardware encryption support for a given sku for a given region.",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "Enabled",
                  "Disabled"
                ],
                "x-ms-enum": {
                  "name": "HardwareEncryption",
                  "modelAsString": false,
                  "values": [
                    {
                      "name": "Enabled",
                      "value": "Enabled",
                      "description": "Hardware-based encryption is enabled."
                    },
                    {
                      "name": "Disabled",
                      "value": "Disabled",
                      "description": "Hardware-based encryption is disabled."
                    }
                  ]
                }
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "DeviceErasureDetails": {
      "type": "object",
      "description": "Device erasure details with erasure completion status, secure erasure sas key and erasureordestructionlog sas key",
      "properties": {
        "deviceErasureStatus": {
          "description": "Holds the device erasure completion status",
          "readOnly": true,
          "type": "string",
          "enum": [
            "None",
            "InProgress",
            "Succeeded",
            "Failed",
            "Cancelled",
            "Cancelling",
            "SucceededWithErrors",
            "WaitingForCustomerAction",
            "SucceededWithWarnings",
            "WaitingForCustomerActionForKek",
            "WaitingForCustomerActionForCleanUp",
            "CustomerActionPerformedForCleanUp",
            "CustomerActionPerformed"
          ],
          "x-ms-enum": {
            "name": "StageStatus",
            "modelAsString": false,
            "values": [
              {
                "name": "None",
                "value": "None",
                "description": "No status available yet."
              },
              {
                "name": "InProgress",
                "value": "InProgress",
                "description": "Stage is in progress."
              },
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Stage has succeeded."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Stage has failed."
              },
              {
                "name": "Cancelled",
                "value": "Cancelled",
                "description": "Stage has been cancelled."
              },
              {
                "name": "Cancelling",
                "value": "Cancelling",
                "description": "Stage is cancelling."
              },
              {
                "name": "SucceededWithErrors",
                "value": "SucceededWithErrors",
                "description": "Stage has succeeded with errors."
              },
              {
                "name": "WaitingForCustomerAction",
                "value": "WaitingForCustomerAction",
                "description": "Stage is stuck until customer takes some action."
              },
              {
                "name": "SucceededWithWarnings",
                "value": "SucceededWithWarnings",
                "description": "Stage has succeeded with warnings."
              },
              {
                "name": "WaitingForCustomerActionForKek",
                "value": "WaitingForCustomerActionForKek",
                "description": "Stage is waiting for customer action for kek action items."
              },
              {
                "name": "WaitingForCustomerActionForCleanUp",
                "value": "WaitingForCustomerActionForCleanUp",
                "description": "Stage is waiting for customer action for clean up."
              },
              {
                "name": "CustomerActionPerformedForCleanUp",
                "value": "CustomerActionPerformedForCleanUp",
                "description": "Stage has performed customer action for clean up."
              },
              {
                "name": "CustomerActionPerformed",
                "value": "CustomerActionPerformed",
                "description": "Stage has performed customer action for clean up."
              }
            ]
          }
        },
        "erasureOrDestructionCertificateSasKey": {
          "type": "string",
          "description": "Shared access key to download cleanup or destruction certificate for device",
          "readOnly": true
        },
        "secureErasureCertificateSasKey": {
          "type": "string",
          "description": "Shared access key to download secure erasure certificate for the device",
          "readOnly": true
        }
      }
    },
    "DiskScheduleAvailabilityRequest": {
      "type": "object",
      "description": "Request body to get the availability for scheduling disk orders.",
      "properties": {
        "expectedDataSizeInTeraBytes": {
          "type": "integer",
          "format": "int32",
          "description": "The expected size of the data, which needs to be transferred in this job, in terabytes."
        }
      },
      "required": [
        "expectedDataSizeInTeraBytes"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Request body to get the availability for scheduling orders.",
          "properties": {
            "storageLocation": {
              "type": "string",
              "description": "Location for data transfer. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01"
            },
            "skuName": {
              "description": "Sku Name for which the order is to be scheduled.",
              "type": "string",
              "enum": [
                "DataBox",
                "DataBoxDisk",
                "DataBoxHeavy",
                "DataBoxCustomerDisk"
              ],
              "x-ms-enum": {
                "name": "SkuName",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DataBox",
                    "value": "DataBox",
                    "description": "Data Box."
                  },
                  {
                    "name": "DataBoxDisk",
                    "value": "DataBoxDisk",
                    "description": "Data Box Disk."
                  },
                  {
                    "name": "DataBoxHeavy",
                    "value": "DataBoxHeavy",
                    "description": "Data Box Heavy."
                  },
                  {
                    "name": "DataBoxCustomerDisk",
                    "value": "DataBoxCustomerDisk",
                    "description": "Data Box Customer Disk"
                  }
                ]
              }
            },
            "country": {
              "type": "string",
              "description": "Country in which storage location should be supported."
            },
            "model": {
              "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
              "type": "string",
              "enum": [
                "DataBox",
                "DataBoxDisk",
                "DataBoxHeavy",
                "DataBoxCustomerDisk",
                "AzureDataBox120",
                "AzureDataBox525"
              ],
              "x-ms-enum": {
                "name": "ModelName",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DataBox",
                    "value": "DataBox",
                    "description": "Data Box."
                  },
                  {
                    "name": "DataBoxDisk",
                    "value": "DataBoxDisk",
                    "description": "Data Box Disk."
                  },
                  {
                    "name": "DataBoxHeavy",
                    "value": "DataBoxHeavy",
                    "description": "Data Box Heavy."
                  },
                  {
                    "name": "DataBoxCustomerDisk",
                    "value": "DataBoxCustomerDisk",
                    "description": "Data Box Customer Disk"
                  },
                  {
                    "name": "AzureDataBox120",
                    "value": "AzureDataBox120",
                    "description": "Data Box V2 with 120TB usable capacity."
                  },
                  {
                    "name": "AzureDataBox525",
                    "value": "AzureDataBox525",
                    "description": "Data Box V2 with 525TB usable capacity."
                  }
                ]
              }
            }
          },
          "discriminator": "skuName",
          "required": [
            "storageLocation",
            "skuName"
          ]
        }
      ],
      "x-ms-discriminator-value": "DataBoxDisk"
    },
    "DiskSecret": {
      "type": "object",
      "description": "Contains all the secrets of a Disk.",
      "properties": {
        "diskSerialNumber": {
          "type": "string",
          "description": "Serial number of the assigned disk.",
          "readOnly": true
        },
        "bitLockerKey": {
          "type": "string",
          "description": "Bit Locker key of the disk which can be used to unlock the disk to copy data.",
          "readOnly": true
        }
      }
    },
    "DoubleEncryption": {
      "type": "string",
      "description": "Defines secondary layer of software-based encryption enablement.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "DoubleEncryption",
        "modelAsString": false,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Software-based encryption is enabled."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Software-based encryption is disabled."
          }
        ]
      }
    },
    "EncryptionPreferences": {
      "type": "object",
      "description": "Preferences related to the Encryption.",
      "properties": {
        "doubleEncryption": {
          "type": "string",
          "description": "Defines secondary layer of software-based encryption enablement.",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "DoubleEncryption",
            "modelAsString": false,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Software-based encryption is enabled."
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Software-based encryption is disabled."
              }
            ]
          }
        },
        "hardwareEncryption": {
          "description": "Defines Hardware level encryption (Only for disk)",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "HardwareEncryption",
            "modelAsString": false,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Hardware-based encryption is enabled."
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Hardware-based encryption is disabled."
              }
            ]
          }
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code."
        },
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "details": {
          "type": "array",
          "description": "Error target.",
          "items": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Error code."
              },
              "message": {
                "type": "string",
                "description": "Error message."
              }
            },
            "required": [
              "code",
              "message"
            ]
          }
        },
        "target": {
          "type": "string",
          "description": "Additional error info."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "ExportDiskDetails": {
      "type": "object",
      "description": "Export disk details",
      "properties": {
        "manifestFile": {
          "type": "string",
          "description": "The relative path of the manifest file on the disk.",
          "readOnly": true
        },
        "manifestHash": {
          "type": "string",
          "description": "The Base16-encoded MD5 hash of the manifest file on the disk.",
          "readOnly": true
        },
        "backupManifestCloudPath": {
          "type": "string",
          "description": "Path to backed up manifest, only returned if enableManifestBackup is true.",
          "readOnly": true
        }
      }
    },
    "FilterFileDetails": {
      "type": "object",
      "description": "Details of the filter files to be used for data transfer.",
      "properties": {
        "filterFileType": {
          "description": "Type of the filter file.",
          "type": "string",
          "enum": [
            "AzureBlob",
            "AzureFile"
          ],
          "x-ms-enum": {
            "name": "FilterFileType",
            "modelAsString": false,
            "values": [
              {
                "name": "AzureBlob",
                "value": "AzureBlob",
                "description": "Filter file is of the type AzureBlob."
              },
              {
                "name": "AzureFile",
                "value": "AzureFile",
                "description": "Filter file is of the type AzureFiles."
              }
            ]
          }
        },
        "filterFilePath": {
          "type": "string",
          "description": "Path of the file that contains the details of all items to transfer."
        }
      },
      "required": [
        "filterFileType",
        "filterFilePath"
      ]
    },
    "FilterFileType": {
      "type": "string",
      "description": "Type of the filter file.",
      "enum": [
        "AzureBlob",
        "AzureFile"
      ],
      "x-ms-enum": {
        "name": "FilterFileType",
        "modelAsString": false,
        "values": [
          {
            "name": "AzureBlob",
            "value": "AzureBlob",
            "description": "Filter file is of the type AzureBlob."
          },
          {
            "name": "AzureFile",
            "value": "AzureFile",
            "description": "Filter file is of the type AzureFiles."
          }
        ]
      }
    },
    "GranularCopyLogDetails": {
      "type": "object",
      "description": "Granular Details for log generated during copy.",
      "properties": {
        "copyLogDetailsType": {
          "description": "Indicates the type of job details.",
          "type": "string",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy",
            "DataBoxCustomerDisk"
          ],
          "x-ms-enum": {
            "name": "ClassDiscriminator",
            "modelAsString": false,
            "values": [
              {
                "name": "DataBox",
                "value": "DataBox",
                "description": "Data Box orders."
              },
              {
                "name": "DataBoxDisk",
                "value": "DataBoxDisk",
                "description": "Data Box Disk orders."
              },
              {
                "name": "DataBoxHeavy",
                "value": "DataBoxHeavy",
                "description": "Data Box Heavy orders."
              },
              {
                "name": "DataBoxCustomerDisk",
                "value": "DataBoxCustomerDisk",
                "description": "Data Box Customer Disk orders."
              }
            ]
          }
        }
      },
      "discriminator": "copyLogDetailsType",
      "required": [
        "copyLogDetailsType"
      ]
    },
    "GranularCopyProgress": {
      "type": "object",
      "description": "Granular Copy progress.",
      "properties": {
        "storageAccountName": {
          "type": "string",
          "description": "Name of the storage account. This will be empty for data account types other than storage account.",
          "readOnly": true
        },
        "transferType": {
          "description": "Transfer type of data",
          "readOnly": true,
          "type": "string",
          "enum": [
            "ImportToAzure",
            "ExportFromAzure"
          ],
          "x-ms-enum": {
            "name": "TransferType",
            "modelAsString": false,
            "values": [
              {
                "name": "ImportToAzure",
                "value": "ImportToAzure",
                "description": "Import data to azure."
              },
              {
                "name": "ExportFromAzure",
                "value": "ExportFromAzure",
                "description": "Export data from azure."
              }
            ]
          }
        },
        "dataAccountType": {
          "description": "Data Account Type.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "StorageAccount",
            "ManagedDisk"
          ],
          "x-ms-enum": {
            "name": "DataAccountType",
            "modelAsString": false,
            "values": [
              {
                "name": "StorageAccount",
                "value": "StorageAccount",
                "description": "Storage Accounts ."
              },
              {
                "name": "ManagedDisk",
                "value": "ManagedDisk",
                "description": "Azure Managed disk storage."
              }
            ]
          }
        },
        "accountId": {
          "type": "string",
          "description": "Id of the account where the data needs to be uploaded.",
          "readOnly": true
        },
        "bytesProcessed": {
          "type": "integer",
          "format": "int64",
          "description": "To indicate bytes transferred.",
          "readOnly": true
        },
        "totalBytesToProcess": {
          "type": "integer",
          "format": "int64",
          "description": "Total amount of data to be processed by the job.",
          "readOnly": true
        },
        "filesProcessed": {
          "type": "integer",
          "format": "int64",
          "description": "Number of files processed",
          "readOnly": true
        },
        "totalFilesToProcess": {
          "type": "integer",
          "format": "int64",
          "description": "Total files to process",
          "readOnly": true
        },
        "invalidFilesProcessed": {
          "type": "integer",
          "format": "int64",
          "description": "Number of files not adhering to azure naming conventions which were processed by automatic renaming",
          "readOnly": true
        },
        "invalidFileBytesUploaded": {
          "type": "integer",
          "format": "int64",
          "description": "Total amount of data not adhering to azure naming conventions which were processed by automatic renaming",
          "readOnly": true
        },
        "renamedContainerCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of folders not adhering to azure naming conventions which were processed by automatic renaming",
          "readOnly": true
        },
        "filesErroredOut": {
          "type": "integer",
          "format": "int64",
          "description": "Number of files which could not be copied",
          "readOnly": true
        },
        "directoriesErroredOut": {
          "type": "integer",
          "format": "int64",
          "description": "To indicate directories errored out in the job.",
          "readOnly": true
        },
        "invalidDirectoriesProcessed": {
          "type": "integer",
          "format": "int64",
          "description": "To indicate directories renamed",
          "readOnly": true
        },
        "isEnumerationInProgress": {
          "type": "boolean",
          "description": "To indicate if enumeration of data is in progress.\nUntil this is true, the TotalBytesToProcess may not be valid.",
          "readOnly": true
        },
        "error": {
          "$ref": "#/definitions/CloudError",
          "description": "Error, if any, in the stage",
          "readOnly": true
        },
        "actions": {
          "type": "array",
          "description": "Available actions on the job.",
          "items": {
            "type": "string",
            "description": "Resolution code provided by customer.",
            "enum": [
              "None",
              "MoveToCleanUpDevice",
              "Resume",
              "Restart",
              "ReachOutToOperation"
            ],
            "x-ms-enum": {
              "name": "CustomerResolutionCode",
              "modelAsString": false,
              "values": [
                {
                  "name": "None",
                  "value": "None",
                  "description": "No Resolution Yet"
                },
                {
                  "name": "MoveToCleanUpDevice",
                  "value": "MoveToCleanUpDevice",
                  "description": "Clean the device"
                },
                {
                  "name": "Resume",
                  "value": "Resume",
                  "description": "Resume the job to same stage"
                },
                {
                  "name": "Restart",
                  "value": "Restart",
                  "description": "Restart whole action."
                },
                {
                  "name": "ReachOutToOperation",
                  "value": "ReachOutToOperation",
                  "description": "Reach out to operation for further action."
                }
              ]
            }
          },
          "readOnly": true
        }
      }
    },
    "HardwareEncryption": {
      "type": "string",
      "description": "Hardware encryption support for a given sku for a given region.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "HardwareEncryption",
        "modelAsString": false,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Hardware-based encryption is enabled."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Hardware-based encryption is disabled."
          }
        ]
      }
    },
    "HeavyScheduleAvailabilityRequest": {
      "type": "object",
      "description": "Request body to get the availability for scheduling heavy orders.",
      "allOf": [
        {
          "type": "object",
          "description": "Request body to get the availability for scheduling orders.",
          "properties": {
            "storageLocation": {
              "type": "string",
              "description": "Location for data transfer. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01"
            },
            "skuName": {
              "description": "Sku Name for which the order is to be scheduled.",
              "type": "string",
              "enum": [
                "DataBox",
                "DataBoxDisk",
                "DataBoxHeavy",
                "DataBoxCustomerDisk"
              ],
              "x-ms-enum": {
                "name": "SkuName",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DataBox",
                    "value": "DataBox",
                    "description": "Data Box."
                  },
                  {
                    "name": "DataBoxDisk",
                    "value": "DataBoxDisk",
                    "description": "Data Box Disk."
                  },
                  {
                    "name": "DataBoxHeavy",
                    "value": "DataBoxHeavy",
                    "description": "Data Box Heavy."
                  },
                  {
                    "name": "DataBoxCustomerDisk",
                    "value": "DataBoxCustomerDisk",
                    "description": "Data Box Customer Disk"
                  }
                ]
              }
            },
            "country": {
              "type": "string",
              "description": "Country in which storage location should be supported."
            },
            "model": {
              "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
              "type": "string",
              "enum": [
                "DataBox",
                "DataBoxDisk",
                "DataBoxHeavy",
                "DataBoxCustomerDisk",
                "AzureDataBox120",
                "AzureDataBox525"
              ],
              "x-ms-enum": {
                "name": "ModelName",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DataBox",
                    "value": "DataBox",
                    "description": "Data Box."
                  },
                  {
                    "name": "DataBoxDisk",
                    "value": "DataBoxDisk",
                    "description": "Data Box Disk."
                  },
                  {
                    "name": "DataBoxHeavy",
                    "value": "DataBoxHeavy",
                    "description": "Data Box Heavy."
                  },
                  {
                    "name": "DataBoxCustomerDisk",
                    "value": "DataBoxCustomerDisk",
                    "description": "Data Box Customer Disk"
                  },
                  {
                    "name": "AzureDataBox120",
                    "value": "AzureDataBox120",
                    "description": "Data Box V2 with 120TB usable capacity."
                  },
                  {
                    "name": "AzureDataBox525",
                    "value": "AzureDataBox525",
                    "description": "Data Box V2 with 525TB usable capacity."
                  }
                ]
              }
            }
          },
          "discriminator": "skuName",
          "required": [
            "storageLocation",
            "skuName"
          ]
        }
      ],
      "x-ms-discriminator-value": "DataBoxHeavy"
    },
    "IdentityProperties": {
      "type": "object",
      "description": "Managed identity properties.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Managed service identity type."
        },
        "userAssigned": {
          "description": "User assigned identity properties.",
          "type": "object",
          "properties": {
            "resourceId": {
              "type": "string",
              "description": "Arm resource id for user assigned identity to be used to fetch MSI token."
            }
          }
        }
      }
    },
    "ImportDiskDetails": {
      "type": "object",
      "description": "Import disk details",
      "properties": {
        "manifestFile": {
          "type": "string",
          "description": "The relative path of the manifest file on the disk."
        },
        "manifestHash": {
          "type": "string",
          "description": "The Base16-encoded MD5 hash of the manifest file on the disk."
        },
        "bitLockerKey": {
          "type": "string",
          "format": "password",
          "description": "BitLocker key used to encrypt the disk.",
          "x-ms-secret": true
        },
        "backupManifestCloudPath": {
          "type": "string",
          "description": "Path to backed up manifest, only returned if enableManifestBackup is true.",
          "readOnly": true
        }
      },
      "required": [
        "manifestFile",
        "manifestHash",
        "bitLockerKey"
      ]
    },
    "JobDelayDetails": {
      "type": "object",
      "description": "Job Delay Notification details",
      "properties": {
        "status": {
          "description": "Status of notification",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Active",
            "Resolved"
          ],
          "x-ms-enum": {
            "name": "DelayNotificationStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Active",
                "value": "Active",
                "description": "Delay is still active"
              },
              {
                "name": "Resolved",
                "value": "Resolved",
                "description": "Delay has been resolved"
              }
            ]
          }
        },
        "errorCode": {
          "description": "Delay Error code",
          "readOnly": true,
          "type": "string",
          "enum": [
            "InternalIssueDelay",
            "ActiveOrderLimitBreachedDelay",
            "HighDemandDelay",
            "LargeNumberOfFilesDelay"
          ],
          "x-ms-enum": {
            "name": "PortalDelayErrorCode",
            "modelAsString": true,
            "values": [
              {
                "name": "InternalIssueDelay",
                "value": "InternalIssueDelay",
                "description": "Delay due to any internal reasons"
              },
              {
                "name": "ActiveOrderLimitBreachedDelay",
                "value": "ActiveOrderLimitBreachedDelay",
                "description": "Active Order limit breached."
              },
              {
                "name": "HighDemandDelay",
                "value": "HighDemandDelay",
                "description": "High demand"
              },
              {
                "name": "LargeNumberOfFilesDelay",
                "value": "LargeNumberOfFilesDelay",
                "description": "Slow copy due to large number of files"
              }
            ]
          }
        },
        "description": {
          "type": "string",
          "description": "Description of the delay.",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the delay notification was created.",
          "readOnly": true
        },
        "resolutionTime": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the delay notification was resolved.",
          "readOnly": true
        }
      }
    },
    "JobDeliveryInfo": {
      "type": "object",
      "description": "Additional delivery info.",
      "properties": {
        "scheduledDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Scheduled date time."
        }
      }
    },
    "JobDeliveryType": {
      "type": "string",
      "description": "Delivery type of Job.",
      "enum": [
        "NonScheduled",
        "Scheduled"
      ],
      "x-ms-enum": {
        "name": "JobDeliveryType",
        "modelAsString": false,
        "values": [
          {
            "name": "NonScheduled",
            "value": "NonScheduled",
            "description": "Non Scheduled job."
          },
          {
            "name": "Scheduled",
            "value": "Scheduled",
            "description": "Scheduled job."
          }
        ]
      }
    },
    "JobDetails": {
      "type": "object",
      "description": "Job details.",
      "properties": {
        "jobStages": {
          "type": "array",
          "description": "List of stages that run in the job.",
          "items": {
            "type": "object",
            "description": "Job stages.",
            "properties": {
              "stageName": {
                "description": "Name of the job stage.",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "DeviceOrdered",
                  "DevicePrepared",
                  "Dispatched",
                  "Delivered",
                  "PickedUp",
                  "AtAzureDC",
                  "DataCopy",
                  "Completed",
                  "CompletedWithErrors",
                  "Cancelled",
                  "Failed_IssueReportedAtCustomer",
                  "Failed_IssueDetectedAtAzureDC",
                  "Aborted",
                  "CompletedWithWarnings",
                  "ReadyToDispatchFromAzureDC",
                  "ReadyToReceiveAtAzureDC",
                  "Created",
                  "ShippedToAzureDC",
                  "AwaitingShipmentDetails",
                  "PreparingToShipFromAzureDC",
                  "ShippedToCustomer"
                ],
                "x-ms-enum": {
                  "name": "StageName",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "DeviceOrdered",
                      "value": "DeviceOrdered",
                      "description": "An order has been created."
                    },
                    {
                      "name": "DevicePrepared",
                      "value": "DevicePrepared",
                      "description": "A device has been prepared for the order."
                    },
                    {
                      "name": "Dispatched",
                      "value": "Dispatched",
                      "description": "Device has been dispatched to the user of the order."
                    },
                    {
                      "name": "Delivered",
                      "value": "Delivered",
                      "description": "Device has been delivered to the user of the order."
                    },
                    {
                      "name": "PickedUp",
                      "value": "PickedUp",
                      "description": "Device has been picked up from user and in transit to Azure datacenter."
                    },
                    {
                      "name": "AtAzureDC",
                      "value": "AtAzureDC",
                      "description": "Device has been received at Azure datacenter from the user."
                    },
                    {
                      "name": "DataCopy",
                      "value": "DataCopy",
                      "description": "Data copy from the device at Azure datacenter."
                    },
                    {
                      "name": "Completed",
                      "value": "Completed",
                      "description": "Order has completed."
                    },
                    {
                      "name": "CompletedWithErrors",
                      "value": "CompletedWithErrors",
                      "description": "Order has completed with errors."
                    },
                    {
                      "name": "Cancelled",
                      "value": "Cancelled",
                      "description": "Order has been cancelled."
                    },
                    {
                      "name": "Failed_IssueReportedAtCustomer",
                      "value": "Failed_IssueReportedAtCustomer",
                      "description": "Order has failed due to issue reported by user."
                    },
                    {
                      "name": "Failed_IssueDetectedAtAzureDC",
                      "value": "Failed_IssueDetectedAtAzureDC",
                      "description": "Order has failed due to issue detected at Azure datacenter."
                    },
                    {
                      "name": "Aborted",
                      "value": "Aborted",
                      "description": "Order has been aborted."
                    },
                    {
                      "name": "CompletedWithWarnings",
                      "value": "CompletedWithWarnings",
                      "description": "Order has completed with warnings."
                    },
                    {
                      "name": "ReadyToDispatchFromAzureDC",
                      "value": "ReadyToDispatchFromAzureDC",
                      "description": "Device is ready to be handed to customer from Azure DC."
                    },
                    {
                      "name": "ReadyToReceiveAtAzureDC",
                      "value": "ReadyToReceiveAtAzureDC",
                      "description": "Device can be dropped off at Azure DC."
                    },
                    {
                      "name": "Created",
                      "value": "Created",
                      "description": "Job created by the customer."
                    },
                    {
                      "name": "ShippedToAzureDC",
                      "value": "ShippedToAzureDC",
                      "description": "User shipped the device to AzureDC."
                    },
                    {
                      "name": "AwaitingShipmentDetails",
                      "value": "AwaitingShipmentDetails",
                      "description": "Awaiting shipment details of device from customer."
                    },
                    {
                      "name": "PreparingToShipFromAzureDC",
                      "value": "PreparingToShipFromAzureDC",
                      "description": "Preparing the device to ship to customer."
                    },
                    {
                      "name": "ShippedToCustomer",
                      "value": "ShippedToCustomer",
                      "description": "Shipped the device to customer."
                    }
                  ]
                }
              },
              "displayName": {
                "type": "string",
                "description": "Display name of the job stage.",
                "readOnly": true
              },
              "stageStatus": {
                "description": "Status of the job stage.",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "None",
                  "InProgress",
                  "Succeeded",
                  "Failed",
                  "Cancelled",
                  "Cancelling",
                  "SucceededWithErrors",
                  "WaitingForCustomerAction",
                  "SucceededWithWarnings",
                  "WaitingForCustomerActionForKek",
                  "WaitingForCustomerActionForCleanUp",
                  "CustomerActionPerformedForCleanUp",
                  "CustomerActionPerformed"
                ],
                "x-ms-enum": {
                  "name": "StageStatus",
                  "modelAsString": false,
                  "values": [
                    {
                      "name": "None",
                      "value": "None",
                      "description": "No status available yet."
                    },
                    {
                      "name": "InProgress",
                      "value": "InProgress",
                      "description": "Stage is in progress."
                    },
                    {
                      "name": "Succeeded",
                      "value": "Succeeded",
                      "description": "Stage has succeeded."
                    },
                    {
                      "name": "Failed",
                      "value": "Failed",
                      "description": "Stage has failed."
                    },
                    {
                      "name": "Cancelled",
                      "value": "Cancelled",
                      "description": "Stage has been cancelled."
                    },
                    {
                      "name": "Cancelling",
                      "value": "Cancelling",
                      "description": "Stage is cancelling."
                    },
                    {
                      "name": "SucceededWithErrors",
                      "value": "SucceededWithErrors",
                      "description": "Stage has succeeded with errors."
                    },
                    {
                      "name": "WaitingForCustomerAction",
                      "value": "WaitingForCustomerAction",
                      "description": "Stage is stuck until customer takes some action."
                    },
                    {
                      "name": "SucceededWithWarnings",
                      "value": "SucceededWithWarnings",
                      "description": "Stage has succeeded with warnings."
                    },
                    {
                      "name": "WaitingForCustomerActionForKek",
                      "value": "WaitingForCustomerActionForKek",
                      "description": "Stage is waiting for customer action for kek action items."
                    },
                    {
                      "name": "WaitingForCustomerActionForCleanUp",
                      "value": "WaitingForCustomerActionForCleanUp",
                      "description": "Stage is waiting for customer action for clean up."
                    },
                    {
                      "name": "CustomerActionPerformedForCleanUp",
                      "value": "CustomerActionPerformedForCleanUp",
                      "description": "Stage has performed customer action for clean up."
                    },
                    {
                      "name": "CustomerActionPerformed",
                      "value": "CustomerActionPerformed",
                      "description": "Stage has performed customer action for clean up."
                    }
                  ]
                }
              },
              "stageTime": {
                "type": "string",
                "format": "date-time",
                "description": "Time for the job stage in UTC ISO 8601 format.",
                "readOnly": true
              },
              "jobStageDetails": {
                "description": "Job Stage Details",
                "readOnly": true
              },
              "delayInformation": {
                "type": "array",
                "description": "Delay information for the job stages.",
                "items": {
                  "type": "object",
                  "description": "Job Delay Notification details",
                  "properties": {
                    "status": {
                      "description": "Status of notification",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Active",
                        "Resolved"
                      ],
                      "x-ms-enum": {
                        "name": "DelayNotificationStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Active",
                            "value": "Active",
                            "description": "Delay is still active"
                          },
                          {
                            "name": "Resolved",
                            "value": "Resolved",
                            "description": "Delay has been resolved"
                          }
                        ]
                      }
                    },
                    "errorCode": {
                      "description": "Delay Error code",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "InternalIssueDelay",
                        "ActiveOrderLimitBreachedDelay",
                        "HighDemandDelay",
                        "LargeNumberOfFilesDelay"
                      ],
                      "x-ms-enum": {
                        "name": "PortalDelayErrorCode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "InternalIssueDelay",
                            "value": "InternalIssueDelay",
                            "description": "Delay due to any internal reasons"
                          },
                          {
                            "name": "ActiveOrderLimitBreachedDelay",
                            "value": "ActiveOrderLimitBreachedDelay",
                            "description": "Active Order limit breached."
                          },
                          {
                            "name": "HighDemandDelay",
                            "value": "HighDemandDelay",
                            "description": "High demand"
                          },
                          {
                            "name": "LargeNumberOfFilesDelay",
                            "value": "LargeNumberOfFilesDelay",
                            "description": "Slow copy due to large number of files"
                          }
                        ]
                      }
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the delay.",
                      "readOnly": true
                    },
                    "startTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the delay notification was created.",
                      "readOnly": true
                    },
                    "resolutionTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the delay notification was resolved.",
                      "readOnly": true
                    }
                  }
                },
                "readOnly": true,
                "x-ms-identifiers": []
              }
            }
          },
          "readOnly": true
        },
        "contactDetails": {
          "description": "Contact details for notification and shipping.",
          "type": "object",
          "properties": {
            "contactName": {
              "type": "string",
              "description": "Contact name of the person."
            },
            "phone": {
              "type": "string",
              "description": "Phone number of the contact person."
            },
            "phoneExtension": {
              "type": "string",
              "description": "Phone extension number of the contact person."
            },
            "mobile": {
              "type": "string",
              "description": "Mobile number of the contact person."
            },
            "emailList": {
              "type": "array",
              "description": "List of Email-ids to be notified about job progress.",
              "items": {
                "type": "string"
              }
            },
            "notificationPreference": {
              "type": "array",
              "description": "Notification preference for a job stage.",
              "items": {
                "type": "object",
                "description": "Notification preference for a job stage.",
                "properties": {
                  "stageName": {
                    "description": "Name of the stage.",
                    "type": "string",
                    "enum": [
                      "DevicePrepared",
                      "Dispatched",
                      "Delivered",
                      "PickedUp",
                      "AtAzureDC",
                      "DataCopy",
                      "Created",
                      "ShippedToCustomer"
                    ],
                    "x-ms-enum": {
                      "name": "NotificationStageName",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "DevicePrepared",
                          "value": "DevicePrepared",
                          "description": "Notification at device prepared stage."
                        },
                        {
                          "name": "Dispatched",
                          "value": "Dispatched",
                          "description": "Notification at device dispatched stage."
                        },
                        {
                          "name": "Delivered",
                          "value": "Delivered",
                          "description": "Notification at device delivered stage."
                        },
                        {
                          "name": "PickedUp",
                          "value": "PickedUp",
                          "description": "Notification at device picked up from user stage."
                        },
                        {
                          "name": "AtAzureDC",
                          "value": "AtAzureDC",
                          "description": "Notification at device received at Azure datacenter stage."
                        },
                        {
                          "name": "DataCopy",
                          "value": "DataCopy",
                          "description": "Notification at data copy started stage."
                        },
                        {
                          "name": "Created",
                          "value": "Created",
                          "description": "Notification at job created stage."
                        },
                        {
                          "name": "ShippedToCustomer",
                          "value": "ShippedToCustomer",
                          "description": "Notification at shipped devices to customer stage."
                        }
                      ]
                    }
                  },
                  "sendNotification": {
                    "type": "boolean",
                    "description": "Notification is required or not.",
                    "default": true
                  }
                },
                "required": [
                  "stageName",
                  "sendNotification"
                ]
              }
            }
          },
          "required": [
            "contactName",
            "phone",
            "emailList"
          ]
        },
        "shippingAddress": {
          "description": "Shipping address of the customer.",
          "type": "object",
          "properties": {
            "streetAddress1": {
              "type": "string",
              "description": "Street Address line 1."
            },
            "streetAddress2": {
              "type": "string",
              "description": "Street Address line 2."
            },
            "streetAddress3": {
              "type": "string",
              "description": "Street Address line 3."
            },
            "city": {
              "type": "string",
              "description": "Name of the City."
            },
            "stateOrProvince": {
              "type": "string",
              "description": "Name of the State or Province."
            },
            "country": {
              "type": "string",
              "description": "Name of the Country."
            },
            "postalCode": {
              "type": "string",
              "description": "Postal code."
            },
            "zipExtendedCode": {
              "type": "string",
              "description": "Extended Zip Code."
            },
            "companyName": {
              "type": "string",
              "description": "Name of the company."
            },
            "addressType": {
              "type": "string",
              "description": "Type of address.",
              "default": "None",
              "enum": [
                "None",
                "Residential",
                "Commercial"
              ],
              "x-ms-enum": {
                "name": "AddressType",
                "modelAsString": false,
                "values": [
                  {
                    "name": "None",
                    "value": "None",
                    "description": "Address type not known."
                  },
                  {
                    "name": "Residential",
                    "value": "Residential",
                    "description": "Residential Address."
                  },
                  {
                    "name": "Commercial",
                    "value": "Commercial",
                    "description": "Commercial Address."
                  }
                ]
              }
            },
            "skipAddressValidation": {
              "type": "boolean",
              "description": "Flag to indicate if customer has chosen to skip default address validation"
            },
            "taxIdentificationNumber": {
              "type": "string",
              "description": "Tax Identification Number"
            }
          },
          "required": [
            "streetAddress1",
            "country"
          ]
        },
        "deliveryPackage": {
          "description": "Delivery package shipping details.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "trackingUrl": {
              "type": "string",
              "description": "Url where shipment can be tracked.",
              "readOnly": true
            },
            "carrierName": {
              "type": "string",
              "description": "Name of the carrier.",
              "readOnly": true
            },
            "trackingId": {
              "type": "string",
              "description": "Tracking Id of shipment.",
              "readOnly": true
            }
          }
        },
        "returnPackage": {
          "description": "Return package shipping details.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "trackingUrl": {
              "type": "string",
              "description": "Url where shipment can be tracked.",
              "readOnly": true
            },
            "carrierName": {
              "type": "string",
              "description": "Name of the carrier.",
              "readOnly": true
            },
            "trackingId": {
              "type": "string",
              "description": "Tracking Id of shipment.",
              "readOnly": true
            }
          }
        },
        "dataImportDetails": {
          "type": "array",
          "description": "Details of the data to be imported into azure.",
          "items": {
            "type": "object",
            "description": "Details of the data to be used for importing data to azure.",
            "properties": {
              "accountDetails": {
                "description": "Account details of the data to be transferred",
                "type": "object",
                "properties": {
                  "dataAccountType": {
                    "type": "string",
                    "description": "Account Type of the data to be transferred.",
                    "default": "StorageAccount",
                    "enum": [
                      "StorageAccount",
                      "ManagedDisk"
                    ],
                    "x-ms-enum": {
                      "name": "DataAccountType",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "StorageAccount",
                          "value": "StorageAccount",
                          "description": "Storage Accounts ."
                        },
                        {
                          "name": "ManagedDisk",
                          "value": "ManagedDisk",
                          "description": "Azure Managed disk storage."
                        }
                      ]
                    }
                  },
                  "sharePassword": {
                    "type": "string",
                    "format": "password",
                    "description": "Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\\-$%^!+=;:_()]+",
                    "x-ms-mutability": [
                      "create"
                    ],
                    "x-ms-secret": true
                  }
                },
                "discriminator": "dataAccountType",
                "required": [
                  "dataAccountType"
                ]
              },
              "logCollectionLevel": {
                "type": "string",
                "description": "Level of the logs to be collected.",
                "default": "Error",
                "enum": [
                  "Error",
                  "Verbose"
                ],
                "x-ms-enum": {
                  "name": "LogCollectionLevel",
                  "modelAsString": false,
                  "values": [
                    {
                      "name": "Error",
                      "value": "Error",
                      "description": "Only Errors will be collected in the logs."
                    },
                    {
                      "name": "Verbose",
                      "value": "Verbose",
                      "description": "Verbose logging (includes Errors, CRC, size information and others)."
                    }
                  ]
                }
              }
            },
            "required": [
              "accountDetails"
            ]
          }
        },
        "dataExportDetails": {
          "type": "array",
          "description": "Details of the data to be exported from azure.",
          "items": {
            "type": "object",
            "description": "Details of the data to be used for exporting data from azure.",
            "properties": {
              "transferConfiguration": {
                "description": "Configuration for the data transfer.",
                "type": "object",
                "properties": {
                  "transferConfigurationType": {
                    "description": "Type of the configuration for transfer.",
                    "type": "string",
                    "enum": [
                      "TransferAll",
                      "TransferUsingFilter"
                    ],
                    "x-ms-enum": {
                      "name": "TransferConfigurationType",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "TransferAll",
                          "value": "TransferAll",
                          "description": "Transfer all the data."
                        },
                        {
                          "name": "TransferUsingFilter",
                          "value": "TransferUsingFilter",
                          "description": "Transfer using filter."
                        }
                      ]
                    }
                  },
                  "transferFilterDetails": {
                    "description": "Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.",
                    "type": "object",
                    "properties": {
                      "include": {
                        "description": "Details of the filtering the transfer of data.",
                        "type": "object",
                        "properties": {
                          "dataAccountType": {
                            "type": "string",
                            "description": "Type of the account of data.",
                            "default": "StorageAccount",
                            "enum": [
                              "StorageAccount",
                              "ManagedDisk"
                            ],
                            "x-ms-enum": {
                              "name": "DataAccountType",
                              "modelAsString": false,
                              "values": [
                                {
                                  "name": "StorageAccount",
                                  "value": "StorageAccount",
                                  "description": "Storage Accounts ."
                                },
                                {
                                  "name": "ManagedDisk",
                                  "value": "ManagedDisk",
                                  "description": "Azure Managed disk storage."
                                }
                              ]
                            }
                          },
                          "blobFilterDetails": {
                            "description": "Filter details to transfer blobs.",
                            "type": "object",
                            "properties": {
                              "blobPrefixList": {
                                "type": "array",
                                "description": "Prefix list of the Azure blobs to be transferred.",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "blobPathList": {
                                "type": "array",
                                "description": "List of full path of the blobs to be transferred.",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "containerList": {
                                "type": "array",
                                "description": "List of blob containers to be transferred.",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "azureFileFilterDetails": {
                            "description": "Filter details to transfer Azure files.",
                            "type": "object",
                            "properties": {
                              "filePrefixList": {
                                "type": "array",
                                "description": "Prefix list of the Azure files to be transferred.",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "filePathList": {
                                "type": "array",
                                "description": "List of full path of the files to be transferred.",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "fileShareList": {
                                "type": "array",
                                "description": "List of file shares to be transferred.",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "filterFileDetails": {
                            "type": "array",
                            "description": "Details of the filter files to be used for data transfer.",
                            "items": {
                              "type": "object",
                              "description": "Details of the filter files to be used for data transfer.",
                              "properties": {
                                "filterFileType": {
                                  "description": "Type of the filter file.",
                                  "type": "string",
                                  "enum": [
                                    "AzureBlob",
                                    "AzureFile"
                                  ],
                                  "x-ms-enum": {
                                    "name": "FilterFileType",
                                    "modelAsString": false,
                                    "values": [
                                      {
                                        "name": "AzureBlob",
                                        "value": "AzureBlob",
                                        "description": "Filter file is of the type AzureBlob."
                                      },
                                      {
                                        "name": "AzureFile",
                                        "value": "AzureFile",
                                        "description": "Filter file is of the type AzureFiles."
                                      }
                                    ]
                                  }
                                },
                                "filterFilePath": {
                                  "type": "string",
                                  "description": "Path of the file that contains the details of all items to transfer."
                                }
                              },
                              "required": [
                                "filterFileType",
                                "filterFilePath"
                              ]
                            }
                          }
                        },
                        "required": [
                          "dataAccountType"
                        ]
                      }
                    }
                  },
                  "transferAllDetails": {
                    "description": "Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll",
                    "type": "object",
                    "properties": {
                      "include": {
                        "description": "Details to transfer all data.",
                        "type": "object",
                        "properties": {
                          "dataAccountType": {
                            "type": "string",
                            "description": "Type of the account of data",
                            "default": "StorageAccount",
                            "enum": [
                              "StorageAccount",
                              "ManagedDisk"
                            ],
                            "x-ms-enum": {
                              "name": "DataAccountType",
                              "modelAsString": false,
                              "values": [
                                {
                                  "name": "StorageAccount",
                                  "value": "StorageAccount",
                                  "description": "Storage Accounts ."
                                },
                                {
                                  "name": "ManagedDisk",
                                  "value": "ManagedDisk",
                                  "description": "Azure Managed disk storage."
                                }
                              ]
                            }
                          },
                          "transferAllBlobs": {
                            "type": "boolean",
                            "description": "To indicate if all Azure blobs have to be transferred"
                          },
                          "transferAllFiles": {
                            "type": "boolean",
                            "description": "To indicate if all Azure Files have to be transferred"
                          }
                        },
                        "required": [
                          "dataAccountType"
                        ]
                      }
                    }
                  }
                },
                "required": [
                  "transferConfigurationType"
                ]
              },
              "logCollectionLevel": {
                "type": "string",
                "description": "Level of the logs to be collected.",
                "default": "Error",
                "enum": [
                  "Error",
                  "Verbose"
                ],
                "x-ms-enum": {
                  "name": "LogCollectionLevel",
                  "modelAsString": false,
                  "values": [
                    {
                      "name": "Error",
                      "value": "Error",
                      "description": "Only Errors will be collected in the logs."
                    },
                    {
                      "name": "Verbose",
                      "value": "Verbose",
                      "description": "Verbose logging (includes Errors, CRC, size information and others)."
                    }
                  ]
                }
              },
              "accountDetails": {
                "description": "Account details of the data to be transferred",
                "type": "object",
                "properties": {
                  "dataAccountType": {
                    "type": "string",
                    "description": "Account Type of the data to be transferred.",
                    "default": "StorageAccount",
                    "enum": [
                      "StorageAccount",
                      "ManagedDisk"
                    ],
                    "x-ms-enum": {
                      "name": "DataAccountType",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "StorageAccount",
                          "value": "StorageAccount",
                          "description": "Storage Accounts ."
                        },
                        {
                          "name": "ManagedDisk",
                          "value": "ManagedDisk",
                          "description": "Azure Managed disk storage."
                        }
                      ]
                    }
                  },
                  "sharePassword": {
                    "type": "string",
                    "format": "password",
                    "description": "Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\\-$%^!+=;:_()]+",
                    "x-ms-mutability": [
                      "create"
                    ],
                    "x-ms-secret": true
                  }
                },
                "discriminator": "dataAccountType",
                "required": [
                  "dataAccountType"
                ]
              }
            },
            "required": [
              "transferConfiguration",
              "accountDetails"
            ]
          }
        },
        "jobDetailsType": {
          "description": "Indicates the type of job details.",
          "type": "string",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy",
            "DataBoxCustomerDisk"
          ],
          "x-ms-enum": {
            "name": "ClassDiscriminator",
            "modelAsString": false,
            "values": [
              {
                "name": "DataBox",
                "value": "DataBox",
                "description": "Data Box orders."
              },
              {
                "name": "DataBoxDisk",
                "value": "DataBoxDisk",
                "description": "Data Box Disk orders."
              },
              {
                "name": "DataBoxHeavy",
                "value": "DataBoxHeavy",
                "description": "Data Box Heavy orders."
              },
              {
                "name": "DataBoxCustomerDisk",
                "value": "DataBoxCustomerDisk",
                "description": "Data Box Customer Disk orders."
              }
            ]
          }
        },
        "preferences": {
          "description": "Preferences for the order.",
          "type": "object",
          "properties": {
            "preferredDataCenterRegion": {
              "type": "array",
              "description": "Preferred data center region.",
              "items": {
                "type": "string"
              }
            },
            "transportPreferences": {
              "description": "Preferences related to the shipment logistics of the sku.",
              "type": "object",
              "properties": {
                "preferredShipmentType": {
                  "description": "Indicates Shipment Logistics type that the customer preferred.",
                  "type": "string",
                  "enum": [
                    "CustomerManaged",
                    "MicrosoftManaged"
                  ],
                  "x-ms-enum": {
                    "name": "TransportShipmentTypes",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "CustomerManaged",
                        "value": "CustomerManaged",
                        "description": "Shipment Logistics is handled by the customer."
                      },
                      {
                        "name": "MicrosoftManaged",
                        "value": "MicrosoftManaged",
                        "description": "Shipment Logistics is handled by Microsoft."
                      }
                    ]
                  }
                },
                "isUpdated": {
                  "type": "boolean",
                  "description": "Read only property which indicates whether transport preferences has been updated or not after device is prepared.",
                  "readOnly": true
                }
              },
              "required": [
                "preferredShipmentType"
              ]
            },
            "reverseTransportPreferences": {
              "description": "Optional Preferences related to the reverse shipment logistics of the sku.",
              "type": "object",
              "properties": {
                "preferredShipmentType": {
                  "description": "Indicates Shipment Logistics type that the customer preferred.",
                  "type": "string",
                  "enum": [
                    "CustomerManaged",
                    "MicrosoftManaged"
                  ],
                  "x-ms-enum": {
                    "name": "TransportShipmentTypes",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "CustomerManaged",
                        "value": "CustomerManaged",
                        "description": "Shipment Logistics is handled by the customer."
                      },
                      {
                        "name": "MicrosoftManaged",
                        "value": "MicrosoftManaged",
                        "description": "Shipment Logistics is handled by Microsoft."
                      }
                    ]
                  }
                },
                "isUpdated": {
                  "type": "boolean",
                  "description": "Read only property which indicates whether transport preferences has been updated or not after device is prepared.",
                  "readOnly": true
                }
              },
              "required": [
                "preferredShipmentType"
              ]
            },
            "encryptionPreferences": {
              "description": "Preferences related to the Encryption.",
              "type": "object",
              "properties": {
                "doubleEncryption": {
                  "type": "string",
                  "description": "Defines secondary layer of software-based encryption enablement.",
                  "default": "Disabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "DoubleEncryption",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "Software-based encryption is enabled."
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "Software-based encryption is disabled."
                      }
                    ]
                  }
                },
                "hardwareEncryption": {
                  "description": "Defines Hardware level encryption (Only for disk)",
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "HardwareEncryption",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "Hardware-based encryption is enabled."
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "Hardware-based encryption is disabled."
                      }
                    ]
                  }
                }
              }
            },
            "storageAccountAccessTierPreferences": {
              "type": "array",
              "description": "Preferences related to the Access Tier of storage accounts.",
              "items": {
                "type": "string",
                "enum": [
                  "Archive"
                ],
                "x-ms-enum": {
                  "modelAsString": false
                }
              }
            }
          }
        },
        "reverseShippingDetails": {
          "description": "Optional Reverse Shipping details for order.",
          "type": "object",
          "properties": {
            "contactDetails": {
              "description": "Contact Info.",
              "type": "object",
              "properties": {
                "contactName": {
                  "type": "string",
                  "description": "Contact name of the person.",
                  "minLength": 1
                },
                "phone": {
                  "type": "string",
                  "description": "Phone number of the contact person.",
                  "minLength": 1
                },
                "phoneExtension": {
                  "type": "string",
                  "description": "Phone extension number of the contact person."
                },
                "mobile": {
                  "type": "string",
                  "description": "Mobile number of the contact person."
                }
              },
              "required": [
                "contactName",
                "phone"
              ]
            },
            "shippingAddress": {
              "description": "Shipping address where customer wishes to receive the device.",
              "type": "object",
              "properties": {
                "streetAddress1": {
                  "type": "string",
                  "description": "Street Address line 1."
                },
                "streetAddress2": {
                  "type": "string",
                  "description": "Street Address line 2."
                },
                "streetAddress3": {
                  "type": "string",
                  "description": "Street Address line 3."
                },
                "city": {
                  "type": "string",
                  "description": "Name of the City."
                },
                "stateOrProvince": {
                  "type": "string",
                  "description": "Name of the State or Province."
                },
                "country": {
                  "type": "string",
                  "description": "Name of the Country."
                },
                "postalCode": {
                  "type": "string",
                  "description": "Postal code."
                },
                "zipExtendedCode": {
                  "type": "string",
                  "description": "Extended Zip Code."
                },
                "companyName": {
                  "type": "string",
                  "description": "Name of the company."
                },
                "addressType": {
                  "type": "string",
                  "description": "Type of address.",
                  "default": "None",
                  "enum": [
                    "None",
                    "Residential",
                    "Commercial"
                  ],
                  "x-ms-enum": {
                    "name": "AddressType",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "None",
                        "value": "None",
                        "description": "Address type not known."
                      },
                      {
                        "name": "Residential",
                        "value": "Residential",
                        "description": "Residential Address."
                      },
                      {
                        "name": "Commercial",
                        "value": "Commercial",
                        "description": "Commercial Address."
                      }
                    ]
                  }
                },
                "skipAddressValidation": {
                  "type": "boolean",
                  "description": "Flag to indicate if customer has chosen to skip default address validation"
                },
                "taxIdentificationNumber": {
                  "type": "string",
                  "description": "Tax Identification Number"
                }
              },
              "required": [
                "streetAddress1",
                "country"
              ]
            },
            "isUpdated": {
              "type": "boolean",
              "description": "A flag to indicate whether Reverse Shipping details are updated or not after device has been prepared.\nRead only field",
              "readOnly": true
            }
          }
        },
        "copyLogDetails": {
          "type": "array",
          "description": "List of copy log details.",
          "items": {
            "type": "object",
            "description": "Details for log generated during copy.",
            "properties": {
              "copyLogDetailsType": {
                "description": "Indicates the type of job details.",
                "type": "string",
                "enum": [
                  "DataBox",
                  "DataBoxDisk",
                  "DataBoxHeavy",
                  "DataBoxCustomerDisk"
                ],
                "x-ms-enum": {
                  "name": "ClassDiscriminator",
                  "modelAsString": false,
                  "values": [
                    {
                      "name": "DataBox",
                      "value": "DataBox",
                      "description": "Data Box orders."
                    },
                    {
                      "name": "DataBoxDisk",
                      "value": "DataBoxDisk",
                      "description": "Data Box Disk orders."
                    },
                    {
                      "name": "DataBoxHeavy",
                      "value": "DataBoxHeavy",
                      "description": "Data Box Heavy orders."
                    },
                    {
                      "name": "DataBoxCustomerDisk",
                      "value": "DataBoxCustomerDisk",
                      "description": "Data Box Customer Disk orders."
                    }
                  ]
                }
              }
            },
            "discriminator": "copyLogDetailsType",
            "required": [
              "copyLogDetailsType"
            ]
          },
          "readOnly": true
        },
        "reverseShipmentLabelSasKey": {
          "type": "string",
          "description": "Shared access key to download the return shipment label",
          "readOnly": true
        },
        "chainOfCustodySasKey": {
          "type": "string",
          "description": "Shared access key to download the chain of custody logs",
          "readOnly": true
        },
        "deviceErasureDetails": {
          "description": "Holds device data erasure details",
          "readOnly": true,
          "type": "object",
          "properties": {
            "deviceErasureStatus": {
              "description": "Holds the device erasure completion status",
              "readOnly": true,
              "type": "string",
              "enum": [
                "None",
                "InProgress",
                "Succeeded",
                "Failed",
                "Cancelled",
                "Cancelling",
                "SucceededWithErrors",
                "WaitingForCustomerAction",
                "SucceededWithWarnings",
                "WaitingForCustomerActionForKek",
                "WaitingForCustomerActionForCleanUp",
                "CustomerActionPerformedForCleanUp",
                "CustomerActionPerformed"
              ],
              "x-ms-enum": {
                "name": "StageStatus",
                "modelAsString": false,
                "values": [
                  {
                    "name": "None",
                    "value": "None",
                    "description": "No status available yet."
                  },
                  {
                    "name": "InProgress",
                    "value": "InProgress",
                    "description": "Stage is in progress."
                  },
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Stage has succeeded."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Stage has failed."
                  },
                  {
                    "name": "Cancelled",
                    "value": "Cancelled",
                    "description": "Stage has been cancelled."
                  },
                  {
                    "name": "Cancelling",
                    "value": "Cancelling",
                    "description": "Stage is cancelling."
                  },
                  {
                    "name": "SucceededWithErrors",
                    "value": "SucceededWithErrors",
                    "description": "Stage has succeeded with errors."
                  },
                  {
                    "name": "WaitingForCustomerAction",
                    "value": "WaitingForCustomerAction",
                    "description": "Stage is stuck until customer takes some action."
                  },
                  {
                    "name": "SucceededWithWarnings",
                    "value": "SucceededWithWarnings",
                    "description": "Stage has succeeded with warnings."
                  },
                  {
                    "name": "WaitingForCustomerActionForKek",
                    "value": "WaitingForCustomerActionForKek",
                    "description": "Stage is waiting for customer action for kek action items."
                  },
                  {
                    "name": "WaitingForCustomerActionForCleanUp",
                    "value": "WaitingForCustomerActionForCleanUp",
                    "description": "Stage is waiting for customer action for clean up."
                  },
                  {
                    "name": "CustomerActionPerformedForCleanUp",
                    "value": "CustomerActionPerformedForCleanUp",
                    "description": "Stage has performed customer action for clean up."
                  },
                  {
                    "name": "CustomerActionPerformed",
                    "value": "CustomerActionPerformed",
                    "description": "Stage has performed customer action for clean up."
                  }
                ]
              }
            },
            "erasureOrDestructionCertificateSasKey": {
              "type": "string",
              "description": "Shared access key to download cleanup or destruction certificate for device",
              "readOnly": true
            },
            "secureErasureCertificateSasKey": {
              "type": "string",
              "description": "Shared access key to download secure erasure certificate for the device",
              "readOnly": true
            }
          }
        },
        "keyEncryptionKey": {
          "description": "Details about which key encryption type is being used.",
          "type": "object",
          "properties": {
            "kekType": {
              "type": "string",
              "description": "Type of encryption key used for key encryption.",
              "default": "MicrosoftManaged",
              "enum": [
                "MicrosoftManaged",
                "CustomerManaged"
              ],
              "x-ms-enum": {
                "name": "KekType",
                "modelAsString": false,
                "values": [
                  {
                    "name": "MicrosoftManaged",
                    "value": "MicrosoftManaged",
                    "description": "Key encryption key is managed by Microsoft."
                  },
                  {
                    "name": "CustomerManaged",
                    "value": "CustomerManaged",
                    "description": "Key encryption key is managed by the Customer."
                  }
                ]
              }
            },
            "identityProperties": {
              "description": "Managed identity properties used for key encryption.",
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Managed service identity type."
                },
                "userAssigned": {
                  "description": "User assigned identity properties.",
                  "type": "object",
                  "properties": {
                    "resourceId": {
                      "type": "string",
                      "description": "Arm resource id for user assigned identity to be used to fetch MSI token."
                    }
                  }
                }
              }
            },
            "kekUrl": {
              "type": "string",
              "description": "Key encryption key. It is required in case of Customer managed KekType."
            },
            "kekVaultResourceID": {
              "type": "string",
              "description": "Kek vault resource id. It is required in case of Customer managed KekType."
            }
          },
          "required": [
            "kekType"
          ]
        },
        "expectedDataSizeInTeraBytes": {
          "type": "integer",
          "format": "int32",
          "description": "The expected size of the data, which needs to be transferred in this job, in terabytes."
        },
        "actions": {
          "type": "array",
          "description": "Available actions on the job.",
          "items": {
            "type": "string",
            "description": "Resolution code provided by customer.",
            "enum": [
              "None",
              "MoveToCleanUpDevice",
              "Resume",
              "Restart",
              "ReachOutToOperation"
            ],
            "x-ms-enum": {
              "name": "CustomerResolutionCode",
              "modelAsString": false,
              "values": [
                {
                  "name": "None",
                  "value": "None",
                  "description": "No Resolution Yet"
                },
                {
                  "name": "MoveToCleanUpDevice",
                  "value": "MoveToCleanUpDevice",
                  "description": "Clean the device"
                },
                {
                  "name": "Resume",
                  "value": "Resume",
                  "description": "Resume the job to same stage"
                },
                {
                  "name": "Restart",
                  "value": "Restart",
                  "description": "Restart whole action."
                },
                {
                  "name": "ReachOutToOperation",
                  "value": "ReachOutToOperation",
                  "description": "Reach out to operation for further action."
                }
              ]
            }
          },
          "readOnly": true
        },
        "lastMitigationActionOnJob": {
          "description": "Last mitigation action performed on the job.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "actionDateTimeInUtc": {
              "type": "string",
              "format": "date-time",
              "description": "Action performed date time"
            },
            "isPerformedByCustomer": {
              "type": "boolean",
              "description": "Action performed by customer,\npossibility is that mitigation might happen by customer or service or by ops"
            },
            "customerResolution": {
              "type": "string",
              "description": "Resolution code provided by customer.",
              "enum": [
                "None",
                "MoveToCleanUpDevice",
                "Resume",
                "Restart",
                "ReachOutToOperation"
              ],
              "x-ms-enum": {
                "name": "CustomerResolutionCode",
                "modelAsString": false,
                "values": [
                  {
                    "name": "None",
                    "value": "None",
                    "description": "No Resolution Yet"
                  },
                  {
                    "name": "MoveToCleanUpDevice",
                    "value": "MoveToCleanUpDevice",
                    "description": "Clean the device"
                  },
                  {
                    "name": "Resume",
                    "value": "Resume",
                    "description": "Resume the job to same stage"
                  },
                  {
                    "name": "Restart",
                    "value": "Restart",
                    "description": "Restart whole action."
                  },
                  {
                    "name": "ReachOutToOperation",
                    "value": "ReachOutToOperation",
                    "description": "Reach out to operation for further action."
                  }
                ]
              }
            }
          }
        },
        "datacenterAddress": {
          "description": "Datacenter address to ship to, for the given sku and storage location.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "datacenterAddressType": {
              "description": "Data center address type",
              "type": "string",
              "enum": [
                "DatacenterAddressLocation",
                "DatacenterAddressInstruction"
              ],
              "x-ms-enum": {
                "name": "DatacenterAddressType",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DatacenterAddressLocation",
                    "value": "DatacenterAddressLocation",
                    "description": "Data center address location."
                  },
                  {
                    "name": "DatacenterAddressInstruction",
                    "value": "DatacenterAddressInstruction",
                    "description": "Data center address instruction."
                  }
                ]
              }
            },
            "supportedCarriersForReturnShipment": {
              "type": "array",
              "description": "List of supported carriers for return shipment.",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "dataCenterAzureLocation": {
              "type": "string",
              "description": "Azure Location where the Data Center serves primarily.",
              "readOnly": true
            }
          },
          "discriminator": "datacenterAddressType",
          "required": [
            "datacenterAddressType"
          ]
        },
        "dataCenterCode": {
          "description": "DataCenter code.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Invalid",
            "BY2",
            "BY1",
            "ORK70",
            "AM2",
            "AMS20",
            "BY21",
            "BY24",
            "MWH01",
            "AMS06",
            "SSE90",
            "SYD03",
            "SYD23",
            "CBR20",
            "YTO20",
            "CWL20",
            "LON24",
            "BOM01",
            "BL20",
            "BL7",
            "SEL20",
            "TYO01",
            "BN1",
            "SN5",
            "CYS04",
            "TYO22",
            "YTO21",
            "YQB20",
            "FRA22",
            "MAA01",
            "CPQ02",
            "CPQ20",
            "SIN20",
            "HKG20",
            "SG2",
            "MEL23",
            "SEL21",
            "OSA20",
            "SHA03",
            "BJB",
            "JNB22",
            "JNB21",
            "MNZ21",
            "SN8",
            "AUH20",
            "ZRH20",
            "PUS20",
            "AdHoc",
            "CH1",
            "DSM05",
            "DUB07",
            "PNQ01",
            "SVG20",
            "OSA02",
            "OSA22",
            "PAR22",
            "BN7",
            "SN6",
            "BJS20",
            "BL24",
            "IDC5",
            "TYO23",
            "NTG20",
            "DXB23",
            "DSM11",
            "AMS25",
            "CPQ21",
            "OSA23"
          ],
          "x-ms-enum": {
            "name": "DataCenterCode",
            "modelAsString": true,
            "values": [
              {
                "name": "Invalid",
                "value": "Invalid"
              },
              {
                "name": "BY2",
                "value": "BY2"
              },
              {
                "name": "BY1",
                "value": "BY1"
              },
              {
                "name": "ORK70",
                "value": "ORK70"
              },
              {
                "name": "AM2",
                "value": "AM2"
              },
              {
                "name": "AMS20",
                "value": "AMS20"
              },
              {
                "name": "BY21",
                "value": "BY21"
              },
              {
                "name": "BY24",
                "value": "BY24"
              },
              {
                "name": "MWH01",
                "value": "MWH01"
              },
              {
                "name": "AMS06",
                "value": "AMS06"
              },
              {
                "name": "SSE90",
                "value": "SSE90"
              },
              {
                "name": "SYD03",
                "value": "SYD03"
              },
              {
                "name": "SYD23",
                "value": "SYD23"
              },
              {
                "name": "CBR20",
                "value": "CBR20"
              },
              {
                "name": "YTO20",
                "value": "YTO20"
              },
              {
                "name": "CWL20",
                "value": "CWL20"
              },
              {
                "name": "LON24",
                "value": "LON24"
              },
              {
                "name": "BOM01",
                "value": "BOM01"
              },
              {
                "name": "BL20",
                "value": "BL20"
              },
              {
                "name": "BL7",
                "value": "BL7"
              },
              {
                "name": "SEL20",
                "value": "SEL20"
              },
              {
                "name": "TYO01",
                "value": "TYO01"
              },
              {
                "name": "BN1",
                "value": "BN1"
              },
              {
                "name": "SN5",
                "value": "SN5"
              },
              {
                "name": "CYS04",
                "value": "CYS04"
              },
              {
                "name": "TYO22",
                "value": "TYO22"
              },
              {
                "name": "YTO21",
                "value": "YTO21"
              },
              {
                "name": "YQB20",
                "value": "YQB20"
              },
              {
                "name": "FRA22",
                "value": "FRA22"
              },
              {
                "name": "MAA01",
                "value": "MAA01"
              },
              {
                "name": "CPQ02",
                "value": "CPQ02"
              },
              {
                "name": "CPQ20",
                "value": "CPQ20"
              },
              {
                "name": "SIN20",
                "value": "SIN20"
              },
              {
                "name": "HKG20",
                "value": "HKG20"
              },
              {
                "name": "SG2",
                "value": "SG2"
              },
              {
                "name": "MEL23",
                "value": "MEL23"
              },
              {
                "name": "SEL21",
                "value": "SEL21"
              },
              {
                "name": "OSA20",
                "value": "OSA20"
              },
              {
                "name": "SHA03",
                "value": "SHA03"
              },
              {
                "name": "BJB",
                "value": "BJB"
              },
              {
                "name": "JNB22",
                "value": "JNB22"
              },
              {
                "name": "JNB21",
                "value": "JNB21"
              },
              {
                "name": "MNZ21",
                "value": "MNZ21"
              },
              {
                "name": "SN8",
                "value": "SN8"
              },
              {
                "name": "AUH20",
                "value": "AUH20"
              },
              {
                "name": "ZRH20",
                "value": "ZRH20"
              },
              {
                "name": "PUS20",
                "value": "PUS20"
              },
              {
                "name": "AdHoc",
                "value": "AdHoc"
              },
              {
                "name": "CH1",
                "value": "CH1"
              },
              {
                "name": "DSM05",
                "value": "DSM05"
              },
              {
                "name": "DUB07",
                "value": "DUB07"
              },
              {
                "name": "PNQ01",
                "value": "PNQ01"
              },
              {
                "name": "SVG20",
                "value": "SVG20"
              },
              {
                "name": "OSA02",
                "value": "OSA02"
              },
              {
                "name": "OSA22",
                "value": "OSA22"
              },
              {
                "name": "PAR22",
                "value": "PAR22"
              },
              {
                "name": "BN7",
                "value": "BN7"
              },
              {
                "name": "SN6",
                "value": "SN6"
              },
              {
                "name": "BJS20",
                "value": "BJS20"
              },
              {
                "name": "BL24",
                "value": "BL24"
              },
              {
                "name": "IDC5",
                "value": "IDC5"
              },
              {
                "name": "TYO23",
                "value": "TYO23"
              },
              {
                "name": "NTG20",
                "value": "NTG20"
              },
              {
                "name": "DXB23",
                "value": "DXB23"
              },
              {
                "name": "DSM11",
                "value": "DSM11"
              },
              {
                "name": "AMS25",
                "value": "AMS25"
              },
              {
                "name": "CPQ21",
                "value": "CPQ21"
              },
              {
                "name": "OSA23",
                "value": "OSA23"
              }
            ]
          }
        }
      },
      "discriminator": "jobDetailsType",
      "required": [
        "contactDetails",
        "jobDetailsType"
      ]
    },
    "JobProperties": {
      "type": "object",
      "description": "Job Properties",
      "properties": {
        "transferType": {
          "description": "Type of the data transfer.",
          "type": "string",
          "enum": [
            "ImportToAzure",
            "ExportFromAzure"
          ],
          "x-ms-enum": {
            "name": "TransferType",
            "modelAsString": false,
            "values": [
              {
                "name": "ImportToAzure",
                "value": "ImportToAzure",
                "description": "Import data to azure."
              },
              {
                "name": "ExportFromAzure",
                "value": "ExportFromAzure",
                "description": "Export data from azure."
              }
            ]
          }
        },
        "isCancellable": {
          "type": "boolean",
          "description": "Describes whether the job is cancellable or not.",
          "readOnly": true
        },
        "isDeletable": {
          "type": "boolean",
          "description": "Describes whether the job is deletable or not.",
          "readOnly": true
        },
        "isShippingAddressEditable": {
          "type": "boolean",
          "description": "Describes whether the shipping address is editable or not.",
          "readOnly": true
        },
        "reverseShippingDetailsUpdate": {
          "description": "The Editable status for Reverse Shipping Address and Contact Info",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled",
            "NotSupported"
          ],
          "x-ms-enum": {
            "name": "ReverseShippingDetailsEditStatus",
            "modelAsString": false,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Reverse shipping details can be edited."
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Edit is disabled for Reverse shipping details."
              },
              {
                "name": "NotSupported",
                "value": "NotSupported",
                "description": "Edit is not supported for Reverse shipping details. Either subscription feature is not available or SKU doesn't support this feature."
              }
            ]
          }
        },
        "reverseTransportPreferenceUpdate": {
          "description": "The Editable status for Reverse Transport preferences",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled",
            "NotSupported"
          ],
          "x-ms-enum": {
            "name": "ReverseTransportPreferenceEditStatus",
            "modelAsString": false,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Reverse Transport Preferences can be edited."
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Edit is disabled for Reverse Transport Preferences."
              },
              {
                "name": "NotSupported",
                "value": "NotSupported",
                "description": "Edit is not supported for Reverse Transport Preferences. Either subscription feature is not available or SKU doesn't support this feature."
              }
            ]
          }
        },
        "isPrepareToShipEnabled": {
          "type": "boolean",
          "description": "Is Prepare To Ship Enabled on this job",
          "readOnly": true
        },
        "status": {
          "description": "Name of the stage which is in progress.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "DeviceOrdered",
            "DevicePrepared",
            "Dispatched",
            "Delivered",
            "PickedUp",
            "AtAzureDC",
            "DataCopy",
            "Completed",
            "CompletedWithErrors",
            "Cancelled",
            "Failed_IssueReportedAtCustomer",
            "Failed_IssueDetectedAtAzureDC",
            "Aborted",
            "CompletedWithWarnings",
            "ReadyToDispatchFromAzureDC",
            "ReadyToReceiveAtAzureDC",
            "Created",
            "ShippedToAzureDC",
            "AwaitingShipmentDetails",
            "PreparingToShipFromAzureDC",
            "ShippedToCustomer"
          ],
          "x-ms-enum": {
            "name": "StageName",
            "modelAsString": true,
            "values": [
              {
                "name": "DeviceOrdered",
                "value": "DeviceOrdered",
                "description": "An order has been created."
              },
              {
                "name": "DevicePrepared",
                "value": "DevicePrepared",
                "description": "A device has been prepared for the order."
              },
              {
                "name": "Dispatched",
                "value": "Dispatched",
                "description": "Device has been dispatched to the user of the order."
              },
              {
                "name": "Delivered",
                "value": "Delivered",
                "description": "Device has been delivered to the user of the order."
              },
              {
                "name": "PickedUp",
                "value": "PickedUp",
                "description": "Device has been picked up from user and in transit to Azure datacenter."
              },
              {
                "name": "AtAzureDC",
                "value": "AtAzureDC",
                "description": "Device has been received at Azure datacenter from the user."
              },
              {
                "name": "DataCopy",
                "value": "DataCopy",
                "description": "Data copy from the device at Azure datacenter."
              },
              {
                "name": "Completed",
                "value": "Completed",
                "description": "Order has completed."
              },
              {
                "name": "CompletedWithErrors",
                "value": "CompletedWithErrors",
                "description": "Order has completed with errors."
              },
              {
                "name": "Cancelled",
                "value": "Cancelled",
                "description": "Order has been cancelled."
              },
              {
                "name": "Failed_IssueReportedAtCustomer",
                "value": "Failed_IssueReportedAtCustomer",
                "description": "Order has failed due to issue reported by user."
              },
              {
                "name": "Failed_IssueDetectedAtAzureDC",
                "value": "Failed_IssueDetectedAtAzureDC",
                "description": "Order has failed due to issue detected at Azure datacenter."
              },
              {
                "name": "Aborted",
                "value": "Aborted",
                "description": "Order has been aborted."
              },
              {
                "name": "CompletedWithWarnings",
                "value": "CompletedWithWarnings",
                "description": "Order has completed with warnings."
              },
              {
                "name": "ReadyToDispatchFromAzureDC",
                "value": "ReadyToDispatchFromAzureDC",
                "description": "Device is ready to be handed to customer from Azure DC."
              },
              {
                "name": "ReadyToReceiveAtAzureDC",
                "value": "ReadyToReceiveAtAzureDC",
                "description": "Device can be dropped off at Azure DC."
              },
              {
                "name": "Created",
                "value": "Created",
                "description": "Job created by the customer."
              },
              {
                "name": "ShippedToAzureDC",
                "value": "ShippedToAzureDC",
                "description": "User shipped the device to AzureDC."
              },
              {
                "name": "AwaitingShipmentDetails",
                "value": "AwaitingShipmentDetails",
                "description": "Awaiting shipment details of device from customer."
              },
              {
                "name": "PreparingToShipFromAzureDC",
                "value": "PreparingToShipFromAzureDC",
                "description": "Preparing the device to ship to customer."
              },
              {
                "name": "ShippedToCustomer",
                "value": "ShippedToCustomer",
                "description": "Shipped the device to customer."
              }
            ]
          }
        },
        "delayedStage": {
          "description": "Name of the stage where delay might be present.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "DeviceOrdered",
            "DevicePrepared",
            "Dispatched",
            "Delivered",
            "PickedUp",
            "AtAzureDC",
            "DataCopy",
            "Completed",
            "CompletedWithErrors",
            "Cancelled",
            "Failed_IssueReportedAtCustomer",
            "Failed_IssueDetectedAtAzureDC",
            "Aborted",
            "CompletedWithWarnings",
            "ReadyToDispatchFromAzureDC",
            "ReadyToReceiveAtAzureDC",
            "Created",
            "ShippedToAzureDC",
            "AwaitingShipmentDetails",
            "PreparingToShipFromAzureDC",
            "ShippedToCustomer"
          ],
          "x-ms-enum": {
            "name": "StageName",
            "modelAsString": true,
            "values": [
              {
                "name": "DeviceOrdered",
                "value": "DeviceOrdered",
                "description": "An order has been created."
              },
              {
                "name": "DevicePrepared",
                "value": "DevicePrepared",
                "description": "A device has been prepared for the order."
              },
              {
                "name": "Dispatched",
                "value": "Dispatched",
                "description": "Device has been dispatched to the user of the order."
              },
              {
                "name": "Delivered",
                "value": "Delivered",
                "description": "Device has been delivered to the user of the order."
              },
              {
                "name": "PickedUp",
                "value": "PickedUp",
                "description": "Device has been picked up from user and in transit to Azure datacenter."
              },
              {
                "name": "AtAzureDC",
                "value": "AtAzureDC",
                "description": "Device has been received at Azure datacenter from the user."
              },
              {
                "name": "DataCopy",
                "value": "DataCopy",
                "description": "Data copy from the device at Azure datacenter."
              },
              {
                "name": "Completed",
                "value": "Completed",
                "description": "Order has completed."
              },
              {
                "name": "CompletedWithErrors",
                "value": "CompletedWithErrors",
                "description": "Order has completed with errors."
              },
              {
                "name": "Cancelled",
                "value": "Cancelled",
                "description": "Order has been cancelled."
              },
              {
                "name": "Failed_IssueReportedAtCustomer",
                "value": "Failed_IssueReportedAtCustomer",
                "description": "Order has failed due to issue reported by user."
              },
              {
                "name": "Failed_IssueDetectedAtAzureDC",
                "value": "Failed_IssueDetectedAtAzureDC",
                "description": "Order has failed due to issue detected at Azure datacenter."
              },
              {
                "name": "Aborted",
                "value": "Aborted",
                "description": "Order has been aborted."
              },
              {
                "name": "CompletedWithWarnings",
                "value": "CompletedWithWarnings",
                "description": "Order has completed with warnings."
              },
              {
                "name": "ReadyToDispatchFromAzureDC",
                "value": "ReadyToDispatchFromAzureDC",
                "description": "Device is ready to be handed to customer from Azure DC."
              },
              {
                "name": "ReadyToReceiveAtAzureDC",
                "value": "ReadyToReceiveAtAzureDC",
                "description": "Device can be dropped off at Azure DC."
              },
              {
                "name": "Created",
                "value": "Created",
                "description": "Job created by the customer."
              },
              {
                "name": "ShippedToAzureDC",
                "value": "ShippedToAzureDC",
                "description": "User shipped the device to AzureDC."
              },
              {
                "name": "AwaitingShipmentDetails",
                "value": "AwaitingShipmentDetails",
                "description": "Awaiting shipment details of device from customer."
              },
              {
                "name": "PreparingToShipFromAzureDC",
                "value": "PreparingToShipFromAzureDC",
                "description": "Preparing the device to ship to customer."
              },
              {
                "name": "ShippedToCustomer",
                "value": "ShippedToCustomer",
                "description": "Shipped the device to customer."
              }
            ]
          }
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which the job was started in UTC ISO 8601 format.",
          "readOnly": true
        },
        "error": {
          "$ref": "#/definitions/CloudError",
          "description": "Top level error for the job.",
          "readOnly": true
        },
        "details": {
          "description": "Details of a job run. This field will only be sent for expand details filter.",
          "type": "object",
          "properties": {
            "jobStages": {
              "type": "array",
              "description": "List of stages that run in the job.",
              "items": {
                "type": "object",
                "description": "Job stages.",
                "properties": {
                  "stageName": {
                    "description": "Name of the job stage.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "DeviceOrdered",
                      "DevicePrepared",
                      "Dispatched",
                      "Delivered",
                      "PickedUp",
                      "AtAzureDC",
                      "DataCopy",
                      "Completed",
                      "CompletedWithErrors",
                      "Cancelled",
                      "Failed_IssueReportedAtCustomer",
                      "Failed_IssueDetectedAtAzureDC",
                      "Aborted",
                      "CompletedWithWarnings",
                      "ReadyToDispatchFromAzureDC",
                      "ReadyToReceiveAtAzureDC",
                      "Created",
                      "ShippedToAzureDC",
                      "AwaitingShipmentDetails",
                      "PreparingToShipFromAzureDC",
                      "ShippedToCustomer"
                    ],
                    "x-ms-enum": {
                      "name": "StageName",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "DeviceOrdered",
                          "value": "DeviceOrdered",
                          "description": "An order has been created."
                        },
                        {
                          "name": "DevicePrepared",
                          "value": "DevicePrepared",
                          "description": "A device has been prepared for the order."
                        },
                        {
                          "name": "Dispatched",
                          "value": "Dispatched",
                          "description": "Device has been dispatched to the user of the order."
                        },
                        {
                          "name": "Delivered",
                          "value": "Delivered",
                          "description": "Device has been delivered to the user of the order."
                        },
                        {
                          "name": "PickedUp",
                          "value": "PickedUp",
                          "description": "Device has been picked up from user and in transit to Azure datacenter."
                        },
                        {
                          "name": "AtAzureDC",
                          "value": "AtAzureDC",
                          "description": "Device has been received at Azure datacenter from the user."
                        },
                        {
                          "name": "DataCopy",
                          "value": "DataCopy",
                          "description": "Data copy from the device at Azure datacenter."
                        },
                        {
                          "name": "Completed",
                          "value": "Completed",
                          "description": "Order has completed."
                        },
                        {
                          "name": "CompletedWithErrors",
                          "value": "CompletedWithErrors",
                          "description": "Order has completed with errors."
                        },
                        {
                          "name": "Cancelled",
                          "value": "Cancelled",
                          "description": "Order has been cancelled."
                        },
                        {
                          "name": "Failed_IssueReportedAtCustomer",
                          "value": "Failed_IssueReportedAtCustomer",
                          "description": "Order has failed due to issue reported by user."
                        },
                        {
                          "name": "Failed_IssueDetectedAtAzureDC",
                          "value": "Failed_IssueDetectedAtAzureDC",
                          "description": "Order has failed due to issue detected at Azure datacenter."
                        },
                        {
                          "name": "Aborted",
                          "value": "Aborted",
                          "description": "Order has been aborted."
                        },
                        {
                          "name": "CompletedWithWarnings",
                          "value": "CompletedWithWarnings",
                          "description": "Order has completed with warnings."
                        },
                        {
                          "name": "ReadyToDispatchFromAzureDC",
                          "value": "ReadyToDispatchFromAzureDC",
                          "description": "Device is ready to be handed to customer from Azure DC."
                        },
                        {
                          "name": "ReadyToReceiveAtAzureDC",
                          "value": "ReadyToReceiveAtAzureDC",
                          "description": "Device can be dropped off at Azure DC."
                        },
                        {
                          "name": "Created",
                          "value": "Created",
                          "description": "Job created by the customer."
                        },
                        {
                          "name": "ShippedToAzureDC",
                          "value": "ShippedToAzureDC",
                          "description": "User shipped the device to AzureDC."
                        },
                        {
                          "name": "AwaitingShipmentDetails",
                          "value": "AwaitingShipmentDetails",
                          "description": "Awaiting shipment details of device from customer."
                        },
                        {
                          "name": "PreparingToShipFromAzureDC",
                          "value": "PreparingToShipFromAzureDC",
                          "description": "Preparing the device to ship to customer."
                        },
                        {
                          "name": "ShippedToCustomer",
                          "value": "ShippedToCustomer",
                          "description": "Shipped the device to customer."
                        }
                      ]
                    }
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Display name of the job stage.",
                    "readOnly": true
                  },
                  "stageStatus": {
                    "description": "Status of the job stage.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "None",
                      "InProgress",
                      "Succeeded",
                      "Failed",
                      "Cancelled",
                      "Cancelling",
                      "SucceededWithErrors",
                      "WaitingForCustomerAction",
                      "SucceededWithWarnings",
                      "WaitingForCustomerActionForKek",
                      "WaitingForCustomerActionForCleanUp",
                      "CustomerActionPerformedForCleanUp",
                      "CustomerActionPerformed"
                    ],
                    "x-ms-enum": {
                      "name": "StageStatus",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "None",
                          "value": "None",
                          "description": "No status available yet."
                        },
                        {
                          "name": "InProgress",
                          "value": "InProgress",
                          "description": "Stage is in progress."
                        },
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Stage has succeeded."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Stage has failed."
                        },
                        {
                          "name": "Cancelled",
                          "value": "Cancelled",
                          "description": "Stage has been cancelled."
                        },
                        {
                          "name": "Cancelling",
                          "value": "Cancelling",
                          "description": "Stage is cancelling."
                        },
                        {
                          "name": "SucceededWithErrors",
                          "value": "SucceededWithErrors",
                          "description": "Stage has succeeded with errors."
                        },
                        {
                          "name": "WaitingForCustomerAction",
                          "value": "WaitingForCustomerAction",
                          "description": "Stage is stuck until customer takes some action."
                        },
                        {
                          "name": "SucceededWithWarnings",
                          "value": "SucceededWithWarnings",
                          "description": "Stage has succeeded with warnings."
                        },
                        {
                          "name": "WaitingForCustomerActionForKek",
                          "value": "WaitingForCustomerActionForKek",
                          "description": "Stage is waiting for customer action for kek action items."
                        },
                        {
                          "name": "WaitingForCustomerActionForCleanUp",
                          "value": "WaitingForCustomerActionForCleanUp",
                          "description": "Stage is waiting for customer action for clean up."
                        },
                        {
                          "name": "CustomerActionPerformedForCleanUp",
                          "value": "CustomerActionPerformedForCleanUp",
                          "description": "Stage has performed customer action for clean up."
                        },
                        {
                          "name": "CustomerActionPerformed",
                          "value": "CustomerActionPerformed",
                          "description": "Stage has performed customer action for clean up."
                        }
                      ]
                    }
                  },
                  "stageTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time for the job stage in UTC ISO 8601 format.",
                    "readOnly": true
                  },
                  "jobStageDetails": {
                    "description": "Job Stage Details",
                    "readOnly": true
                  },
                  "delayInformation": {
                    "type": "array",
                    "description": "Delay information for the job stages.",
                    "items": {
                      "type": "object",
                      "description": "Job Delay Notification details",
                      "properties": {
                        "status": {
                          "description": "Status of notification",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Active",
                            "Resolved"
                          ],
                          "x-ms-enum": {
                            "name": "DelayNotificationStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Active",
                                "value": "Active",
                                "description": "Delay is still active"
                              },
                              {
                                "name": "Resolved",
                                "value": "Resolved",
                                "description": "Delay has been resolved"
                              }
                            ]
                          }
                        },
                        "errorCode": {
                          "description": "Delay Error code",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "InternalIssueDelay",
                            "ActiveOrderLimitBreachedDelay",
                            "HighDemandDelay",
                            "LargeNumberOfFilesDelay"
                          ],
                          "x-ms-enum": {
                            "name": "PortalDelayErrorCode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "InternalIssueDelay",
                                "value": "InternalIssueDelay",
                                "description": "Delay due to any internal reasons"
                              },
                              {
                                "name": "ActiveOrderLimitBreachedDelay",
                                "value": "ActiveOrderLimitBreachedDelay",
                                "description": "Active Order limit breached."
                              },
                              {
                                "name": "HighDemandDelay",
                                "value": "HighDemandDelay",
                                "description": "High demand"
                              },
                              {
                                "name": "LargeNumberOfFilesDelay",
                                "value": "LargeNumberOfFilesDelay",
                                "description": "Slow copy due to large number of files"
                              }
                            ]
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the delay.",
                          "readOnly": true
                        },
                        "startTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp when the delay notification was created.",
                          "readOnly": true
                        },
                        "resolutionTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp when the delay notification was resolved.",
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true,
                    "x-ms-identifiers": []
                  }
                }
              },
              "readOnly": true
            },
            "contactDetails": {
              "description": "Contact details for notification and shipping.",
              "type": "object",
              "properties": {
                "contactName": {
                  "type": "string",
                  "description": "Contact name of the person."
                },
                "phone": {
                  "type": "string",
                  "description": "Phone number of the contact person."
                },
                "phoneExtension": {
                  "type": "string",
                  "description": "Phone extension number of the contact person."
                },
                "mobile": {
                  "type": "string",
                  "description": "Mobile number of the contact person."
                },
                "emailList": {
                  "type": "array",
                  "description": "List of Email-ids to be notified about job progress.",
                  "items": {
                    "type": "string"
                  }
                },
                "notificationPreference": {
                  "type": "array",
                  "description": "Notification preference for a job stage.",
                  "items": {
                    "type": "object",
                    "description": "Notification preference for a job stage.",
                    "properties": {
                      "stageName": {
                        "description": "Name of the stage.",
                        "type": "string",
                        "enum": [
                          "DevicePrepared",
                          "Dispatched",
                          "Delivered",
                          "PickedUp",
                          "AtAzureDC",
                          "DataCopy",
                          "Created",
                          "ShippedToCustomer"
                        ],
                        "x-ms-enum": {
                          "name": "NotificationStageName",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "DevicePrepared",
                              "value": "DevicePrepared",
                              "description": "Notification at device prepared stage."
                            },
                            {
                              "name": "Dispatched",
                              "value": "Dispatched",
                              "description": "Notification at device dispatched stage."
                            },
                            {
                              "name": "Delivered",
                              "value": "Delivered",
                              "description": "Notification at device delivered stage."
                            },
                            {
                              "name": "PickedUp",
                              "value": "PickedUp",
                              "description": "Notification at device picked up from user stage."
                            },
                            {
                              "name": "AtAzureDC",
                              "value": "AtAzureDC",
                              "description": "Notification at device received at Azure datacenter stage."
                            },
                            {
                              "name": "DataCopy",
                              "value": "DataCopy",
                              "description": "Notification at data copy started stage."
                            },
                            {
                              "name": "Created",
                              "value": "Created",
                              "description": "Notification at job created stage."
                            },
                            {
                              "name": "ShippedToCustomer",
                              "value": "ShippedToCustomer",
                              "description": "Notification at shipped devices to customer stage."
                            }
                          ]
                        }
                      },
                      "sendNotification": {
                        "type": "boolean",
                        "description": "Notification is required or not.",
                        "default": true
                      }
                    },
                    "required": [
                      "stageName",
                      "sendNotification"
                    ]
                  }
                }
              },
              "required": [
                "contactName",
                "phone",
                "emailList"
              ]
            },
            "shippingAddress": {
              "description": "Shipping address of the customer.",
              "type": "object",
              "properties": {
                "streetAddress1": {
                  "type": "string",
                  "description": "Street Address line 1."
                },
                "streetAddress2": {
                  "type": "string",
                  "description": "Street Address line 2."
                },
                "streetAddress3": {
                  "type": "string",
                  "description": "Street Address line 3."
                },
                "city": {
                  "type": "string",
                  "description": "Name of the City."
                },
                "stateOrProvince": {
                  "type": "string",
                  "description": "Name of the State or Province."
                },
                "country": {
                  "type": "string",
                  "description": "Name of the Country."
                },
                "postalCode": {
                  "type": "string",
                  "description": "Postal code."
                },
                "zipExtendedCode": {
                  "type": "string",
                  "description": "Extended Zip Code."
                },
                "companyName": {
                  "type": "string",
                  "description": "Name of the company."
                },
                "addressType": {
                  "type": "string",
                  "description": "Type of address.",
                  "default": "None",
                  "enum": [
                    "None",
                    "Residential",
                    "Commercial"
                  ],
                  "x-ms-enum": {
                    "name": "AddressType",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "None",
                        "value": "None",
                        "description": "Address type not known."
                      },
                      {
                        "name": "Residential",
                        "value": "Residential",
                        "description": "Residential Address."
                      },
                      {
                        "name": "Commercial",
                        "value": "Commercial",
                        "description": "Commercial Address."
                      }
                    ]
                  }
                },
                "skipAddressValidation": {
                  "type": "boolean",
                  "description": "Flag to indicate if customer has chosen to skip default address validation"
                },
                "taxIdentificationNumber": {
                  "type": "string",
                  "description": "Tax Identification Number"
                }
              },
              "required": [
                "streetAddress1",
                "country"
              ]
            },
            "deliveryPackage": {
              "description": "Delivery package shipping details.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "trackingUrl": {
                  "type": "string",
                  "description": "Url where shipment can be tracked.",
                  "readOnly": true
                },
                "carrierName": {
                  "type": "string",
                  "description": "Name of the carrier.",
                  "readOnly": true
                },
                "trackingId": {
                  "type": "string",
                  "description": "Tracking Id of shipment.",
                  "readOnly": true
                }
              }
            },
            "returnPackage": {
              "description": "Return package shipping details.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "trackingUrl": {
                  "type": "string",
                  "description": "Url where shipment can be tracked.",
                  "readOnly": true
                },
                "carrierName": {
                  "type": "string",
                  "description": "Name of the carrier.",
                  "readOnly": true
                },
                "trackingId": {
                  "type": "string",
                  "description": "Tracking Id of shipment.",
                  "readOnly": true
                }
              }
            },
            "dataImportDetails": {
              "type": "array",
              "description": "Details of the data to be imported into azure.",
              "items": {
                "type": "object",
                "description": "Details of the data to be used for importing data to azure.",
                "properties": {
                  "accountDetails": {
                    "description": "Account details of the data to be transferred",
                    "type": "object",
                    "properties": {
                      "dataAccountType": {
                        "type": "string",
                        "description": "Account Type of the data to be transferred.",
                        "default": "StorageAccount",
                        "enum": [
                          "StorageAccount",
                          "ManagedDisk"
                        ],
                        "x-ms-enum": {
                          "name": "DataAccountType",
                          "modelAsString": false,
                          "values": [
                            {
                              "name": "StorageAccount",
                              "value": "StorageAccount",
                              "description": "Storage Accounts ."
                            },
                            {
                              "name": "ManagedDisk",
                              "value": "ManagedDisk",
                              "description": "Azure Managed disk storage."
                            }
                          ]
                        }
                      },
                      "sharePassword": {
                        "type": "string",
                        "format": "password",
                        "description": "Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\\-$%^!+=;:_()]+",
                        "x-ms-mutability": [
                          "create"
                        ],
                        "x-ms-secret": true
                      }
                    },
                    "discriminator": "dataAccountType",
                    "required": [
                      "dataAccountType"
                    ]
                  },
                  "logCollectionLevel": {
                    "type": "string",
                    "description": "Level of the logs to be collected.",
                    "default": "Error",
                    "enum": [
                      "Error",
                      "Verbose"
                    ],
                    "x-ms-enum": {
                      "name": "LogCollectionLevel",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "Error",
                          "value": "Error",
                          "description": "Only Errors will be collected in the logs."
                        },
                        {
                          "name": "Verbose",
                          "value": "Verbose",
                          "description": "Verbose logging (includes Errors, CRC, size information and others)."
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "accountDetails"
                ]
              }
            },
            "dataExportDetails": {
              "type": "array",
              "description": "Details of the data to be exported from azure.",
              "items": {
                "type": "object",
                "description": "Details of the data to be used for exporting data from azure.",
                "properties": {
                  "transferConfiguration": {
                    "description": "Configuration for the data transfer.",
                    "type": "object",
                    "properties": {
                      "transferConfigurationType": {
                        "description": "Type of the configuration for transfer.",
                        "type": "string",
                        "enum": [
                          "TransferAll",
                          "TransferUsingFilter"
                        ],
                        "x-ms-enum": {
                          "name": "TransferConfigurationType",
                          "modelAsString": false,
                          "values": [
                            {
                              "name": "TransferAll",
                              "value": "TransferAll",
                              "description": "Transfer all the data."
                            },
                            {
                              "name": "TransferUsingFilter",
                              "value": "TransferUsingFilter",
                              "description": "Transfer using filter."
                            }
                          ]
                        }
                      },
                      "transferFilterDetails": {
                        "description": "Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.",
                        "type": "object",
                        "properties": {
                          "include": {
                            "description": "Details of the filtering the transfer of data.",
                            "type": "object",
                            "properties": {
                              "dataAccountType": {
                                "type": "string",
                                "description": "Type of the account of data.",
                                "default": "StorageAccount",
                                "enum": [
                                  "StorageAccount",
                                  "ManagedDisk"
                                ],
                                "x-ms-enum": {
                                  "name": "DataAccountType",
                                  "modelAsString": false,
                                  "values": [
                                    {
                                      "name": "StorageAccount",
                                      "value": "StorageAccount",
                                      "description": "Storage Accounts ."
                                    },
                                    {
                                      "name": "ManagedDisk",
                                      "value": "ManagedDisk",
                                      "description": "Azure Managed disk storage."
                                    }
                                  ]
                                }
                              },
                              "blobFilterDetails": {
                                "description": "Filter details to transfer blobs.",
                                "type": "object",
                                "properties": {
                                  "blobPrefixList": {
                                    "type": "array",
                                    "description": "Prefix list of the Azure blobs to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "blobPathList": {
                                    "type": "array",
                                    "description": "List of full path of the blobs to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "containerList": {
                                    "type": "array",
                                    "description": "List of blob containers to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "azureFileFilterDetails": {
                                "description": "Filter details to transfer Azure files.",
                                "type": "object",
                                "properties": {
                                  "filePrefixList": {
                                    "type": "array",
                                    "description": "Prefix list of the Azure files to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "filePathList": {
                                    "type": "array",
                                    "description": "List of full path of the files to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "fileShareList": {
                                    "type": "array",
                                    "description": "List of file shares to be transferred.",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "filterFileDetails": {
                                "type": "array",
                                "description": "Details of the filter files to be used for data transfer.",
                                "items": {
                                  "type": "object",
                                  "description": "Details of the filter files to be used for data transfer.",
                                  "properties": {
                                    "filterFileType": {
                                      "description": "Type of the filter file.",
                                      "type": "string",
                                      "enum": [
                                        "AzureBlob",
                                        "AzureFile"
                                      ],
                                      "x-ms-enum": {
                                        "name": "FilterFileType",
                                        "modelAsString": false,
                                        "values": [
                                          {
                                            "name": "AzureBlob",
                                            "value": "AzureBlob",
                                            "description": "Filter file is of the type AzureBlob."
                                          },
                                          {
                                            "name": "AzureFile",
                                            "value": "AzureFile",
                                            "description": "Filter file is of the type AzureFiles."
                                          }
                                        ]
                                      }
                                    },
                                    "filterFilePath": {
                                      "type": "string",
                                      "description": "Path of the file that contains the details of all items to transfer."
                                    }
                                  },
                                  "required": [
                                    "filterFileType",
                                    "filterFilePath"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "dataAccountType"
                            ]
                          }
                        }
                      },
                      "transferAllDetails": {
                        "description": "Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll",
                        "type": "object",
                        "properties": {
                          "include": {
                            "description": "Details to transfer all data.",
                            "type": "object",
                            "properties": {
                              "dataAccountType": {
                                "type": "string",
                                "description": "Type of the account of data",
                                "default": "StorageAccount",
                                "enum": [
                                  "StorageAccount",
                                  "ManagedDisk"
                                ],
                                "x-ms-enum": {
                                  "name": "DataAccountType",
                                  "modelAsString": false,
                                  "values": [
                                    {
                                      "name": "StorageAccount",
                                      "value": "StorageAccount",
                                      "description": "Storage Accounts ."
                                    },
                                    {
                                      "name": "ManagedDisk",
                                      "value": "ManagedDisk",
                                      "description": "Azure Managed disk storage."
                                    }
                                  ]
                                }
                              },
                              "transferAllBlobs": {
                                "type": "boolean",
                                "description": "To indicate if all Azure blobs have to be transferred"
                              },
                              "transferAllFiles": {
                                "type": "boolean",
                                "description": "To indicate if all Azure Files have to be transferred"
                              }
                            },
                            "required": [
                              "dataAccountType"
                            ]
                          }
                        }
                      }
                    },
                    "required": [
                      "transferConfigurationType"
                    ]
                  },
                  "logCollectionLevel": {
                    "type": "string",
                    "description": "Level of the logs to be collected.",
                    "default": "Error",
                    "enum": [
                      "Error",
                      "Verbose"
                    ],
                    "x-ms-enum": {
                      "name": "LogCollectionLevel",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "Error",
                          "value": "Error",
                          "description": "Only Errors will be collected in the logs."
                        },
                        {
                          "name": "Verbose",
                          "value": "Verbose",
                          "description": "Verbose logging (includes Errors, CRC, size information and others)."
                        }
                      ]
                    }
                  },
                  "accountDetails": {
                    "description": "Account details of the data to be transferred",
                    "type": "object",
                    "properties": {
                      "dataAccountType": {
                        "type": "string",
                        "description": "Account Type of the data to be transferred.",
                        "default": "StorageAccount",
                        "enum": [
                          "StorageAccount",
                          "ManagedDisk"
                        ],
                        "x-ms-enum": {
                          "name": "DataAccountType",
                          "modelAsString": false,
                          "values": [
                            {
                              "name": "StorageAccount",
                              "value": "StorageAccount",
                              "description": "Storage Accounts ."
                            },
                            {
                              "name": "ManagedDisk",
                              "value": "ManagedDisk",
                              "description": "Azure Managed disk storage."
                            }
                          ]
                        }
                      },
                      "sharePassword": {
                        "type": "string",
                        "format": "password",
                        "description": "Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\\-$%^!+=;:_()]+",
                        "x-ms-mutability": [
                          "create"
                        ],
                        "x-ms-secret": true
                      }
                    },
                    "discriminator": "dataAccountType",
                    "required": [
                      "dataAccountType"
                    ]
                  }
                },
                "required": [
                  "transferConfiguration",
                  "accountDetails"
                ]
              }
            },
            "jobDetailsType": {
              "description": "Indicates the type of job details.",
              "type": "string",
              "enum": [
                "DataBox",
                "DataBoxDisk",
                "DataBoxHeavy",
                "DataBoxCustomerDisk"
              ],
              "x-ms-enum": {
                "name": "ClassDiscriminator",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DataBox",
                    "value": "DataBox",
                    "description": "Data Box orders."
                  },
                  {
                    "name": "DataBoxDisk",
                    "value": "DataBoxDisk",
                    "description": "Data Box Disk orders."
                  },
                  {
                    "name": "DataBoxHeavy",
                    "value": "DataBoxHeavy",
                    "description": "Data Box Heavy orders."
                  },
                  {
                    "name": "DataBoxCustomerDisk",
                    "value": "DataBoxCustomerDisk",
                    "description": "Data Box Customer Disk orders."
                  }
                ]
              }
            },
            "preferences": {
              "description": "Preferences for the order.",
              "type": "object",
              "properties": {
                "preferredDataCenterRegion": {
                  "type": "array",
                  "description": "Preferred data center region.",
                  "items": {
                    "type": "string"
                  }
                },
                "transportPreferences": {
                  "description": "Preferences related to the shipment logistics of the sku.",
                  "type": "object",
                  "properties": {
                    "preferredShipmentType": {
                      "description": "Indicates Shipment Logistics type that the customer preferred.",
                      "type": "string",
                      "enum": [
                        "CustomerManaged",
                        "MicrosoftManaged"
                      ],
                      "x-ms-enum": {
                        "name": "TransportShipmentTypes",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "CustomerManaged",
                            "value": "CustomerManaged",
                            "description": "Shipment Logistics is handled by the customer."
                          },
                          {
                            "name": "MicrosoftManaged",
                            "value": "MicrosoftManaged",
                            "description": "Shipment Logistics is handled by Microsoft."
                          }
                        ]
                      }
                    },
                    "isUpdated": {
                      "type": "boolean",
                      "description": "Read only property which indicates whether transport preferences has been updated or not after device is prepared.",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "preferredShipmentType"
                  ]
                },
                "reverseTransportPreferences": {
                  "description": "Optional Preferences related to the reverse shipment logistics of the sku.",
                  "type": "object",
                  "properties": {
                    "preferredShipmentType": {
                      "description": "Indicates Shipment Logistics type that the customer preferred.",
                      "type": "string",
                      "enum": [
                        "CustomerManaged",
                        "MicrosoftManaged"
                      ],
                      "x-ms-enum": {
                        "name": "TransportShipmentTypes",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "CustomerManaged",
                            "value": "CustomerManaged",
                            "description": "Shipment Logistics is handled by the customer."
                          },
                          {
                            "name": "MicrosoftManaged",
                            "value": "MicrosoftManaged",
                            "description": "Shipment Logistics is handled by Microsoft."
                          }
                        ]
                      }
                    },
                    "isUpdated": {
                      "type": "boolean",
                      "description": "Read only property which indicates whether transport preferences has been updated or not after device is prepared.",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "preferredShipmentType"
                  ]
                },
                "encryptionPreferences": {
                  "description": "Preferences related to the Encryption.",
                  "type": "object",
                  "properties": {
                    "doubleEncryption": {
                      "type": "string",
                      "description": "Defines secondary layer of software-based encryption enablement.",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "DoubleEncryption",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Software-based encryption is enabled."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Software-based encryption is disabled."
                          }
                        ]
                      }
                    },
                    "hardwareEncryption": {
                      "description": "Defines Hardware level encryption (Only for disk)",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "HardwareEncryption",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Hardware-based encryption is enabled."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Hardware-based encryption is disabled."
                          }
                        ]
                      }
                    }
                  }
                },
                "storageAccountAccessTierPreferences": {
                  "type": "array",
                  "description": "Preferences related to the Access Tier of storage accounts.",
                  "items": {
                    "type": "string",
                    "enum": [
                      "Archive"
                    ],
                    "x-ms-enum": {
                      "modelAsString": false
                    }
                  }
                }
              }
            },
            "reverseShippingDetails": {
              "description": "Optional Reverse Shipping details for order.",
              "type": "object",
              "properties": {
                "contactDetails": {
                  "description": "Contact Info.",
                  "type": "object",
                  "properties": {
                    "contactName": {
                      "type": "string",
                      "description": "Contact name of the person.",
                      "minLength": 1
                    },
                    "phone": {
                      "type": "string",
                      "description": "Phone number of the contact person.",
                      "minLength": 1
                    },
                    "phoneExtension": {
                      "type": "string",
                      "description": "Phone extension number of the contact person."
                    },
                    "mobile": {
                      "type": "string",
                      "description": "Mobile number of the contact person."
                    }
                  },
                  "required": [
                    "contactName",
                    "phone"
                  ]
                },
                "shippingAddress": {
                  "description": "Shipping address where customer wishes to receive the device.",
                  "type": "object",
                  "properties": {
                    "streetAddress1": {
                      "type": "string",
                      "description": "Street Address line 1."
                    },
                    "streetAddress2": {
                      "type": "string",
                      "description": "Street Address line 2."
                    },
                    "streetAddress3": {
                      "type": "string",
                      "description": "Street Address line 3."
                    },
                    "city": {
                      "type": "string",
                      "description": "Name of the City."
                    },
                    "stateOrProvince": {
                      "type": "string",
                      "description": "Name of the State or Province."
                    },
                    "country": {
                      "type": "string",
                      "description": "Name of the Country."
                    },
                    "postalCode": {
                      "type": "string",
                      "description": "Postal code."
                    },
                    "zipExtendedCode": {
                      "type": "string",
                      "description": "Extended Zip Code."
                    },
                    "companyName": {
                      "type": "string",
                      "description": "Name of the company."
                    },
                    "addressType": {
                      "type": "string",
                      "description": "Type of address.",
                      "default": "None",
                      "enum": [
                        "None",
                        "Residential",
                        "Commercial"
                      ],
                      "x-ms-enum": {
                        "name": "AddressType",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "None",
                            "value": "None",
                            "description": "Address type not known."
                          },
                          {
                            "name": "Residential",
                            "value": "Residential",
                            "description": "Residential Address."
                          },
                          {
                            "name": "Commercial",
                            "value": "Commercial",
                            "description": "Commercial Address."
                          }
                        ]
                      }
                    },
                    "skipAddressValidation": {
                      "type": "boolean",
                      "description": "Flag to indicate if customer has chosen to skip default address validation"
                    },
                    "taxIdentificationNumber": {
                      "type": "string",
                      "description": "Tax Identification Number"
                    }
                  },
                  "required": [
                    "streetAddress1",
                    "country"
                  ]
                },
                "isUpdated": {
                  "type": "boolean",
                  "description": "A flag to indicate whether Reverse Shipping details are updated or not after device has been prepared.\nRead only field",
                  "readOnly": true
                }
              }
            },
            "copyLogDetails": {
              "type": "array",
              "description": "List of copy log details.",
              "items": {
                "type": "object",
                "description": "Details for log generated during copy.",
                "properties": {
                  "copyLogDetailsType": {
                    "description": "Indicates the type of job details.",
                    "type": "string",
                    "enum": [
                      "DataBox",
                      "DataBoxDisk",
                      "DataBoxHeavy",
                      "DataBoxCustomerDisk"
                    ],
                    "x-ms-enum": {
                      "name": "ClassDiscriminator",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "DataBox",
                          "value": "DataBox",
                          "description": "Data Box orders."
                        },
                        {
                          "name": "DataBoxDisk",
                          "value": "DataBoxDisk",
                          "description": "Data Box Disk orders."
                        },
                        {
                          "name": "DataBoxHeavy",
                          "value": "DataBoxHeavy",
                          "description": "Data Box Heavy orders."
                        },
                        {
                          "name": "DataBoxCustomerDisk",
                          "value": "DataBoxCustomerDisk",
                          "description": "Data Box Customer Disk orders."
                        }
                      ]
                    }
                  }
                },
                "discriminator": "copyLogDetailsType",
                "required": [
                  "copyLogDetailsType"
                ]
              },
              "readOnly": true
            },
            "reverseShipmentLabelSasKey": {
              "type": "string",
              "description": "Shared access key to download the return shipment label",
              "readOnly": true
            },
            "chainOfCustodySasKey": {
              "type": "string",
              "description": "Shared access key to download the chain of custody logs",
              "readOnly": true
            },
            "deviceErasureDetails": {
              "description": "Holds device data erasure details",
              "readOnly": true,
              "type": "object",
              "properties": {
                "deviceErasureStatus": {
                  "description": "Holds the device erasure completion status",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "None",
                    "InProgress",
                    "Succeeded",
                    "Failed",
                    "Cancelled",
                    "Cancelling",
                    "SucceededWithErrors",
                    "WaitingForCustomerAction",
                    "SucceededWithWarnings",
                    "WaitingForCustomerActionForKek",
                    "WaitingForCustomerActionForCleanUp",
                    "CustomerActionPerformedForCleanUp",
                    "CustomerActionPerformed"
                  ],
                  "x-ms-enum": {
                    "name": "StageStatus",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "None",
                        "value": "None",
                        "description": "No status available yet."
                      },
                      {
                        "name": "InProgress",
                        "value": "InProgress",
                        "description": "Stage is in progress."
                      },
                      {
                        "name": "Succeeded",
                        "value": "Succeeded",
                        "description": "Stage has succeeded."
                      },
                      {
                        "name": "Failed",
                        "value": "Failed",
                        "description": "Stage has failed."
                      },
                      {
                        "name": "Cancelled",
                        "value": "Cancelled",
                        "description": "Stage has been cancelled."
                      },
                      {
                        "name": "Cancelling",
                        "value": "Cancelling",
                        "description": "Stage is cancelling."
                      },
                      {
                        "name": "SucceededWithErrors",
                        "value": "SucceededWithErrors",
                        "description": "Stage has succeeded with errors."
                      },
                      {
                        "name": "WaitingForCustomerAction",
                        "value": "WaitingForCustomerAction",
                        "description": "Stage is stuck until customer takes some action."
                      },
                      {
                        "name": "SucceededWithWarnings",
                        "value": "SucceededWithWarnings",
                        "description": "Stage has succeeded with warnings."
                      },
                      {
                        "name": "WaitingForCustomerActionForKek",
                        "value": "WaitingForCustomerActionForKek",
                        "description": "Stage is waiting for customer action for kek action items."
                      },
                      {
                        "name": "WaitingForCustomerActionForCleanUp",
                        "value": "WaitingForCustomerActionForCleanUp",
                        "description": "Stage is waiting for customer action for clean up."
                      },
                      {
                        "name": "CustomerActionPerformedForCleanUp",
                        "value": "CustomerActionPerformedForCleanUp",
                        "description": "Stage has performed customer action for clean up."
                      },
                      {
                        "name": "CustomerActionPerformed",
                        "value": "CustomerActionPerformed",
                        "description": "Stage has performed customer action for clean up."
                      }
                    ]
                  }
                },
                "erasureOrDestructionCertificateSasKey": {
                  "type": "string",
                  "description": "Shared access key to download cleanup or destruction certificate for device",
                  "readOnly": true
                },
                "secureErasureCertificateSasKey": {
                  "type": "string",
                  "description": "Shared access key to download secure erasure certificate for the device",
                  "readOnly": true
                }
              }
            },
            "keyEncryptionKey": {
              "description": "Details about which key encryption type is being used.",
              "type": "object",
              "properties": {
                "kekType": {
                  "type": "string",
                  "description": "Type of encryption key used for key encryption.",
                  "default": "MicrosoftManaged",
                  "enum": [
                    "MicrosoftManaged",
                    "CustomerManaged"
                  ],
                  "x-ms-enum": {
                    "name": "KekType",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "MicrosoftManaged",
                        "value": "MicrosoftManaged",
                        "description": "Key encryption key is managed by Microsoft."
                      },
                      {
                        "name": "CustomerManaged",
                        "value": "CustomerManaged",
                        "description": "Key encryption key is managed by the Customer."
                      }
                    ]
                  }
                },
                "identityProperties": {
                  "description": "Managed identity properties used for key encryption.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Managed service identity type."
                    },
                    "userAssigned": {
                      "description": "User assigned identity properties.",
                      "type": "object",
                      "properties": {
                        "resourceId": {
                          "type": "string",
                          "description": "Arm resource id for user assigned identity to be used to fetch MSI token."
                        }
                      }
                    }
                  }
                },
                "kekUrl": {
                  "type": "string",
                  "description": "Key encryption key. It is required in case of Customer managed KekType."
                },
                "kekVaultResourceID": {
                  "type": "string",
                  "description": "Kek vault resource id. It is required in case of Customer managed KekType."
                }
              },
              "required": [
                "kekType"
              ]
            },
            "expectedDataSizeInTeraBytes": {
              "type": "integer",
              "format": "int32",
              "description": "The expected size of the data, which needs to be transferred in this job, in terabytes."
            },
            "actions": {
              "type": "array",
              "description": "Available actions on the job.",
              "items": {
                "type": "string",
                "description": "Resolution code provided by customer.",
                "enum": [
                  "None",
                  "MoveToCleanUpDevice",
                  "Resume",
                  "Restart",
                  "ReachOutToOperation"
                ],
                "x-ms-enum": {
                  "name": "CustomerResolutionCode",
                  "modelAsString": false,
                  "values": [
                    {
                      "name": "None",
                      "value": "None",
                      "description": "No Resolution Yet"
                    },
                    {
                      "name": "MoveToCleanUpDevice",
                      "value": "MoveToCleanUpDevice",
                      "description": "Clean the device"
                    },
                    {
                      "name": "Resume",
                      "value": "Resume",
                      "description": "Resume the job to same stage"
                    },
                    {
                      "name": "Restart",
                      "value": "Restart",
                      "description": "Restart whole action."
                    },
                    {
                      "name": "ReachOutToOperation",
                      "value": "ReachOutToOperation",
                      "description": "Reach out to operation for further action."
                    }
                  ]
                }
              },
              "readOnly": true
            },
            "lastMitigationActionOnJob": {
              "description": "Last mitigation action performed on the job.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "actionDateTimeInUtc": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Action performed date time"
                },
                "isPerformedByCustomer": {
                  "type": "boolean",
                  "description": "Action performed by customer,\npossibility is that mitigation might happen by customer or service or by ops"
                },
                "customerResolution": {
                  "type": "string",
                  "description": "Resolution code provided by customer.",
                  "enum": [
                    "None",
                    "MoveToCleanUpDevice",
                    "Resume",
                    "Restart",
                    "ReachOutToOperation"
                  ],
                  "x-ms-enum": {
                    "name": "CustomerResolutionCode",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "None",
                        "value": "None",
                        "description": "No Resolution Yet"
                      },
                      {
                        "name": "MoveToCleanUpDevice",
                        "value": "MoveToCleanUpDevice",
                        "description": "Clean the device"
                      },
                      {
                        "name": "Resume",
                        "value": "Resume",
                        "description": "Resume the job to same stage"
                      },
                      {
                        "name": "Restart",
                        "value": "Restart",
                        "description": "Restart whole action."
                      },
                      {
                        "name": "ReachOutToOperation",
                        "value": "ReachOutToOperation",
                        "description": "Reach out to operation for further action."
                      }
                    ]
                  }
                }
              }
            },
            "datacenterAddress": {
              "description": "Datacenter address to ship to, for the given sku and storage location.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "datacenterAddressType": {
                  "description": "Data center address type",
                  "type": "string",
                  "enum": [
                    "DatacenterAddressLocation",
                    "DatacenterAddressInstruction"
                  ],
                  "x-ms-enum": {
                    "name": "DatacenterAddressType",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "DatacenterAddressLocation",
                        "value": "DatacenterAddressLocation",
                        "description": "Data center address location."
                      },
                      {
                        "name": "DatacenterAddressInstruction",
                        "value": "DatacenterAddressInstruction",
                        "description": "Data center address instruction."
                      }
                    ]
                  }
                },
                "supportedCarriersForReturnShipment": {
                  "type": "array",
                  "description": "List of supported carriers for return shipment.",
                  "items": {
                    "type": "string"
                  },
                  "readOnly": true
                },
                "dataCenterAzureLocation": {
                  "type": "string",
                  "description": "Azure Location where the Data Center serves primarily.",
                  "readOnly": true
                }
              },
              "discriminator": "datacenterAddressType",
              "required": [
                "datacenterAddressType"
              ]
            },
            "dataCenterCode": {
              "description": "DataCenter code.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Invalid",
                "BY2",
                "BY1",
                "ORK70",
                "AM2",
                "AMS20",
                "BY21",
                "BY24",
                "MWH01",
                "AMS06",
                "SSE90",
                "SYD03",
                "SYD23",
                "CBR20",
                "YTO20",
                "CWL20",
                "LON24",
                "BOM01",
                "BL20",
                "BL7",
                "SEL20",
                "TYO01",
                "BN1",
                "SN5",
                "CYS04",
                "TYO22",
                "YTO21",
                "YQB20",
                "FRA22",
                "MAA01",
                "CPQ02",
                "CPQ20",
                "SIN20",
                "HKG20",
                "SG2",
                "MEL23",
                "SEL21",
                "OSA20",
                "SHA03",
                "BJB",
                "JNB22",
                "JNB21",
                "MNZ21",
                "SN8",
                "AUH20",
                "ZRH20",
                "PUS20",
                "AdHoc",
                "CH1",
                "DSM05",
                "DUB07",
                "PNQ01",
                "SVG20",
                "OSA02",
                "OSA22",
                "PAR22",
                "BN7",
                "SN6",
                "BJS20",
                "BL24",
                "IDC5",
                "TYO23",
                "NTG20",
                "DXB23",
                "DSM11",
                "AMS25",
                "CPQ21",
                "OSA23"
              ],
              "x-ms-enum": {
                "name": "DataCenterCode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Invalid",
                    "value": "Invalid"
                  },
                  {
                    "name": "BY2",
                    "value": "BY2"
                  },
                  {
                    "name": "BY1",
                    "value": "BY1"
                  },
                  {
                    "name": "ORK70",
                    "value": "ORK70"
                  },
                  {
                    "name": "AM2",
                    "value": "AM2"
                  },
                  {
                    "name": "AMS20",
                    "value": "AMS20"
                  },
                  {
                    "name": "BY21",
                    "value": "BY21"
                  },
                  {
                    "name": "BY24",
                    "value": "BY24"
                  },
                  {
                    "name": "MWH01",
                    "value": "MWH01"
                  },
                  {
                    "name": "AMS06",
                    "value": "AMS06"
                  },
                  {
                    "name": "SSE90",
                    "value": "SSE90"
                  },
                  {
                    "name": "SYD03",
                    "value": "SYD03"
                  },
                  {
                    "name": "SYD23",
                    "value": "SYD23"
                  },
                  {
                    "name": "CBR20",
                    "value": "CBR20"
                  },
                  {
                    "name": "YTO20",
                    "value": "YTO20"
                  },
                  {
                    "name": "CWL20",
                    "value": "CWL20"
                  },
                  {
                    "name": "LON24",
                    "value": "LON24"
                  },
                  {
                    "name": "BOM01",
                    "value": "BOM01"
                  },
                  {
                    "name": "BL20",
                    "value": "BL20"
                  },
                  {
                    "name": "BL7",
                    "value": "BL7"
                  },
                  {
                    "name": "SEL20",
                    "value": "SEL20"
                  },
                  {
                    "name": "TYO01",
                    "value": "TYO01"
                  },
                  {
                    "name": "BN1",
                    "value": "BN1"
                  },
                  {
                    "name": "SN5",
                    "value": "SN5"
                  },
                  {
                    "name": "CYS04",
                    "value": "CYS04"
                  },
                  {
                    "name": "TYO22",
                    "value": "TYO22"
                  },
                  {
                    "name": "YTO21",
                    "value": "YTO21"
                  },
                  {
                    "name": "YQB20",
                    "value": "YQB20"
                  },
                  {
                    "name": "FRA22",
                    "value": "FRA22"
                  },
                  {
                    "name": "MAA01",
                    "value": "MAA01"
                  },
                  {
                    "name": "CPQ02",
                    "value": "CPQ02"
                  },
                  {
                    "name": "CPQ20",
                    "value": "CPQ20"
                  },
                  {
                    "name": "SIN20",
                    "value": "SIN20"
                  },
                  {
                    "name": "HKG20",
                    "value": "HKG20"
                  },
                  {
                    "name": "SG2",
                    "value": "SG2"
                  },
                  {
                    "name": "MEL23",
                    "value": "MEL23"
                  },
                  {
                    "name": "SEL21",
                    "value": "SEL21"
                  },
                  {
                    "name": "OSA20",
                    "value": "OSA20"
                  },
                  {
                    "name": "SHA03",
                    "value": "SHA03"
                  },
                  {
                    "name": "BJB",
                    "value": "BJB"
                  },
                  {
                    "name": "JNB22",
                    "value": "JNB22"
                  },
                  {
                    "name": "JNB21",
                    "value": "JNB21"
                  },
                  {
                    "name": "MNZ21",
                    "value": "MNZ21"
                  },
                  {
                    "name": "SN8",
                    "value": "SN8"
                  },
                  {
                    "name": "AUH20",
                    "value": "AUH20"
                  },
                  {
                    "name": "ZRH20",
                    "value": "ZRH20"
                  },
                  {
                    "name": "PUS20",
                    "value": "PUS20"
                  },
                  {
                    "name": "AdHoc",
                    "value": "AdHoc"
                  },
                  {
                    "name": "CH1",
                    "value": "CH1"
                  },
                  {
                    "name": "DSM05",
                    "value": "DSM05"
                  },
                  {
                    "name": "DUB07",
                    "value": "DUB07"
                  },
                  {
                    "name": "PNQ01",
                    "value": "PNQ01"
                  },
                  {
                    "name": "SVG20",
                    "value": "SVG20"
                  },
                  {
                    "name": "OSA02",
                    "value": "OSA02"
                  },
                  {
                    "name": "OSA22",
                    "value": "OSA22"
                  },
                  {
                    "name": "PAR22",
                    "value": "PAR22"
                  },
                  {
                    "name": "BN7",
                    "value": "BN7"
                  },
                  {
                    "name": "SN6",
                    "value": "SN6"
                  },
                  {
                    "name": "BJS20",
                    "value": "BJS20"
                  },
                  {
                    "name": "BL24",
                    "value": "BL24"
                  },
                  {
                    "name": "IDC5",
                    "value": "IDC5"
                  },
                  {
                    "name": "TYO23",
                    "value": "TYO23"
                  },
                  {
                    "name": "NTG20",
                    "value": "NTG20"
                  },
                  {
                    "name": "DXB23",
                    "value": "DXB23"
                  },
                  {
                    "name": "DSM11",
                    "value": "DSM11"
                  },
                  {
                    "name": "AMS25",
                    "value": "AMS25"
                  },
                  {
                    "name": "CPQ21",
                    "value": "CPQ21"
                  },
                  {
                    "name": "OSA23",
                    "value": "OSA23"
                  }
                ]
              }
            }
          },
          "discriminator": "jobDetailsType",
          "required": [
            "contactDetails",
            "jobDetailsType"
          ]
        },
        "cancellationReason": {
          "type": "string",
          "description": "Reason for cancellation.",
          "readOnly": true
        },
        "deliveryType": {
          "type": "string",
          "description": "Delivery type of Job.",
          "default": "NonScheduled",
          "enum": [
            "NonScheduled",
            "Scheduled"
          ],
          "x-ms-enum": {
            "name": "JobDeliveryType",
            "modelAsString": false,
            "values": [
              {
                "name": "NonScheduled",
                "value": "NonScheduled",
                "description": "Non Scheduled job."
              },
              {
                "name": "Scheduled",
                "value": "Scheduled",
                "description": "Scheduled job."
              }
            ]
          }
        },
        "deliveryInfo": {
          "description": "Delivery Info of Job.",
          "type": "object",
          "properties": {
            "scheduledDateTime": {
              "type": "string",
              "format": "date-time",
              "description": "Scheduled date time."
            }
          }
        },
        "isCancellableWithoutFee": {
          "type": "boolean",
          "description": "Flag to indicate cancellation of scheduled job.",
          "readOnly": true
        },
        "allDevicesLost": {
          "type": "boolean",
          "description": "Flag to indicate if all devices associated with the job are lost.",
          "readOnly": true
        }
      },
      "required": [
        "transferType"
      ]
    },
    "JobResource": {
      "type": "object",
      "description": "Job Resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "Properties of a job.",
          "x-ms-client-flatten": true
        },
        "sku": {
          "description": "The sku type.",
          "type": "object",
          "properties": {
            "name": {
              "description": "The sku name.",
              "type": "string",
              "enum": [
                "DataBox",
                "DataBoxDisk",
                "DataBoxHeavy",
                "DataBoxCustomerDisk"
              ],
              "x-ms-enum": {
                "name": "SkuName",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DataBox",
                    "value": "DataBox",
                    "description": "Data Box."
                  },
                  {
                    "name": "DataBoxDisk",
                    "value": "DataBoxDisk",
                    "description": "Data Box Disk."
                  },
                  {
                    "name": "DataBoxHeavy",
                    "value": "DataBoxHeavy",
                    "description": "Data Box Heavy."
                  },
                  {
                    "name": "DataBoxCustomerDisk",
                    "value": "DataBoxCustomerDisk",
                    "description": "Data Box Customer Disk"
                  }
                ]
              }
            },
            "displayName": {
              "type": "string",
              "description": "The display name of the sku."
            },
            "family": {
              "type": "string",
              "description": "The sku family."
            },
            "model": {
              "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
              "type": "string",
              "enum": [
                "DataBox",
                "DataBoxDisk",
                "DataBoxHeavy",
                "DataBoxCustomerDisk",
                "AzureDataBox120",
                "AzureDataBox525"
              ],
              "x-ms-enum": {
                "name": "ModelName",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DataBox",
                    "value": "DataBox",
                    "description": "Data Box."
                  },
                  {
                    "name": "DataBoxDisk",
                    "value": "DataBoxDisk",
                    "description": "Data Box Disk."
                  },
                  {
                    "name": "DataBoxHeavy",
                    "value": "DataBoxHeavy",
                    "description": "Data Box Heavy."
                  },
                  {
                    "name": "DataBoxCustomerDisk",
                    "value": "DataBoxCustomerDisk",
                    "description": "Data Box Customer Disk"
                  },
                  {
                    "name": "AzureDataBox120",
                    "value": "AzureDataBox120",
                    "description": "Data Box V2 with 120TB usable capacity."
                  },
                  {
                    "name": "AzureDataBox525",
                    "value": "AzureDataBox525",
                    "description": "Data Box V2 with 525TB usable capacity."
                  }
                ]
              }
            }
          },
          "required": [
            "name"
          ]
        },
        "identity": {
          "description": "Msi identity of the resource",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Identity type",
              "default": "None"
            },
            "principalId": {
              "type": "string",
              "description": "Service Principal Id backing the Msi",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "description": "Home Tenant Id",
              "readOnly": true
            },
            "userAssignedIdentities": {
              "type": "object",
              "description": "User Assigned Identities",
              "additionalProperties": {
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "properties",
        "sku"
      ],
      "allOf": [
        {
          "type": "object",
          "title": "Tracked Resource",
          "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
          "properties": {
            "id": {
              "type": "string",
              "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "description": "The name of the resource",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
              "readOnly": true
            },
            "systemData": {
              "type": "object",
              "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
              "readOnly": true,
              "properties": {
                "createdBy": {
                  "type": "string",
                  "description": "The identity that created the resource."
                },
                "createdByType": {
                  "type": "string",
                  "description": "The type of identity that created the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource creation (UTC)."
                },
                "lastModifiedBy": {
                  "type": "string",
                  "description": "The identity that last modified the resource."
                },
                "lastModifiedByType": {
                  "type": "string",
                  "description": "The type of identity that last modified the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "lastModifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource last modification (UTC)"
                }
              }
            },
            "tags": {
              "type": "object",
              "description": "Resource tags.",
              "additionalProperties": {
                "type": "string"
              },
              "x-ms-mutability": [
                "read",
                "create",
                "update"
              ]
            },
            "location": {
              "type": "string",
              "description": "The geo-location where the resource lives",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            }
          },
          "required": [
            "location"
          ]
        }
      ]
    },
    "JobResourceList": {
      "type": "object",
      "description": "Job Resource Collection",
      "properties": {
        "value": {
          "type": "array",
          "description": "The JobResource items on this page",
          "items": {
            "$ref": "#/definitions/JobResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "JobResourceUpdateParameter": {
      "type": "object",
      "description": "The JobResourceUpdateParameter.",
      "properties": {
        "properties": {
          "description": "Properties of a job to be updated.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "details": {
              "description": "Details of a job to be updated.",
              "type": "object",
              "properties": {
                "contactDetails": {
                  "description": "Contact details for notification and shipping.",
                  "type": "object",
                  "properties": {
                    "contactName": {
                      "type": "string",
                      "description": "Contact name of the person."
                    },
                    "phone": {
                      "type": "string",
                      "description": "Phone number of the contact person."
                    },
                    "phoneExtension": {
                      "type": "string",
                      "description": "Phone extension number of the contact person."
                    },
                    "mobile": {
                      "type": "string",
                      "description": "Mobile number of the contact person."
                    },
                    "emailList": {
                      "type": "array",
                      "description": "List of Email-ids to be notified about job progress.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "notificationPreference": {
                      "type": "array",
                      "description": "Notification preference for a job stage.",
                      "items": {
                        "type": "object",
                        "description": "Notification preference for a job stage.",
                        "properties": {
                          "stageName": {
                            "description": "Name of the stage.",
                            "type": "string",
                            "enum": [
                              "DevicePrepared",
                              "Dispatched",
                              "Delivered",
                              "PickedUp",
                              "AtAzureDC",
                              "DataCopy",
                              "Created",
                              "ShippedToCustomer"
                            ],
                            "x-ms-enum": {
                              "name": "NotificationStageName",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "DevicePrepared",
                                  "value": "DevicePrepared",
                                  "description": "Notification at device prepared stage."
                                },
                                {
                                  "name": "Dispatched",
                                  "value": "Dispatched",
                                  "description": "Notification at device dispatched stage."
                                },
                                {
                                  "name": "Delivered",
                                  "value": "Delivered",
                                  "description": "Notification at device delivered stage."
                                },
                                {
                                  "name": "PickedUp",
                                  "value": "PickedUp",
                                  "description": "Notification at device picked up from user stage."
                                },
                                {
                                  "name": "AtAzureDC",
                                  "value": "AtAzureDC",
                                  "description": "Notification at device received at Azure datacenter stage."
                                },
                                {
                                  "name": "DataCopy",
                                  "value": "DataCopy",
                                  "description": "Notification at data copy started stage."
                                },
                                {
                                  "name": "Created",
                                  "value": "Created",
                                  "description": "Notification at job created stage."
                                },
                                {
                                  "name": "ShippedToCustomer",
                                  "value": "ShippedToCustomer",
                                  "description": "Notification at shipped devices to customer stage."
                                }
                              ]
                            }
                          },
                          "sendNotification": {
                            "type": "boolean",
                            "description": "Notification is required or not.",
                            "default": true
                          }
                        },
                        "required": [
                          "stageName",
                          "sendNotification"
                        ]
                      }
                    }
                  },
                  "required": [
                    "contactName",
                    "phone",
                    "emailList"
                  ]
                },
                "shippingAddress": {
                  "type": "object",
                  "description": "Shipping address where customer wishes to receive the device.",
                  "properties": {
                    "streetAddress1": {
                      "type": "string",
                      "description": "Street Address line 1."
                    },
                    "streetAddress2": {
                      "type": "string",
                      "description": "Street Address line 2."
                    },
                    "streetAddress3": {
                      "type": "string",
                      "description": "Street Address line 3."
                    },
                    "city": {
                      "type": "string",
                      "description": "Name of the City."
                    },
                    "stateOrProvince": {
                      "type": "string",
                      "description": "Name of the State or Province."
                    },
                    "country": {
                      "type": "string",
                      "description": "Name of the Country."
                    },
                    "postalCode": {
                      "type": "string",
                      "description": "Postal code."
                    },
                    "zipExtendedCode": {
                      "type": "string",
                      "description": "Extended Zip Code."
                    },
                    "companyName": {
                      "type": "string",
                      "description": "Name of the company."
                    },
                    "addressType": {
                      "type": "string",
                      "description": "Type of address.",
                      "default": "None",
                      "enum": [
                        "None",
                        "Residential",
                        "Commercial"
                      ],
                      "x-ms-enum": {
                        "name": "AddressType",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "None",
                            "value": "None",
                            "description": "Address type not known."
                          },
                          {
                            "name": "Residential",
                            "value": "Residential",
                            "description": "Residential Address."
                          },
                          {
                            "name": "Commercial",
                            "value": "Commercial",
                            "description": "Commercial Address."
                          }
                        ]
                      }
                    },
                    "skipAddressValidation": {
                      "type": "boolean",
                      "description": "Flag to indicate if customer has chosen to skip default address validation"
                    },
                    "taxIdentificationNumber": {
                      "type": "string",
                      "description": "Tax Identification Number"
                    }
                  },
                  "required": [
                    "streetAddress1",
                    "country"
                  ]
                },
                "reverseShippingDetails": {
                  "description": "Reverse Shipping Address and contact details for a job.",
                  "type": "object",
                  "properties": {
                    "contactDetails": {
                      "description": "Contact Info.",
                      "type": "object",
                      "properties": {
                        "contactName": {
                          "type": "string",
                          "description": "Contact name of the person.",
                          "minLength": 1
                        },
                        "phone": {
                          "type": "string",
                          "description": "Phone number of the contact person.",
                          "minLength": 1
                        },
                        "phoneExtension": {
                          "type": "string",
                          "description": "Phone extension number of the contact person."
                        },
                        "mobile": {
                          "type": "string",
                          "description": "Mobile number of the contact person."
                        }
                      },
                      "required": [
                        "contactName",
                        "phone"
                      ]
                    },
                    "shippingAddress": {
                      "description": "Shipping address where customer wishes to receive the device.",
                      "type": "object",
                      "properties": {
                        "streetAddress1": {
                          "type": "string",
                          "description": "Street Address line 1."
                        },
                        "streetAddress2": {
                          "type": "string",
                          "description": "Street Address line 2."
                        },
                        "streetAddress3": {
                          "type": "string",
                          "description": "Street Address line 3."
                        },
                        "city": {
                          "type": "string",
                          "description": "Name of the City."
                        },
                        "stateOrProvince": {
                          "type": "string",
                          "description": "Name of the State or Province."
                        },
                        "country": {
                          "type": "string",
                          "description": "Name of the Country."
                        },
                        "postalCode": {
                          "type": "string",
                          "description": "Postal code."
                        },
                        "zipExtendedCode": {
                          "type": "string",
                          "description": "Extended Zip Code."
                        },
                        "companyName": {
                          "type": "string",
                          "description": "Name of the company."
                        },
                        "addressType": {
                          "type": "string",
                          "description": "Type of address.",
                          "default": "None",
                          "enum": [
                            "None",
                            "Residential",
                            "Commercial"
                          ],
                          "x-ms-enum": {
                            "name": "AddressType",
                            "modelAsString": false,
                            "values": [
                              {
                                "name": "None",
                                "value": "None",
                                "description": "Address type not known."
                              },
                              {
                                "name": "Residential",
                                "value": "Residential",
                                "description": "Residential Address."
                              },
                              {
                                "name": "Commercial",
                                "value": "Commercial",
                                "description": "Commercial Address."
                              }
                            ]
                          }
                        },
                        "skipAddressValidation": {
                          "type": "boolean",
                          "description": "Flag to indicate if customer has chosen to skip default address validation"
                        },
                        "taxIdentificationNumber": {
                          "type": "string",
                          "description": "Tax Identification Number"
                        }
                      },
                      "required": [
                        "streetAddress1",
                        "country"
                      ]
                    },
                    "isUpdated": {
                      "type": "boolean",
                      "description": "A flag to indicate whether Reverse Shipping details are updated or not after device has been prepared.\nRead only field",
                      "readOnly": true
                    }
                  }
                },
                "preferences": {
                  "description": "Preferences related to the order",
                  "type": "object",
                  "properties": {
                    "preferredDataCenterRegion": {
                      "type": "array",
                      "description": "Preferred data center region.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "transportPreferences": {
                      "description": "Preferences related to the shipment logistics of the sku.",
                      "type": "object",
                      "properties": {
                        "preferredShipmentType": {
                          "description": "Indicates Shipment Logistics type that the customer preferred.",
                          "type": "string",
                          "enum": [
                            "CustomerManaged",
                            "MicrosoftManaged"
                          ],
                          "x-ms-enum": {
                            "name": "TransportShipmentTypes",
                            "modelAsString": false,
                            "values": [
                              {
                                "name": "CustomerManaged",
                                "value": "CustomerManaged",
                                "description": "Shipment Logistics is handled by the customer."
                              },
                              {
                                "name": "MicrosoftManaged",
                                "value": "MicrosoftManaged",
                                "description": "Shipment Logistics is handled by Microsoft."
                              }
                            ]
                          }
                        },
                        "isUpdated": {
                          "type": "boolean",
                          "description": "Read only property which indicates whether transport preferences has been updated or not after device is prepared.",
                          "readOnly": true
                        }
                      },
                      "required": [
                        "preferredShipmentType"
                      ]
                    },
                    "reverseTransportPreferences": {
                      "description": "Optional Preferences related to the reverse shipment logistics of the sku.",
                      "type": "object",
                      "properties": {
                        "preferredShipmentType": {
                          "description": "Indicates Shipment Logistics type that the customer preferred.",
                          "type": "string",
                          "enum": [
                            "CustomerManaged",
                            "MicrosoftManaged"
                          ],
                          "x-ms-enum": {
                            "name": "TransportShipmentTypes",
                            "modelAsString": false,
                            "values": [
                              {
                                "name": "CustomerManaged",
                                "value": "CustomerManaged",
                                "description": "Shipment Logistics is handled by the customer."
                              },
                              {
                                "name": "MicrosoftManaged",
                                "value": "MicrosoftManaged",
                                "description": "Shipment Logistics is handled by Microsoft."
                              }
                            ]
                          }
                        },
                        "isUpdated": {
                          "type": "boolean",
                          "description": "Read only property which indicates whether transport preferences has been updated or not after device is prepared.",
                          "readOnly": true
                        }
                      },
                      "required": [
                        "preferredShipmentType"
                      ]
                    },
                    "encryptionPreferences": {
                      "description": "Preferences related to the Encryption.",
                      "type": "object",
                      "properties": {
                        "doubleEncryption": {
                          "type": "string",
                          "description": "Defines secondary layer of software-based encryption enablement.",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "DoubleEncryption",
                            "modelAsString": false,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Software-based encryption is enabled."
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Software-based encryption is disabled."
                              }
                            ]
                          }
                        },
                        "hardwareEncryption": {
                          "description": "Defines Hardware level encryption (Only for disk)",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "HardwareEncryption",
                            "modelAsString": false,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Hardware-based encryption is enabled."
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Hardware-based encryption is disabled."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "storageAccountAccessTierPreferences": {
                      "type": "array",
                      "description": "Preferences related to the Access Tier of storage accounts.",
                      "items": {
                        "type": "string",
                        "enum": [
                          "Archive"
                        ],
                        "x-ms-enum": {
                          "modelAsString": false
                        }
                      }
                    }
                  }
                },
                "keyEncryptionKey": {
                  "description": "Key encryption key for the job.",
                  "type": "object",
                  "properties": {
                    "kekType": {
                      "type": "string",
                      "description": "Type of encryption key used for key encryption.",
                      "default": "MicrosoftManaged",
                      "enum": [
                        "MicrosoftManaged",
                        "CustomerManaged"
                      ],
                      "x-ms-enum": {
                        "name": "KekType",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "MicrosoftManaged",
                            "value": "MicrosoftManaged",
                            "description": "Key encryption key is managed by Microsoft."
                          },
                          {
                            "name": "CustomerManaged",
                            "value": "CustomerManaged",
                            "description": "Key encryption key is managed by the Customer."
                          }
                        ]
                      }
                    },
                    "identityProperties": {
                      "description": "Managed identity properties used for key encryption.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Managed service identity type."
                        },
                        "userAssigned": {
                          "description": "User assigned identity properties.",
                          "type": "object",
                          "properties": {
                            "resourceId": {
                              "type": "string",
                              "description": "Arm resource id for user assigned identity to be used to fetch MSI token."
                            }
                          }
                        }
                      }
                    },
                    "kekUrl": {
                      "type": "string",
                      "description": "Key encryption key. It is required in case of Customer managed KekType."
                    },
                    "kekVaultResourceID": {
                      "type": "string",
                      "description": "Kek vault resource id. It is required in case of Customer managed KekType."
                    }
                  },
                  "required": [
                    "kekType"
                  ]
                },
                "returnToCustomerPackageDetails": {
                  "description": "Return package details of job.",
                  "type": "object",
                  "properties": {
                    "carrierAccountNumber": {
                      "type": "string",
                      "format": "password",
                      "description": "Carrier Account Number of customer for customer disk.",
                      "x-ms-secret": true
                    },
                    "carrierName": {
                      "type": "string",
                      "description": "Name of the carrier."
                    },
                    "trackingId": {
                      "type": "string",
                      "description": "Tracking Id of shipment."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "The list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups).",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "description": "Msi identity of the resource",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Identity type",
              "default": "None"
            },
            "principalId": {
              "type": "string",
              "description": "Service Principal Id backing the Msi",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "description": "Home Tenant Id",
              "readOnly": true
            },
            "userAssignedIdentities": {
              "type": "object",
              "description": "User Assigned Identities",
              "additionalProperties": {
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "JobSecrets": {
      "type": "object",
      "description": "The base class for the secrets",
      "properties": {
        "jobSecretsType": {
          "description": "Used to indicate what type of job secrets object.",
          "type": "string",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy",
            "DataBoxCustomerDisk"
          ],
          "x-ms-enum": {
            "name": "ClassDiscriminator",
            "modelAsString": false,
            "values": [
              {
                "name": "DataBox",
                "value": "DataBox",
                "description": "Data Box orders."
              },
              {
                "name": "DataBoxDisk",
                "value": "DataBoxDisk",
                "description": "Data Box Disk orders."
              },
              {
                "name": "DataBoxHeavy",
                "value": "DataBoxHeavy",
                "description": "Data Box Heavy orders."
              },
              {
                "name": "DataBoxCustomerDisk",
                "value": "DataBoxCustomerDisk",
                "description": "Data Box Customer Disk orders."
              }
            ]
          }
        },
        "dcAccessSecurityCode": {
          "description": "Dc Access Security Code for Customer Managed Shipping",
          "readOnly": true,
          "type": "object",
          "properties": {
            "reverseDCAccessCode": {
              "type": "string",
              "description": "Reverse Dc access security code."
            },
            "forwardDCAccessCode": {
              "type": "string",
              "description": "Forward Dc access security code."
            }
          }
        },
        "error": {
          "$ref": "#/definitions/CloudError",
          "description": "Error while fetching the secrets.",
          "readOnly": true
        }
      },
      "discriminator": "jobSecretsType",
      "required": [
        "jobSecretsType"
      ]
    },
    "JobStages": {
      "type": "object",
      "description": "Job stages.",
      "properties": {
        "stageName": {
          "description": "Name of the job stage.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "DeviceOrdered",
            "DevicePrepared",
            "Dispatched",
            "Delivered",
            "PickedUp",
            "AtAzureDC",
            "DataCopy",
            "Completed",
            "CompletedWithErrors",
            "Cancelled",
            "Failed_IssueReportedAtCustomer",
            "Failed_IssueDetectedAtAzureDC",
            "Aborted",
            "CompletedWithWarnings",
            "ReadyToDispatchFromAzureDC",
            "ReadyToReceiveAtAzureDC",
            "Created",
            "ShippedToAzureDC",
            "AwaitingShipmentDetails",
            "PreparingToShipFromAzureDC",
            "ShippedToCustomer"
          ],
          "x-ms-enum": {
            "name": "StageName",
            "modelAsString": true,
            "values": [
              {
                "name": "DeviceOrdered",
                "value": "DeviceOrdered",
                "description": "An order has been created."
              },
              {
                "name": "DevicePrepared",
                "value": "DevicePrepared",
                "description": "A device has been prepared for the order."
              },
              {
                "name": "Dispatched",
                "value": "Dispatched",
                "description": "Device has been dispatched to the user of the order."
              },
              {
                "name": "Delivered",
                "value": "Delivered",
                "description": "Device has been delivered to the user of the order."
              },
              {
                "name": "PickedUp",
                "value": "PickedUp",
                "description": "Device has been picked up from user and in transit to Azure datacenter."
              },
              {
                "name": "AtAzureDC",
                "value": "AtAzureDC",
                "description": "Device has been received at Azure datacenter from the user."
              },
              {
                "name": "DataCopy",
                "value": "DataCopy",
                "description": "Data copy from the device at Azure datacenter."
              },
              {
                "name": "Completed",
                "value": "Completed",
                "description": "Order has completed."
              },
              {
                "name": "CompletedWithErrors",
                "value": "CompletedWithErrors",
                "description": "Order has completed with errors."
              },
              {
                "name": "Cancelled",
                "value": "Cancelled",
                "description": "Order has been cancelled."
              },
              {
                "name": "Failed_IssueReportedAtCustomer",
                "value": "Failed_IssueReportedAtCustomer",
                "description": "Order has failed due to issue reported by user."
              },
              {
                "name": "Failed_IssueDetectedAtAzureDC",
                "value": "Failed_IssueDetectedAtAzureDC",
                "description": "Order has failed due to issue detected at Azure datacenter."
              },
              {
                "name": "Aborted",
                "value": "Aborted",
                "description": "Order has been aborted."
              },
              {
                "name": "CompletedWithWarnings",
                "value": "CompletedWithWarnings",
                "description": "Order has completed with warnings."
              },
              {
                "name": "ReadyToDispatchFromAzureDC",
                "value": "ReadyToDispatchFromAzureDC",
                "description": "Device is ready to be handed to customer from Azure DC."
              },
              {
                "name": "ReadyToReceiveAtAzureDC",
                "value": "ReadyToReceiveAtAzureDC",
                "description": "Device can be dropped off at Azure DC."
              },
              {
                "name": "Created",
                "value": "Created",
                "description": "Job created by the customer."
              },
              {
                "name": "ShippedToAzureDC",
                "value": "ShippedToAzureDC",
                "description": "User shipped the device to AzureDC."
              },
              {
                "name": "AwaitingShipmentDetails",
                "value": "AwaitingShipmentDetails",
                "description": "Awaiting shipment details of device from customer."
              },
              {
                "name": "PreparingToShipFromAzureDC",
                "value": "PreparingToShipFromAzureDC",
                "description": "Preparing the device to ship to customer."
              },
              {
                "name": "ShippedToCustomer",
                "value": "ShippedToCustomer",
                "description": "Shipped the device to customer."
              }
            ]
          }
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the job stage.",
          "readOnly": true
        },
        "stageStatus": {
          "description": "Status of the job stage.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "None",
            "InProgress",
            "Succeeded",
            "Failed",
            "Cancelled",
            "Cancelling",
            "SucceededWithErrors",
            "WaitingForCustomerAction",
            "SucceededWithWarnings",
            "WaitingForCustomerActionForKek",
            "WaitingForCustomerActionForCleanUp",
            "CustomerActionPerformedForCleanUp",
            "CustomerActionPerformed"
          ],
          "x-ms-enum": {
            "name": "StageStatus",
            "modelAsString": false,
            "values": [
              {
                "name": "None",
                "value": "None",
                "description": "No status available yet."
              },
              {
                "name": "InProgress",
                "value": "InProgress",
                "description": "Stage is in progress."
              },
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Stage has succeeded."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Stage has failed."
              },
              {
                "name": "Cancelled",
                "value": "Cancelled",
                "description": "Stage has been cancelled."
              },
              {
                "name": "Cancelling",
                "value": "Cancelling",
                "description": "Stage is cancelling."
              },
              {
                "name": "SucceededWithErrors",
                "value": "SucceededWithErrors",
                "description": "Stage has succeeded with errors."
              },
              {
                "name": "WaitingForCustomerAction",
                "value": "WaitingForCustomerAction",
                "description": "Stage is stuck until customer takes some action."
              },
              {
                "name": "SucceededWithWarnings",
                "value": "SucceededWithWarnings",
                "description": "Stage has succeeded with warnings."
              },
              {
                "name": "WaitingForCustomerActionForKek",
                "value": "WaitingForCustomerActionForKek",
                "description": "Stage is waiting for customer action for kek action items."
              },
              {
                "name": "WaitingForCustomerActionForCleanUp",
                "value": "WaitingForCustomerActionForCleanUp",
                "description": "Stage is waiting for customer action for clean up."
              },
              {
                "name": "CustomerActionPerformedForCleanUp",
                "value": "CustomerActionPerformedForCleanUp",
                "description": "Stage has performed customer action for clean up."
              },
              {
                "name": "CustomerActionPerformed",
                "value": "CustomerActionPerformed",
                "description": "Stage has performed customer action for clean up."
              }
            ]
          }
        },
        "stageTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time for the job stage in UTC ISO 8601 format.",
          "readOnly": true
        },
        "jobStageDetails": {
          "description": "Job Stage Details",
          "readOnly": true
        },
        "delayInformation": {
          "type": "array",
          "description": "Delay information for the job stages.",
          "items": {
            "type": "object",
            "description": "Job Delay Notification details",
            "properties": {
              "status": {
                "description": "Status of notification",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "Active",
                  "Resolved"
                ],
                "x-ms-enum": {
                  "name": "DelayNotificationStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Active",
                      "value": "Active",
                      "description": "Delay is still active"
                    },
                    {
                      "name": "Resolved",
                      "value": "Resolved",
                      "description": "Delay has been resolved"
                    }
                  ]
                }
              },
              "errorCode": {
                "description": "Delay Error code",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "InternalIssueDelay",
                  "ActiveOrderLimitBreachedDelay",
                  "HighDemandDelay",
                  "LargeNumberOfFilesDelay"
                ],
                "x-ms-enum": {
                  "name": "PortalDelayErrorCode",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "InternalIssueDelay",
                      "value": "InternalIssueDelay",
                      "description": "Delay due to any internal reasons"
                    },
                    {
                      "name": "ActiveOrderLimitBreachedDelay",
                      "value": "ActiveOrderLimitBreachedDelay",
                      "description": "Active Order limit breached."
                    },
                    {
                      "name": "HighDemandDelay",
                      "value": "HighDemandDelay",
                      "description": "High demand"
                    },
                    {
                      "name": "LargeNumberOfFilesDelay",
                      "value": "LargeNumberOfFilesDelay",
                      "description": "Slow copy due to large number of files"
                    }
                  ]
                }
              },
              "description": {
                "type": "string",
                "description": "Description of the delay.",
                "readOnly": true
              },
              "startTime": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the delay notification was created.",
                "readOnly": true
              },
              "resolutionTime": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the delay notification was resolved.",
                "readOnly": true
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "KekType": {
      "type": "string",
      "description": "Type of encryption key used for key encryption.",
      "enum": [
        "MicrosoftManaged",
        "CustomerManaged"
      ],
      "x-ms-enum": {
        "name": "KekType",
        "modelAsString": false,
        "values": [
          {
            "name": "MicrosoftManaged",
            "value": "MicrosoftManaged",
            "description": "Key encryption key is managed by Microsoft."
          },
          {
            "name": "CustomerManaged",
            "value": "CustomerManaged",
            "description": "Key encryption key is managed by the Customer."
          }
        ]
      }
    },
    "KeyEncryptionKey": {
      "type": "object",
      "description": "Encryption key containing details about key to encrypt different keys.",
      "properties": {
        "kekType": {
          "type": "string",
          "description": "Type of encryption key used for key encryption.",
          "default": "MicrosoftManaged",
          "enum": [
            "MicrosoftManaged",
            "CustomerManaged"
          ],
          "x-ms-enum": {
            "name": "KekType",
            "modelAsString": false,
            "values": [
              {
                "name": "MicrosoftManaged",
                "value": "MicrosoftManaged",
                "description": "Key encryption key is managed by Microsoft."
              },
              {
                "name": "CustomerManaged",
                "value": "CustomerManaged",
                "description": "Key encryption key is managed by the Customer."
              }
            ]
          }
        },
        "identityProperties": {
          "description": "Managed identity properties used for key encryption.",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Managed service identity type."
            },
            "userAssigned": {
              "description": "User assigned identity properties.",
              "type": "object",
              "properties": {
                "resourceId": {
                  "type": "string",
                  "description": "Arm resource id for user assigned identity to be used to fetch MSI token."
                }
              }
            }
          }
        },
        "kekUrl": {
          "type": "string",
          "description": "Key encryption key. It is required in case of Customer managed KekType."
        },
        "kekVaultResourceID": {
          "type": "string",
          "description": "Kek vault resource id. It is required in case of Customer managed KekType."
        }
      },
      "required": [
        "kekType"
      ]
    },
    "LastMitigationActionOnJob": {
      "type": "object",
      "description": "Last Mitigation Action Performed On Job",
      "properties": {
        "actionDateTimeInUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Action performed date time"
        },
        "isPerformedByCustomer": {
          "type": "boolean",
          "description": "Action performed by customer,\npossibility is that mitigation might happen by customer or service or by ops"
        },
        "customerResolution": {
          "type": "string",
          "description": "Resolution code provided by customer.",
          "enum": [
            "None",
            "MoveToCleanUpDevice",
            "Resume",
            "Restart",
            "ReachOutToOperation"
          ],
          "x-ms-enum": {
            "name": "CustomerResolutionCode",
            "modelAsString": false,
            "values": [
              {
                "name": "None",
                "value": "None",
                "description": "No Resolution Yet"
              },
              {
                "name": "MoveToCleanUpDevice",
                "value": "MoveToCleanUpDevice",
                "description": "Clean the device"
              },
              {
                "name": "Resume",
                "value": "Resume",
                "description": "Resume the job to same stage"
              },
              {
                "name": "Restart",
                "value": "Restart",
                "description": "Restart whole action."
              },
              {
                "name": "ReachOutToOperation",
                "value": "ReachOutToOperation",
                "description": "Reach out to operation for further action."
              }
            ]
          }
        }
      }
    },
    "LogCollectionLevel": {
      "type": "string",
      "description": "Level of the logs to be collected.",
      "enum": [
        "Error",
        "Verbose"
      ],
      "x-ms-enum": {
        "name": "LogCollectionLevel",
        "modelAsString": false,
        "values": [
          {
            "name": "Error",
            "value": "Error",
            "description": "Only Errors will be collected in the logs."
          },
          {
            "name": "Verbose",
            "value": "Verbose",
            "description": "Verbose logging (includes Errors, CRC, size information and others)."
          }
        ]
      }
    },
    "ManagedDiskDetails": {
      "type": "object",
      "description": "Details of the managed disks.",
      "properties": {
        "resourceGroupId": {
          "type": "string",
          "description": "Resource Group Id of the compute disks."
        },
        "stagingStorageAccountId": {
          "type": "string",
          "description": "Resource Id of the storage account that can be used to copy the vhd for staging."
        }
      },
      "required": [
        "resourceGroupId",
        "stagingStorageAccountId"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Account details of the data to be transferred",
          "properties": {
            "dataAccountType": {
              "type": "string",
              "description": "Account Type of the data to be transferred.",
              "default": "StorageAccount",
              "enum": [
                "StorageAccount",
                "ManagedDisk"
              ],
              "x-ms-enum": {
                "name": "DataAccountType",
                "modelAsString": false,
                "values": [
                  {
                    "name": "StorageAccount",
                    "value": "StorageAccount",
                    "description": "Storage Accounts ."
                  },
                  {
                    "name": "ManagedDisk",
                    "value": "ManagedDisk",
                    "description": "Azure Managed disk storage."
                  }
                ]
              }
            },
            "sharePassword": {
              "type": "string",
              "format": "password",
              "description": "Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\\-$%^!+=;:_()]+",
              "x-ms-mutability": [
                "create"
              ],
              "x-ms-secret": true
            }
          },
          "discriminator": "dataAccountType",
          "required": [
            "dataAccountType"
          ]
        }
      ],
      "x-ms-discriminator-value": "ManagedDisk"
    },
    "MarkDevicesShippedRequest": {
      "type": "object",
      "description": "The request body to provide the delivery package details of job",
      "properties": {
        "deliverToDcPackageDetails": {
          "description": "Delivery package details",
          "type": "object",
          "properties": {
            "carrierName": {
              "type": "string",
              "description": "Name of the carrier."
            },
            "trackingId": {
              "type": "string",
              "description": "Tracking Id of shipment."
            }
          }
        }
      },
      "required": [
        "deliverToDcPackageDetails"
      ]
    },
    "MitigateJobRequest": {
      "type": "object",
      "description": "The Mitigate Job captured from request body for Mitigate API",
      "properties": {
        "customerResolutionCode": {
          "type": "string",
          "description": "Resolution code provided by customer.",
          "enum": [
            "None",
            "MoveToCleanUpDevice",
            "Resume",
            "Restart",
            "ReachOutToOperation"
          ],
          "x-ms-enum": {
            "name": "CustomerResolutionCode",
            "modelAsString": false,
            "values": [
              {
                "name": "None",
                "value": "None",
                "description": "No Resolution Yet"
              },
              {
                "name": "MoveToCleanUpDevice",
                "value": "MoveToCleanUpDevice",
                "description": "Clean the device"
              },
              {
                "name": "Resume",
                "value": "Resume",
                "description": "Resume the job to same stage"
              },
              {
                "name": "Restart",
                "value": "Restart",
                "description": "Restart whole action."
              },
              {
                "name": "ReachOutToOperation",
                "value": "ReachOutToOperation",
                "description": "Reach out to operation for further action."
              }
            ]
          }
        },
        "serialNumberCustomerResolutionMap": {
          "type": "object",
          "description": "Serial number and the customer resolution code corresponding to each serial number",
          "additionalProperties": {
            "type": "string",
            "description": "Resolution code provided by customer.",
            "enum": [
              "None",
              "MoveToCleanUpDevice",
              "Resume",
              "Restart",
              "ReachOutToOperation"
            ],
            "x-ms-enum": {
              "name": "CustomerResolutionCode",
              "modelAsString": false,
              "values": [
                {
                  "name": "None",
                  "value": "None",
                  "description": "No Resolution Yet"
                },
                {
                  "name": "MoveToCleanUpDevice",
                  "value": "MoveToCleanUpDevice",
                  "description": "Clean the device"
                },
                {
                  "name": "Resume",
                  "value": "Resume",
                  "description": "Resume the job to same stage"
                },
                {
                  "name": "Restart",
                  "value": "Restart",
                  "description": "Restart whole action."
                },
                {
                  "name": "ReachOutToOperation",
                  "value": "ReachOutToOperation",
                  "description": "Reach out to operation for further action."
                }
              ]
            }
          }
        }
      }
    },
    "ModelName": {
      "type": "string",
      "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
      "enum": [
        "DataBox",
        "DataBoxDisk",
        "DataBoxHeavy",
        "DataBoxCustomerDisk",
        "AzureDataBox120",
        "AzureDataBox525"
      ],
      "x-ms-enum": {
        "name": "ModelName",
        "modelAsString": false,
        "values": [
          {
            "name": "DataBox",
            "value": "DataBox",
            "description": "Data Box."
          },
          {
            "name": "DataBoxDisk",
            "value": "DataBoxDisk",
            "description": "Data Box Disk."
          },
          {
            "name": "DataBoxHeavy",
            "value": "DataBoxHeavy",
            "description": "Data Box Heavy."
          },
          {
            "name": "DataBoxCustomerDisk",
            "value": "DataBoxCustomerDisk",
            "description": "Data Box Customer Disk"
          },
          {
            "name": "AzureDataBox120",
            "value": "AzureDataBox120",
            "description": "Data Box V2 with 120TB usable capacity."
          },
          {
            "name": "AzureDataBox525",
            "value": "AzureDataBox525",
            "description": "Data Box V2 with 525TB usable capacity."
          }
        ]
      }
    },
    "NotificationPreference": {
      "type": "object",
      "description": "Notification preference for a job stage.",
      "properties": {
        "stageName": {
          "description": "Name of the stage.",
          "type": "string",
          "enum": [
            "DevicePrepared",
            "Dispatched",
            "Delivered",
            "PickedUp",
            "AtAzureDC",
            "DataCopy",
            "Created",
            "ShippedToCustomer"
          ],
          "x-ms-enum": {
            "name": "NotificationStageName",
            "modelAsString": true,
            "values": [
              {
                "name": "DevicePrepared",
                "value": "DevicePrepared",
                "description": "Notification at device prepared stage."
              },
              {
                "name": "Dispatched",
                "value": "Dispatched",
                "description": "Notification at device dispatched stage."
              },
              {
                "name": "Delivered",
                "value": "Delivered",
                "description": "Notification at device delivered stage."
              },
              {
                "name": "PickedUp",
                "value": "PickedUp",
                "description": "Notification at device picked up from user stage."
              },
              {
                "name": "AtAzureDC",
                "value": "AtAzureDC",
                "description": "Notification at device received at Azure datacenter stage."
              },
              {
                "name": "DataCopy",
                "value": "DataCopy",
                "description": "Notification at data copy started stage."
              },
              {
                "name": "Created",
                "value": "Created",
                "description": "Notification at job created stage."
              },
              {
                "name": "ShippedToCustomer",
                "value": "ShippedToCustomer",
                "description": "Notification at shipped devices to customer stage."
              }
            ]
          }
        },
        "sendNotification": {
          "type": "boolean",
          "description": "Notification is required or not.",
          "default": true
        }
      },
      "required": [
        "stageName",
        "sendNotification"
      ]
    },
    "NotificationStageName": {
      "type": "string",
      "description": "Name of the stage.",
      "enum": [
        "DevicePrepared",
        "Dispatched",
        "Delivered",
        "PickedUp",
        "AtAzureDC",
        "DataCopy",
        "Created",
        "ShippedToCustomer"
      ],
      "x-ms-enum": {
        "name": "NotificationStageName",
        "modelAsString": true,
        "values": [
          {
            "name": "DevicePrepared",
            "value": "DevicePrepared",
            "description": "Notification at device prepared stage."
          },
          {
            "name": "Dispatched",
            "value": "Dispatched",
            "description": "Notification at device dispatched stage."
          },
          {
            "name": "Delivered",
            "value": "Delivered",
            "description": "Notification at device delivered stage."
          },
          {
            "name": "PickedUp",
            "value": "PickedUp",
            "description": "Notification at device picked up from user stage."
          },
          {
            "name": "AtAzureDC",
            "value": "AtAzureDC",
            "description": "Notification at device received at Azure datacenter stage."
          },
          {
            "name": "DataCopy",
            "value": "DataCopy",
            "description": "Notification at data copy started stage."
          },
          {
            "name": "Created",
            "value": "Created",
            "description": "Notification at job created stage."
          },
          {
            "name": "ShippedToCustomer",
            "value": "ShippedToCustomer",
            "description": "Notification at shipped devices to customer stage."
          }
        ]
      }
    },
    "Operation": {
      "type": "object",
      "description": "Operation entity.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the operation. Format: {resourceProviderNamespace}/{resourceType}/{read|write|delete|action}",
          "readOnly": true
        },
        "display": {
          "description": "Operation display values.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "provider": {
              "type": "string",
              "description": "Provider name."
            },
            "resource": {
              "type": "string",
              "description": "Resource name."
            },
            "operation": {
              "type": "string",
              "description": "Localized name of the operation for display purpose."
            },
            "description": {
              "type": "string",
              "description": "Localized description of the operation for display purpose."
            }
          }
        },
        "properties": {
          "description": "Operation properties.",
          "readOnly": true,
          "x-ms-client-flatten": true,
          "type": "object"
        },
        "origin": {
          "type": "string",
          "description": "Origin of the operation. Can be : user|system|user,system",
          "readOnly": true
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Indicates whether the operation is a data action"
        }
      }
    },
    "OperationDisplay": {
      "type": "object",
      "description": "Operation display",
      "properties": {
        "provider": {
          "type": "string",
          "description": "Provider name."
        },
        "resource": {
          "type": "string",
          "description": "Resource name."
        },
        "operation": {
          "type": "string",
          "description": "Localized name of the operation for display purpose."
        },
        "description": {
          "type": "string",
          "description": "Localized description of the operation for display purpose."
        }
      }
    },
    "OperationList": {
      "type": "object",
      "description": "The paginated list of connected cluster API operations.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of connected cluster API operations.",
          "items": {
            "type": "object",
            "description": "Operation entity.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the operation. Format: {resourceProviderNamespace}/{resourceType}/{read|write|delete|action}",
                "readOnly": true
              },
              "display": {
                "description": "Operation display values.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "provider": {
                    "type": "string",
                    "description": "Provider name."
                  },
                  "resource": {
                    "type": "string",
                    "description": "Resource name."
                  },
                  "operation": {
                    "type": "string",
                    "description": "Localized name of the operation for display purpose."
                  },
                  "description": {
                    "type": "string",
                    "description": "Localized description of the operation for display purpose."
                  }
                }
              },
              "properties": {
                "description": "Operation properties.",
                "readOnly": true,
                "x-ms-client-flatten": true,
                "type": "object"
              },
              "origin": {
                "type": "string",
                "description": "Origin of the operation. Can be : user|system|user,system",
                "readOnly": true
              },
              "isDataAction": {
                "type": "boolean",
                "description": "Indicates whether the operation is a data action"
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link to fetch the next page of connected cluster API operations."
        }
      }
    },
    "OperationProperties": {
      "type": "object",
      "description": "Operation properties."
    },
    "OverallValidationStatus": {
      "type": "string",
      "description": "Overall validation status.",
      "enum": [
        "AllValidToProceed",
        "InputsRevisitRequired",
        "CertainInputValidationsSkipped"
      ],
      "x-ms-enum": {
        "name": "OverallValidationStatus",
        "modelAsString": false,
        "values": [
          {
            "name": "AllValidToProceed",
            "value": "AllValidToProceed",
            "description": "Every input request is valid."
          },
          {
            "name": "InputsRevisitRequired",
            "value": "InputsRevisitRequired",
            "description": "Some input requests are not valid."
          },
          {
            "name": "CertainInputValidationsSkipped",
            "value": "CertainInputValidationsSkipped",
            "description": "Certain input validations skipped."
          }
        ]
      }
    },
    "PackageCarrierDetails": {
      "type": "object",
      "description": "Package carrier details.",
      "properties": {
        "carrierAccountNumber": {
          "type": "string",
          "format": "password",
          "description": "Carrier Account Number of customer for customer disk.",
          "x-ms-secret": true
        },
        "carrierName": {
          "type": "string",
          "description": "Name of the carrier."
        },
        "trackingId": {
          "type": "string",
          "description": "Tracking Id of shipment."
        }
      }
    },
    "PackageCarrierInfo": {
      "type": "object",
      "description": "package carrier info",
      "properties": {
        "carrierName": {
          "type": "string",
          "description": "Name of the carrier."
        },
        "trackingId": {
          "type": "string",
          "description": "Tracking Id of shipment."
        }
      }
    },
    "PackageShippingDetails": {
      "type": "object",
      "description": "package shipping details",
      "properties": {
        "trackingUrl": {
          "type": "string",
          "description": "Url where shipment can be tracked.",
          "readOnly": true
        },
        "carrierName": {
          "type": "string",
          "description": "Name of the carrier.",
          "readOnly": true
        },
        "trackingId": {
          "type": "string",
          "description": "Tracking Id of shipment.",
          "readOnly": true
        }
      }
    },
    "PortalDelayErrorCode": {
      "type": "string",
      "description": "Delay Error code",
      "enum": [
        "InternalIssueDelay",
        "ActiveOrderLimitBreachedDelay",
        "HighDemandDelay",
        "LargeNumberOfFilesDelay"
      ],
      "x-ms-enum": {
        "name": "PortalDelayErrorCode",
        "modelAsString": true,
        "values": [
          {
            "name": "InternalIssueDelay",
            "value": "InternalIssueDelay",
            "description": "Delay due to any internal reasons"
          },
          {
            "name": "ActiveOrderLimitBreachedDelay",
            "value": "ActiveOrderLimitBreachedDelay",
            "description": "Active Order limit breached."
          },
          {
            "name": "HighDemandDelay",
            "value": "HighDemandDelay",
            "description": "High demand"
          },
          {
            "name": "LargeNumberOfFilesDelay",
            "value": "LargeNumberOfFilesDelay",
            "description": "Slow copy due to large number of files"
          }
        ]
      }
    },
    "Preferences": {
      "type": "object",
      "description": "Preferences related to the order",
      "properties": {
        "preferredDataCenterRegion": {
          "type": "array",
          "description": "Preferred data center region.",
          "items": {
            "type": "string"
          }
        },
        "transportPreferences": {
          "description": "Preferences related to the shipment logistics of the sku.",
          "type": "object",
          "properties": {
            "preferredShipmentType": {
              "description": "Indicates Shipment Logistics type that the customer preferred.",
              "type": "string",
              "enum": [
                "CustomerManaged",
                "MicrosoftManaged"
              ],
              "x-ms-enum": {
                "name": "TransportShipmentTypes",
                "modelAsString": false,
                "values": [
                  {
                    "name": "CustomerManaged",
                    "value": "CustomerManaged",
                    "description": "Shipment Logistics is handled by the customer."
                  },
                  {
                    "name": "MicrosoftManaged",
                    "value": "MicrosoftManaged",
                    "description": "Shipment Logistics is handled by Microsoft."
                  }
                ]
              }
            },
            "isUpdated": {
              "type": "boolean",
              "description": "Read only property which indicates whether transport preferences has been updated or not after device is prepared.",
              "readOnly": true
            }
          },
          "required": [
            "preferredShipmentType"
          ]
        },
        "reverseTransportPreferences": {
          "description": "Optional Preferences related to the reverse shipment logistics of the sku.",
          "type": "object",
          "properties": {
            "preferredShipmentType": {
              "description": "Indicates Shipment Logistics type that the customer preferred.",
              "type": "string",
              "enum": [
                "CustomerManaged",
                "MicrosoftManaged"
              ],
              "x-ms-enum": {
                "name": "TransportShipmentTypes",
                "modelAsString": false,
                "values": [
                  {
                    "name": "CustomerManaged",
                    "value": "CustomerManaged",
                    "description": "Shipment Logistics is handled by the customer."
                  },
                  {
                    "name": "MicrosoftManaged",
                    "value": "MicrosoftManaged",
                    "description": "Shipment Logistics is handled by Microsoft."
                  }
                ]
              }
            },
            "isUpdated": {
              "type": "boolean",
              "description": "Read only property which indicates whether transport preferences has been updated or not after device is prepared.",
              "readOnly": true
            }
          },
          "required": [
            "preferredShipmentType"
          ]
        },
        "encryptionPreferences": {
          "description": "Preferences related to the Encryption.",
          "type": "object",
          "properties": {
            "doubleEncryption": {
              "type": "string",
              "description": "Defines secondary layer of software-based encryption enablement.",
              "default": "Disabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "DoubleEncryption",
                "modelAsString": false,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "Software-based encryption is enabled."
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "Software-based encryption is disabled."
                  }
                ]
              }
            },
            "hardwareEncryption": {
              "description": "Defines Hardware level encryption (Only for disk)",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "HardwareEncryption",
                "modelAsString": false,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "Hardware-based encryption is enabled."
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "Hardware-based encryption is disabled."
                  }
                ]
              }
            }
          }
        },
        "storageAccountAccessTierPreferences": {
          "type": "array",
          "description": "Preferences related to the Access Tier of storage accounts.",
          "items": {
            "type": "string",
            "enum": [
              "Archive"
            ],
            "x-ms-enum": {
              "modelAsString": false
            }
          }
        }
      }
    },
    "PreferencesValidationRequest": {
      "type": "object",
      "description": "Request to validate preference of transport and data center.",
      "properties": {
        "preference": {
          "description": "Preference of transport and data center.",
          "type": "object",
          "properties": {
            "preferredDataCenterRegion": {
              "type": "array",
              "description": "Preferred data center region.",
              "items": {
                "type": "string"
              }
            },
            "transportPreferences": {
              "description": "Preferences related to the shipment logistics of the sku.",
              "type": "object",
              "properties": {
                "preferredShipmentType": {
                  "description": "Indicates Shipment Logistics type that the customer preferred.",
                  "type": "string",
                  "enum": [
                    "CustomerManaged",
                    "MicrosoftManaged"
                  ],
                  "x-ms-enum": {
                    "name": "TransportShipmentTypes",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "CustomerManaged",
                        "value": "CustomerManaged",
                        "description": "Shipment Logistics is handled by the customer."
                      },
                      {
                        "name": "MicrosoftManaged",
                        "value": "MicrosoftManaged",
                        "description": "Shipment Logistics is handled by Microsoft."
                      }
                    ]
                  }
                },
                "isUpdated": {
                  "type": "boolean",
                  "description": "Read only property which indicates whether transport preferences has been updated or not after device is prepared.",
                  "readOnly": true
                }
              },
              "required": [
                "preferredShipmentType"
              ]
            },
            "reverseTransportPreferences": {
              "description": "Optional Preferences related to the reverse shipment logistics of the sku.",
              "type": "object",
              "properties": {
                "preferredShipmentType": {
                  "description": "Indicates Shipment Logistics type that the customer preferred.",
                  "type": "string",
                  "enum": [
                    "CustomerManaged",
                    "MicrosoftManaged"
                  ],
                  "x-ms-enum": {
                    "name": "TransportShipmentTypes",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "CustomerManaged",
                        "value": "CustomerManaged",
                        "description": "Shipment Logistics is handled by the customer."
                      },
                      {
                        "name": "MicrosoftManaged",
                        "value": "MicrosoftManaged",
                        "description": "Shipment Logistics is handled by Microsoft."
                      }
                    ]
                  }
                },
                "isUpdated": {
                  "type": "boolean",
                  "description": "Read only property which indicates whether transport preferences has been updated or not after device is prepared.",
                  "readOnly": true
                }
              },
              "required": [
                "preferredShipmentType"
              ]
            },
            "encryptionPreferences": {
              "description": "Preferences related to the Encryption.",
              "type": "object",
              "properties": {
                "doubleEncryption": {
                  "type": "string",
                  "description": "Defines secondary layer of software-based encryption enablement.",
                  "default": "Disabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "DoubleEncryption",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "Software-based encryption is enabled."
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "Software-based encryption is disabled."
                      }
                    ]
                  }
                },
                "hardwareEncryption": {
                  "description": "Defines Hardware level encryption (Only for disk)",
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "HardwareEncryption",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "Hardware-based encryption is enabled."
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "Hardware-based encryption is disabled."
                      }
                    ]
                  }
                }
              }
            },
            "storageAccountAccessTierPreferences": {
              "type": "array",
              "description": "Preferences related to the Access Tier of storage accounts.",
              "items": {
                "type": "string",
                "enum": [
                  "Archive"
                ],
                "x-ms-enum": {
                  "modelAsString": false
                }
              }
            }
          }
        },
        "deviceType": {
          "type": "string",
          "description": "SKU names.",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy",
            "DataBoxCustomerDisk"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": false,
            "values": [
              {
                "name": "DataBox",
                "value": "DataBox",
                "description": "Data Box."
              },
              {
                "name": "DataBoxDisk",
                "value": "DataBoxDisk",
                "description": "Data Box Disk."
              },
              {
                "name": "DataBoxHeavy",
                "value": "DataBoxHeavy",
                "description": "Data Box Heavy."
              },
              {
                "name": "DataBoxCustomerDisk",
                "value": "DataBoxCustomerDisk",
                "description": "Data Box Customer Disk"
              }
            ]
          }
        },
        "model": {
          "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
          "type": "string",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy",
            "DataBoxCustomerDisk",
            "AzureDataBox120",
            "AzureDataBox525"
          ],
          "x-ms-enum": {
            "name": "ModelName",
            "modelAsString": false,
            "values": [
              {
                "name": "DataBox",
                "value": "DataBox",
                "description": "Data Box."
              },
              {
                "name": "DataBoxDisk",
                "value": "DataBoxDisk",
                "description": "Data Box Disk."
              },
              {
                "name": "DataBoxHeavy",
                "value": "DataBoxHeavy",
                "description": "Data Box Heavy."
              },
              {
                "name": "DataBoxCustomerDisk",
                "value": "DataBoxCustomerDisk",
                "description": "Data Box Customer Disk"
              },
              {
                "name": "AzureDataBox120",
                "value": "AzureDataBox120",
                "description": "Data Box V2 with 120TB usable capacity."
              },
              {
                "name": "AzureDataBox525",
                "value": "AzureDataBox525",
                "description": "Data Box V2 with 525TB usable capacity."
              }
            ]
          }
        }
      },
      "required": [
        "deviceType"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Minimum fields that must be present in any type of validation request.",
          "properties": {
            "validationType": {
              "description": "Identifies the type of validation request.",
              "type": "string",
              "enum": [
                "ValidateAddress",
                "ValidateSubscriptionIsAllowedToCreateJob",
                "ValidatePreferences",
                "ValidateCreateOrderLimit",
                "ValidateSkuAvailability",
                "ValidateDataTransferDetails"
              ],
              "x-ms-enum": {
                "name": "ValidationInputDiscriminator",
                "modelAsString": false,
                "values": [
                  {
                    "name": "ValidateAddress",
                    "value": "ValidateAddress",
                    "description": "Identify request and response of address validation."
                  },
                  {
                    "name": "ValidateSubscriptionIsAllowedToCreateJob",
                    "value": "ValidateSubscriptionIsAllowedToCreateJob",
                    "description": "Identify request and response for validation of subscription permission to create job."
                  },
                  {
                    "name": "ValidatePreferences",
                    "value": "ValidatePreferences",
                    "description": "Identify request and response of preference validation."
                  },
                  {
                    "name": "ValidateCreateOrderLimit",
                    "value": "ValidateCreateOrderLimit",
                    "description": "Identify request and response of create order limit for subscription validation."
                  },
                  {
                    "name": "ValidateSkuAvailability",
                    "value": "ValidateSkuAvailability",
                    "description": "Identify request and response of active job limit for sku availability."
                  },
                  {
                    "name": "ValidateDataTransferDetails",
                    "value": "ValidateDataTransferDetails",
                    "description": "Identify request and response of data transfer details validation."
                  }
                ]
              }
            }
          },
          "discriminator": "validationType",
          "required": [
            "validationType"
          ]
        }
      ],
      "x-ms-discriminator-value": "ValidatePreferences"
    },
    "PreferencesValidationResponseProperties": {
      "type": "object",
      "description": "Properties of data center and transport preference validation response.",
      "properties": {
        "status": {
          "description": "Validation status of requested data center and transport.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Valid",
            "Invalid",
            "Skipped"
          ],
          "x-ms-enum": {
            "name": "ValidationStatus",
            "modelAsString": false,
            "values": [
              {
                "name": "Valid",
                "value": "Valid",
                "description": "Validation is successful"
              },
              {
                "name": "Invalid",
                "value": "Invalid",
                "description": "Validation is not successful"
              },
              {
                "name": "Skipped",
                "value": "Skipped",
                "description": "Validation is skipped"
              }
            ]
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ValidationInputResponse"
        }
      ],
      "x-ms-discriminator-value": "ValidatePreferences"
    },
    "RegionConfigurationRequest": {
      "type": "object",
      "description": "Request body to get the configuration for the region.",
      "properties": {
        "scheduleAvailabilityRequest": {
          "description": "Request body to get the availability for scheduling orders.",
          "type": "object",
          "properties": {
            "storageLocation": {
              "type": "string",
              "description": "Location for data transfer. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01"
            },
            "skuName": {
              "description": "Sku Name for which the order is to be scheduled.",
              "type": "string",
              "enum": [
                "DataBox",
                "DataBoxDisk",
                "DataBoxHeavy",
                "DataBoxCustomerDisk"
              ],
              "x-ms-enum": {
                "name": "SkuName",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DataBox",
                    "value": "DataBox",
                    "description": "Data Box."
                  },
                  {
                    "name": "DataBoxDisk",
                    "value": "DataBoxDisk",
                    "description": "Data Box Disk."
                  },
                  {
                    "name": "DataBoxHeavy",
                    "value": "DataBoxHeavy",
                    "description": "Data Box Heavy."
                  },
                  {
                    "name": "DataBoxCustomerDisk",
                    "value": "DataBoxCustomerDisk",
                    "description": "Data Box Customer Disk"
                  }
                ]
              }
            },
            "country": {
              "type": "string",
              "description": "Country in which storage location should be supported."
            },
            "model": {
              "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
              "type": "string",
              "enum": [
                "DataBox",
                "DataBoxDisk",
                "DataBoxHeavy",
                "DataBoxCustomerDisk",
                "AzureDataBox120",
                "AzureDataBox525"
              ],
              "x-ms-enum": {
                "name": "ModelName",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DataBox",
                    "value": "DataBox",
                    "description": "Data Box."
                  },
                  {
                    "name": "DataBoxDisk",
                    "value": "DataBoxDisk",
                    "description": "Data Box Disk."
                  },
                  {
                    "name": "DataBoxHeavy",
                    "value": "DataBoxHeavy",
                    "description": "Data Box Heavy."
                  },
                  {
                    "name": "DataBoxCustomerDisk",
                    "value": "DataBoxCustomerDisk",
                    "description": "Data Box Customer Disk"
                  },
                  {
                    "name": "AzureDataBox120",
                    "value": "AzureDataBox120",
                    "description": "Data Box V2 with 120TB usable capacity."
                  },
                  {
                    "name": "AzureDataBox525",
                    "value": "AzureDataBox525",
                    "description": "Data Box V2 with 525TB usable capacity."
                  }
                ]
              }
            }
          },
          "discriminator": "skuName",
          "required": [
            "storageLocation",
            "skuName"
          ]
        },
        "transportAvailabilityRequest": {
          "description": "Request body to get the transport availability for given sku.",
          "type": "object",
          "properties": {
            "skuName": {
              "description": "Type of the device.",
              "type": "string",
              "enum": [
                "DataBox",
                "DataBoxDisk",
                "DataBoxHeavy",
                "DataBoxCustomerDisk"
              ],
              "x-ms-enum": {
                "name": "SkuName",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DataBox",
                    "value": "DataBox",
                    "description": "Data Box."
                  },
                  {
                    "name": "DataBoxDisk",
                    "value": "DataBoxDisk",
                    "description": "Data Box Disk."
                  },
                  {
                    "name": "DataBoxHeavy",
                    "value": "DataBoxHeavy",
                    "description": "Data Box Heavy."
                  },
                  {
                    "name": "DataBoxCustomerDisk",
                    "value": "DataBoxCustomerDisk",
                    "description": "Data Box Customer Disk"
                  }
                ]
              }
            },
            "model": {
              "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
              "type": "string",
              "enum": [
                "DataBox",
                "DataBoxDisk",
                "DataBoxHeavy",
                "DataBoxCustomerDisk",
                "AzureDataBox120",
                "AzureDataBox525"
              ],
              "x-ms-enum": {
                "name": "ModelName",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DataBox",
                    "value": "DataBox",
                    "description": "Data Box."
                  },
                  {
                    "name": "DataBoxDisk",
                    "value": "DataBoxDisk",
                    "description": "Data Box Disk."
                  },
                  {
                    "name": "DataBoxHeavy",
                    "value": "DataBoxHeavy",
                    "description": "Data Box Heavy."
                  },
                  {
                    "name": "DataBoxCustomerDisk",
                    "value": "DataBoxCustomerDisk",
                    "description": "Data Box Customer Disk"
                  },
                  {
                    "name": "AzureDataBox120",
                    "value": "AzureDataBox120",
                    "description": "Data Box V2 with 120TB usable capacity."
                  },
                  {
                    "name": "AzureDataBox525",
                    "value": "AzureDataBox525",
                    "description": "Data Box V2 with 525TB usable capacity."
                  }
                ]
              }
            }
          }
        },
        "datacenterAddressRequest": {
          "description": "Request body to get the datacenter address for given sku.",
          "type": "object",
          "properties": {
            "storageLocation": {
              "type": "string",
              "description": "Storage location. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01"
            },
            "skuName": {
              "description": "Sku Name for which the data center address requested.",
              "type": "string",
              "enum": [
                "DataBox",
                "DataBoxDisk",
                "DataBoxHeavy",
                "DataBoxCustomerDisk"
              ],
              "x-ms-enum": {
                "name": "SkuName",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DataBox",
                    "value": "DataBox",
                    "description": "Data Box."
                  },
                  {
                    "name": "DataBoxDisk",
                    "value": "DataBoxDisk",
                    "description": "Data Box Disk."
                  },
                  {
                    "name": "DataBoxHeavy",
                    "value": "DataBoxHeavy",
                    "description": "Data Box Heavy."
                  },
                  {
                    "name": "DataBoxCustomerDisk",
                    "value": "DataBoxCustomerDisk",
                    "description": "Data Box Customer Disk"
                  }
                ]
              }
            },
            "model": {
              "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
              "type": "string",
              "enum": [
                "DataBox",
                "DataBoxDisk",
                "DataBoxHeavy",
                "DataBoxCustomerDisk",
                "AzureDataBox120",
                "AzureDataBox525"
              ],
              "x-ms-enum": {
                "name": "ModelName",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DataBox",
                    "value": "DataBox",
                    "description": "Data Box."
                  },
                  {
                    "name": "DataBoxDisk",
                    "value": "DataBoxDisk",
                    "description": "Data Box Disk."
                  },
                  {
                    "name": "DataBoxHeavy",
                    "value": "DataBoxHeavy",
                    "description": "Data Box Heavy."
                  },
                  {
                    "name": "DataBoxCustomerDisk",
                    "value": "DataBoxCustomerDisk",
                    "description": "Data Box Customer Disk"
                  },
                  {
                    "name": "AzureDataBox120",
                    "value": "AzureDataBox120",
                    "description": "Data Box V2 with 120TB usable capacity."
                  },
                  {
                    "name": "AzureDataBox525",
                    "value": "AzureDataBox525",
                    "description": "Data Box V2 with 525TB usable capacity."
                  }
                ]
              }
            }
          },
          "required": [
            "storageLocation",
            "skuName"
          ]
        },
        "deviceCapabilityRequest": {
          "description": "Request body to get the device capabilities for a given sku.",
          "type": "object",
          "properties": {
            "skuName": {
              "description": "Type of the device.",
              "type": "string",
              "enum": [
                "DataBox",
                "DataBoxDisk",
                "DataBoxHeavy",
                "DataBoxCustomerDisk"
              ],
              "x-ms-enum": {
                "name": "SkuName",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DataBox",
                    "value": "DataBox",
                    "description": "Data Box."
                  },
                  {
                    "name": "DataBoxDisk",
                    "value": "DataBoxDisk",
                    "description": "Data Box Disk."
                  },
                  {
                    "name": "DataBoxHeavy",
                    "value": "DataBoxHeavy",
                    "description": "Data Box Heavy."
                  },
                  {
                    "name": "DataBoxCustomerDisk",
                    "value": "DataBoxCustomerDisk",
                    "description": "Data Box Customer Disk"
                  }
                ]
              }
            },
            "model": {
              "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
              "type": "string",
              "enum": [
                "DataBox",
                "DataBoxDisk",
                "DataBoxHeavy",
                "DataBoxCustomerDisk",
                "AzureDataBox120",
                "AzureDataBox525"
              ],
              "x-ms-enum": {
                "name": "ModelName",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DataBox",
                    "value": "DataBox",
                    "description": "Data Box."
                  },
                  {
                    "name": "DataBoxDisk",
                    "value": "DataBoxDisk",
                    "description": "Data Box Disk."
                  },
                  {
                    "name": "DataBoxHeavy",
                    "value": "DataBoxHeavy",
                    "description": "Data Box Heavy."
                  },
                  {
                    "name": "DataBoxCustomerDisk",
                    "value": "DataBoxCustomerDisk",
                    "description": "Data Box Customer Disk"
                  },
                  {
                    "name": "AzureDataBox120",
                    "value": "AzureDataBox120",
                    "description": "Data Box V2 with 120TB usable capacity."
                  },
                  {
                    "name": "AzureDataBox525",
                    "value": "AzureDataBox525",
                    "description": "Data Box V2 with 525TB usable capacity."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "RegionConfigurationResponse": {
      "type": "object",
      "description": "Configuration response specific to a region.",
      "properties": {
        "scheduleAvailabilityResponse": {
          "description": "Schedule availability for given sku in a region.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "availableDates": {
              "type": "array",
              "description": "List of dates available to schedule",
              "items": {
                "type": "string",
                "format": "date-time"
              },
              "readOnly": true
            }
          }
        },
        "transportAvailabilityResponse": {
          "description": "Transport options available for given sku in a region.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "transportAvailabilityDetails": {
              "type": "array",
              "description": "List of transport availability details for given region",
              "items": {
                "type": "object",
                "description": "Transport options availability details for given region.",
                "properties": {
                  "shipmentType": {
                    "description": "Transport Shipment Type supported for given region.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "CustomerManaged",
                      "MicrosoftManaged"
                    ],
                    "x-ms-enum": {
                      "name": "TransportShipmentTypes",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "CustomerManaged",
                          "value": "CustomerManaged",
                          "description": "Shipment Logistics is handled by the customer."
                        },
                        {
                          "name": "MicrosoftManaged",
                          "value": "MicrosoftManaged",
                          "description": "Shipment Logistics is handled by Microsoft."
                        }
                      ]
                    }
                  }
                }
              },
              "readOnly": true
            }
          }
        },
        "datacenterAddressResponse": {
          "description": "Datacenter address for given sku in a region.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "datacenterAddressType": {
              "description": "Data center address type",
              "type": "string",
              "enum": [
                "DatacenterAddressLocation",
                "DatacenterAddressInstruction"
              ],
              "x-ms-enum": {
                "name": "DatacenterAddressType",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DatacenterAddressLocation",
                    "value": "DatacenterAddressLocation",
                    "description": "Data center address location."
                  },
                  {
                    "name": "DatacenterAddressInstruction",
                    "value": "DatacenterAddressInstruction",
                    "description": "Data center address instruction."
                  }
                ]
              }
            },
            "supportedCarriersForReturnShipment": {
              "type": "array",
              "description": "List of supported carriers for return shipment.",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "dataCenterAzureLocation": {
              "type": "string",
              "description": "Azure Location where the Data Center serves primarily.",
              "readOnly": true
            }
          },
          "discriminator": "datacenterAddressType",
          "required": [
            "datacenterAddressType"
          ]
        },
        "deviceCapabilityResponse": {
          "description": "Device capabilities available for a given sku in a region.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "deviceCapabilityDetails": {
              "type": "array",
              "description": "List of device capabilities available for a given region and a given sku",
              "items": {
                "type": "object",
                "description": "Device capability details for a given sku for a given region.",
                "properties": {
                  "hardwareEncryption": {
                    "description": "Hardware encryption support for a given sku for a given region.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "HardwareEncryption",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "Enabled",
                          "value": "Enabled",
                          "description": "Hardware-based encryption is enabled."
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled",
                          "description": "Hardware-based encryption is disabled."
                        }
                      ]
                    }
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": []
            }
          }
        }
      }
    },
    "ResourceIdentity": {
      "type": "object",
      "description": "Msi identity details of the resource",
      "properties": {
        "type": {
          "type": "string",
          "description": "Identity type",
          "default": "None"
        },
        "principalId": {
          "type": "string",
          "description": "Service Principal Id backing the Msi",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "Home Tenant Id",
          "readOnly": true
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "User Assigned Identities",
          "additionalProperties": {
            "type": "object",
            "description": "User assigned identity properties",
            "properties": {
              "principalId": {
                "type": "string",
                "format": "uuid",
                "description": "The principal ID of the assigned identity.",
                "readOnly": true
              },
              "clientId": {
                "type": "string",
                "format": "uuid",
                "description": "The client ID of the assigned identity.",
                "readOnly": true
              }
            }
          }
        }
      }
    },
    "ReverseShippingDetails": {
      "type": "object",
      "description": "Reverse Shipping Address and contact details for a job.",
      "properties": {
        "contactDetails": {
          "description": "Contact Info.",
          "type": "object",
          "properties": {
            "contactName": {
              "type": "string",
              "description": "Contact name of the person.",
              "minLength": 1
            },
            "phone": {
              "type": "string",
              "description": "Phone number of the contact person.",
              "minLength": 1
            },
            "phoneExtension": {
              "type": "string",
              "description": "Phone extension number of the contact person."
            },
            "mobile": {
              "type": "string",
              "description": "Mobile number of the contact person."
            }
          },
          "required": [
            "contactName",
            "phone"
          ]
        },
        "shippingAddress": {
          "description": "Shipping address where customer wishes to receive the device.",
          "type": "object",
          "properties": {
            "streetAddress1": {
              "type": "string",
              "description": "Street Address line 1."
            },
            "streetAddress2": {
              "type": "string",
              "description": "Street Address line 2."
            },
            "streetAddress3": {
              "type": "string",
              "description": "Street Address line 3."
            },
            "city": {
              "type": "string",
              "description": "Name of the City."
            },
            "stateOrProvince": {
              "type": "string",
              "description": "Name of the State or Province."
            },
            "country": {
              "type": "string",
              "description": "Name of the Country."
            },
            "postalCode": {
              "type": "string",
              "description": "Postal code."
            },
            "zipExtendedCode": {
              "type": "string",
              "description": "Extended Zip Code."
            },
            "companyName": {
              "type": "string",
              "description": "Name of the company."
            },
            "addressType": {
              "type": "string",
              "description": "Type of address.",
              "default": "None",
              "enum": [
                "None",
                "Residential",
                "Commercial"
              ],
              "x-ms-enum": {
                "name": "AddressType",
                "modelAsString": false,
                "values": [
                  {
                    "name": "None",
                    "value": "None",
                    "description": "Address type not known."
                  },
                  {
                    "name": "Residential",
                    "value": "Residential",
                    "description": "Residential Address."
                  },
                  {
                    "name": "Commercial",
                    "value": "Commercial",
                    "description": "Commercial Address."
                  }
                ]
              }
            },
            "skipAddressValidation": {
              "type": "boolean",
              "description": "Flag to indicate if customer has chosen to skip default address validation"
            },
            "taxIdentificationNumber": {
              "type": "string",
              "description": "Tax Identification Number"
            }
          },
          "required": [
            "streetAddress1",
            "country"
          ]
        },
        "isUpdated": {
          "type": "boolean",
          "description": "A flag to indicate whether Reverse Shipping details are updated or not after device has been prepared.\nRead only field",
          "readOnly": true
        }
      }
    },
    "ReverseShippingDetailsEditStatus": {
      "type": "string",
      "description": "The Editable status for Reverse Shipping Address and Contact Info",
      "enum": [
        "Enabled",
        "Disabled",
        "NotSupported"
      ],
      "x-ms-enum": {
        "name": "ReverseShippingDetailsEditStatus",
        "modelAsString": false,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Reverse shipping details can be edited."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Edit is disabled for Reverse shipping details."
          },
          {
            "name": "NotSupported",
            "value": "NotSupported",
            "description": "Edit is not supported for Reverse shipping details. Either subscription feature is not available or SKU doesn't support this feature."
          }
        ]
      }
    },
    "ReverseTransportPreferenceEditStatus": {
      "type": "string",
      "description": "The Editable status for Reverse Transport preferences",
      "enum": [
        "Enabled",
        "Disabled",
        "NotSupported"
      ],
      "x-ms-enum": {
        "name": "ReverseTransportPreferenceEditStatus",
        "modelAsString": false,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Reverse Transport Preferences can be edited."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Edit is disabled for Reverse Transport Preferences."
          },
          {
            "name": "NotSupported",
            "value": "NotSupported",
            "description": "Edit is not supported for Reverse Transport Preferences. Either subscription feature is not available or SKU doesn't support this feature."
          }
        ]
      }
    },
    "ScheduleAvailabilityRequest": {
      "type": "object",
      "description": "Request body to get the availability for scheduling orders.",
      "properties": {
        "storageLocation": {
          "type": "string",
          "description": "Location for data transfer. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01"
        },
        "skuName": {
          "description": "Sku Name for which the order is to be scheduled.",
          "type": "string",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy",
            "DataBoxCustomerDisk"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": false,
            "values": [
              {
                "name": "DataBox",
                "value": "DataBox",
                "description": "Data Box."
              },
              {
                "name": "DataBoxDisk",
                "value": "DataBoxDisk",
                "description": "Data Box Disk."
              },
              {
                "name": "DataBoxHeavy",
                "value": "DataBoxHeavy",
                "description": "Data Box Heavy."
              },
              {
                "name": "DataBoxCustomerDisk",
                "value": "DataBoxCustomerDisk",
                "description": "Data Box Customer Disk"
              }
            ]
          }
        },
        "country": {
          "type": "string",
          "description": "Country in which storage location should be supported."
        },
        "model": {
          "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
          "type": "string",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy",
            "DataBoxCustomerDisk",
            "AzureDataBox120",
            "AzureDataBox525"
          ],
          "x-ms-enum": {
            "name": "ModelName",
            "modelAsString": false,
            "values": [
              {
                "name": "DataBox",
                "value": "DataBox",
                "description": "Data Box."
              },
              {
                "name": "DataBoxDisk",
                "value": "DataBoxDisk",
                "description": "Data Box Disk."
              },
              {
                "name": "DataBoxHeavy",
                "value": "DataBoxHeavy",
                "description": "Data Box Heavy."
              },
              {
                "name": "DataBoxCustomerDisk",
                "value": "DataBoxCustomerDisk",
                "description": "Data Box Customer Disk"
              },
              {
                "name": "AzureDataBox120",
                "value": "AzureDataBox120",
                "description": "Data Box V2 with 120TB usable capacity."
              },
              {
                "name": "AzureDataBox525",
                "value": "AzureDataBox525",
                "description": "Data Box V2 with 525TB usable capacity."
              }
            ]
          }
        }
      },
      "discriminator": "skuName",
      "required": [
        "storageLocation",
        "skuName"
      ]
    },
    "ScheduleAvailabilityResponse": {
      "type": "object",
      "description": "Schedule availability for given sku in a region.",
      "properties": {
        "availableDates": {
          "type": "array",
          "description": "List of dates available to schedule",
          "items": {
            "type": "string",
            "format": "date-time"
          },
          "readOnly": true
        }
      }
    },
    "ShareCredentialDetails": {
      "type": "object",
      "description": "Credential details of the shares in account.",
      "properties": {
        "shareName": {
          "type": "string",
          "description": "Name of the share.",
          "readOnly": true
        },
        "shareType": {
          "description": "Type of the share.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "UnknownType",
            "HCS",
            "BlockBlob",
            "PageBlob",
            "AzureFile",
            "ManagedDisk"
          ],
          "x-ms-enum": {
            "name": "ShareDestinationFormatType",
            "modelAsString": false,
            "values": [
              {
                "name": "UnknownType",
                "value": "UnknownType",
                "description": "Unknown format."
              },
              {
                "name": "HCS",
                "value": "HCS",
                "description": "Storsimple data format."
              },
              {
                "name": "BlockBlob",
                "value": "BlockBlob",
                "description": "Azure storage block blob format."
              },
              {
                "name": "PageBlob",
                "value": "PageBlob",
                "description": "Azure storage page blob format."
              },
              {
                "name": "AzureFile",
                "value": "AzureFile",
                "description": "Azure storage file format."
              },
              {
                "name": "ManagedDisk",
                "value": "ManagedDisk",
                "description": "Azure Compute Disk."
              }
            ]
          }
        },
        "userName": {
          "type": "string",
          "description": "User name for the share.",
          "readOnly": true
        },
        "password": {
          "type": "string",
          "description": "Password for the share.",
          "readOnly": true
        },
        "supportedAccessProtocols": {
          "type": "array",
          "description": "Access protocols supported on the device.",
          "items": {
            "type": "string",
            "description": "Access protocols supported on the device.",
            "enum": [
              "SMB",
              "NFS"
            ],
            "x-ms-enum": {
              "name": "AccessProtocol",
              "modelAsString": false,
              "values": [
                {
                  "name": "SMB",
                  "value": "SMB",
                  "description": "Server Message Block protocol(SMB)."
                },
                {
                  "name": "NFS",
                  "value": "NFS",
                  "description": "Network File System protocol(NFS)."
                }
              ]
            }
          },
          "readOnly": true
        }
      }
    },
    "ShareDestinationFormatType": {
      "type": "string",
      "description": "Type of the share.",
      "enum": [
        "UnknownType",
        "HCS",
        "BlockBlob",
        "PageBlob",
        "AzureFile",
        "ManagedDisk"
      ],
      "x-ms-enum": {
        "name": "ShareDestinationFormatType",
        "modelAsString": false,
        "values": [
          {
            "name": "UnknownType",
            "value": "UnknownType",
            "description": "Unknown format."
          },
          {
            "name": "HCS",
            "value": "HCS",
            "description": "Storsimple data format."
          },
          {
            "name": "BlockBlob",
            "value": "BlockBlob",
            "description": "Azure storage block blob format."
          },
          {
            "name": "PageBlob",
            "value": "PageBlob",
            "description": "Azure storage page blob format."
          },
          {
            "name": "AzureFile",
            "value": "AzureFile",
            "description": "Azure storage file format."
          },
          {
            "name": "ManagedDisk",
            "value": "ManagedDisk",
            "description": "Azure Compute Disk."
          }
        ]
      }
    },
    "ShipmentPickUpRequest": {
      "type": "object",
      "description": "Shipment pick up request details.",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Minimum date after which the pick up should commence, this must be in local time of pick up area."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Maximum date before which the pick up should commence, this must be in local time of pick up area."
        },
        "shipmentLocation": {
          "type": "string",
          "description": "Shipment Location in the pickup place. Eg.front desk"
        }
      },
      "required": [
        "startTime",
        "endTime",
        "shipmentLocation"
      ]
    },
    "ShipmentPickUpResponse": {
      "type": "object",
      "description": "Shipment pick up response.",
      "properties": {
        "confirmationNumber": {
          "type": "string",
          "description": "Confirmation number for the pick up request.",
          "readOnly": true
        },
        "readyByTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time by which shipment should be ready for pick up, this is in local time of pick up area.",
          "readOnly": true
        }
      }
    },
    "ShippingAddress": {
      "type": "object",
      "description": "Shipping address where customer wishes to receive the device.",
      "properties": {
        "streetAddress1": {
          "type": "string",
          "description": "Street Address line 1."
        },
        "streetAddress2": {
          "type": "string",
          "description": "Street Address line 2."
        },
        "streetAddress3": {
          "type": "string",
          "description": "Street Address line 3."
        },
        "city": {
          "type": "string",
          "description": "Name of the City."
        },
        "stateOrProvince": {
          "type": "string",
          "description": "Name of the State or Province."
        },
        "country": {
          "type": "string",
          "description": "Name of the Country."
        },
        "postalCode": {
          "type": "string",
          "description": "Postal code."
        },
        "zipExtendedCode": {
          "type": "string",
          "description": "Extended Zip Code."
        },
        "companyName": {
          "type": "string",
          "description": "Name of the company."
        },
        "addressType": {
          "type": "string",
          "description": "Type of address.",
          "default": "None",
          "enum": [
            "None",
            "Residential",
            "Commercial"
          ],
          "x-ms-enum": {
            "name": "AddressType",
            "modelAsString": false,
            "values": [
              {
                "name": "None",
                "value": "None",
                "description": "Address type not known."
              },
              {
                "name": "Residential",
                "value": "Residential",
                "description": "Residential Address."
              },
              {
                "name": "Commercial",
                "value": "Commercial",
                "description": "Commercial Address."
              }
            ]
          }
        },
        "skipAddressValidation": {
          "type": "boolean",
          "description": "Flag to indicate if customer has chosen to skip default address validation"
        },
        "taxIdentificationNumber": {
          "type": "string",
          "description": "Tax Identification Number"
        }
      },
      "required": [
        "streetAddress1",
        "country"
      ]
    },
    "Sku": {
      "type": "object",
      "description": "The Sku.",
      "properties": {
        "name": {
          "description": "The sku name.",
          "type": "string",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy",
            "DataBoxCustomerDisk"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": false,
            "values": [
              {
                "name": "DataBox",
                "value": "DataBox",
                "description": "Data Box."
              },
              {
                "name": "DataBoxDisk",
                "value": "DataBoxDisk",
                "description": "Data Box Disk."
              },
              {
                "name": "DataBoxHeavy",
                "value": "DataBoxHeavy",
                "description": "Data Box Heavy."
              },
              {
                "name": "DataBoxCustomerDisk",
                "value": "DataBoxCustomerDisk",
                "description": "Data Box Customer Disk"
              }
            ]
          }
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the sku."
        },
        "family": {
          "type": "string",
          "description": "The sku family."
        },
        "model": {
          "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
          "type": "string",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy",
            "DataBoxCustomerDisk",
            "AzureDataBox120",
            "AzureDataBox525"
          ],
          "x-ms-enum": {
            "name": "ModelName",
            "modelAsString": false,
            "values": [
              {
                "name": "DataBox",
                "value": "DataBox",
                "description": "Data Box."
              },
              {
                "name": "DataBoxDisk",
                "value": "DataBoxDisk",
                "description": "Data Box Disk."
              },
              {
                "name": "DataBoxHeavy",
                "value": "DataBoxHeavy",
                "description": "Data Box Heavy."
              },
              {
                "name": "DataBoxCustomerDisk",
                "value": "DataBoxCustomerDisk",
                "description": "Data Box Customer Disk"
              },
              {
                "name": "AzureDataBox120",
                "value": "AzureDataBox120",
                "description": "Data Box V2 with 120TB usable capacity."
              },
              {
                "name": "AzureDataBox525",
                "value": "AzureDataBox525",
                "description": "Data Box V2 with 525TB usable capacity."
              }
            ]
          }
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuAvailabilityValidationRequest": {
      "type": "object",
      "description": "Request to validate sku availability.",
      "properties": {
        "deviceType": {
          "type": "string",
          "description": "SKU names.",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy",
            "DataBoxCustomerDisk"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": false,
            "values": [
              {
                "name": "DataBox",
                "value": "DataBox",
                "description": "Data Box."
              },
              {
                "name": "DataBoxDisk",
                "value": "DataBoxDisk",
                "description": "Data Box Disk."
              },
              {
                "name": "DataBoxHeavy",
                "value": "DataBoxHeavy",
                "description": "Data Box Heavy."
              },
              {
                "name": "DataBoxCustomerDisk",
                "value": "DataBoxCustomerDisk",
                "description": "Data Box Customer Disk"
              }
            ]
          }
        },
        "transferType": {
          "description": "Type of the transfer.",
          "type": "string",
          "enum": [
            "ImportToAzure",
            "ExportFromAzure"
          ],
          "x-ms-enum": {
            "name": "TransferType",
            "modelAsString": false,
            "values": [
              {
                "name": "ImportToAzure",
                "value": "ImportToAzure",
                "description": "Import data to azure."
              },
              {
                "name": "ExportFromAzure",
                "value": "ExportFromAzure",
                "description": "Export data from azure."
              }
            ]
          }
        },
        "country": {
          "type": "string",
          "description": "ISO country code. Country for hardware shipment. For codes check: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements"
        },
        "location": {
          "type": "string",
          "description": "Location for data transfer. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01"
        },
        "model": {
          "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
          "type": "string",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy",
            "DataBoxCustomerDisk",
            "AzureDataBox120",
            "AzureDataBox525"
          ],
          "x-ms-enum": {
            "name": "ModelName",
            "modelAsString": false,
            "values": [
              {
                "name": "DataBox",
                "value": "DataBox",
                "description": "Data Box."
              },
              {
                "name": "DataBoxDisk",
                "value": "DataBoxDisk",
                "description": "Data Box Disk."
              },
              {
                "name": "DataBoxHeavy",
                "value": "DataBoxHeavy",
                "description": "Data Box Heavy."
              },
              {
                "name": "DataBoxCustomerDisk",
                "value": "DataBoxCustomerDisk",
                "description": "Data Box Customer Disk"
              },
              {
                "name": "AzureDataBox120",
                "value": "AzureDataBox120",
                "description": "Data Box V2 with 120TB usable capacity."
              },
              {
                "name": "AzureDataBox525",
                "value": "AzureDataBox525",
                "description": "Data Box V2 with 525TB usable capacity."
              }
            ]
          }
        }
      },
      "required": [
        "deviceType",
        "transferType",
        "country",
        "location"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Minimum fields that must be present in any type of validation request.",
          "properties": {
            "validationType": {
              "description": "Identifies the type of validation request.",
              "type": "string",
              "enum": [
                "ValidateAddress",
                "ValidateSubscriptionIsAllowedToCreateJob",
                "ValidatePreferences",
                "ValidateCreateOrderLimit",
                "ValidateSkuAvailability",
                "ValidateDataTransferDetails"
              ],
              "x-ms-enum": {
                "name": "ValidationInputDiscriminator",
                "modelAsString": false,
                "values": [
                  {
                    "name": "ValidateAddress",
                    "value": "ValidateAddress",
                    "description": "Identify request and response of address validation."
                  },
                  {
                    "name": "ValidateSubscriptionIsAllowedToCreateJob",
                    "value": "ValidateSubscriptionIsAllowedToCreateJob",
                    "description": "Identify request and response for validation of subscription permission to create job."
                  },
                  {
                    "name": "ValidatePreferences",
                    "value": "ValidatePreferences",
                    "description": "Identify request and response of preference validation."
                  },
                  {
                    "name": "ValidateCreateOrderLimit",
                    "value": "ValidateCreateOrderLimit",
                    "description": "Identify request and response of create order limit for subscription validation."
                  },
                  {
                    "name": "ValidateSkuAvailability",
                    "value": "ValidateSkuAvailability",
                    "description": "Identify request and response of active job limit for sku availability."
                  },
                  {
                    "name": "ValidateDataTransferDetails",
                    "value": "ValidateDataTransferDetails",
                    "description": "Identify request and response of data transfer details validation."
                  }
                ]
              }
            }
          },
          "discriminator": "validationType",
          "required": [
            "validationType"
          ]
        }
      ],
      "x-ms-discriminator-value": "ValidateSkuAvailability"
    },
    "SkuAvailabilityValidationResponseProperties": {
      "type": "object",
      "description": "Properties of sku availability validation response.",
      "properties": {
        "status": {
          "description": "Sku availability validation status.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Valid",
            "Invalid",
            "Skipped"
          ],
          "x-ms-enum": {
            "name": "ValidationStatus",
            "modelAsString": false,
            "values": [
              {
                "name": "Valid",
                "value": "Valid",
                "description": "Validation is successful"
              },
              {
                "name": "Invalid",
                "value": "Invalid",
                "description": "Validation is not successful"
              },
              {
                "name": "Skipped",
                "value": "Skipped",
                "description": "Validation is skipped"
              }
            ]
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ValidationInputResponse"
        }
      ],
      "x-ms-discriminator-value": "ValidateSkuAvailability"
    },
    "SkuCapacity": {
      "type": "object",
      "description": "Capacity of the sku.",
      "properties": {
        "usable": {
          "type": "string",
          "description": "Usable capacity in TB.",
          "readOnly": true
        },
        "maximum": {
          "type": "string",
          "description": "Maximum capacity in TB.",
          "readOnly": true
        },
        "individualSkuUsable": {
          "type": "string",
          "description": "Maximum capacity per device in TB.",
          "readOnly": true
        }
      }
    },
    "SkuCost": {
      "type": "object",
      "description": "Describes metadata for retrieving price info.",
      "properties": {
        "meterId": {
          "type": "string",
          "description": "Meter id of the Sku.",
          "readOnly": true
        },
        "meterType": {
          "type": "string",
          "description": "The type of the meter.",
          "readOnly": true
        },
        "multiplier": {
          "type": "number",
          "format": "double",
          "description": "Multiplier specifies the region specific value to be multiplied with 1$ guid. Eg: Our new regions will be using 1$ shipping guid with appropriate multiplier specific to region.",
          "readOnly": true
        }
      }
    },
    "SkuDisabledReason": {
      "type": "string",
      "description": "Reason why the Sku is disabled.",
      "enum": [
        "None",
        "Country",
        "Region",
        "Feature",
        "OfferType",
        "NoSubscriptionInfo"
      ],
      "x-ms-enum": {
        "name": "SkuDisabledReason",
        "modelAsString": false,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "SKU is not disabled."
          },
          {
            "name": "Country",
            "value": "Country",
            "description": "SKU is not available in the requested country."
          },
          {
            "name": "Region",
            "value": "Region",
            "description": "SKU is not available to push data to the requested Azure region."
          },
          {
            "name": "Feature",
            "value": "Feature",
            "description": "Required features are not enabled for the SKU."
          },
          {
            "name": "OfferType",
            "value": "OfferType",
            "description": "Subscription does not have required offer types for the SKU."
          },
          {
            "name": "NoSubscriptionInfo",
            "value": "NoSubscriptionInfo",
            "description": "Subscription has not registered to Microsoft.DataBox and Service does not have the subscription notification."
          }
        ]
      }
    },
    "SkuInformation": {
      "type": "object",
      "description": "Information of the sku.",
      "properties": {
        "sku": {
          "description": "The Sku.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "name": {
              "description": "The sku name.",
              "type": "string",
              "enum": [
                "DataBox",
                "DataBoxDisk",
                "DataBoxHeavy",
                "DataBoxCustomerDisk"
              ],
              "x-ms-enum": {
                "name": "SkuName",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DataBox",
                    "value": "DataBox",
                    "description": "Data Box."
                  },
                  {
                    "name": "DataBoxDisk",
                    "value": "DataBoxDisk",
                    "description": "Data Box Disk."
                  },
                  {
                    "name": "DataBoxHeavy",
                    "value": "DataBoxHeavy",
                    "description": "Data Box Heavy."
                  },
                  {
                    "name": "DataBoxCustomerDisk",
                    "value": "DataBoxCustomerDisk",
                    "description": "Data Box Customer Disk"
                  }
                ]
              }
            },
            "displayName": {
              "type": "string",
              "description": "The display name of the sku."
            },
            "family": {
              "type": "string",
              "description": "The sku family."
            },
            "model": {
              "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
              "type": "string",
              "enum": [
                "DataBox",
                "DataBoxDisk",
                "DataBoxHeavy",
                "DataBoxCustomerDisk",
                "AzureDataBox120",
                "AzureDataBox525"
              ],
              "x-ms-enum": {
                "name": "ModelName",
                "modelAsString": false,
                "values": [
                  {
                    "name": "DataBox",
                    "value": "DataBox",
                    "description": "Data Box."
                  },
                  {
                    "name": "DataBoxDisk",
                    "value": "DataBoxDisk",
                    "description": "Data Box Disk."
                  },
                  {
                    "name": "DataBoxHeavy",
                    "value": "DataBoxHeavy",
                    "description": "Data Box Heavy."
                  },
                  {
                    "name": "DataBoxCustomerDisk",
                    "value": "DataBoxCustomerDisk",
                    "description": "Data Box Customer Disk"
                  },
                  {
                    "name": "AzureDataBox120",
                    "value": "AzureDataBox120",
                    "description": "Data Box V2 with 120TB usable capacity."
                  },
                  {
                    "name": "AzureDataBox525",
                    "value": "AzureDataBox525",
                    "description": "Data Box V2 with 525TB usable capacity."
                  }
                ]
              }
            }
          },
          "required": [
            "name"
          ]
        },
        "enabled": {
          "type": "boolean",
          "description": "The sku is enabled or not.",
          "readOnly": true
        },
        "properties": {
          "description": "Properties of the sku.",
          "readOnly": true,
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "dataLocationToServiceLocationMap": {
              "type": "array",
              "description": "The map of data location to service location.",
              "items": {
                "type": "object",
                "description": "Map of data location to service location",
                "properties": {
                  "dataLocation": {
                    "type": "string",
                    "description": "Location of the data.",
                    "readOnly": true
                  },
                  "serviceLocation": {
                    "type": "string",
                    "description": "Location of the service.",
                    "readOnly": true
                  }
                }
              },
              "readOnly": true
            },
            "capacity": {
              "description": "Capacity of the Sku.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "usable": {
                  "type": "string",
                  "description": "Usable capacity in TB.",
                  "readOnly": true
                },
                "maximum": {
                  "type": "string",
                  "description": "Maximum capacity in TB.",
                  "readOnly": true
                },
                "individualSkuUsable": {
                  "type": "string",
                  "description": "Maximum capacity per device in TB.",
                  "readOnly": true
                }
              }
            },
            "costs": {
              "type": "array",
              "description": "Cost of the Sku.",
              "items": {
                "type": "object",
                "description": "Describes metadata for retrieving price info.",
                "properties": {
                  "meterId": {
                    "type": "string",
                    "description": "Meter id of the Sku.",
                    "readOnly": true
                  },
                  "meterType": {
                    "type": "string",
                    "description": "The type of the meter.",
                    "readOnly": true
                  },
                  "multiplier": {
                    "type": "number",
                    "format": "double",
                    "description": "Multiplier specifies the region specific value to be multiplied with 1$ guid. Eg: Our new regions will be using 1$ shipping guid with appropriate multiplier specific to region.",
                    "readOnly": true
                  }
                }
              },
              "readOnly": true
            },
            "apiVersions": {
              "type": "array",
              "description": "Api versions that support this Sku.",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "disabledReason": {
              "description": "Reason why the Sku is disabled.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "None",
                "Country",
                "Region",
                "Feature",
                "OfferType",
                "NoSubscriptionInfo"
              ],
              "x-ms-enum": {
                "name": "SkuDisabledReason",
                "modelAsString": false,
                "values": [
                  {
                    "name": "None",
                    "value": "None",
                    "description": "SKU is not disabled."
                  },
                  {
                    "name": "Country",
                    "value": "Country",
                    "description": "SKU is not available in the requested country."
                  },
                  {
                    "name": "Region",
                    "value": "Region",
                    "description": "SKU is not available to push data to the requested Azure region."
                  },
                  {
                    "name": "Feature",
                    "value": "Feature",
                    "description": "Required features are not enabled for the SKU."
                  },
                  {
                    "name": "OfferType",
                    "value": "OfferType",
                    "description": "Subscription does not have required offer types for the SKU."
                  },
                  {
                    "name": "NoSubscriptionInfo",
                    "value": "NoSubscriptionInfo",
                    "description": "Subscription has not registered to Microsoft.DataBox and Service does not have the subscription notification."
                  }
                ]
              }
            },
            "disabledReasonMessage": {
              "type": "string",
              "description": "Message for why the Sku is disabled.",
              "readOnly": true
            },
            "requiredFeature": {
              "type": "string",
              "description": "Required feature to access the sku.",
              "readOnly": true
            },
            "countriesWithinCommerceBoundary": {
              "type": "array",
              "description": "List of all the Countries in the SKU specific commerce boundary",
              "items": {
                "type": "string"
              },
              "readOnly": true
            }
          }
        }
      }
    },
    "SkuName": {
      "type": "string",
      "description": "SKU names.",
      "enum": [
        "DataBox",
        "DataBoxDisk",
        "DataBoxHeavy",
        "DataBoxCustomerDisk"
      ],
      "x-ms-enum": {
        "name": "SkuName",
        "modelAsString": false,
        "values": [
          {
            "name": "DataBox",
            "value": "DataBox",
            "description": "Data Box."
          },
          {
            "name": "DataBoxDisk",
            "value": "DataBoxDisk",
            "description": "Data Box Disk."
          },
          {
            "name": "DataBoxHeavy",
            "value": "DataBoxHeavy",
            "description": "Data Box Heavy."
          },
          {
            "name": "DataBoxCustomerDisk",
            "value": "DataBoxCustomerDisk",
            "description": "Data Box Customer Disk"
          }
        ]
      }
    },
    "SkuProperties": {
      "type": "object",
      "description": "Properties of the sku.",
      "properties": {
        "dataLocationToServiceLocationMap": {
          "type": "array",
          "description": "The map of data location to service location.",
          "items": {
            "type": "object",
            "description": "Map of data location to service location",
            "properties": {
              "dataLocation": {
                "type": "string",
                "description": "Location of the data.",
                "readOnly": true
              },
              "serviceLocation": {
                "type": "string",
                "description": "Location of the service.",
                "readOnly": true
              }
            }
          },
          "readOnly": true
        },
        "capacity": {
          "description": "Capacity of the Sku.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "usable": {
              "type": "string",
              "description": "Usable capacity in TB.",
              "readOnly": true
            },
            "maximum": {
              "type": "string",
              "description": "Maximum capacity in TB.",
              "readOnly": true
            },
            "individualSkuUsable": {
              "type": "string",
              "description": "Maximum capacity per device in TB.",
              "readOnly": true
            }
          }
        },
        "costs": {
          "type": "array",
          "description": "Cost of the Sku.",
          "items": {
            "type": "object",
            "description": "Describes metadata for retrieving price info.",
            "properties": {
              "meterId": {
                "type": "string",
                "description": "Meter id of the Sku.",
                "readOnly": true
              },
              "meterType": {
                "type": "string",
                "description": "The type of the meter.",
                "readOnly": true
              },
              "multiplier": {
                "type": "number",
                "format": "double",
                "description": "Multiplier specifies the region specific value to be multiplied with 1$ guid. Eg: Our new regions will be using 1$ shipping guid with appropriate multiplier specific to region.",
                "readOnly": true
              }
            }
          },
          "readOnly": true
        },
        "apiVersions": {
          "type": "array",
          "description": "Api versions that support this Sku.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "disabledReason": {
          "description": "Reason why the Sku is disabled.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "None",
            "Country",
            "Region",
            "Feature",
            "OfferType",
            "NoSubscriptionInfo"
          ],
          "x-ms-enum": {
            "name": "SkuDisabledReason",
            "modelAsString": false,
            "values": [
              {
                "name": "None",
                "value": "None",
                "description": "SKU is not disabled."
              },
              {
                "name": "Country",
                "value": "Country",
                "description": "SKU is not available in the requested country."
              },
              {
                "name": "Region",
                "value": "Region",
                "description": "SKU is not available to push data to the requested Azure region."
              },
              {
                "name": "Feature",
                "value": "Feature",
                "description": "Required features are not enabled for the SKU."
              },
              {
                "name": "OfferType",
                "value": "OfferType",
                "description": "Subscription does not have required offer types for the SKU."
              },
              {
                "name": "NoSubscriptionInfo",
                "value": "NoSubscriptionInfo",
                "description": "Subscription has not registered to Microsoft.DataBox and Service does not have the subscription notification."
              }
            ]
          }
        },
        "disabledReasonMessage": {
          "type": "string",
          "description": "Message for why the Sku is disabled.",
          "readOnly": true
        },
        "requiredFeature": {
          "type": "string",
          "description": "Required feature to access the sku.",
          "readOnly": true
        },
        "countriesWithinCommerceBoundary": {
          "type": "array",
          "description": "List of all the Countries in the SKU specific commerce boundary",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "StageName": {
      "type": "string",
      "description": "Name of the stage which is in progress.",
      "enum": [
        "DeviceOrdered",
        "DevicePrepared",
        "Dispatched",
        "Delivered",
        "PickedUp",
        "AtAzureDC",
        "DataCopy",
        "Completed",
        "CompletedWithErrors",
        "Cancelled",
        "Failed_IssueReportedAtCustomer",
        "Failed_IssueDetectedAtAzureDC",
        "Aborted",
        "CompletedWithWarnings",
        "ReadyToDispatchFromAzureDC",
        "ReadyToReceiveAtAzureDC",
        "Created",
        "ShippedToAzureDC",
        "AwaitingShipmentDetails",
        "PreparingToShipFromAzureDC",
        "ShippedToCustomer"
      ],
      "x-ms-enum": {
        "name": "StageName",
        "modelAsString": true,
        "values": [
          {
            "name": "DeviceOrdered",
            "value": "DeviceOrdered",
            "description": "An order has been created."
          },
          {
            "name": "DevicePrepared",
            "value": "DevicePrepared",
            "description": "A device has been prepared for the order."
          },
          {
            "name": "Dispatched",
            "value": "Dispatched",
            "description": "Device has been dispatched to the user of the order."
          },
          {
            "name": "Delivered",
            "value": "Delivered",
            "description": "Device has been delivered to the user of the order."
          },
          {
            "name": "PickedUp",
            "value": "PickedUp",
            "description": "Device has been picked up from user and in transit to Azure datacenter."
          },
          {
            "name": "AtAzureDC",
            "value": "AtAzureDC",
            "description": "Device has been received at Azure datacenter from the user."
          },
          {
            "name": "DataCopy",
            "value": "DataCopy",
            "description": "Data copy from the device at Azure datacenter."
          },
          {
            "name": "Completed",
            "value": "Completed",
            "description": "Order has completed."
          },
          {
            "name": "CompletedWithErrors",
            "value": "CompletedWithErrors",
            "description": "Order has completed with errors."
          },
          {
            "name": "Cancelled",
            "value": "Cancelled",
            "description": "Order has been cancelled."
          },
          {
            "name": "Failed_IssueReportedAtCustomer",
            "value": "Failed_IssueReportedAtCustomer",
            "description": "Order has failed due to issue reported by user."
          },
          {
            "name": "Failed_IssueDetectedAtAzureDC",
            "value": "Failed_IssueDetectedAtAzureDC",
            "description": "Order has failed due to issue detected at Azure datacenter."
          },
          {
            "name": "Aborted",
            "value": "Aborted",
            "description": "Order has been aborted."
          },
          {
            "name": "CompletedWithWarnings",
            "value": "CompletedWithWarnings",
            "description": "Order has completed with warnings."
          },
          {
            "name": "ReadyToDispatchFromAzureDC",
            "value": "ReadyToDispatchFromAzureDC",
            "description": "Device is ready to be handed to customer from Azure DC."
          },
          {
            "name": "ReadyToReceiveAtAzureDC",
            "value": "ReadyToReceiveAtAzureDC",
            "description": "Device can be dropped off at Azure DC."
          },
          {
            "name": "Created",
            "value": "Created",
            "description": "Job created by the customer."
          },
          {
            "name": "ShippedToAzureDC",
            "value": "ShippedToAzureDC",
            "description": "User shipped the device to AzureDC."
          },
          {
            "name": "AwaitingShipmentDetails",
            "value": "AwaitingShipmentDetails",
            "description": "Awaiting shipment details of device from customer."
          },
          {
            "name": "PreparingToShipFromAzureDC",
            "value": "PreparingToShipFromAzureDC",
            "description": "Preparing the device to ship to customer."
          },
          {
            "name": "ShippedToCustomer",
            "value": "ShippedToCustomer",
            "description": "Shipped the device to customer."
          }
        ]
      }
    },
    "StageStatus": {
      "type": "string",
      "description": "Holds the device erasure completion status",
      "enum": [
        "None",
        "InProgress",
        "Succeeded",
        "Failed",
        "Cancelled",
        "Cancelling",
        "SucceededWithErrors",
        "WaitingForCustomerAction",
        "SucceededWithWarnings",
        "WaitingForCustomerActionForKek",
        "WaitingForCustomerActionForCleanUp",
        "CustomerActionPerformedForCleanUp",
        "CustomerActionPerformed"
      ],
      "x-ms-enum": {
        "name": "StageStatus",
        "modelAsString": false,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "No status available yet."
          },
          {
            "name": "InProgress",
            "value": "InProgress",
            "description": "Stage is in progress."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Stage has succeeded."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Stage has failed."
          },
          {
            "name": "Cancelled",
            "value": "Cancelled",
            "description": "Stage has been cancelled."
          },
          {
            "name": "Cancelling",
            "value": "Cancelling",
            "description": "Stage is cancelling."
          },
          {
            "name": "SucceededWithErrors",
            "value": "SucceededWithErrors",
            "description": "Stage has succeeded with errors."
          },
          {
            "name": "WaitingForCustomerAction",
            "value": "WaitingForCustomerAction",
            "description": "Stage is stuck until customer takes some action."
          },
          {
            "name": "SucceededWithWarnings",
            "value": "SucceededWithWarnings",
            "description": "Stage has succeeded with warnings."
          },
          {
            "name": "WaitingForCustomerActionForKek",
            "value": "WaitingForCustomerActionForKek",
            "description": "Stage is waiting for customer action for kek action items."
          },
          {
            "name": "WaitingForCustomerActionForCleanUp",
            "value": "WaitingForCustomerActionForCleanUp",
            "description": "Stage is waiting for customer action for clean up."
          },
          {
            "name": "CustomerActionPerformedForCleanUp",
            "value": "CustomerActionPerformedForCleanUp",
            "description": "Stage has performed customer action for clean up."
          },
          {
            "name": "CustomerActionPerformed",
            "value": "CustomerActionPerformed",
            "description": "Stage has performed customer action for clean up."
          }
        ]
      },
      "readOnly": true
    },
    "StorageAccountDetails": {
      "type": "object",
      "description": "Details for the storage account.",
      "properties": {
        "storageAccountId": {
          "type": "string",
          "description": "Storage Account Resource Id."
        }
      },
      "required": [
        "storageAccountId"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Account details of the data to be transferred",
          "properties": {
            "dataAccountType": {
              "type": "string",
              "description": "Account Type of the data to be transferred.",
              "default": "StorageAccount",
              "enum": [
                "StorageAccount",
                "ManagedDisk"
              ],
              "x-ms-enum": {
                "name": "DataAccountType",
                "modelAsString": false,
                "values": [
                  {
                    "name": "StorageAccount",
                    "value": "StorageAccount",
                    "description": "Storage Accounts ."
                  },
                  {
                    "name": "ManagedDisk",
                    "value": "ManagedDisk",
                    "description": "Azure Managed disk storage."
                  }
                ]
              }
            },
            "sharePassword": {
              "type": "string",
              "format": "password",
              "description": "Password for all the shares to be created on the device. Should not be passed for TransferType:ExportFromAzure jobs. If this is not passed, the service will generate password itself. This will not be returned in Get Call. Password Requirements :  Password must be minimum of 12 and maximum of 64 characters. Password must have at least one uppercase alphabet, one number and one special character. Password cannot have the following characters : IilLoO0 Password can have only alphabets, numbers and these characters : @#\\-$%^!+=;:_()]+",
              "x-ms-mutability": [
                "create"
              ],
              "x-ms-secret": true
            }
          },
          "discriminator": "dataAccountType",
          "required": [
            "dataAccountType"
          ]
        }
      ],
      "x-ms-discriminator-value": "StorageAccount"
    },
    "SubscriptionIsAllowedToCreateJobValidationRequest": {
      "type": "object",
      "description": "Request to validate subscription permission to create jobs.",
      "allOf": [
        {
          "type": "object",
          "description": "Minimum fields that must be present in any type of validation request.",
          "properties": {
            "validationType": {
              "description": "Identifies the type of validation request.",
              "type": "string",
              "enum": [
                "ValidateAddress",
                "ValidateSubscriptionIsAllowedToCreateJob",
                "ValidatePreferences",
                "ValidateCreateOrderLimit",
                "ValidateSkuAvailability",
                "ValidateDataTransferDetails"
              ],
              "x-ms-enum": {
                "name": "ValidationInputDiscriminator",
                "modelAsString": false,
                "values": [
                  {
                    "name": "ValidateAddress",
                    "value": "ValidateAddress",
                    "description": "Identify request and response of address validation."
                  },
                  {
                    "name": "ValidateSubscriptionIsAllowedToCreateJob",
                    "value": "ValidateSubscriptionIsAllowedToCreateJob",
                    "description": "Identify request and response for validation of subscription permission to create job."
                  },
                  {
                    "name": "ValidatePreferences",
                    "value": "ValidatePreferences",
                    "description": "Identify request and response of preference validation."
                  },
                  {
                    "name": "ValidateCreateOrderLimit",
                    "value": "ValidateCreateOrderLimit",
                    "description": "Identify request and response of create order limit for subscription validation."
                  },
                  {
                    "name": "ValidateSkuAvailability",
                    "value": "ValidateSkuAvailability",
                    "description": "Identify request and response of active job limit for sku availability."
                  },
                  {
                    "name": "ValidateDataTransferDetails",
                    "value": "ValidateDataTransferDetails",
                    "description": "Identify request and response of data transfer details validation."
                  }
                ]
              }
            }
          },
          "discriminator": "validationType",
          "required": [
            "validationType"
          ]
        }
      ],
      "x-ms-discriminator-value": "ValidateSubscriptionIsAllowedToCreateJob"
    },
    "SubscriptionIsAllowedToCreateJobValidationResponseProperties": {
      "type": "object",
      "description": "Properties of subscription permission to create job validation response.",
      "properties": {
        "status": {
          "description": "Validation status of subscription permission to create job.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Valid",
            "Invalid",
            "Skipped"
          ],
          "x-ms-enum": {
            "name": "ValidationStatus",
            "modelAsString": false,
            "values": [
              {
                "name": "Valid",
                "value": "Valid",
                "description": "Validation is successful"
              },
              {
                "name": "Invalid",
                "value": "Invalid",
                "description": "Validation is not successful"
              },
              {
                "name": "Skipped",
                "value": "Skipped",
                "description": "Validation is skipped"
              }
            ]
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ValidationInputResponse"
        }
      ],
      "x-ms-discriminator-value": "ValidateSubscriptionIsAllowedToCreateJob"
    },
    "TransferAllDetails": {
      "type": "object",
      "description": "Details to transfer all data.",
      "properties": {
        "dataAccountType": {
          "type": "string",
          "description": "Type of the account of data",
          "default": "StorageAccount",
          "enum": [
            "StorageAccount",
            "ManagedDisk"
          ],
          "x-ms-enum": {
            "name": "DataAccountType",
            "modelAsString": false,
            "values": [
              {
                "name": "StorageAccount",
                "value": "StorageAccount",
                "description": "Storage Accounts ."
              },
              {
                "name": "ManagedDisk",
                "value": "ManagedDisk",
                "description": "Azure Managed disk storage."
              }
            ]
          }
        },
        "transferAllBlobs": {
          "type": "boolean",
          "description": "To indicate if all Azure blobs have to be transferred"
        },
        "transferAllFiles": {
          "type": "boolean",
          "description": "To indicate if all Azure Files have to be transferred"
        }
      },
      "required": [
        "dataAccountType"
      ]
    },
    "TransferConfiguration": {
      "type": "object",
      "description": "Configuration for defining the transfer of data.",
      "properties": {
        "transferConfigurationType": {
          "description": "Type of the configuration for transfer.",
          "type": "string",
          "enum": [
            "TransferAll",
            "TransferUsingFilter"
          ],
          "x-ms-enum": {
            "name": "TransferConfigurationType",
            "modelAsString": false,
            "values": [
              {
                "name": "TransferAll",
                "value": "TransferAll",
                "description": "Transfer all the data."
              },
              {
                "name": "TransferUsingFilter",
                "value": "TransferUsingFilter",
                "description": "Transfer using filter."
              }
            ]
          }
        },
        "transferFilterDetails": {
          "description": "Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.",
          "type": "object",
          "properties": {
            "include": {
              "description": "Details of the filtering the transfer of data.",
              "type": "object",
              "properties": {
                "dataAccountType": {
                  "type": "string",
                  "description": "Type of the account of data.",
                  "default": "StorageAccount",
                  "enum": [
                    "StorageAccount",
                    "ManagedDisk"
                  ],
                  "x-ms-enum": {
                    "name": "DataAccountType",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "StorageAccount",
                        "value": "StorageAccount",
                        "description": "Storage Accounts ."
                      },
                      {
                        "name": "ManagedDisk",
                        "value": "ManagedDisk",
                        "description": "Azure Managed disk storage."
                      }
                    ]
                  }
                },
                "blobFilterDetails": {
                  "description": "Filter details to transfer blobs.",
                  "type": "object",
                  "properties": {
                    "blobPrefixList": {
                      "type": "array",
                      "description": "Prefix list of the Azure blobs to be transferred.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "blobPathList": {
                      "type": "array",
                      "description": "List of full path of the blobs to be transferred.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "containerList": {
                      "type": "array",
                      "description": "List of blob containers to be transferred.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "azureFileFilterDetails": {
                  "description": "Filter details to transfer Azure files.",
                  "type": "object",
                  "properties": {
                    "filePrefixList": {
                      "type": "array",
                      "description": "Prefix list of the Azure files to be transferred.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "filePathList": {
                      "type": "array",
                      "description": "List of full path of the files to be transferred.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "fileShareList": {
                      "type": "array",
                      "description": "List of file shares to be transferred.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "filterFileDetails": {
                  "type": "array",
                  "description": "Details of the filter files to be used for data transfer.",
                  "items": {
                    "type": "object",
                    "description": "Details of the filter files to be used for data transfer.",
                    "properties": {
                      "filterFileType": {
                        "description": "Type of the filter file.",
                        "type": "string",
                        "enum": [
                          "AzureBlob",
                          "AzureFile"
                        ],
                        "x-ms-enum": {
                          "name": "FilterFileType",
                          "modelAsString": false,
                          "values": [
                            {
                              "name": "AzureBlob",
                              "value": "AzureBlob",
                              "description": "Filter file is of the type AzureBlob."
                            },
                            {
                              "name": "AzureFile",
                              "value": "AzureFile",
                              "description": "Filter file is of the type AzureFiles."
                            }
                          ]
                        }
                      },
                      "filterFilePath": {
                        "type": "string",
                        "description": "Path of the file that contains the details of all items to transfer."
                      }
                    },
                    "required": [
                      "filterFileType",
                      "filterFilePath"
                    ]
                  }
                }
              },
              "required": [
                "dataAccountType"
              ]
            }
          }
        },
        "transferAllDetails": {
          "description": "Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll",
          "type": "object",
          "properties": {
            "include": {
              "description": "Details to transfer all data.",
              "type": "object",
              "properties": {
                "dataAccountType": {
                  "type": "string",
                  "description": "Type of the account of data",
                  "default": "StorageAccount",
                  "enum": [
                    "StorageAccount",
                    "ManagedDisk"
                  ],
                  "x-ms-enum": {
                    "name": "DataAccountType",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "StorageAccount",
                        "value": "StorageAccount",
                        "description": "Storage Accounts ."
                      },
                      {
                        "name": "ManagedDisk",
                        "value": "ManagedDisk",
                        "description": "Azure Managed disk storage."
                      }
                    ]
                  }
                },
                "transferAllBlobs": {
                  "type": "boolean",
                  "description": "To indicate if all Azure blobs have to be transferred"
                },
                "transferAllFiles": {
                  "type": "boolean",
                  "description": "To indicate if all Azure Files have to be transferred"
                }
              },
              "required": [
                "dataAccountType"
              ]
            }
          }
        }
      },
      "required": [
        "transferConfigurationType"
      ]
    },
    "TransferConfigurationTransferAllDetails": {
      "type": "object",
      "description": "Map of filter type and the details to transfer all data. This field is required only if the TransferConfigurationType is given as TransferAll",
      "properties": {
        "include": {
          "description": "Details to transfer all data.",
          "type": "object",
          "properties": {
            "dataAccountType": {
              "type": "string",
              "description": "Type of the account of data",
              "default": "StorageAccount",
              "enum": [
                "StorageAccount",
                "ManagedDisk"
              ],
              "x-ms-enum": {
                "name": "DataAccountType",
                "modelAsString": false,
                "values": [
                  {
                    "name": "StorageAccount",
                    "value": "StorageAccount",
                    "description": "Storage Accounts ."
                  },
                  {
                    "name": "ManagedDisk",
                    "value": "ManagedDisk",
                    "description": "Azure Managed disk storage."
                  }
                ]
              }
            },
            "transferAllBlobs": {
              "type": "boolean",
              "description": "To indicate if all Azure blobs have to be transferred"
            },
            "transferAllFiles": {
              "type": "boolean",
              "description": "To indicate if all Azure Files have to be transferred"
            }
          },
          "required": [
            "dataAccountType"
          ]
        }
      }
    },
    "TransferConfigurationTransferFilterDetails": {
      "type": "object",
      "description": "Map of filter type and the details to filter. This field is required only if the TransferConfigurationType is given as TransferUsingFilter.",
      "properties": {
        "include": {
          "description": "Details of the filtering the transfer of data.",
          "type": "object",
          "properties": {
            "dataAccountType": {
              "type": "string",
              "description": "Type of the account of data.",
              "default": "StorageAccount",
              "enum": [
                "StorageAccount",
                "ManagedDisk"
              ],
              "x-ms-enum": {
                "name": "DataAccountType",
                "modelAsString": false,
                "values": [
                  {
                    "name": "StorageAccount",
                    "value": "StorageAccount",
                    "description": "Storage Accounts ."
                  },
                  {
                    "name": "ManagedDisk",
                    "value": "ManagedDisk",
                    "description": "Azure Managed disk storage."
                  }
                ]
              }
            },
            "blobFilterDetails": {
              "description": "Filter details to transfer blobs.",
              "type": "object",
              "properties": {
                "blobPrefixList": {
                  "type": "array",
                  "description": "Prefix list of the Azure blobs to be transferred.",
                  "items": {
                    "type": "string"
                  }
                },
                "blobPathList": {
                  "type": "array",
                  "description": "List of full path of the blobs to be transferred.",
                  "items": {
                    "type": "string"
                  }
                },
                "containerList": {
                  "type": "array",
                  "description": "List of blob containers to be transferred.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "azureFileFilterDetails": {
              "description": "Filter details to transfer Azure files.",
              "type": "object",
              "properties": {
                "filePrefixList": {
                  "type": "array",
                  "description": "Prefix list of the Azure files to be transferred.",
                  "items": {
                    "type": "string"
                  }
                },
                "filePathList": {
                  "type": "array",
                  "description": "List of full path of the files to be transferred.",
                  "items": {
                    "type": "string"
                  }
                },
                "fileShareList": {
                  "type": "array",
                  "description": "List of file shares to be transferred.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "filterFileDetails": {
              "type": "array",
              "description": "Details of the filter files to be used for data transfer.",
              "items": {
                "type": "object",
                "description": "Details of the filter files to be used for data transfer.",
                "properties": {
                  "filterFileType": {
                    "description": "Type of the filter file.",
                    "type": "string",
                    "enum": [
                      "AzureBlob",
                      "AzureFile"
                    ],
                    "x-ms-enum": {
                      "name": "FilterFileType",
                      "modelAsString": false,
                      "values": [
                        {
                          "name": "AzureBlob",
                          "value": "AzureBlob",
                          "description": "Filter file is of the type AzureBlob."
                        },
                        {
                          "name": "AzureFile",
                          "value": "AzureFile",
                          "description": "Filter file is of the type AzureFiles."
                        }
                      ]
                    }
                  },
                  "filterFilePath": {
                    "type": "string",
                    "description": "Path of the file that contains the details of all items to transfer."
                  }
                },
                "required": [
                  "filterFileType",
                  "filterFilePath"
                ]
              }
            }
          },
          "required": [
            "dataAccountType"
          ]
        }
      }
    },
    "TransferConfigurationType": {
      "type": "string",
      "description": "Type of the configuration for transfer.",
      "enum": [
        "TransferAll",
        "TransferUsingFilter"
      ],
      "x-ms-enum": {
        "name": "TransferConfigurationType",
        "modelAsString": false,
        "values": [
          {
            "name": "TransferAll",
            "value": "TransferAll",
            "description": "Transfer all the data."
          },
          {
            "name": "TransferUsingFilter",
            "value": "TransferUsingFilter",
            "description": "Transfer using filter."
          }
        ]
      }
    },
    "TransferFilterDetails": {
      "type": "object",
      "description": "Details of the filtering the transfer of data.",
      "properties": {
        "dataAccountType": {
          "type": "string",
          "description": "Type of the account of data.",
          "default": "StorageAccount",
          "enum": [
            "StorageAccount",
            "ManagedDisk"
          ],
          "x-ms-enum": {
            "name": "DataAccountType",
            "modelAsString": false,
            "values": [
              {
                "name": "StorageAccount",
                "value": "StorageAccount",
                "description": "Storage Accounts ."
              },
              {
                "name": "ManagedDisk",
                "value": "ManagedDisk",
                "description": "Azure Managed disk storage."
              }
            ]
          }
        },
        "blobFilterDetails": {
          "description": "Filter details to transfer blobs.",
          "type": "object",
          "properties": {
            "blobPrefixList": {
              "type": "array",
              "description": "Prefix list of the Azure blobs to be transferred.",
              "items": {
                "type": "string"
              }
            },
            "blobPathList": {
              "type": "array",
              "description": "List of full path of the blobs to be transferred.",
              "items": {
                "type": "string"
              }
            },
            "containerList": {
              "type": "array",
              "description": "List of blob containers to be transferred.",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "azureFileFilterDetails": {
          "description": "Filter details to transfer Azure files.",
          "type": "object",
          "properties": {
            "filePrefixList": {
              "type": "array",
              "description": "Prefix list of the Azure files to be transferred.",
              "items": {
                "type": "string"
              }
            },
            "filePathList": {
              "type": "array",
              "description": "List of full path of the files to be transferred.",
              "items": {
                "type": "string"
              }
            },
            "fileShareList": {
              "type": "array",
              "description": "List of file shares to be transferred.",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "filterFileDetails": {
          "type": "array",
          "description": "Details of the filter files to be used for data transfer.",
          "items": {
            "type": "object",
            "description": "Details of the filter files to be used for data transfer.",
            "properties": {
              "filterFileType": {
                "description": "Type of the filter file.",
                "type": "string",
                "enum": [
                  "AzureBlob",
                  "AzureFile"
                ],
                "x-ms-enum": {
                  "name": "FilterFileType",
                  "modelAsString": false,
                  "values": [
                    {
                      "name": "AzureBlob",
                      "value": "AzureBlob",
                      "description": "Filter file is of the type AzureBlob."
                    },
                    {
                      "name": "AzureFile",
                      "value": "AzureFile",
                      "description": "Filter file is of the type AzureFiles."
                    }
                  ]
                }
              },
              "filterFilePath": {
                "type": "string",
                "description": "Path of the file that contains the details of all items to transfer."
              }
            },
            "required": [
              "filterFileType",
              "filterFilePath"
            ]
          }
        }
      },
      "required": [
        "dataAccountType"
      ]
    },
    "TransferType": {
      "type": "string",
      "description": "Type of the transfer.",
      "enum": [
        "ImportToAzure",
        "ExportFromAzure"
      ],
      "x-ms-enum": {
        "name": "TransferType",
        "modelAsString": false,
        "values": [
          {
            "name": "ImportToAzure",
            "value": "ImportToAzure",
            "description": "Import data to azure."
          },
          {
            "name": "ExportFromAzure",
            "value": "ExportFromAzure",
            "description": "Export data from azure."
          }
        ]
      }
    },
    "TransportAvailabilityDetails": {
      "type": "object",
      "description": "Transport options availability details for given region.",
      "properties": {
        "shipmentType": {
          "description": "Transport Shipment Type supported for given region.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "CustomerManaged",
            "MicrosoftManaged"
          ],
          "x-ms-enum": {
            "name": "TransportShipmentTypes",
            "modelAsString": false,
            "values": [
              {
                "name": "CustomerManaged",
                "value": "CustomerManaged",
                "description": "Shipment Logistics is handled by the customer."
              },
              {
                "name": "MicrosoftManaged",
                "value": "MicrosoftManaged",
                "description": "Shipment Logistics is handled by Microsoft."
              }
            ]
          }
        }
      }
    },
    "TransportAvailabilityRequest": {
      "type": "object",
      "description": "Request body to get the transport availability for given sku.",
      "properties": {
        "skuName": {
          "description": "Type of the device.",
          "type": "string",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy",
            "DataBoxCustomerDisk"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": false,
            "values": [
              {
                "name": "DataBox",
                "value": "DataBox",
                "description": "Data Box."
              },
              {
                "name": "DataBoxDisk",
                "value": "DataBoxDisk",
                "description": "Data Box Disk."
              },
              {
                "name": "DataBoxHeavy",
                "value": "DataBoxHeavy",
                "description": "Data Box Heavy."
              },
              {
                "name": "DataBoxCustomerDisk",
                "value": "DataBoxCustomerDisk",
                "description": "Data Box Customer Disk"
              }
            ]
          }
        },
        "model": {
          "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
          "type": "string",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy",
            "DataBoxCustomerDisk",
            "AzureDataBox120",
            "AzureDataBox525"
          ],
          "x-ms-enum": {
            "name": "ModelName",
            "modelAsString": false,
            "values": [
              {
                "name": "DataBox",
                "value": "DataBox",
                "description": "Data Box."
              },
              {
                "name": "DataBoxDisk",
                "value": "DataBoxDisk",
                "description": "Data Box Disk."
              },
              {
                "name": "DataBoxHeavy",
                "value": "DataBoxHeavy",
                "description": "Data Box Heavy."
              },
              {
                "name": "DataBoxCustomerDisk",
                "value": "DataBoxCustomerDisk",
                "description": "Data Box Customer Disk"
              },
              {
                "name": "AzureDataBox120",
                "value": "AzureDataBox120",
                "description": "Data Box V2 with 120TB usable capacity."
              },
              {
                "name": "AzureDataBox525",
                "value": "AzureDataBox525",
                "description": "Data Box V2 with 525TB usable capacity."
              }
            ]
          }
        }
      }
    },
    "TransportAvailabilityResponse": {
      "type": "object",
      "description": "Transport options available for given sku in a region.",
      "properties": {
        "transportAvailabilityDetails": {
          "type": "array",
          "description": "List of transport availability details for given region",
          "items": {
            "type": "object",
            "description": "Transport options availability details for given region.",
            "properties": {
              "shipmentType": {
                "description": "Transport Shipment Type supported for given region.",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "CustomerManaged",
                  "MicrosoftManaged"
                ],
                "x-ms-enum": {
                  "name": "TransportShipmentTypes",
                  "modelAsString": false,
                  "values": [
                    {
                      "name": "CustomerManaged",
                      "value": "CustomerManaged",
                      "description": "Shipment Logistics is handled by the customer."
                    },
                    {
                      "name": "MicrosoftManaged",
                      "value": "MicrosoftManaged",
                      "description": "Shipment Logistics is handled by Microsoft."
                    }
                  ]
                }
              }
            }
          },
          "readOnly": true
        }
      }
    },
    "TransportPreferences": {
      "type": "object",
      "description": "Preferences related to the shipment logistics of the sku",
      "properties": {
        "preferredShipmentType": {
          "description": "Indicates Shipment Logistics type that the customer preferred.",
          "type": "string",
          "enum": [
            "CustomerManaged",
            "MicrosoftManaged"
          ],
          "x-ms-enum": {
            "name": "TransportShipmentTypes",
            "modelAsString": false,
            "values": [
              {
                "name": "CustomerManaged",
                "value": "CustomerManaged",
                "description": "Shipment Logistics is handled by the customer."
              },
              {
                "name": "MicrosoftManaged",
                "value": "MicrosoftManaged",
                "description": "Shipment Logistics is handled by Microsoft."
              }
            ]
          }
        },
        "isUpdated": {
          "type": "boolean",
          "description": "Read only property which indicates whether transport preferences has been updated or not after device is prepared.",
          "readOnly": true
        }
      },
      "required": [
        "preferredShipmentType"
      ]
    },
    "TransportShipmentTypes": {
      "type": "string",
      "description": "Transport Shipment Type supported for given region.",
      "enum": [
        "CustomerManaged",
        "MicrosoftManaged"
      ],
      "x-ms-enum": {
        "name": "TransportShipmentTypes",
        "modelAsString": false,
        "values": [
          {
            "name": "CustomerManaged",
            "value": "CustomerManaged",
            "description": "Shipment Logistics is handled by the customer."
          },
          {
            "name": "MicrosoftManaged",
            "value": "MicrosoftManaged",
            "description": "Shipment Logistics is handled by Microsoft."
          }
        ]
      }
    },
    "UnencryptedCredentials": {
      "type": "object",
      "description": "Unencrypted credentials for accessing device.",
      "properties": {
        "jobName": {
          "type": "string",
          "description": "Name of the job.",
          "readOnly": true
        },
        "jobSecrets": {
          "$ref": "#/definitions/JobSecrets",
          "description": "Secrets related to this job.",
          "readOnly": true
        }
      }
    },
    "UnencryptedCredentialsList": {
      "type": "object",
      "description": "List of unencrypted credentials for accessing device.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The UnencryptedCredentials items on this page",
          "items": {
            "$ref": "#/definitions/UnencryptedCredentials"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "UpdateJobDetails": {
      "type": "object",
      "description": "Job details for update.",
      "properties": {
        "contactDetails": {
          "description": "Contact details for notification and shipping.",
          "type": "object",
          "properties": {
            "contactName": {
              "type": "string",
              "description": "Contact name of the person."
            },
            "phone": {
              "type": "string",
              "description": "Phone number of the contact person."
            },
            "phoneExtension": {
              "type": "string",
              "description": "Phone extension number of the contact person."
            },
            "mobile": {
              "type": "string",
              "description": "Mobile number of the contact person."
            },
            "emailList": {
              "type": "array",
              "description": "List of Email-ids to be notified about job progress.",
              "items": {
                "type": "string"
              }
            },
            "notificationPreference": {
              "type": "array",
              "description": "Notification preference for a job stage.",
              "items": {
                "type": "object",
                "description": "Notification preference for a job stage.",
                "properties": {
                  "stageName": {
                    "description": "Name of the stage.",
                    "type": "string",
                    "enum": [
                      "DevicePrepared",
                      "Dispatched",
                      "Delivered",
                      "PickedUp",
                      "AtAzureDC",
                      "DataCopy",
                      "Created",
                      "ShippedToCustomer"
                    ],
                    "x-ms-enum": {
                      "name": "NotificationStageName",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "DevicePrepared",
                          "value": "DevicePrepared",
                          "description": "Notification at device prepared stage."
                        },
                        {
                          "name": "Dispatched",
                          "value": "Dispatched",
                          "description": "Notification at device dispatched stage."
                        },
                        {
                          "name": "Delivered",
                          "value": "Delivered",
                          "description": "Notification at device delivered stage."
                        },
                        {
                          "name": "PickedUp",
                          "value": "PickedUp",
                          "description": "Notification at device picked up from user stage."
                        },
                        {
                          "name": "AtAzureDC",
                          "value": "AtAzureDC",
                          "description": "Notification at device received at Azure datacenter stage."
                        },
                        {
                          "name": "DataCopy",
                          "value": "DataCopy",
                          "description": "Notification at data copy started stage."
                        },
                        {
                          "name": "Created",
                          "value": "Created",
                          "description": "Notification at job created stage."
                        },
                        {
                          "name": "ShippedToCustomer",
                          "value": "ShippedToCustomer",
                          "description": "Notification at shipped devices to customer stage."
                        }
                      ]
                    }
                  },
                  "sendNotification": {
                    "type": "boolean",
                    "description": "Notification is required or not.",
                    "default": true
                  }
                },
                "required": [
                  "stageName",
                  "sendNotification"
                ]
              }
            }
          },
          "required": [
            "contactName",
            "phone",
            "emailList"
          ]
        },
        "shippingAddress": {
          "type": "object",
          "description": "Shipping address where customer wishes to receive the device.",
          "properties": {
            "streetAddress1": {
              "type": "string",
              "description": "Street Address line 1."
            },
            "streetAddress2": {
              "type": "string",
              "description": "Street Address line 2."
            },
            "streetAddress3": {
              "type": "string",
              "description": "Street Address line 3."
            },
            "city": {
              "type": "string",
              "description": "Name of the City."
            },
            "stateOrProvince": {
              "type": "string",
              "description": "Name of the State or Province."
            },
            "country": {
              "type": "string",
              "description": "Name of the Country."
            },
            "postalCode": {
              "type": "string",
              "description": "Postal code."
            },
            "zipExtendedCode": {
              "type": "string",
              "description": "Extended Zip Code."
            },
            "companyName": {
              "type": "string",
              "description": "Name of the company."
            },
            "addressType": {
              "type": "string",
              "description": "Type of address.",
              "default": "None",
              "enum": [
                "None",
                "Residential",
                "Commercial"
              ],
              "x-ms-enum": {
                "name": "AddressType",
                "modelAsString": false,
                "values": [
                  {
                    "name": "None",
                    "value": "None",
                    "description": "Address type not known."
                  },
                  {
                    "name": "Residential",
                    "value": "Residential",
                    "description": "Residential Address."
                  },
                  {
                    "name": "Commercial",
                    "value": "Commercial",
                    "description": "Commercial Address."
                  }
                ]
              }
            },
            "skipAddressValidation": {
              "type": "boolean",
              "description": "Flag to indicate if customer has chosen to skip default address validation"
            },
            "taxIdentificationNumber": {
              "type": "string",
              "description": "Tax Identification Number"
            }
          },
          "required": [
            "streetAddress1",
            "country"
          ]
        },
        "reverseShippingDetails": {
          "description": "Reverse Shipping Address and contact details for a job.",
          "type": "object",
          "properties": {
            "contactDetails": {
              "description": "Contact Info.",
              "type": "object",
              "properties": {
                "contactName": {
                  "type": "string",
                  "description": "Contact name of the person.",
                  "minLength": 1
                },
                "phone": {
                  "type": "string",
                  "description": "Phone number of the contact person.",
                  "minLength": 1
                },
                "phoneExtension": {
                  "type": "string",
                  "description": "Phone extension number of the contact person."
                },
                "mobile": {
                  "type": "string",
                  "description": "Mobile number of the contact person."
                }
              },
              "required": [
                "contactName",
                "phone"
              ]
            },
            "shippingAddress": {
              "description": "Shipping address where customer wishes to receive the device.",
              "type": "object",
              "properties": {
                "streetAddress1": {
                  "type": "string",
                  "description": "Street Address line 1."
                },
                "streetAddress2": {
                  "type": "string",
                  "description": "Street Address line 2."
                },
                "streetAddress3": {
                  "type": "string",
                  "description": "Street Address line 3."
                },
                "city": {
                  "type": "string",
                  "description": "Name of the City."
                },
                "stateOrProvince": {
                  "type": "string",
                  "description": "Name of the State or Province."
                },
                "country": {
                  "type": "string",
                  "description": "Name of the Country."
                },
                "postalCode": {
                  "type": "string",
                  "description": "Postal code."
                },
                "zipExtendedCode": {
                  "type": "string",
                  "description": "Extended Zip Code."
                },
                "companyName": {
                  "type": "string",
                  "description": "Name of the company."
                },
                "addressType": {
                  "type": "string",
                  "description": "Type of address.",
                  "default": "None",
                  "enum": [
                    "None",
                    "Residential",
                    "Commercial"
                  ],
                  "x-ms-enum": {
                    "name": "AddressType",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "None",
                        "value": "None",
                        "description": "Address type not known."
                      },
                      {
                        "name": "Residential",
                        "value": "Residential",
                        "description": "Residential Address."
                      },
                      {
                        "name": "Commercial",
                        "value": "Commercial",
                        "description": "Commercial Address."
                      }
                    ]
                  }
                },
                "skipAddressValidation": {
                  "type": "boolean",
                  "description": "Flag to indicate if customer has chosen to skip default address validation"
                },
                "taxIdentificationNumber": {
                  "type": "string",
                  "description": "Tax Identification Number"
                }
              },
              "required": [
                "streetAddress1",
                "country"
              ]
            },
            "isUpdated": {
              "type": "boolean",
              "description": "A flag to indicate whether Reverse Shipping details are updated or not after device has been prepared.\nRead only field",
              "readOnly": true
            }
          }
        },
        "preferences": {
          "description": "Preferences related to the order",
          "type": "object",
          "properties": {
            "preferredDataCenterRegion": {
              "type": "array",
              "description": "Preferred data center region.",
              "items": {
                "type": "string"
              }
            },
            "transportPreferences": {
              "description": "Preferences related to the shipment logistics of the sku.",
              "type": "object",
              "properties": {
                "preferredShipmentType": {
                  "description": "Indicates Shipment Logistics type that the customer preferred.",
                  "type": "string",
                  "enum": [
                    "CustomerManaged",
                    "MicrosoftManaged"
                  ],
                  "x-ms-enum": {
                    "name": "TransportShipmentTypes",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "CustomerManaged",
                        "value": "CustomerManaged",
                        "description": "Shipment Logistics is handled by the customer."
                      },
                      {
                        "name": "MicrosoftManaged",
                        "value": "MicrosoftManaged",
                        "description": "Shipment Logistics is handled by Microsoft."
                      }
                    ]
                  }
                },
                "isUpdated": {
                  "type": "boolean",
                  "description": "Read only property which indicates whether transport preferences has been updated or not after device is prepared.",
                  "readOnly": true
                }
              },
              "required": [
                "preferredShipmentType"
              ]
            },
            "reverseTransportPreferences": {
              "description": "Optional Preferences related to the reverse shipment logistics of the sku.",
              "type": "object",
              "properties": {
                "preferredShipmentType": {
                  "description": "Indicates Shipment Logistics type that the customer preferred.",
                  "type": "string",
                  "enum": [
                    "CustomerManaged",
                    "MicrosoftManaged"
                  ],
                  "x-ms-enum": {
                    "name": "TransportShipmentTypes",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "CustomerManaged",
                        "value": "CustomerManaged",
                        "description": "Shipment Logistics is handled by the customer."
                      },
                      {
                        "name": "MicrosoftManaged",
                        "value": "MicrosoftManaged",
                        "description": "Shipment Logistics is handled by Microsoft."
                      }
                    ]
                  }
                },
                "isUpdated": {
                  "type": "boolean",
                  "description": "Read only property which indicates whether transport preferences has been updated or not after device is prepared.",
                  "readOnly": true
                }
              },
              "required": [
                "preferredShipmentType"
              ]
            },
            "encryptionPreferences": {
              "description": "Preferences related to the Encryption.",
              "type": "object",
              "properties": {
                "doubleEncryption": {
                  "type": "string",
                  "description": "Defines secondary layer of software-based encryption enablement.",
                  "default": "Disabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "DoubleEncryption",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "Software-based encryption is enabled."
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "Software-based encryption is disabled."
                      }
                    ]
                  }
                },
                "hardwareEncryption": {
                  "description": "Defines Hardware level encryption (Only for disk)",
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "HardwareEncryption",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "Hardware-based encryption is enabled."
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "Hardware-based encryption is disabled."
                      }
                    ]
                  }
                }
              }
            },
            "storageAccountAccessTierPreferences": {
              "type": "array",
              "description": "Preferences related to the Access Tier of storage accounts.",
              "items": {
                "type": "string",
                "enum": [
                  "Archive"
                ],
                "x-ms-enum": {
                  "modelAsString": false
                }
              }
            }
          }
        },
        "keyEncryptionKey": {
          "description": "Key encryption key for the job.",
          "type": "object",
          "properties": {
            "kekType": {
              "type": "string",
              "description": "Type of encryption key used for key encryption.",
              "default": "MicrosoftManaged",
              "enum": [
                "MicrosoftManaged",
                "CustomerManaged"
              ],
              "x-ms-enum": {
                "name": "KekType",
                "modelAsString": false,
                "values": [
                  {
                    "name": "MicrosoftManaged",
                    "value": "MicrosoftManaged",
                    "description": "Key encryption key is managed by Microsoft."
                  },
                  {
                    "name": "CustomerManaged",
                    "value": "CustomerManaged",
                    "description": "Key encryption key is managed by the Customer."
                  }
                ]
              }
            },
            "identityProperties": {
              "description": "Managed identity properties used for key encryption.",
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Managed service identity type."
                },
                "userAssigned": {
                  "description": "User assigned identity properties.",
                  "type": "object",
                  "properties": {
                    "resourceId": {
                      "type": "string",
                      "description": "Arm resource id for user assigned identity to be used to fetch MSI token."
                    }
                  }
                }
              }
            },
            "kekUrl": {
              "type": "string",
              "description": "Key encryption key. It is required in case of Customer managed KekType."
            },
            "kekVaultResourceID": {
              "type": "string",
              "description": "Kek vault resource id. It is required in case of Customer managed KekType."
            }
          },
          "required": [
            "kekType"
          ]
        },
        "returnToCustomerPackageDetails": {
          "description": "Return package details of job.",
          "type": "object",
          "properties": {
            "carrierAccountNumber": {
              "type": "string",
              "format": "password",
              "description": "Carrier Account Number of customer for customer disk.",
              "x-ms-secret": true
            },
            "carrierName": {
              "type": "string",
              "description": "Name of the carrier."
            },
            "trackingId": {
              "type": "string",
              "description": "Tracking Id of shipment."
            }
          }
        }
      }
    },
    "UpdateJobProperties": {
      "type": "object",
      "description": "Job Properties for update",
      "properties": {
        "details": {
          "description": "Details of a job to be updated.",
          "type": "object",
          "properties": {
            "contactDetails": {
              "description": "Contact details for notification and shipping.",
              "type": "object",
              "properties": {
                "contactName": {
                  "type": "string",
                  "description": "Contact name of the person."
                },
                "phone": {
                  "type": "string",
                  "description": "Phone number of the contact person."
                },
                "phoneExtension": {
                  "type": "string",
                  "description": "Phone extension number of the contact person."
                },
                "mobile": {
                  "type": "string",
                  "description": "Mobile number of the contact person."
                },
                "emailList": {
                  "type": "array",
                  "description": "List of Email-ids to be notified about job progress.",
                  "items": {
                    "type": "string"
                  }
                },
                "notificationPreference": {
                  "type": "array",
                  "description": "Notification preference for a job stage.",
                  "items": {
                    "type": "object",
                    "description": "Notification preference for a job stage.",
                    "properties": {
                      "stageName": {
                        "description": "Name of the stage.",
                        "type": "string",
                        "enum": [
                          "DevicePrepared",
                          "Dispatched",
                          "Delivered",
                          "PickedUp",
                          "AtAzureDC",
                          "DataCopy",
                          "Created",
                          "ShippedToCustomer"
                        ],
                        "x-ms-enum": {
                          "name": "NotificationStageName",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "DevicePrepared",
                              "value": "DevicePrepared",
                              "description": "Notification at device prepared stage."
                            },
                            {
                              "name": "Dispatched",
                              "value": "Dispatched",
                              "description": "Notification at device dispatched stage."
                            },
                            {
                              "name": "Delivered",
                              "value": "Delivered",
                              "description": "Notification at device delivered stage."
                            },
                            {
                              "name": "PickedUp",
                              "value": "PickedUp",
                              "description": "Notification at device picked up from user stage."
                            },
                            {
                              "name": "AtAzureDC",
                              "value": "AtAzureDC",
                              "description": "Notification at device received at Azure datacenter stage."
                            },
                            {
                              "name": "DataCopy",
                              "value": "DataCopy",
                              "description": "Notification at data copy started stage."
                            },
                            {
                              "name": "Created",
                              "value": "Created",
                              "description": "Notification at job created stage."
                            },
                            {
                              "name": "ShippedToCustomer",
                              "value": "ShippedToCustomer",
                              "description": "Notification at shipped devices to customer stage."
                            }
                          ]
                        }
                      },
                      "sendNotification": {
                        "type": "boolean",
                        "description": "Notification is required or not.",
                        "default": true
                      }
                    },
                    "required": [
                      "stageName",
                      "sendNotification"
                    ]
                  }
                }
              },
              "required": [
                "contactName",
                "phone",
                "emailList"
              ]
            },
            "shippingAddress": {
              "type": "object",
              "description": "Shipping address where customer wishes to receive the device.",
              "properties": {
                "streetAddress1": {
                  "type": "string",
                  "description": "Street Address line 1."
                },
                "streetAddress2": {
                  "type": "string",
                  "description": "Street Address line 2."
                },
                "streetAddress3": {
                  "type": "string",
                  "description": "Street Address line 3."
                },
                "city": {
                  "type": "string",
                  "description": "Name of the City."
                },
                "stateOrProvince": {
                  "type": "string",
                  "description": "Name of the State or Province."
                },
                "country": {
                  "type": "string",
                  "description": "Name of the Country."
                },
                "postalCode": {
                  "type": "string",
                  "description": "Postal code."
                },
                "zipExtendedCode": {
                  "type": "string",
                  "description": "Extended Zip Code."
                },
                "companyName": {
                  "type": "string",
                  "description": "Name of the company."
                },
                "addressType": {
                  "type": "string",
                  "description": "Type of address.",
                  "default": "None",
                  "enum": [
                    "None",
                    "Residential",
                    "Commercial"
                  ],
                  "x-ms-enum": {
                    "name": "AddressType",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "None",
                        "value": "None",
                        "description": "Address type not known."
                      },
                      {
                        "name": "Residential",
                        "value": "Residential",
                        "description": "Residential Address."
                      },
                      {
                        "name": "Commercial",
                        "value": "Commercial",
                        "description": "Commercial Address."
                      }
                    ]
                  }
                },
                "skipAddressValidation": {
                  "type": "boolean",
                  "description": "Flag to indicate if customer has chosen to skip default address validation"
                },
                "taxIdentificationNumber": {
                  "type": "string",
                  "description": "Tax Identification Number"
                }
              },
              "required": [
                "streetAddress1",
                "country"
              ]
            },
            "reverseShippingDetails": {
              "description": "Reverse Shipping Address and contact details for a job.",
              "type": "object",
              "properties": {
                "contactDetails": {
                  "description": "Contact Info.",
                  "type": "object",
                  "properties": {
                    "contactName": {
                      "type": "string",
                      "description": "Contact name of the person.",
                      "minLength": 1
                    },
                    "phone": {
                      "type": "string",
                      "description": "Phone number of the contact person.",
                      "minLength": 1
                    },
                    "phoneExtension": {
                      "type": "string",
                      "description": "Phone extension number of the contact person."
                    },
                    "mobile": {
                      "type": "string",
                      "description": "Mobile number of the contact person."
                    }
                  },
                  "required": [
                    "contactName",
                    "phone"
                  ]
                },
                "shippingAddress": {
                  "description": "Shipping address where customer wishes to receive the device.",
                  "type": "object",
                  "properties": {
                    "streetAddress1": {
                      "type": "string",
                      "description": "Street Address line 1."
                    },
                    "streetAddress2": {
                      "type": "string",
                      "description": "Street Address line 2."
                    },
                    "streetAddress3": {
                      "type": "string",
                      "description": "Street Address line 3."
                    },
                    "city": {
                      "type": "string",
                      "description": "Name of the City."
                    },
                    "stateOrProvince": {
                      "type": "string",
                      "description": "Name of the State or Province."
                    },
                    "country": {
                      "type": "string",
                      "description": "Name of the Country."
                    },
                    "postalCode": {
                      "type": "string",
                      "description": "Postal code."
                    },
                    "zipExtendedCode": {
                      "type": "string",
                      "description": "Extended Zip Code."
                    },
                    "companyName": {
                      "type": "string",
                      "description": "Name of the company."
                    },
                    "addressType": {
                      "type": "string",
                      "description": "Type of address.",
                      "default": "None",
                      "enum": [
                        "None",
                        "Residential",
                        "Commercial"
                      ],
                      "x-ms-enum": {
                        "name": "AddressType",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "None",
                            "value": "None",
                            "description": "Address type not known."
                          },
                          {
                            "name": "Residential",
                            "value": "Residential",
                            "description": "Residential Address."
                          },
                          {
                            "name": "Commercial",
                            "value": "Commercial",
                            "description": "Commercial Address."
                          }
                        ]
                      }
                    },
                    "skipAddressValidation": {
                      "type": "boolean",
                      "description": "Flag to indicate if customer has chosen to skip default address validation"
                    },
                    "taxIdentificationNumber": {
                      "type": "string",
                      "description": "Tax Identification Number"
                    }
                  },
                  "required": [
                    "streetAddress1",
                    "country"
                  ]
                },
                "isUpdated": {
                  "type": "boolean",
                  "description": "A flag to indicate whether Reverse Shipping details are updated or not after device has been prepared.\nRead only field",
                  "readOnly": true
                }
              }
            },
            "preferences": {
              "description": "Preferences related to the order",
              "type": "object",
              "properties": {
                "preferredDataCenterRegion": {
                  "type": "array",
                  "description": "Preferred data center region.",
                  "items": {
                    "type": "string"
                  }
                },
                "transportPreferences": {
                  "description": "Preferences related to the shipment logistics of the sku.",
                  "type": "object",
                  "properties": {
                    "preferredShipmentType": {
                      "description": "Indicates Shipment Logistics type that the customer preferred.",
                      "type": "string",
                      "enum": [
                        "CustomerManaged",
                        "MicrosoftManaged"
                      ],
                      "x-ms-enum": {
                        "name": "TransportShipmentTypes",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "CustomerManaged",
                            "value": "CustomerManaged",
                            "description": "Shipment Logistics is handled by the customer."
                          },
                          {
                            "name": "MicrosoftManaged",
                            "value": "MicrosoftManaged",
                            "description": "Shipment Logistics is handled by Microsoft."
                          }
                        ]
                      }
                    },
                    "isUpdated": {
                      "type": "boolean",
                      "description": "Read only property which indicates whether transport preferences has been updated or not after device is prepared.",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "preferredShipmentType"
                  ]
                },
                "reverseTransportPreferences": {
                  "description": "Optional Preferences related to the reverse shipment logistics of the sku.",
                  "type": "object",
                  "properties": {
                    "preferredShipmentType": {
                      "description": "Indicates Shipment Logistics type that the customer preferred.",
                      "type": "string",
                      "enum": [
                        "CustomerManaged",
                        "MicrosoftManaged"
                      ],
                      "x-ms-enum": {
                        "name": "TransportShipmentTypes",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "CustomerManaged",
                            "value": "CustomerManaged",
                            "description": "Shipment Logistics is handled by the customer."
                          },
                          {
                            "name": "MicrosoftManaged",
                            "value": "MicrosoftManaged",
                            "description": "Shipment Logistics is handled by Microsoft."
                          }
                        ]
                      }
                    },
                    "isUpdated": {
                      "type": "boolean",
                      "description": "Read only property which indicates whether transport preferences has been updated or not after device is prepared.",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "preferredShipmentType"
                  ]
                },
                "encryptionPreferences": {
                  "description": "Preferences related to the Encryption.",
                  "type": "object",
                  "properties": {
                    "doubleEncryption": {
                      "type": "string",
                      "description": "Defines secondary layer of software-based encryption enablement.",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "DoubleEncryption",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Software-based encryption is enabled."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Software-based encryption is disabled."
                          }
                        ]
                      }
                    },
                    "hardwareEncryption": {
                      "description": "Defines Hardware level encryption (Only for disk)",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "HardwareEncryption",
                        "modelAsString": false,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Hardware-based encryption is enabled."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Hardware-based encryption is disabled."
                          }
                        ]
                      }
                    }
                  }
                },
                "storageAccountAccessTierPreferences": {
                  "type": "array",
                  "description": "Preferences related to the Access Tier of storage accounts.",
                  "items": {
                    "type": "string",
                    "enum": [
                      "Archive"
                    ],
                    "x-ms-enum": {
                      "modelAsString": false
                    }
                  }
                }
              }
            },
            "keyEncryptionKey": {
              "description": "Key encryption key for the job.",
              "type": "object",
              "properties": {
                "kekType": {
                  "type": "string",
                  "description": "Type of encryption key used for key encryption.",
                  "default": "MicrosoftManaged",
                  "enum": [
                    "MicrosoftManaged",
                    "CustomerManaged"
                  ],
                  "x-ms-enum": {
                    "name": "KekType",
                    "modelAsString": false,
                    "values": [
                      {
                        "name": "MicrosoftManaged",
                        "value": "MicrosoftManaged",
                        "description": "Key encryption key is managed by Microsoft."
                      },
                      {
                        "name": "CustomerManaged",
                        "value": "CustomerManaged",
                        "description": "Key encryption key is managed by the Customer."
                      }
                    ]
                  }
                },
                "identityProperties": {
                  "description": "Managed identity properties used for key encryption.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Managed service identity type."
                    },
                    "userAssigned": {
                      "description": "User assigned identity properties.",
                      "type": "object",
                      "properties": {
                        "resourceId": {
                          "type": "string",
                          "description": "Arm resource id for user assigned identity to be used to fetch MSI token."
                        }
                      }
                    }
                  }
                },
                "kekUrl": {
                  "type": "string",
                  "description": "Key encryption key. It is required in case of Customer managed KekType."
                },
                "kekVaultResourceID": {
                  "type": "string",
                  "description": "Kek vault resource id. It is required in case of Customer managed KekType."
                }
              },
              "required": [
                "kekType"
              ]
            },
            "returnToCustomerPackageDetails": {
              "description": "Return package details of job.",
              "type": "object",
              "properties": {
                "carrierAccountNumber": {
                  "type": "string",
                  "format": "password",
                  "description": "Carrier Account Number of customer for customer disk.",
                  "x-ms-secret": true
                },
                "carrierName": {
                  "type": "string",
                  "description": "Name of the carrier."
                },
                "trackingId": {
                  "type": "string",
                  "description": "Tracking Id of shipment."
                }
              }
            }
          }
        }
      }
    },
    "UserAssignedProperties": {
      "type": "object",
      "description": "User assigned identity properties.",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "Arm resource id for user assigned identity to be used to fetch MSI token."
        }
      }
    },
    "ValidateAddress": {
      "type": "object",
      "description": "The requirements to validate customer address where the device needs to be shipped.",
      "properties": {
        "validationType": {
          "description": "Identifies the type of validation request.",
          "type": "string",
          "enum": [
            "ValidateAddress",
            "ValidateSubscriptionIsAllowedToCreateJob",
            "ValidatePreferences",
            "ValidateCreateOrderLimit",
            "ValidateSkuAvailability",
            "ValidateDataTransferDetails"
          ],
          "x-ms-enum": {
            "name": "ValidationInputDiscriminator",
            "modelAsString": false,
            "values": [
              {
                "name": "ValidateAddress",
                "value": "ValidateAddress",
                "description": "Identify request and response of address validation."
              },
              {
                "name": "ValidateSubscriptionIsAllowedToCreateJob",
                "value": "ValidateSubscriptionIsAllowedToCreateJob",
                "description": "Identify request and response for validation of subscription permission to create job."
              },
              {
                "name": "ValidatePreferences",
                "value": "ValidatePreferences",
                "description": "Identify request and response of preference validation."
              },
              {
                "name": "ValidateCreateOrderLimit",
                "value": "ValidateCreateOrderLimit",
                "description": "Identify request and response of create order limit for subscription validation."
              },
              {
                "name": "ValidateSkuAvailability",
                "value": "ValidateSkuAvailability",
                "description": "Identify request and response of active job limit for sku availability."
              },
              {
                "name": "ValidateDataTransferDetails",
                "value": "ValidateDataTransferDetails",
                "description": "Identify request and response of data transfer details validation."
              }
            ]
          }
        },
        "shippingAddress": {
          "description": "Shipping address of the customer.",
          "type": "object",
          "properties": {
            "streetAddress1": {
              "type": "string",
              "description": "Street Address line 1."
            },
            "streetAddress2": {
              "type": "string",
              "description": "Street Address line 2."
            },
            "streetAddress3": {
              "type": "string",
              "description": "Street Address line 3."
            },
            "city": {
              "type": "string",
              "description": "Name of the City."
            },
            "stateOrProvince": {
              "type": "string",
              "description": "Name of the State or Province."
            },
            "country": {
              "type": "string",
              "description": "Name of the Country."
            },
            "postalCode": {
              "type": "string",
              "description": "Postal code."
            },
            "zipExtendedCode": {
              "type": "string",
              "description": "Extended Zip Code."
            },
            "companyName": {
              "type": "string",
              "description": "Name of the company."
            },
            "addressType": {
              "type": "string",
              "description": "Type of address.",
              "default": "None",
              "enum": [
                "None",
                "Residential",
                "Commercial"
              ],
              "x-ms-enum": {
                "name": "AddressType",
                "modelAsString": false,
                "values": [
                  {
                    "name": "None",
                    "value": "None",
                    "description": "Address type not known."
                  },
                  {
                    "name": "Residential",
                    "value": "Residential",
                    "description": "Residential Address."
                  },
                  {
                    "name": "Commercial",
                    "value": "Commercial",
                    "description": "Commercial Address."
                  }
                ]
              }
            },
            "skipAddressValidation": {
              "type": "boolean",
              "description": "Flag to indicate if customer has chosen to skip default address validation"
            },
            "taxIdentificationNumber": {
              "type": "string",
              "description": "Tax Identification Number"
            }
          },
          "required": [
            "streetAddress1",
            "country"
          ]
        },
        "deviceType": {
          "description": "Device type to be used for the job.",
          "type": "string",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy",
            "DataBoxCustomerDisk"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": false,
            "values": [
              {
                "name": "DataBox",
                "value": "DataBox",
                "description": "Data Box."
              },
              {
                "name": "DataBoxDisk",
                "value": "DataBoxDisk",
                "description": "Data Box Disk."
              },
              {
                "name": "DataBoxHeavy",
                "value": "DataBoxHeavy",
                "description": "Data Box Heavy."
              },
              {
                "name": "DataBoxCustomerDisk",
                "value": "DataBoxCustomerDisk",
                "description": "Data Box Customer Disk"
              }
            ]
          }
        },
        "transportPreferences": {
          "description": "Preferences related to the shipment logistics of the sku.",
          "type": "object",
          "properties": {
            "preferredShipmentType": {
              "description": "Indicates Shipment Logistics type that the customer preferred.",
              "type": "string",
              "enum": [
                "CustomerManaged",
                "MicrosoftManaged"
              ],
              "x-ms-enum": {
                "name": "TransportShipmentTypes",
                "modelAsString": false,
                "values": [
                  {
                    "name": "CustomerManaged",
                    "value": "CustomerManaged",
                    "description": "Shipment Logistics is handled by the customer."
                  },
                  {
                    "name": "MicrosoftManaged",
                    "value": "MicrosoftManaged",
                    "description": "Shipment Logistics is handled by Microsoft."
                  }
                ]
              }
            },
            "isUpdated": {
              "type": "boolean",
              "description": "Read only property which indicates whether transport preferences has been updated or not after device is prepared.",
              "readOnly": true
            }
          },
          "required": [
            "preferredShipmentType"
          ]
        },
        "model": {
          "description": "The customer friendly name of the combination of version and capacity of the device. This field is necessary only at the time of ordering the newer generation device i.e. AzureDataBox120 and AzureDataBox525 as of Feb/2025",
          "type": "string",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy",
            "DataBoxCustomerDisk",
            "AzureDataBox120",
            "AzureDataBox525"
          ],
          "x-ms-enum": {
            "name": "ModelName",
            "modelAsString": false,
            "values": [
              {
                "name": "DataBox",
                "value": "DataBox",
                "description": "Data Box."
              },
              {
                "name": "DataBoxDisk",
                "value": "DataBoxDisk",
                "description": "Data Box Disk."
              },
              {
                "name": "DataBoxHeavy",
                "value": "DataBoxHeavy",
                "description": "Data Box Heavy."
              },
              {
                "name": "DataBoxCustomerDisk",
                "value": "DataBoxCustomerDisk",
                "description": "Data Box Customer Disk"
              },
              {
                "name": "AzureDataBox120",
                "value": "AzureDataBox120",
                "description": "Data Box V2 with 120TB usable capacity."
              },
              {
                "name": "AzureDataBox525",
                "value": "AzureDataBox525",
                "description": "Data Box V2 with 525TB usable capacity."
              }
            ]
          }
        }
      },
      "required": [
        "shippingAddress",
        "deviceType"
      ],
      "x-ms-discriminator-value": "ValidateAddress"
    },
    "ValidationInputDiscriminator": {
      "type": "string",
      "description": "Identifies the type of validation request.",
      "enum": [
        "ValidateAddress",
        "ValidateSubscriptionIsAllowedToCreateJob",
        "ValidatePreferences",
        "ValidateCreateOrderLimit",
        "ValidateSkuAvailability",
        "ValidateDataTransferDetails"
      ],
      "x-ms-enum": {
        "name": "ValidationInputDiscriminator",
        "modelAsString": false,
        "values": [
          {
            "name": "ValidateAddress",
            "value": "ValidateAddress",
            "description": "Identify request and response of address validation."
          },
          {
            "name": "ValidateSubscriptionIsAllowedToCreateJob",
            "value": "ValidateSubscriptionIsAllowedToCreateJob",
            "description": "Identify request and response for validation of subscription permission to create job."
          },
          {
            "name": "ValidatePreferences",
            "value": "ValidatePreferences",
            "description": "Identify request and response of preference validation."
          },
          {
            "name": "ValidateCreateOrderLimit",
            "value": "ValidateCreateOrderLimit",
            "description": "Identify request and response of create order limit for subscription validation."
          },
          {
            "name": "ValidateSkuAvailability",
            "value": "ValidateSkuAvailability",
            "description": "Identify request and response of active job limit for sku availability."
          },
          {
            "name": "ValidateDataTransferDetails",
            "value": "ValidateDataTransferDetails",
            "description": "Identify request and response of data transfer details validation."
          }
        ]
      }
    },
    "ValidationInputRequest": {
      "type": "object",
      "description": "Minimum fields that must be present in any type of validation request.",
      "properties": {
        "validationType": {
          "description": "Identifies the type of validation request.",
          "type": "string",
          "enum": [
            "ValidateAddress",
            "ValidateSubscriptionIsAllowedToCreateJob",
            "ValidatePreferences",
            "ValidateCreateOrderLimit",
            "ValidateSkuAvailability",
            "ValidateDataTransferDetails"
          ],
          "x-ms-enum": {
            "name": "ValidationInputDiscriminator",
            "modelAsString": false,
            "values": [
              {
                "name": "ValidateAddress",
                "value": "ValidateAddress",
                "description": "Identify request and response of address validation."
              },
              {
                "name": "ValidateSubscriptionIsAllowedToCreateJob",
                "value": "ValidateSubscriptionIsAllowedToCreateJob",
                "description": "Identify request and response for validation of subscription permission to create job."
              },
              {
                "name": "ValidatePreferences",
                "value": "ValidatePreferences",
                "description": "Identify request and response of preference validation."
              },
              {
                "name": "ValidateCreateOrderLimit",
                "value": "ValidateCreateOrderLimit",
                "description": "Identify request and response of create order limit for subscription validation."
              },
              {
                "name": "ValidateSkuAvailability",
                "value": "ValidateSkuAvailability",
                "description": "Identify request and response of active job limit for sku availability."
              },
              {
                "name": "ValidateDataTransferDetails",
                "value": "ValidateDataTransferDetails",
                "description": "Identify request and response of data transfer details validation."
              }
            ]
          }
        }
      },
      "discriminator": "validationType",
      "required": [
        "validationType"
      ]
    },
    "ValidationInputResponse": {
      "type": "object",
      "description": "Minimum properties that should be present in each individual validation response.",
      "properties": {
        "validationType": {
          "description": "Identifies the type of validation response.",
          "type": "string",
          "enum": [
            "ValidateAddress",
            "ValidateSubscriptionIsAllowedToCreateJob",
            "ValidatePreferences",
            "ValidateCreateOrderLimit",
            "ValidateSkuAvailability",
            "ValidateDataTransferDetails"
          ],
          "x-ms-enum": {
            "name": "ValidationInputDiscriminator",
            "modelAsString": false,
            "values": [
              {
                "name": "ValidateAddress",
                "value": "ValidateAddress",
                "description": "Identify request and response of address validation."
              },
              {
                "name": "ValidateSubscriptionIsAllowedToCreateJob",
                "value": "ValidateSubscriptionIsAllowedToCreateJob",
                "description": "Identify request and response for validation of subscription permission to create job."
              },
              {
                "name": "ValidatePreferences",
                "value": "ValidatePreferences",
                "description": "Identify request and response of preference validation."
              },
              {
                "name": "ValidateCreateOrderLimit",
                "value": "ValidateCreateOrderLimit",
                "description": "Identify request and response of create order limit for subscription validation."
              },
              {
                "name": "ValidateSkuAvailability",
                "value": "ValidateSkuAvailability",
                "description": "Identify request and response of active job limit for sku availability."
              },
              {
                "name": "ValidateDataTransferDetails",
                "value": "ValidateDataTransferDetails",
                "description": "Identify request and response of data transfer details validation."
              }
            ]
          }
        },
        "error": {
          "$ref": "#/definitions/CloudError",
          "description": "Error code and message of validation response.",
          "readOnly": true
        }
      },
      "discriminator": "validationType",
      "required": [
        "validationType"
      ]
    },
    "ValidationRequest": {
      "type": "object",
      "description": "Minimum request requirement of any validation category.",
      "properties": {
        "validationCategory": {
          "type": "string",
          "description": "Identify the nature of validation.",
          "enum": [
            "JobCreationValidation"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "individualRequestDetails": {
          "type": "array",
          "description": "List of request details contain validationType and its request as key and value respectively.",
          "items": {
            "type": "object",
            "description": "Minimum fields that must be present in any type of validation request.",
            "properties": {
              "validationType": {
                "description": "Identifies the type of validation request.",
                "type": "string",
                "enum": [
                  "ValidateAddress",
                  "ValidateSubscriptionIsAllowedToCreateJob",
                  "ValidatePreferences",
                  "ValidateCreateOrderLimit",
                  "ValidateSkuAvailability",
                  "ValidateDataTransferDetails"
                ],
                "x-ms-enum": {
                  "name": "ValidationInputDiscriminator",
                  "modelAsString": false,
                  "values": [
                    {
                      "name": "ValidateAddress",
                      "value": "ValidateAddress",
                      "description": "Identify request and response of address validation."
                    },
                    {
                      "name": "ValidateSubscriptionIsAllowedToCreateJob",
                      "value": "ValidateSubscriptionIsAllowedToCreateJob",
                      "description": "Identify request and response for validation of subscription permission to create job."
                    },
                    {
                      "name": "ValidatePreferences",
                      "value": "ValidatePreferences",
                      "description": "Identify request and response of preference validation."
                    },
                    {
                      "name": "ValidateCreateOrderLimit",
                      "value": "ValidateCreateOrderLimit",
                      "description": "Identify request and response of create order limit for subscription validation."
                    },
                    {
                      "name": "ValidateSkuAvailability",
                      "value": "ValidateSkuAvailability",
                      "description": "Identify request and response of active job limit for sku availability."
                    },
                    {
                      "name": "ValidateDataTransferDetails",
                      "value": "ValidateDataTransferDetails",
                      "description": "Identify request and response of data transfer details validation."
                    }
                  ]
                }
              }
            },
            "discriminator": "validationType",
            "required": [
              "validationType"
            ]
          }
        }
      },
      "discriminator": "validationCategory",
      "required": [
        "validationCategory",
        "individualRequestDetails"
      ]
    },
    "ValidationResponse": {
      "type": "object",
      "description": "Response of pre job creation validations.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ValidationResponseProperties",
          "description": "Properties of pre job creation validation response.",
          "readOnly": true,
          "x-ms-client-flatten": true
        }
      }
    },
    "ValidationResponseProperties": {
      "type": "object",
      "description": "Properties of pre job creation validation response.",
      "properties": {
        "status": {
          "description": "Overall validation status.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "AllValidToProceed",
            "InputsRevisitRequired",
            "CertainInputValidationsSkipped"
          ],
          "x-ms-enum": {
            "name": "OverallValidationStatus",
            "modelAsString": false,
            "values": [
              {
                "name": "AllValidToProceed",
                "value": "AllValidToProceed",
                "description": "Every input request is valid."
              },
              {
                "name": "InputsRevisitRequired",
                "value": "InputsRevisitRequired",
                "description": "Some input requests are not valid."
              },
              {
                "name": "CertainInputValidationsSkipped",
                "value": "CertainInputValidationsSkipped",
                "description": "Certain input validations skipped."
              }
            ]
          }
        },
        "individualResponseDetails": {
          "type": "array",
          "description": "List of response details contain validationType and its response as key and value respectively.",
          "items": {
            "$ref": "#/definitions/ValidationInputResponse"
          },
          "readOnly": true
        }
      }
    },
    "ValidationStatus": {
      "type": "string",
      "description": "Create order limit validation status.",
      "enum": [
        "Valid",
        "Invalid",
        "Skipped"
      ],
      "x-ms-enum": {
        "name": "ValidationStatus",
        "modelAsString": false,
        "values": [
          {
            "name": "Valid",
            "value": "Valid",
            "description": "Validation is successful"
          },
          {
            "name": "Invalid",
            "value": "Invalid",
            "description": "Validation is not successful"
          },
          {
            "name": "Skipped",
            "value": "Skipped",
            "description": "Validation is skipped"
          }
        ]
      }
    }
  },
  "parameters": {}
}