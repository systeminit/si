{
  "swagger": "2.0",
  "info": {
    "title": "Azure marketplace",
    "version": "2025-01-01",
    "description": "Azure marketplace service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.Marketplace/privateStores": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        },
        {
          "name": "use-cache",
          "in": "query",
          "required": false,
          "type": "string",
          "x-ms-parameter-location": "method",
          "description": "Determines if to use cache or DB for serving this request"
        }
      ],
      "get": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_List",
        "description": "Gets the list of available private stores.",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "description": "Describes the json payload for the list of available private stores (between zero and one, inclusive)",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "The PrivateStore data structure.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The resource ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "Metadata pertaining to creation and last modification of the resource",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource",
                            "type": "string",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "IdentityType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)"
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource",
                            "type": "string",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "IdentityType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The PrivateStore data structure.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "availability": {
                            "description": "Indicates private store availability",
                            "type": "string",
                            "enum": [
                              "enabled",
                              "disabled"
                            ],
                            "x-ms-enum": {
                              "name": "Availability",
                              "modelAsString": true
                            }
                          },
                          "privateStoreId": {
                            "description": "Private Store id",
                            "type": "string",
                            "readOnly": true
                          },
                          "eTag": {
                            "description": "Identifier for purposes of race condition",
                            "type": "string"
                          },
                          "privateStoreName": {
                            "description": "Private Store Name",
                            "type": "string"
                          },
                          "tenantId": {
                            "description": "Tenant id",
                            "type": "string"
                          },
                          "isGov": {
                            "description": "Is government",
                            "type": "boolean"
                          },
                          "collectionIds": {
                            "description": "Gets list of associated collection ids",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "branding": {
                            "description": "Gets or sets list of branding characteristics",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "notificationsSettings": {
                            "description": "Gets or sets notifications settings",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "recipients": {
                                "description": "Gets or sets list of notified recipients for new requests",
                                "type": "array",
                                "items": {
                                  "description": "Describes the json payload for a notified recipient for new requests",
                                  "type": "object",
                                  "properties": {
                                    "principalId": {
                                      "description": "Principal ID",
                                      "type": "string"
                                    },
                                    "emailAddress": {
                                      "description": "Email Address",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "displayName": {
                                      "description": "Display Name",
                                      "type": "string",
                                      "readOnly": true
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "principalId"
                                ]
                              },
                              "sendToAllMarketplaceAdmins": {
                                "description": "Gets or sets whether to send email to all marketplace admins for new requests",
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL to get the next set of PrivateStore list results if there are any.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "get": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_Get",
        "description": "Get information about the private store",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "description": "The PrivateStore data structure.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "The resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)"
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The PrivateStore data structure.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "availability": {
                      "description": "Indicates private store availability",
                      "type": "string",
                      "enum": [
                        "enabled",
                        "disabled"
                      ],
                      "x-ms-enum": {
                        "name": "Availability",
                        "modelAsString": true
                      }
                    },
                    "privateStoreId": {
                      "description": "Private Store id",
                      "type": "string",
                      "readOnly": true
                    },
                    "eTag": {
                      "description": "Identifier for purposes of race condition",
                      "type": "string"
                    },
                    "privateStoreName": {
                      "description": "Private Store Name",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "Tenant id",
                      "type": "string"
                    },
                    "isGov": {
                      "description": "Is government",
                      "type": "boolean"
                    },
                    "collectionIds": {
                      "description": "Gets list of associated collection ids",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "branding": {
                      "description": "Gets or sets list of branding characteristics",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "notificationsSettings": {
                      "description": "Gets or sets notifications settings",
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "properties": {
                        "recipients": {
                          "description": "Gets or sets list of notified recipients for new requests",
                          "type": "array",
                          "items": {
                            "description": "Describes the json payload for a notified recipient for new requests",
                            "type": "object",
                            "properties": {
                              "principalId": {
                                "description": "Principal ID",
                                "type": "string"
                              },
                              "emailAddress": {
                                "description": "Email Address",
                                "type": "string",
                                "readOnly": true
                              },
                              "displayName": {
                                "description": "Display Name",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "principalId"
                          ]
                        },
                        "sendToAllMarketplaceAdmins": {
                          "description": "Gets or sets whether to send email to all marketplace admins for new requests",
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_CreateOrUpdate",
        "description": "Changes private store properties",
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "description": "The PrivateStore data structure.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "The resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)"
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The PrivateStore data structure.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "availability": {
                      "description": "Indicates private store availability",
                      "type": "string",
                      "enum": [
                        "enabled",
                        "disabled"
                      ],
                      "x-ms-enum": {
                        "name": "Availability",
                        "modelAsString": true
                      }
                    },
                    "privateStoreId": {
                      "description": "Private Store id",
                      "type": "string",
                      "readOnly": true
                    },
                    "eTag": {
                      "description": "Identifier for purposes of race condition",
                      "type": "string"
                    },
                    "privateStoreName": {
                      "description": "Private Store Name",
                      "type": "string"
                    },
                    "tenantId": {
                      "description": "Tenant id",
                      "type": "string"
                    },
                    "isGov": {
                      "description": "Is government",
                      "type": "boolean"
                    },
                    "collectionIds": {
                      "description": "Gets list of associated collection ids",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "branding": {
                      "description": "Gets or sets list of branding characteristics",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "notificationsSettings": {
                      "description": "Gets or sets notifications settings",
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "properties": {
                        "recipients": {
                          "description": "Gets or sets list of notified recipients for new requests",
                          "type": "array",
                          "items": {
                            "description": "Describes the json payload for a notified recipient for new requests",
                            "type": "object",
                            "properties": {
                              "principalId": {
                                "description": "Principal ID",
                                "type": "string"
                              },
                              "emailAddress": {
                                "description": "Email Address",
                                "type": "string",
                                "readOnly": true
                              },
                              "displayName": {
                                "description": "Display Name",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "principalId"
                          ]
                        },
                        "sendToAllMarketplaceAdmins": {
                          "description": "Gets or sets whether to send email to all marketplace admins for new requests",
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Change successful"
          }
        }
      },
      "delete": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_Delete",
        "description": "Deletes the private store. All that is not saved will be lost.",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Private store was deleted successfully."
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/anyExistingOffersInTheCollections": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_AnyExistingOffersInTheCollections",
        "description": "Query whether exists any offer in the collections.",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Response object of query if are there existing offers in the collections.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Boolean answer, true if exists at least a single offer in an enabled collection, otherwise, false.",
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/queryOffers": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_QueryOffers",
        "description": "List of offers, regardless the collections",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          }
        ],
        "responses": {
          "200": {
            "description": "List of offers",
            "schema": {
              "description": "List of offers",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uniqueOfferId": {
                        "description": "Offers unique id",
                        "type": "string",
                        "readOnly": true
                      },
                      "offerDisplayName": {
                        "description": "It will be displayed prominently in the marketplace",
                        "type": "string",
                        "readOnly": true
                      },
                      "publisherDisplayName": {
                        "description": "Publisher name that will be displayed prominently in the marketplace",
                        "type": "string",
                        "readOnly": true
                      },
                      "eTag": {
                        "description": "Identifier for purposes of race condition",
                        "type": "string"
                      },
                      "privateStoreId": {
                        "readOnly": true,
                        "description": "Private store unique id",
                        "type": "string"
                      },
                      "createdAt": {
                        "readOnly": true,
                        "description": "Private store offer creation date",
                        "type": "string"
                      },
                      "modifiedAt": {
                        "readOnly": true,
                        "description": "Private store offer modification date",
                        "type": "string"
                      },
                      "specificPlanIdsLimitation": {
                        "description": "Plan ids limitation for this offer",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "updateSuppressedDueIdempotence": {
                        "description": "Indicating whether the offer was not updated to db (true = not updated). If the allow list is identical to the existed one in db, the offer would not be updated.",
                        "type": "boolean"
                      },
                      "iconFileUris": {
                        "description": "Icon File Uris",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "isStopSell": {
                        "description": "Indicating whether the offer is stop sell or not.",
                        "type": "boolean",
                        "readOnly": true
                      },
                      "plans": {
                        "description": "Offer plans",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "skuId": {
                              "description": "Identifier for this plan",
                              "type": "string",
                              "readOnly": true
                            },
                            "planId": {
                              "description": "Text identifier for this plan",
                              "type": "string",
                              "readOnly": true
                            },
                            "planDisplayName": {
                              "description": "Friendly name for the plan for display in the marketplace",
                              "type": "string",
                              "readOnly": true
                            },
                            "accessibility": {
                              "description": "Plan accessibility",
                              "type": "string",
                              "enum": [
                                "Unknown",
                                "Public",
                                "PrivateTenantOnLevel",
                                "PrivateSubscriptionOnLevel"
                              ],
                              "x-ms-enum": {
                                "name": "accessibility",
                                "modelAsString": true
                              }
                            },
                            "altStackReference": {
                              "description": "Alternative stack type",
                              "type": "string",
                              "readOnly": true
                            },
                            "stackType": {
                              "description": "Stack type (classic or arm)",
                              "type": "string",
                              "readOnly": true
                            },
                            "isStopSell": {
                              "description": "Indicating whether the plan is stop sell or not.",
                              "type": "boolean",
                              "readOnly": true
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "planId"
                        ]
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "uniqueOfferId"
                  ]
                },
                "nextLink": {
                  "description": "URL to get the next set of PrivateStore list results if there are any.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/queryUserOffers": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_QueryUserOffers",
        "description": "List of user's approved offers for the provided offers and subscriptions",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          },
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "description": "Query user's offers properties",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "Query user's offers details",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "offerIds": {
                      "description": "List of offer IDs",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "subscriptionIds": {
                      "description": "List of subscription IDs",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of offers",
            "schema": {
              "description": "List of offers",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uniqueOfferId": {
                        "description": "Offers unique id",
                        "type": "string",
                        "readOnly": true
                      },
                      "offerDisplayName": {
                        "description": "It will be displayed prominently in the marketplace",
                        "type": "string",
                        "readOnly": true
                      },
                      "publisherDisplayName": {
                        "description": "Publisher name that will be displayed prominently in the marketplace",
                        "type": "string",
                        "readOnly": true
                      },
                      "eTag": {
                        "description": "Identifier for purposes of race condition",
                        "type": "string"
                      },
                      "privateStoreId": {
                        "readOnly": true,
                        "description": "Private store unique id",
                        "type": "string"
                      },
                      "createdAt": {
                        "readOnly": true,
                        "description": "Private store offer creation date",
                        "type": "string"
                      },
                      "modifiedAt": {
                        "readOnly": true,
                        "description": "Private store offer modification date",
                        "type": "string"
                      },
                      "specificPlanIdsLimitation": {
                        "description": "Plan ids limitation for this offer",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "updateSuppressedDueIdempotence": {
                        "description": "Indicating whether the offer was not updated to db (true = not updated). If the allow list is identical to the existed one in db, the offer would not be updated.",
                        "type": "boolean"
                      },
                      "iconFileUris": {
                        "description": "Icon File Uris",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "isStopSell": {
                        "description": "Indicating whether the offer is stop sell or not.",
                        "type": "boolean",
                        "readOnly": true
                      },
                      "plans": {
                        "description": "Offer plans",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "skuId": {
                              "description": "Identifier for this plan",
                              "type": "string",
                              "readOnly": true
                            },
                            "planId": {
                              "description": "Text identifier for this plan",
                              "type": "string",
                              "readOnly": true
                            },
                            "planDisplayName": {
                              "description": "Friendly name for the plan for display in the marketplace",
                              "type": "string",
                              "readOnly": true
                            },
                            "accessibility": {
                              "description": "Plan accessibility",
                              "type": "string",
                              "enum": [
                                "Unknown",
                                "Public",
                                "PrivateTenantOnLevel",
                                "PrivateSubscriptionOnLevel"
                              ],
                              "x-ms-enum": {
                                "name": "accessibility",
                                "modelAsString": true
                              }
                            },
                            "altStackReference": {
                              "description": "Alternative stack type",
                              "type": "string",
                              "readOnly": true
                            },
                            "stackType": {
                              "description": "Stack type (classic or arm)",
                              "type": "string",
                              "readOnly": true
                            },
                            "isStopSell": {
                              "description": "Indicating whether the plan is stop sell or not.",
                              "type": "boolean",
                              "readOnly": true
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "planId"
                        ]
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "uniqueOfferId"
                  ]
                },
                "nextLink": {
                  "description": "URL to get the next set of PrivateStore list results if there are any.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/queryUserRules": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "QueryUserRules",
        "description": "All rules approved in the private store that are relevant for user subscriptions",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          },
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "description": "Query user's rules properties",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "Query user's rules details",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "subscriptionIds": {
                      "description": "List of subscription IDs",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of rules",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "Rule type",
                        "type": "string",
                        "enum": [
                          "PrivateProducts",
                          "TermsAndCondition"
                        ],
                        "x-ms-enum": {
                          "name": "ruleType",
                          "modelAsString": true
                        }
                      },
                      "value": {
                        "type": "array",
                        "items": {
                          "description": "Gets or sets rule's value, not required for boolean rules",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "type"
                  ]
                },
                "nextLink": {
                  "description": "URL to get the next set of rules list results if there are any.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/billingAccounts": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_BillingAccounts",
        "description": "Tenant billing accounts names",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Billing accounts response object",
              "type": "object",
              "properties": {
                "billingAccounts": {
                  "description": "Billing accounts list",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collectionsToSubscriptionsMapping": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_CollectionsToSubscriptionsMapping",
        "description": "For a given subscriptions list, the API will return a map of collections and the related subscriptions from the supplied list.",
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "description": "The subscriptions list to get the related collections",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "Subscriptions ids list",
                  "type": "object",
                  "properties": {
                    "subscriptionIds": {
                      "description": "Subscriptions ids list",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "A map of collections subscriptions details",
              "type": "object",
              "properties": {
                "details": {
                  "description": "The map of collections subscriptions",
                  "type": "object",
                  "additionalProperties": {
                    "description": "Collection name and related subscriptions list",
                    "type": "object",
                    "properties": {
                      "collectionName": {
                        "description": "Collection name",
                        "type": "string"
                      },
                      "subscriptions": {
                        "description": "Subscriptions ids list",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "get": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStoreCollection_List",
        "description": "Gets private store collections list",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Collections list information retrieved",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "The Collection data structure.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The resource ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "Metadata pertaining to creation and last modification of the resource",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource",
                            "type": "string",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "IdentityType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)"
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource",
                            "type": "string",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "IdentityType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The collection data structure.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "collectionId": {
                            "description": "Gets collection Id.",
                            "type": "string",
                            "readOnly": true
                          },
                          "collectionName": {
                            "description": "Gets or sets collection name.",
                            "type": "string"
                          },
                          "claim": {
                            "description": "Gets or sets the association with Commercial's Billing Account.",
                            "type": "string"
                          },
                          "allSubscriptions": {
                            "description": "Indicating whether all subscriptions are selected (=true) or not (=false).",
                            "type": "boolean"
                          },
                          "approveAllItems": {
                            "description": "Indicating whether all items are approved for this collection (=true) or not (=false).",
                            "type": "boolean",
                            "readOnly": true
                          },
                          "approveAllItemsModifiedAt": {
                            "description": "Gets the modified date of all items approved.",
                            "format": "date-time",
                            "type": "string",
                            "readOnly": true
                          },
                          "subscriptionsList": {
                            "description": "Gets or sets subscription ids list. Empty list indicates all subscriptions are selected, null indicates no update is done, explicit list indicates the explicit selected subscriptions. On insert, null is considered as bad request",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "enabled": {
                            "description": "Indicating whether the collection is enabled or disabled.",
                            "type": "boolean"
                          },
                          "numberOfOffers": {
                            "description": "Gets the number of offers associated with the collection.",
                            "type": "integer",
                            "format": "int64",
                            "readOnly": true
                          },
                          "appliedRules": {
                            "description": "Gets list of collection rules",
                            "type": "array",
                            "readOnly": true,
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "Rule type",
                                  "type": "string",
                                  "enum": [
                                    "PrivateProducts",
                                    "TermsAndCondition"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ruleType",
                                    "modelAsString": true
                                  }
                                },
                                "value": {
                                  "type": "array",
                                  "items": {
                                    "description": "Gets or sets rule's value, not required for boolean rules",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "type"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL to get the next set of offer list results if there are any.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "get": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStoreCollection_Get",
        "description": "Gets private store collection",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          },
          {
            "name": "collectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The collection ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection information retrieved",
            "schema": {
              "description": "The Collection data structure.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "The resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)"
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The collection data structure.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "collectionId": {
                      "description": "Gets collection Id.",
                      "type": "string",
                      "readOnly": true
                    },
                    "collectionName": {
                      "description": "Gets or sets collection name.",
                      "type": "string"
                    },
                    "claim": {
                      "description": "Gets or sets the association with Commercial's Billing Account.",
                      "type": "string"
                    },
                    "allSubscriptions": {
                      "description": "Indicating whether all subscriptions are selected (=true) or not (=false).",
                      "type": "boolean"
                    },
                    "approveAllItems": {
                      "description": "Indicating whether all items are approved for this collection (=true) or not (=false).",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "approveAllItemsModifiedAt": {
                      "description": "Gets the modified date of all items approved.",
                      "format": "date-time",
                      "type": "string",
                      "readOnly": true
                    },
                    "subscriptionsList": {
                      "description": "Gets or sets subscription ids list. Empty list indicates all subscriptions are selected, null indicates no update is done, explicit list indicates the explicit selected subscriptions. On insert, null is considered as bad request",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "enabled": {
                      "description": "Indicating whether the collection is enabled or disabled.",
                      "type": "boolean"
                    },
                    "numberOfOffers": {
                      "description": "Gets the number of offers associated with the collection.",
                      "type": "integer",
                      "format": "int64",
                      "readOnly": true
                    },
                    "appliedRules": {
                      "description": "Gets list of collection rules",
                      "type": "array",
                      "readOnly": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Rule type",
                            "type": "string",
                            "enum": [
                              "PrivateProducts",
                              "TermsAndCondition"
                            ],
                            "x-ms-enum": {
                              "name": "ruleType",
                              "modelAsString": true
                            }
                          },
                          "value": {
                            "type": "array",
                            "items": {
                              "description": "Gets or sets rule's value, not required for boolean rules",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStoreCollection_CreateOrUpdate",
        "description": "Create or update private store collection",
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "description": "The Collection data structure.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "The resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)"
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The collection data structure.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "collectionId": {
                      "description": "Gets collection Id.",
                      "type": "string",
                      "readOnly": true
                    },
                    "collectionName": {
                      "description": "Gets or sets collection name.",
                      "type": "string"
                    },
                    "claim": {
                      "description": "Gets or sets the association with Commercial's Billing Account.",
                      "type": "string"
                    },
                    "allSubscriptions": {
                      "description": "Indicating whether all subscriptions are selected (=true) or not (=false).",
                      "type": "boolean"
                    },
                    "approveAllItems": {
                      "description": "Indicating whether all items are approved for this collection (=true) or not (=false).",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "approveAllItemsModifiedAt": {
                      "description": "Gets the modified date of all items approved.",
                      "format": "date-time",
                      "type": "string",
                      "readOnly": true
                    },
                    "subscriptionsList": {
                      "description": "Gets or sets subscription ids list. Empty list indicates all subscriptions are selected, null indicates no update is done, explicit list indicates the explicit selected subscriptions. On insert, null is considered as bad request",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "enabled": {
                      "description": "Indicating whether the collection is enabled or disabled.",
                      "type": "boolean"
                    },
                    "numberOfOffers": {
                      "description": "Gets the number of offers associated with the collection.",
                      "type": "integer",
                      "format": "int64",
                      "readOnly": true
                    },
                    "appliedRules": {
                      "description": "Gets list of collection rules",
                      "type": "array",
                      "readOnly": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Rule type",
                            "type": "string",
                            "enum": [
                              "PrivateProducts",
                              "TermsAndCondition"
                            ],
                            "x-ms-enum": {
                              "name": "ruleType",
                              "modelAsString": true
                            }
                          },
                          "value": {
                            "type": "array",
                            "items": {
                              "description": "Gets or sets rule's value, not required for boolean rules",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          },
          {
            "name": "collectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The collection ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Create or update collection properties",
            "schema": {
              "description": "The Collection data structure.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "The resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)"
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The collection data structure.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "collectionId": {
                      "description": "Gets collection Id.",
                      "type": "string",
                      "readOnly": true
                    },
                    "collectionName": {
                      "description": "Gets or sets collection name.",
                      "type": "string"
                    },
                    "claim": {
                      "description": "Gets or sets the association with Commercial's Billing Account.",
                      "type": "string"
                    },
                    "allSubscriptions": {
                      "description": "Indicating whether all subscriptions are selected (=true) or not (=false).",
                      "type": "boolean"
                    },
                    "approveAllItems": {
                      "description": "Indicating whether all items are approved for this collection (=true) or not (=false).",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "approveAllItemsModifiedAt": {
                      "description": "Gets the modified date of all items approved.",
                      "format": "date-time",
                      "type": "string",
                      "readOnly": true
                    },
                    "subscriptionsList": {
                      "description": "Gets or sets subscription ids list. Empty list indicates all subscriptions are selected, null indicates no update is done, explicit list indicates the explicit selected subscriptions. On insert, null is considered as bad request",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "enabled": {
                      "description": "Indicating whether the collection is enabled or disabled.",
                      "type": "boolean"
                    },
                    "numberOfOffers": {
                      "description": "Gets the number of offers associated with the collection.",
                      "type": "integer",
                      "format": "int64",
                      "readOnly": true
                    },
                    "appliedRules": {
                      "description": "Gets list of collection rules",
                      "type": "array",
                      "readOnly": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Rule type",
                            "type": "string",
                            "enum": [
                              "PrivateProducts",
                              "TermsAndCondition"
                            ],
                            "x-ms-enum": {
                              "name": "ruleType",
                              "modelAsString": true
                            }
                          },
                          "value": {
                            "type": "array",
                            "items": {
                              "description": "Gets or sets rule's value, not required for boolean rules",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStoreCollection_Delete",
        "description": "Delete a collection from the given private store.",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          },
          {
            "name": "collectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The collection ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Collection was deleted successfully"
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStoreCollection_Post",
        "description": "Delete Private store collection. This is a workaround.",
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "description": "Set the Operation for the POST method. Ping or Delete",
              "type": "string",
              "enum": [
                "DeletePrivateStoreOffer",
                "DeletePrivateStoreCollection",
                "DeletePrivateStoreCollectionOffer",
                "Ping"
              ],
              "x-ms-enum": {
                "name": "Operation",
                "modelAsString": true
              }
            }
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          },
          {
            "name": "collectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The collection ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation succeeded"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/transferOffers": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStoreCollection_TransferOffers",
        "description": "transferring offers (copy or move) from source collection to target collection(s)",
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "description": "Transfer offers properties",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "transfer offers properties details",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "targetCollections": {
                      "description": "Target collections ids",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "operation": {
                      "description": "Operation to perform (For example: Copy or Move)",
                      "type": "string"
                    },
                    "offerIdsList": {
                      "description": "Offers ids list to transfer from source collection to target collection(s)",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          },
          {
            "name": "collectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The collection ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "The transfer items response. The response contains two lists that indicate for each collection whether the operation succeeded or failed",
              "type": "object",
              "properties": {
                "succeeded": {
                  "description": "Succeeded collections",
                  "type": "array",
                  "items": {
                    "description": "Collection name and id.",
                    "type": "object",
                    "properties": {
                      "collectionName": {
                        "description": "Collection name.",
                        "type": "string"
                      },
                      "collectionId": {
                        "description": "Collection id.",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "collectionId"
                  ]
                },
                "failed": {
                  "description": "Failed collections",
                  "type": "array",
                  "items": {
                    "description": "Collection name and id.",
                    "type": "object",
                    "properties": {
                      "collectionName": {
                        "description": "Collection name.",
                        "type": "string"
                      },
                      "collectionId": {
                        "description": "Collection id.",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "collectionId"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/queryApprovedPlans": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_QueryApprovedPlans",
        "description": "Get map of plans and related approved subscriptions.",
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "description": "Query approved plans payload",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "Query approved plans details",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "offerId": {
                      "description": "Offer id",
                      "type": "string"
                    },
                    "planIds": {
                      "description": "Offer plan ids",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "subscriptionIds": {
                      "description": "List of subscription IDs",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Map of plan ids and their related approved subscriptions.",
            "schema": {
              "description": "Query approved plans response",
              "type": "object",
              "properties": {
                "details": {
                  "description": "A list indicating for each plan which subscriptions are approved. Plan Id is unique",
                  "type": "array",
                  "items": {
                    "description": "Query approved plans response",
                    "type": "object",
                    "properties": {
                      "planId": {
                        "description": "Plan id",
                        "type": "string"
                      },
                      "subscriptionIds": {
                        "description": "Approved subscription ids list. In case all subscriptions are approved for a plan, allSubscriptions flag is true and list is empty ( else flag is set to false). In case both subscriptions list is empty and allSubscriptions flag is false, the plan is not approved for any subscription.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "allSubscriptions": {
                        "description": "Indicates whether all subscriptions are approved for this plan",
                        "type": "boolean"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "planId"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/bulkCollectionsAction": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_BulkCollectionsAction",
        "description": "Perform an action on bulk collections",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          },
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "description": "Bulk collections action properties",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "bulk collections properties details",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "collectionIds": {
                      "description": "collection ids list that the action is performed on",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "action": {
                      "description": "Action to perform (For example: EnableCollections, DisableCollections)",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The collections id and name that the action was performed on",
            "schema": {
              "description": "The bulk collections response. The response contains two lists that indicate for each collection whether the operation succeeded or failed",
              "type": "object",
              "properties": {
                "succeeded": {
                  "description": "Succeeded collections",
                  "type": "array",
                  "items": {
                    "description": "Collection name and id.",
                    "type": "object",
                    "properties": {
                      "collectionName": {
                        "description": "Collection name.",
                        "type": "string"
                      },
                      "collectionId": {
                        "description": "Collection id.",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "collectionId"
                  ]
                },
                "failed": {
                  "description": "Failed collections",
                  "type": "array",
                  "items": {
                    "description": "Collection name and id.",
                    "type": "object",
                    "properties": {
                      "collectionName": {
                        "description": "Collection name.",
                        "type": "string"
                      },
                      "collectionId": {
                        "description": "Collection id.",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "collectionId"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/approveAllItems": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStoreCollection_ApproveAllItems",
        "description": "Delete all existing offers from the collection and enable approve all items.",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          },
          {
            "name": "collectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The collection ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, all items are approved and the response is the updated collection.",
            "schema": {
              "description": "The Collection data structure.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "The resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)"
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The collection data structure.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "collectionId": {
                      "description": "Gets collection Id.",
                      "type": "string",
                      "readOnly": true
                    },
                    "collectionName": {
                      "description": "Gets or sets collection name.",
                      "type": "string"
                    },
                    "claim": {
                      "description": "Gets or sets the association with Commercial's Billing Account.",
                      "type": "string"
                    },
                    "allSubscriptions": {
                      "description": "Indicating whether all subscriptions are selected (=true) or not (=false).",
                      "type": "boolean"
                    },
                    "approveAllItems": {
                      "description": "Indicating whether all items are approved for this collection (=true) or not (=false).",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "approveAllItemsModifiedAt": {
                      "description": "Gets the modified date of all items approved.",
                      "format": "date-time",
                      "type": "string",
                      "readOnly": true
                    },
                    "subscriptionsList": {
                      "description": "Gets or sets subscription ids list. Empty list indicates all subscriptions are selected, null indicates no update is done, explicit list indicates the explicit selected subscriptions. On insert, null is considered as bad request",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "enabled": {
                      "description": "Indicating whether the collection is enabled or disabled.",
                      "type": "boolean"
                    },
                    "numberOfOffers": {
                      "description": "Gets the number of offers associated with the collection.",
                      "type": "integer",
                      "format": "int64",
                      "readOnly": true
                    },
                    "appliedRules": {
                      "description": "Gets list of collection rules",
                      "type": "array",
                      "readOnly": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Rule type",
                            "type": "string",
                            "enum": [
                              "PrivateProducts",
                              "TermsAndCondition"
                            ],
                            "x-ms-enum": {
                              "name": "ruleType",
                              "modelAsString": true
                            }
                          },
                          "value": {
                            "type": "array",
                            "items": {
                              "description": "Gets or sets rule's value, not required for boolean rules",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/disableApproveAllItems": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStoreCollection_DisableApproveAllItems",
        "description": "Disable approve all items for the collection.",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          },
          {
            "name": "collectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The collection ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK, approve all items is disabled and the response is the updated collection.",
            "schema": {
              "description": "The Collection data structure.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "The resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)"
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The collection data structure.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "collectionId": {
                      "description": "Gets collection Id.",
                      "type": "string",
                      "readOnly": true
                    },
                    "collectionName": {
                      "description": "Gets or sets collection name.",
                      "type": "string"
                    },
                    "claim": {
                      "description": "Gets or sets the association with Commercial's Billing Account.",
                      "type": "string"
                    },
                    "allSubscriptions": {
                      "description": "Indicating whether all subscriptions are selected (=true) or not (=false).",
                      "type": "boolean"
                    },
                    "approveAllItems": {
                      "description": "Indicating whether all items are approved for this collection (=true) or not (=false).",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "approveAllItemsModifiedAt": {
                      "description": "Gets the modified date of all items approved.",
                      "format": "date-time",
                      "type": "string",
                      "readOnly": true
                    },
                    "subscriptionsList": {
                      "description": "Gets or sets subscription ids list. Empty list indicates all subscriptions are selected, null indicates no update is done, explicit list indicates the explicit selected subscriptions. On insert, null is considered as bad request",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "enabled": {
                      "description": "Indicating whether the collection is enabled or disabled.",
                      "type": "boolean"
                    },
                    "numberOfOffers": {
                      "description": "Gets the number of offers associated with the collection.",
                      "type": "integer",
                      "format": "int64",
                      "readOnly": true
                    },
                    "appliedRules": {
                      "description": "Gets list of collection rules",
                      "type": "array",
                      "readOnly": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Rule type",
                            "type": "string",
                            "enum": [
                              "PrivateProducts",
                              "TermsAndCondition"
                            ],
                            "x-ms-enum": {
                              "name": "ruleType",
                              "modelAsString": true
                            }
                          },
                          "value": {
                            "type": "array",
                            "items": {
                              "description": "Gets or sets rule's value, not required for boolean rules",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/offers": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "get": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStoreCollectionOffer_List",
        "description": "Get a list of all private offers in the given private store and collection",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          },
          {
            "name": "collectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The collection ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "The privateStore offer data structure.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The resource ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "Metadata pertaining to creation and last modification of the resource",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource",
                            "type": "string",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "IdentityType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)"
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource",
                            "type": "string",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "IdentityType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "type": "object",
                        "properties": {
                          "uniqueOfferId": {
                            "description": "Offers unique id",
                            "type": "string",
                            "readOnly": true
                          },
                          "offerDisplayName": {
                            "description": "It will be displayed prominently in the marketplace",
                            "type": "string",
                            "readOnly": true
                          },
                          "publisherDisplayName": {
                            "description": "Publisher name that will be displayed prominently in the marketplace",
                            "type": "string",
                            "readOnly": true
                          },
                          "eTag": {
                            "description": "Identifier for purposes of race condition",
                            "type": "string"
                          },
                          "privateStoreId": {
                            "readOnly": true,
                            "description": "Private store unique id",
                            "type": "string"
                          },
                          "createdAt": {
                            "readOnly": true,
                            "description": "Private store offer creation date",
                            "type": "string"
                          },
                          "modifiedAt": {
                            "readOnly": true,
                            "description": "Private store offer modification date",
                            "type": "string"
                          },
                          "specificPlanIdsLimitation": {
                            "description": "Plan ids limitation for this offer",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "updateSuppressedDueIdempotence": {
                            "description": "Indicating whether the offer was not updated to db (true = not updated). If the allow list is identical to the existed one in db, the offer would not be updated.",
                            "type": "boolean"
                          },
                          "iconFileUris": {
                            "description": "Icon File Uris",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "isStopSell": {
                            "description": "Indicating whether the offer is stop sell or not.",
                            "type": "boolean",
                            "readOnly": true
                          },
                          "plans": {
                            "description": "Offer plans",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "skuId": {
                                  "description": "Identifier for this plan",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "planId": {
                                  "description": "Text identifier for this plan",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "planDisplayName": {
                                  "description": "Friendly name for the plan for display in the marketplace",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "accessibility": {
                                  "description": "Plan accessibility",
                                  "type": "string",
                                  "enum": [
                                    "Unknown",
                                    "Public",
                                    "PrivateTenantOnLevel",
                                    "PrivateSubscriptionOnLevel"
                                  ],
                                  "x-ms-enum": {
                                    "name": "accessibility",
                                    "modelAsString": true
                                  }
                                },
                                "altStackReference": {
                                  "description": "Alternative stack type",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "stackType": {
                                  "description": "Stack type (classic or arm)",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "isStopSell": {
                                  "description": "Indicating whether the plan is stop sell or not.",
                                  "type": "boolean",
                                  "readOnly": true
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "planId"
                            ]
                          }
                        },
                        "description": "The privateStore offer data structure.",
                        "x-ms-client-flatten": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL to get the next set of offer list results if there are any.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/mapOffersToContexts": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStoreCollectionOffer_ListByContexts",
        "description": "Get a list of all offers in the given collection according to the required contexts.",
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "description": "Suggested subscription list",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "Subscriptions ids list",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "subscriptionIds": {
                      "description": "Subscription ids list",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          },
          {
            "name": "collectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The collection ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "List of objects which describes offers per context. An empty GUID is a public context.",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "description": "List of offers and plans that restricted to the context",
                    "type": "object",
                    "properties": {
                      "context": {
                        "description": "Offer's context, e.g. subscription ID, tenant ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "offers": {
                        "description": "List of offers",
                        "type": "object",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "value": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "uniqueOfferId": {
                                  "description": "Offers unique id",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "offerDisplayName": {
                                  "description": "It will be displayed prominently in the marketplace",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "publisherDisplayName": {
                                  "description": "Publisher name that will be displayed prominently in the marketplace",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "eTag": {
                                  "description": "Identifier for purposes of race condition",
                                  "type": "string"
                                },
                                "privateStoreId": {
                                  "readOnly": true,
                                  "description": "Private store unique id",
                                  "type": "string"
                                },
                                "createdAt": {
                                  "readOnly": true,
                                  "description": "Private store offer creation date",
                                  "type": "string"
                                },
                                "modifiedAt": {
                                  "readOnly": true,
                                  "description": "Private store offer modification date",
                                  "type": "string"
                                },
                                "specificPlanIdsLimitation": {
                                  "description": "Plan ids limitation for this offer",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "updateSuppressedDueIdempotence": {
                                  "description": "Indicating whether the offer was not updated to db (true = not updated). If the allow list is identical to the existed one in db, the offer would not be updated.",
                                  "type": "boolean"
                                },
                                "iconFileUris": {
                                  "description": "Icon File Uris",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "isStopSell": {
                                  "description": "Indicating whether the offer is stop sell or not.",
                                  "type": "boolean",
                                  "readOnly": true
                                },
                                "plans": {
                                  "description": "Offer plans",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "skuId": {
                                        "description": "Identifier for this plan",
                                        "type": "string",
                                        "readOnly": true
                                      },
                                      "planId": {
                                        "description": "Text identifier for this plan",
                                        "type": "string",
                                        "readOnly": true
                                      },
                                      "planDisplayName": {
                                        "description": "Friendly name for the plan for display in the marketplace",
                                        "type": "string",
                                        "readOnly": true
                                      },
                                      "accessibility": {
                                        "description": "Plan accessibility",
                                        "type": "string",
                                        "enum": [
                                          "Unknown",
                                          "Public",
                                          "PrivateTenantOnLevel",
                                          "PrivateSubscriptionOnLevel"
                                        ],
                                        "x-ms-enum": {
                                          "name": "accessibility",
                                          "modelAsString": true
                                        }
                                      },
                                      "altStackReference": {
                                        "description": "Alternative stack type",
                                        "type": "string",
                                        "readOnly": true
                                      },
                                      "stackType": {
                                        "description": "Stack type (classic or arm)",
                                        "type": "string",
                                        "readOnly": true
                                      },
                                      "isStopSell": {
                                        "description": "Indicating whether the plan is stop sell or not.",
                                        "type": "boolean",
                                        "readOnly": true
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": [
                                    "planId"
                                  ]
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "uniqueOfferId"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "context"
                  ]
                },
                "nextLink": {
                  "description": "URL to get the next set of offer list per context results if there are any.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/setRules": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "SetCollectionRules",
        "description": "Set rule for specific private store and collection",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          },
          {
            "name": "collectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The collection ID"
          },
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "Rule type",
                        "type": "string",
                        "enum": [
                          "PrivateProducts",
                          "TermsAndCondition"
                        ],
                        "x-ms-enum": {
                          "name": "ruleType",
                          "modelAsString": true
                        }
                      },
                      "value": {
                        "type": "array",
                        "items": {
                          "description": "Gets or sets rule's value, not required for boolean rules",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "type"
                  ]
                },
                "nextLink": {
                  "description": "URL to get the next set of rules list results if there are any.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/queryRules": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "QueryRules",
        "description": "Get a list of all private store rules in the given private store and collection",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          },
          {
            "name": "collectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The collection ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "Rule type",
                        "type": "string",
                        "enum": [
                          "PrivateProducts",
                          "TermsAndCondition"
                        ],
                        "x-ms-enum": {
                          "name": "ruleType",
                          "modelAsString": true
                        }
                      },
                      "value": {
                        "type": "array",
                        "items": {
                          "description": "Gets or sets rule's value, not required for boolean rules",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "type"
                  ]
                },
                "nextLink": {
                  "description": "URL to get the next set of rules list results if there are any.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/offers/{offerId}": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "get": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStoreCollectionOffer_Get",
        "description": "Gets information about a specific offer.",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          },
          {
            "name": "collectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The collection ID"
          },
          {
            "in": "path",
            "name": "offerId",
            "type": "string",
            "x-ms-parameter-location": "method",
            "required": true,
            "description": "The offer ID to update or delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Offer information retrieved",
            "schema": {
              "description": "The privateStore offer data structure.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "The resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)"
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "uniqueOfferId": {
                      "description": "Offers unique id",
                      "type": "string",
                      "readOnly": true
                    },
                    "offerDisplayName": {
                      "description": "It will be displayed prominently in the marketplace",
                      "type": "string",
                      "readOnly": true
                    },
                    "publisherDisplayName": {
                      "description": "Publisher name that will be displayed prominently in the marketplace",
                      "type": "string",
                      "readOnly": true
                    },
                    "eTag": {
                      "description": "Identifier for purposes of race condition",
                      "type": "string"
                    },
                    "privateStoreId": {
                      "readOnly": true,
                      "description": "Private store unique id",
                      "type": "string"
                    },
                    "createdAt": {
                      "readOnly": true,
                      "description": "Private store offer creation date",
                      "type": "string"
                    },
                    "modifiedAt": {
                      "readOnly": true,
                      "description": "Private store offer modification date",
                      "type": "string"
                    },
                    "specificPlanIdsLimitation": {
                      "description": "Plan ids limitation for this offer",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "updateSuppressedDueIdempotence": {
                      "description": "Indicating whether the offer was not updated to db (true = not updated). If the allow list is identical to the existed one in db, the offer would not be updated.",
                      "type": "boolean"
                    },
                    "iconFileUris": {
                      "description": "Icon File Uris",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "isStopSell": {
                      "description": "Indicating whether the offer is stop sell or not.",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "plans": {
                      "description": "Offer plans",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "skuId": {
                            "description": "Identifier for this plan",
                            "type": "string",
                            "readOnly": true
                          },
                          "planId": {
                            "description": "Text identifier for this plan",
                            "type": "string",
                            "readOnly": true
                          },
                          "planDisplayName": {
                            "description": "Friendly name for the plan for display in the marketplace",
                            "type": "string",
                            "readOnly": true
                          },
                          "accessibility": {
                            "description": "Plan accessibility",
                            "type": "string",
                            "enum": [
                              "Unknown",
                              "Public",
                              "PrivateTenantOnLevel",
                              "PrivateSubscriptionOnLevel"
                            ],
                            "x-ms-enum": {
                              "name": "accessibility",
                              "modelAsString": true
                            }
                          },
                          "altStackReference": {
                            "description": "Alternative stack type",
                            "type": "string",
                            "readOnly": true
                          },
                          "stackType": {
                            "description": "Stack type (classic or arm)",
                            "type": "string",
                            "readOnly": true
                          },
                          "isStopSell": {
                            "description": "Indicating whether the plan is stop sell or not.",
                            "type": "boolean",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "planId"
                      ]
                    }
                  },
                  "description": "The privateStore offer data structure.",
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStoreCollectionOffer_CreateOrUpdate",
        "description": "Update or add an offer to a specific collection of the private store.",
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "description": "The privateStore offer data structure.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "The resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)"
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "uniqueOfferId": {
                      "description": "Offers unique id",
                      "type": "string",
                      "readOnly": true
                    },
                    "offerDisplayName": {
                      "description": "It will be displayed prominently in the marketplace",
                      "type": "string",
                      "readOnly": true
                    },
                    "publisherDisplayName": {
                      "description": "Publisher name that will be displayed prominently in the marketplace",
                      "type": "string",
                      "readOnly": true
                    },
                    "eTag": {
                      "description": "Identifier for purposes of race condition",
                      "type": "string"
                    },
                    "privateStoreId": {
                      "readOnly": true,
                      "description": "Private store unique id",
                      "type": "string"
                    },
                    "createdAt": {
                      "readOnly": true,
                      "description": "Private store offer creation date",
                      "type": "string"
                    },
                    "modifiedAt": {
                      "readOnly": true,
                      "description": "Private store offer modification date",
                      "type": "string"
                    },
                    "specificPlanIdsLimitation": {
                      "description": "Plan ids limitation for this offer",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "updateSuppressedDueIdempotence": {
                      "description": "Indicating whether the offer was not updated to db (true = not updated). If the allow list is identical to the existed one in db, the offer would not be updated.",
                      "type": "boolean"
                    },
                    "iconFileUris": {
                      "description": "Icon File Uris",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "isStopSell": {
                      "description": "Indicating whether the offer is stop sell or not.",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "plans": {
                      "description": "Offer plans",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "skuId": {
                            "description": "Identifier for this plan",
                            "type": "string",
                            "readOnly": true
                          },
                          "planId": {
                            "description": "Text identifier for this plan",
                            "type": "string",
                            "readOnly": true
                          },
                          "planDisplayName": {
                            "description": "Friendly name for the plan for display in the marketplace",
                            "type": "string",
                            "readOnly": true
                          },
                          "accessibility": {
                            "description": "Plan accessibility",
                            "type": "string",
                            "enum": [
                              "Unknown",
                              "Public",
                              "PrivateTenantOnLevel",
                              "PrivateSubscriptionOnLevel"
                            ],
                            "x-ms-enum": {
                              "name": "accessibility",
                              "modelAsString": true
                            }
                          },
                          "altStackReference": {
                            "description": "Alternative stack type",
                            "type": "string",
                            "readOnly": true
                          },
                          "stackType": {
                            "description": "Stack type (classic or arm)",
                            "type": "string",
                            "readOnly": true
                          },
                          "isStopSell": {
                            "description": "Indicating whether the plan is stop sell or not.",
                            "type": "boolean",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "planId"
                      ]
                    }
                  },
                  "description": "The privateStore offer data structure.",
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          },
          {
            "name": "collectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The collection ID"
          },
          {
            "in": "path",
            "name": "offerId",
            "type": "string",
            "x-ms-parameter-location": "method",
            "required": true,
            "description": "The offer ID to update or delete"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "The privateStore offer data structure.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "The resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)"
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "uniqueOfferId": {
                      "description": "Offers unique id",
                      "type": "string",
                      "readOnly": true
                    },
                    "offerDisplayName": {
                      "description": "It will be displayed prominently in the marketplace",
                      "type": "string",
                      "readOnly": true
                    },
                    "publisherDisplayName": {
                      "description": "Publisher name that will be displayed prominently in the marketplace",
                      "type": "string",
                      "readOnly": true
                    },
                    "eTag": {
                      "description": "Identifier for purposes of race condition",
                      "type": "string"
                    },
                    "privateStoreId": {
                      "readOnly": true,
                      "description": "Private store unique id",
                      "type": "string"
                    },
                    "createdAt": {
                      "readOnly": true,
                      "description": "Private store offer creation date",
                      "type": "string"
                    },
                    "modifiedAt": {
                      "readOnly": true,
                      "description": "Private store offer modification date",
                      "type": "string"
                    },
                    "specificPlanIdsLimitation": {
                      "description": "Plan ids limitation for this offer",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "updateSuppressedDueIdempotence": {
                      "description": "Indicating whether the offer was not updated to db (true = not updated). If the allow list is identical to the existed one in db, the offer would not be updated.",
                      "type": "boolean"
                    },
                    "iconFileUris": {
                      "description": "Icon File Uris",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "isStopSell": {
                      "description": "Indicating whether the offer is stop sell or not.",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "plans": {
                      "description": "Offer plans",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "skuId": {
                            "description": "Identifier for this plan",
                            "type": "string",
                            "readOnly": true
                          },
                          "planId": {
                            "description": "Text identifier for this plan",
                            "type": "string",
                            "readOnly": true
                          },
                          "planDisplayName": {
                            "description": "Friendly name for the plan for display in the marketplace",
                            "type": "string",
                            "readOnly": true
                          },
                          "accessibility": {
                            "description": "Plan accessibility",
                            "type": "string",
                            "enum": [
                              "Unknown",
                              "Public",
                              "PrivateTenantOnLevel",
                              "PrivateSubscriptionOnLevel"
                            ],
                            "x-ms-enum": {
                              "name": "accessibility",
                              "modelAsString": true
                            }
                          },
                          "altStackReference": {
                            "description": "Alternative stack type",
                            "type": "string",
                            "readOnly": true
                          },
                          "stackType": {
                            "description": "Stack type (classic or arm)",
                            "type": "string",
                            "readOnly": true
                          },
                          "isStopSell": {
                            "description": "Indicating whether the plan is stop sell or not.",
                            "type": "boolean",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "planId"
                      ]
                    }
                  },
                  "description": "The privateStore offer data structure.",
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStoreCollectionOffer_Delete",
        "description": "Deletes an offer from the given collection of private store.",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          },
          {
            "name": "collectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The collection ID"
          },
          {
            "in": "path",
            "name": "offerId",
            "type": "string",
            "x-ms-parameter-location": "method",
            "required": true,
            "description": "The offer ID to update or delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Offer was deleted successfully"
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStoreCollectionOffer_Post",
        "description": "Delete Private store offer. This is a workaround.",
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "description": "Set the Operation for the POST method. Ping or Delete",
              "type": "string",
              "enum": [
                "DeletePrivateStoreOffer",
                "DeletePrivateStoreCollection",
                "DeletePrivateStoreCollectionOffer",
                "Ping"
              ],
              "x-ms-enum": {
                "name": "Operation",
                "modelAsString": true
              }
            }
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          },
          {
            "name": "collectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The collection ID"
          },
          {
            "in": "path",
            "name": "offerId",
            "type": "string",
            "x-ms-parameter-location": "method",
            "required": true,
            "description": "The offer ID to update or delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation succeeded"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/offers/{offerId}/contextsView": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStoreCollectionOffer_ContextsView",
        "description": "Retrieve offer information with plans under required contexts restrictions.",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          },
          {
            "name": "collectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The collection ID"
          },
          {
            "in": "path",
            "name": "offerId",
            "type": "string",
            "x-ms-parameter-location": "method",
            "required": true,
            "description": "The offer ID to update or delete"
          },
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "description": "Suggested subscription list",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "Subscriptions ids list",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "subscriptionIds": {
                      "description": "Subscription ids list",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve offer information with plans under required contexts restrictions.",
            "schema": {
              "description": "The privateStore offer data structure.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "The resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)"
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "uniqueOfferId": {
                      "description": "Offers unique id",
                      "type": "string",
                      "readOnly": true
                    },
                    "offerDisplayName": {
                      "description": "It will be displayed prominently in the marketplace",
                      "type": "string",
                      "readOnly": true
                    },
                    "publisherDisplayName": {
                      "description": "Publisher name that will be displayed prominently in the marketplace",
                      "type": "string",
                      "readOnly": true
                    },
                    "eTag": {
                      "description": "Identifier for purposes of race condition",
                      "type": "string"
                    },
                    "privateStoreId": {
                      "readOnly": true,
                      "description": "Private store unique id",
                      "type": "string"
                    },
                    "createdAt": {
                      "readOnly": true,
                      "description": "Private store offer creation date",
                      "type": "string"
                    },
                    "modifiedAt": {
                      "readOnly": true,
                      "description": "Private store offer modification date",
                      "type": "string"
                    },
                    "specificPlanIdsLimitation": {
                      "description": "Plan ids limitation for this offer",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "updateSuppressedDueIdempotence": {
                      "description": "Indicating whether the offer was not updated to db (true = not updated). If the allow list is identical to the existed one in db, the offer would not be updated.",
                      "type": "boolean"
                    },
                    "iconFileUris": {
                      "description": "Icon File Uris",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "isStopSell": {
                      "description": "Indicating whether the offer is stop sell or not.",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "plans": {
                      "description": "Offer plans",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "skuId": {
                            "description": "Identifier for this plan",
                            "type": "string",
                            "readOnly": true
                          },
                          "planId": {
                            "description": "Text identifier for this plan",
                            "type": "string",
                            "readOnly": true
                          },
                          "planDisplayName": {
                            "description": "Friendly name for the plan for display in the marketplace",
                            "type": "string",
                            "readOnly": true
                          },
                          "accessibility": {
                            "description": "Plan accessibility",
                            "type": "string",
                            "enum": [
                              "Unknown",
                              "Public",
                              "PrivateTenantOnLevel",
                              "PrivateSubscriptionOnLevel"
                            ],
                            "x-ms-enum": {
                              "name": "accessibility",
                              "modelAsString": true
                            }
                          },
                          "altStackReference": {
                            "description": "Alternative stack type",
                            "type": "string",
                            "readOnly": true
                          },
                          "stackType": {
                            "description": "Stack type (classic or arm)",
                            "type": "string",
                            "readOnly": true
                          },
                          "isStopSell": {
                            "description": "Indicating whether the plan is stop sell or not.",
                            "type": "boolean",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "planId"
                      ]
                    }
                  },
                  "description": "The privateStore offer data structure.",
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/collections/{collectionId}/offers/{offerId}/upsertOfferWithMultiContext": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStoreCollectionOffer_UpsertOfferWithMultiContext",
        "description": "Upsert an offer with multiple context details.",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          },
          {
            "name": "collectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The collection ID"
          },
          {
            "in": "path",
            "name": "offerId",
            "type": "string",
            "x-ms-parameter-location": "method",
            "required": true,
            "description": "The offer ID to update or delete"
          },
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "description": "Payload object for upsert offer with multiple context and plans.",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "Object describes multiple context and plans.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "offerId": {
                      "description": "The offer ID which contains the plans.",
                      "type": "string"
                    },
                    "eTag": {
                      "description": "The offer's eTag.",
                      "type": "string"
                    },
                    "plansContext": {
                      "type": "array",
                      "items": {
                        "description": "Object of plans per context.",
                        "type": "object",
                        "properties": {
                          "context": {
                            "description": "Plan's context, e.g. subscription ID, tenant ID.",
                            "type": "string"
                          },
                          "planIds": {
                            "description": "List of plan IDs.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "context"
                      ]
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve offer information with plans under required contexts restrictions.",
            "schema": {
              "description": "The privateStore offer data structure.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "The resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)"
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "uniqueOfferId": {
                      "description": "Offers unique id",
                      "type": "string",
                      "readOnly": true
                    },
                    "offerDisplayName": {
                      "description": "It will be displayed prominently in the marketplace",
                      "type": "string",
                      "readOnly": true
                    },
                    "publisherDisplayName": {
                      "description": "Publisher name that will be displayed prominently in the marketplace",
                      "type": "string",
                      "readOnly": true
                    },
                    "eTag": {
                      "description": "Identifier for purposes of race condition",
                      "type": "string"
                    },
                    "privateStoreId": {
                      "readOnly": true,
                      "description": "Private store unique id",
                      "type": "string"
                    },
                    "createdAt": {
                      "readOnly": true,
                      "description": "Private store offer creation date",
                      "type": "string"
                    },
                    "modifiedAt": {
                      "readOnly": true,
                      "description": "Private store offer modification date",
                      "type": "string"
                    },
                    "specificPlanIdsLimitation": {
                      "description": "Plan ids limitation for this offer",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "updateSuppressedDueIdempotence": {
                      "description": "Indicating whether the offer was not updated to db (true = not updated). If the allow list is identical to the existed one in db, the offer would not be updated.",
                      "type": "boolean"
                    },
                    "iconFileUris": {
                      "description": "Icon File Uris",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "isStopSell": {
                      "description": "Indicating whether the offer is stop sell or not.",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "plans": {
                      "description": "Offer plans",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "skuId": {
                            "description": "Identifier for this plan",
                            "type": "string",
                            "readOnly": true
                          },
                          "planId": {
                            "description": "Text identifier for this plan",
                            "type": "string",
                            "readOnly": true
                          },
                          "planDisplayName": {
                            "description": "Friendly name for the plan for display in the marketplace",
                            "type": "string",
                            "readOnly": true
                          },
                          "accessibility": {
                            "description": "Plan accessibility",
                            "type": "string",
                            "enum": [
                              "Unknown",
                              "Public",
                              "PrivateTenantOnLevel",
                              "PrivateSubscriptionOnLevel"
                            ],
                            "x-ms-enum": {
                              "name": "accessibility",
                              "modelAsString": true
                            }
                          },
                          "altStackReference": {
                            "description": "Alternative stack type",
                            "type": "string",
                            "readOnly": true
                          },
                          "stackType": {
                            "description": "Stack type (classic or arm)",
                            "type": "string",
                            "readOnly": true
                          },
                          "isStopSell": {
                            "description": "Indicating whether the plan is stop sell or not.",
                            "type": "boolean",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "planId"
                      ]
                    }
                  },
                  "description": "The privateStore offer data structure.",
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/requestApprovals": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "get": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_GetApprovalRequestsList",
        "description": "Get all open approval requests of current user",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "List of admin request approval resources",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "Request approval resource.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The resource ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "Metadata pertaining to creation and last modification of the resource",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource",
                            "type": "string",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "IdentityType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)"
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource",
                            "type": "string",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "IdentityType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The privateStore approval request data structure.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "offerId": {
                            "description": "Gets or sets unique offer id.",
                            "type": "string"
                          },
                          "offerDisplayName": {
                            "description": "Gets offer display name",
                            "type": "string",
                            "readOnly": true
                          },
                          "publisherId": {
                            "description": "The offer's publisher id",
                            "type": "string"
                          },
                          "plansDetails": {
                            "description": "Gets or sets the plans details",
                            "type": "array",
                            "items": {
                              "description": "Return plan with request details",
                              "type": "object",
                              "properties": {
                                "planId": {
                                  "description": "Gets or sets Plan Id ",
                                  "type": "string"
                                },
                                "status": {
                                  "description": "Gets the plan status",
                                  "type": "string",
                                  "readOnly": true,
                                  "enum": [
                                    "Pending",
                                    "Rejected",
                                    "Approved",
                                    "None"
                                  ],
                                  "x-ms-enum": {
                                    "name": "status",
                                    "modelAsString": true
                                  }
                                },
                                "requestDate": {
                                  "description": "Gets request date",
                                  "format": "date-time",
                                  "readOnly": true
                                },
                                "justification": {
                                  "description": "Gets or sets user's justification for the plan's request",
                                  "type": "string"
                                },
                                "subscriptionId": {
                                  "description": "Gets or sets the subscription id that the user is requesting to add the plan to",
                                  "type": "string"
                                },
                                "subscriptionName": {
                                  "description": "Gets or sets the subscription name that the user is requesting to add the plan to",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "planId"
                            ]
                          },
                          "isClosed": {
                            "description": "Gets a value indicating whether the request is closed",
                            "type": "boolean",
                            "readOnly": true
                          },
                          "messageCode": {
                            "description": "Gets or sets the request approval message code",
                            "type": "integer",
                            "format": "int64"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL to get the next set of notifications list results if there are any.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/requestApprovals/{requestApprovalId}": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "get": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_GetRequestApproval",
        "description": "Get open request approval details",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          },
          {
            "in": "path",
            "name": "requestApprovalId",
            "type": "string",
            "x-ms-parameter-location": "method",
            "required": true,
            "description": "The request approval ID to get create or update"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Request approval resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "The resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)"
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The privateStore approval request data structure.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "offerId": {
                      "description": "Gets or sets unique offer id.",
                      "type": "string"
                    },
                    "offerDisplayName": {
                      "description": "Gets offer display name",
                      "type": "string",
                      "readOnly": true
                    },
                    "publisherId": {
                      "description": "The offer's publisher id",
                      "type": "string"
                    },
                    "plansDetails": {
                      "description": "Gets or sets the plans details",
                      "type": "array",
                      "items": {
                        "description": "Return plan with request details",
                        "type": "object",
                        "properties": {
                          "planId": {
                            "description": "Gets or sets Plan Id ",
                            "type": "string"
                          },
                          "status": {
                            "description": "Gets the plan status",
                            "type": "string",
                            "readOnly": true,
                            "enum": [
                              "Pending",
                              "Rejected",
                              "Approved",
                              "None"
                            ],
                            "x-ms-enum": {
                              "name": "status",
                              "modelAsString": true
                            }
                          },
                          "requestDate": {
                            "description": "Gets request date",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "justification": {
                            "description": "Gets or sets user's justification for the plan's request",
                            "type": "string"
                          },
                          "subscriptionId": {
                            "description": "Gets or sets the subscription id that the user is requesting to add the plan to",
                            "type": "string"
                          },
                          "subscriptionName": {
                            "description": "Gets or sets the subscription name that the user is requesting to add the plan to",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "planId"
                      ]
                    },
                    "isClosed": {
                      "description": "Gets a value indicating whether the request is closed",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "messageCode": {
                      "description": "Gets or sets the request approval message code",
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_CreateApprovalRequest",
        "description": "Create approval request",
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "description": "Request approval resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "The resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)"
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The privateStore approval request data structure.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "offerId": {
                      "description": "Gets or sets unique offer id.",
                      "type": "string"
                    },
                    "offerDisplayName": {
                      "description": "Gets offer display name",
                      "type": "string",
                      "readOnly": true
                    },
                    "publisherId": {
                      "description": "The offer's publisher id",
                      "type": "string"
                    },
                    "plansDetails": {
                      "description": "Gets or sets the plans details",
                      "type": "array",
                      "items": {
                        "description": "Return plan with request details",
                        "type": "object",
                        "properties": {
                          "planId": {
                            "description": "Gets or sets Plan Id ",
                            "type": "string"
                          },
                          "status": {
                            "description": "Gets the plan status",
                            "type": "string",
                            "readOnly": true,
                            "enum": [
                              "Pending",
                              "Rejected",
                              "Approved",
                              "None"
                            ],
                            "x-ms-enum": {
                              "name": "status",
                              "modelAsString": true
                            }
                          },
                          "requestDate": {
                            "description": "Gets request date",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "justification": {
                            "description": "Gets or sets user's justification for the plan's request",
                            "type": "string"
                          },
                          "subscriptionId": {
                            "description": "Gets or sets the subscription id that the user is requesting to add the plan to",
                            "type": "string"
                          },
                          "subscriptionName": {
                            "description": "Gets or sets the subscription name that the user is requesting to add the plan to",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "planId"
                      ]
                    },
                    "isClosed": {
                      "description": "Gets a value indicating whether the request is closed",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "messageCode": {
                      "description": "Gets or sets the request approval message code",
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          },
          {
            "in": "path",
            "name": "requestApprovalId",
            "type": "string",
            "x-ms-parameter-location": "method",
            "required": true,
            "description": "The request approval ID to get create or update"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Request approval resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "The resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)"
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The privateStore approval request data structure.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "offerId": {
                      "description": "Gets or sets unique offer id.",
                      "type": "string"
                    },
                    "offerDisplayName": {
                      "description": "Gets offer display name",
                      "type": "string",
                      "readOnly": true
                    },
                    "publisherId": {
                      "description": "The offer's publisher id",
                      "type": "string"
                    },
                    "plansDetails": {
                      "description": "Gets or sets the plans details",
                      "type": "array",
                      "items": {
                        "description": "Return plan with request details",
                        "type": "object",
                        "properties": {
                          "planId": {
                            "description": "Gets or sets Plan Id ",
                            "type": "string"
                          },
                          "status": {
                            "description": "Gets the plan status",
                            "type": "string",
                            "readOnly": true,
                            "enum": [
                              "Pending",
                              "Rejected",
                              "Approved",
                              "None"
                            ],
                            "x-ms-enum": {
                              "name": "status",
                              "modelAsString": true
                            }
                          },
                          "requestDate": {
                            "description": "Gets request date",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "justification": {
                            "description": "Gets or sets user's justification for the plan's request",
                            "type": "string"
                          },
                          "subscriptionId": {
                            "description": "Gets or sets the subscription id that the user is requesting to add the plan to",
                            "type": "string"
                          },
                          "subscriptionName": {
                            "description": "Gets or sets the subscription name that the user is requesting to add the plan to",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "planId"
                      ]
                    },
                    "isClosed": {
                      "description": "Gets a value indicating whether the request is closed",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "messageCode": {
                      "description": "Gets or sets the request approval message code",
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/requestApprovals/{requestApprovalId}/query": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_QueryRequestApproval",
        "description": "Get request statuses foreach plan, this api is used as a complex GET action.",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          },
          {
            "in": "path",
            "name": "requestApprovalId",
            "type": "string",
            "x-ms-parameter-location": "method",
            "required": true,
            "description": "The request approval ID to get create or update"
          },
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "description": "The details to get the request plans statuses",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "The details to get the request plans statuses",
                  "type": "object",
                  "properties": {
                    "publisherId": {
                      "description": "The offer's publisher id",
                      "type": "string"
                    },
                    "planIds": {
                      "description": "Current plans list",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "subscriptionId": {
                      "description": "Gets or sets the subscription id",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Gets the request plans with indication on each plan whether is approved by the admin, has pending request or not requested yet",
              "type": "object",
              "properties": {
                "uniqueOfferId": {
                  "description": "Gets or sets unique offer id.",
                  "type": "string"
                },
                "plansDetails": {
                  "description": "Gets or sets the plans details",
                  "type": "object",
                  "additionalProperties": {
                    "description": "Return plan with request details",
                    "type": "object",
                    "properties": {
                      "planId": {
                        "description": "Gets or sets Plan Id ",
                        "type": "string"
                      },
                      "status": {
                        "description": "Gets the plan status",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Pending",
                          "Rejected",
                          "Approved",
                          "None"
                        ],
                        "x-ms-enum": {
                          "name": "status",
                          "modelAsString": true
                        }
                      },
                      "requestDate": {
                        "description": "Gets request date",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "justification": {
                        "description": "Gets or sets user's justification for the plan's request",
                        "type": "string"
                      },
                      "subscriptionId": {
                        "description": "Gets or sets the subscription id that the user is requesting to add the plan to",
                        "type": "string"
                      },
                      "subscriptionName": {
                        "description": "Gets or sets the subscription name that the user is requesting to add the plan to",
                        "type": "string"
                      }
                    }
                  }
                },
                "etag": {
                  "description": "Gets or sets e-tag field ",
                  "type": "string"
                },
                "messageCode": {
                  "description": "Gets or sets the notification message id",
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/adminRequestApprovals": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "get": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_AdminRequestApprovalsList",
        "description": "Get list of admin request approvals",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "List of admin request approval resources",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "Admin request approval resource.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The resource ID.",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "The name of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "The type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "Metadata pertaining to creation and last modification of the resource",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "description": "The type of identity that created the resource",
                            "type": "string",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "IdentityType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)"
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "description": "The type of identity that last modified the resource",
                            "type": "string",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "IdentityType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The privateStore admin Approval request data structure.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "offerId": {
                            "description": "Gets or sets offer Id",
                            "type": "string"
                          },
                          "displayName": {
                            "description": "Gets display name",
                            "type": "string",
                            "readOnly": true
                          },
                          "publisherId": {
                            "description": "Gets or sets publisher Id",
                            "type": "string"
                          },
                          "adminAction": {
                            "description": "Gets or sets admin action",
                            "type": "string",
                            "enum": [
                              "Approved",
                              "Rejected"
                            ],
                            "x-ms-enum": {
                              "name": "adminAction",
                              "modelAsString": true
                            }
                          },
                          "approvedPlans": {
                            "description": "Gets or sets Approved plans ids, empty in case of rejected",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "comment": {
                            "description": "Gets or sets admin comment",
                            "type": "string"
                          },
                          "administrator": {
                            "description": "Gets or sets admin details",
                            "type": "string"
                          },
                          "plans": {
                            "description": "Gets list of plans with requesters details",
                            "type": "array",
                            "readOnly": true,
                            "items": {
                              "description": "Plan with requesters details",
                              "type": "object",
                              "properties": {
                                "planId": {
                                  "description": "Gets the plan id",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "planDisplayName": {
                                  "description": "Gets the plan display name",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "requesters": {
                                  "description": "Gets requesters details list",
                                  "type": "array",
                                  "readOnly": true,
                                  "items": {
                                    "description": "user request details",
                                    "type": "object",
                                    "properties": {
                                      "user": {
                                        "description": "Gets user id",
                                        "type": "string",
                                        "readOnly": true
                                      },
                                      "date": {
                                        "description": "Gets request date",
                                        "type": "string",
                                        "readOnly": true
                                      },
                                      "justification": {
                                        "description": "Gets justification",
                                        "type": "string",
                                        "readOnly": true
                                      },
                                      "subscriptionId": {
                                        "description": "Gets the subscription id that the user is requesting to add the plan to",
                                        "type": "string"
                                      },
                                      "subscriptionName": {
                                        "description": "Gets the subscription name that the user is requesting to add the plan to",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": [
                                    "user"
                                  ]
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "planId"
                            ]
                          },
                          "collectionIds": {
                            "description": "Gets or sets list of associated collection ids",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "icon": {
                            "description": "The offer icon url.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "URL to get the next set of notifications list results if there are any.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/adminRequestApprovals/{adminRequestApprovalId}": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "get": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_GetAdminRequestApproval",
        "description": "Get open approval requests",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          },
          {
            "in": "path",
            "name": "adminRequestApprovalId",
            "type": "string",
            "x-ms-parameter-location": "method",
            "required": true,
            "description": "The admin request approval ID to get create or update"
          },
          {
            "name": "publisherId",
            "in": "query",
            "required": true,
            "x-ms-parameter-location": "method",
            "type": "string",
            "description": "The publisher id of this offer."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Admin request approval resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "The resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)"
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The privateStore admin Approval request data structure.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "offerId": {
                      "description": "Gets or sets offer Id",
                      "type": "string"
                    },
                    "displayName": {
                      "description": "Gets display name",
                      "type": "string",
                      "readOnly": true
                    },
                    "publisherId": {
                      "description": "Gets or sets publisher Id",
                      "type": "string"
                    },
                    "adminAction": {
                      "description": "Gets or sets admin action",
                      "type": "string",
                      "enum": [
                        "Approved",
                        "Rejected"
                      ],
                      "x-ms-enum": {
                        "name": "adminAction",
                        "modelAsString": true
                      }
                    },
                    "approvedPlans": {
                      "description": "Gets or sets Approved plans ids, empty in case of rejected",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "comment": {
                      "description": "Gets or sets admin comment",
                      "type": "string"
                    },
                    "administrator": {
                      "description": "Gets or sets admin details",
                      "type": "string"
                    },
                    "plans": {
                      "description": "Gets list of plans with requesters details",
                      "type": "array",
                      "readOnly": true,
                      "items": {
                        "description": "Plan with requesters details",
                        "type": "object",
                        "properties": {
                          "planId": {
                            "description": "Gets the plan id",
                            "type": "string",
                            "readOnly": true
                          },
                          "planDisplayName": {
                            "description": "Gets the plan display name",
                            "type": "string",
                            "readOnly": true
                          },
                          "requesters": {
                            "description": "Gets requesters details list",
                            "type": "array",
                            "readOnly": true,
                            "items": {
                              "description": "user request details",
                              "type": "object",
                              "properties": {
                                "user": {
                                  "description": "Gets user id",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "date": {
                                  "description": "Gets request date",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "justification": {
                                  "description": "Gets justification",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "subscriptionId": {
                                  "description": "Gets the subscription id that the user is requesting to add the plan to",
                                  "type": "string"
                                },
                                "subscriptionName": {
                                  "description": "Gets the subscription name that the user is requesting to add the plan to",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "user"
                            ]
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "planId"
                      ]
                    },
                    "collectionIds": {
                      "description": "Gets or sets list of associated collection ids",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "icon": {
                      "description": "The offer icon url.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_UpdateAdminRequestApproval",
        "description": "Update the admin action, weather the request is approved or rejected and the approved plans",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          },
          {
            "in": "path",
            "name": "adminRequestApprovalId",
            "type": "string",
            "x-ms-parameter-location": "method",
            "required": true,
            "description": "The admin request approval ID to get create or update"
          },
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "description": "Admin request approval resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "The resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)"
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The privateStore admin Approval request data structure.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "offerId": {
                      "description": "Gets or sets offer Id",
                      "type": "string"
                    },
                    "displayName": {
                      "description": "Gets display name",
                      "type": "string",
                      "readOnly": true
                    },
                    "publisherId": {
                      "description": "Gets or sets publisher Id",
                      "type": "string"
                    },
                    "adminAction": {
                      "description": "Gets or sets admin action",
                      "type": "string",
                      "enum": [
                        "Approved",
                        "Rejected"
                      ],
                      "x-ms-enum": {
                        "name": "adminAction",
                        "modelAsString": true
                      }
                    },
                    "approvedPlans": {
                      "description": "Gets or sets Approved plans ids, empty in case of rejected",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "comment": {
                      "description": "Gets or sets admin comment",
                      "type": "string"
                    },
                    "administrator": {
                      "description": "Gets or sets admin details",
                      "type": "string"
                    },
                    "plans": {
                      "description": "Gets list of plans with requesters details",
                      "type": "array",
                      "readOnly": true,
                      "items": {
                        "description": "Plan with requesters details",
                        "type": "object",
                        "properties": {
                          "planId": {
                            "description": "Gets the plan id",
                            "type": "string",
                            "readOnly": true
                          },
                          "planDisplayName": {
                            "description": "Gets the plan display name",
                            "type": "string",
                            "readOnly": true
                          },
                          "requesters": {
                            "description": "Gets requesters details list",
                            "type": "array",
                            "readOnly": true,
                            "items": {
                              "description": "user request details",
                              "type": "object",
                              "properties": {
                                "user": {
                                  "description": "Gets user id",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "date": {
                                  "description": "Gets request date",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "justification": {
                                  "description": "Gets justification",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "subscriptionId": {
                                  "description": "Gets the subscription id that the user is requesting to add the plan to",
                                  "type": "string"
                                },
                                "subscriptionName": {
                                  "description": "Gets the subscription name that the user is requesting to add the plan to",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "user"
                            ]
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "planId"
                      ]
                    },
                    "collectionIds": {
                      "description": "Gets or sets list of associated collection ids",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "icon": {
                      "description": "The offer icon url.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Admin request approval resource.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "The resource ID.",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "The name of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "The type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "systemData": {
                  "readOnly": true,
                  "description": "Metadata pertaining to creation and last modification of the resource",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "description": "The type of identity that created the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)"
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "description": "The type of identity that last modified the resource",
                      "type": "string",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The privateStore admin Approval request data structure.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "offerId": {
                      "description": "Gets or sets offer Id",
                      "type": "string"
                    },
                    "displayName": {
                      "description": "Gets display name",
                      "type": "string",
                      "readOnly": true
                    },
                    "publisherId": {
                      "description": "Gets or sets publisher Id",
                      "type": "string"
                    },
                    "adminAction": {
                      "description": "Gets or sets admin action",
                      "type": "string",
                      "enum": [
                        "Approved",
                        "Rejected"
                      ],
                      "x-ms-enum": {
                        "name": "adminAction",
                        "modelAsString": true
                      }
                    },
                    "approvedPlans": {
                      "description": "Gets or sets Approved plans ids, empty in case of rejected",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "comment": {
                      "description": "Gets or sets admin comment",
                      "type": "string"
                    },
                    "administrator": {
                      "description": "Gets or sets admin details",
                      "type": "string"
                    },
                    "plans": {
                      "description": "Gets list of plans with requesters details",
                      "type": "array",
                      "readOnly": true,
                      "items": {
                        "description": "Plan with requesters details",
                        "type": "object",
                        "properties": {
                          "planId": {
                            "description": "Gets the plan id",
                            "type": "string",
                            "readOnly": true
                          },
                          "planDisplayName": {
                            "description": "Gets the plan display name",
                            "type": "string",
                            "readOnly": true
                          },
                          "requesters": {
                            "description": "Gets requesters details list",
                            "type": "array",
                            "readOnly": true,
                            "items": {
                              "description": "user request details",
                              "type": "object",
                              "properties": {
                                "user": {
                                  "description": "Gets user id",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "date": {
                                  "description": "Gets request date",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "justification": {
                                  "description": "Gets justification",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "subscriptionId": {
                                  "description": "Gets the subscription id that the user is requesting to add the plan to",
                                  "type": "string"
                                },
                                "subscriptionName": {
                                  "description": "Gets the subscription name that the user is requesting to add the plan to",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "user"
                            ]
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "planId"
                      ]
                    },
                    "collectionIds": {
                      "description": "Gets or sets list of associated collection ids",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "icon": {
                      "description": "The offer icon url.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/queryNotificationsState": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_QueryNotificationsState",
        "description": "Get private store notifications state",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Get private store notifications state",
              "type": "object",
              "properties": {
                "stopSellNotifications": {
                  "type": "array",
                  "items": {
                    "description": "Stop sell notification details",
                    "type": "object",
                    "properties": {
                      "offerId": {
                        "description": "Gets offer id",
                        "type": "string"
                      },
                      "displayName": {
                        "description": "Gets offer display name",
                        "type": "string"
                      },
                      "isEntire": {
                        "description": "Gets a value indicating whether entire offer is in stop sell or only few of its plans",
                        "type": "boolean"
                      },
                      "messageCode": {
                        "description": "Gets or sets the notification message id",
                        "type": "integer",
                        "format": "int64"
                      },
                      "icon": {
                        "description": "Gets or sets the icon url",
                        "type": "string"
                      },
                      "plans": {
                        "description": "Gets or sets removed plans notifications",
                        "type": "array",
                        "items": {
                          "description": "Plan notification details",
                          "type": "object",
                          "properties": {
                            "planId": {
                              "description": "Gets or sets the plan id",
                              "type": "string"
                            },
                            "planDisplayName": {
                              "description": "Gets or sets the plan display name",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "planId"
                        ]
                      }
                    }
                  },
                  "x-ms-identifiers": []
                },
                "newNotifications": {
                  "type": "array",
                  "items": {
                    "description": "New plans notification details",
                    "type": "object",
                    "properties": {
                      "offerId": {
                        "description": "Gets offer id",
                        "type": "string"
                      },
                      "displayName": {
                        "description": "Gets offer display name",
                        "type": "string"
                      },
                      "isFuturePlansEnabled": {
                        "description": "Gets a value indicating whether future plans is enabled.",
                        "type": "boolean"
                      },
                      "messageCode": {
                        "description": "Gets or sets the notification message id",
                        "type": "integer",
                        "format": "int64"
                      },
                      "icon": {
                        "description": "Gets or sets the icon url",
                        "type": "string"
                      },
                      "plans": {
                        "description": "Gets or sets removed plans notifications",
                        "type": "array",
                        "items": {
                          "description": "Plan notification details",
                          "type": "object",
                          "properties": {
                            "planId": {
                              "description": "Gets or sets the plan id",
                              "type": "string"
                            },
                            "planDisplayName": {
                              "description": "Gets or sets the plan display name",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "planId"
                        ]
                      }
                    }
                  },
                  "x-ms-identifiers": []
                },
                "approvalRequests": {
                  "type": "array",
                  "items": {
                    "description": "Request approvals details",
                    "type": "object",
                    "properties": {
                      "offerId": {
                        "description": "Gets offer id",
                        "type": "string"
                      },
                      "displayName": {
                        "description": "Gets offer display name",
                        "type": "string"
                      },
                      "publisherId": {
                        "description": "Gets or sets publisher id",
                        "type": "string"
                      },
                      "messageCode": {
                        "description": "Gets or sets the notification message id",
                        "type": "integer",
                        "format": "int64"
                      },
                      "icon": {
                        "description": "Gets or sets the icon url",
                        "type": "string"
                      },
                      "plans": {
                        "description": "Gets or sets removed plans notifications",
                        "type": "array",
                        "items": {
                          "description": "Plan notification details",
                          "type": "object",
                          "properties": {
                            "planId": {
                              "description": "Gets or sets the plan id",
                              "type": "string"
                            },
                            "planDisplayName": {
                              "description": "Gets or sets the plan display name",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "planId"
                        ]
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/offers/{offerId}/acknowledgeNotification": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_AcknowledgeOfferNotification",
        "description": "Acknowledge notification for offer",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          },
          {
            "in": "path",
            "name": "offerId",
            "type": "string",
            "x-ms-parameter-location": "method",
            "required": true,
            "description": "The offer ID to update or delete"
          },
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "description": "Notification update request payload",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "Notification update request payload details",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "acknowledge": {
                      "description": "Gets or sets a value indicating whether acknowledge action flag is enabled",
                      "type": "boolean"
                    },
                    "dismiss": {
                      "description": "Gets or sets a value indicating whether dismiss action flag is enabled",
                      "type": "boolean"
                    },
                    "removeOffer": {
                      "description": "Gets or sets a value indicating whether remove offer action flag is enabled",
                      "type": "boolean"
                    },
                    "addPlans": {
                      "description": "Gets or sets added plans",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "removePlans": {
                      "description": "Gets or sets remove plans",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK, notification was acknowledged by the RP"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/requestApprovals/{requestApprovalId}/withdrawPlan": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_WithdrawPlan",
        "description": "Withdraw a user request approval on specific plan",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          },
          {
            "in": "path",
            "name": "requestApprovalId",
            "type": "string",
            "x-ms-parameter-location": "method",
            "required": true,
            "description": "The request approval ID to get create or update"
          },
          {
            "in": "body",
            "name": "payload",
            "schema": {
              "description": "Withdraw properties",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "Withdraw properties details",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "planId": {
                      "description": "Gets or sets Plan Id ",
                      "type": "string"
                    },
                    "publisherId": {
                      "description": "The offer's publisher id",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/fetchAllSubscriptionsInTenant": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_FetchAllSubscriptionsInTenant",
        "description": "Fetch all subscriptions in tenant, only for marketplace admin",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          },
          {
            "name": "next-page-token",
            "in": "header",
            "type": "string",
            "description": "The skip token to get the next page.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "description": "Subscription list operation response.",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "Subscription information.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The fully qualified ID for the subscription. For example, /subscriptions/00000000-0000-0000-0000-000000000000."
                      },
                      "subscriptionId": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The subscription ID."
                      },
                      "displayName": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The subscription display name."
                      },
                      "state": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The subscription state. Possible values are Enabled, Warned, PastDue, Disabled, and Deleted.",
                        "enum": [
                          "Enabled",
                          "Warned",
                          "PastDue",
                          "Disabled",
                          "Deleted"
                        ],
                        "x-ms-enum": {
                          "name": "SubscriptionState",
                          "modelAsString": true
                        }
                      }
                    }
                  },
                  "description": "An array of subscriptions.",
                  "readOnly": true
                },
                "skipToken": {
                  "type": "string",
                  "description": "The skip token to retrieve the next page.",
                  "readOnly": true
                },
                "count": {
                  "description": "Number of subscriptions on the page",
                  "type": "integer",
                  "format": "int64",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/listNewPlansNotifications": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_ListNewPlansNotifications",
        "description": "List new plans notifications",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "description": "List of all new plans notifications for public offers",
              "type": "object",
              "properties": {
                "newPlansNotifications": {
                  "type": "array",
                  "items": {
                    "description": "New plans notification details",
                    "type": "object",
                    "properties": {
                      "offerId": {
                        "description": "Gets offer id",
                        "type": "string"
                      },
                      "displayName": {
                        "description": "Gets offer display name",
                        "type": "string"
                      },
                      "isFuturePlansEnabled": {
                        "description": "Gets a value indicating whether future plans is enabled.",
                        "type": "boolean"
                      },
                      "messageCode": {
                        "description": "Gets or sets the notification message id",
                        "type": "integer",
                        "format": "int64"
                      },
                      "icon": {
                        "description": "Gets or sets the icon url",
                        "type": "string"
                      },
                      "plans": {
                        "description": "Gets or sets removed plans notifications",
                        "type": "array",
                        "items": {
                          "description": "Plan notification details",
                          "type": "object",
                          "properties": {
                            "planId": {
                              "description": "Gets or sets the plan id",
                              "type": "string"
                            },
                            "planDisplayName": {
                              "description": "Gets or sets the plan display name",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "planId"
                        ]
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/listStopSellOffersPlansNotifications": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_ListStopSellOffersPlansNotifications",
        "description": "List stop sell notifications for both stop sell offers and stop sell plans",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          },
          {
            "in": "body",
            "name": "stopSellSubscriptions",
            "schema": {
              "description": "Private plans subscriptions",
              "type": "object",
              "properties": {
                "subscriptions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "description": "List of stop sell offers and plans notifications.",
              "type": "object",
              "properties": {
                "stopSellNotifications": {
                  "type": "array",
                  "items": {
                    "description": "List of stop sell offers and plans notifications.",
                    "type": "object",
                    "properties": {
                      "offerId": {
                        "description": "The offer id",
                        "type": "string",
                        "readOnly": true
                      },
                      "displayName": {
                        "description": "The offer display name",
                        "type": "string",
                        "readOnly": true
                      },
                      "isEntire": {
                        "description": "A value indicating whether entire offer is in stop sell or only few of its plans",
                        "type": "boolean",
                        "readOnly": true
                      },
                      "messageCode": {
                        "description": "The notification message code",
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                      },
                      "icon": {
                        "description": "The icon url",
                        "type": "string",
                        "readOnly": true
                      },
                      "plans": {
                        "description": "The list of removed plans notifications",
                        "type": "array",
                        "items": {
                          "description": "Plan notification details",
                          "type": "object",
                          "properties": {
                            "planId": {
                              "description": "Gets or sets the plan id",
                              "type": "string"
                            },
                            "planDisplayName": {
                              "description": "Gets or sets the plan display name",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "planId"
                        ],
                        "readOnly": true
                      },
                      "publicContext": {
                        "description": "True if the offer has public plans",
                        "type": "boolean",
                        "readOnly": true
                      },
                      "subscriptionsIds": {
                        "description": "The subscriptions related to private plans",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "offerId"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/privateStores/{privateStoreId}/listSubscriptionsContext": {
      "parameters": [
        {
          "name": "api-version",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The API version to use for the request."
        }
      ],
      "post": {
        "tags": [
          "PrivateStores"
        ],
        "operationId": "PrivateStore_ListSubscriptionsContext",
        "description": "List all the subscriptions in the private store context",
        "parameters": [
          {
            "name": "privateStoreId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The store ID - must use the tenant ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "description": "List of subscription Ids in the private store",
              "type": "object",
              "properties": {
                "subscriptionsIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Marketplace/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available Microsoft.Marketplace REST API operations.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for the request."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "description": "Result of the request to list Marketplace operations. It contains a list of operations and a URL link to get the next set of results.",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "Microsoft.Marketplace REST API operation",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Operation ID",
                        "type": "string"
                      },
                      "name": {
                        "description": "Operation name: {provider}/{resource}/{operation}",
                        "type": "string"
                      },
                      "isDataAction": {
                        "description": "Indicates whether the operation is a data action",
                        "type": "boolean"
                      },
                      "display": {
                        "description": "The object that represents the operation.",
                        "type": "object",
                        "properties": {
                          "provider": {
                            "readOnly": true,
                            "description": "Service provider: Microsoft.Marketplace",
                            "type": "string"
                          },
                          "resource": {
                            "readOnly": true,
                            "description": "Resource on which the operation is performed",
                            "type": "string"
                          },
                          "operation": {
                            "readOnly": true,
                            "description": "Operation type",
                            "type": "string"
                          },
                          "description": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Friendly description for the operation,"
                          }
                        }
                      },
                      "origin": {
                        "description": "Origin of the operation",
                        "type": "string"
                      },
                      "properties": {
                        "description": "Properties of the operation",
                        "type": "object",
                        "properties": {}
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ],
                  "description": "List of Microsoft.Marketplace operations supported by the Microsoft.Marketplace resource provider."
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of operation list results if there are any.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "PrivateStoreList": {
      "description": "Describes the json payload for the list of available private stores (between zero and one, inclusive)",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "The PrivateStore data structure.",
            "type": "object",
            "properties": {
              "id": {
                "description": "The resource ID.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "readOnly": true,
                "description": "Metadata pertaining to creation and last modification of the resource",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource",
                    "type": "string",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "IdentityType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)"
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource",
                    "type": "string",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "IdentityType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The PrivateStore data structure.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "availability": {
                    "description": "Indicates private store availability",
                    "type": "string",
                    "enum": [
                      "enabled",
                      "disabled"
                    ],
                    "x-ms-enum": {
                      "name": "Availability",
                      "modelAsString": true
                    }
                  },
                  "privateStoreId": {
                    "description": "Private Store id",
                    "type": "string",
                    "readOnly": true
                  },
                  "eTag": {
                    "description": "Identifier for purposes of race condition",
                    "type": "string"
                  },
                  "privateStoreName": {
                    "description": "Private Store Name",
                    "type": "string"
                  },
                  "tenantId": {
                    "description": "Tenant id",
                    "type": "string"
                  },
                  "isGov": {
                    "description": "Is government",
                    "type": "boolean"
                  },
                  "collectionIds": {
                    "description": "Gets list of associated collection ids",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "branding": {
                    "description": "Gets or sets list of branding characteristics",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "notificationsSettings": {
                    "description": "Gets or sets notifications settings",
                    "x-ms-client-flatten": true,
                    "type": "object",
                    "properties": {
                      "recipients": {
                        "description": "Gets or sets list of notified recipients for new requests",
                        "type": "array",
                        "items": {
                          "description": "Describes the json payload for a notified recipient for new requests",
                          "type": "object",
                          "properties": {
                            "principalId": {
                              "description": "Principal ID",
                              "type": "string"
                            },
                            "emailAddress": {
                              "description": "Email Address",
                              "type": "string",
                              "readOnly": true
                            },
                            "displayName": {
                              "description": "Display Name",
                              "type": "string",
                              "readOnly": true
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "principalId"
                        ]
                      },
                      "sendToAllMarketplaceAdmins": {
                        "description": "Gets or sets whether to send email to all marketplace admins for new requests",
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "URL to get the next set of PrivateStore list results if there are any.",
          "type": "string"
        }
      }
    },
    "PrivateStore": {
      "description": "The PrivateStore data structure.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "readOnly": true,
          "description": "Metadata pertaining to creation and last modification of the resource",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "description": "The type of identity that created the resource",
              "type": "string",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "IdentityType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)"
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource",
              "type": "string",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "IdentityType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The PrivateStore data structure.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "availability": {
              "description": "Indicates private store availability",
              "type": "string",
              "enum": [
                "enabled",
                "disabled"
              ],
              "x-ms-enum": {
                "name": "Availability",
                "modelAsString": true
              }
            },
            "privateStoreId": {
              "description": "Private Store id",
              "type": "string",
              "readOnly": true
            },
            "eTag": {
              "description": "Identifier for purposes of race condition",
              "type": "string"
            },
            "privateStoreName": {
              "description": "Private Store Name",
              "type": "string"
            },
            "tenantId": {
              "description": "Tenant id",
              "type": "string"
            },
            "isGov": {
              "description": "Is government",
              "type": "boolean"
            },
            "collectionIds": {
              "description": "Gets list of associated collection ids",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "branding": {
              "description": "Gets or sets list of branding characteristics",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "notificationsSettings": {
              "description": "Gets or sets notifications settings",
              "x-ms-client-flatten": true,
              "type": "object",
              "properties": {
                "recipients": {
                  "description": "Gets or sets list of notified recipients for new requests",
                  "type": "array",
                  "items": {
                    "description": "Describes the json payload for a notified recipient for new requests",
                    "type": "object",
                    "properties": {
                      "principalId": {
                        "description": "Principal ID",
                        "type": "string"
                      },
                      "emailAddress": {
                        "description": "Email Address",
                        "type": "string",
                        "readOnly": true
                      },
                      "displayName": {
                        "description": "Display Name",
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "principalId"
                  ]
                },
                "sendToAllMarketplaceAdmins": {
                  "description": "Gets or sets whether to send email to all marketplace admins for new requests",
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "PrivateStoreProperties": {
      "description": "Describes the json payload on whether or not the private store is enabled for a given tenant",
      "type": "object",
      "properties": {
        "availability": {
          "description": "Indicates private store availability",
          "type": "string",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "Availability",
            "modelAsString": true
          }
        },
        "privateStoreId": {
          "description": "Private Store id",
          "type": "string",
          "readOnly": true
        },
        "eTag": {
          "description": "Identifier for purposes of race condition",
          "type": "string"
        },
        "privateStoreName": {
          "description": "Private Store Name",
          "type": "string"
        },
        "tenantId": {
          "description": "Tenant id",
          "type": "string"
        },
        "isGov": {
          "description": "Is government",
          "type": "boolean"
        },
        "collectionIds": {
          "description": "Gets list of associated collection ids",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "branding": {
          "description": "Gets or sets list of branding characteristics",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "notificationsSettings": {
          "description": "Gets or sets notifications settings",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "recipients": {
              "description": "Gets or sets list of notified recipients for new requests",
              "type": "array",
              "items": {
                "description": "Describes the json payload for a notified recipient for new requests",
                "type": "object",
                "properties": {
                  "principalId": {
                    "description": "Principal ID",
                    "type": "string"
                  },
                  "emailAddress": {
                    "description": "Email Address",
                    "type": "string",
                    "readOnly": true
                  },
                  "displayName": {
                    "description": "Display Name",
                    "type": "string",
                    "readOnly": true
                  }
                }
              },
              "x-ms-identifiers": [
                "principalId"
              ]
            },
            "sendToAllMarketplaceAdmins": {
              "description": "Gets or sets whether to send email to all marketplace admins for new requests",
              "type": "boolean"
            }
          }
        }
      }
    },
    "AnyExistingOffersInTheCollectionsResponse": {
      "description": "Response object of query if are there existing offers in the collections.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Boolean answer, true if exists at least a single offer in an enabled collection, otherwise, false.",
          "type": "boolean"
        }
      }
    },
    "NotificationsSettingsProperties": {
      "description": "Describes the json payload for notifications settings",
      "type": "object",
      "properties": {
        "recipients": {
          "description": "Gets or sets list of notified recipients for new requests",
          "type": "array",
          "items": {
            "description": "Describes the json payload for a notified recipient for new requests",
            "type": "object",
            "properties": {
              "principalId": {
                "description": "Principal ID",
                "type": "string"
              },
              "emailAddress": {
                "description": "Email Address",
                "type": "string",
                "readOnly": true
              },
              "displayName": {
                "description": "Display Name",
                "type": "string",
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": [
            "principalId"
          ]
        },
        "sendToAllMarketplaceAdmins": {
          "description": "Gets or sets whether to send email to all marketplace admins for new requests",
          "type": "boolean"
        }
      }
    },
    "Recipient": {
      "description": "Describes the json payload for a notified recipient for new requests",
      "type": "object",
      "properties": {
        "principalId": {
          "description": "Principal ID",
          "type": "string"
        },
        "emailAddress": {
          "description": "Email Address",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "description": "Display Name",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CollectionsList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "The Collection data structure.",
            "type": "object",
            "properties": {
              "id": {
                "description": "The resource ID.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "readOnly": true,
                "description": "Metadata pertaining to creation and last modification of the resource",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource",
                    "type": "string",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "IdentityType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)"
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource",
                    "type": "string",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "IdentityType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The collection data structure.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "collectionId": {
                    "description": "Gets collection Id.",
                    "type": "string",
                    "readOnly": true
                  },
                  "collectionName": {
                    "description": "Gets or sets collection name.",
                    "type": "string"
                  },
                  "claim": {
                    "description": "Gets or sets the association with Commercial's Billing Account.",
                    "type": "string"
                  },
                  "allSubscriptions": {
                    "description": "Indicating whether all subscriptions are selected (=true) or not (=false).",
                    "type": "boolean"
                  },
                  "approveAllItems": {
                    "description": "Indicating whether all items are approved for this collection (=true) or not (=false).",
                    "type": "boolean",
                    "readOnly": true
                  },
                  "approveAllItemsModifiedAt": {
                    "description": "Gets the modified date of all items approved.",
                    "format": "date-time",
                    "type": "string",
                    "readOnly": true
                  },
                  "subscriptionsList": {
                    "description": "Gets or sets subscription ids list. Empty list indicates all subscriptions are selected, null indicates no update is done, explicit list indicates the explicit selected subscriptions. On insert, null is considered as bad request",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "enabled": {
                    "description": "Indicating whether the collection is enabled or disabled.",
                    "type": "boolean"
                  },
                  "numberOfOffers": {
                    "description": "Gets the number of offers associated with the collection.",
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true
                  },
                  "appliedRules": {
                    "description": "Gets list of collection rules",
                    "type": "array",
                    "readOnly": true,
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Rule type",
                          "type": "string",
                          "enum": [
                            "PrivateProducts",
                            "TermsAndCondition"
                          ],
                          "x-ms-enum": {
                            "name": "ruleType",
                            "modelAsString": true
                          }
                        },
                        "value": {
                          "type": "array",
                          "items": {
                            "description": "Gets or sets rule's value, not required for boolean rules",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "type"
                    ]
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "URL to get the next set of offer list results if there are any.",
          "type": "string"
        }
      }
    },
    "Collection": {
      "description": "The Collection data structure.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "readOnly": true,
          "description": "Metadata pertaining to creation and last modification of the resource",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "description": "The type of identity that created the resource",
              "type": "string",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "IdentityType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)"
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource",
              "type": "string",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "IdentityType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The collection data structure.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "collectionId": {
              "description": "Gets collection Id.",
              "type": "string",
              "readOnly": true
            },
            "collectionName": {
              "description": "Gets or sets collection name.",
              "type": "string"
            },
            "claim": {
              "description": "Gets or sets the association with Commercial's Billing Account.",
              "type": "string"
            },
            "allSubscriptions": {
              "description": "Indicating whether all subscriptions are selected (=true) or not (=false).",
              "type": "boolean"
            },
            "approveAllItems": {
              "description": "Indicating whether all items are approved for this collection (=true) or not (=false).",
              "type": "boolean",
              "readOnly": true
            },
            "approveAllItemsModifiedAt": {
              "description": "Gets the modified date of all items approved.",
              "format": "date-time",
              "type": "string",
              "readOnly": true
            },
            "subscriptionsList": {
              "description": "Gets or sets subscription ids list. Empty list indicates all subscriptions are selected, null indicates no update is done, explicit list indicates the explicit selected subscriptions. On insert, null is considered as bad request",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "enabled": {
              "description": "Indicating whether the collection is enabled or disabled.",
              "type": "boolean"
            },
            "numberOfOffers": {
              "description": "Gets the number of offers associated with the collection.",
              "type": "integer",
              "format": "int64",
              "readOnly": true
            },
            "appliedRules": {
              "description": "Gets list of collection rules",
              "type": "array",
              "readOnly": true,
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "description": "Rule type",
                    "type": "string",
                    "enum": [
                      "PrivateProducts",
                      "TermsAndCondition"
                    ],
                    "x-ms-enum": {
                      "name": "ruleType",
                      "modelAsString": true
                    }
                  },
                  "value": {
                    "type": "array",
                    "items": {
                      "description": "Gets or sets rule's value, not required for boolean rules",
                      "type": "string"
                    }
                  }
                }
              },
              "x-ms-identifiers": [
                "type"
              ]
            }
          }
        }
      }
    },
    "CollectionProperties": {
      "description": "The collection details",
      "type": "object",
      "properties": {
        "collectionId": {
          "description": "Gets collection Id.",
          "type": "string",
          "readOnly": true
        },
        "collectionName": {
          "description": "Gets or sets collection name.",
          "type": "string"
        },
        "claim": {
          "description": "Gets or sets the association with Commercial's Billing Account.",
          "type": "string"
        },
        "allSubscriptions": {
          "description": "Indicating whether all subscriptions are selected (=true) or not (=false).",
          "type": "boolean"
        },
        "approveAllItems": {
          "description": "Indicating whether all items are approved for this collection (=true) or not (=false).",
          "type": "boolean",
          "readOnly": true
        },
        "approveAllItemsModifiedAt": {
          "description": "Gets the modified date of all items approved.",
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "subscriptionsList": {
          "description": "Gets or sets subscription ids list. Empty list indicates all subscriptions are selected, null indicates no update is done, explicit list indicates the explicit selected subscriptions. On insert, null is considered as bad request",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enabled": {
          "description": "Indicating whether the collection is enabled or disabled.",
          "type": "boolean"
        },
        "numberOfOffers": {
          "description": "Gets the number of offers associated with the collection.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "appliedRules": {
          "description": "Gets list of collection rules",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "description": "Rule type",
                "type": "string",
                "enum": [
                  "PrivateProducts",
                  "TermsAndCondition"
                ],
                "x-ms-enum": {
                  "name": "ruleType",
                  "modelAsString": true
                }
              },
              "value": {
                "type": "array",
                "items": {
                  "description": "Gets or sets rule's value, not required for boolean rules",
                  "type": "string"
                }
              }
            }
          },
          "x-ms-identifiers": [
            "type"
          ]
        }
      }
    },
    "RuleListResponse": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "description": "Rule type",
                "type": "string",
                "enum": [
                  "PrivateProducts",
                  "TermsAndCondition"
                ],
                "x-ms-enum": {
                  "name": "ruleType",
                  "modelAsString": true
                }
              },
              "value": {
                "type": "array",
                "items": {
                  "description": "Gets or sets rule's value, not required for boolean rules",
                  "type": "string"
                }
              }
            }
          },
          "x-ms-identifiers": [
            "type"
          ]
        },
        "nextLink": {
          "description": "URL to get the next set of rules list results if there are any.",
          "type": "string"
        }
      }
    },
    "SetRulesRequest": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "description": "Rule type",
                "type": "string",
                "enum": [
                  "PrivateProducts",
                  "TermsAndCondition"
                ],
                "x-ms-enum": {
                  "name": "ruleType",
                  "modelAsString": true
                }
              },
              "value": {
                "type": "array",
                "items": {
                  "description": "Gets or sets rule's value, not required for boolean rules",
                  "type": "string"
                }
              }
            }
          },
          "x-ms-identifiers": [
            "type"
          ]
        },
        "nextLink": {
          "description": "URL to get the next set of rules list results if there are any.",
          "type": "string"
        }
      }
    },
    "Rule": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Rule type",
          "type": "string",
          "enum": [
            "PrivateProducts",
            "TermsAndCondition"
          ],
          "x-ms-enum": {
            "name": "ruleType",
            "modelAsString": true
          }
        },
        "value": {
          "type": "array",
          "items": {
            "description": "Gets or sets rule's value, not required for boolean rules",
            "type": "string"
          }
        }
      }
    },
    "OfferListResponse": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "The privateStore offer data structure.",
            "type": "object",
            "properties": {
              "id": {
                "description": "The resource ID.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "readOnly": true,
                "description": "Metadata pertaining to creation and last modification of the resource",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource",
                    "type": "string",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "IdentityType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)"
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource",
                    "type": "string",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "IdentityType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "type": "object",
                "properties": {
                  "uniqueOfferId": {
                    "description": "Offers unique id",
                    "type": "string",
                    "readOnly": true
                  },
                  "offerDisplayName": {
                    "description": "It will be displayed prominently in the marketplace",
                    "type": "string",
                    "readOnly": true
                  },
                  "publisherDisplayName": {
                    "description": "Publisher name that will be displayed prominently in the marketplace",
                    "type": "string",
                    "readOnly": true
                  },
                  "eTag": {
                    "description": "Identifier for purposes of race condition",
                    "type": "string"
                  },
                  "privateStoreId": {
                    "readOnly": true,
                    "description": "Private store unique id",
                    "type": "string"
                  },
                  "createdAt": {
                    "readOnly": true,
                    "description": "Private store offer creation date",
                    "type": "string"
                  },
                  "modifiedAt": {
                    "readOnly": true,
                    "description": "Private store offer modification date",
                    "type": "string"
                  },
                  "specificPlanIdsLimitation": {
                    "description": "Plan ids limitation for this offer",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "updateSuppressedDueIdempotence": {
                    "description": "Indicating whether the offer was not updated to db (true = not updated). If the allow list is identical to the existed one in db, the offer would not be updated.",
                    "type": "boolean"
                  },
                  "iconFileUris": {
                    "description": "Icon File Uris",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "isStopSell": {
                    "description": "Indicating whether the offer is stop sell or not.",
                    "type": "boolean",
                    "readOnly": true
                  },
                  "plans": {
                    "description": "Offer plans",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "skuId": {
                          "description": "Identifier for this plan",
                          "type": "string",
                          "readOnly": true
                        },
                        "planId": {
                          "description": "Text identifier for this plan",
                          "type": "string",
                          "readOnly": true
                        },
                        "planDisplayName": {
                          "description": "Friendly name for the plan for display in the marketplace",
                          "type": "string",
                          "readOnly": true
                        },
                        "accessibility": {
                          "description": "Plan accessibility",
                          "type": "string",
                          "enum": [
                            "Unknown",
                            "Public",
                            "PrivateTenantOnLevel",
                            "PrivateSubscriptionOnLevel"
                          ],
                          "x-ms-enum": {
                            "name": "accessibility",
                            "modelAsString": true
                          }
                        },
                        "altStackReference": {
                          "description": "Alternative stack type",
                          "type": "string",
                          "readOnly": true
                        },
                        "stackType": {
                          "description": "Stack type (classic or arm)",
                          "type": "string",
                          "readOnly": true
                        },
                        "isStopSell": {
                          "description": "Indicating whether the plan is stop sell or not.",
                          "type": "boolean",
                          "readOnly": true
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "planId"
                    ]
                  }
                },
                "description": "The privateStore offer data structure.",
                "x-ms-client-flatten": true
              }
            }
          }
        },
        "nextLink": {
          "description": "URL to get the next set of offer list results if there are any.",
          "type": "string"
        }
      }
    },
    "CollectionOffersByAllContextsPayload": {
      "description": "Suggested subscription list",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Subscriptions ids list",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "subscriptionIds": {
              "description": "Subscription ids list",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "CollectionOffersByAllContextsProperties": {
      "description": "Suggested subscription list",
      "type": "object",
      "properties": {
        "subscriptionIds": {
          "description": "Subscription ids list",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CollectionOffersByContextList": {
      "description": "List of objects which describes offers per context. An empty GUID is a public context.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "description": "List of offers and plans that restricted to the context",
            "type": "object",
            "properties": {
              "context": {
                "description": "Offer's context, e.g. subscription ID, tenant ID.",
                "type": "string",
                "readOnly": true
              },
              "offers": {
                "description": "List of offers",
                "type": "object",
                "x-ms-client-flatten": true,
                "properties": {
                  "value": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "uniqueOfferId": {
                          "description": "Offers unique id",
                          "type": "string",
                          "readOnly": true
                        },
                        "offerDisplayName": {
                          "description": "It will be displayed prominently in the marketplace",
                          "type": "string",
                          "readOnly": true
                        },
                        "publisherDisplayName": {
                          "description": "Publisher name that will be displayed prominently in the marketplace",
                          "type": "string",
                          "readOnly": true
                        },
                        "eTag": {
                          "description": "Identifier for purposes of race condition",
                          "type": "string"
                        },
                        "privateStoreId": {
                          "readOnly": true,
                          "description": "Private store unique id",
                          "type": "string"
                        },
                        "createdAt": {
                          "readOnly": true,
                          "description": "Private store offer creation date",
                          "type": "string"
                        },
                        "modifiedAt": {
                          "readOnly": true,
                          "description": "Private store offer modification date",
                          "type": "string"
                        },
                        "specificPlanIdsLimitation": {
                          "description": "Plan ids limitation for this offer",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "updateSuppressedDueIdempotence": {
                          "description": "Indicating whether the offer was not updated to db (true = not updated). If the allow list is identical to the existed one in db, the offer would not be updated.",
                          "type": "boolean"
                        },
                        "iconFileUris": {
                          "description": "Icon File Uris",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "isStopSell": {
                          "description": "Indicating whether the offer is stop sell or not.",
                          "type": "boolean",
                          "readOnly": true
                        },
                        "plans": {
                          "description": "Offer plans",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "skuId": {
                                "description": "Identifier for this plan",
                                "type": "string",
                                "readOnly": true
                              },
                              "planId": {
                                "description": "Text identifier for this plan",
                                "type": "string",
                                "readOnly": true
                              },
                              "planDisplayName": {
                                "description": "Friendly name for the plan for display in the marketplace",
                                "type": "string",
                                "readOnly": true
                              },
                              "accessibility": {
                                "description": "Plan accessibility",
                                "type": "string",
                                "enum": [
                                  "Unknown",
                                  "Public",
                                  "PrivateTenantOnLevel",
                                  "PrivateSubscriptionOnLevel"
                                ],
                                "x-ms-enum": {
                                  "name": "accessibility",
                                  "modelAsString": true
                                }
                              },
                              "altStackReference": {
                                "description": "Alternative stack type",
                                "type": "string",
                                "readOnly": true
                              },
                              "stackType": {
                                "description": "Stack type (classic or arm)",
                                "type": "string",
                                "readOnly": true
                              },
                              "isStopSell": {
                                "description": "Indicating whether the plan is stop sell or not.",
                                "type": "boolean",
                                "readOnly": true
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "planId"
                          ]
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "uniqueOfferId"
                    ]
                  }
                }
              }
            }
          },
          "x-ms-identifiers": [
            "context"
          ]
        },
        "nextLink": {
          "description": "URL to get the next set of offer list per context results if there are any.",
          "type": "string"
        }
      }
    },
    "CollectionOffersByContext": {
      "description": "List of offers and plans that restricted to the context",
      "type": "object",
      "properties": {
        "context": {
          "description": "Offer's context, e.g. subscription ID, tenant ID.",
          "type": "string",
          "readOnly": true
        },
        "offers": {
          "description": "List of offers",
          "type": "object",
          "x-ms-client-flatten": true,
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "uniqueOfferId": {
                    "description": "Offers unique id",
                    "type": "string",
                    "readOnly": true
                  },
                  "offerDisplayName": {
                    "description": "It will be displayed prominently in the marketplace",
                    "type": "string",
                    "readOnly": true
                  },
                  "publisherDisplayName": {
                    "description": "Publisher name that will be displayed prominently in the marketplace",
                    "type": "string",
                    "readOnly": true
                  },
                  "eTag": {
                    "description": "Identifier for purposes of race condition",
                    "type": "string"
                  },
                  "privateStoreId": {
                    "readOnly": true,
                    "description": "Private store unique id",
                    "type": "string"
                  },
                  "createdAt": {
                    "readOnly": true,
                    "description": "Private store offer creation date",
                    "type": "string"
                  },
                  "modifiedAt": {
                    "readOnly": true,
                    "description": "Private store offer modification date",
                    "type": "string"
                  },
                  "specificPlanIdsLimitation": {
                    "description": "Plan ids limitation for this offer",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "updateSuppressedDueIdempotence": {
                    "description": "Indicating whether the offer was not updated to db (true = not updated). If the allow list is identical to the existed one in db, the offer would not be updated.",
                    "type": "boolean"
                  },
                  "iconFileUris": {
                    "description": "Icon File Uris",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "isStopSell": {
                    "description": "Indicating whether the offer is stop sell or not.",
                    "type": "boolean",
                    "readOnly": true
                  },
                  "plans": {
                    "description": "Offer plans",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "skuId": {
                          "description": "Identifier for this plan",
                          "type": "string",
                          "readOnly": true
                        },
                        "planId": {
                          "description": "Text identifier for this plan",
                          "type": "string",
                          "readOnly": true
                        },
                        "planDisplayName": {
                          "description": "Friendly name for the plan for display in the marketplace",
                          "type": "string",
                          "readOnly": true
                        },
                        "accessibility": {
                          "description": "Plan accessibility",
                          "type": "string",
                          "enum": [
                            "Unknown",
                            "Public",
                            "PrivateTenantOnLevel",
                            "PrivateSubscriptionOnLevel"
                          ],
                          "x-ms-enum": {
                            "name": "accessibility",
                            "modelAsString": true
                          }
                        },
                        "altStackReference": {
                          "description": "Alternative stack type",
                          "type": "string",
                          "readOnly": true
                        },
                        "stackType": {
                          "description": "Stack type (classic or arm)",
                          "type": "string",
                          "readOnly": true
                        },
                        "isStopSell": {
                          "description": "Indicating whether the plan is stop sell or not.",
                          "type": "boolean",
                          "readOnly": true
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "planId"
                    ]
                  }
                }
              },
              "x-ms-identifiers": [
                "uniqueOfferId"
              ]
            }
          }
        }
      }
    },
    "QueryOffers": {
      "description": "List of offers",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "uniqueOfferId": {
                "description": "Offers unique id",
                "type": "string",
                "readOnly": true
              },
              "offerDisplayName": {
                "description": "It will be displayed prominently in the marketplace",
                "type": "string",
                "readOnly": true
              },
              "publisherDisplayName": {
                "description": "Publisher name that will be displayed prominently in the marketplace",
                "type": "string",
                "readOnly": true
              },
              "eTag": {
                "description": "Identifier for purposes of race condition",
                "type": "string"
              },
              "privateStoreId": {
                "readOnly": true,
                "description": "Private store unique id",
                "type": "string"
              },
              "createdAt": {
                "readOnly": true,
                "description": "Private store offer creation date",
                "type": "string"
              },
              "modifiedAt": {
                "readOnly": true,
                "description": "Private store offer modification date",
                "type": "string"
              },
              "specificPlanIdsLimitation": {
                "description": "Plan ids limitation for this offer",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "updateSuppressedDueIdempotence": {
                "description": "Indicating whether the offer was not updated to db (true = not updated). If the allow list is identical to the existed one in db, the offer would not be updated.",
                "type": "boolean"
              },
              "iconFileUris": {
                "description": "Icon File Uris",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "isStopSell": {
                "description": "Indicating whether the offer is stop sell or not.",
                "type": "boolean",
                "readOnly": true
              },
              "plans": {
                "description": "Offer plans",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "skuId": {
                      "description": "Identifier for this plan",
                      "type": "string",
                      "readOnly": true
                    },
                    "planId": {
                      "description": "Text identifier for this plan",
                      "type": "string",
                      "readOnly": true
                    },
                    "planDisplayName": {
                      "description": "Friendly name for the plan for display in the marketplace",
                      "type": "string",
                      "readOnly": true
                    },
                    "accessibility": {
                      "description": "Plan accessibility",
                      "type": "string",
                      "enum": [
                        "Unknown",
                        "Public",
                        "PrivateTenantOnLevel",
                        "PrivateSubscriptionOnLevel"
                      ],
                      "x-ms-enum": {
                        "name": "accessibility",
                        "modelAsString": true
                      }
                    },
                    "altStackReference": {
                      "description": "Alternative stack type",
                      "type": "string",
                      "readOnly": true
                    },
                    "stackType": {
                      "description": "Stack type (classic or arm)",
                      "type": "string",
                      "readOnly": true
                    },
                    "isStopSell": {
                      "description": "Indicating whether the plan is stop sell or not.",
                      "type": "boolean",
                      "readOnly": true
                    }
                  }
                },
                "x-ms-identifiers": [
                  "planId"
                ]
              }
            }
          },
          "x-ms-identifiers": [
            "uniqueOfferId"
          ]
        },
        "nextLink": {
          "description": "URL to get the next set of PrivateStore list results if there are any.",
          "type": "string"
        }
      }
    },
    "Offer": {
      "description": "The privateStore offer data structure.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "readOnly": true,
          "description": "Metadata pertaining to creation and last modification of the resource",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "description": "The type of identity that created the resource",
              "type": "string",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "IdentityType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)"
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource",
              "type": "string",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "IdentityType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "type": "object",
          "properties": {
            "uniqueOfferId": {
              "description": "Offers unique id",
              "type": "string",
              "readOnly": true
            },
            "offerDisplayName": {
              "description": "It will be displayed prominently in the marketplace",
              "type": "string",
              "readOnly": true
            },
            "publisherDisplayName": {
              "description": "Publisher name that will be displayed prominently in the marketplace",
              "type": "string",
              "readOnly": true
            },
            "eTag": {
              "description": "Identifier for purposes of race condition",
              "type": "string"
            },
            "privateStoreId": {
              "readOnly": true,
              "description": "Private store unique id",
              "type": "string"
            },
            "createdAt": {
              "readOnly": true,
              "description": "Private store offer creation date",
              "type": "string"
            },
            "modifiedAt": {
              "readOnly": true,
              "description": "Private store offer modification date",
              "type": "string"
            },
            "specificPlanIdsLimitation": {
              "description": "Plan ids limitation for this offer",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "updateSuppressedDueIdempotence": {
              "description": "Indicating whether the offer was not updated to db (true = not updated). If the allow list is identical to the existed one in db, the offer would not be updated.",
              "type": "boolean"
            },
            "iconFileUris": {
              "description": "Icon File Uris",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "isStopSell": {
              "description": "Indicating whether the offer is stop sell or not.",
              "type": "boolean",
              "readOnly": true
            },
            "plans": {
              "description": "Offer plans",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "skuId": {
                    "description": "Identifier for this plan",
                    "type": "string",
                    "readOnly": true
                  },
                  "planId": {
                    "description": "Text identifier for this plan",
                    "type": "string",
                    "readOnly": true
                  },
                  "planDisplayName": {
                    "description": "Friendly name for the plan for display in the marketplace",
                    "type": "string",
                    "readOnly": true
                  },
                  "accessibility": {
                    "description": "Plan accessibility",
                    "type": "string",
                    "enum": [
                      "Unknown",
                      "Public",
                      "PrivateTenantOnLevel",
                      "PrivateSubscriptionOnLevel"
                    ],
                    "x-ms-enum": {
                      "name": "accessibility",
                      "modelAsString": true
                    }
                  },
                  "altStackReference": {
                    "description": "Alternative stack type",
                    "type": "string",
                    "readOnly": true
                  },
                  "stackType": {
                    "description": "Stack type (classic or arm)",
                    "type": "string",
                    "readOnly": true
                  },
                  "isStopSell": {
                    "description": "Indicating whether the plan is stop sell or not.",
                    "type": "boolean",
                    "readOnly": true
                  }
                }
              },
              "x-ms-identifiers": [
                "planId"
              ]
            }
          },
          "description": "The privateStore offer data structure.",
          "x-ms-client-flatten": true
        }
      }
    },
    "OfferProperties": {
      "type": "object",
      "properties": {
        "uniqueOfferId": {
          "description": "Offers unique id",
          "type": "string",
          "readOnly": true
        },
        "offerDisplayName": {
          "description": "It will be displayed prominently in the marketplace",
          "type": "string",
          "readOnly": true
        },
        "publisherDisplayName": {
          "description": "Publisher name that will be displayed prominently in the marketplace",
          "type": "string",
          "readOnly": true
        },
        "eTag": {
          "description": "Identifier for purposes of race condition",
          "type": "string"
        },
        "privateStoreId": {
          "readOnly": true,
          "description": "Private store unique id",
          "type": "string"
        },
        "createdAt": {
          "readOnly": true,
          "description": "Private store offer creation date",
          "type": "string"
        },
        "modifiedAt": {
          "readOnly": true,
          "description": "Private store offer modification date",
          "type": "string"
        },
        "specificPlanIdsLimitation": {
          "description": "Plan ids limitation for this offer",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "updateSuppressedDueIdempotence": {
          "description": "Indicating whether the offer was not updated to db (true = not updated). If the allow list is identical to the existed one in db, the offer would not be updated.",
          "type": "boolean"
        },
        "iconFileUris": {
          "description": "Icon File Uris",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "isStopSell": {
          "description": "Indicating whether the offer is stop sell or not.",
          "type": "boolean",
          "readOnly": true
        },
        "plans": {
          "description": "Offer plans",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "skuId": {
                "description": "Identifier for this plan",
                "type": "string",
                "readOnly": true
              },
              "planId": {
                "description": "Text identifier for this plan",
                "type": "string",
                "readOnly": true
              },
              "planDisplayName": {
                "description": "Friendly name for the plan for display in the marketplace",
                "type": "string",
                "readOnly": true
              },
              "accessibility": {
                "description": "Plan accessibility",
                "type": "string",
                "enum": [
                  "Unknown",
                  "Public",
                  "PrivateTenantOnLevel",
                  "PrivateSubscriptionOnLevel"
                ],
                "x-ms-enum": {
                  "name": "accessibility",
                  "modelAsString": true
                }
              },
              "altStackReference": {
                "description": "Alternative stack type",
                "type": "string",
                "readOnly": true
              },
              "stackType": {
                "description": "Stack type (classic or arm)",
                "type": "string",
                "readOnly": true
              },
              "isStopSell": {
                "description": "Indicating whether the plan is stop sell or not.",
                "type": "boolean",
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": [
            "planId"
          ]
        }
      }
    },
    "Plan": {
      "type": "object",
      "properties": {
        "skuId": {
          "description": "Identifier for this plan",
          "type": "string",
          "readOnly": true
        },
        "planId": {
          "description": "Text identifier for this plan",
          "type": "string",
          "readOnly": true
        },
        "planDisplayName": {
          "description": "Friendly name for the plan for display in the marketplace",
          "type": "string",
          "readOnly": true
        },
        "accessibility": {
          "description": "Plan accessibility",
          "type": "string",
          "enum": [
            "Unknown",
            "Public",
            "PrivateTenantOnLevel",
            "PrivateSubscriptionOnLevel"
          ],
          "x-ms-enum": {
            "name": "accessibility",
            "modelAsString": true
          }
        },
        "altStackReference": {
          "description": "Alternative stack type",
          "type": "string",
          "readOnly": true
        },
        "stackType": {
          "description": "Stack type (classic or arm)",
          "type": "string",
          "readOnly": true
        },
        "isStopSell": {
          "description": "Indicating whether the plan is stop sell or not.",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "AdminRequestApprovalsList": {
      "description": "List of admin request approval resources",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "Admin request approval resource.",
            "type": "object",
            "properties": {
              "id": {
                "description": "The resource ID.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "readOnly": true,
                "description": "Metadata pertaining to creation and last modification of the resource",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource",
                    "type": "string",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "IdentityType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)"
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource",
                    "type": "string",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "IdentityType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The privateStore admin Approval request data structure.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "offerId": {
                    "description": "Gets or sets offer Id",
                    "type": "string"
                  },
                  "displayName": {
                    "description": "Gets display name",
                    "type": "string",
                    "readOnly": true
                  },
                  "publisherId": {
                    "description": "Gets or sets publisher Id",
                    "type": "string"
                  },
                  "adminAction": {
                    "description": "Gets or sets admin action",
                    "type": "string",
                    "enum": [
                      "Approved",
                      "Rejected"
                    ],
                    "x-ms-enum": {
                      "name": "adminAction",
                      "modelAsString": true
                    }
                  },
                  "approvedPlans": {
                    "description": "Gets or sets Approved plans ids, empty in case of rejected",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "comment": {
                    "description": "Gets or sets admin comment",
                    "type": "string"
                  },
                  "administrator": {
                    "description": "Gets or sets admin details",
                    "type": "string"
                  },
                  "plans": {
                    "description": "Gets list of plans with requesters details",
                    "type": "array",
                    "readOnly": true,
                    "items": {
                      "description": "Plan with requesters details",
                      "type": "object",
                      "properties": {
                        "planId": {
                          "description": "Gets the plan id",
                          "type": "string",
                          "readOnly": true
                        },
                        "planDisplayName": {
                          "description": "Gets the plan display name",
                          "type": "string",
                          "readOnly": true
                        },
                        "requesters": {
                          "description": "Gets requesters details list",
                          "type": "array",
                          "readOnly": true,
                          "items": {
                            "description": "user request details",
                            "type": "object",
                            "properties": {
                              "user": {
                                "description": "Gets user id",
                                "type": "string",
                                "readOnly": true
                              },
                              "date": {
                                "description": "Gets request date",
                                "type": "string",
                                "readOnly": true
                              },
                              "justification": {
                                "description": "Gets justification",
                                "type": "string",
                                "readOnly": true
                              },
                              "subscriptionId": {
                                "description": "Gets the subscription id that the user is requesting to add the plan to",
                                "type": "string"
                              },
                              "subscriptionName": {
                                "description": "Gets the subscription name that the user is requesting to add the plan to",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "user"
                          ]
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "planId"
                    ]
                  },
                  "collectionIds": {
                    "description": "Gets or sets list of associated collection ids",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "icon": {
                    "description": "The offer icon url.",
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "URL to get the next set of notifications list results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AdminRequestApprovalsResource": {
      "description": "Admin request approval resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "readOnly": true,
          "description": "Metadata pertaining to creation and last modification of the resource",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "description": "The type of identity that created the resource",
              "type": "string",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "IdentityType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)"
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource",
              "type": "string",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "IdentityType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The privateStore admin Approval request data structure.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "offerId": {
              "description": "Gets or sets offer Id",
              "type": "string"
            },
            "displayName": {
              "description": "Gets display name",
              "type": "string",
              "readOnly": true
            },
            "publisherId": {
              "description": "Gets or sets publisher Id",
              "type": "string"
            },
            "adminAction": {
              "description": "Gets or sets admin action",
              "type": "string",
              "enum": [
                "Approved",
                "Rejected"
              ],
              "x-ms-enum": {
                "name": "adminAction",
                "modelAsString": true
              }
            },
            "approvedPlans": {
              "description": "Gets or sets Approved plans ids, empty in case of rejected",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "comment": {
              "description": "Gets or sets admin comment",
              "type": "string"
            },
            "administrator": {
              "description": "Gets or sets admin details",
              "type": "string"
            },
            "plans": {
              "description": "Gets list of plans with requesters details",
              "type": "array",
              "readOnly": true,
              "items": {
                "description": "Plan with requesters details",
                "type": "object",
                "properties": {
                  "planId": {
                    "description": "Gets the plan id",
                    "type": "string",
                    "readOnly": true
                  },
                  "planDisplayName": {
                    "description": "Gets the plan display name",
                    "type": "string",
                    "readOnly": true
                  },
                  "requesters": {
                    "description": "Gets requesters details list",
                    "type": "array",
                    "readOnly": true,
                    "items": {
                      "description": "user request details",
                      "type": "object",
                      "properties": {
                        "user": {
                          "description": "Gets user id",
                          "type": "string",
                          "readOnly": true
                        },
                        "date": {
                          "description": "Gets request date",
                          "type": "string",
                          "readOnly": true
                        },
                        "justification": {
                          "description": "Gets justification",
                          "type": "string",
                          "readOnly": true
                        },
                        "subscriptionId": {
                          "description": "Gets the subscription id that the user is requesting to add the plan to",
                          "type": "string"
                        },
                        "subscriptionName": {
                          "description": "Gets the subscription name that the user is requesting to add the plan to",
                          "type": "string"
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "user"
                    ]
                  }
                }
              },
              "x-ms-identifiers": [
                "planId"
              ]
            },
            "collectionIds": {
              "description": "Gets or sets list of associated collection ids",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "icon": {
              "description": "The offer icon url.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "AdminRequestApprovalProperties": {
      "description": "Admin approval request resource properties",
      "type": "object",
      "properties": {
        "offerId": {
          "description": "Gets or sets offer Id",
          "type": "string"
        },
        "displayName": {
          "description": "Gets display name",
          "type": "string",
          "readOnly": true
        },
        "publisherId": {
          "description": "Gets or sets publisher Id",
          "type": "string"
        },
        "adminAction": {
          "description": "Gets or sets admin action",
          "type": "string",
          "enum": [
            "Approved",
            "Rejected"
          ],
          "x-ms-enum": {
            "name": "adminAction",
            "modelAsString": true
          }
        },
        "approvedPlans": {
          "description": "Gets or sets Approved plans ids, empty in case of rejected",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "comment": {
          "description": "Gets or sets admin comment",
          "type": "string"
        },
        "administrator": {
          "description": "Gets or sets admin details",
          "type": "string"
        },
        "plans": {
          "description": "Gets list of plans with requesters details",
          "type": "array",
          "readOnly": true,
          "items": {
            "description": "Plan with requesters details",
            "type": "object",
            "properties": {
              "planId": {
                "description": "Gets the plan id",
                "type": "string",
                "readOnly": true
              },
              "planDisplayName": {
                "description": "Gets the plan display name",
                "type": "string",
                "readOnly": true
              },
              "requesters": {
                "description": "Gets requesters details list",
                "type": "array",
                "readOnly": true,
                "items": {
                  "description": "user request details",
                  "type": "object",
                  "properties": {
                    "user": {
                      "description": "Gets user id",
                      "type": "string",
                      "readOnly": true
                    },
                    "date": {
                      "description": "Gets request date",
                      "type": "string",
                      "readOnly": true
                    },
                    "justification": {
                      "description": "Gets justification",
                      "type": "string",
                      "readOnly": true
                    },
                    "subscriptionId": {
                      "description": "Gets the subscription id that the user is requesting to add the plan to",
                      "type": "string"
                    },
                    "subscriptionName": {
                      "description": "Gets the subscription name that the user is requesting to add the plan to",
                      "type": "string"
                    }
                  }
                },
                "x-ms-identifiers": [
                  "user"
                ]
              }
            }
          },
          "x-ms-identifiers": [
            "planId"
          ]
        },
        "collectionIds": {
          "description": "Gets or sets list of associated collection ids",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "icon": {
          "description": "The offer icon url.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PlanRequesterDetails": {
      "description": "Plan with requesters details",
      "type": "object",
      "properties": {
        "planId": {
          "description": "Gets the plan id",
          "type": "string",
          "readOnly": true
        },
        "planDisplayName": {
          "description": "Gets the plan display name",
          "type": "string",
          "readOnly": true
        },
        "requesters": {
          "description": "Gets requesters details list",
          "type": "array",
          "readOnly": true,
          "items": {
            "description": "user request details",
            "type": "object",
            "properties": {
              "user": {
                "description": "Gets user id",
                "type": "string",
                "readOnly": true
              },
              "date": {
                "description": "Gets request date",
                "type": "string",
                "readOnly": true
              },
              "justification": {
                "description": "Gets justification",
                "type": "string",
                "readOnly": true
              },
              "subscriptionId": {
                "description": "Gets the subscription id that the user is requesting to add the plan to",
                "type": "string"
              },
              "subscriptionName": {
                "description": "Gets the subscription name that the user is requesting to add the plan to",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "user"
          ]
        }
      }
    },
    "MultiContextAndPlansPayload": {
      "description": "Payload object for upsert offer with multiple context and plans.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Object describes multiple context and plans.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "offerId": {
              "description": "The offer ID which contains the plans.",
              "type": "string"
            },
            "eTag": {
              "description": "The offer's eTag.",
              "type": "string"
            },
            "plansContext": {
              "type": "array",
              "items": {
                "description": "Object of plans per context.",
                "type": "object",
                "properties": {
                  "context": {
                    "description": "Plan's context, e.g. subscription ID, tenant ID.",
                    "type": "string"
                  },
                  "planIds": {
                    "description": "List of plan IDs.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "x-ms-identifiers": [
                "context"
              ]
            }
          }
        }
      }
    },
    "MultiContextAndPlansProperties": {
      "description": "Object describes multiple context and plans.",
      "type": "object",
      "properties": {
        "offerId": {
          "description": "The offer ID which contains the plans.",
          "type": "string"
        },
        "eTag": {
          "description": "The offer's eTag.",
          "type": "string"
        },
        "plansContext": {
          "type": "array",
          "items": {
            "description": "Object of plans per context.",
            "type": "object",
            "properties": {
              "context": {
                "description": "Plan's context, e.g. subscription ID, tenant ID.",
                "type": "string"
              },
              "planIds": {
                "description": "List of plan IDs.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "x-ms-identifiers": [
            "context"
          ]
        }
      }
    },
    "ContextAndPlansDetails": {
      "description": "Object of plans per context.",
      "type": "object",
      "properties": {
        "context": {
          "description": "Plan's context, e.g. subscription ID, tenant ID.",
          "type": "string"
        },
        "planIds": {
          "description": "List of plan IDs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UserRequestDetails": {
      "description": "user request details",
      "type": "object",
      "properties": {
        "user": {
          "description": "Gets user id",
          "type": "string",
          "readOnly": true
        },
        "date": {
          "description": "Gets request date",
          "type": "string",
          "readOnly": true
        },
        "justification": {
          "description": "Gets justification",
          "type": "string",
          "readOnly": true
        },
        "subscriptionId": {
          "description": "Gets the subscription id that the user is requesting to add the plan to",
          "type": "string"
        },
        "subscriptionName": {
          "description": "Gets the subscription name that the user is requesting to add the plan to",
          "type": "string"
        }
      }
    },
    "RequestApprovalsList": {
      "description": "List of admin request approval resources",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "Request approval resource.",
            "type": "object",
            "properties": {
              "id": {
                "description": "The resource ID.",
                "type": "string",
                "readOnly": true
              },
              "name": {
                "description": "The name of the resource.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "The type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "systemData": {
                "readOnly": true,
                "description": "Metadata pertaining to creation and last modification of the resource",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "description": "The type of identity that created the resource",
                    "type": "string",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "IdentityType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)"
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "description": "The type of identity that last modified the resource",
                    "type": "string",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "IdentityType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The privateStore approval request data structure.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "offerId": {
                    "description": "Gets or sets unique offer id.",
                    "type": "string"
                  },
                  "offerDisplayName": {
                    "description": "Gets offer display name",
                    "type": "string",
                    "readOnly": true
                  },
                  "publisherId": {
                    "description": "The offer's publisher id",
                    "type": "string"
                  },
                  "plansDetails": {
                    "description": "Gets or sets the plans details",
                    "type": "array",
                    "items": {
                      "description": "Return plan with request details",
                      "type": "object",
                      "properties": {
                        "planId": {
                          "description": "Gets or sets Plan Id ",
                          "type": "string"
                        },
                        "status": {
                          "description": "Gets the plan status",
                          "type": "string",
                          "readOnly": true,
                          "enum": [
                            "Pending",
                            "Rejected",
                            "Approved",
                            "None"
                          ],
                          "x-ms-enum": {
                            "name": "status",
                            "modelAsString": true
                          }
                        },
                        "requestDate": {
                          "description": "Gets request date",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "justification": {
                          "description": "Gets or sets user's justification for the plan's request",
                          "type": "string"
                        },
                        "subscriptionId": {
                          "description": "Gets or sets the subscription id that the user is requesting to add the plan to",
                          "type": "string"
                        },
                        "subscriptionName": {
                          "description": "Gets or sets the subscription name that the user is requesting to add the plan to",
                          "type": "string"
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "planId"
                    ]
                  },
                  "isClosed": {
                    "description": "Gets a value indicating whether the request is closed",
                    "type": "boolean",
                    "readOnly": true
                  },
                  "messageCode": {
                    "description": "Gets or sets the request approval message code",
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "URL to get the next set of notifications list results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "RequestApprovalResource": {
      "description": "Request approval resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "readOnly": true,
          "description": "Metadata pertaining to creation and last modification of the resource",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "description": "The type of identity that created the resource",
              "type": "string",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "IdentityType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)"
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource",
              "type": "string",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "IdentityType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The privateStore approval request data structure.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "offerId": {
              "description": "Gets or sets unique offer id.",
              "type": "string"
            },
            "offerDisplayName": {
              "description": "Gets offer display name",
              "type": "string",
              "readOnly": true
            },
            "publisherId": {
              "description": "The offer's publisher id",
              "type": "string"
            },
            "plansDetails": {
              "description": "Gets or sets the plans details",
              "type": "array",
              "items": {
                "description": "Return plan with request details",
                "type": "object",
                "properties": {
                  "planId": {
                    "description": "Gets or sets Plan Id ",
                    "type": "string"
                  },
                  "status": {
                    "description": "Gets the plan status",
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                      "Pending",
                      "Rejected",
                      "Approved",
                      "None"
                    ],
                    "x-ms-enum": {
                      "name": "status",
                      "modelAsString": true
                    }
                  },
                  "requestDate": {
                    "description": "Gets request date",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "justification": {
                    "description": "Gets or sets user's justification for the plan's request",
                    "type": "string"
                  },
                  "subscriptionId": {
                    "description": "Gets or sets the subscription id that the user is requesting to add the plan to",
                    "type": "string"
                  },
                  "subscriptionName": {
                    "description": "Gets or sets the subscription name that the user is requesting to add the plan to",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": [
                "planId"
              ]
            },
            "isClosed": {
              "description": "Gets a value indicating whether the request is closed",
              "type": "boolean",
              "readOnly": true
            },
            "messageCode": {
              "description": "Gets or sets the request approval message code",
              "type": "integer",
              "format": "int64"
            }
          }
        }
      }
    },
    "RequestApprovalProperties": {
      "description": "Approval request resource properties",
      "type": "object",
      "properties": {
        "offerId": {
          "description": "Gets or sets unique offer id.",
          "type": "string"
        },
        "offerDisplayName": {
          "description": "Gets offer display name",
          "type": "string",
          "readOnly": true
        },
        "publisherId": {
          "description": "The offer's publisher id",
          "type": "string"
        },
        "plansDetails": {
          "description": "Gets or sets the plans details",
          "type": "array",
          "items": {
            "description": "Return plan with request details",
            "type": "object",
            "properties": {
              "planId": {
                "description": "Gets or sets Plan Id ",
                "type": "string"
              },
              "status": {
                "description": "Gets the plan status",
                "type": "string",
                "readOnly": true,
                "enum": [
                  "Pending",
                  "Rejected",
                  "Approved",
                  "None"
                ],
                "x-ms-enum": {
                  "name": "status",
                  "modelAsString": true
                }
              },
              "requestDate": {
                "description": "Gets request date",
                "format": "date-time",
                "readOnly": true
              },
              "justification": {
                "description": "Gets or sets user's justification for the plan's request",
                "type": "string"
              },
              "subscriptionId": {
                "description": "Gets or sets the subscription id that the user is requesting to add the plan to",
                "type": "string"
              },
              "subscriptionName": {
                "description": "Gets or sets the subscription name that the user is requesting to add the plan to",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "planId"
          ]
        },
        "isClosed": {
          "description": "Gets a value indicating whether the request is closed",
          "type": "boolean",
          "readOnly": true
        },
        "messageCode": {
          "description": "Gets or sets the request approval message code",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "planDetails": {
      "description": "Return plan with request details",
      "type": "object",
      "properties": {
        "planId": {
          "description": "Gets or sets Plan Id ",
          "type": "string"
        },
        "status": {
          "description": "Gets the plan status",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Pending",
            "Rejected",
            "Approved",
            "None"
          ],
          "x-ms-enum": {
            "name": "status",
            "modelAsString": true
          }
        },
        "requestDate": {
          "description": "Gets request date",
          "format": "date-time",
          "readOnly": true
        },
        "justification": {
          "description": "Gets or sets user's justification for the plan's request",
          "type": "string"
        },
        "subscriptionId": {
          "description": "Gets or sets the subscription id that the user is requesting to add the plan to",
          "type": "string"
        },
        "subscriptionName": {
          "description": "Gets or sets the subscription name that the user is requesting to add the plan to",
          "type": "string"
        }
      }
    },
    "QueryRequestApproval": {
      "description": "Gets the request plans with indication on each plan whether is approved by the admin, has pending request or not requested yet",
      "type": "object",
      "properties": {
        "uniqueOfferId": {
          "description": "Gets or sets unique offer id.",
          "type": "string"
        },
        "plansDetails": {
          "description": "Gets or sets the plans details",
          "type": "object",
          "additionalProperties": {
            "description": "Return plan with request details",
            "type": "object",
            "properties": {
              "planId": {
                "description": "Gets or sets Plan Id ",
                "type": "string"
              },
              "status": {
                "description": "Gets the plan status",
                "type": "string",
                "readOnly": true,
                "enum": [
                  "Pending",
                  "Rejected",
                  "Approved",
                  "None"
                ],
                "x-ms-enum": {
                  "name": "status",
                  "modelAsString": true
                }
              },
              "requestDate": {
                "description": "Gets request date",
                "format": "date-time",
                "readOnly": true
              },
              "justification": {
                "description": "Gets or sets user's justification for the plan's request",
                "type": "string"
              },
              "subscriptionId": {
                "description": "Gets or sets the subscription id that the user is requesting to add the plan to",
                "type": "string"
              },
              "subscriptionName": {
                "description": "Gets or sets the subscription name that the user is requesting to add the plan to",
                "type": "string"
              }
            }
          }
        },
        "etag": {
          "description": "Gets or sets e-tag field ",
          "type": "string"
        },
        "messageCode": {
          "description": "Gets or sets the notification message id",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "QueryRequestApprovalProperties": {
      "description": "The details to get the request plans statuses",
      "type": "object",
      "properties": {
        "properties": {
          "description": "The details to get the request plans statuses",
          "type": "object",
          "properties": {
            "publisherId": {
              "description": "The offer's publisher id",
              "type": "string"
            },
            "planIds": {
              "description": "Current plans list",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "subscriptionId": {
              "description": "Gets or sets the subscription id",
              "type": "string"
            }
          }
        }
      }
    },
    "RequestDetails": {
      "description": "Request details needed to get the plans statuses",
      "type": "object",
      "properties": {
        "publisherId": {
          "description": "The offer's publisher id",
          "type": "string"
        },
        "planIds": {
          "description": "Current plans list",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subscriptionId": {
          "description": "Gets or sets the subscription id",
          "type": "string"
        }
      }
    },
    "NewPlansNotificationsList": {
      "description": "List of all new plans notifications for public offers",
      "type": "object",
      "properties": {
        "newPlansNotifications": {
          "type": "array",
          "items": {
            "description": "New plans notification details",
            "type": "object",
            "properties": {
              "offerId": {
                "description": "Gets offer id",
                "type": "string"
              },
              "displayName": {
                "description": "Gets offer display name",
                "type": "string"
              },
              "isFuturePlansEnabled": {
                "description": "Gets a value indicating whether future plans is enabled.",
                "type": "boolean"
              },
              "messageCode": {
                "description": "Gets or sets the notification message id",
                "type": "integer",
                "format": "int64"
              },
              "icon": {
                "description": "Gets or sets the icon url",
                "type": "string"
              },
              "plans": {
                "description": "Gets or sets removed plans notifications",
                "type": "array",
                "items": {
                  "description": "Plan notification details",
                  "type": "object",
                  "properties": {
                    "planId": {
                      "description": "Gets or sets the plan id",
                      "type": "string"
                    },
                    "planDisplayName": {
                      "description": "Gets or sets the plan display name",
                      "type": "string"
                    }
                  }
                },
                "x-ms-identifiers": [
                  "planId"
                ]
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "QueryUserOffersProperties": {
      "description": "Query user's offers properties",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Query user's offers details",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "offerIds": {
              "description": "List of offer IDs",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "subscriptionIds": {
              "description": "List of subscription IDs",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "QueryUserOffersDetails": {
      "description": "List of offers IDs and list of user's subscriptions IDs to query the user's approved offers",
      "type": "object",
      "properties": {
        "offerIds": {
          "description": "List of offer IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subscriptionIds": {
          "description": "List of subscription IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SubscriptionsContextList": {
      "description": "List of subscription Ids in the private store",
      "type": "object",
      "properties": {
        "subscriptionsIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "QueryUserRulesProperties": {
      "description": "Query user's rules properties",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Query user's rules details",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "subscriptionIds": {
              "description": "List of subscription IDs",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "QueryUserRulesDetails": {
      "description": "List of subscriptions IDs to query the user's rules",
      "type": "object",
      "properties": {
        "subscriptionIds": {
          "description": "List of subscription IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PrivateStoreNotificationsState": {
      "description": "Get private store notifications state",
      "type": "object",
      "properties": {
        "stopSellNotifications": {
          "type": "array",
          "items": {
            "description": "Stop sell notification details",
            "type": "object",
            "properties": {
              "offerId": {
                "description": "Gets offer id",
                "type": "string"
              },
              "displayName": {
                "description": "Gets offer display name",
                "type": "string"
              },
              "isEntire": {
                "description": "Gets a value indicating whether entire offer is in stop sell or only few of its plans",
                "type": "boolean"
              },
              "messageCode": {
                "description": "Gets or sets the notification message id",
                "type": "integer",
                "format": "int64"
              },
              "icon": {
                "description": "Gets or sets the icon url",
                "type": "string"
              },
              "plans": {
                "description": "Gets or sets removed plans notifications",
                "type": "array",
                "items": {
                  "description": "Plan notification details",
                  "type": "object",
                  "properties": {
                    "planId": {
                      "description": "Gets or sets the plan id",
                      "type": "string"
                    },
                    "planDisplayName": {
                      "description": "Gets or sets the plan display name",
                      "type": "string"
                    }
                  }
                },
                "x-ms-identifiers": [
                  "planId"
                ]
              }
            }
          },
          "x-ms-identifiers": []
        },
        "newNotifications": {
          "type": "array",
          "items": {
            "description": "New plans notification details",
            "type": "object",
            "properties": {
              "offerId": {
                "description": "Gets offer id",
                "type": "string"
              },
              "displayName": {
                "description": "Gets offer display name",
                "type": "string"
              },
              "isFuturePlansEnabled": {
                "description": "Gets a value indicating whether future plans is enabled.",
                "type": "boolean"
              },
              "messageCode": {
                "description": "Gets or sets the notification message id",
                "type": "integer",
                "format": "int64"
              },
              "icon": {
                "description": "Gets or sets the icon url",
                "type": "string"
              },
              "plans": {
                "description": "Gets or sets removed plans notifications",
                "type": "array",
                "items": {
                  "description": "Plan notification details",
                  "type": "object",
                  "properties": {
                    "planId": {
                      "description": "Gets or sets the plan id",
                      "type": "string"
                    },
                    "planDisplayName": {
                      "description": "Gets or sets the plan display name",
                      "type": "string"
                    }
                  }
                },
                "x-ms-identifiers": [
                  "planId"
                ]
              }
            }
          },
          "x-ms-identifiers": []
        },
        "approvalRequests": {
          "type": "array",
          "items": {
            "description": "Request approvals details",
            "type": "object",
            "properties": {
              "offerId": {
                "description": "Gets offer id",
                "type": "string"
              },
              "displayName": {
                "description": "Gets offer display name",
                "type": "string"
              },
              "publisherId": {
                "description": "Gets or sets publisher id",
                "type": "string"
              },
              "messageCode": {
                "description": "Gets or sets the notification message id",
                "type": "integer",
                "format": "int64"
              },
              "icon": {
                "description": "Gets or sets the icon url",
                "type": "string"
              },
              "plans": {
                "description": "Gets or sets removed plans notifications",
                "type": "array",
                "items": {
                  "description": "Plan notification details",
                  "type": "object",
                  "properties": {
                    "planId": {
                      "description": "Gets or sets the plan id",
                      "type": "string"
                    },
                    "planDisplayName": {
                      "description": "Gets or sets the plan display name",
                      "type": "string"
                    }
                  }
                },
                "x-ms-identifiers": [
                  "planId"
                ]
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "NewNotifications": {
      "description": "New plans notification details",
      "type": "object",
      "properties": {
        "offerId": {
          "description": "Gets offer id",
          "type": "string"
        },
        "displayName": {
          "description": "Gets offer display name",
          "type": "string"
        },
        "isFuturePlansEnabled": {
          "description": "Gets a value indicating whether future plans is enabled.",
          "type": "boolean"
        },
        "messageCode": {
          "description": "Gets or sets the notification message id",
          "type": "integer",
          "format": "int64"
        },
        "icon": {
          "description": "Gets or sets the icon url",
          "type": "string"
        },
        "plans": {
          "description": "Gets or sets removed plans notifications",
          "type": "array",
          "items": {
            "description": "Plan notification details",
            "type": "object",
            "properties": {
              "planId": {
                "description": "Gets or sets the plan id",
                "type": "string"
              },
              "planDisplayName": {
                "description": "Gets or sets the plan display name",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "planId"
          ]
        }
      }
    },
    "StopSellNotifications": {
      "description": "Stop sell notification details",
      "type": "object",
      "properties": {
        "offerId": {
          "description": "Gets offer id",
          "type": "string"
        },
        "displayName": {
          "description": "Gets offer display name",
          "type": "string"
        },
        "isEntire": {
          "description": "Gets a value indicating whether entire offer is in stop sell or only few of its plans",
          "type": "boolean"
        },
        "messageCode": {
          "description": "Gets or sets the notification message id",
          "type": "integer",
          "format": "int64"
        },
        "icon": {
          "description": "Gets or sets the icon url",
          "type": "string"
        },
        "plans": {
          "description": "Gets or sets removed plans notifications",
          "type": "array",
          "items": {
            "description": "Plan notification details",
            "type": "object",
            "properties": {
              "planId": {
                "description": "Gets or sets the plan id",
                "type": "string"
              },
              "planDisplayName": {
                "description": "Gets or sets the plan display name",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "planId"
          ]
        }
      }
    },
    "PlanNotificationDetails": {
      "description": "Plan notification details",
      "type": "object",
      "properties": {
        "planId": {
          "description": "Gets or sets the plan id",
          "type": "string"
        },
        "planDisplayName": {
          "description": "Gets or sets the plan display name",
          "type": "string"
        }
      }
    },
    "RequestApprovalsDetails": {
      "description": "Request approvals details",
      "type": "object",
      "properties": {
        "offerId": {
          "description": "Gets offer id",
          "type": "string"
        },
        "displayName": {
          "description": "Gets offer display name",
          "type": "string"
        },
        "publisherId": {
          "description": "Gets or sets publisher id",
          "type": "string"
        },
        "messageCode": {
          "description": "Gets or sets the notification message id",
          "type": "integer",
          "format": "int64"
        },
        "icon": {
          "description": "Gets or sets the icon url",
          "type": "string"
        },
        "plans": {
          "description": "Gets or sets removed plans notifications",
          "type": "array",
          "items": {
            "description": "Plan notification details",
            "type": "object",
            "properties": {
              "planId": {
                "description": "Gets or sets the plan id",
                "type": "string"
              },
              "planDisplayName": {
                "description": "Gets or sets the plan display name",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "planId"
          ]
        }
      }
    },
    "AcknowledgeOfferNotificationProperties": {
      "description": "Notification update request payload",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Notification update request payload details",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "acknowledge": {
              "description": "Gets or sets a value indicating whether acknowledge action flag is enabled",
              "type": "boolean"
            },
            "dismiss": {
              "description": "Gets or sets a value indicating whether dismiss action flag is enabled",
              "type": "boolean"
            },
            "removeOffer": {
              "description": "Gets or sets a value indicating whether remove offer action flag is enabled",
              "type": "boolean"
            },
            "addPlans": {
              "description": "Gets or sets added plans",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "removePlans": {
              "description": "Gets or sets remove plans",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "AcknowledgeOfferNotificationDetails": {
      "description": "Notification update request payload details",
      "type": "object",
      "properties": {
        "acknowledge": {
          "description": "Gets or sets a value indicating whether acknowledge action flag is enabled",
          "type": "boolean"
        },
        "dismiss": {
          "description": "Gets or sets a value indicating whether dismiss action flag is enabled",
          "type": "boolean"
        },
        "removeOffer": {
          "description": "Gets or sets a value indicating whether remove offer action flag is enabled",
          "type": "boolean"
        },
        "addPlans": {
          "description": "Gets or sets added plans",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "removePlans": {
          "description": "Gets or sets remove plans",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "WithdrawProperties": {
      "description": "Withdraw properties",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Withdraw properties details",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "planId": {
              "description": "Gets or sets Plan Id ",
              "type": "string"
            },
            "publisherId": {
              "description": "The offer's publisher id",
              "type": "string"
            }
          }
        }
      }
    },
    "WithdrawDetails": {
      "description": "Withdraw properties details",
      "type": "object",
      "properties": {
        "planId": {
          "description": "Gets or sets Plan Id ",
          "type": "string"
        },
        "publisherId": {
          "description": "The offer's publisher id",
          "type": "string"
        }
      }
    },
    "BillingAccountsResponse": {
      "description": "Billing accounts response object",
      "type": "object",
      "properties": {
        "billingAccounts": {
          "description": "Billing accounts list",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TransferOffersProperties": {
      "description": "Transfer offers properties",
      "type": "object",
      "properties": {
        "properties": {
          "description": "transfer offers properties details",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "targetCollections": {
              "description": "Target collections ids",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "operation": {
              "description": "Operation to perform (For example: Copy or Move)",
              "type": "string"
            },
            "offerIdsList": {
              "description": "Offers ids list to transfer from source collection to target collection(s)",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "TransferOffersResponse": {
      "description": "The transfer items response. The response contains two lists that indicate for each collection whether the operation succeeded or failed",
      "type": "object",
      "properties": {
        "succeeded": {
          "description": "Succeeded collections",
          "type": "array",
          "items": {
            "description": "Collection name and id.",
            "type": "object",
            "properties": {
              "collectionName": {
                "description": "Collection name.",
                "type": "string"
              },
              "collectionId": {
                "description": "Collection id.",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "collectionId"
          ]
        },
        "failed": {
          "description": "Failed collections",
          "type": "array",
          "items": {
            "description": "Collection name and id.",
            "type": "object",
            "properties": {
              "collectionName": {
                "description": "Collection name.",
                "type": "string"
              },
              "collectionId": {
                "description": "Collection id.",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "collectionId"
          ]
        }
      }
    },
    "BulkCollectionsPayload": {
      "description": "Bulk collections action properties",
      "type": "object",
      "properties": {
        "properties": {
          "description": "bulk collections properties details",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "collectionIds": {
              "description": "collection ids list that the action is performed on",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "action": {
              "description": "Action to perform (For example: EnableCollections, DisableCollections)",
              "type": "string"
            }
          }
        }
      }
    },
    "BulkCollectionsDetails": {
      "description": "Bulk collection details",
      "type": "object",
      "properties": {
        "collectionIds": {
          "description": "collection ids list that the action is performed on",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "action": {
          "description": "Action to perform (For example: EnableCollections, DisableCollections)",
          "type": "string"
        }
      }
    },
    "BulkCollectionsResponse": {
      "description": "The bulk collections response. The response contains two lists that indicate for each collection whether the operation succeeded or failed",
      "type": "object",
      "properties": {
        "succeeded": {
          "description": "Succeeded collections",
          "type": "array",
          "items": {
            "description": "Collection name and id.",
            "type": "object",
            "properties": {
              "collectionName": {
                "description": "Collection name.",
                "type": "string"
              },
              "collectionId": {
                "description": "Collection id.",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "collectionId"
          ]
        },
        "failed": {
          "description": "Failed collections",
          "type": "array",
          "items": {
            "description": "Collection name and id.",
            "type": "object",
            "properties": {
              "collectionName": {
                "description": "Collection name.",
                "type": "string"
              },
              "collectionId": {
                "description": "Collection id.",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "collectionId"
          ]
        }
      }
    },
    "QueryApprovedPlansPayload": {
      "description": "Query approved plans payload",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Query approved plans details",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "offerId": {
              "description": "Offer id",
              "type": "string"
            },
            "planIds": {
              "description": "Offer plan ids",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "subscriptionIds": {
              "description": "List of subscription IDs",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "QueryApprovedPlans": {
      "description": "Query approved plans details",
      "type": "object",
      "properties": {
        "offerId": {
          "description": "Offer id",
          "type": "string"
        },
        "planIds": {
          "description": "Offer plan ids",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subscriptionIds": {
          "description": "List of subscription IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "QueryApprovedPlansResponse": {
      "description": "Query approved plans response",
      "type": "object",
      "properties": {
        "details": {
          "description": "A list indicating for each plan which subscriptions are approved. Plan Id is unique",
          "type": "array",
          "items": {
            "description": "Query approved plans response",
            "type": "object",
            "properties": {
              "planId": {
                "description": "Plan id",
                "type": "string"
              },
              "subscriptionIds": {
                "description": "Approved subscription ids list. In case all subscriptions are approved for a plan, allSubscriptions flag is true and list is empty ( else flag is set to false). In case both subscriptions list is empty and allSubscriptions flag is false, the plan is not approved for any subscription.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "allSubscriptions": {
                "description": "Indicates whether all subscriptions are approved for this plan",
                "type": "boolean"
              }
            }
          },
          "x-ms-identifiers": [
            "planId"
          ]
        }
      }
    },
    "QueryApprovedPlansResponseDetails": {
      "description": "A list indicating for each plan which subscriptions are approved. Plan Id is unique",
      "type": "array",
      "items": {
        "description": "Query approved plans response",
        "type": "object",
        "properties": {
          "planId": {
            "description": "Plan id",
            "type": "string"
          },
          "subscriptionIds": {
            "description": "Approved subscription ids list. In case all subscriptions are approved for a plan, allSubscriptions flag is true and list is empty ( else flag is set to false). In case both subscriptions list is empty and allSubscriptions flag is false, the plan is not approved for any subscription.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allSubscriptions": {
            "description": "Indicates whether all subscriptions are approved for this plan",
            "type": "boolean"
          }
        }
      },
      "x-ms-identifiers": [
        "planId"
      ]
    },
    "QueryApprovedPlansDetails": {
      "description": "Query approved plans response",
      "type": "object",
      "properties": {
        "planId": {
          "description": "Plan id",
          "type": "string"
        },
        "subscriptionIds": {
          "description": "Approved subscription ids list. In case all subscriptions are approved for a plan, allSubscriptions flag is true and list is empty ( else flag is set to false). In case both subscriptions list is empty and allSubscriptions flag is false, the plan is not approved for any subscription.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allSubscriptions": {
          "description": "Indicates whether all subscriptions are approved for this plan",
          "type": "boolean"
        }
      }
    },
    "CollectionsDetails": {
      "description": "Collection name and id.",
      "type": "object",
      "properties": {
        "collectionName": {
          "description": "Collection name.",
          "type": "string"
        },
        "collectionId": {
          "description": "Collection id.",
          "type": "string"
        }
      }
    },
    "TransferOffersDetails": {
      "description": "Transfer offers response details",
      "type": "object",
      "properties": {
        "targetCollections": {
          "description": "Target collections ids",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operation": {
          "description": "Operation to perform (For example: Copy or Move)",
          "type": "string"
        },
        "offerIdsList": {
          "description": "Offers ids list to transfer from source collection to target collection(s)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CollectionsToSubscriptionsMappingPayload": {
      "description": "The subscriptions list to get the related collections",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Subscriptions ids list",
          "type": "object",
          "properties": {
            "subscriptionIds": {
              "description": "Subscriptions ids list",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "CollectionsToSubscriptionsMappingProperties": {
      "description": "The subscriptions list to get the related collections",
      "type": "object",
      "properties": {
        "subscriptionIds": {
          "description": "Subscriptions ids list",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CollectionsToSubscriptionsMappingResponse": {
      "description": "A map of collections subscriptions details",
      "type": "object",
      "properties": {
        "details": {
          "description": "The map of collections subscriptions",
          "type": "object",
          "additionalProperties": {
            "description": "Collection name and related subscriptions list",
            "type": "object",
            "properties": {
              "collectionName": {
                "description": "Collection name",
                "type": "string"
              },
              "subscriptions": {
                "description": "Subscriptions ids list",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "CollectionsToSubscriptionsMappingResponseProperties": {
      "description": "Collections - subscriptions mapping details, map key is collectionId. In case subscriptions list is null or empty: no subscription from the list is related to that collection.",
      "type": "object",
      "additionalProperties": {
        "description": "Collection name and related subscriptions list",
        "type": "object",
        "properties": {
          "collectionName": {
            "description": "Collection name",
            "type": "string"
          },
          "subscriptions": {
            "description": "Subscriptions ids list",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "collectionsSubscriptionsMappingDetails": {
      "description": "Collection name and related subscriptions list",
      "type": "object",
      "properties": {
        "collectionName": {
          "description": "Collection name",
          "type": "string"
        },
        "subscriptions": {
          "description": "Subscriptions ids list",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StopSellOffersPlansNotificationsList": {
      "description": "List of stop sell offers and plans notifications.",
      "type": "object",
      "properties": {
        "stopSellNotifications": {
          "type": "array",
          "items": {
            "description": "List of stop sell offers and plans notifications.",
            "type": "object",
            "properties": {
              "offerId": {
                "description": "The offer id",
                "type": "string",
                "readOnly": true
              },
              "displayName": {
                "description": "The offer display name",
                "type": "string",
                "readOnly": true
              },
              "isEntire": {
                "description": "A value indicating whether entire offer is in stop sell or only few of its plans",
                "type": "boolean",
                "readOnly": true
              },
              "messageCode": {
                "description": "The notification message code",
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "icon": {
                "description": "The icon url",
                "type": "string",
                "readOnly": true
              },
              "plans": {
                "description": "The list of removed plans notifications",
                "type": "array",
                "items": {
                  "description": "Plan notification details",
                  "type": "object",
                  "properties": {
                    "planId": {
                      "description": "Gets or sets the plan id",
                      "type": "string"
                    },
                    "planDisplayName": {
                      "description": "Gets or sets the plan display name",
                      "type": "string"
                    }
                  }
                },
                "x-ms-identifiers": [
                  "planId"
                ],
                "readOnly": true
              },
              "publicContext": {
                "description": "True if the offer has public plans",
                "type": "boolean",
                "readOnly": true
              },
              "subscriptionsIds": {
                "description": "The subscriptions related to private plans",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": [
            "offerId"
          ]
        }
      }
    },
    "StopSellOffersPlansNotificationsListProperties": {
      "description": "List of stop sell offers and plans notifications.",
      "type": "object",
      "properties": {
        "offerId": {
          "description": "The offer id",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "description": "The offer display name",
          "type": "string",
          "readOnly": true
        },
        "isEntire": {
          "description": "A value indicating whether entire offer is in stop sell or only few of its plans",
          "type": "boolean",
          "readOnly": true
        },
        "messageCode": {
          "description": "The notification message code",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "icon": {
          "description": "The icon url",
          "type": "string",
          "readOnly": true
        },
        "plans": {
          "description": "The list of removed plans notifications",
          "type": "array",
          "items": {
            "description": "Plan notification details",
            "type": "object",
            "properties": {
              "planId": {
                "description": "Gets or sets the plan id",
                "type": "string"
              },
              "planDisplayName": {
                "description": "Gets or sets the plan display name",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "planId"
          ],
          "readOnly": true
        },
        "publicContext": {
          "description": "True if the offer has public plans",
          "type": "boolean",
          "readOnly": true
        },
        "subscriptionsIds": {
          "description": "The subscriptions related to private plans",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "StopSellSubscriptions": {
      "description": "Private plans subscriptions",
      "type": "object",
      "properties": {
        "subscriptions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SubscriptionsResponse": {
      "description": "Subscription list operation response.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "Subscription information.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The fully qualified ID for the subscription. For example, /subscriptions/00000000-0000-0000-0000-000000000000."
              },
              "subscriptionId": {
                "readOnly": true,
                "type": "string",
                "description": "The subscription ID."
              },
              "displayName": {
                "readOnly": true,
                "type": "string",
                "description": "The subscription display name."
              },
              "state": {
                "readOnly": true,
                "type": "string",
                "description": "The subscription state. Possible values are Enabled, Warned, PastDue, Disabled, and Deleted.",
                "enum": [
                  "Enabled",
                  "Warned",
                  "PastDue",
                  "Disabled",
                  "Deleted"
                ],
                "x-ms-enum": {
                  "name": "SubscriptionState",
                  "modelAsString": true
                }
              }
            }
          },
          "description": "An array of subscriptions.",
          "readOnly": true
        },
        "skipToken": {
          "type": "string",
          "description": "The skip token to retrieve the next page.",
          "readOnly": true
        },
        "count": {
          "description": "Number of subscriptions on the page",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        }
      }
    },
    "Subscription": {
      "description": "Subscription information.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The fully qualified ID for the subscription. For example, /subscriptions/00000000-0000-0000-0000-000000000000."
        },
        "subscriptionId": {
          "readOnly": true,
          "type": "string",
          "description": "The subscription ID."
        },
        "displayName": {
          "readOnly": true,
          "type": "string",
          "description": "The subscription display name."
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "description": "The subscription state. Possible values are Enabled, Warned, PastDue, Disabled, and Deleted.",
          "enum": [
            "Enabled",
            "Warned",
            "PastDue",
            "Disabled",
            "Deleted"
          ],
          "x-ms-enum": {
            "name": "SubscriptionState",
            "modelAsString": true
          }
        }
      }
    },
    "PrivateStoreOperation": {
      "description": "Set the Operation for the POST method. Ping or Delete",
      "type": "string",
      "enum": [
        "DeletePrivateStoreOffer",
        "DeletePrivateStoreCollection",
        "DeletePrivateStoreCollectionOffer",
        "Ping"
      ],
      "x-ms-enum": {
        "name": "Operation",
        "modelAsString": true
      }
    },
    "OperationListResult": {
      "description": "Result of the request to list Marketplace operations. It contains a list of operations and a URL link to get the next set of results.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "Microsoft.Marketplace REST API operation",
            "type": "object",
            "properties": {
              "id": {
                "description": "Operation ID",
                "type": "string"
              },
              "name": {
                "description": "Operation name: {provider}/{resource}/{operation}",
                "type": "string"
              },
              "isDataAction": {
                "description": "Indicates whether the operation is a data action",
                "type": "boolean"
              },
              "display": {
                "description": "The object that represents the operation.",
                "type": "object",
                "properties": {
                  "provider": {
                    "readOnly": true,
                    "description": "Service provider: Microsoft.Marketplace",
                    "type": "string"
                  },
                  "resource": {
                    "readOnly": true,
                    "description": "Resource on which the operation is performed",
                    "type": "string"
                  },
                  "operation": {
                    "readOnly": true,
                    "description": "Operation type",
                    "type": "string"
                  },
                  "description": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Friendly description for the operation,"
                  }
                }
              },
              "origin": {
                "description": "Origin of the operation",
                "type": "string"
              },
              "properties": {
                "description": "Properties of the operation",
                "type": "object",
                "properties": {}
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "List of Microsoft.Marketplace operations supported by the Microsoft.Marketplace resource provider."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any.",
          "readOnly": true
        }
      }
    },
    "SingleOperation": {
      "description": "Microsoft.Marketplace REST API operation",
      "type": "object",
      "properties": {
        "id": {
          "description": "Operation ID",
          "type": "string"
        },
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}",
          "type": "string"
        },
        "isDataAction": {
          "description": "Indicates whether the operation is a data action",
          "type": "boolean"
        },
        "display": {
          "description": "The object that represents the operation.",
          "type": "object",
          "properties": {
            "provider": {
              "readOnly": true,
              "description": "Service provider: Microsoft.Marketplace",
              "type": "string"
            },
            "resource": {
              "readOnly": true,
              "description": "Resource on which the operation is performed",
              "type": "string"
            },
            "operation": {
              "readOnly": true,
              "description": "Operation type",
              "type": "string"
            },
            "description": {
              "readOnly": true,
              "type": "string",
              "description": "Friendly description for the operation,"
            }
          }
        },
        "origin": {
          "description": "Origin of the operation",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the operation",
          "type": "object",
          "properties": {}
        }
      }
    },
    "OperationProperties": {
      "description": "Operation properties.",
      "type": "object",
      "properties": {}
    },
    "ErrorResponse": {
      "description": "Error response indicates Microsoft.Marketplace service is not able to process the incoming request. The reason is provided in the error message.",
      "type": "object",
      "properties": {
        "error": {
          "description": "The details of the error.",
          "type": "object",
          "properties": {
            "code": {
              "description": "Error code.",
              "type": "string",
              "readOnly": true
            },
            "message": {
              "description": "Error message indicating why the operation failed.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "Resource": {
      "description": "An Azure resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "readOnly": true,
          "description": "Metadata pertaining to creation and last modification of the resource",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "description": "The type of identity that created the resource",
              "type": "string",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "IdentityType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)"
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "description": "The type of identity that last modified the resource",
              "type": "string",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "IdentityType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      },
      "x-ms-azure-resource": true
    },
    "SystemData": {
      "description": "Read only system data",
      "type": "object",
      "readOnly": true,
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "description": "The type of identity that created the resource",
          "type": "string",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "IdentityType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)"
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "description": "The type of identity that last modified the resource",
          "type": "string",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "IdentityType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      }
    },
    "IdentityType": {
      "description": "The type of identity that creates/modifies resources",
      "type": "string",
      "enum": [
        "User",
        "Application",
        "ManagedIdentity",
        "Key"
      ],
      "x-ms-enum": {
        "name": "IdentityType",
        "modelAsString": true
      }
    }
  },
  "parameters": {
    "PrivateStoreIdParameter": {
      "name": "privateStoreId",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The store ID - must use the tenant ID"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to use for the request."
    },
    "CollectionIdParameter": {
      "name": "collectionId",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The collection ID"
    },
    "OfferIdPathParameter": {
      "in": "path",
      "name": "offerId",
      "type": "string",
      "x-ms-parameter-location": "method",
      "required": true,
      "description": "The offer ID to update or delete"
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "type": "string",
      "x-ms-parameter-location": "method",
      "required": true,
      "description": "Subscription id of the private offers"
    },
    "UseCacheParameter": {
      "name": "use-cache",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Determines if to use cache or DB for serving this request"
    },
    "AdminRequestApprovalIdPathParameter": {
      "in": "path",
      "name": "adminRequestApprovalId",
      "type": "string",
      "x-ms-parameter-location": "method",
      "required": true,
      "description": "The admin request approval ID to get create or update"
    },
    "RequestApprovalIdPathParameter": {
      "in": "path",
      "name": "requestApprovalId",
      "type": "string",
      "x-ms-parameter-location": "method",
      "required": true,
      "description": "The request approval ID to get create or update"
    },
    "PublisherIdParameter": {
      "name": "publisherId",
      "in": "query",
      "required": true,
      "x-ms-parameter-location": "method",
      "type": "string",
      "description": "The publisher id of this offer."
    },
    "SkipTokenParameter": {
      "name": "next-page-token",
      "in": "header",
      "type": "string",
      "description": "The skip token to get the next page.",
      "x-ms-parameter-location": "method"
    }
  }
}